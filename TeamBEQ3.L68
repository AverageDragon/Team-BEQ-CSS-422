00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/4/2021 11:44:47 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated 
00000000                            23  * A3 used for temporary storage when needed                                                                                                                                                                                                            
00000000                            24                                                                                                                                                                                                                                                         
00000000                            25                                            
00000000                            26  * NOT USED:   A0, A4 - A7 
00000000                            27  *-----------------------------------------------------------
00000000                            28  
00000000                            29  ; ========================================================================
00000000                            30  ; Variables
00000000                            31  ; ========================================================================
00000000                            32  
00000000                            33  ; TEMP
00000000= 45 6E 74 65 72 20 ...     34  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     35  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            36  
00000060                            37  ; ------------------------------------------------------------
00000060                            38  ; "convertAtoH" Helper
00000060                            39  ; Jonathan
00000060                            40  ;
00000060                            41  ; 1st argument is a data register containing an ASCII character
00000060                            42  ;
00000060                            43  ; Converts the argument from an ASCII character to hex
00000060                            44  ; ------------------------------------------------------------
00000060                            45  convertAtoH:    MACRO
00000060                            46          CMPI.B  #$39, \1
00000060                            47          BGT     alpha\@
00000060                            48          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            49          BRA     done\@
00000060                            50  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            51  done\@: NOP
00000060                            52          ENDM
00000060                            53  ; ------------------------------------------------------------
00000060                            54  ; "printMoveMBits" Helper
00000060                            55  ; Dylan
00000060                            56  ;
00000060                            57  ; First version which operates through a loop going through each bit
00000060                            58  ; ------------------------------------------------------------
00000060                            59  printMoveMBits:    MACRO
00000060                            60      * load memory into register
00000060                            61      * D1 is loop counter
00000060                            62      * D2 is shift register
00000060                            63      * D3 is AND register
00000060                            64      CLR.L   D1
00000060                            65      CLR.L   D2
00000060                            66      CLR.L   D3
00000060                            67  
00000060                            68      MOVE.W  \1, D2
00000060                            69      
00000060                            70      * check the last bit
00000060                            71  rptShift\@:
00000060                            72      * copy shifted bits into AND register
00000060                            73      MOVE.W  D2, D3
00000060                            74      * and the bits with 1 to get the last bit
00000060                            75      ANDI.W  #1, D3
00000060                            76      * compare with 1
00000060                            77      CMPI.W  #1, D3
00000060                            78      BEQ     bitOne\@
00000060                            79  
00000060                            80      * left shift
00000060                            81      LSL.W   #1, D2
00000060                            82      ADD.W   #1, D1
00000060                            83  
00000060                            84      * check if done and repeat
00000060                            85      CMPI.W  #16, D1
00000060                            86      BLT     rptShift\@
00000060                            87      BGE        done\@
00000060                            88  
00000060                            89      * bit was one, print the register
00000060                            90  bitOne\@:
00000060                            91      CMPI.W  #8, D1
00000060                            92      BLT     printData\@
00000060                            93      BSR     printAddr\@
00000060                            94  
00000060                            95      RTS
00000060                            96  
00000060                            97      * print the register with number
00000060                            98  printData\@:
00000060                            99      * unfinished
00000060                           100      prepareAdrMode  #$1, (A2)
00000060                           101      decodeAdrMode   (A2), D1
00000060                           102      printComma
00000060                           103      RTS
00000060                           104  
00000060                           105      * print register (subtract 8 from the counter)
00000060                           106  printAddr\@:
00000060                           107  
00000060                           108      RTS
00000060                           109  
00000060                           110  done\@: NOP
00000060                           111          ENDM
00000060                           112  
00000060                           113  ; ------------------------------------------------------------
00000060                           114  ; "readInput" Helper
00000060                           115  ; Jonathan
00000060                           116  ;
00000060                           117  ; 1st argument is data register where input is stored
00000060                           118  ;
00000060                           119  ; Reads input and converts ascii to hex.
00000060                           120  ; ------------------------------------------------------------
00000060                           121  readInput:    MACRO
00000060                           122          ; Read user's input
00000060                           123          MOVE.B  #5, D0      ; Read first digit
00000060                           124          TRAP    #15
00000060                           125          convertAtoH D1      ; Convert to hex
00000060                           126          LSL.W   #8, D1      ; Shift left 8 bits
00000060                           127          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                           128          MOVE.W  D1, D2      ; Store in D2
00000060                           129          
00000060                           130          MOVE.W  #0, D1      ; Clear D1
00000060                           131          TRAP    #15         ; Read second digit
00000060                           132          convertAtoH D1
00000060                           133          LSL.W   #8, D1      
00000060                           134          ADD.W   D1, D2
00000060                           135          
00000060                           136          MOVE.W  #0, D1      ; Clear D1
00000060                           137          TRAP    #15         ; Read third digit
00000060                           138          convertAtoH D1
00000060                           139          LSL.W   #4, D1      
00000060                           140          ADD.W   D1, D2
00000060                           141          
00000060                           142          MOVE.W  #0, D1      ; Clear D1
00000060                           143          TRAP    #15         ; Read final digit
00000060                           144          convertAtoH D1     
00000060                           145          ADD.W   D1, D2
00000060                           146          MOVE.W  D2, \1      ; Move to output
00000060                           147          ENDM
00000060                           148  
00000060                           149  ; ENDTEMP
00000060                           150  
00000060                           151  ; ------------------------------------------------------------
00000060                           152  ; "Output" Variables
00000060                           153  ; Gary
00000060                           154  ; 
00000060                           155  ; Set of strings to be used with I/O of given instruction
00000060                           156  ; ------------------------------------------------------------
00000060= 4E 4F 50 00              157  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00           158  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        159  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              160  oADD:   DC.B    'ADD',0
00000073= 41 44 44 49 00           161  oADDI:  DC.B    'ADDI',0
00000078= 53 55 42 00              162  oSUB:   DC.B    'SUB',0
0000007C= 4D 55 4C 53 2E 57 ...    163  oMULS:  DC.B    'MULS.W ',0
00000084= 44 49 56 55 2E 57 ...    164  oDIVU:  DC.B    'DIVU.W ',0
0000008C= 4C 45 41 00              165  oLEA:   DC.B    'LEA',0
00000090= 41 4E 44 00              166  oAND:   DC.B    'AND',0
00000094= 4E 4F 54 00              167  oNOT:   DC.B    'NOT',0
00000098= 4C 53 4C 00              168  oLSL:   DC.B    'LSL',0
0000009C= 4C 53 52 00              169  oLSR:   DC.B    'LSR',0
000000A0= 41 53 4C 00              170  oASL:   DC.B    'ASL',0
000000A4= 41 53 52 00              171  oASR:   DC.B    'ASR',0
000000A8= 42 45 51 00              172  oBEQ:   DC.B    'BEQ',0
000000AC= 42 47 45 00              173  oBGE:   DC.B    'BGE',0
000000B0= 42 4C 54 00              174  oBLT:   DC.B    'BLT',0
000000B4= 4A 53 52 00              175  oJSR:   DC.B    'JSR',0
000000B8= 52 54 53 00              176  oRTS:   DC.B    'RTS',0
000000BC= 42 52 41 00              177  oBRA:   DC.B    'BRA',0
000000C0= 2E 42 20 00              178  oBSize  DC.B    '.B ',0
000000C4= 2E 57 20 00              179  oWSize  DC.B    '.W ',0
000000C8= 2E 4C 20 00              180  oLSize  DC.B    '.L ',0
000000CC= 44 00                    181  oDn     DC.B    'D',0
000000CE= 41 00                    182  oAn     DC.B    'A',0
000000D0= 28 00                    183  oLB     DC.B    '(',0
000000D2= 29 00                    184  oRB     DC.B    ')',0
000000D4= 2C 20 00                 185  oComma  DC.B    ', ',0
000000D7= 2D 00                    186  oPreDec DC.B    '-',0
000000D9= 2B 00                    187  oPstInc DC.B    '+',0
000000DB= 23 00                    188  oHash   DC.B    '#',0
000000DD= 20 00                    189  oBlank  DC.B    ' ',0
000000DF= 20 20 20 00              190  oTab    DC.B    '   ',0
000000E3= 5C 00                    191  oSLash  DC.B    '\',0
000000E5= 57 65 6C 63 6F 6D ...    192  oWelcome DC.B   'Welcome to our 68k DASM!',0
000000FE                           193  ; ------------------------------------------------------------
000000FE                           194  ; "Pattern" Variables
000000FE                           195  ; Jonathan
000000FE                           196  ; 
000000FE                           197  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000FE                           198  ; and the opcode isn't actually data
000000FE                           199  ; ------------------------------------------------------------
000000FE= 30 31 30 30 31 31 ...    200  pNOP:   DC.B    '0100111001110001',0
0000010F= 30 30 2E 2E 2E 2E ...    201  pMOVE:  DC.B    '00..............',0
00000120= 30 31 30 30 31 2E ...    202  pMOVEM: DC.B    '01001.001.......',0
00000131= 31 31 30 31 2E 2E ...    203  pADD:   DC.B    '1101............',0
00000142= 31 30 30 31 2E 2E ...    204  pSUB:   DC.B    '1001............',0
00000153= 31 31 30 30 2E 2E ...    205  pMULS:  DC.B    '1100...111......',0
00000164= 31 30 30 30 2E 2E ...    206  pDIVU:  DC.B    '1000...011......',0
00000175= 30 31 30 30 2E 2E ...    207  pLEA:   DC.B    '0100...111......',0
00000186= 31 31 30 30 2E 2E ...    208  pAND:   DC.B    '1100............',0
00000197= 30 31 30 30 30 31 ...    209  pNOT:   DC.B    '01000110........',0
000001A8= 31 31 31 30 2E 2E ...    210  pLSx_M: DC.B    '1110......001...',0
000001B9= 31 31 31 30 2E 2E ...    211  pLSx_R: DC.B    '1110......101...',0
000001CA= 31 31 31 30 2E 2E ...    212  pLSx_S: DC.B    '1110......100...',0
000001DB= 31 31 31 30 2E 2E ...    213  pASx_M: DC.B    '1110......000...',0
000001EC= 31 31 31 30 2E 2E ...    214  pASx_R: DC.B    '1110......100...',0
000001FD= 31 31 31 30 2E 2E ...    215  pASx_S: DC.B    '1110......100...',0
0000020E= 30 31 31 30 30 31 ...    216  pBEQ:   DC.B    '01100111........',0
0000021F= 30 31 31 30 31 31 ...    217  pBGE:   DC.B    '01101100........',0
00000230= 30 31 31 30 31 31 ...    218  pBLT:   DC.B    '01101101........',0
00000241= 30 31 30 30 31 31 ...    219  pJSR:   DC.B    '0100111010......',0
00000252= 30 31 30 30 31 31 ...    220  pRTS:   DC.B    '0100111001110101',0
00000263= 30 31 31 30 30 30 ...    221  pBRA:   DC.B    '01100000........',0
00000274                           222  
00000274                           223  
00000274                           224  ; ========================================================================
00000274                           225  ; Macros
00000274                           226  ; ========================================================================
00000274                           227  ; ------------------------------------------------------------
00000274                           228  ; "convertHtoA" Helper
00000274                           229  ; Jonathan
00000274                           230  ;
00000274                           231  ; 1st argument is a data register containing a single digit of a hex number.
00000274                           232  ;
00000274                           233  ; Converts the argument from a hex digit to an ascii character
00000274                           234  ; ------------------------------------------------------------
00000274                           235  convertHtoA:    MACRO
00000274                           236          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
00000274                           237          BGT     alpha\@
00000274                           238          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
00000274                           239          BRA     done\@
00000274                           240  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
00000274                           241  done\@: NOP
00000274                           242          ENDM
00000274                           243  ; ------------------------------------------------------------
00000274                           244  ; adrOut
00000274                           245  ; Gary
00000274                           246  ;
00000274                           247  ; Outputs the adress currently in A2 in hex form.
00000274                           248  ; ------------------------------------------------------------
00000274                           249  adrOut:         MACRO
00000274                           250          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000274                           251          MOVE.W  (A2), D1    ; Move A2 into D1
00000274                           252          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           253          LSR.W   #4, D1      
00000274                           254          ConvertHtoA D1      ; Convert D1 to a character
00000274                           255          TRAP    #15         ; Execute output
00000274                           256          
00000274                           257          MOVE.W  (A2), D1    ; Move A2 into D1
00000274                           258          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000274                           259          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           260          LSR.W   #4, D1      
00000274                           261          ConvertHtoA D1      ; Convert D1 to a character
00000274                           262          TRAP    #15         ; Execute output
00000274                           263          
00000274                           264          MOVE.W  (A2), D1    ; Move A2 into D1
00000274                           265          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           266          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           267          LSR.W   #4, D1      
00000274                           268          ConvertHtoA D1      ; Convert D1 to a character
00000274                           269          TRAP    #15         ; Execute output
00000274                           270          
00000274                           271          MOVE.W  (A2), D1    ; Move A2 into D1
00000274                           272          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           273          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000274                           274          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           275          LSR.W   #4, D1      
00000274                           276          ConvertHtoA D1      ; Convert D1 to a character
00000274                           277          TRAP    #15         ; Execute output   
00000274                           278          ENDM     
00000274                           279  ; ------------------------------------------------------------
00000274                           280  ; adrOutInput
00000274                           281  ; Gary
00000274                           282  ;
00000274                           283  ; Outputs the given argument register currently in A2 in hex form.
00000274                           284  ; ------------------------------------------------------------      
00000274                           285          
00000274                           286  adrOutInput:         MACRO
00000274                           287          MOVE.L   \1, D7     
00000274                           288          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000274                           289          MOVE.W  D7, D1    
00000274                           290          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           291          LSR.W   #4, D1      
00000274                           292          ConvertHtoA D1      ; Convert D1 to a character
00000274                           293          TRAP    #15         ; Execute output
00000274                           294          
00000274                           295          MOVE.W  D7, D1    
00000274                           296          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000274                           297          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           298          LSR.W   #4, D1      
00000274                           299          ConvertHtoA D1      ; Convert D1 to a character
00000274                           300          TRAP    #15         ; Execute output
00000274                           301          
00000274                           302          MOVE.W  D7, D1    
00000274                           303          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           304          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           305          LSR.W   #4, D1      
00000274                           306          ConvertHtoA D1      ; Convert D1 to a character
00000274                           307          TRAP    #15         ; Execute output
00000274                           308          
00000274                           309          MOVE.W  D7, D1    
00000274                           310          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           311          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000274                           312          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           313          LSR.W   #4, D1      
00000274                           314          ConvertHtoA D1      ; Convert D1 to a character
00000274                           315          TRAP    #15         ; Execute output       
00000274                           316          ENDM 
00000274                           317  ; ------------------------------------------------------------
00000274                           318  ; "verifyOpcode" Helper
00000274                           319  ; Jonathan
00000274                           320  ;
00000274                           321  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
00000274                           322  ; 2nd argument is a data register to check against the template
00000274                           323  ;
00000274                           324  ; Verifies that the opcode passed through \2 matches the pattern of \1
00000274                           325  ; If they do not match, branches to outputData
00000274                           326  ; ------------------------------------------------------------
00000274                           327  verifyOpcode:  MACRO
00000274                           328          LEA     \1, A1      ; Input pattern string
00000274                           329          MOVE.W  \2, D3      ; input value
00000274                           330          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
00000274                           331          
00000274                           332  loop\@: 
00000274                           333          CMP.B   #$30, (A1)  ; Check if the template wants a 0
00000274                           334          BEQ     checkFor0\@
00000274                           335          CMP.B   #$31, (A1)  ; Check if the template wants a 1
00000274                           336          BEQ     checkFor1\@
00000274                           337          BRA     next\@      ; Template has a wildcard, go to next iteration
00000274                           338          
00000274                           339  checkFor0\@: 
00000274                           340          BTST    D1, D3      ; Check if contains 0
00000274                           341          BNE     outputData  ; Missing a 0 -> Not a valid opcode
00000274                           342          BRA     next\@
00000274                           343  
00000274                           344  checkFor1\@:
00000274                           345          BTST    D1, D3      ; Check if contains 1
00000274                           346          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
00000274                           347  
00000274                           348  next\@: 
00000274                           349          CMP.B   #0, D1      ; Compare bit counter to 0
00000274                           350          BEQ     complete\@  ; Branch to complete if bit counter reached 0
00000274                           351          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000274                           352          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
00000274                           353          BRA     loop\@      ; Begin loop again
00000274                           354  
00000274                           355  complete\@:  ; Opcode has been verified
00000274                           356          ENDM
00000274                           357          
00000274                           358  ; ------------------------------------------------------------
00000274                           359  ; "printSize" Helper
00000274                           360  ; Gary
00000274                           361  ;
00000274                           362  ; 1st argument is the data register with opcode whose size is being decoded.
00000274                           363  ;
00000274                           364  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
00000274                           365  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
00000274                           366  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
00000274                           367  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
00000274                           368  ; ------------------------------------------------------------
00000274                           369  printSize:  MACRO
00000274                           370          MOVE.W  \1, D3      ; input value
00000274                           371          CLR     D7      
00000274                           372  checkForB\@: 
00000274                           373          BTST    #13, D3      ; Check if contains 0
00000274                           374          BNE     checkForW\@  ; If not go to word size
00000274                           375          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
00000274                           376          MOVE.B  #14,D0          
00000274                           377          TRAP    #15
00000274                           378          BRA     complete\@      
00000274                           379  checkForW\@: 
00000274                           380          BTST    #12, D3      ; Check if contains 1
00000274                           381          BEQ     checkForL\@  ; If not, size cannot be word
00000274                           382          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
00000274                           383          MOVE.B  #14,D0          
00000274                           384          TRAP    #15
00000274                           385          BRA     complete\@  
00000274                           386  checkForL\@:
00000274                           387          MOVE.B  #$1, D7
00000274                           388          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
00000274                           389          MOVE.B  #14,D0          
00000274                           390          TRAP    #15
00000274                           391  complete\@:  ; Size has been printed
00000274                           392          ENDM
00000274                           393          
00000274                           394  ; ------------------------------------------------------------
00000274                           395  ; "printSizeLow" Helper
00000274                           396  ; Gary
00000274                           397  ;
00000274                           398  ; 1st argument is the data register with opcode whose size is being decoded
00000274                           399  ;
00000274                           400  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000274                           401  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000274                           402  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000274                           403  ; Once matched, size is printed and appended to already printed opcode, macro exits.
00000274                           404  ; ------------------------------------------------------------
00000274                           405  printSizeLow:  MACRO
00000274                           406          MOVE.W  \1, D3      ; input value   
00000274                           407          CLR     D7   
00000274                           408  checkForB\@: 
00000274                           409          BTST    #6,  D3      ; Check if contains 0
00000274                           410          BNE     checkForW\@  ; If not go to word size
00000274                           411          BTST    #7, D3      ; Check if contains 0
00000274                           412          BNE     checkForL\@ ; If not go to longword size
00000274                           413          LEA     oBSize, A1     
00000274                           414          MOVE.B  #14,D0       ; Print and end macro  
00000274                           415          TRAP    #15
00000274                           416          BRA     complete\@      
00000274                           417  checkForW\@: 
00000274                           418          LEA     oWSize, A1     
00000274                           419          MOVE.B  #14,D0       ; Print and end macro       
00000274                           420          TRAP    #15
00000274                           421          BRA     complete\@  
00000274                           422  checkForL\@:
00000274                           423          MOVE.B  #$1, D7
00000274                           424          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
00000274                           425          MOVE.B  #14,D0       ; Print and end macro  
00000274                           426          TRAP    #15
00000274                           427  complete\@:  ; Size has been printed
00000274                           428          ENDM
00000274                           429  ; ------------------------------------------------------------
00000274                           430  ; "decodeSizeLow" Helper
00000274                           431  ; Gary
00000274                           432  ;
00000274                           433  ; 1st argument is the data register with opcode whose size is being decoded
00000274                           434  ;
00000274                           435  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000274                           436  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000274                           437  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000274                           438  ; Different from printSize because it does not print. Instead it preapres
00000274                           439  ; D6 to be used for size validation in decode methods.
00000274                           440  ; ------------------------------------------------------------
00000274                           441  decodeSizeLow:  MACRO
00000274                           442          MOVE.W  \1, D3      ; input value   
00000274                           443          CLR     D6   
00000274                           444  checkForBorW\@: 
00000274                           445          BTST    #7, D3      ; Check if contains 0
00000274                           446          BNE     checkForL\@ ; If not go to longword size         
00000274                           447          BRA     complete\@  
00000274                           448  checkForL\@:
00000274                           449          MOVE.B  #$1, D6
00000274                           450  complete\@:  ; Size has been checeked
00000274                           451          ENDM 
00000274                           452   ; ------------------------------------------------------------
00000274                           453  ; "decodeDisplacement" Helper
00000274                           454  ; Gary
00000274                           455  ; 
00000274                           456  ; Decodes branching displacement by checking last byte then
00000274                           457  ; scanning the appropriate amount of subsequent words.
00000274                           458  ; ------------------------------------------------------------
00000274                           459  decodeDisplacement:  MACRO
00000274                           460          MOVE.W \1, D3           
00000274                           461          CLR     D1
00000274                           462          MOVE.W  A2, D7
00000274                           463          CMP.B   #$0, D3
00000274                           464          BEQ     Sbit\@
00000274                           465          CMP.B   #$FF, D3
00000274                           466          BEQ     Tbit\@
00000274                           467  Ebit\@:   
00000274                           468          LSL     #08, D3
00000274                           469          LSR     #08, D3
00000274                           470          EXT.L   D3
00000274                           471          ADD.L   D3, D7
00000274                           472          ADD.L   #2, D7
00000274                           473          adrOutInput D7     
00000274                           474          BRA     decodeDisplacement\@
00000274                           475  Sbit\@:  
00000274                           476          MOVE.W  (A2)+, D3  ; Increment A2 (D4 isn't relevant)
00000274                           477          EXT.L    D3
00000274                           478          ADD.L   D3, D7
00000274                           479          ADD.L   #2, D7
00000274                           480          adrOutInput D7
00000274                           481          BRA     decodeDisplacement\@
00000274                           482  Tbit\@:  
00000274                           483          MOVE.W  (A2)+, D3  ; Increment A2 (D4 isn't relevant)
00000274                           484          EXT.L   D3
00000274                           485          SWAP    D3
00000274                           486          MOVE.W  (A2)+, D3   ; Increment A2 (D4 isn't relevant)
00000274                           487          ADD.L   D3, D7
00000274                           488          ADD.L   #2, D7
00000274                           489          adrOutInput D7
00000274                           490  decodeDisplacement\@:
00000274                           491          ENDM        
00000274                           492                 
00000274                           493  ; ------------------------------------------------------------
00000274                           494  ; "printOpMode" Helper
00000274                           495  ; Gary
00000274                           496  ;
00000274                           497  ; 1st argument holds opcode whose opmode is being decoded
00000274                           498  ;
00000274                           499  ; With the opcode in D3, D1 is designated as the bit tracker. Split
00000274                           500  ; into two sorting mechanisms: first, the macro determines whether
00000274                           501  ; the register is a source or a destination. Then, the macro determines
00000274                           502  ; the size and appends it to printed opcode in a similar manner to printSize.
00000274                           503  ; ------------------------------------------------------------
00000274                           504  printOpMode:  MACRO
00000274                           505          MOVE.W  \1, D3      
00000274                           506          MOVE.B  #8, D1    
00000274                           507          CLR     D6
00000274                           508          CLR     D7
00000274                           509  checkForDestDn\@: 
00000274                           510          BTST    D1, D3      
00000274                           511          BNE     checkForSrcDn\@
00000274                           512          JSR     next\@
00000274                           513          MOVE.B  #$1, D6
00000274                           514          BTST    D1, D3      
00000274                           515          BEQ     DestDnW\@
00000274                           516  DestDnL\@:        
00000274                           517          LEA     oLSize, A1     
00000274                           518          MOVE.B  #14,D0          
00000274                           519          TRAP    #15
00000274                           520          MOVE.B  #$1, D7
00000274                           521          BRA     complete\@ 
00000274                           522  DestDnW\@: 
00000274                           523          JSR     next\@
00000274                           524          BTST    D1, D3      
00000274                           525          BEQ     DestDnB\@
00000274                           526          LEA     oWSize, A1     
00000274                           527          MOVE.B  #14,D0          
00000274                           528          TRAP    #15
00000274                           529          BRA     complete\@ 
00000274                           530  DestDnB\@: 
00000274                           531          LEA     oBSize, A1     
00000274                           532          MOVE.B  #14,D0          
00000274                           533          TRAP    #15
00000274                           534          BRA     complete\@ 
00000274                           535  checkForSrcDn\@: 
00000274                           536          JSR     next\@
00000274                           537          BTST    D1, D3      
00000274                           538          BEQ     SrcDnW\@
00000274                           539  SrcDnL\@:        
00000274                           540          LEA     oLSize, A1     
00000274                           541          MOVE.B  #14,D0          
00000274                           542          TRAP    #15
00000274                           543          MOVE.B  #$1, D7
00000274                           544          printDnDest D3
00000274                           545          BRA     complete\@ 
00000274                           546  SrcDnW\@:
00000274                           547          JSR     next\@
00000274                           548          BTST    D1, D3     
00000274                           549          BEQ     SrcDnB\@
00000274                           550          LEA     oWSize, A1     
00000274                           551          MOVE.B  #14,D0          
00000274                           552          TRAP    #15
00000274                           553          printDnDest D3
00000274                           554          BRA     complete\@ 
00000274                           555  SrcDnB\@: 
00000274                           556          LEA     oBSize, A1     
00000274                           557          MOVE.B  #14,D0          
00000274                           558          TRAP    #15
00000274                           559          printDnDest D3
00000274                           560          BRA     complete\@ 
00000274                           561  
00000274                           562  next\@:
00000274                           563          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000274                           564          RTS                
00000274                           565  
00000274                           566  complete\@:  ; Opcode has been verified
00000274                           567          ENDM
00000274                           568  ; ------------------------------------------------------------
00000274                           569  ; "prepareAdrMode" Helper
00000274                           570  ; Gary
00000274                           571  ; 
00000274                           572  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
00000274                           573  ; ------------------------------------------------------------
00000274                           574  prepareAdrMode: MACRO
00000274                           575          MOVE.W  \1, D6      ; input value
00000274                           576          MOVE.W  \2, D1
00000274                           577          CMP.B   #$01, D6
00000274                           578          BEQ     AdrSource\@    
00000274                           579  AdrDest\@:
00000274                           580          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
00000274                           581          LSR     #$08, D1
00000274                           582          LSR     #$05, D1
00000274                           583          BRA     complete\@ 
00000274                           584  AdrSource\@:                
00000274                           585          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
00000274                           586          LSL     #$02, D1
00000274                           587          LSR     #$08, D1
00000274                           588          LSR     #$05, D1
00000274                           589  complete\@:  ; Opcode has been verified
00000274                           590          ENDM        
00000274                           591          
00000274                           592  ; ------------------------------------------------------------
00000274                           593  ; "decodeAdrMode" Helper
00000274                           594  ; Gary
00000274                           595  ; 
00000274                           596  ; Executes after prepare macro on D1 which contains only adressing mode
00000274                           597  ; bits. It sorts by comparing D1 register to value to unique added up
00000274                           598  ; bits which represent adresssing mode form.
00000274                           599  ; ------------------------------------------------------------
00000274                           600  decodeAdrMode:  MACRO
00000274                           601          MOVE.W  \1, D3      ; holds full opcode
00000274                           602          MOVE.W  \2, D1      ; holds just opmode
00000274                           603  
00000274                           604          CMP.B   #$01, D1
00000274                           605          BEQ     AdrRegDirect\@    
00000274                           606          CMP.B   #$02, D1
00000274                           607          BEQ     AdrRegInDirect\@  
00000274                           608          CMP.B   #$03, D1
00000274                           609          BEQ     AdrRegPostInc\@  
00000274                           610          CMP.B   #$04, D1
00000274                           611          BEQ     AdrRegPreDec\@
00000274                           612          CMP.B   #$07, D1
00000274                           613          BEQ     AdrAbsolute\@    
00000274                           614          
00000274                           615  dataRegDirect\@: 
00000274                           616          CMP.B   #$01, D6
00000274                           617          BEQ     dataRegDirectSrc\@   
00000274                           618  dataRegDirectDest\@: 
00000274                           619          printDnDest D3 
00000274                           620          BRA     complete\@ 
00000274                           621  dataRegDirectSrc\@: 
00000274                           622          printDnSrc D3 
00000274                           623          BRA     complete\@   
00000274                           624          
00000274                           625  AdrRegDirect\@: 
00000274                           626          CMP.B   #$01, D6
00000274                           627          BEQ     AdrRegDirectSrc\@   
00000274                           628  AdrRegDirectDest\@:
00000274                           629          printAnDest D3
00000274                           630          BRA     complete\@   
00000274                           631  AdrRegDirectSrc\@:
00000274                           632          printAnSrc D3
00000274                           633          BRA     complete\@   
00000274                           634         
00000274                           635  AdrRegInDirect\@:   
00000274                           636          CMP.B   #$01, D6
00000274                           637          BEQ     AdrRegInDirectSrc\@   
00000274                           638  AdrRegInDirectDest\@:
00000274                           639          printLB
00000274                           640          printAnDest D3  
00000274                           641          printRB
00000274                           642          BRA     complete\@     
00000274                           643  AdrRegInDirectSrc\@:   
00000274                           644          printLB
00000274                           645          printAnSrc D3  
00000274                           646          printRB
00000274                           647          BRA     complete\@   
00000274                           648          
00000274                           649  AdrRegPostInc\@:   
00000274                           650          CMP.B   #$01, D6
00000274                           651          BEQ     AdrRegPostIncSrc\@   
00000274                           652  AdrRegPostIncDest\@: 
00000274                           653          printLB
00000274                           654          printAnDest D3  
00000274                           655          printRB
00000274                           656          printPI
00000274                           657          BRA     complete\@  
00000274                           658  AdrRegPostIncSrc\@:           
00000274                           659          printLB
00000274                           660          printAnSrc D3  
00000274                           661          printRB
00000274                           662          printPI
00000274                           663          BRA     complete\@  
00000274                           664  AdrRegPreDec\@: 
00000274                           665          CMP.B   #$01, D6
00000274                           666          BEQ     AdrRegPreDecSrc\@   
00000274                           667  AdrRegPreDecDest\@:
00000274                           668          printPD  
00000274                           669          printLB
00000274                           670          printAnDest D3  
00000274                           671          printRB
00000274                           672          BRA     complete\@   
00000274                           673  AdrRegPreDecSrc\@: 
00000274                           674          printPD  
00000274                           675          printLB
00000274                           676          printAnSrc D3  
00000274                           677          printRB
00000274                           678          BRA     complete\@
00000274                           679         
00000274                           680  AdrAbsolute\@:
00000274                           681          CMP.B   #$01, D6
00000274                           682          BNE     AdrAbsoluteDst\@ 
00000274                           683          
00000274                           684          MOVE.W  D3, D5
00000274                           685          BTST    #2, D3
00000274                           686          BNE     AdrImmediate\@
00000274                           687          BTST    #0, D3
00000274                           688          BNE     AdrAbsoluteL\@
00000274                           689          BRA     AdrAbsoluteW\@
00000274                           690  AdrAbsoluteDst\@:
00000274                           691          MOVE.W  D3, D5
00000274                           692          BTST    #$B, D3
00000274                           693          BNE     AdrImmediate\@
00000274                           694          BTST    #$09, D3
00000274                           695          BNE     AdrAbsoluteL\@
00000274                           696          BRA     AdrAbsoluteW\@
00000274                           697  AdrImmediate\@:
00000274                           698          CMP.B   #1, D7
00000274                           699          BEQ     AdrImmediateL\@
00000274                           700  AdrImmediateW\@:
00000274                           701          MOVE.W  (A2)+, D3
00000274                           702          printHash
00000274                           703          printSign
00000274                           704          adrOut
00000274                           705          MOVE.W  D5, D3
00000274                           706          BRA     complete\@
00000274                           707  AdrImmediateL\@:
00000274                           708          MOVE.W  (A2)+, D3
00000274                           709          printHash
00000274                           710          printSign
00000274                           711          adrOut 
00000274                           712          MOVE.W  (A2)+, D3
00000274                           713          adrOut
00000274                           714          MOVE.W  D5, D3
00000274                           715          BRA     complete\@ 
00000274                           716  AdrAbsoluteW\@:     
00000274                           717          MOVE.W  (A2)+, D3
00000274                           718          printSign
00000274                           719          adrOut
00000274                           720          MOVE.W  D5, D3
00000274                           721          BRA     complete\@  
00000274                           722  AdrAbsoluteL\@:  
00000274                           723          MOVE.W  (A2)+, D3
00000274                           724          printSign
00000274                           725          adrOut 
00000274                           726          MOVE.W  (A2)+, D3
00000274                           727          adrOut
00000274                           728          MOVE.W  D5, D3
00000274                           729  
00000274                           730  complete\@:  ; Opcode has been verified
00000274                           731          ENDM
00000274                           732  ; ------------------------------------------------------------
00000274                           733  ; "printCount" Helper
00000274                           734  ; Gary
00000274                           735  ; 
00000274                           736  ; Prints bits 9 to 11 with a hash in front.
00000274                           737  ; ------------------------------------------------------------
00000274                           738  printCount:     MACRO
00000274                           739          MOVE.W  \1, D1      ; bits 9 to 11
00000274                           740          LSL     #$04, D1
00000274                           741          LSR     #$08, D1
00000274                           742          LSR     #$05, D1
00000274                           743          LEA     oHash, A1     
00000274                           744          MOVE.B  #14,D0          
00000274                           745          TRAP    #15
00000274                           746          MOVE.B  #3,D0          
00000274                           747          TRAP    #15
00000274                           748          ENDM
00000274                           749  ; ------------------------------------------------------------
00000274                           750  ; "printDnDest" Helper
00000274                           751  ; Gary
00000274                           752  ; 
00000274                           753  ; Prints bits 9 to 11 which represent data register destination.
00000274                           754  ; ------------------------------------------------------------
00000274                           755  printDnDest:    MACRO 
00000274                           756          MOVE.W  \1, D1      ; bits 9 to 11
00000274                           757          LSL     #$04, D1
00000274                           758          LSR     #$08, D1
00000274                           759          LSR     #$05, D1
00000274                           760          LEA     oDn, A1     
00000274                           761          MOVE.B  #14,D0          
00000274                           762          TRAP    #15
00000274                           763          MOVE.B  #3,D0          
00000274                           764          TRAP    #15
00000274                           765          ENDM
00000274                           766  ; ------------------------------------------------------------
00000274                           767  ; "printDnSrc" Helper
00000274                           768  ; Gary
00000274                           769  ; 
00000274                           770  ; Prints bits 0 to 2 which represent data register source.
00000274                           771  ; ------------------------------------------------------------
00000274                           772  printDnSrc:    MACRO   
00000274                           773          CLR.L   D1
00000274                           774          MOVE.W  \1, D1   ; bits 0 to 2
00000274                           775          LSL     #$08, D1
00000274                           776          LSL     #$05, D1
00000274                           777          LSR     #$08, D1
00000274                           778          LSR     #$05, D1
00000274                           779          LEA     oDn, A1     
00000274                           780          MOVE.B  #14,D0          
00000274                           781          TRAP    #15
00000274                           782          MOVE.B  #3,D0          
00000274                           783          TRAP    #15
00000274                           784          ENDM
00000274                           785  ; ------------------------------------------------------------
00000274                           786  ; "printAnDest" Helper
00000274                           787  ; Gary
00000274                           788  ; 
00000274                           789  ; Prints bits 9 to 11 which represent adress register destination.
00000274                           790  ; ------------------------------------------------------------
00000274                           791  printAnDest:    MACRO
00000274                           792          MOVE.W  \1, D1
00000274                           793          LSL     #$04, D1 ; bits 9 to 11
00000274                           794          LSR     #$08, D1
00000274                           795          LSR     #$05, D1
00000274                           796          LEA     oAn, A1     
00000274                           797          MOVE.B  #14,D0          
00000274                           798          TRAP    #15
00000274                           799          MOVE.B  #3,D0          
00000274                           800          TRAP    #15
00000274                           801          ENDM
00000274                           802  ; ------------------------------------------------------------
00000274                           803  ; "printAnSrc" Helper
00000274                           804  ; Gary
00000274                           805  ; 
00000274                           806  ; Prints bits 0 to 2 which represent adress register source.
00000274                           807  ; ------------------------------------------------------------
00000274                           808  printAnSrc:    MACRO   
00000274                           809          MOVE.W  \1, D1   ; bits 0 to 2
00000274                           810          LSL     #$08, D1
00000274                           811          LSL     #$05, D1
00000274                           812          LSR     #$08, D1
00000274                           813          LSR     #$05, D1
00000274                           814          LEA     oAn, A1     
00000274                           815          MOVE.B  #14,D0          
00000274                           816          TRAP    #15
00000274                           817          MOVE.B  #3,D0          
00000274                           818          TRAP    #15
00000274                           819          ENDM
00000274                           820  ; ------------------------------------------------------------
00000274                           821  ; "printAdr" Helper
00000274                           822  ; Gary
00000274                           823  ; 
00000274                           824  ; Unused old version of ADROUT.
00000274                           825  ; ------------------------------------------------------------        
00000274                           826  printAdr:      MACRO
00000274                           827          MOVE.W  A2, D1    ; Move A2 into D1
00000274                           828          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           829          LSR.W   #4, D1      
00000274                           830          ConvertHtoA D1      ; Convert D1 to a character
00000274                           831          MOVE.B  #6, D0      ; Read first digit
00000274                           832          TRAP    #15         ; Execute output
00000274                           833          
00000274                           834          MOVE.W  A2, D1    ; Move A2 into D1
00000274                           835          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000274                           836          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           837          LSR.W   #4, D1      
00000274                           838          ConvertHtoA D1      ; Convert D1 to a character
00000274                           839          MOVE.B  #6, D0      ; Read first digit
00000274                           840          TRAP    #15         ; Execute output
00000274                           841          
00000274                           842          MOVE.W  A2, D1    ; Move A2 into D1
00000274                           843          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           844          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           845          LSR.W   #4, D1      
00000274                           846          ConvertHtoA D1      ; Convert D1 to a character
00000274                           847          MOVE.B  #6, D0      ; Read first digit
00000274                           848          TRAP    #15         ; Execute output
00000274                           849          
00000274                           850          MOVE.W  A2, D1    ; Move A2 into D1
00000274                           851          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000274                           852          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000274                           853          LSR.W   #8, D1      ; Get the first hex digit of D1
00000274                           854          LSR.W   #4, D1      
00000274                           855          ConvertHtoA D1      ; Convert D1 to a character
00000274                           856          MOVE.B  #6, D0      ; Read first digit
00000274                           857          TRAP    #15         ; Execute output       
00000274                           858          ENDM
00000274                           859  printComma:    MACRO
00000274                           860          LEA     oComma, A1     
00000274                           861          MOVE.B  #14,D0          
00000274                           862          TRAP    #15
00000274                           863          ENDM
00000274                           864  printPI:    MACRO
00000274                           865          LEA     oPstInc, A1     
00000274                           866          MOVE.B  #14,D0          
00000274                           867          TRAP    #15
00000274                           868          ENDM
00000274                           869  printPD:    MACRO
00000274                           870          LEA     oPreDec, A1     
00000274                           871          MOVE.B  #14,D0          
00000274                           872          TRAP    #15
00000274                           873          ENDM
00000274                           874  
00000274                           875  printLB:    MACRO
00000274                           876          LEA     oLB, A1     
00000274                           877          MOVE.B  #14,D0          
00000274                           878          TRAP    #15
00000274                           879          ENDM
00000274                           880  printRB:    MACRO
00000274                           881          LEA     oRB, A1     
00000274                           882          MOVE.B  #14,D0          
00000274                           883          TRAP    #15
00000274                           884          ENDM
00000274                           885  printSign:  MACRO
00000274                           886          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000274                           887          MOVE.W  #36, D1     ; An = sign
00000274                           888          TRAP    #15         ; Output = sign
00000274                           889          ENDM
00000274                           890  printHash:  MACRO
00000274                           891          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000274                           892          MOVE.W  #35, D1     ; An = sign
00000274                           893          TRAP    #15         ; Output = sign
00000274                           894          ENDM
00000274                           895          
00000274                           896  space:      MACRO
00000274                           897          LEA     oBlank, A1
00000274                           898          MOVE.B  #14,D0          
00000274                           899          TRAP    #15
00000274                           900          ENDM
00000274                           901  tab:       MACRO
00000274                           902          LEA     oTab, A1
00000274                           903          MOVE.B  #14,D0          
00000274                           904          TRAP    #15
00000274                           905          ENDM
00000274                           906          
00000274                           907  newLine:    MACRO
00000274                           908          LEA     oBlank, A1
00000274                           909          MOVE.B  #13,D0          
00000274                           910          TRAP    #15
00000274                           911          ENDM
00000274                           912  
00000274                           913  slash:      MACRO
00000274                           914          LEA     oSlash, A1
00000274                           915          MOVE.B  #13,D0          
00000274                           916          TRAP    #15
00000274                           917          ENDM
00000274                           918  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00000274                           919  ; "main" routine
00000274                           920  ; Dylan, Gary, Jonathan
00000274                           921  ; 
00000274                           922  ; Iterates through memory word-by-word using post increment mode after
00000274                           923  ; requesting user input.
00000274                           924  ; ========================================================================
00001000                           925          ORG     $1000
00001000                           926          OPT     MEX
00001000                           927          
00001000  43F8 00E5                928  main:   LEA     oWelcome, A1  ; Welcome Message
00001004  103C 000D                929          MOVE.B  #13, D0
00001008  4E4F                     930          TRAP    #15
0000100A                           931m         newline
0000100A  43F8 00DD                932m         LEA     OBLANK, A1
0000100E  103C 000D                933m         MOVE.B  #13,D0          
00001012  4E4F                     934m         TRAP    #15
00001014                           935m         ENDM
00001014                           936          
00001014  43F8 0000                937          LEA     rSTART, A1  ; Request starting address
00001018  103C 000D                938          MOVE.B  #13, D0
0000101C  4E4F                     939          TRAP    #15
0000101E                           940m         readInput   D2      ; Read 4 digit hex input
0000101E                           941m         ; READ USER's input
0000101E  103C 0005                942m         MOVE.B  #5, D0      ; READ FIRST DIGIT
00001022  4E4F                     943m         TRAP    #15
00001024                           944mm         CONVERTATOH D1      ; CONVERT TO HEX
00001024  0C01 0039                945mm         CMPI.B  #$39, D1
00001028  6E00 000A                946mm         BGT     ALPHA_3
0000102C  0401 0030                947mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001030  6000 0006                948mm         BRA     DONE_3
00001034  0401 0037                949mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001038  4E71                     950mm DONE_3: NOP
0000103A                           951mm         ENDM
0000103A  E149                     952m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
0000103C  E949                     953m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000103E  3401                     954m         MOVE.W  D1, D2      ; STORE IN D2
00001040                           955m         
00001040  323C 0000                956m         MOVE.W  #0, D1      ; CLEAR D1
00001044  4E4F                     957m         TRAP    #15         ; READ SECOND DIGIT
00001046                           958mm         CONVERTATOH D1
00001046  0C01 0039                959mm         CMPI.B  #$39, D1
0000104A  6E00 000A                960mm         BGT     ALPHA_4
0000104E  0401 0030                961mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001052  6000 0006                962mm         BRA     DONE_4
00001056  0401 0037                963mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000105A  4E71                     964mm DONE_4: NOP
0000105C                           965mm         ENDM
0000105C  E149                     966m         LSL.W   #8, D1      
0000105E  D441                     967m         ADD.W   D1, D2
00001060                           968m         
00001060  323C 0000                969m         MOVE.W  #0, D1      ; CLEAR D1
00001064  4E4F                     970m         TRAP    #15         ; READ THIRD DIGIT
00001066                           971mm         CONVERTATOH D1
00001066  0C01 0039                972mm         CMPI.B  #$39, D1
0000106A  6E00 000A                973mm         BGT     ALPHA_5
0000106E  0401 0030                974mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001072  6000 0006                975mm         BRA     DONE_5
00001076  0401 0037                976mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000107A  4E71                     977mm DONE_5: NOP
0000107C                           978mm         ENDM
0000107C  E949                     979m         LSL.W   #4, D1      
0000107E  D441                     980m         ADD.W   D1, D2
00001080                           981m         
00001080  323C 0000                982m         MOVE.W  #0, D1      ; CLEAR D1
00001084  4E4F                     983m         TRAP    #15         ; READ FINAL DIGIT
00001086                           984mm         CONVERTATOH D1     
00001086  0C01 0039                985mm         CMPI.B  #$39, D1
0000108A  6E00 000A                986mm         BGT     ALPHA_6
0000108E  0401 0030                987mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001092  6000 0006                988mm         BRA     DONE_6
00001096  0401 0037                989mm ALPHA_6: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000109A  4E71                     990mm DONE_6: NOP
0000109C                           991mm         ENDM
0000109C  D441                     992m         ADD.W   D1, D2
0000109E  3402                     993m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
000010A0                           994m         ENDM
000010A0  3442                     995          MOVE.W  D2, A2      ; Store the address in A2
000010A2                           996m         newline
000010A2  43F8 00DD                997m         LEA     OBLANK, A1
000010A6  103C 000D                998m         MOVE.B  #13,D0          
000010AA  4E4F                     999m         TRAP    #15
000010AC                          1000m         ENDM
000010AC                          1001          
000010AC  43F8 0031               1002          LEA     rEND, A1    ; Request ending address
000010B0  103C 000D               1003          MOVE.B  #13, D0
000010B4  4E4F                    1004          TRAP    #15
000010B6                          1005m         readInput   D2      ; Read 4 digit hex input
000010B6                          1006m         ; READ USER's input
000010B6  103C 0005               1007m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010BA  4E4F                    1008m         TRAP    #15
000010BC                          1009mm         CONVERTATOH D1      ; CONVERT TO HEX
000010BC  0C01 0039               1010mm         CMPI.B  #$39, D1
000010C0  6E00 000A               1011mm         BGT     ALPHA_9
000010C4  0401 0030               1012mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010C8  6000 0006               1013mm         BRA     DONE_9
000010CC  0401 0037               1014mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010D0  4E71                    1015mm DONE_9: NOP
000010D2                          1016mm         ENDM
000010D2  E149                    1017m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010D4  E949                    1018m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010D6  3401                    1019m         MOVE.W  D1, D2      ; STORE IN D2
000010D8                          1020m         
000010D8  323C 0000               1021m         MOVE.W  #0, D1      ; CLEAR D1
000010DC  4E4F                    1022m         TRAP    #15         ; READ SECOND DIGIT
000010DE                          1023mm         CONVERTATOH D1
000010DE  0C01 0039               1024mm         CMPI.B  #$39, D1
000010E2  6E00 000A               1025mm         BGT     ALPHA_10
000010E6  0401 0030               1026mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010EA  6000 0006               1027mm         BRA     DONE_10
000010EE  0401 0037               1028mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010F2  4E71                    1029mm DONE_10: NOP
000010F4                          1030mm         ENDM
000010F4  E149                    1031m         LSL.W   #8, D1      
000010F6  D441                    1032m         ADD.W   D1, D2
000010F8                          1033m         
000010F8  323C 0000               1034m         MOVE.W  #0, D1      ; CLEAR D1
000010FC  4E4F                    1035m         TRAP    #15         ; READ THIRD DIGIT
000010FE                          1036mm         CONVERTATOH D1
000010FE  0C01 0039               1037mm         CMPI.B  #$39, D1
00001102  6E00 000A               1038mm         BGT     ALPHA_11
00001106  0401 0030               1039mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000110A  6000 0006               1040mm         BRA     DONE_11
0000110E  0401 0037               1041mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001112  4E71                    1042mm DONE_11: NOP
00001114                          1043mm         ENDM
00001114  E949                    1044m         LSL.W   #4, D1      
00001116  D441                    1045m         ADD.W   D1, D2
00001118                          1046m         
00001118  323C 0000               1047m         MOVE.W  #0, D1      ; CLEAR D1
0000111C  4E4F                    1048m         TRAP    #15         ; READ FINAL DIGIT
0000111E                          1049mm         CONVERTATOH D1     
0000111E  0C01 0039               1050mm         CMPI.B  #$39, D1
00001122  6E00 000A               1051mm         BGT     ALPHA_12
00001126  0401 0030               1052mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000112A  6000 0006               1053mm         BRA     DONE_12
0000112E  0401 0037               1054mm ALPHA_12: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001132  4E71                    1055mm DONE_12: NOP
00001134                          1056mm         ENDM
00001134  D441                    1057m         ADD.W   D1, D2
00001136  3402                    1058m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001138                          1059m         ENDM
00001138  31C2 0990               1060          MOVE.W  D2, ($990)  ; Store at mem location $990
0000113C                          1061m         newline
0000113C  43F8 00DD               1062m         LEA     OBLANK, A1
00001140  103C 000D               1063m         MOVE.B  #13,D0          
00001144  4E4F                    1064m         TRAP    #15
00001146                          1065m         ENDM
00001146                          1066m         newline
00001146  43F8 00DD               1067m         LEA     OBLANK, A1
0000114A  103C 000D               1068m         MOVE.B  #13,D0          
0000114E  4E4F                    1069m         TRAP    #15
00001150                          1070m         ENDM
00001150                          1071          
00001150  7200                    1072  goLoop: MOVE.L  #0, D1
00001152  3238 0990               1073          MOVE.W  ($990), D1
00001156  240A                    1074          MOVE.L  A2, D2
00001158  B282                    1075          CMP.L   D2, D1    ; Check if the loop is over
0000115A  6F00 00B2               1076          BLE     endSim      ; A2 is past the loop start if this is reached
0000115E                          1077m         printAdr
0000115E  320A                    1078m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
00001160  E049                    1079m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001162  E849                    1080m         LSR.W   #4, D1      
00001164                          1081mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001164  0C01 0009               1082mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001168  6E00 000A               1083mm         BGT     ALPHA_16
0000116C  0601 0030               1084mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001170  6000 0006               1085mm         BRA     DONE_16
00001174  0601 0037               1086mm ALPHA_16: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001178  4E71                    1087mm DONE_16: NOP
0000117A                          1088mm         ENDM
0000117A  103C 0006               1089m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000117E  4E4F                    1090m         TRAP    #15         ; EXECUTE OUTPUT
00001180                          1091m         
00001180  320A                    1092m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
00001182  E949                    1093m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001184  E049                    1094m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001186  E849                    1095m         LSR.W   #4, D1      
00001188                          1096mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001188  0C01 0009               1097mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000118C  6E00 000A               1098mm         BGT     ALPHA_17
00001190  0601 0030               1099mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001194  6000 0006               1100mm         BRA     DONE_17
00001198  0601 0037               1101mm ALPHA_17: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000119C  4E71                    1102mm DONE_17: NOP
0000119E                          1103mm         ENDM
0000119E  103C 0006               1104m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011A2  4E4F                    1105m         TRAP    #15         ; EXECUTE OUTPUT
000011A4                          1106m         
000011A4  320A                    1107m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
000011A6  E149                    1108m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000011A8  E049                    1109m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000011AA  E849                    1110m         LSR.W   #4, D1      
000011AC                          1111mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000011AC  0C01 0009               1112mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000011B0  6E00 000A               1113mm         BGT     ALPHA_18
000011B4  0601 0030               1114mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011B8  6000 0006               1115mm         BRA     DONE_18
000011BC  0601 0037               1116mm ALPHA_18: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011C0  4E71                    1117mm DONE_18: NOP
000011C2                          1118mm         ENDM
000011C2  103C 0006               1119m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011C6  4E4F                    1120m         TRAP    #15         ; EXECUTE OUTPUT
000011C8                          1121m         
000011C8  320A                    1122m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
000011CA  E149                    1123m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000011CC  E949                    1124m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000011CE  E049                    1125m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000011D0  E849                    1126m         LSR.W   #4, D1      
000011D2                          1127mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000011D2  0C01 0009               1128mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000011D6  6E00 000A               1129mm         BGT     ALPHA_19
000011DA  0601 0030               1130mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011DE  6000 0006               1131mm         BRA     DONE_19
000011E2  0601 0037               1132mm ALPHA_19: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011E6  4E71                    1133mm DONE_19: NOP
000011E8                          1134mm         ENDM
000011E8  103C 0006               1135m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011EC  4E4F                    1136m         TRAP    #15         ; EXECUTE OUTPUT       
000011EE                          1137m         ENDM
000011EE                          1138m         tab
000011EE  43F8 00DF               1139m         LEA     OTAB, A1
000011F2  103C 000E               1140m         MOVE.B  #14,D0          
000011F6  4E4F                    1141m         TRAP    #15
000011F8                          1142m         ENDM
000011F8  4EB9 00001212           1143          JSR     identifyOpcode  ; Decode what is at A2
000011FE  381A                    1144          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
00001200                          1145m         newline
00001200  43F8 00DD               1146m         LEA     OBLANK, A1
00001204  103C 000D               1147m         MOVE.B  #13,D0          
00001208  4E4F                    1148m         TRAP    #15
0000120A                          1149m         ENDM
0000120A  6000 FF44               1150          BRA     goLoop
0000120E                          1151          
0000120E                          1152          
0000120E                          1153          
0000120E  FFFF FFFF               1154  endSim: SIMHALT             ; halt simulator
00001212                          1155          
00001212                          1156          
00001212                          1157  ; ========================================================================
00001212                          1158  ; "identifyOpcode" subroutine
00001212                          1159  ; Jonathan
00001212                          1160  ; 
00001212                          1161  ; Reads the Word at A2 and determines which opcode it represents.
00001212                          1162  ; When the opcode is identified, the appropriate "decodeX" subroutine
00001212                          1163  ; is invoked.
00001212                          1164  ;
00001212                          1165  ; Uses a generated Trie structure to determine where to split on which bits
00001212                          1166  ; in order to efficiently identify the exact opcode
00001212                          1167  ; ========================================================================
00001212                          1168  identifyOpcode:
00001212  3612                    1169          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001214  0803 000F               1170          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001218  6700 0006               1171          BEQ     split0      ; Split based on the first bit
0000121C  6000 008A               1172          BRA     split1
00001220                          1173  
00001220                          1174  split0: 
00001220  0803 000E               1175          BTST    #$E, D3     ; Check the 2nd bit
00001224  6700 0006               1176          BEQ     split000    ; MOVE follows 00+        
00001228  6000 0016               1177          BRA     split01
0000122C                          1178          
0000122C                          1179  split000:        
0000122C  0803 000D               1180          BTST    #$D, D3     ; Check the 3rd bit
00001230  6600 0136               1181          BNE     decodeMOVE
00001234  0803 000C               1182          BTST    #$C, D3     ; Check the 3rd bit
00001238  6600 012E               1183          BNE     decodeMOVE
0000123C  6000 61A0               1184          BRA     decodeImmediate
00001240                          1185  split01:
00001240  0803 000D               1186          BTST    #$D, D3     ; Check the 3rd bit
00001244  6700 0006               1187          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001248  6000 0032               1188          BRA     split0110   ; Code is 011, but all subcodes are 0110        
0000124C                          1189  
0000124C                          1190  split0100:
0000124C  0803 0008               1191          BTST    #$8, D3     ; Check the 8th bit for LEA
00001250  6600 34E2               1192          BNE     decodeLEA   ; LEA follows 0100XXX1+
00001254  0803 000B               1193          BTST    #$B, D3     ; Check the 5th bit for NOT
00001258  6700 4874               1194          BEQ     decodeNOT   ; NOT follows 01000+
0000125C  0803 0009               1195          BTST    #$9, D3     ; Check the 7th bit
00001260  6700 0D6E               1196          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
00001264  6000 0002               1197          BRA     split0100111
00001268                          1198  
00001268                          1199  split0100111:
00001268  0803 0007               1200          BTST    #$7, D3     ; Check the 9th bit for JSR
0000126C  6600 58C4               1201          BNE     decodeJSR   ; JSR follows 010011101+
00001270  0803 0002               1202          BTST    #$2, D3     ; Check the 14th bit
00001274  6700 00AA               1203          BEQ     decodeNOP   ; NOP follows 01001110011100+
00001278  6000 5EF2               1204          BRA     decodeRTS   ; RTS follows 01001110011101+
0000127C                          1205  
0000127C                          1206  split0110:
0000127C  0803 000B               1207          BTST    #$B, D3     ; Check the 5th bit
00001280  6700 0006               1208          BEQ     split01100
00001284  6000 0016               1209          BRA     split01101
00001288                          1210  
00001288                          1211  split01100:
00001288  0803 000A               1212          BTST    #$A, D3     ; Check the 6th bit
0000128C  6700 5F26               1213          BEQ     decodeBRA   ; BRA starts with 011000
00001290  0803 000C               1214          BTST    #$C, D3     ; Check the 6th bit
00001294  6600 650C               1215          BNE     outputData  ; MOVEQ
00001298  6000 521A               1216          BRA     decodeBEQ   ; BEQ starts with 011001
0000129C                          1217          
0000129C                          1218  split01101:
0000129C  0803 0008               1219          BTST    #$8, D3     ; Check the 8th bit
000012A0  6700 543C               1220          BEQ     decodeBGE   ; BGE starts with 01101100
000012A4  6000 5662               1221          BRA     decodeBLT   ; BLT starts with 01101101
000012A8                          1222          
000012A8                          1223  split1: 
000012A8  0803 000E               1224          BTST    #$E, D3     ; Check the 2nd bit
000012AC  6700 0006               1225          BEQ     split10
000012B0  6000 000E               1226          BRA     split11
000012B4                          1227  
000012B4                          1228  split10:
000012B4  0803 000C               1229          BTST    #$C, D3     ; Check the 4th bit
000012B8  6700 2E26               1230          BEQ     decodeDIVU  ; DIVU follows 1000+
000012BC  6000 1A92               1231          BRA     decodeSUB   ; SUB follows 1001+
000012C0                          1232  
000012C0                          1233  split11:
000012C0  0803 000D               1234          BTST    #$D, D3     ; Check the 3rd bit
000012C4  6700 0006               1235          BEQ     split110
000012C8  6000 0026               1236          BRA     split111
000012CC                          1237  
000012CC                          1238  split110:
000012CC  0803 000C               1239          BTST    #$C, D3     ; Check the 4th bit for ADD
000012D0  6600 0D42               1240          BNE     decodeADD   ; ADD follows 1101+
000012D4  0803 0008               1241          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
000012D8  6700 3AB8               1242          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
000012DC  0803 0007               1243          BTST    #$7, D3
000012E0  6700 3AB0               1244          BEQ     decodeAND
000012E4  0803 0006               1245          BTST    #$6, D3
000012E8  6700 3AA8               1246          BEQ     decodeAND
000012EC  6000 279E               1247          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
000012F0                          1248  
000012F0                          1249  split111: 
000012F0  0803 0003               1250          BTST    #$3, D3     ; Check 13th bit
000012F4  6700 001A               1251          BEQ     ariShift    ; ASL_ASR Memory Shift follows 1110000x11+
000012F8                          1252     
000012F8  0803 0005               1253          BTST    #$5, D3     
000012FC  6600 0006               1254          BNE     logReg     
00001300  6000 4E4A               1255          BRA     decodeLSx_M
00001304  0803 000C               1256  logReg: BTST    #12, D3         
00001308  6700 4F1C               1257          BEQ     decodeLSx_R
0000130C  6000 6494               1258          BRA     outputData
00001310                          1259  
00001310                          1260  ariShift:                   ; Special split specifically for Arithmetic Shift
00001310  0803 0005               1261          BTST    #$5, D3     
00001314  6600 0006               1262          BNE     ariReg
00001318  6000 4FE6               1263          BRA     decodeASx_M    
0000131C  6000 50BC               1264  ariReg: BRA     decodeASx_R
00001320                          1265              
00001320                          1266  
00001320                          1267  ; ========================================================================
00001320                          1268  ; "decodeX" subroutines
00001320                          1269  ; Gary
00001320                          1270  ; 
00001320                          1271  ; Set of subroutines which are invoked by identifyOpcode.
00001320                          1272  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
00001320                          1273  ; the instruction.
00001320                          1274  ;
00001320                          1275  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
00001320                          1276  ; opcode) to record the parameters (such as destination register). If the
00001320                          1277  ; opcode indicates that the next word represents a destination address, then
00001320                          1278  ; decodeLEA will advance A2 to the next word and decode that.
00001320                          1279  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
00001320                          1280  ; ========================================================================
00001320                          1281  
00001320                          1282  ; ------------------------------------------------------------
00001320                          1283  ; 1. "decodeNOP" subroutine
00001320                          1284  ; Gary
00001320                          1285  ;
00001320                          1286  ; Decodes NOP opcode by verifying then printing
00001320                          1287  ; ------------------------------------------------------------
00001320                          1288  decodeNOP:
00001320                          1289m         verifyOpcode    pNOP, (A2)
00001320  43F8 00FE               1290m         LEA     PNOP, A1      ; INPUT PATTERN STRING
00001324  3612                    1291m         MOVE.W  (A2), D3      ; INPUT VALUE
00001326  123C 000F               1292m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000132A                          1293m         
0000132A                          1294m LOOP_22: 
0000132A  0C11 0030               1295m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000132E  6700 000E               1296m         BEQ     CHECKFOR0_22
00001332  0C11 0031               1297m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001336  6700 0010               1298m         BEQ     CHECKFOR1_22
0000133A  6000 0012               1299m         BRA     NEXT_22      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000133E                          1300m         
0000133E                          1301m CHECKFOR0_22: 
0000133E  0303                    1302m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001340  6600 6460               1303m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001344  6000 0008               1304m         BRA     NEXT_22
00001348                          1305m 
00001348                          1306m CHECKFOR1_22:
00001348  0303                    1307m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000134A  6700 6456               1308m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000134E                          1309m 
0000134E                          1310m NEXT_22: 
0000134E  B23C 0000               1311m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001352  6700 0008               1312m         BEQ     COMPLETE_22  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001356  5301                    1313m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001358  1819                    1314m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000135A  60CE                    1315m         BRA     LOOP_22      ; BEGIN LOOP AGAIN
0000135C                          1316m 
0000135C                          1317m COMPLETE_22:  ; OPCODE HAS BEEN VERIFIED
0000135C                          1318m         ENDM
0000135C  43F8 0060               1319          LEA     oNOP, A1     ; Loads byteVAR
00001360  103C 000E               1320          MOVE.B  #14,D0          
00001364  4E4F                    1321          TRAP    #15
00001366  4E75                    1322          RTS                 ; Return from decodeNOP subroutine
00001368                          1323  
00001368                          1324  
00001368                          1325  ; ------------------------------------------------------------
00001368                          1326  ; 2. "decodeMOVE" subroutine
00001368                          1327  ; Gary
00001368                          1328  ;
00001368                          1329  ; Decodes MOVE opcode by verifying, checking size and adressing mode
00001368                          1330  ; then printing both.
00001368                          1331  ; ------------------------------------------------------------
00001368                          1332  decodeMOVE:
00001368                          1333m         verifyOpcode    pMOVE, (A2)
00001368  43F8 010F               1334m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
0000136C  3612                    1335m         MOVE.W  (A2), D3      ; INPUT VALUE
0000136E  123C 000F               1336m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001372                          1337m         
00001372                          1338m LOOP_23: 
00001372  0C11 0030               1339m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001376  6700 000E               1340m         BEQ     CHECKFOR0_23
0000137A  0C11 0031               1341m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000137E  6700 0010               1342m         BEQ     CHECKFOR1_23
00001382  6000 0012               1343m         BRA     NEXT_23      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001386                          1344m         
00001386                          1345m CHECKFOR0_23: 
00001386  0303                    1346m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001388  6600 6418               1347m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000138C  6000 0008               1348m         BRA     NEXT_23
00001390                          1349m 
00001390                          1350m CHECKFOR1_23:
00001390  0303                    1351m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001392  6700 640E               1352m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001396                          1353m 
00001396                          1354m NEXT_23: 
00001396  B23C 0000               1355m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000139A  6700 0008               1356m         BEQ     COMPLETE_23  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000139E  5301                    1357m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000013A0  1819                    1358m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000013A2  60CE                    1359m         BRA     LOOP_23      ; BEGIN LOOP AGAIN
000013A4                          1360m 
000013A4                          1361m COMPLETE_23:  ; OPCODE HAS BEEN VERIFIED
000013A4                          1362m         ENDM
000013A4                          1363          
000013A4  0812 000E               1364          BTST    #$E, (A2)       ; Second verification step
000013A8  6600 0C26               1365          BNE     decodeMOVEM
000013AC                          1366  
000013AC  43F8 0064               1367          LEA     oMOVE, A1     
000013B0  103C 000E               1368          MOVE.B  #14,D0          
000013B4  4E4F                    1369          TRAP    #15
000013B6                          1370          
000013B6                          1371m         printSize       (A2)
000013B6  3612                    1372m         MOVE.W  (A2), D3      ; INPUT VALUE
000013B8  4247                    1373m         CLR     D7      
000013BA                          1374m CHECKFORB_24: 
000013BA  0803 000D               1375m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000013BE  6600 0010               1376m         BNE     CHECKFORW_24  ; IF NOT GO TO WORD SIZE
000013C2  43F8 00C0               1377m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000013C6  103C 000E               1378m         MOVE.B  #14,D0          
000013CA  4E4F                    1379m         TRAP    #15
000013CC  6000 0026               1380m         BRA     COMPLETE_24      
000013D0                          1381m CHECKFORW_24: 
000013D0  0803 000C               1382m         BTST    #12, D3      ; CHECK IF CONTAINS 1
000013D4  6700 0010               1383m         BEQ     CHECKFORL_24  ; IF NOT, SIZE CANNOT BE WORD
000013D8  43F8 00C4               1384m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
000013DC  103C 000E               1385m         MOVE.B  #14,D0          
000013E0  4E4F                    1386m         TRAP    #15
000013E2  6000 0010               1387m         BRA     COMPLETE_24  
000013E6                          1388m CHECKFORL_24:
000013E6  1E3C 0001               1389m         MOVE.B  #$1, D7
000013EA  43F8 00C8               1390m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000013EE  103C 000E               1391m         MOVE.B  #14,D0          
000013F2  4E4F                    1392m         TRAP    #15
000013F4                          1393m COMPLETE_24:  ; SIZE HAS BEEN PRINTED
000013F4                          1394m         ENDM
000013F4                          1395m         prepareAdrMode  #$1, (A2)
000013F4  3C3C 0001               1396m         MOVE.W  #$1, D6      ; INPUT VALUE
000013F8  3212                    1397m         MOVE.W  (A2), D1
000013FA  BC3C 0001               1398m         CMP.B   #$01, D6
000013FE  6700 000C               1399m         BEQ     ADRSOURCE_25    
00001402                          1400m ADRDEST_25:
00001402  EF49                    1401m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00001404  E049                    1402m         LSR     #$08, D1
00001406  EA49                    1403m         LSR     #$05, D1
00001408  6000 000A               1404m         BRA     COMPLETE_25 
0000140C                          1405m ADRSOURCE_25:                
0000140C  E149                    1406m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000140E  E549                    1407m         LSL     #$02, D1
00001410  E049                    1408m         LSR     #$08, D1
00001412  EA49                    1409m         LSR     #$05, D1
00001414                          1410m COMPLETE_25:  ; OPCODE HAS BEEN VERIFIED
00001414                          1411m         ENDM        
00001414                          1412m         decodeAdrMode   (A2), D1
00001414  3612                    1413m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00001416  3201                    1414m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001418                          1415m 
00001418  B23C 0001               1416m         CMP.B   #$01, D1
0000141C  6700 0066               1417m         BEQ     ADRREGDIRECT_26    
00001420  B23C 0002               1418m         CMP.B   #$02, D1
00001424  6700 00A0               1419m         BEQ     ADRREGINDIRECT_26  
00001428  B23C 0003               1420m         CMP.B   #$03, D1
0000142C  6700 0102               1421m         BEQ     ADRREGPOSTINC_26  
00001430  B23C 0004               1422m         CMP.B   #$04, D1
00001434  6700 0178               1423m         BEQ     ADRREGPREDEC_26
00001438  B23C 0007               1424m         CMP.B   #$07, D1
0000143C  6700 01EE               1425m         BEQ     ADRABSOLUTE_26    
00001440                          1426m         
00001440                          1427m DATAREGDIRECT_26: 
00001440  BC3C 0001               1428m         CMP.B   #$01, D6
00001444  6700 001E               1429m         BEQ     DATAREGDIRECTSRC_26   
00001448                          1430m DATAREGDIRECTDEST_26: 
00001448                          1431mm         PRINTDNDEST D3 
00001448  3203                    1432mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000144A  E949                    1433mm         LSL     #$04, D1
0000144C  E049                    1434mm         LSR     #$08, D1
0000144E  EA49                    1435mm         LSR     #$05, D1
00001450  43F8 00CC               1436mm         LEA     ODN, A1     
00001454  103C 000E               1437mm         MOVE.B  #14,D0          
00001458  4E4F                    1438mm         TRAP    #15
0000145A  103C 0003               1439mm         MOVE.B  #3,D0          
0000145E  4E4F                    1440mm         TRAP    #15
00001460                          1441mm         ENDM
00001460  6000 057A               1442m         BRA     COMPLETE_26 
00001464                          1443m DATAREGDIRECTSRC_26: 
00001464                          1444mm         PRINTDNSRC D3 
00001464  4281                    1445mm         CLR.L   D1
00001466  3203                    1446mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001468  E149                    1447mm         LSL     #$08, D1
0000146A  EB49                    1448mm         LSL     #$05, D1
0000146C  E049                    1449mm         LSR     #$08, D1
0000146E  EA49                    1450mm         LSR     #$05, D1
00001470  43F8 00CC               1451mm         LEA     ODN, A1     
00001474  103C 000E               1452mm         MOVE.B  #14,D0          
00001478  4E4F                    1453mm         TRAP    #15
0000147A  103C 0003               1454mm         MOVE.B  #3,D0          
0000147E  4E4F                    1455mm         TRAP    #15
00001480                          1456mm         ENDM
00001480  6000 055A               1457m         BRA     COMPLETE_26   
00001484                          1458m         
00001484                          1459m ADRREGDIRECT_26: 
00001484  BC3C 0001               1460m         CMP.B   #$01, D6
00001488  6700 001E               1461m         BEQ     ADRREGDIRECTSRC_26   
0000148C                          1462m ADRREGDIRECTDEST_26:
0000148C                          1463mm         PRINTANDEST D3
0000148C  3203                    1464mm         MOVE.W  D3, D1
0000148E  E949                    1465mm         LSL     #$04, D1 ; BITS 9 TO 11
00001490  E049                    1466mm         LSR     #$08, D1
00001492  EA49                    1467mm         LSR     #$05, D1
00001494  43F8 00CE               1468mm         LEA     OAN, A1     
00001498  103C 000E               1469mm         MOVE.B  #14,D0          
0000149C  4E4F                    1470mm         TRAP    #15
0000149E  103C 0003               1471mm         MOVE.B  #3,D0          
000014A2  4E4F                    1472mm         TRAP    #15
000014A4                          1473mm         ENDM
000014A4  6000 0536               1474m         BRA     COMPLETE_26   
000014A8                          1475m ADRREGDIRECTSRC_26:
000014A8                          1476mm         PRINTANSRC D3
000014A8  3203                    1477mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014AA  E149                    1478mm         LSL     #$08, D1
000014AC  EB49                    1479mm         LSL     #$05, D1
000014AE  E049                    1480mm         LSR     #$08, D1
000014B0  EA49                    1481mm         LSR     #$05, D1
000014B2  43F8 00CE               1482mm         LEA     OAN, A1     
000014B6  103C 000E               1483mm         MOVE.B  #14,D0          
000014BA  4E4F                    1484mm         TRAP    #15
000014BC  103C 0003               1485mm         MOVE.B  #3,D0          
000014C0  4E4F                    1486mm         TRAP    #15
000014C2                          1487mm         ENDM
000014C2  6000 0518               1488m         BRA     COMPLETE_26   
000014C6                          1489m        
000014C6                          1490m ADRREGINDIRECT_26:   
000014C6  BC3C 0001               1491m         CMP.B   #$01, D6
000014CA  6700 0032               1492m         BEQ     ADRREGINDIRECTSRC_26   
000014CE                          1493m ADRREGINDIRECTDEST_26:
000014CE                          1494mm         PRINTLB
000014CE  43F8 00D0               1495mm         LEA     OLB, A1     
000014D2  103C 000E               1496mm         MOVE.B  #14,D0          
000014D6  4E4F                    1497mm         TRAP    #15
000014D8                          1498mm         ENDM
000014D8                          1499mm         PRINTANDEST D3  
000014D8  3203                    1500mm         MOVE.W  D3, D1
000014DA  E949                    1501mm         LSL     #$04, D1 ; BITS 9 TO 11
000014DC  E049                    1502mm         LSR     #$08, D1
000014DE  EA49                    1503mm         LSR     #$05, D1
000014E0  43F8 00CE               1504mm         LEA     OAN, A1     
000014E4  103C 000E               1505mm         MOVE.B  #14,D0          
000014E8  4E4F                    1506mm         TRAP    #15
000014EA  103C 0003               1507mm         MOVE.B  #3,D0          
000014EE  4E4F                    1508mm         TRAP    #15
000014F0                          1509mm         ENDM
000014F0                          1510mm         PRINTRB
000014F0  43F8 00D2               1511mm         LEA     ORB, A1     
000014F4  103C 000E               1512mm         MOVE.B  #14,D0          
000014F8  4E4F                    1513mm         TRAP    #15
000014FA                          1514mm         ENDM
000014FA  6000 04E0               1515m         BRA     COMPLETE_26     
000014FE                          1516m ADRREGINDIRECTSRC_26:   
000014FE                          1517mm         PRINTLB
000014FE  43F8 00D0               1518mm         LEA     OLB, A1     
00001502  103C 000E               1519mm         MOVE.B  #14,D0          
00001506  4E4F                    1520mm         TRAP    #15
00001508                          1521mm         ENDM
00001508                          1522mm         PRINTANSRC D3  
00001508  3203                    1523mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000150A  E149                    1524mm         LSL     #$08, D1
0000150C  EB49                    1525mm         LSL     #$05, D1
0000150E  E049                    1526mm         LSR     #$08, D1
00001510  EA49                    1527mm         LSR     #$05, D1
00001512  43F8 00CE               1528mm         LEA     OAN, A1     
00001516  103C 000E               1529mm         MOVE.B  #14,D0          
0000151A  4E4F                    1530mm         TRAP    #15
0000151C  103C 0003               1531mm         MOVE.B  #3,D0          
00001520  4E4F                    1532mm         TRAP    #15
00001522                          1533mm         ENDM
00001522                          1534mm         PRINTRB
00001522  43F8 00D2               1535mm         LEA     ORB, A1     
00001526  103C 000E               1536mm         MOVE.B  #14,D0          
0000152A  4E4F                    1537mm         TRAP    #15
0000152C                          1538mm         ENDM
0000152C  6000 04AE               1539m         BRA     COMPLETE_26   
00001530                          1540m         
00001530                          1541m ADRREGPOSTINC_26:   
00001530  BC3C 0001               1542m         CMP.B   #$01, D6
00001534  6700 003C               1543m         BEQ     ADRREGPOSTINCSRC_26   
00001538                          1544m ADRREGPOSTINCDEST_26: 
00001538                          1545mm         PRINTLB
00001538  43F8 00D0               1546mm         LEA     OLB, A1     
0000153C  103C 000E               1547mm         MOVE.B  #14,D0          
00001540  4E4F                    1548mm         TRAP    #15
00001542                          1549mm         ENDM
00001542                          1550mm         PRINTANDEST D3  
00001542  3203                    1551mm         MOVE.W  D3, D1
00001544  E949                    1552mm         LSL     #$04, D1 ; BITS 9 TO 11
00001546  E049                    1553mm         LSR     #$08, D1
00001548  EA49                    1554mm         LSR     #$05, D1
0000154A  43F8 00CE               1555mm         LEA     OAN, A1     
0000154E  103C 000E               1556mm         MOVE.B  #14,D0          
00001552  4E4F                    1557mm         TRAP    #15
00001554  103C 0003               1558mm         MOVE.B  #3,D0          
00001558  4E4F                    1559mm         TRAP    #15
0000155A                          1560mm         ENDM
0000155A                          1561mm         PRINTRB
0000155A  43F8 00D2               1562mm         LEA     ORB, A1     
0000155E  103C 000E               1563mm         MOVE.B  #14,D0          
00001562  4E4F                    1564mm         TRAP    #15
00001564                          1565mm         ENDM
00001564                          1566mm         PRINTPI
00001564  43F8 00D9               1567mm         LEA     OPSTINC, A1     
00001568  103C 000E               1568mm         MOVE.B  #14,D0          
0000156C  4E4F                    1569mm         TRAP    #15
0000156E                          1570mm         ENDM
0000156E  6000 046C               1571m         BRA     COMPLETE_26  
00001572                          1572m ADRREGPOSTINCSRC_26:           
00001572                          1573mm         PRINTLB
00001572  43F8 00D0               1574mm         LEA     OLB, A1     
00001576  103C 000E               1575mm         MOVE.B  #14,D0          
0000157A  4E4F                    1576mm         TRAP    #15
0000157C                          1577mm         ENDM
0000157C                          1578mm         PRINTANSRC D3  
0000157C  3203                    1579mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000157E  E149                    1580mm         LSL     #$08, D1
00001580  EB49                    1581mm         LSL     #$05, D1
00001582  E049                    1582mm         LSR     #$08, D1
00001584  EA49                    1583mm         LSR     #$05, D1
00001586  43F8 00CE               1584mm         LEA     OAN, A1     
0000158A  103C 000E               1585mm         MOVE.B  #14,D0          
0000158E  4E4F                    1586mm         TRAP    #15
00001590  103C 0003               1587mm         MOVE.B  #3,D0          
00001594  4E4F                    1588mm         TRAP    #15
00001596                          1589mm         ENDM
00001596                          1590mm         PRINTRB
00001596  43F8 00D2               1591mm         LEA     ORB, A1     
0000159A  103C 000E               1592mm         MOVE.B  #14,D0          
0000159E  4E4F                    1593mm         TRAP    #15
000015A0                          1594mm         ENDM
000015A0                          1595mm         PRINTPI
000015A0  43F8 00D9               1596mm         LEA     OPSTINC, A1     
000015A4  103C 000E               1597mm         MOVE.B  #14,D0          
000015A8  4E4F                    1598mm         TRAP    #15
000015AA                          1599mm         ENDM
000015AA  6000 0430               1600m         BRA     COMPLETE_26  
000015AE                          1601m ADRREGPREDEC_26: 
000015AE  BC3C 0001               1602m         CMP.B   #$01, D6
000015B2  6700 003C               1603m         BEQ     ADRREGPREDECSRC_26   
000015B6                          1604m ADRREGPREDECDEST_26:
000015B6                          1605mm         PRINTPD  
000015B6  43F8 00D7               1606mm         LEA     OPREDEC, A1     
000015BA  103C 000E               1607mm         MOVE.B  #14,D0          
000015BE  4E4F                    1608mm         TRAP    #15
000015C0                          1609mm         ENDM
000015C0                          1610mm         PRINTLB
000015C0  43F8 00D0               1611mm         LEA     OLB, A1     
000015C4  103C 000E               1612mm         MOVE.B  #14,D0          
000015C8  4E4F                    1613mm         TRAP    #15
000015CA                          1614mm         ENDM
000015CA                          1615mm         PRINTANDEST D3  
000015CA  3203                    1616mm         MOVE.W  D3, D1
000015CC  E949                    1617mm         LSL     #$04, D1 ; BITS 9 TO 11
000015CE  E049                    1618mm         LSR     #$08, D1
000015D0  EA49                    1619mm         LSR     #$05, D1
000015D2  43F8 00CE               1620mm         LEA     OAN, A1     
000015D6  103C 000E               1621mm         MOVE.B  #14,D0          
000015DA  4E4F                    1622mm         TRAP    #15
000015DC  103C 0003               1623mm         MOVE.B  #3,D0          
000015E0  4E4F                    1624mm         TRAP    #15
000015E2                          1625mm         ENDM
000015E2                          1626mm         PRINTRB
000015E2  43F8 00D2               1627mm         LEA     ORB, A1     
000015E6  103C 000E               1628mm         MOVE.B  #14,D0          
000015EA  4E4F                    1629mm         TRAP    #15
000015EC                          1630mm         ENDM
000015EC  6000 03EE               1631m         BRA     COMPLETE_26   
000015F0                          1632m ADRREGPREDECSRC_26: 
000015F0                          1633mm         PRINTPD  
000015F0  43F8 00D7               1634mm         LEA     OPREDEC, A1     
000015F4  103C 000E               1635mm         MOVE.B  #14,D0          
000015F8  4E4F                    1636mm         TRAP    #15
000015FA                          1637mm         ENDM
000015FA                          1638mm         PRINTLB
000015FA  43F8 00D0               1639mm         LEA     OLB, A1     
000015FE  103C 000E               1640mm         MOVE.B  #14,D0          
00001602  4E4F                    1641mm         TRAP    #15
00001604                          1642mm         ENDM
00001604                          1643mm         PRINTANSRC D3  
00001604  3203                    1644mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001606  E149                    1645mm         LSL     #$08, D1
00001608  EB49                    1646mm         LSL     #$05, D1
0000160A  E049                    1647mm         LSR     #$08, D1
0000160C  EA49                    1648mm         LSR     #$05, D1
0000160E  43F8 00CE               1649mm         LEA     OAN, A1     
00001612  103C 000E               1650mm         MOVE.B  #14,D0          
00001616  4E4F                    1651mm         TRAP    #15
00001618  103C 0003               1652mm         MOVE.B  #3,D0          
0000161C  4E4F                    1653mm         TRAP    #15
0000161E                          1654mm         ENDM
0000161E                          1655mm         PRINTRB
0000161E  43F8 00D2               1656mm         LEA     ORB, A1     
00001622  103C 000E               1657mm         MOVE.B  #14,D0          
00001626  4E4F                    1658mm         TRAP    #15
00001628                          1659mm         ENDM
00001628  6000 03B2               1660m         BRA     COMPLETE_26
0000162C                          1661m        
0000162C                          1662m ADRABSOLUTE_26:
0000162C  BC3C 0001               1663m         CMP.B   #$01, D6
00001630  6600 0018               1664m         BNE     ADRABSOLUTEDST_26 
00001634                          1665m         
00001634  3A03                    1666m         MOVE.W  D3, D5
00001636  0803 0002               1667m         BTST    #2, D3
0000163A  6600 0024               1668m         BNE     ADRIMMEDIATE_26
0000163E  0803 0000               1669m         BTST    #0, D3
00001642  6600 0280               1670m         BNE     ADRABSOLUTEL_26
00001646  6000 01E6               1671m         BRA     ADRABSOLUTEW_26
0000164A                          1672m ADRABSOLUTEDST_26:
0000164A  3A03                    1673m         MOVE.W  D3, D5
0000164C  0803 000B               1674m         BTST    #$B, D3
00001650  6600 000E               1675m         BNE     ADRIMMEDIATE_26
00001654  0803 0009               1676m         BTST    #$09, D3
00001658  6600 026A               1677m         BNE     ADRABSOLUTEL_26
0000165C  6000 01D0               1678m         BRA     ADRABSOLUTEW_26
00001660                          1679m ADRIMMEDIATE_26:
00001660  BE3C 0001               1680m         CMP.B   #1, D7
00001664  6700 00A2               1681m         BEQ     ADRIMMEDIATEL_26
00001668                          1682m ADRIMMEDIATEW_26:
00001668  361A                    1683m         MOVE.W  (A2)+, D3
0000166A                          1684mm         PRINTHASH
0000166A  103C 0006               1685mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000166E  323C 0023               1686mm         MOVE.W  #35, D1     ; AN = SIGN
00001672  4E4F                    1687mm         TRAP    #15         ; OUTPUT = SIGN
00001674                          1688mm         ENDM
00001674                          1689mm         PRINTSIGN
00001674  103C 0006               1690mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001678  323C 0024               1691mm         MOVE.W  #36, D1     ; AN = SIGN
0000167C  4E4F                    1692mm         TRAP    #15         ; OUTPUT = SIGN
0000167E                          1693mm         ENDM
0000167E                          1694mm         ADROUT
0000167E  103C 0006               1695mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001682  3212                    1696mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001684  E049                    1697mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001686  E849                    1698mm         LSR.W   #4, D1      
00001688                          1699mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001688  0C01 0009               1700mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000168C  6E00 000A               1701mmm         BGT     ALPHA_56
00001690  0601 0030               1702mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001694  6000 0006               1703mmm         BRA     DONE_56
00001698  0601 0037               1704mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000169C  4E71                    1705mmm DONE_56: NOP
0000169E                          1706mmm         ENDM
0000169E  4E4F                    1707mm         TRAP    #15         ; EXECUTE OUTPUT
000016A0                          1708mm         
000016A0  3212                    1709mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016A2  E949                    1710mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000016A4  E049                    1711mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016A6  E849                    1712mm         LSR.W   #4, D1      
000016A8                          1713mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016A8  0C01 0009               1714mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016AC  6E00 000A               1715mmm         BGT     ALPHA_57
000016B0  0601 0030               1716mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016B4  6000 0006               1717mmm         BRA     DONE_57
000016B8  0601 0037               1718mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016BC  4E71                    1719mmm DONE_57: NOP
000016BE                          1720mmm         ENDM
000016BE  4E4F                    1721mm         TRAP    #15         ; EXECUTE OUTPUT
000016C0                          1722mm         
000016C0  3212                    1723mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016C2  E149                    1724mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016C4  E049                    1725mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016C6  E849                    1726mm         LSR.W   #4, D1      
000016C8                          1727mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016C8  0C01 0009               1728mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016CC  6E00 000A               1729mmm         BGT     ALPHA_58
000016D0  0601 0030               1730mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016D4  6000 0006               1731mmm         BRA     DONE_58
000016D8  0601 0037               1732mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016DC  4E71                    1733mmm DONE_58: NOP
000016DE                          1734mmm         ENDM
000016DE  4E4F                    1735mm         TRAP    #15         ; EXECUTE OUTPUT
000016E0                          1736mm         
000016E0  3212                    1737mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016E2  E149                    1738mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016E4  E949                    1739mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016E6  E049                    1740mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016E8  E849                    1741mm         LSR.W   #4, D1      
000016EA                          1742mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016EA  0C01 0009               1743mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016EE  6E00 000A               1744mmm         BGT     ALPHA_59
000016F2  0601 0030               1745mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016F6  6000 0006               1746mmm         BRA     DONE_59
000016FA  0601 0037               1747mmm ALPHA_59: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016FE  4E71                    1748mmm DONE_59: NOP
00001700                          1749mmm         ENDM
00001700  4E4F                    1750mm         TRAP    #15         ; EXECUTE OUTPUT   
00001702                          1751mm         ENDM     
00001702  3605                    1752m         MOVE.W  D5, D3
00001704  6000 02D6               1753m         BRA     COMPLETE_26
00001708                          1754m ADRIMMEDIATEL_26:
00001708  361A                    1755m         MOVE.W  (A2)+, D3
0000170A                          1756mm         PRINTHASH
0000170A  103C 0006               1757mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000170E  323C 0023               1758mm         MOVE.W  #35, D1     ; AN = SIGN
00001712  4E4F                    1759mm         TRAP    #15         ; OUTPUT = SIGN
00001714                          1760mm         ENDM
00001714                          1761mm         PRINTSIGN
00001714  103C 0006               1762mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001718  323C 0024               1763mm         MOVE.W  #36, D1     ; AN = SIGN
0000171C  4E4F                    1764mm         TRAP    #15         ; OUTPUT = SIGN
0000171E                          1765mm         ENDM
0000171E                          1766mm         ADROUT 
0000171E  103C 0006               1767mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001722  3212                    1768mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001724  E049                    1769mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001726  E849                    1770mm         LSR.W   #4, D1      
00001728                          1771mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001728  0C01 0009               1772mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000172C  6E00 000A               1773mmm         BGT     ALPHA_63
00001730  0601 0030               1774mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001734  6000 0006               1775mmm         BRA     DONE_63
00001738  0601 0037               1776mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000173C  4E71                    1777mmm DONE_63: NOP
0000173E                          1778mmm         ENDM
0000173E  4E4F                    1779mm         TRAP    #15         ; EXECUTE OUTPUT
00001740                          1780mm         
00001740  3212                    1781mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001742  E949                    1782mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001744  E049                    1783mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001746  E849                    1784mm         LSR.W   #4, D1      
00001748                          1785mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001748  0C01 0009               1786mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000174C  6E00 000A               1787mmm         BGT     ALPHA_64
00001750  0601 0030               1788mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001754  6000 0006               1789mmm         BRA     DONE_64
00001758  0601 0037               1790mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000175C  4E71                    1791mmm DONE_64: NOP
0000175E                          1792mmm         ENDM
0000175E  4E4F                    1793mm         TRAP    #15         ; EXECUTE OUTPUT
00001760                          1794mm         
00001760  3212                    1795mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001762  E149                    1796mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001764  E049                    1797mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001766  E849                    1798mm         LSR.W   #4, D1      
00001768                          1799mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001768  0C01 0009               1800mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000176C  6E00 000A               1801mmm         BGT     ALPHA_65
00001770  0601 0030               1802mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001774  6000 0006               1803mmm         BRA     DONE_65
00001778  0601 0037               1804mmm ALPHA_65: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000177C  4E71                    1805mmm DONE_65: NOP
0000177E                          1806mmm         ENDM
0000177E  4E4F                    1807mm         TRAP    #15         ; EXECUTE OUTPUT
00001780                          1808mm         
00001780  3212                    1809mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001782  E149                    1810mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001784  E949                    1811mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001786  E049                    1812mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001788  E849                    1813mm         LSR.W   #4, D1      
0000178A                          1814mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000178A  0C01 0009               1815mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000178E  6E00 000A               1816mmm         BGT     ALPHA_66
00001792  0601 0030               1817mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001796  6000 0006               1818mmm         BRA     DONE_66
0000179A  0601 0037               1819mmm ALPHA_66: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000179E  4E71                    1820mmm DONE_66: NOP
000017A0                          1821mmm         ENDM
000017A0  4E4F                    1822mm         TRAP    #15         ; EXECUTE OUTPUT   
000017A2                          1823mm         ENDM     
000017A2  361A                    1824m         MOVE.W  (A2)+, D3
000017A4                          1825mm         ADROUT
000017A4  103C 0006               1826mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000017A8  3212                    1827mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AA  E049                    1828mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017AC  E849                    1829mm         LSR.W   #4, D1      
000017AE                          1830mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017AE  0C01 0009               1831mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B2  6E00 000A               1832mmm         BGT     ALPHA_68
000017B6  0601 0030               1833mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017BA  6000 0006               1834mmm         BRA     DONE_68
000017BE  0601 0037               1835mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C2  4E71                    1836mmm DONE_68: NOP
000017C4                          1837mmm         ENDM
000017C4  4E4F                    1838mm         TRAP    #15         ; EXECUTE OUTPUT
000017C6                          1839mm         
000017C6  3212                    1840mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017C8  E949                    1841mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000017CA  E049                    1842mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017CC  E849                    1843mm         LSR.W   #4, D1      
000017CE                          1844mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017CE  0C01 0009               1845mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017D2  6E00 000A               1846mmm         BGT     ALPHA_69
000017D6  0601 0030               1847mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017DA  6000 0006               1848mmm         BRA     DONE_69
000017DE  0601 0037               1849mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017E2  4E71                    1850mmm DONE_69: NOP
000017E4                          1851mmm         ENDM
000017E4  4E4F                    1852mm         TRAP    #15         ; EXECUTE OUTPUT
000017E6                          1853mm         
000017E6  3212                    1854mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017E8  E149                    1855mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017EA  E049                    1856mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017EC  E849                    1857mm         LSR.W   #4, D1      
000017EE                          1858mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017EE  0C01 0009               1859mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017F2  6E00 000A               1860mmm         BGT     ALPHA_70
000017F6  0601 0030               1861mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017FA  6000 0006               1862mmm         BRA     DONE_70
000017FE  0601 0037               1863mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001802  4E71                    1864mmm DONE_70: NOP
00001804                          1865mmm         ENDM
00001804  4E4F                    1866mm         TRAP    #15         ; EXECUTE OUTPUT
00001806                          1867mm         
00001806  3212                    1868mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001808  E149                    1869mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000180A  E949                    1870mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000180C  E049                    1871mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000180E  E849                    1872mm         LSR.W   #4, D1      
00001810                          1873mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001810  0C01 0009               1874mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001814  6E00 000A               1875mmm         BGT     ALPHA_71
00001818  0601 0030               1876mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000181C  6000 0006               1877mmm         BRA     DONE_71
00001820  0601 0037               1878mmm ALPHA_71: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001824  4E71                    1879mmm DONE_71: NOP
00001826                          1880mmm         ENDM
00001826  4E4F                    1881mm         TRAP    #15         ; EXECUTE OUTPUT   
00001828                          1882mm         ENDM     
00001828  3605                    1883m         MOVE.W  D5, D3
0000182A  6000 01B0               1884m         BRA     COMPLETE_26 
0000182E                          1885m ADRABSOLUTEW_26:     
0000182E  361A                    1886m         MOVE.W  (A2)+, D3
00001830                          1887mm         PRINTSIGN
00001830  103C 0006               1888mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001834  323C 0024               1889mm         MOVE.W  #36, D1     ; AN = SIGN
00001838  4E4F                    1890mm         TRAP    #15         ; OUTPUT = SIGN
0000183A                          1891mm         ENDM
0000183A                          1892mm         ADROUT
0000183A  103C 0006               1893mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000183E  3212                    1894mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001840  E049                    1895mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001842  E849                    1896mm         LSR.W   #4, D1      
00001844                          1897mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001844  0C01 0009               1898mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001848  6E00 000A               1899mmm         BGT     ALPHA_74
0000184C  0601 0030               1900mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001850  6000 0006               1901mmm         BRA     DONE_74
00001854  0601 0037               1902mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001858  4E71                    1903mmm DONE_74: NOP
0000185A                          1904mmm         ENDM
0000185A  4E4F                    1905mm         TRAP    #15         ; EXECUTE OUTPUT
0000185C                          1906mm         
0000185C  3212                    1907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000185E  E949                    1908mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001860  E049                    1909mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001862  E849                    1910mm         LSR.W   #4, D1      
00001864                          1911mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001864  0C01 0009               1912mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001868  6E00 000A               1913mmm         BGT     ALPHA_75
0000186C  0601 0030               1914mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001870  6000 0006               1915mmm         BRA     DONE_75
00001874  0601 0037               1916mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001878  4E71                    1917mmm DONE_75: NOP
0000187A                          1918mmm         ENDM
0000187A  4E4F                    1919mm         TRAP    #15         ; EXECUTE OUTPUT
0000187C                          1920mm         
0000187C  3212                    1921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000187E  E149                    1922mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001880  E049                    1923mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001882  E849                    1924mm         LSR.W   #4, D1      
00001884                          1925mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001884  0C01 0009               1926mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001888  6E00 000A               1927mmm         BGT     ALPHA_76
0000188C  0601 0030               1928mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001890  6000 0006               1929mmm         BRA     DONE_76
00001894  0601 0037               1930mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001898  4E71                    1931mmm DONE_76: NOP
0000189A                          1932mmm         ENDM
0000189A  4E4F                    1933mm         TRAP    #15         ; EXECUTE OUTPUT
0000189C                          1934mm         
0000189C  3212                    1935mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000189E  E149                    1936mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018A0  E949                    1937mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000018A2  E049                    1938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A4  E849                    1939mm         LSR.W   #4, D1      
000018A6                          1940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018A6  0C01 0009               1941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AA  6E00 000A               1942mmm         BGT     ALPHA_77
000018AE  0601 0030               1943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B2  6000 0006               1944mmm         BRA     DONE_77
000018B6  0601 0037               1945mmm ALPHA_77: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BA  4E71                    1946mmm DONE_77: NOP
000018BC                          1947mmm         ENDM
000018BC  4E4F                    1948mm         TRAP    #15         ; EXECUTE OUTPUT   
000018BE                          1949mm         ENDM     
000018BE  3605                    1950m         MOVE.W  D5, D3
000018C0  6000 011A               1951m         BRA     COMPLETE_26  
000018C4                          1952m ADRABSOLUTEL_26:  
000018C4  361A                    1953m         MOVE.W  (A2)+, D3
000018C6                          1954mm         PRINTSIGN
000018C6  103C 0006               1955mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018CA  323C 0024               1956mm         MOVE.W  #36, D1     ; AN = SIGN
000018CE  4E4F                    1957mm         TRAP    #15         ; OUTPUT = SIGN
000018D0                          1958mm         ENDM
000018D0                          1959mm         ADROUT 
000018D0  103C 0006               1960mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018D4  3212                    1961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018D6  E049                    1962mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018D8  E849                    1963mm         LSR.W   #4, D1      
000018DA                          1964mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018DA  0C01 0009               1965mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018DE  6E00 000A               1966mmm         BGT     ALPHA_80
000018E2  0601 0030               1967mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018E6  6000 0006               1968mmm         BRA     DONE_80
000018EA  0601 0037               1969mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018EE  4E71                    1970mmm DONE_80: NOP
000018F0                          1971mmm         ENDM
000018F0  4E4F                    1972mm         TRAP    #15         ; EXECUTE OUTPUT
000018F2                          1973mm         
000018F2  3212                    1974mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018F4  E949                    1975mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018F6  E049                    1976mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018F8  E849                    1977mm         LSR.W   #4, D1      
000018FA                          1978mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018FA  0C01 0009               1979mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018FE  6E00 000A               1980mmm         BGT     ALPHA_81
00001902  0601 0030               1981mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001906  6000 0006               1982mmm         BRA     DONE_81
0000190A  0601 0037               1983mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000190E  4E71                    1984mmm DONE_81: NOP
00001910                          1985mmm         ENDM
00001910  4E4F                    1986mm         TRAP    #15         ; EXECUTE OUTPUT
00001912                          1987mm         
00001912  3212                    1988mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001914  E149                    1989mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001916  E049                    1990mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001918  E849                    1991mm         LSR.W   #4, D1      
0000191A                          1992mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000191A  0C01 0009               1993mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000191E  6E00 000A               1994mmm         BGT     ALPHA_82
00001922  0601 0030               1995mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001926  6000 0006               1996mmm         BRA     DONE_82
0000192A  0601 0037               1997mmm ALPHA_82: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000192E  4E71                    1998mmm DONE_82: NOP
00001930                          1999mmm         ENDM
00001930  4E4F                    2000mm         TRAP    #15         ; EXECUTE OUTPUT
00001932                          2001mm         
00001932  3212                    2002mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001934  E149                    2003mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001936  E949                    2004mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001938  E049                    2005mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000193A  E849                    2006mm         LSR.W   #4, D1      
0000193C                          2007mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000193C  0C01 0009               2008mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001940  6E00 000A               2009mmm         BGT     ALPHA_83
00001944  0601 0030               2010mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001948  6000 0006               2011mmm         BRA     DONE_83
0000194C  0601 0037               2012mmm ALPHA_83: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001950  4E71                    2013mmm DONE_83: NOP
00001952                          2014mmm         ENDM
00001952  4E4F                    2015mm         TRAP    #15         ; EXECUTE OUTPUT   
00001954                          2016mm         ENDM     
00001954  361A                    2017m         MOVE.W  (A2)+, D3
00001956                          2018mm         ADROUT
00001956  103C 0006               2019mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000195A  3212                    2020mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000195C  E049                    2021mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000195E  E849                    2022mm         LSR.W   #4, D1      
00001960                          2023mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001960  0C01 0009               2024mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001964  6E00 000A               2025mmm         BGT     ALPHA_85
00001968  0601 0030               2026mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000196C  6000 0006               2027mmm         BRA     DONE_85
00001970  0601 0037               2028mmm ALPHA_85: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001974  4E71                    2029mmm DONE_85: NOP
00001976                          2030mmm         ENDM
00001976  4E4F                    2031mm         TRAP    #15         ; EXECUTE OUTPUT
00001978                          2032mm         
00001978  3212                    2033mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000197A  E949                    2034mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000197C  E049                    2035mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000197E  E849                    2036mm         LSR.W   #4, D1      
00001980                          2037mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001980  0C01 0009               2038mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001984  6E00 000A               2039mmm         BGT     ALPHA_86
00001988  0601 0030               2040mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000198C  6000 0006               2041mmm         BRA     DONE_86
00001990  0601 0037               2042mmm ALPHA_86: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001994  4E71                    2043mmm DONE_86: NOP
00001996                          2044mmm         ENDM
00001996  4E4F                    2045mm         TRAP    #15         ; EXECUTE OUTPUT
00001998                          2046mm         
00001998  3212                    2047mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000199A  E149                    2048mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000199C  E049                    2049mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000199E  E849                    2050mm         LSR.W   #4, D1      
000019A0                          2051mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000019A0  0C01 0009               2052mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000019A4  6E00 000A               2053mmm         BGT     ALPHA_87
000019A8  0601 0030               2054mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000019AC  6000 0006               2055mmm         BRA     DONE_87
000019B0  0601 0037               2056mmm ALPHA_87: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000019B4  4E71                    2057mmm DONE_87: NOP
000019B6                          2058mmm         ENDM
000019B6  4E4F                    2059mm         TRAP    #15         ; EXECUTE OUTPUT
000019B8                          2060mm         
000019B8  3212                    2061mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000019BA  E149                    2062mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000019BC  E949                    2063mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000019BE  E049                    2064mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000019C0  E849                    2065mm         LSR.W   #4, D1      
000019C2                          2066mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000019C2  0C01 0009               2067mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000019C6  6E00 000A               2068mmm         BGT     ALPHA_88
000019CA  0601 0030               2069mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000019CE  6000 0006               2070mmm         BRA     DONE_88
000019D2  0601 0037               2071mmm ALPHA_88: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000019D6  4E71                    2072mmm DONE_88: NOP
000019D8                          2073mmm         ENDM
000019D8  4E4F                    2074mm         TRAP    #15         ; EXECUTE OUTPUT   
000019DA                          2075mm         ENDM     
000019DA  3605                    2076m         MOVE.W  D5, D3
000019DC                          2077m 
000019DC                          2078m COMPLETE_26:  ; OPCODE HAS BEEN VERIFIED
000019DC                          2079m         ENDM
000019DC                          2080m         printComma
000019DC  43F8 00D4               2081m         LEA     OCOMMA, A1     
000019E0  103C 000E               2082m         MOVE.B  #14,D0          
000019E4  4E4F                    2083m         TRAP    #15
000019E6                          2084m         ENDM
000019E6                          2085m         prepareAdrMode  #$0,  D3
000019E6  3C3C 0000               2086m         MOVE.W  #$0, D6      ; INPUT VALUE
000019EA  3203                    2087m         MOVE.W  D3, D1
000019EC  BC3C 0001               2088m         CMP.B   #$01, D6
000019F0  6700 000C               2089m         BEQ     ADRSOURCE_90    
000019F4                          2090m ADRDEST_90:
000019F4  EF49                    2091m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000019F6  E049                    2092m         LSR     #$08, D1
000019F8  EA49                    2093m         LSR     #$05, D1
000019FA  6000 000A               2094m         BRA     COMPLETE_90 
000019FE                          2095m ADRSOURCE_90:                
000019FE  E149                    2096m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00001A00  E549                    2097m         LSL     #$02, D1
00001A02  E049                    2098m         LSR     #$08, D1
00001A04  EA49                    2099m         LSR     #$05, D1
00001A06                          2100m COMPLETE_90:  ; OPCODE HAS BEEN VERIFIED
00001A06                          2101m         ENDM        
00001A06                          2102m         decodeAdrMode   D3, D1
00001A06  3603                    2103m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
00001A08  3201                    2104m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001A0A                          2105m 
00001A0A  B23C 0001               2106m         CMP.B   #$01, D1
00001A0E  6700 0066               2107m         BEQ     ADRREGDIRECT_91    
00001A12  B23C 0002               2108m         CMP.B   #$02, D1
00001A16  6700 00A0               2109m         BEQ     ADRREGINDIRECT_91  
00001A1A  B23C 0003               2110m         CMP.B   #$03, D1
00001A1E  6700 0102               2111m         BEQ     ADRREGPOSTINC_91  
00001A22  B23C 0004               2112m         CMP.B   #$04, D1
00001A26  6700 0178               2113m         BEQ     ADRREGPREDEC_91
00001A2A  B23C 0007               2114m         CMP.B   #$07, D1
00001A2E  6700 01EE               2115m         BEQ     ADRABSOLUTE_91    
00001A32                          2116m         
00001A32                          2117m DATAREGDIRECT_91: 
00001A32  BC3C 0001               2118m         CMP.B   #$01, D6
00001A36  6700 001E               2119m         BEQ     DATAREGDIRECTSRC_91   
00001A3A                          2120m DATAREGDIRECTDEST_91: 
00001A3A                          2121mm         PRINTDNDEST D3 
00001A3A  3203                    2122mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001A3C  E949                    2123mm         LSL     #$04, D1
00001A3E  E049                    2124mm         LSR     #$08, D1
00001A40  EA49                    2125mm         LSR     #$05, D1
00001A42  43F8 00CC               2126mm         LEA     ODN, A1     
00001A46  103C 000E               2127mm         MOVE.B  #14,D0          
00001A4A  4E4F                    2128mm         TRAP    #15
00001A4C  103C 0003               2129mm         MOVE.B  #3,D0          
00001A50  4E4F                    2130mm         TRAP    #15
00001A52                          2131mm         ENDM
00001A52  6000 057A               2132m         BRA     COMPLETE_91 
00001A56                          2133m DATAREGDIRECTSRC_91: 
00001A56                          2134mm         PRINTDNSRC D3 
00001A56  4281                    2135mm         CLR.L   D1
00001A58  3203                    2136mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A5A  E149                    2137mm         LSL     #$08, D1
00001A5C  EB49                    2138mm         LSL     #$05, D1
00001A5E  E049                    2139mm         LSR     #$08, D1
00001A60  EA49                    2140mm         LSR     #$05, D1
00001A62  43F8 00CC               2141mm         LEA     ODN, A1     
00001A66  103C 000E               2142mm         MOVE.B  #14,D0          
00001A6A  4E4F                    2143mm         TRAP    #15
00001A6C  103C 0003               2144mm         MOVE.B  #3,D0          
00001A70  4E4F                    2145mm         TRAP    #15
00001A72                          2146mm         ENDM
00001A72  6000 055A               2147m         BRA     COMPLETE_91   
00001A76                          2148m         
00001A76                          2149m ADRREGDIRECT_91: 
00001A76  BC3C 0001               2150m         CMP.B   #$01, D6
00001A7A  6700 001E               2151m         BEQ     ADRREGDIRECTSRC_91   
00001A7E                          2152m ADRREGDIRECTDEST_91:
00001A7E                          2153mm         PRINTANDEST D3
00001A7E  3203                    2154mm         MOVE.W  D3, D1
00001A80  E949                    2155mm         LSL     #$04, D1 ; BITS 9 TO 11
00001A82  E049                    2156mm         LSR     #$08, D1
00001A84  EA49                    2157mm         LSR     #$05, D1
00001A86  43F8 00CE               2158mm         LEA     OAN, A1     
00001A8A  103C 000E               2159mm         MOVE.B  #14,D0          
00001A8E  4E4F                    2160mm         TRAP    #15
00001A90  103C 0003               2161mm         MOVE.B  #3,D0          
00001A94  4E4F                    2162mm         TRAP    #15
00001A96                          2163mm         ENDM
00001A96  6000 0536               2164m         BRA     COMPLETE_91   
00001A9A                          2165m ADRREGDIRECTSRC_91:
00001A9A                          2166mm         PRINTANSRC D3
00001A9A  3203                    2167mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A9C  E149                    2168mm         LSL     #$08, D1
00001A9E  EB49                    2169mm         LSL     #$05, D1
00001AA0  E049                    2170mm         LSR     #$08, D1
00001AA2  EA49                    2171mm         LSR     #$05, D1
00001AA4  43F8 00CE               2172mm         LEA     OAN, A1     
00001AA8  103C 000E               2173mm         MOVE.B  #14,D0          
00001AAC  4E4F                    2174mm         TRAP    #15
00001AAE  103C 0003               2175mm         MOVE.B  #3,D0          
00001AB2  4E4F                    2176mm         TRAP    #15
00001AB4                          2177mm         ENDM
00001AB4  6000 0518               2178m         BRA     COMPLETE_91   
00001AB8                          2179m        
00001AB8                          2180m ADRREGINDIRECT_91:   
00001AB8  BC3C 0001               2181m         CMP.B   #$01, D6
00001ABC  6700 0032               2182m         BEQ     ADRREGINDIRECTSRC_91   
00001AC0                          2183m ADRREGINDIRECTDEST_91:
00001AC0                          2184mm         PRINTLB
00001AC0  43F8 00D0               2185mm         LEA     OLB, A1     
00001AC4  103C 000E               2186mm         MOVE.B  #14,D0          
00001AC8  4E4F                    2187mm         TRAP    #15
00001ACA                          2188mm         ENDM
00001ACA                          2189mm         PRINTANDEST D3  
00001ACA  3203                    2190mm         MOVE.W  D3, D1
00001ACC  E949                    2191mm         LSL     #$04, D1 ; BITS 9 TO 11
00001ACE  E049                    2192mm         LSR     #$08, D1
00001AD0  EA49                    2193mm         LSR     #$05, D1
00001AD2  43F8 00CE               2194mm         LEA     OAN, A1     
00001AD6  103C 000E               2195mm         MOVE.B  #14,D0          
00001ADA  4E4F                    2196mm         TRAP    #15
00001ADC  103C 0003               2197mm         MOVE.B  #3,D0          
00001AE0  4E4F                    2198mm         TRAP    #15
00001AE2                          2199mm         ENDM
00001AE2                          2200mm         PRINTRB
00001AE2  43F8 00D2               2201mm         LEA     ORB, A1     
00001AE6  103C 000E               2202mm         MOVE.B  #14,D0          
00001AEA  4E4F                    2203mm         TRAP    #15
00001AEC                          2204mm         ENDM
00001AEC  6000 04E0               2205m         BRA     COMPLETE_91     
00001AF0                          2206m ADRREGINDIRECTSRC_91:   
00001AF0                          2207mm         PRINTLB
00001AF0  43F8 00D0               2208mm         LEA     OLB, A1     
00001AF4  103C 000E               2209mm         MOVE.B  #14,D0          
00001AF8  4E4F                    2210mm         TRAP    #15
00001AFA                          2211mm         ENDM
00001AFA                          2212mm         PRINTANSRC D3  
00001AFA  3203                    2213mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001AFC  E149                    2214mm         LSL     #$08, D1
00001AFE  EB49                    2215mm         LSL     #$05, D1
00001B00  E049                    2216mm         LSR     #$08, D1
00001B02  EA49                    2217mm         LSR     #$05, D1
00001B04  43F8 00CE               2218mm         LEA     OAN, A1     
00001B08  103C 000E               2219mm         MOVE.B  #14,D0          
00001B0C  4E4F                    2220mm         TRAP    #15
00001B0E  103C 0003               2221mm         MOVE.B  #3,D0          
00001B12  4E4F                    2222mm         TRAP    #15
00001B14                          2223mm         ENDM
00001B14                          2224mm         PRINTRB
00001B14  43F8 00D2               2225mm         LEA     ORB, A1     
00001B18  103C 000E               2226mm         MOVE.B  #14,D0          
00001B1C  4E4F                    2227mm         TRAP    #15
00001B1E                          2228mm         ENDM
00001B1E  6000 04AE               2229m         BRA     COMPLETE_91   
00001B22                          2230m         
00001B22                          2231m ADRREGPOSTINC_91:   
00001B22  BC3C 0001               2232m         CMP.B   #$01, D6
00001B26  6700 003C               2233m         BEQ     ADRREGPOSTINCSRC_91   
00001B2A                          2234m ADRREGPOSTINCDEST_91: 
00001B2A                          2235mm         PRINTLB
00001B2A  43F8 00D0               2236mm         LEA     OLB, A1     
00001B2E  103C 000E               2237mm         MOVE.B  #14,D0          
00001B32  4E4F                    2238mm         TRAP    #15
00001B34                          2239mm         ENDM
00001B34                          2240mm         PRINTANDEST D3  
00001B34  3203                    2241mm         MOVE.W  D3, D1
00001B36  E949                    2242mm         LSL     #$04, D1 ; BITS 9 TO 11
00001B38  E049                    2243mm         LSR     #$08, D1
00001B3A  EA49                    2244mm         LSR     #$05, D1
00001B3C  43F8 00CE               2245mm         LEA     OAN, A1     
00001B40  103C 000E               2246mm         MOVE.B  #14,D0          
00001B44  4E4F                    2247mm         TRAP    #15
00001B46  103C 0003               2248mm         MOVE.B  #3,D0          
00001B4A  4E4F                    2249mm         TRAP    #15
00001B4C                          2250mm         ENDM
00001B4C                          2251mm         PRINTRB
00001B4C  43F8 00D2               2252mm         LEA     ORB, A1     
00001B50  103C 000E               2253mm         MOVE.B  #14,D0          
00001B54  4E4F                    2254mm         TRAP    #15
00001B56                          2255mm         ENDM
00001B56                          2256mm         PRINTPI
00001B56  43F8 00D9               2257mm         LEA     OPSTINC, A1     
00001B5A  103C 000E               2258mm         MOVE.B  #14,D0          
00001B5E  4E4F                    2259mm         TRAP    #15
00001B60                          2260mm         ENDM
00001B60  6000 046C               2261m         BRA     COMPLETE_91  
00001B64                          2262m ADRREGPOSTINCSRC_91:           
00001B64                          2263mm         PRINTLB
00001B64  43F8 00D0               2264mm         LEA     OLB, A1     
00001B68  103C 000E               2265mm         MOVE.B  #14,D0          
00001B6C  4E4F                    2266mm         TRAP    #15
00001B6E                          2267mm         ENDM
00001B6E                          2268mm         PRINTANSRC D3  
00001B6E  3203                    2269mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B70  E149                    2270mm         LSL     #$08, D1
00001B72  EB49                    2271mm         LSL     #$05, D1
00001B74  E049                    2272mm         LSR     #$08, D1
00001B76  EA49                    2273mm         LSR     #$05, D1
00001B78  43F8 00CE               2274mm         LEA     OAN, A1     
00001B7C  103C 000E               2275mm         MOVE.B  #14,D0          
00001B80  4E4F                    2276mm         TRAP    #15
00001B82  103C 0003               2277mm         MOVE.B  #3,D0          
00001B86  4E4F                    2278mm         TRAP    #15
00001B88                          2279mm         ENDM
00001B88                          2280mm         PRINTRB
00001B88  43F8 00D2               2281mm         LEA     ORB, A1     
00001B8C  103C 000E               2282mm         MOVE.B  #14,D0          
00001B90  4E4F                    2283mm         TRAP    #15
00001B92                          2284mm         ENDM
00001B92                          2285mm         PRINTPI
00001B92  43F8 00D9               2286mm         LEA     OPSTINC, A1     
00001B96  103C 000E               2287mm         MOVE.B  #14,D0          
00001B9A  4E4F                    2288mm         TRAP    #15
00001B9C                          2289mm         ENDM
00001B9C  6000 0430               2290m         BRA     COMPLETE_91  
00001BA0                          2291m ADRREGPREDEC_91: 
00001BA0  BC3C 0001               2292m         CMP.B   #$01, D6
00001BA4  6700 003C               2293m         BEQ     ADRREGPREDECSRC_91   
00001BA8                          2294m ADRREGPREDECDEST_91:
00001BA8                          2295mm         PRINTPD  
00001BA8  43F8 00D7               2296mm         LEA     OPREDEC, A1     
00001BAC  103C 000E               2297mm         MOVE.B  #14,D0          
00001BB0  4E4F                    2298mm         TRAP    #15
00001BB2                          2299mm         ENDM
00001BB2                          2300mm         PRINTLB
00001BB2  43F8 00D0               2301mm         LEA     OLB, A1     
00001BB6  103C 000E               2302mm         MOVE.B  #14,D0          
00001BBA  4E4F                    2303mm         TRAP    #15
00001BBC                          2304mm         ENDM
00001BBC                          2305mm         PRINTANDEST D3  
00001BBC  3203                    2306mm         MOVE.W  D3, D1
00001BBE  E949                    2307mm         LSL     #$04, D1 ; BITS 9 TO 11
00001BC0  E049                    2308mm         LSR     #$08, D1
00001BC2  EA49                    2309mm         LSR     #$05, D1
00001BC4  43F8 00CE               2310mm         LEA     OAN, A1     
00001BC8  103C 000E               2311mm         MOVE.B  #14,D0          
00001BCC  4E4F                    2312mm         TRAP    #15
00001BCE  103C 0003               2313mm         MOVE.B  #3,D0          
00001BD2  4E4F                    2314mm         TRAP    #15
00001BD4                          2315mm         ENDM
00001BD4                          2316mm         PRINTRB
00001BD4  43F8 00D2               2317mm         LEA     ORB, A1     
00001BD8  103C 000E               2318mm         MOVE.B  #14,D0          
00001BDC  4E4F                    2319mm         TRAP    #15
00001BDE                          2320mm         ENDM
00001BDE  6000 03EE               2321m         BRA     COMPLETE_91   
00001BE2                          2322m ADRREGPREDECSRC_91: 
00001BE2                          2323mm         PRINTPD  
00001BE2  43F8 00D7               2324mm         LEA     OPREDEC, A1     
00001BE6  103C 000E               2325mm         MOVE.B  #14,D0          
00001BEA  4E4F                    2326mm         TRAP    #15
00001BEC                          2327mm         ENDM
00001BEC                          2328mm         PRINTLB
00001BEC  43F8 00D0               2329mm         LEA     OLB, A1     
00001BF0  103C 000E               2330mm         MOVE.B  #14,D0          
00001BF4  4E4F                    2331mm         TRAP    #15
00001BF6                          2332mm         ENDM
00001BF6                          2333mm         PRINTANSRC D3  
00001BF6  3203                    2334mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001BF8  E149                    2335mm         LSL     #$08, D1
00001BFA  EB49                    2336mm         LSL     #$05, D1
00001BFC  E049                    2337mm         LSR     #$08, D1
00001BFE  EA49                    2338mm         LSR     #$05, D1
00001C00  43F8 00CE               2339mm         LEA     OAN, A1     
00001C04  103C 000E               2340mm         MOVE.B  #14,D0          
00001C08  4E4F                    2341mm         TRAP    #15
00001C0A  103C 0003               2342mm         MOVE.B  #3,D0          
00001C0E  4E4F                    2343mm         TRAP    #15
00001C10                          2344mm         ENDM
00001C10                          2345mm         PRINTRB
00001C10  43F8 00D2               2346mm         LEA     ORB, A1     
00001C14  103C 000E               2347mm         MOVE.B  #14,D0          
00001C18  4E4F                    2348mm         TRAP    #15
00001C1A                          2349mm         ENDM
00001C1A  6000 03B2               2350m         BRA     COMPLETE_91
00001C1E                          2351m        
00001C1E                          2352m ADRABSOLUTE_91:
00001C1E  BC3C 0001               2353m         CMP.B   #$01, D6
00001C22  6600 0018               2354m         BNE     ADRABSOLUTEDST_91 
00001C26                          2355m         
00001C26  3A03                    2356m         MOVE.W  D3, D5
00001C28  0803 0002               2357m         BTST    #2, D3
00001C2C  6600 0024               2358m         BNE     ADRIMMEDIATE_91
00001C30  0803 0000               2359m         BTST    #0, D3
00001C34  6600 0280               2360m         BNE     ADRABSOLUTEL_91
00001C38  6000 01E6               2361m         BRA     ADRABSOLUTEW_91
00001C3C                          2362m ADRABSOLUTEDST_91:
00001C3C  3A03                    2363m         MOVE.W  D3, D5
00001C3E  0803 000B               2364m         BTST    #$B, D3
00001C42  6600 000E               2365m         BNE     ADRIMMEDIATE_91
00001C46  0803 0009               2366m         BTST    #$09, D3
00001C4A  6600 026A               2367m         BNE     ADRABSOLUTEL_91
00001C4E  6000 01D0               2368m         BRA     ADRABSOLUTEW_91
00001C52                          2369m ADRIMMEDIATE_91:
00001C52  BE3C 0001               2370m         CMP.B   #1, D7
00001C56  6700 00A2               2371m         BEQ     ADRIMMEDIATEL_91
00001C5A                          2372m ADRIMMEDIATEW_91:
00001C5A  361A                    2373m         MOVE.W  (A2)+, D3
00001C5C                          2374mm         PRINTHASH
00001C5C  103C 0006               2375mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C60  323C 0023               2376mm         MOVE.W  #35, D1     ; AN = SIGN
00001C64  4E4F                    2377mm         TRAP    #15         ; OUTPUT = SIGN
00001C66                          2378mm         ENDM
00001C66                          2379mm         PRINTSIGN
00001C66  103C 0006               2380mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C6A  323C 0024               2381mm         MOVE.W  #36, D1     ; AN = SIGN
00001C6E  4E4F                    2382mm         TRAP    #15         ; OUTPUT = SIGN
00001C70                          2383mm         ENDM
00001C70                          2384mm         ADROUT
00001C70  103C 0006               2385mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C74  3212                    2386mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C76  E049                    2387mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C78  E849                    2388mm         LSR.W   #4, D1      
00001C7A                          2389mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7A  0C01 0009               2390mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C7E  6E00 000A               2391mmm         BGT     ALPHA_121
00001C82  0601 0030               2392mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C86  6000 0006               2393mmm         BRA     DONE_121
00001C8A  0601 0037               2394mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C8E  4E71                    2395mmm DONE_121: NOP
00001C90                          2396mmm         ENDM
00001C90  4E4F                    2397mm         TRAP    #15         ; EXECUTE OUTPUT
00001C92                          2398mm         
00001C92  3212                    2399mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C94  E949                    2400mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C96  E049                    2401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C98  E849                    2402mm         LSR.W   #4, D1      
00001C9A                          2403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9A  0C01 0009               2404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C9E  6E00 000A               2405mmm         BGT     ALPHA_122
00001CA2  0601 0030               2406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CA6  6000 0006               2407mmm         BRA     DONE_122
00001CAA  0601 0037               2408mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CAE  4E71                    2409mmm DONE_122: NOP
00001CB0                          2410mmm         ENDM
00001CB0  4E4F                    2411mm         TRAP    #15         ; EXECUTE OUTPUT
00001CB2                          2412mm         
00001CB2  3212                    2413mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB4  E149                    2414mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CB6  E049                    2415mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CB8  E849                    2416mm         LSR.W   #4, D1      
00001CBA                          2417mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CBA  0C01 0009               2418mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CBE  6E00 000A               2419mmm         BGT     ALPHA_123
00001CC2  0601 0030               2420mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CC6  6000 0006               2421mmm         BRA     DONE_123
00001CCA  0601 0037               2422mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CCE  4E71                    2423mmm DONE_123: NOP
00001CD0                          2424mmm         ENDM
00001CD0  4E4F                    2425mm         TRAP    #15         ; EXECUTE OUTPUT
00001CD2                          2426mm         
00001CD2  3212                    2427mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CD4  E149                    2428mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CD6  E949                    2429mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001CD8  E049                    2430mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDA  E849                    2431mm         LSR.W   #4, D1      
00001CDC                          2432mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDC  0C01 0009               2433mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE0  6E00 000A               2434mmm         BGT     ALPHA_124
00001CE4  0601 0030               2435mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CE8  6000 0006               2436mmm         BRA     DONE_124
00001CEC  0601 0037               2437mmm ALPHA_124: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF0  4E71                    2438mmm DONE_124: NOP
00001CF2                          2439mmm         ENDM
00001CF2  4E4F                    2440mm         TRAP    #15         ; EXECUTE OUTPUT   
00001CF4                          2441mm         ENDM     
00001CF4  3605                    2442m         MOVE.W  D5, D3
00001CF6  6000 02D6               2443m         BRA     COMPLETE_91
00001CFA                          2444m ADRIMMEDIATEL_91:
00001CFA  361A                    2445m         MOVE.W  (A2)+, D3
00001CFC                          2446mm         PRINTHASH
00001CFC  103C 0006               2447mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D00  323C 0023               2448mm         MOVE.W  #35, D1     ; AN = SIGN
00001D04  4E4F                    2449mm         TRAP    #15         ; OUTPUT = SIGN
00001D06                          2450mm         ENDM
00001D06                          2451mm         PRINTSIGN
00001D06  103C 0006               2452mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D0A  323C 0024               2453mm         MOVE.W  #36, D1     ; AN = SIGN
00001D0E  4E4F                    2454mm         TRAP    #15         ; OUTPUT = SIGN
00001D10                          2455mm         ENDM
00001D10                          2456mm         ADROUT 
00001D10  103C 0006               2457mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D14  3212                    2458mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D16  E049                    2459mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D18  E849                    2460mm         LSR.W   #4, D1      
00001D1A                          2461mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1A  0C01 0009               2462mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D1E  6E00 000A               2463mmm         BGT     ALPHA_128
00001D22  0601 0030               2464mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D26  6000 0006               2465mmm         BRA     DONE_128
00001D2A  0601 0037               2466mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D2E  4E71                    2467mmm DONE_128: NOP
00001D30                          2468mmm         ENDM
00001D30  4E4F                    2469mm         TRAP    #15         ; EXECUTE OUTPUT
00001D32                          2470mm         
00001D32  3212                    2471mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D34  E949                    2472mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D36  E049                    2473mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D38  E849                    2474mm         LSR.W   #4, D1      
00001D3A                          2475mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D3A  0C01 0009               2476mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D3E  6E00 000A               2477mmm         BGT     ALPHA_129
00001D42  0601 0030               2478mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D46  6000 0006               2479mmm         BRA     DONE_129
00001D4A  0601 0037               2480mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D4E  4E71                    2481mmm DONE_129: NOP
00001D50                          2482mmm         ENDM
00001D50  4E4F                    2483mm         TRAP    #15         ; EXECUTE OUTPUT
00001D52                          2484mm         
00001D52  3212                    2485mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D54  E149                    2486mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D56  E049                    2487mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D58  E849                    2488mm         LSR.W   #4, D1      
00001D5A                          2489mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D5A  0C01 0009               2490mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D5E  6E00 000A               2491mmm         BGT     ALPHA_130
00001D62  0601 0030               2492mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D66  6000 0006               2493mmm         BRA     DONE_130
00001D6A  0601 0037               2494mmm ALPHA_130: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D6E  4E71                    2495mmm DONE_130: NOP
00001D70                          2496mmm         ENDM
00001D70  4E4F                    2497mm         TRAP    #15         ; EXECUTE OUTPUT
00001D72                          2498mm         
00001D72  3212                    2499mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D74  E149                    2500mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D76  E949                    2501mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D78  E049                    2502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D7A  E849                    2503mm         LSR.W   #4, D1      
00001D7C                          2504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D7C  0C01 0009               2505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D80  6E00 000A               2506mmm         BGT     ALPHA_131
00001D84  0601 0030               2507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D88  6000 0006               2508mmm         BRA     DONE_131
00001D8C  0601 0037               2509mmm ALPHA_131: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D90  4E71                    2510mmm DONE_131: NOP
00001D92                          2511mmm         ENDM
00001D92  4E4F                    2512mm         TRAP    #15         ; EXECUTE OUTPUT   
00001D94                          2513mm         ENDM     
00001D94  361A                    2514m         MOVE.W  (A2)+, D3
00001D96                          2515mm         ADROUT
00001D96  103C 0006               2516mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D9A  3212                    2517mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D9C  E049                    2518mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D9E  E849                    2519mm         LSR.W   #4, D1      
00001DA0                          2520mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DA0  0C01 0009               2521mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DA4  6E00 000A               2522mmm         BGT     ALPHA_133
00001DA8  0601 0030               2523mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DAC  6000 0006               2524mmm         BRA     DONE_133
00001DB0  0601 0037               2525mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DB4  4E71                    2526mmm DONE_133: NOP
00001DB6                          2527mmm         ENDM
00001DB6  4E4F                    2528mm         TRAP    #15         ; EXECUTE OUTPUT
00001DB8                          2529mm         
00001DB8  3212                    2530mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DBA  E949                    2531mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DBC  E049                    2532mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DBE  E849                    2533mm         LSR.W   #4, D1      
00001DC0                          2534mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DC0  0C01 0009               2535mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DC4  6E00 000A               2536mmm         BGT     ALPHA_134
00001DC8  0601 0030               2537mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DCC  6000 0006               2538mmm         BRA     DONE_134
00001DD0  0601 0037               2539mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DD4  4E71                    2540mmm DONE_134: NOP
00001DD6                          2541mmm         ENDM
00001DD6  4E4F                    2542mm         TRAP    #15         ; EXECUTE OUTPUT
00001DD8                          2543mm         
00001DD8  3212                    2544mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDA  E149                    2545mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DDC  E049                    2546mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DDE  E849                    2547mm         LSR.W   #4, D1      
00001DE0                          2548mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE0  0C01 0009               2549mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DE4  6E00 000A               2550mmm         BGT     ALPHA_135
00001DE8  0601 0030               2551mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DEC  6000 0006               2552mmm         BRA     DONE_135
00001DF0  0601 0037               2553mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DF4  4E71                    2554mmm DONE_135: NOP
00001DF6                          2555mmm         ENDM
00001DF6  4E4F                    2556mm         TRAP    #15         ; EXECUTE OUTPUT
00001DF8                          2557mm         
00001DF8  3212                    2558mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DFA  E149                    2559mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DFC  E949                    2560mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DFE  E049                    2561mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E00  E849                    2562mm         LSR.W   #4, D1      
00001E02                          2563mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E02  0C01 0009               2564mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E06  6E00 000A               2565mmm         BGT     ALPHA_136
00001E0A  0601 0030               2566mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E0E  6000 0006               2567mmm         BRA     DONE_136
00001E12  0601 0037               2568mmm ALPHA_136: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E16  4E71                    2569mmm DONE_136: NOP
00001E18                          2570mmm         ENDM
00001E18  4E4F                    2571mm         TRAP    #15         ; EXECUTE OUTPUT   
00001E1A                          2572mm         ENDM     
00001E1A  3605                    2573m         MOVE.W  D5, D3
00001E1C  6000 01B0               2574m         BRA     COMPLETE_91 
00001E20                          2575m ADRABSOLUTEW_91:     
00001E20  361A                    2576m         MOVE.W  (A2)+, D3
00001E22                          2577mm         PRINTSIGN
00001E22  103C 0006               2578mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E26  323C 0024               2579mm         MOVE.W  #36, D1     ; AN = SIGN
00001E2A  4E4F                    2580mm         TRAP    #15         ; OUTPUT = SIGN
00001E2C                          2581mm         ENDM
00001E2C                          2582mm         ADROUT
00001E2C  103C 0006               2583mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E30  3212                    2584mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E32  E049                    2585mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E34  E849                    2586mm         LSR.W   #4, D1      
00001E36                          2587mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E36  0C01 0009               2588mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E3A  6E00 000A               2589mmm         BGT     ALPHA_139
00001E3E  0601 0030               2590mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E42  6000 0006               2591mmm         BRA     DONE_139
00001E46  0601 0037               2592mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E4A  4E71                    2593mmm DONE_139: NOP
00001E4C                          2594mmm         ENDM
00001E4C  4E4F                    2595mm         TRAP    #15         ; EXECUTE OUTPUT
00001E4E                          2596mm         
00001E4E  3212                    2597mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E50  E949                    2598mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E52  E049                    2599mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E54  E849                    2600mm         LSR.W   #4, D1      
00001E56                          2601mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E56  0C01 0009               2602mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E5A  6E00 000A               2603mmm         BGT     ALPHA_140
00001E5E  0601 0030               2604mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E62  6000 0006               2605mmm         BRA     DONE_140
00001E66  0601 0037               2606mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E6A  4E71                    2607mmm DONE_140: NOP
00001E6C                          2608mmm         ENDM
00001E6C  4E4F                    2609mm         TRAP    #15         ; EXECUTE OUTPUT
00001E6E                          2610mm         
00001E6E  3212                    2611mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E70  E149                    2612mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E72  E049                    2613mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E74  E849                    2614mm         LSR.W   #4, D1      
00001E76                          2615mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E76  0C01 0009               2616mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E7A  6E00 000A               2617mmm         BGT     ALPHA_141
00001E7E  0601 0030               2618mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E82  6000 0006               2619mmm         BRA     DONE_141
00001E86  0601 0037               2620mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E8A  4E71                    2621mmm DONE_141: NOP
00001E8C                          2622mmm         ENDM
00001E8C  4E4F                    2623mm         TRAP    #15         ; EXECUTE OUTPUT
00001E8E                          2624mm         
00001E8E  3212                    2625mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E90  E149                    2626mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E92  E949                    2627mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E94  E049                    2628mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E96  E849                    2629mm         LSR.W   #4, D1      
00001E98                          2630mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E98  0C01 0009               2631mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E9C  6E00 000A               2632mmm         BGT     ALPHA_142
00001EA0  0601 0030               2633mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EA4  6000 0006               2634mmm         BRA     DONE_142
00001EA8  0601 0037               2635mmm ALPHA_142: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EAC  4E71                    2636mmm DONE_142: NOP
00001EAE                          2637mmm         ENDM
00001EAE  4E4F                    2638mm         TRAP    #15         ; EXECUTE OUTPUT   
00001EB0                          2639mm         ENDM     
00001EB0  3605                    2640m         MOVE.W  D5, D3
00001EB2  6000 011A               2641m         BRA     COMPLETE_91  
00001EB6                          2642m ADRABSOLUTEL_91:  
00001EB6  361A                    2643m         MOVE.W  (A2)+, D3
00001EB8                          2644mm         PRINTSIGN
00001EB8  103C 0006               2645mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EBC  323C 0024               2646mm         MOVE.W  #36, D1     ; AN = SIGN
00001EC0  4E4F                    2647mm         TRAP    #15         ; OUTPUT = SIGN
00001EC2                          2648mm         ENDM
00001EC2                          2649mm         ADROUT 
00001EC2  103C 0006               2650mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EC6  3212                    2651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EC8  E049                    2652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001ECA  E849                    2653mm         LSR.W   #4, D1      
00001ECC                          2654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001ECC  0C01 0009               2655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001ED0  6E00 000A               2656mmm         BGT     ALPHA_145
00001ED4  0601 0030               2657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001ED8  6000 0006               2658mmm         BRA     DONE_145
00001EDC  0601 0037               2659mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EE0  4E71                    2660mmm DONE_145: NOP
00001EE2                          2661mmm         ENDM
00001EE2  4E4F                    2662mm         TRAP    #15         ; EXECUTE OUTPUT
00001EE4                          2663mm         
00001EE4  3212                    2664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EE6  E949                    2665mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001EE8  E049                    2666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EEA  E849                    2667mm         LSR.W   #4, D1      
00001EEC                          2668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EEC  0C01 0009               2669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EF0  6E00 000A               2670mmm         BGT     ALPHA_146
00001EF4  0601 0030               2671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EF8  6000 0006               2672mmm         BRA     DONE_146
00001EFC  0601 0037               2673mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F00  4E71                    2674mmm DONE_146: NOP
00001F02                          2675mmm         ENDM
00001F02  4E4F                    2676mm         TRAP    #15         ; EXECUTE OUTPUT
00001F04                          2677mm         
00001F04  3212                    2678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F06  E149                    2679mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F08  E049                    2680mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F0A  E849                    2681mm         LSR.W   #4, D1      
00001F0C                          2682mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F0C  0C01 0009               2683mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F10  6E00 000A               2684mmm         BGT     ALPHA_147
00001F14  0601 0030               2685mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F18  6000 0006               2686mmm         BRA     DONE_147
00001F1C  0601 0037               2687mmm ALPHA_147: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F20  4E71                    2688mmm DONE_147: NOP
00001F22                          2689mmm         ENDM
00001F22  4E4F                    2690mm         TRAP    #15         ; EXECUTE OUTPUT
00001F24                          2691mm         
00001F24  3212                    2692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F26  E149                    2693mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F28  E949                    2694mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F2A  E049                    2695mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F2C  E849                    2696mm         LSR.W   #4, D1      
00001F2E                          2697mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F2E  0C01 0009               2698mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F32  6E00 000A               2699mmm         BGT     ALPHA_148
00001F36  0601 0030               2700mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F3A  6000 0006               2701mmm         BRA     DONE_148
00001F3E  0601 0037               2702mmm ALPHA_148: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F42  4E71                    2703mmm DONE_148: NOP
00001F44                          2704mmm         ENDM
00001F44  4E4F                    2705mm         TRAP    #15         ; EXECUTE OUTPUT   
00001F46                          2706mm         ENDM     
00001F46  361A                    2707m         MOVE.W  (A2)+, D3
00001F48                          2708mm         ADROUT
00001F48  103C 0006               2709mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001F4C  3212                    2710mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F4E  E049                    2711mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F50  E849                    2712mm         LSR.W   #4, D1      
00001F52                          2713mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F52  0C01 0009               2714mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F56  6E00 000A               2715mmm         BGT     ALPHA_150
00001F5A  0601 0030               2716mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F5E  6000 0006               2717mmm         BRA     DONE_150
00001F62  0601 0037               2718mmm ALPHA_150: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F66  4E71                    2719mmm DONE_150: NOP
00001F68                          2720mmm         ENDM
00001F68  4E4F                    2721mm         TRAP    #15         ; EXECUTE OUTPUT
00001F6A                          2722mm         
00001F6A  3212                    2723mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F6C  E949                    2724mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001F6E  E049                    2725mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F70  E849                    2726mm         LSR.W   #4, D1      
00001F72                          2727mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F72  0C01 0009               2728mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F76  6E00 000A               2729mmm         BGT     ALPHA_151
00001F7A  0601 0030               2730mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F7E  6000 0006               2731mmm         BRA     DONE_151
00001F82  0601 0037               2732mmm ALPHA_151: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F86  4E71                    2733mmm DONE_151: NOP
00001F88                          2734mmm         ENDM
00001F88  4E4F                    2735mm         TRAP    #15         ; EXECUTE OUTPUT
00001F8A                          2736mm         
00001F8A  3212                    2737mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F8C  E149                    2738mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F8E  E049                    2739mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F90  E849                    2740mm         LSR.W   #4, D1      
00001F92                          2741mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F92  0C01 0009               2742mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F96  6E00 000A               2743mmm         BGT     ALPHA_152
00001F9A  0601 0030               2744mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F9E  6000 0006               2745mmm         BRA     DONE_152
00001FA2  0601 0037               2746mmm ALPHA_152: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001FA6  4E71                    2747mmm DONE_152: NOP
00001FA8                          2748mmm         ENDM
00001FA8  4E4F                    2749mm         TRAP    #15         ; EXECUTE OUTPUT
00001FAA                          2750mm         
00001FAA  3212                    2751mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001FAC  E149                    2752mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001FAE  E949                    2753mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001FB0  E049                    2754mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001FB2  E849                    2755mm         LSR.W   #4, D1      
00001FB4                          2756mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001FB4  0C01 0009               2757mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001FB8  6E00 000A               2758mmm         BGT     ALPHA_153
00001FBC  0601 0030               2759mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001FC0  6000 0006               2760mmm         BRA     DONE_153
00001FC4  0601 0037               2761mmm ALPHA_153: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001FC8  4E71                    2762mmm DONE_153: NOP
00001FCA                          2763mmm         ENDM
00001FCA  4E4F                    2764mm         TRAP    #15         ; EXECUTE OUTPUT   
00001FCC                          2765mm         ENDM     
00001FCC  3605                    2766m         MOVE.W  D5, D3
00001FCE                          2767m 
00001FCE                          2768m COMPLETE_91:  ; OPCODE HAS BEEN VERIFIED
00001FCE                          2769m         ENDM
00001FCE  4E75                    2770          RTS                 ; Return from decodeMOVE subroutine
00001FD0                          2771  
00001FD0                          2772  
00001FD0                          2773  ; ------------------------------------------------------------
00001FD0                          2774  ; 3. "decodeMOVEM" subroutine
00001FD0                          2775  ; Dylan
00001FD0                          2776  ;
00001FD0                          2777  ; Decode MOVEM by scanning register list masks. Currently not 
00001FD0                          2778  ; properly formatted so instead it just prints memory at location.
00001FD0                          2779  ; ------------------------------------------------------------
00001FD0                          2780  decodeMOVEM:
00001FD0                          2781m         verifyOpcode    pMOVEM, (A2)
00001FD0  43F8 0120               2782m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001FD4  3612                    2783m         MOVE.W  (A2), D3      ; INPUT VALUE
00001FD6  123C 000F               2784m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001FDA                          2785m         
00001FDA                          2786m LOOP_154: 
00001FDA  0C11 0030               2787m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001FDE  6700 000E               2788m         BEQ     CHECKFOR0_154
00001FE2  0C11 0031               2789m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001FE6  6700 0010               2790m         BEQ     CHECKFOR1_154
00001FEA  6000 0012               2791m         BRA     NEXT_154      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001FEE                          2792m         
00001FEE                          2793m CHECKFOR0_154: 
00001FEE  0303                    2794m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001FF0  6600 57B0               2795m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001FF4  6000 0008               2796m         BRA     NEXT_154
00001FF8                          2797m 
00001FF8                          2798m CHECKFOR1_154:
00001FF8  0303                    2799m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001FFA  6700 57A6               2800m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001FFE                          2801m 
00001FFE                          2802m NEXT_154: 
00001FFE  B23C 0000               2803m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002002  6700 0008               2804m         BEQ     COMPLETE_154  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002006  5301                    2805m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002008  1819                    2806m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000200A  60CE                    2807m         BRA     LOOP_154      ; BEGIN LOOP AGAIN
0000200C                          2808m 
0000200C                          2809m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
0000200C                          2810m         ENDM
0000200C  4EB9 000077A2           2811          JSR     outputData
00002012  4E75                    2812          RTS                 ; Return from decodeMOVEM subroutine
00002014                          2813  
00002014                          2814  
00002014                          2815  ; ------------------------------------------------------------
00002014                          2816  ; 4. "decodeADD" subroutine
00002014                          2817  ; Gary
00002014                          2818  ;
00002014                          2819  ; Decodes add by verifying, printing, checking the opmode(and size),
00002014                          2820  ; and decoding the adressing modes used.
00002014                          2821  ; ------------------------------------------------------------
00002014                          2822  decodeADD:
00002014                          2823m         verifyOpcode    pADD, (A2)
00002014  43F8 0131               2824m         LEA     PADD, A1      ; INPUT PATTERN STRING
00002018  3612                    2825m         MOVE.W  (A2), D3      ; INPUT VALUE
0000201A  123C 000F               2826m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000201E                          2827m         
0000201E                          2828m LOOP_155: 
0000201E  0C11 0030               2829m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002022  6700 000E               2830m         BEQ     CHECKFOR0_155
00002026  0C11 0031               2831m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000202A  6700 0010               2832m         BEQ     CHECKFOR1_155
0000202E  6000 0012               2833m         BRA     NEXT_155      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002032                          2834m         
00002032                          2835m CHECKFOR0_155: 
00002032  0303                    2836m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002034  6600 576C               2837m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002038  6000 0008               2838m         BRA     NEXT_155
0000203C                          2839m 
0000203C                          2840m CHECKFOR1_155:
0000203C  0303                    2841m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000203E  6700 5762               2842m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002042                          2843m 
00002042                          2844m NEXT_155: 
00002042  B23C 0000               2845m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002046  6700 0008               2846m         BEQ     COMPLETE_155  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000204A  5301                    2847m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000204C  1819                    2848m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000204E  60CE                    2849m         BRA     LOOP_155      ; BEGIN LOOP AGAIN
00002050                          2850m 
00002050                          2851m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
00002050                          2852m         ENDM
00002050  43F8 006F               2853          LEA     oADD, A1     
00002054  103C 000E               2854          MOVE.B  #14,D0          
00002058  4E4F                    2855          TRAP    #15
0000205A                          2856m         printOpMode     (A2)
0000205A  3612                    2857m         MOVE.W  (A2), D3      
0000205C  123C 0008               2858m         MOVE.B  #8, D1    
00002060  4246                    2859m         CLR     D6
00002062  4247                    2860m         CLR     D7
00002064                          2861m CHECKFORDESTDN_156: 
00002064  0303                    2862m         BTST    D1, D3      
00002066  6600 004C               2863m         BNE     CHECKFORSRCDN_156
0000206A  4EB9 00002142           2864m         JSR     NEXT_156
00002070  1C3C 0001               2865m         MOVE.B  #$1, D6
00002074  0303                    2866m         BTST    D1, D3      
00002076  6700 0014               2867m         BEQ     DESTDNW_156
0000207A                          2868m DESTDNL_156:        
0000207A  43F8 00C8               2869m         LEA     OLSIZE, A1     
0000207E  103C 000E               2870m         MOVE.B  #14,D0          
00002082  4E4F                    2871m         TRAP    #15
00002084  1E3C 0001               2872m         MOVE.B  #$1, D7
00002088  6000 00BC               2873m         BRA     COMPLETE_156 
0000208C                          2874m DESTDNW_156: 
0000208C  4EB9 00002142           2875m         JSR     NEXT_156
00002092  0303                    2876m         BTST    D1, D3      
00002094  6700 0010               2877m         BEQ     DESTDNB_156
00002098  43F8 00C4               2878m         LEA     OWSIZE, A1     
0000209C  103C 000E               2879m         MOVE.B  #14,D0          
000020A0  4E4F                    2880m         TRAP    #15
000020A2  6000 00A2               2881m         BRA     COMPLETE_156 
000020A6                          2882m DESTDNB_156: 
000020A6  43F8 00C0               2883m         LEA     OBSIZE, A1     
000020AA  103C 000E               2884m         MOVE.B  #14,D0          
000020AE  4E4F                    2885m         TRAP    #15
000020B0  6000 0094               2886m         BRA     COMPLETE_156 
000020B4                          2887m CHECKFORSRCDN_156: 
000020B4  4EB9 00002142           2888m         JSR     NEXT_156
000020BA  0303                    2889m         BTST    D1, D3      
000020BC  6700 002C               2890m         BEQ     SRCDNW_156
000020C0                          2891m SRCDNL_156:        
000020C0  43F8 00C8               2892m         LEA     OLSIZE, A1     
000020C4  103C 000E               2893m         MOVE.B  #14,D0          
000020C8  4E4F                    2894m         TRAP    #15
000020CA  1E3C 0001               2895m         MOVE.B  #$1, D7
000020CE                          2896mm         PRINTDNDEST D3
000020CE  3203                    2897mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020D0  E949                    2898mm         LSL     #$04, D1
000020D2  E049                    2899mm         LSR     #$08, D1
000020D4  EA49                    2900mm         LSR     #$05, D1
000020D6  43F8 00CC               2901mm         LEA     ODN, A1     
000020DA  103C 000E               2902mm         MOVE.B  #14,D0          
000020DE  4E4F                    2903mm         TRAP    #15
000020E0  103C 0003               2904mm         MOVE.B  #3,D0          
000020E4  4E4F                    2905mm         TRAP    #15
000020E6                          2906mm         ENDM
000020E6  6000 005E               2907m         BRA     COMPLETE_156 
000020EA                          2908m SRCDNW_156:
000020EA  4EB9 00002142           2909m         JSR     NEXT_156
000020F0  0303                    2910m         BTST    D1, D3     
000020F2  6700 0028               2911m         BEQ     SRCDNB_156
000020F6  43F8 00C4               2912m         LEA     OWSIZE, A1     
000020FA  103C 000E               2913m         MOVE.B  #14,D0          
000020FE  4E4F                    2914m         TRAP    #15
00002100                          2915mm         PRINTDNDEST D3
00002100  3203                    2916mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002102  E949                    2917mm         LSL     #$04, D1
00002104  E049                    2918mm         LSR     #$08, D1
00002106  EA49                    2919mm         LSR     #$05, D1
00002108  43F8 00CC               2920mm         LEA     ODN, A1     
0000210C  103C 000E               2921mm         MOVE.B  #14,D0          
00002110  4E4F                    2922mm         TRAP    #15
00002112  103C 0003               2923mm         MOVE.B  #3,D0          
00002116  4E4F                    2924mm         TRAP    #15
00002118                          2925mm         ENDM
00002118  6000 002C               2926m         BRA     COMPLETE_156 
0000211C                          2927m SRCDNB_156: 
0000211C  43F8 00C0               2928m         LEA     OBSIZE, A1     
00002120  103C 000E               2929m         MOVE.B  #14,D0          
00002124  4E4F                    2930m         TRAP    #15
00002126                          2931mm         PRINTDNDEST D3
00002126  3203                    2932mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002128  E949                    2933mm         LSL     #$04, D1
0000212A  E049                    2934mm         LSR     #$08, D1
0000212C  EA49                    2935mm         LSR     #$05, D1
0000212E  43F8 00CC               2936mm         LEA     ODN, A1     
00002132  103C 000E               2937mm         MOVE.B  #14,D0          
00002136  4E4F                    2938mm         TRAP    #15
00002138  103C 0003               2939mm         MOVE.B  #3,D0          
0000213C  4E4F                    2940mm         TRAP    #15
0000213E                          2941mm         ENDM
0000213E  6000 0006               2942m         BRA     COMPLETE_156 
00002142                          2943m 
00002142                          2944m NEXT_156:
00002142  5301                    2945m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002144  4E75                    2946m         RTS                
00002146                          2947m 
00002146                          2948m COMPLETE_156:  ; OPCODE HAS BEEN VERIFIED
00002146                          2949m         ENDM
00002146  BC3C 0001               2950          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
0000214A  6700 05F8               2951          BEQ     decodeAddDestOp
0000214E                          2952m         printComma
0000214E  43F8 00D4               2953m         LEA     OCOMMA, A1     
00002152  103C 000E               2954m         MOVE.B  #14,D0          
00002156  4E4F                    2955m         TRAP    #15
00002158                          2956m         ENDM
00002158                          2957m         prepareAdrMode  #$1, (A2)
00002158  3C3C 0001               2958m         MOVE.W  #$1, D6      ; INPUT VALUE
0000215C  3212                    2959m         MOVE.W  (A2), D1
0000215E  BC3C 0001               2960m         CMP.B   #$01, D6
00002162  6700 000C               2961m         BEQ     ADRSOURCE_161    
00002166                          2962m ADRDEST_161:
00002166  EF49                    2963m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002168  E049                    2964m         LSR     #$08, D1
0000216A  EA49                    2965m         LSR     #$05, D1
0000216C  6000 000A               2966m         BRA     COMPLETE_161 
00002170                          2967m ADRSOURCE_161:                
00002170  E149                    2968m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002172  E549                    2969m         LSL     #$02, D1
00002174  E049                    2970m         LSR     #$08, D1
00002176  EA49                    2971m         LSR     #$05, D1
00002178                          2972m COMPLETE_161:  ; OPCODE HAS BEEN VERIFIED
00002178                          2973m         ENDM        
00002178                          2974m         decodeAdrMode   (A2), D1
00002178  3612                    2975m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000217A  3201                    2976m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000217C                          2977m 
0000217C  B23C 0001               2978m         CMP.B   #$01, D1
00002180  6700 0066               2979m         BEQ     ADRREGDIRECT_162    
00002184  B23C 0002               2980m         CMP.B   #$02, D1
00002188  6700 00A0               2981m         BEQ     ADRREGINDIRECT_162  
0000218C  B23C 0003               2982m         CMP.B   #$03, D1
00002190  6700 0102               2983m         BEQ     ADRREGPOSTINC_162  
00002194  B23C 0004               2984m         CMP.B   #$04, D1
00002198  6700 0178               2985m         BEQ     ADRREGPREDEC_162
0000219C  B23C 0007               2986m         CMP.B   #$07, D1
000021A0  6700 01EE               2987m         BEQ     ADRABSOLUTE_162    
000021A4                          2988m         
000021A4                          2989m DATAREGDIRECT_162: 
000021A4  BC3C 0001               2990m         CMP.B   #$01, D6
000021A8  6700 001E               2991m         BEQ     DATAREGDIRECTSRC_162   
000021AC                          2992m DATAREGDIRECTDEST_162: 
000021AC                          2993mm         PRINTDNDEST D3 
000021AC  3203                    2994mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000021AE  E949                    2995mm         LSL     #$04, D1
000021B0  E049                    2996mm         LSR     #$08, D1
000021B2  EA49                    2997mm         LSR     #$05, D1
000021B4  43F8 00CC               2998mm         LEA     ODN, A1     
000021B8  103C 000E               2999mm         MOVE.B  #14,D0          
000021BC  4E4F                    3000mm         TRAP    #15
000021BE  103C 0003               3001mm         MOVE.B  #3,D0          
000021C2  4E4F                    3002mm         TRAP    #15
000021C4                          3003mm         ENDM
000021C4  6000 057A               3004m         BRA     COMPLETE_162 
000021C8                          3005m DATAREGDIRECTSRC_162: 
000021C8                          3006mm         PRINTDNSRC D3 
000021C8  4281                    3007mm         CLR.L   D1
000021CA  3203                    3008mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021CC  E149                    3009mm         LSL     #$08, D1
000021CE  EB49                    3010mm         LSL     #$05, D1
000021D0  E049                    3011mm         LSR     #$08, D1
000021D2  EA49                    3012mm         LSR     #$05, D1
000021D4  43F8 00CC               3013mm         LEA     ODN, A1     
000021D8  103C 000E               3014mm         MOVE.B  #14,D0          
000021DC  4E4F                    3015mm         TRAP    #15
000021DE  103C 0003               3016mm         MOVE.B  #3,D0          
000021E2  4E4F                    3017mm         TRAP    #15
000021E4                          3018mm         ENDM
000021E4  6000 055A               3019m         BRA     COMPLETE_162   
000021E8                          3020m         
000021E8                          3021m ADRREGDIRECT_162: 
000021E8  BC3C 0001               3022m         CMP.B   #$01, D6
000021EC  6700 001E               3023m         BEQ     ADRREGDIRECTSRC_162   
000021F0                          3024m ADRREGDIRECTDEST_162:
000021F0                          3025mm         PRINTANDEST D3
000021F0  3203                    3026mm         MOVE.W  D3, D1
000021F2  E949                    3027mm         LSL     #$04, D1 ; BITS 9 TO 11
000021F4  E049                    3028mm         LSR     #$08, D1
000021F6  EA49                    3029mm         LSR     #$05, D1
000021F8  43F8 00CE               3030mm         LEA     OAN, A1     
000021FC  103C 000E               3031mm         MOVE.B  #14,D0          
00002200  4E4F                    3032mm         TRAP    #15
00002202  103C 0003               3033mm         MOVE.B  #3,D0          
00002206  4E4F                    3034mm         TRAP    #15
00002208                          3035mm         ENDM
00002208  6000 0536               3036m         BRA     COMPLETE_162   
0000220C                          3037m ADRREGDIRECTSRC_162:
0000220C                          3038mm         PRINTANSRC D3
0000220C  3203                    3039mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000220E  E149                    3040mm         LSL     #$08, D1
00002210  EB49                    3041mm         LSL     #$05, D1
00002212  E049                    3042mm         LSR     #$08, D1
00002214  EA49                    3043mm         LSR     #$05, D1
00002216  43F8 00CE               3044mm         LEA     OAN, A1     
0000221A  103C 000E               3045mm         MOVE.B  #14,D0          
0000221E  4E4F                    3046mm         TRAP    #15
00002220  103C 0003               3047mm         MOVE.B  #3,D0          
00002224  4E4F                    3048mm         TRAP    #15
00002226                          3049mm         ENDM
00002226  6000 0518               3050m         BRA     COMPLETE_162   
0000222A                          3051m        
0000222A                          3052m ADRREGINDIRECT_162:   
0000222A  BC3C 0001               3053m         CMP.B   #$01, D6
0000222E  6700 0032               3054m         BEQ     ADRREGINDIRECTSRC_162   
00002232                          3055m ADRREGINDIRECTDEST_162:
00002232                          3056mm         PRINTLB
00002232  43F8 00D0               3057mm         LEA     OLB, A1     
00002236  103C 000E               3058mm         MOVE.B  #14,D0          
0000223A  4E4F                    3059mm         TRAP    #15
0000223C                          3060mm         ENDM
0000223C                          3061mm         PRINTANDEST D3  
0000223C  3203                    3062mm         MOVE.W  D3, D1
0000223E  E949                    3063mm         LSL     #$04, D1 ; BITS 9 TO 11
00002240  E049                    3064mm         LSR     #$08, D1
00002242  EA49                    3065mm         LSR     #$05, D1
00002244  43F8 00CE               3066mm         LEA     OAN, A1     
00002248  103C 000E               3067mm         MOVE.B  #14,D0          
0000224C  4E4F                    3068mm         TRAP    #15
0000224E  103C 0003               3069mm         MOVE.B  #3,D0          
00002252  4E4F                    3070mm         TRAP    #15
00002254                          3071mm         ENDM
00002254                          3072mm         PRINTRB
00002254  43F8 00D2               3073mm         LEA     ORB, A1     
00002258  103C 000E               3074mm         MOVE.B  #14,D0          
0000225C  4E4F                    3075mm         TRAP    #15
0000225E                          3076mm         ENDM
0000225E  6000 04E0               3077m         BRA     COMPLETE_162     
00002262                          3078m ADRREGINDIRECTSRC_162:   
00002262                          3079mm         PRINTLB
00002262  43F8 00D0               3080mm         LEA     OLB, A1     
00002266  103C 000E               3081mm         MOVE.B  #14,D0          
0000226A  4E4F                    3082mm         TRAP    #15
0000226C                          3083mm         ENDM
0000226C                          3084mm         PRINTANSRC D3  
0000226C  3203                    3085mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000226E  E149                    3086mm         LSL     #$08, D1
00002270  EB49                    3087mm         LSL     #$05, D1
00002272  E049                    3088mm         LSR     #$08, D1
00002274  EA49                    3089mm         LSR     #$05, D1
00002276  43F8 00CE               3090mm         LEA     OAN, A1     
0000227A  103C 000E               3091mm         MOVE.B  #14,D0          
0000227E  4E4F                    3092mm         TRAP    #15
00002280  103C 0003               3093mm         MOVE.B  #3,D0          
00002284  4E4F                    3094mm         TRAP    #15
00002286                          3095mm         ENDM
00002286                          3096mm         PRINTRB
00002286  43F8 00D2               3097mm         LEA     ORB, A1     
0000228A  103C 000E               3098mm         MOVE.B  #14,D0          
0000228E  4E4F                    3099mm         TRAP    #15
00002290                          3100mm         ENDM
00002290  6000 04AE               3101m         BRA     COMPLETE_162   
00002294                          3102m         
00002294                          3103m ADRREGPOSTINC_162:   
00002294  BC3C 0001               3104m         CMP.B   #$01, D6
00002298  6700 003C               3105m         BEQ     ADRREGPOSTINCSRC_162   
0000229C                          3106m ADRREGPOSTINCDEST_162: 
0000229C                          3107mm         PRINTLB
0000229C  43F8 00D0               3108mm         LEA     OLB, A1     
000022A0  103C 000E               3109mm         MOVE.B  #14,D0          
000022A4  4E4F                    3110mm         TRAP    #15
000022A6                          3111mm         ENDM
000022A6                          3112mm         PRINTANDEST D3  
000022A6  3203                    3113mm         MOVE.W  D3, D1
000022A8  E949                    3114mm         LSL     #$04, D1 ; BITS 9 TO 11
000022AA  E049                    3115mm         LSR     #$08, D1
000022AC  EA49                    3116mm         LSR     #$05, D1
000022AE  43F8 00CE               3117mm         LEA     OAN, A1     
000022B2  103C 000E               3118mm         MOVE.B  #14,D0          
000022B6  4E4F                    3119mm         TRAP    #15
000022B8  103C 0003               3120mm         MOVE.B  #3,D0          
000022BC  4E4F                    3121mm         TRAP    #15
000022BE                          3122mm         ENDM
000022BE                          3123mm         PRINTRB
000022BE  43F8 00D2               3124mm         LEA     ORB, A1     
000022C2  103C 000E               3125mm         MOVE.B  #14,D0          
000022C6  4E4F                    3126mm         TRAP    #15
000022C8                          3127mm         ENDM
000022C8                          3128mm         PRINTPI
000022C8  43F8 00D9               3129mm         LEA     OPSTINC, A1     
000022CC  103C 000E               3130mm         MOVE.B  #14,D0          
000022D0  4E4F                    3131mm         TRAP    #15
000022D2                          3132mm         ENDM
000022D2  6000 046C               3133m         BRA     COMPLETE_162  
000022D6                          3134m ADRREGPOSTINCSRC_162:           
000022D6                          3135mm         PRINTLB
000022D6  43F8 00D0               3136mm         LEA     OLB, A1     
000022DA  103C 000E               3137mm         MOVE.B  #14,D0          
000022DE  4E4F                    3138mm         TRAP    #15
000022E0                          3139mm         ENDM
000022E0                          3140mm         PRINTANSRC D3  
000022E0  3203                    3141mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000022E2  E149                    3142mm         LSL     #$08, D1
000022E4  EB49                    3143mm         LSL     #$05, D1
000022E6  E049                    3144mm         LSR     #$08, D1
000022E8  EA49                    3145mm         LSR     #$05, D1
000022EA  43F8 00CE               3146mm         LEA     OAN, A1     
000022EE  103C 000E               3147mm         MOVE.B  #14,D0          
000022F2  4E4F                    3148mm         TRAP    #15
000022F4  103C 0003               3149mm         MOVE.B  #3,D0          
000022F8  4E4F                    3150mm         TRAP    #15
000022FA                          3151mm         ENDM
000022FA                          3152mm         PRINTRB
000022FA  43F8 00D2               3153mm         LEA     ORB, A1     
000022FE  103C 000E               3154mm         MOVE.B  #14,D0          
00002302  4E4F                    3155mm         TRAP    #15
00002304                          3156mm         ENDM
00002304                          3157mm         PRINTPI
00002304  43F8 00D9               3158mm         LEA     OPSTINC, A1     
00002308  103C 000E               3159mm         MOVE.B  #14,D0          
0000230C  4E4F                    3160mm         TRAP    #15
0000230E                          3161mm         ENDM
0000230E  6000 0430               3162m         BRA     COMPLETE_162  
00002312                          3163m ADRREGPREDEC_162: 
00002312  BC3C 0001               3164m         CMP.B   #$01, D6
00002316  6700 003C               3165m         BEQ     ADRREGPREDECSRC_162   
0000231A                          3166m ADRREGPREDECDEST_162:
0000231A                          3167mm         PRINTPD  
0000231A  43F8 00D7               3168mm         LEA     OPREDEC, A1     
0000231E  103C 000E               3169mm         MOVE.B  #14,D0          
00002322  4E4F                    3170mm         TRAP    #15
00002324                          3171mm         ENDM
00002324                          3172mm         PRINTLB
00002324  43F8 00D0               3173mm         LEA     OLB, A1     
00002328  103C 000E               3174mm         MOVE.B  #14,D0          
0000232C  4E4F                    3175mm         TRAP    #15
0000232E                          3176mm         ENDM
0000232E                          3177mm         PRINTANDEST D3  
0000232E  3203                    3178mm         MOVE.W  D3, D1
00002330  E949                    3179mm         LSL     #$04, D1 ; BITS 9 TO 11
00002332  E049                    3180mm         LSR     #$08, D1
00002334  EA49                    3181mm         LSR     #$05, D1
00002336  43F8 00CE               3182mm         LEA     OAN, A1     
0000233A  103C 000E               3183mm         MOVE.B  #14,D0          
0000233E  4E4F                    3184mm         TRAP    #15
00002340  103C 0003               3185mm         MOVE.B  #3,D0          
00002344  4E4F                    3186mm         TRAP    #15
00002346                          3187mm         ENDM
00002346                          3188mm         PRINTRB
00002346  43F8 00D2               3189mm         LEA     ORB, A1     
0000234A  103C 000E               3190mm         MOVE.B  #14,D0          
0000234E  4E4F                    3191mm         TRAP    #15
00002350                          3192mm         ENDM
00002350  6000 03EE               3193m         BRA     COMPLETE_162   
00002354                          3194m ADRREGPREDECSRC_162: 
00002354                          3195mm         PRINTPD  
00002354  43F8 00D7               3196mm         LEA     OPREDEC, A1     
00002358  103C 000E               3197mm         MOVE.B  #14,D0          
0000235C  4E4F                    3198mm         TRAP    #15
0000235E                          3199mm         ENDM
0000235E                          3200mm         PRINTLB
0000235E  43F8 00D0               3201mm         LEA     OLB, A1     
00002362  103C 000E               3202mm         MOVE.B  #14,D0          
00002366  4E4F                    3203mm         TRAP    #15
00002368                          3204mm         ENDM
00002368                          3205mm         PRINTANSRC D3  
00002368  3203                    3206mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000236A  E149                    3207mm         LSL     #$08, D1
0000236C  EB49                    3208mm         LSL     #$05, D1
0000236E  E049                    3209mm         LSR     #$08, D1
00002370  EA49                    3210mm         LSR     #$05, D1
00002372  43F8 00CE               3211mm         LEA     OAN, A1     
00002376  103C 000E               3212mm         MOVE.B  #14,D0          
0000237A  4E4F                    3213mm         TRAP    #15
0000237C  103C 0003               3214mm         MOVE.B  #3,D0          
00002380  4E4F                    3215mm         TRAP    #15
00002382                          3216mm         ENDM
00002382                          3217mm         PRINTRB
00002382  43F8 00D2               3218mm         LEA     ORB, A1     
00002386  103C 000E               3219mm         MOVE.B  #14,D0          
0000238A  4E4F                    3220mm         TRAP    #15
0000238C                          3221mm         ENDM
0000238C  6000 03B2               3222m         BRA     COMPLETE_162
00002390                          3223m        
00002390                          3224m ADRABSOLUTE_162:
00002390  BC3C 0001               3225m         CMP.B   #$01, D6
00002394  6600 0018               3226m         BNE     ADRABSOLUTEDST_162 
00002398                          3227m         
00002398  3A03                    3228m         MOVE.W  D3, D5
0000239A  0803 0002               3229m         BTST    #2, D3
0000239E  6600 0024               3230m         BNE     ADRIMMEDIATE_162
000023A2  0803 0000               3231m         BTST    #0, D3
000023A6  6600 0280               3232m         BNE     ADRABSOLUTEL_162
000023AA  6000 01E6               3233m         BRA     ADRABSOLUTEW_162
000023AE                          3234m ADRABSOLUTEDST_162:
000023AE  3A03                    3235m         MOVE.W  D3, D5
000023B0  0803 000B               3236m         BTST    #$B, D3
000023B4  6600 000E               3237m         BNE     ADRIMMEDIATE_162
000023B8  0803 0009               3238m         BTST    #$09, D3
000023BC  6600 026A               3239m         BNE     ADRABSOLUTEL_162
000023C0  6000 01D0               3240m         BRA     ADRABSOLUTEW_162
000023C4                          3241m ADRIMMEDIATE_162:
000023C4  BE3C 0001               3242m         CMP.B   #1, D7
000023C8  6700 00A2               3243m         BEQ     ADRIMMEDIATEL_162
000023CC                          3244m ADRIMMEDIATEW_162:
000023CC  361A                    3245m         MOVE.W  (A2)+, D3
000023CE                          3246mm         PRINTHASH
000023CE  103C 0006               3247mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023D2  323C 0023               3248mm         MOVE.W  #35, D1     ; AN = SIGN
000023D6  4E4F                    3249mm         TRAP    #15         ; OUTPUT = SIGN
000023D8                          3250mm         ENDM
000023D8                          3251mm         PRINTSIGN
000023D8  103C 0006               3252mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023DC  323C 0024               3253mm         MOVE.W  #36, D1     ; AN = SIGN
000023E0  4E4F                    3254mm         TRAP    #15         ; OUTPUT = SIGN
000023E2                          3255mm         ENDM
000023E2                          3256mm         ADROUT
000023E2  103C 0006               3257mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023E6  3212                    3258mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023E8  E049                    3259mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023EA  E849                    3260mm         LSR.W   #4, D1      
000023EC                          3261mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023EC  0C01 0009               3262mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023F0  6E00 000A               3263mmm         BGT     ALPHA_192
000023F4  0601 0030               3264mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023F8  6000 0006               3265mmm         BRA     DONE_192
000023FC  0601 0037               3266mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002400  4E71                    3267mmm DONE_192: NOP
00002402                          3268mmm         ENDM
00002402  4E4F                    3269mm         TRAP    #15         ; EXECUTE OUTPUT
00002404                          3270mm         
00002404  3212                    3271mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002406  E949                    3272mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002408  E049                    3273mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000240A  E849                    3274mm         LSR.W   #4, D1      
0000240C                          3275mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000240C  0C01 0009               3276mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002410  6E00 000A               3277mmm         BGT     ALPHA_193
00002414  0601 0030               3278mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002418  6000 0006               3279mmm         BRA     DONE_193
0000241C  0601 0037               3280mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002420  4E71                    3281mmm DONE_193: NOP
00002422                          3282mmm         ENDM
00002422  4E4F                    3283mm         TRAP    #15         ; EXECUTE OUTPUT
00002424                          3284mm         
00002424  3212                    3285mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002426  E149                    3286mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002428  E049                    3287mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000242A  E849                    3288mm         LSR.W   #4, D1      
0000242C                          3289mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000242C  0C01 0009               3290mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002430  6E00 000A               3291mmm         BGT     ALPHA_194
00002434  0601 0030               3292mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002438  6000 0006               3293mmm         BRA     DONE_194
0000243C  0601 0037               3294mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002440  4E71                    3295mmm DONE_194: NOP
00002442                          3296mmm         ENDM
00002442  4E4F                    3297mm         TRAP    #15         ; EXECUTE OUTPUT
00002444                          3298mm         
00002444  3212                    3299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002446  E149                    3300mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002448  E949                    3301mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000244A  E049                    3302mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000244C  E849                    3303mm         LSR.W   #4, D1      
0000244E                          3304mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000244E  0C01 0009               3305mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002452  6E00 000A               3306mmm         BGT     ALPHA_195
00002456  0601 0030               3307mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000245A  6000 0006               3308mmm         BRA     DONE_195
0000245E  0601 0037               3309mmm ALPHA_195: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002462  4E71                    3310mmm DONE_195: NOP
00002464                          3311mmm         ENDM
00002464  4E4F                    3312mm         TRAP    #15         ; EXECUTE OUTPUT   
00002466                          3313mm         ENDM     
00002466  3605                    3314m         MOVE.W  D5, D3
00002468  6000 02D6               3315m         BRA     COMPLETE_162
0000246C                          3316m ADRIMMEDIATEL_162:
0000246C  361A                    3317m         MOVE.W  (A2)+, D3
0000246E                          3318mm         PRINTHASH
0000246E  103C 0006               3319mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002472  323C 0023               3320mm         MOVE.W  #35, D1     ; AN = SIGN
00002476  4E4F                    3321mm         TRAP    #15         ; OUTPUT = SIGN
00002478                          3322mm         ENDM
00002478                          3323mm         PRINTSIGN
00002478  103C 0006               3324mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000247C  323C 0024               3325mm         MOVE.W  #36, D1     ; AN = SIGN
00002480  4E4F                    3326mm         TRAP    #15         ; OUTPUT = SIGN
00002482                          3327mm         ENDM
00002482                          3328mm         ADROUT 
00002482  103C 0006               3329mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002486  3212                    3330mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002488  E049                    3331mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000248A  E849                    3332mm         LSR.W   #4, D1      
0000248C                          3333mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000248C  0C01 0009               3334mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002490  6E00 000A               3335mmm         BGT     ALPHA_199
00002494  0601 0030               3336mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002498  6000 0006               3337mmm         BRA     DONE_199
0000249C  0601 0037               3338mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024A0  4E71                    3339mmm DONE_199: NOP
000024A2                          3340mmm         ENDM
000024A2  4E4F                    3341mm         TRAP    #15         ; EXECUTE OUTPUT
000024A4                          3342mm         
000024A4  3212                    3343mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024A6  E949                    3344mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024A8  E049                    3345mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024AA  E849                    3346mm         LSR.W   #4, D1      
000024AC                          3347mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024AC  0C01 0009               3348mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024B0  6E00 000A               3349mmm         BGT     ALPHA_200
000024B4  0601 0030               3350mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024B8  6000 0006               3351mmm         BRA     DONE_200
000024BC  0601 0037               3352mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024C0  4E71                    3353mmm DONE_200: NOP
000024C2                          3354mmm         ENDM
000024C2  4E4F                    3355mm         TRAP    #15         ; EXECUTE OUTPUT
000024C4                          3356mm         
000024C4  3212                    3357mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024C6  E149                    3358mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024C8  E049                    3359mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024CA  E849                    3360mm         LSR.W   #4, D1      
000024CC                          3361mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024CC  0C01 0009               3362mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024D0  6E00 000A               3363mmm         BGT     ALPHA_201
000024D4  0601 0030               3364mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024D8  6000 0006               3365mmm         BRA     DONE_201
000024DC  0601 0037               3366mmm ALPHA_201: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024E0  4E71                    3367mmm DONE_201: NOP
000024E2                          3368mmm         ENDM
000024E2  4E4F                    3369mm         TRAP    #15         ; EXECUTE OUTPUT
000024E4                          3370mm         
000024E4  3212                    3371mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024E6  E149                    3372mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024E8  E949                    3373mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024EA  E049                    3374mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024EC  E849                    3375mm         LSR.W   #4, D1      
000024EE                          3376mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024EE  0C01 0009               3377mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024F2  6E00 000A               3378mmm         BGT     ALPHA_202
000024F6  0601 0030               3379mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024FA  6000 0006               3380mmm         BRA     DONE_202
000024FE  0601 0037               3381mmm ALPHA_202: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002502  4E71                    3382mmm DONE_202: NOP
00002504                          3383mmm         ENDM
00002504  4E4F                    3384mm         TRAP    #15         ; EXECUTE OUTPUT   
00002506                          3385mm         ENDM     
00002506  361A                    3386m         MOVE.W  (A2)+, D3
00002508                          3387mm         ADROUT
00002508  103C 0006               3388mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000250C  3212                    3389mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000250E  E049                    3390mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002510  E849                    3391mm         LSR.W   #4, D1      
00002512                          3392mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002512  0C01 0009               3393mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002516  6E00 000A               3394mmm         BGT     ALPHA_204
0000251A  0601 0030               3395mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000251E  6000 0006               3396mmm         BRA     DONE_204
00002522  0601 0037               3397mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002526  4E71                    3398mmm DONE_204: NOP
00002528                          3399mmm         ENDM
00002528  4E4F                    3400mm         TRAP    #15         ; EXECUTE OUTPUT
0000252A                          3401mm         
0000252A  3212                    3402mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000252C  E949                    3403mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000252E  E049                    3404mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002530  E849                    3405mm         LSR.W   #4, D1      
00002532                          3406mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002532  0C01 0009               3407mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002536  6E00 000A               3408mmm         BGT     ALPHA_205
0000253A  0601 0030               3409mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000253E  6000 0006               3410mmm         BRA     DONE_205
00002542  0601 0037               3411mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002546  4E71                    3412mmm DONE_205: NOP
00002548                          3413mmm         ENDM
00002548  4E4F                    3414mm         TRAP    #15         ; EXECUTE OUTPUT
0000254A                          3415mm         
0000254A  3212                    3416mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000254C  E149                    3417mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000254E  E049                    3418mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002550  E849                    3419mm         LSR.W   #4, D1      
00002552                          3420mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002552  0C01 0009               3421mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002556  6E00 000A               3422mmm         BGT     ALPHA_206
0000255A  0601 0030               3423mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000255E  6000 0006               3424mmm         BRA     DONE_206
00002562  0601 0037               3425mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002566  4E71                    3426mmm DONE_206: NOP
00002568                          3427mmm         ENDM
00002568  4E4F                    3428mm         TRAP    #15         ; EXECUTE OUTPUT
0000256A                          3429mm         
0000256A  3212                    3430mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000256C  E149                    3431mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000256E  E949                    3432mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002570  E049                    3433mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002572  E849                    3434mm         LSR.W   #4, D1      
00002574                          3435mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002574  0C01 0009               3436mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002578  6E00 000A               3437mmm         BGT     ALPHA_207
0000257C  0601 0030               3438mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002580  6000 0006               3439mmm         BRA     DONE_207
00002584  0601 0037               3440mmm ALPHA_207: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002588  4E71                    3441mmm DONE_207: NOP
0000258A                          3442mmm         ENDM
0000258A  4E4F                    3443mm         TRAP    #15         ; EXECUTE OUTPUT   
0000258C                          3444mm         ENDM     
0000258C  3605                    3445m         MOVE.W  D5, D3
0000258E  6000 01B0               3446m         BRA     COMPLETE_162 
00002592                          3447m ADRABSOLUTEW_162:     
00002592  361A                    3448m         MOVE.W  (A2)+, D3
00002594                          3449mm         PRINTSIGN
00002594  103C 0006               3450mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002598  323C 0024               3451mm         MOVE.W  #36, D1     ; AN = SIGN
0000259C  4E4F                    3452mm         TRAP    #15         ; OUTPUT = SIGN
0000259E                          3453mm         ENDM
0000259E                          3454mm         ADROUT
0000259E  103C 0006               3455mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000025A2  3212                    3456mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A4  E049                    3457mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025A6  E849                    3458mm         LSR.W   #4, D1      
000025A8                          3459mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025A8  0C01 0009               3460mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025AC  6E00 000A               3461mmm         BGT     ALPHA_210
000025B0  0601 0030               3462mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B4  6000 0006               3463mmm         BRA     DONE_210
000025B8  0601 0037               3464mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025BC  4E71                    3465mmm DONE_210: NOP
000025BE                          3466mmm         ENDM
000025BE  4E4F                    3467mm         TRAP    #15         ; EXECUTE OUTPUT
000025C0                          3468mm         
000025C0  3212                    3469mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025C2  E949                    3470mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025C4  E049                    3471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025C6  E849                    3472mm         LSR.W   #4, D1      
000025C8                          3473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025C8  0C01 0009               3474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025CC  6E00 000A               3475mmm         BGT     ALPHA_211
000025D0  0601 0030               3476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025D4  6000 0006               3477mmm         BRA     DONE_211
000025D8  0601 0037               3478mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025DC  4E71                    3479mmm DONE_211: NOP
000025DE                          3480mmm         ENDM
000025DE  4E4F                    3481mm         TRAP    #15         ; EXECUTE OUTPUT
000025E0                          3482mm         
000025E0  3212                    3483mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025E2  E149                    3484mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025E4  E049                    3485mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025E6  E849                    3486mm         LSR.W   #4, D1      
000025E8                          3487mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025E8  0C01 0009               3488mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025EC  6E00 000A               3489mmm         BGT     ALPHA_212
000025F0  0601 0030               3490mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025F4  6000 0006               3491mmm         BRA     DONE_212
000025F8  0601 0037               3492mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025FC  4E71                    3493mmm DONE_212: NOP
000025FE                          3494mmm         ENDM
000025FE  4E4F                    3495mm         TRAP    #15         ; EXECUTE OUTPUT
00002600                          3496mm         
00002600  3212                    3497mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002602  E149                    3498mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002604  E949                    3499mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002606  E049                    3500mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002608  E849                    3501mm         LSR.W   #4, D1      
0000260A                          3502mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000260A  0C01 0009               3503mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000260E  6E00 000A               3504mmm         BGT     ALPHA_213
00002612  0601 0030               3505mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002616  6000 0006               3506mmm         BRA     DONE_213
0000261A  0601 0037               3507mmm ALPHA_213: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000261E  4E71                    3508mmm DONE_213: NOP
00002620                          3509mmm         ENDM
00002620  4E4F                    3510mm         TRAP    #15         ; EXECUTE OUTPUT   
00002622                          3511mm         ENDM     
00002622  3605                    3512m         MOVE.W  D5, D3
00002624  6000 011A               3513m         BRA     COMPLETE_162  
00002628                          3514m ADRABSOLUTEL_162:  
00002628  361A                    3515m         MOVE.W  (A2)+, D3
0000262A                          3516mm         PRINTSIGN
0000262A  103C 0006               3517mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000262E  323C 0024               3518mm         MOVE.W  #36, D1     ; AN = SIGN
00002632  4E4F                    3519mm         TRAP    #15         ; OUTPUT = SIGN
00002634                          3520mm         ENDM
00002634                          3521mm         ADROUT 
00002634  103C 0006               3522mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002638  3212                    3523mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000263A  E049                    3524mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000263C  E849                    3525mm         LSR.W   #4, D1      
0000263E                          3526mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000263E  0C01 0009               3527mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002642  6E00 000A               3528mmm         BGT     ALPHA_216
00002646  0601 0030               3529mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000264A  6000 0006               3530mmm         BRA     DONE_216
0000264E  0601 0037               3531mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002652  4E71                    3532mmm DONE_216: NOP
00002654                          3533mmm         ENDM
00002654  4E4F                    3534mm         TRAP    #15         ; EXECUTE OUTPUT
00002656                          3535mm         
00002656  3212                    3536mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002658  E949                    3537mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000265A  E049                    3538mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000265C  E849                    3539mm         LSR.W   #4, D1      
0000265E                          3540mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000265E  0C01 0009               3541mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002662  6E00 000A               3542mmm         BGT     ALPHA_217
00002666  0601 0030               3543mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000266A  6000 0006               3544mmm         BRA     DONE_217
0000266E  0601 0037               3545mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002672  4E71                    3546mmm DONE_217: NOP
00002674                          3547mmm         ENDM
00002674  4E4F                    3548mm         TRAP    #15         ; EXECUTE OUTPUT
00002676                          3549mm         
00002676  3212                    3550mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002678  E149                    3551mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000267A  E049                    3552mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000267C  E849                    3553mm         LSR.W   #4, D1      
0000267E                          3554mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000267E  0C01 0009               3555mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002682  6E00 000A               3556mmm         BGT     ALPHA_218
00002686  0601 0030               3557mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000268A  6000 0006               3558mmm         BRA     DONE_218
0000268E  0601 0037               3559mmm ALPHA_218: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002692  4E71                    3560mmm DONE_218: NOP
00002694                          3561mmm         ENDM
00002694  4E4F                    3562mm         TRAP    #15         ; EXECUTE OUTPUT
00002696                          3563mm         
00002696  3212                    3564mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002698  E149                    3565mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000269A  E949                    3566mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000269C  E049                    3567mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000269E  E849                    3568mm         LSR.W   #4, D1      
000026A0                          3569mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026A0  0C01 0009               3570mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026A4  6E00 000A               3571mmm         BGT     ALPHA_219
000026A8  0601 0030               3572mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026AC  6000 0006               3573mmm         BRA     DONE_219
000026B0  0601 0037               3574mmm ALPHA_219: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026B4  4E71                    3575mmm DONE_219: NOP
000026B6                          3576mmm         ENDM
000026B6  4E4F                    3577mm         TRAP    #15         ; EXECUTE OUTPUT   
000026B8                          3578mm         ENDM     
000026B8  361A                    3579m         MOVE.W  (A2)+, D3
000026BA                          3580mm         ADROUT
000026BA  103C 0006               3581mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000026BE  3212                    3582mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026C0  E049                    3583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026C2  E849                    3584mm         LSR.W   #4, D1      
000026C4                          3585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026C4  0C01 0009               3586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026C8  6E00 000A               3587mmm         BGT     ALPHA_221
000026CC  0601 0030               3588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026D0  6000 0006               3589mmm         BRA     DONE_221
000026D4  0601 0037               3590mmm ALPHA_221: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026D8  4E71                    3591mmm DONE_221: NOP
000026DA                          3592mmm         ENDM
000026DA  4E4F                    3593mm         TRAP    #15         ; EXECUTE OUTPUT
000026DC                          3594mm         
000026DC  3212                    3595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026DE  E949                    3596mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000026E0  E049                    3597mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026E2  E849                    3598mm         LSR.W   #4, D1      
000026E4                          3599mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026E4  0C01 0009               3600mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026E8  6E00 000A               3601mmm         BGT     ALPHA_222
000026EC  0601 0030               3602mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026F0  6000 0006               3603mmm         BRA     DONE_222
000026F4  0601 0037               3604mmm ALPHA_222: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026F8  4E71                    3605mmm DONE_222: NOP
000026FA                          3606mmm         ENDM
000026FA  4E4F                    3607mm         TRAP    #15         ; EXECUTE OUTPUT
000026FC                          3608mm         
000026FC  3212                    3609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026FE  E149                    3610mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002700  E049                    3611mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002702  E849                    3612mm         LSR.W   #4, D1      
00002704                          3613mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002704  0C01 0009               3614mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002708  6E00 000A               3615mmm         BGT     ALPHA_223
0000270C  0601 0030               3616mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002710  6000 0006               3617mmm         BRA     DONE_223
00002714  0601 0037               3618mmm ALPHA_223: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002718  4E71                    3619mmm DONE_223: NOP
0000271A                          3620mmm         ENDM
0000271A  4E4F                    3621mm         TRAP    #15         ; EXECUTE OUTPUT
0000271C                          3622mm         
0000271C  3212                    3623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000271E  E149                    3624mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002720  E949                    3625mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002722  E049                    3626mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002724  E849                    3627mm         LSR.W   #4, D1      
00002726                          3628mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002726  0C01 0009               3629mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000272A  6E00 000A               3630mmm         BGT     ALPHA_224
0000272E  0601 0030               3631mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002732  6000 0006               3632mmm         BRA     DONE_224
00002736  0601 0037               3633mmm ALPHA_224: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000273A  4E71                    3634mmm DONE_224: NOP
0000273C                          3635mmm         ENDM
0000273C  4E4F                    3636mm         TRAP    #15         ; EXECUTE OUTPUT   
0000273E                          3637mm         ENDM     
0000273E  3605                    3638m         MOVE.W  D5, D3
00002740                          3639m 
00002740                          3640m COMPLETE_162:  ; OPCODE HAS BEEN VERIFIED
00002740                          3641m         ENDM
00002740  6000 060C               3642          BRA     decodeADDcomp
00002744                          3643  decodeAddDestOp:
00002744                          3644m         prepareAdrMode  #$1,(A2)
00002744  3C3C 0001               3645m         MOVE.W  #$1, D6      ; INPUT VALUE
00002748  3212                    3646m         MOVE.W  (A2), D1
0000274A  BC3C 0001               3647m         CMP.B   #$01, D6
0000274E  6700 000C               3648m         BEQ     ADRSOURCE_225    
00002752                          3649m ADRDEST_225:
00002752  EF49                    3650m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002754  E049                    3651m         LSR     #$08, D1
00002756  EA49                    3652m         LSR     #$05, D1
00002758  6000 000A               3653m         BRA     COMPLETE_225 
0000275C                          3654m ADRSOURCE_225:                
0000275C  E149                    3655m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000275E  E549                    3656m         LSL     #$02, D1
00002760  E049                    3657m         LSR     #$08, D1
00002762  EA49                    3658m         LSR     #$05, D1
00002764                          3659m COMPLETE_225:  ; OPCODE HAS BEEN VERIFIED
00002764                          3660m         ENDM        
00002764                          3661m         decodeAdrMode   (A2), D1
00002764  3612                    3662m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002766  3201                    3663m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002768                          3664m 
00002768  B23C 0001               3665m         CMP.B   #$01, D1
0000276C  6700 0066               3666m         BEQ     ADRREGDIRECT_226    
00002770  B23C 0002               3667m         CMP.B   #$02, D1
00002774  6700 00A0               3668m         BEQ     ADRREGINDIRECT_226  
00002778  B23C 0003               3669m         CMP.B   #$03, D1
0000277C  6700 0102               3670m         BEQ     ADRREGPOSTINC_226  
00002780  B23C 0004               3671m         CMP.B   #$04, D1
00002784  6700 0178               3672m         BEQ     ADRREGPREDEC_226
00002788  B23C 0007               3673m         CMP.B   #$07, D1
0000278C  6700 01EE               3674m         BEQ     ADRABSOLUTE_226    
00002790                          3675m         
00002790                          3676m DATAREGDIRECT_226: 
00002790  BC3C 0001               3677m         CMP.B   #$01, D6
00002794  6700 001E               3678m         BEQ     DATAREGDIRECTSRC_226   
00002798                          3679m DATAREGDIRECTDEST_226: 
00002798                          3680mm         PRINTDNDEST D3 
00002798  3203                    3681mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000279A  E949                    3682mm         LSL     #$04, D1
0000279C  E049                    3683mm         LSR     #$08, D1
0000279E  EA49                    3684mm         LSR     #$05, D1
000027A0  43F8 00CC               3685mm         LEA     ODN, A1     
000027A4  103C 000E               3686mm         MOVE.B  #14,D0          
000027A8  4E4F                    3687mm         TRAP    #15
000027AA  103C 0003               3688mm         MOVE.B  #3,D0          
000027AE  4E4F                    3689mm         TRAP    #15
000027B0                          3690mm         ENDM
000027B0  6000 057A               3691m         BRA     COMPLETE_226 
000027B4                          3692m DATAREGDIRECTSRC_226: 
000027B4                          3693mm         PRINTDNSRC D3 
000027B4  4281                    3694mm         CLR.L   D1
000027B6  3203                    3695mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027B8  E149                    3696mm         LSL     #$08, D1
000027BA  EB49                    3697mm         LSL     #$05, D1
000027BC  E049                    3698mm         LSR     #$08, D1
000027BE  EA49                    3699mm         LSR     #$05, D1
000027C0  43F8 00CC               3700mm         LEA     ODN, A1     
000027C4  103C 000E               3701mm         MOVE.B  #14,D0          
000027C8  4E4F                    3702mm         TRAP    #15
000027CA  103C 0003               3703mm         MOVE.B  #3,D0          
000027CE  4E4F                    3704mm         TRAP    #15
000027D0                          3705mm         ENDM
000027D0  6000 055A               3706m         BRA     COMPLETE_226   
000027D4                          3707m         
000027D4                          3708m ADRREGDIRECT_226: 
000027D4  BC3C 0001               3709m         CMP.B   #$01, D6
000027D8  6700 001E               3710m         BEQ     ADRREGDIRECTSRC_226   
000027DC                          3711m ADRREGDIRECTDEST_226:
000027DC                          3712mm         PRINTANDEST D3
000027DC  3203                    3713mm         MOVE.W  D3, D1
000027DE  E949                    3714mm         LSL     #$04, D1 ; BITS 9 TO 11
000027E0  E049                    3715mm         LSR     #$08, D1
000027E2  EA49                    3716mm         LSR     #$05, D1
000027E4  43F8 00CE               3717mm         LEA     OAN, A1     
000027E8  103C 000E               3718mm         MOVE.B  #14,D0          
000027EC  4E4F                    3719mm         TRAP    #15
000027EE  103C 0003               3720mm         MOVE.B  #3,D0          
000027F2  4E4F                    3721mm         TRAP    #15
000027F4                          3722mm         ENDM
000027F4  6000 0536               3723m         BRA     COMPLETE_226   
000027F8                          3724m ADRREGDIRECTSRC_226:
000027F8                          3725mm         PRINTANSRC D3
000027F8  3203                    3726mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027FA  E149                    3727mm         LSL     #$08, D1
000027FC  EB49                    3728mm         LSL     #$05, D1
000027FE  E049                    3729mm         LSR     #$08, D1
00002800  EA49                    3730mm         LSR     #$05, D1
00002802  43F8 00CE               3731mm         LEA     OAN, A1     
00002806  103C 000E               3732mm         MOVE.B  #14,D0          
0000280A  4E4F                    3733mm         TRAP    #15
0000280C  103C 0003               3734mm         MOVE.B  #3,D0          
00002810  4E4F                    3735mm         TRAP    #15
00002812                          3736mm         ENDM
00002812  6000 0518               3737m         BRA     COMPLETE_226   
00002816                          3738m        
00002816                          3739m ADRREGINDIRECT_226:   
00002816  BC3C 0001               3740m         CMP.B   #$01, D6
0000281A  6700 0032               3741m         BEQ     ADRREGINDIRECTSRC_226   
0000281E                          3742m ADRREGINDIRECTDEST_226:
0000281E                          3743mm         PRINTLB
0000281E  43F8 00D0               3744mm         LEA     OLB, A1     
00002822  103C 000E               3745mm         MOVE.B  #14,D0          
00002826  4E4F                    3746mm         TRAP    #15
00002828                          3747mm         ENDM
00002828                          3748mm         PRINTANDEST D3  
00002828  3203                    3749mm         MOVE.W  D3, D1
0000282A  E949                    3750mm         LSL     #$04, D1 ; BITS 9 TO 11
0000282C  E049                    3751mm         LSR     #$08, D1
0000282E  EA49                    3752mm         LSR     #$05, D1
00002830  43F8 00CE               3753mm         LEA     OAN, A1     
00002834  103C 000E               3754mm         MOVE.B  #14,D0          
00002838  4E4F                    3755mm         TRAP    #15
0000283A  103C 0003               3756mm         MOVE.B  #3,D0          
0000283E  4E4F                    3757mm         TRAP    #15
00002840                          3758mm         ENDM
00002840                          3759mm         PRINTRB
00002840  43F8 00D2               3760mm         LEA     ORB, A1     
00002844  103C 000E               3761mm         MOVE.B  #14,D0          
00002848  4E4F                    3762mm         TRAP    #15
0000284A                          3763mm         ENDM
0000284A  6000 04E0               3764m         BRA     COMPLETE_226     
0000284E                          3765m ADRREGINDIRECTSRC_226:   
0000284E                          3766mm         PRINTLB
0000284E  43F8 00D0               3767mm         LEA     OLB, A1     
00002852  103C 000E               3768mm         MOVE.B  #14,D0          
00002856  4E4F                    3769mm         TRAP    #15
00002858                          3770mm         ENDM
00002858                          3771mm         PRINTANSRC D3  
00002858  3203                    3772mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000285A  E149                    3773mm         LSL     #$08, D1
0000285C  EB49                    3774mm         LSL     #$05, D1
0000285E  E049                    3775mm         LSR     #$08, D1
00002860  EA49                    3776mm         LSR     #$05, D1
00002862  43F8 00CE               3777mm         LEA     OAN, A1     
00002866  103C 000E               3778mm         MOVE.B  #14,D0          
0000286A  4E4F                    3779mm         TRAP    #15
0000286C  103C 0003               3780mm         MOVE.B  #3,D0          
00002870  4E4F                    3781mm         TRAP    #15
00002872                          3782mm         ENDM
00002872                          3783mm         PRINTRB
00002872  43F8 00D2               3784mm         LEA     ORB, A1     
00002876  103C 000E               3785mm         MOVE.B  #14,D0          
0000287A  4E4F                    3786mm         TRAP    #15
0000287C                          3787mm         ENDM
0000287C  6000 04AE               3788m         BRA     COMPLETE_226   
00002880                          3789m         
00002880                          3790m ADRREGPOSTINC_226:   
00002880  BC3C 0001               3791m         CMP.B   #$01, D6
00002884  6700 003C               3792m         BEQ     ADRREGPOSTINCSRC_226   
00002888                          3793m ADRREGPOSTINCDEST_226: 
00002888                          3794mm         PRINTLB
00002888  43F8 00D0               3795mm         LEA     OLB, A1     
0000288C  103C 000E               3796mm         MOVE.B  #14,D0          
00002890  4E4F                    3797mm         TRAP    #15
00002892                          3798mm         ENDM
00002892                          3799mm         PRINTANDEST D3  
00002892  3203                    3800mm         MOVE.W  D3, D1
00002894  E949                    3801mm         LSL     #$04, D1 ; BITS 9 TO 11
00002896  E049                    3802mm         LSR     #$08, D1
00002898  EA49                    3803mm         LSR     #$05, D1
0000289A  43F8 00CE               3804mm         LEA     OAN, A1     
0000289E  103C 000E               3805mm         MOVE.B  #14,D0          
000028A2  4E4F                    3806mm         TRAP    #15
000028A4  103C 0003               3807mm         MOVE.B  #3,D0          
000028A8  4E4F                    3808mm         TRAP    #15
000028AA                          3809mm         ENDM
000028AA                          3810mm         PRINTRB
000028AA  43F8 00D2               3811mm         LEA     ORB, A1     
000028AE  103C 000E               3812mm         MOVE.B  #14,D0          
000028B2  4E4F                    3813mm         TRAP    #15
000028B4                          3814mm         ENDM
000028B4                          3815mm         PRINTPI
000028B4  43F8 00D9               3816mm         LEA     OPSTINC, A1     
000028B8  103C 000E               3817mm         MOVE.B  #14,D0          
000028BC  4E4F                    3818mm         TRAP    #15
000028BE                          3819mm         ENDM
000028BE  6000 046C               3820m         BRA     COMPLETE_226  
000028C2                          3821m ADRREGPOSTINCSRC_226:           
000028C2                          3822mm         PRINTLB
000028C2  43F8 00D0               3823mm         LEA     OLB, A1     
000028C6  103C 000E               3824mm         MOVE.B  #14,D0          
000028CA  4E4F                    3825mm         TRAP    #15
000028CC                          3826mm         ENDM
000028CC                          3827mm         PRINTANSRC D3  
000028CC  3203                    3828mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000028CE  E149                    3829mm         LSL     #$08, D1
000028D0  EB49                    3830mm         LSL     #$05, D1
000028D2  E049                    3831mm         LSR     #$08, D1
000028D4  EA49                    3832mm         LSR     #$05, D1
000028D6  43F8 00CE               3833mm         LEA     OAN, A1     
000028DA  103C 000E               3834mm         MOVE.B  #14,D0          
000028DE  4E4F                    3835mm         TRAP    #15
000028E0  103C 0003               3836mm         MOVE.B  #3,D0          
000028E4  4E4F                    3837mm         TRAP    #15
000028E6                          3838mm         ENDM
000028E6                          3839mm         PRINTRB
000028E6  43F8 00D2               3840mm         LEA     ORB, A1     
000028EA  103C 000E               3841mm         MOVE.B  #14,D0          
000028EE  4E4F                    3842mm         TRAP    #15
000028F0                          3843mm         ENDM
000028F0                          3844mm         PRINTPI
000028F0  43F8 00D9               3845mm         LEA     OPSTINC, A1     
000028F4  103C 000E               3846mm         MOVE.B  #14,D0          
000028F8  4E4F                    3847mm         TRAP    #15
000028FA                          3848mm         ENDM
000028FA  6000 0430               3849m         BRA     COMPLETE_226  
000028FE                          3850m ADRREGPREDEC_226: 
000028FE  BC3C 0001               3851m         CMP.B   #$01, D6
00002902  6700 003C               3852m         BEQ     ADRREGPREDECSRC_226   
00002906                          3853m ADRREGPREDECDEST_226:
00002906                          3854mm         PRINTPD  
00002906  43F8 00D7               3855mm         LEA     OPREDEC, A1     
0000290A  103C 000E               3856mm         MOVE.B  #14,D0          
0000290E  4E4F                    3857mm         TRAP    #15
00002910                          3858mm         ENDM
00002910                          3859mm         PRINTLB
00002910  43F8 00D0               3860mm         LEA     OLB, A1     
00002914  103C 000E               3861mm         MOVE.B  #14,D0          
00002918  4E4F                    3862mm         TRAP    #15
0000291A                          3863mm         ENDM
0000291A                          3864mm         PRINTANDEST D3  
0000291A  3203                    3865mm         MOVE.W  D3, D1
0000291C  E949                    3866mm         LSL     #$04, D1 ; BITS 9 TO 11
0000291E  E049                    3867mm         LSR     #$08, D1
00002920  EA49                    3868mm         LSR     #$05, D1
00002922  43F8 00CE               3869mm         LEA     OAN, A1     
00002926  103C 000E               3870mm         MOVE.B  #14,D0          
0000292A  4E4F                    3871mm         TRAP    #15
0000292C  103C 0003               3872mm         MOVE.B  #3,D0          
00002930  4E4F                    3873mm         TRAP    #15
00002932                          3874mm         ENDM
00002932                          3875mm         PRINTRB
00002932  43F8 00D2               3876mm         LEA     ORB, A1     
00002936  103C 000E               3877mm         MOVE.B  #14,D0          
0000293A  4E4F                    3878mm         TRAP    #15
0000293C                          3879mm         ENDM
0000293C  6000 03EE               3880m         BRA     COMPLETE_226   
00002940                          3881m ADRREGPREDECSRC_226: 
00002940                          3882mm         PRINTPD  
00002940  43F8 00D7               3883mm         LEA     OPREDEC, A1     
00002944  103C 000E               3884mm         MOVE.B  #14,D0          
00002948  4E4F                    3885mm         TRAP    #15
0000294A                          3886mm         ENDM
0000294A                          3887mm         PRINTLB
0000294A  43F8 00D0               3888mm         LEA     OLB, A1     
0000294E  103C 000E               3889mm         MOVE.B  #14,D0          
00002952  4E4F                    3890mm         TRAP    #15
00002954                          3891mm         ENDM
00002954                          3892mm         PRINTANSRC D3  
00002954  3203                    3893mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002956  E149                    3894mm         LSL     #$08, D1
00002958  EB49                    3895mm         LSL     #$05, D1
0000295A  E049                    3896mm         LSR     #$08, D1
0000295C  EA49                    3897mm         LSR     #$05, D1
0000295E  43F8 00CE               3898mm         LEA     OAN, A1     
00002962  103C 000E               3899mm         MOVE.B  #14,D0          
00002966  4E4F                    3900mm         TRAP    #15
00002968  103C 0003               3901mm         MOVE.B  #3,D0          
0000296C  4E4F                    3902mm         TRAP    #15
0000296E                          3903mm         ENDM
0000296E                          3904mm         PRINTRB
0000296E  43F8 00D2               3905mm         LEA     ORB, A1     
00002972  103C 000E               3906mm         MOVE.B  #14,D0          
00002976  4E4F                    3907mm         TRAP    #15
00002978                          3908mm         ENDM
00002978  6000 03B2               3909m         BRA     COMPLETE_226
0000297C                          3910m        
0000297C                          3911m ADRABSOLUTE_226:
0000297C  BC3C 0001               3912m         CMP.B   #$01, D6
00002980  6600 0018               3913m         BNE     ADRABSOLUTEDST_226 
00002984                          3914m         
00002984  3A03                    3915m         MOVE.W  D3, D5
00002986  0803 0002               3916m         BTST    #2, D3
0000298A  6600 0024               3917m         BNE     ADRIMMEDIATE_226
0000298E  0803 0000               3918m         BTST    #0, D3
00002992  6600 0280               3919m         BNE     ADRABSOLUTEL_226
00002996  6000 01E6               3920m         BRA     ADRABSOLUTEW_226
0000299A                          3921m ADRABSOLUTEDST_226:
0000299A  3A03                    3922m         MOVE.W  D3, D5
0000299C  0803 000B               3923m         BTST    #$B, D3
000029A0  6600 000E               3924m         BNE     ADRIMMEDIATE_226
000029A4  0803 0009               3925m         BTST    #$09, D3
000029A8  6600 026A               3926m         BNE     ADRABSOLUTEL_226
000029AC  6000 01D0               3927m         BRA     ADRABSOLUTEW_226
000029B0                          3928m ADRIMMEDIATE_226:
000029B0  BE3C 0001               3929m         CMP.B   #1, D7
000029B4  6700 00A2               3930m         BEQ     ADRIMMEDIATEL_226
000029B8                          3931m ADRIMMEDIATEW_226:
000029B8  361A                    3932m         MOVE.W  (A2)+, D3
000029BA                          3933mm         PRINTHASH
000029BA  103C 0006               3934mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029BE  323C 0023               3935mm         MOVE.W  #35, D1     ; AN = SIGN
000029C2  4E4F                    3936mm         TRAP    #15         ; OUTPUT = SIGN
000029C4                          3937mm         ENDM
000029C4                          3938mm         PRINTSIGN
000029C4  103C 0006               3939mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029C8  323C 0024               3940mm         MOVE.W  #36, D1     ; AN = SIGN
000029CC  4E4F                    3941mm         TRAP    #15         ; OUTPUT = SIGN
000029CE                          3942mm         ENDM
000029CE                          3943mm         ADROUT
000029CE  103C 0006               3944mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029D2  3212                    3945mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029D4  E049                    3946mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029D6  E849                    3947mm         LSR.W   #4, D1      
000029D8                          3948mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029D8  0C01 0009               3949mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029DC  6E00 000A               3950mmm         BGT     ALPHA_256
000029E0  0601 0030               3951mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029E4  6000 0006               3952mmm         BRA     DONE_256
000029E8  0601 0037               3953mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029EC  4E71                    3954mmm DONE_256: NOP
000029EE                          3955mmm         ENDM
000029EE  4E4F                    3956mm         TRAP    #15         ; EXECUTE OUTPUT
000029F0                          3957mm         
000029F0  3212                    3958mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029F2  E949                    3959mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029F4  E049                    3960mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029F6  E849                    3961mm         LSR.W   #4, D1      
000029F8                          3962mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029F8  0C01 0009               3963mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029FC  6E00 000A               3964mmm         BGT     ALPHA_257
00002A00  0601 0030               3965mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A04  6000 0006               3966mmm         BRA     DONE_257
00002A08  0601 0037               3967mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A0C  4E71                    3968mmm DONE_257: NOP
00002A0E                          3969mmm         ENDM
00002A0E  4E4F                    3970mm         TRAP    #15         ; EXECUTE OUTPUT
00002A10                          3971mm         
00002A10  3212                    3972mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A12  E149                    3973mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A14  E049                    3974mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A16  E849                    3975mm         LSR.W   #4, D1      
00002A18                          3976mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A18  0C01 0009               3977mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A1C  6E00 000A               3978mmm         BGT     ALPHA_258
00002A20  0601 0030               3979mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A24  6000 0006               3980mmm         BRA     DONE_258
00002A28  0601 0037               3981mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A2C  4E71                    3982mmm DONE_258: NOP
00002A2E                          3983mmm         ENDM
00002A2E  4E4F                    3984mm         TRAP    #15         ; EXECUTE OUTPUT
00002A30                          3985mm         
00002A30  3212                    3986mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A32  E149                    3987mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A34  E949                    3988mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A36  E049                    3989mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A38  E849                    3990mm         LSR.W   #4, D1      
00002A3A                          3991mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A3A  0C01 0009               3992mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A3E  6E00 000A               3993mmm         BGT     ALPHA_259
00002A42  0601 0030               3994mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A46  6000 0006               3995mmm         BRA     DONE_259
00002A4A  0601 0037               3996mmm ALPHA_259: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A4E  4E71                    3997mmm DONE_259: NOP
00002A50                          3998mmm         ENDM
00002A50  4E4F                    3999mm         TRAP    #15         ; EXECUTE OUTPUT   
00002A52                          4000mm         ENDM     
00002A52  3605                    4001m         MOVE.W  D5, D3
00002A54  6000 02D6               4002m         BRA     COMPLETE_226
00002A58                          4003m ADRIMMEDIATEL_226:
00002A58  361A                    4004m         MOVE.W  (A2)+, D3
00002A5A                          4005mm         PRINTHASH
00002A5A  103C 0006               4006mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A5E  323C 0023               4007mm         MOVE.W  #35, D1     ; AN = SIGN
00002A62  4E4F                    4008mm         TRAP    #15         ; OUTPUT = SIGN
00002A64                          4009mm         ENDM
00002A64                          4010mm         PRINTSIGN
00002A64  103C 0006               4011mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A68  323C 0024               4012mm         MOVE.W  #36, D1     ; AN = SIGN
00002A6C  4E4F                    4013mm         TRAP    #15         ; OUTPUT = SIGN
00002A6E                          4014mm         ENDM
00002A6E                          4015mm         ADROUT 
00002A6E  103C 0006               4016mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A72  3212                    4017mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A74  E049                    4018mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A76  E849                    4019mm         LSR.W   #4, D1      
00002A78                          4020mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A78  0C01 0009               4021mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A7C  6E00 000A               4022mmm         BGT     ALPHA_263
00002A80  0601 0030               4023mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A84  6000 0006               4024mmm         BRA     DONE_263
00002A88  0601 0037               4025mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A8C  4E71                    4026mmm DONE_263: NOP
00002A8E                          4027mmm         ENDM
00002A8E  4E4F                    4028mm         TRAP    #15         ; EXECUTE OUTPUT
00002A90                          4029mm         
00002A90  3212                    4030mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A92  E949                    4031mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A94  E049                    4032mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A96  E849                    4033mm         LSR.W   #4, D1      
00002A98                          4034mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A98  0C01 0009               4035mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A9C  6E00 000A               4036mmm         BGT     ALPHA_264
00002AA0  0601 0030               4037mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AA4  6000 0006               4038mmm         BRA     DONE_264
00002AA8  0601 0037               4039mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AAC  4E71                    4040mmm DONE_264: NOP
00002AAE                          4041mmm         ENDM
00002AAE  4E4F                    4042mm         TRAP    #15         ; EXECUTE OUTPUT
00002AB0                          4043mm         
00002AB0  3212                    4044mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AB2  E149                    4045mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AB4  E049                    4046mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AB6  E849                    4047mm         LSR.W   #4, D1      
00002AB8                          4048mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AB8  0C01 0009               4049mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002ABC  6E00 000A               4050mmm         BGT     ALPHA_265
00002AC0  0601 0030               4051mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AC4  6000 0006               4052mmm         BRA     DONE_265
00002AC8  0601 0037               4053mmm ALPHA_265: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002ACC  4E71                    4054mmm DONE_265: NOP
00002ACE                          4055mmm         ENDM
00002ACE  4E4F                    4056mm         TRAP    #15         ; EXECUTE OUTPUT
00002AD0                          4057mm         
00002AD0  3212                    4058mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AD2  E149                    4059mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AD4  E949                    4060mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002AD6  E049                    4061mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AD8  E849                    4062mm         LSR.W   #4, D1      
00002ADA                          4063mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ADA  0C01 0009               4064mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002ADE  6E00 000A               4065mmm         BGT     ALPHA_266
00002AE2  0601 0030               4066mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AE6  6000 0006               4067mmm         BRA     DONE_266
00002AEA  0601 0037               4068mmm ALPHA_266: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AEE  4E71                    4069mmm DONE_266: NOP
00002AF0                          4070mmm         ENDM
00002AF0  4E4F                    4071mm         TRAP    #15         ; EXECUTE OUTPUT   
00002AF2                          4072mm         ENDM     
00002AF2  361A                    4073m         MOVE.W  (A2)+, D3
00002AF4                          4074mm         ADROUT
00002AF4  103C 0006               4075mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AF8  3212                    4076mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AFA  E049                    4077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AFC  E849                    4078mm         LSR.W   #4, D1      
00002AFE                          4079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AFE  0C01 0009               4080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B02  6E00 000A               4081mmm         BGT     ALPHA_268
00002B06  0601 0030               4082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B0A  6000 0006               4083mmm         BRA     DONE_268
00002B0E  0601 0037               4084mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B12  4E71                    4085mmm DONE_268: NOP
00002B14                          4086mmm         ENDM
00002B14  4E4F                    4087mm         TRAP    #15         ; EXECUTE OUTPUT
00002B16                          4088mm         
00002B16  3212                    4089mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B18  E949                    4090mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B1A  E049                    4091mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1C  E849                    4092mm         LSR.W   #4, D1      
00002B1E                          4093mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1E  0C01 0009               4094mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B22  6E00 000A               4095mmm         BGT     ALPHA_269
00002B26  0601 0030               4096mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B2A  6000 0006               4097mmm         BRA     DONE_269
00002B2E  0601 0037               4098mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B32  4E71                    4099mmm DONE_269: NOP
00002B34                          4100mmm         ENDM
00002B34  4E4F                    4101mm         TRAP    #15         ; EXECUTE OUTPUT
00002B36                          4102mm         
00002B36  3212                    4103mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B38  E149                    4104mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B3A  E049                    4105mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    4106mm         LSR.W   #4, D1      
00002B3E                          4107mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               4108mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               4109mmm         BGT     ALPHA_270
00002B46  0601 0030               4110mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               4111mmm         BRA     DONE_270
00002B4E  0601 0037               4112mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    4113mmm DONE_270: NOP
00002B54                          4114mmm         ENDM
00002B54  4E4F                    4115mm         TRAP    #15         ; EXECUTE OUTPUT
00002B56                          4116mm         
00002B56  3212                    4117mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B58  E149                    4118mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B5A  E949                    4119mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B5C  E049                    4120mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B5E  E849                    4121mm         LSR.W   #4, D1      
00002B60                          4122mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B60  0C01 0009               4123mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B64  6E00 000A               4124mmm         BGT     ALPHA_271
00002B68  0601 0030               4125mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B6C  6000 0006               4126mmm         BRA     DONE_271
00002B70  0601 0037               4127mmm ALPHA_271: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B74  4E71                    4128mmm DONE_271: NOP
00002B76                          4129mmm         ENDM
00002B76  4E4F                    4130mm         TRAP    #15         ; EXECUTE OUTPUT   
00002B78                          4131mm         ENDM     
00002B78  3605                    4132m         MOVE.W  D5, D3
00002B7A  6000 01B0               4133m         BRA     COMPLETE_226 
00002B7E                          4134m ADRABSOLUTEW_226:     
00002B7E  361A                    4135m         MOVE.W  (A2)+, D3
00002B80                          4136mm         PRINTSIGN
00002B80  103C 0006               4137mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B84  323C 0024               4138mm         MOVE.W  #36, D1     ; AN = SIGN
00002B88  4E4F                    4139mm         TRAP    #15         ; OUTPUT = SIGN
00002B8A                          4140mm         ENDM
00002B8A                          4141mm         ADROUT
00002B8A  103C 0006               4142mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B8E  3212                    4143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B90  E049                    4144mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B92  E849                    4145mm         LSR.W   #4, D1      
00002B94                          4146mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B94  0C01 0009               4147mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B98  6E00 000A               4148mmm         BGT     ALPHA_274
00002B9C  0601 0030               4149mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BA0  6000 0006               4150mmm         BRA     DONE_274
00002BA4  0601 0037               4151mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BA8  4E71                    4152mmm DONE_274: NOP
00002BAA                          4153mmm         ENDM
00002BAA  4E4F                    4154mm         TRAP    #15         ; EXECUTE OUTPUT
00002BAC                          4155mm         
00002BAC  3212                    4156mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BAE  E949                    4157mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002BB0  E049                    4158mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BB2  E849                    4159mm         LSR.W   #4, D1      
00002BB4                          4160mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BB4  0C01 0009               4161mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BB8  6E00 000A               4162mmm         BGT     ALPHA_275
00002BBC  0601 0030               4163mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BC0  6000 0006               4164mmm         BRA     DONE_275
00002BC4  0601 0037               4165mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BC8  4E71                    4166mmm DONE_275: NOP
00002BCA                          4167mmm         ENDM
00002BCA  4E4F                    4168mm         TRAP    #15         ; EXECUTE OUTPUT
00002BCC                          4169mm         
00002BCC  3212                    4170mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BCE  E149                    4171mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BD0  E049                    4172mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BD2  E849                    4173mm         LSR.W   #4, D1      
00002BD4                          4174mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BD4  0C01 0009               4175mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BD8  6E00 000A               4176mmm         BGT     ALPHA_276
00002BDC  0601 0030               4177mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BE0  6000 0006               4178mmm         BRA     DONE_276
00002BE4  0601 0037               4179mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BE8  4E71                    4180mmm DONE_276: NOP
00002BEA                          4181mmm         ENDM
00002BEA  4E4F                    4182mm         TRAP    #15         ; EXECUTE OUTPUT
00002BEC                          4183mm         
00002BEC  3212                    4184mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BEE  E149                    4185mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BF0  E949                    4186mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BF2  E049                    4187mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BF4  E849                    4188mm         LSR.W   #4, D1      
00002BF6                          4189mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BF6  0C01 0009               4190mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BFA  6E00 000A               4191mmm         BGT     ALPHA_277
00002BFE  0601 0030               4192mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C02  6000 0006               4193mmm         BRA     DONE_277
00002C06  0601 0037               4194mmm ALPHA_277: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C0A  4E71                    4195mmm DONE_277: NOP
00002C0C                          4196mmm         ENDM
00002C0C  4E4F                    4197mm         TRAP    #15         ; EXECUTE OUTPUT   
00002C0E                          4198mm         ENDM     
00002C0E  3605                    4199m         MOVE.W  D5, D3
00002C10  6000 011A               4200m         BRA     COMPLETE_226  
00002C14                          4201m ADRABSOLUTEL_226:  
00002C14  361A                    4202m         MOVE.W  (A2)+, D3
00002C16                          4203mm         PRINTSIGN
00002C16  103C 0006               4204mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C1A  323C 0024               4205mm         MOVE.W  #36, D1     ; AN = SIGN
00002C1E  4E4F                    4206mm         TRAP    #15         ; OUTPUT = SIGN
00002C20                          4207mm         ENDM
00002C20                          4208mm         ADROUT 
00002C20  103C 0006               4209mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C24  3212                    4210mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C26  E049                    4211mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C28  E849                    4212mm         LSR.W   #4, D1      
00002C2A                          4213mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C2A  0C01 0009               4214mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C2E  6E00 000A               4215mmm         BGT     ALPHA_280
00002C32  0601 0030               4216mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C36  6000 0006               4217mmm         BRA     DONE_280
00002C3A  0601 0037               4218mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C3E  4E71                    4219mmm DONE_280: NOP
00002C40                          4220mmm         ENDM
00002C40  4E4F                    4221mm         TRAP    #15         ; EXECUTE OUTPUT
00002C42                          4222mm         
00002C42  3212                    4223mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C44  E949                    4224mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002C46  E049                    4225mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C48  E849                    4226mm         LSR.W   #4, D1      
00002C4A                          4227mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C4A  0C01 0009               4228mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C4E  6E00 000A               4229mmm         BGT     ALPHA_281
00002C52  0601 0030               4230mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C56  6000 0006               4231mmm         BRA     DONE_281
00002C5A  0601 0037               4232mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C5E  4E71                    4233mmm DONE_281: NOP
00002C60                          4234mmm         ENDM
00002C60  4E4F                    4235mm         TRAP    #15         ; EXECUTE OUTPUT
00002C62                          4236mm         
00002C62  3212                    4237mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C64  E149                    4238mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C66  E049                    4239mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C68  E849                    4240mm         LSR.W   #4, D1      
00002C6A                          4241mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C6A  0C01 0009               4242mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C6E  6E00 000A               4243mmm         BGT     ALPHA_282
00002C72  0601 0030               4244mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C76  6000 0006               4245mmm         BRA     DONE_282
00002C7A  0601 0037               4246mmm ALPHA_282: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C7E  4E71                    4247mmm DONE_282: NOP
00002C80                          4248mmm         ENDM
00002C80  4E4F                    4249mm         TRAP    #15         ; EXECUTE OUTPUT
00002C82                          4250mm         
00002C82  3212                    4251mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C84  E149                    4252mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C86  E949                    4253mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002C88  E049                    4254mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C8A  E849                    4255mm         LSR.W   #4, D1      
00002C8C                          4256mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C8C  0C01 0009               4257mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C90  6E00 000A               4258mmm         BGT     ALPHA_283
00002C94  0601 0030               4259mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C98  6000 0006               4260mmm         BRA     DONE_283
00002C9C  0601 0037               4261mmm ALPHA_283: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CA0  4E71                    4262mmm DONE_283: NOP
00002CA2                          4263mmm         ENDM
00002CA2  4E4F                    4264mm         TRAP    #15         ; EXECUTE OUTPUT   
00002CA4                          4265mm         ENDM     
00002CA4  361A                    4266m         MOVE.W  (A2)+, D3
00002CA6                          4267mm         ADROUT
00002CA6  103C 0006               4268mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002CAA  3212                    4269mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CAC  E049                    4270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CAE  E849                    4271mm         LSR.W   #4, D1      
00002CB0                          4272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CB0  0C01 0009               4273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CB4  6E00 000A               4274mmm         BGT     ALPHA_285
00002CB8  0601 0030               4275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CBC  6000 0006               4276mmm         BRA     DONE_285
00002CC0  0601 0037               4277mmm ALPHA_285: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CC4  4E71                    4278mmm DONE_285: NOP
00002CC6                          4279mmm         ENDM
00002CC6  4E4F                    4280mm         TRAP    #15         ; EXECUTE OUTPUT
00002CC8                          4281mm         
00002CC8  3212                    4282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CCA  E949                    4283mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002CCC  E049                    4284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CCE  E849                    4285mm         LSR.W   #4, D1      
00002CD0                          4286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CD0  0C01 0009               4287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CD4  6E00 000A               4288mmm         BGT     ALPHA_286
00002CD8  0601 0030               4289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CDC  6000 0006               4290mmm         BRA     DONE_286
00002CE0  0601 0037               4291mmm ALPHA_286: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CE4  4E71                    4292mmm DONE_286: NOP
00002CE6                          4293mmm         ENDM
00002CE6  4E4F                    4294mm         TRAP    #15         ; EXECUTE OUTPUT
00002CE8                          4295mm         
00002CE8  3212                    4296mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CEA  E149                    4297mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002CEC  E049                    4298mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CEE  E849                    4299mm         LSR.W   #4, D1      
00002CF0                          4300mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CF0  0C01 0009               4301mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CF4  6E00 000A               4302mmm         BGT     ALPHA_287
00002CF8  0601 0030               4303mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CFC  6000 0006               4304mmm         BRA     DONE_287
00002D00  0601 0037               4305mmm ALPHA_287: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002D04  4E71                    4306mmm DONE_287: NOP
00002D06                          4307mmm         ENDM
00002D06  4E4F                    4308mm         TRAP    #15         ; EXECUTE OUTPUT
00002D08                          4309mm         
00002D08  3212                    4310mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002D0A  E149                    4311mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002D0C  E949                    4312mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002D0E  E049                    4313mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002D10  E849                    4314mm         LSR.W   #4, D1      
00002D12                          4315mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002D12  0C01 0009               4316mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002D16  6E00 000A               4317mmm         BGT     ALPHA_288
00002D1A  0601 0030               4318mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002D1E  6000 0006               4319mmm         BRA     DONE_288
00002D22  0601 0037               4320mmm ALPHA_288: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002D26  4E71                    4321mmm DONE_288: NOP
00002D28                          4322mmm         ENDM
00002D28  4E4F                    4323mm         TRAP    #15         ; EXECUTE OUTPUT   
00002D2A                          4324mm         ENDM     
00002D2A  3605                    4325m         MOVE.W  D5, D3
00002D2C                          4326m 
00002D2C                          4327m COMPLETE_226:  ; OPCODE HAS BEEN VERIFIED
00002D2C                          4328m         ENDM
00002D2C                          4329m         printComma
00002D2C  43F8 00D4               4330m         LEA     OCOMMA, A1     
00002D30  103C 000E               4331m         MOVE.B  #14,D0          
00002D34  4E4F                    4332m         TRAP    #15
00002D36                          4333m         ENDM
00002D36                          4334m         printDnDest     D3
00002D36  3203                    4335m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D38  E949                    4336m         LSL     #$04, D1
00002D3A  E049                    4337m         LSR     #$08, D1
00002D3C  EA49                    4338m         LSR     #$05, D1
00002D3E  43F8 00CC               4339m         LEA     ODN, A1     
00002D42  103C 000E               4340m         MOVE.B  #14,D0          
00002D46  4E4F                    4341m         TRAP    #15
00002D48  103C 0003               4342m         MOVE.B  #3,D0          
00002D4C  4E4F                    4343m         TRAP    #15
00002D4E                          4344m         ENDM
00002D4E                          4345  decodeADDcomp:
00002D4E  4E75                    4346          RTS                ; Return from decodeADD subroutine
00002D50                          4347  
00002D50                          4348  
00002D50                          4349  ; ------------------------------------------------------------
00002D50                          4350  ; 5. "decodeSUB" subroutine
00002D50                          4351  ; Gary
00002D50                          4352  ;
00002D50                          4353  ; Decodes sub by verifying, printing, checking the opmode(and size),
00002D50                          4354  ; and decoding the adressing modes used.
00002D50                          4355  ; ------------------------------------------------------------
00002D50                          4356  decodeSUB:
00002D50                          4357m         verifyOpcode    pSUB, (A2)
00002D50  43F8 0142               4358m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002D54  3612                    4359m         MOVE.W  (A2), D3      ; INPUT VALUE
00002D56  123C 000F               4360m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002D5A                          4361m         
00002D5A                          4362m LOOP_291: 
00002D5A  0C11 0030               4363m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002D5E  6700 000E               4364m         BEQ     CHECKFOR0_291
00002D62  0C11 0031               4365m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002D66  6700 0010               4366m         BEQ     CHECKFOR1_291
00002D6A  6000 0012               4367m         BRA     NEXT_291      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002D6E                          4368m         
00002D6E                          4369m CHECKFOR0_291: 
00002D6E  0303                    4370m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002D70  6600 4A30               4371m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002D74  6000 0008               4372m         BRA     NEXT_291
00002D78                          4373m 
00002D78                          4374m CHECKFOR1_291:
00002D78  0303                    4375m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002D7A  6700 4A26               4376m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002D7E                          4377m 
00002D7E                          4378m NEXT_291: 
00002D7E  B23C 0000               4379m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002D82  6700 0008               4380m         BEQ     COMPLETE_291  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002D86  5301                    4381m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D88  1819                    4382m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002D8A  60CE                    4383m         BRA     LOOP_291      ; BEGIN LOOP AGAIN
00002D8C                          4384m 
00002D8C                          4385m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
00002D8C                          4386m         ENDM
00002D8C  43F8 0078               4387          LEA     oSUB, A1     
00002D90  103C 000E               4388          MOVE.B  #14,D0          
00002D94  4E4F                    4389          TRAP    #15
00002D96                          4390m         printOpMode     (A2)
00002D96  3612                    4391m         MOVE.W  (A2), D3      
00002D98  123C 0008               4392m         MOVE.B  #8, D1    
00002D9C  4246                    4393m         CLR     D6
00002D9E  4247                    4394m         CLR     D7
00002DA0                          4395m CHECKFORDESTDN_292: 
00002DA0  0303                    4396m         BTST    D1, D3      
00002DA2  6600 004C               4397m         BNE     CHECKFORSRCDN_292
00002DA6  4EB9 00002E7E           4398m         JSR     NEXT_292
00002DAC  1C3C 0001               4399m         MOVE.B  #$1, D6
00002DB0  0303                    4400m         BTST    D1, D3      
00002DB2  6700 0014               4401m         BEQ     DESTDNW_292
00002DB6                          4402m DESTDNL_292:        
00002DB6  43F8 00C8               4403m         LEA     OLSIZE, A1     
00002DBA  103C 000E               4404m         MOVE.B  #14,D0          
00002DBE  4E4F                    4405m         TRAP    #15
00002DC0  1E3C 0001               4406m         MOVE.B  #$1, D7
00002DC4  6000 00BC               4407m         BRA     COMPLETE_292 
00002DC8                          4408m DESTDNW_292: 
00002DC8  4EB9 00002E7E           4409m         JSR     NEXT_292
00002DCE  0303                    4410m         BTST    D1, D3      
00002DD0  6700 0010               4411m         BEQ     DESTDNB_292
00002DD4  43F8 00C4               4412m         LEA     OWSIZE, A1     
00002DD8  103C 000E               4413m         MOVE.B  #14,D0          
00002DDC  4E4F                    4414m         TRAP    #15
00002DDE  6000 00A2               4415m         BRA     COMPLETE_292 
00002DE2                          4416m DESTDNB_292: 
00002DE2  43F8 00C0               4417m         LEA     OBSIZE, A1     
00002DE6  103C 000E               4418m         MOVE.B  #14,D0          
00002DEA  4E4F                    4419m         TRAP    #15
00002DEC  6000 0094               4420m         BRA     COMPLETE_292 
00002DF0                          4421m CHECKFORSRCDN_292: 
00002DF0  4EB9 00002E7E           4422m         JSR     NEXT_292
00002DF6  0303                    4423m         BTST    D1, D3      
00002DF8  6700 002C               4424m         BEQ     SRCDNW_292
00002DFC                          4425m SRCDNL_292:        
00002DFC  43F8 00C8               4426m         LEA     OLSIZE, A1     
00002E00  103C 000E               4427m         MOVE.B  #14,D0          
00002E04  4E4F                    4428m         TRAP    #15
00002E06  1E3C 0001               4429m         MOVE.B  #$1, D7
00002E0A                          4430mm         PRINTDNDEST D3
00002E0A  3203                    4431mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E0C  E949                    4432mm         LSL     #$04, D1
00002E0E  E049                    4433mm         LSR     #$08, D1
00002E10  EA49                    4434mm         LSR     #$05, D1
00002E12  43F8 00CC               4435mm         LEA     ODN, A1     
00002E16  103C 000E               4436mm         MOVE.B  #14,D0          
00002E1A  4E4F                    4437mm         TRAP    #15
00002E1C  103C 0003               4438mm         MOVE.B  #3,D0          
00002E20  4E4F                    4439mm         TRAP    #15
00002E22                          4440mm         ENDM
00002E22  6000 005E               4441m         BRA     COMPLETE_292 
00002E26                          4442m SRCDNW_292:
00002E26  4EB9 00002E7E           4443m         JSR     NEXT_292
00002E2C  0303                    4444m         BTST    D1, D3     
00002E2E  6700 0028               4445m         BEQ     SRCDNB_292
00002E32  43F8 00C4               4446m         LEA     OWSIZE, A1     
00002E36  103C 000E               4447m         MOVE.B  #14,D0          
00002E3A  4E4F                    4448m         TRAP    #15
00002E3C                          4449mm         PRINTDNDEST D3
00002E3C  3203                    4450mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E3E  E949                    4451mm         LSL     #$04, D1
00002E40  E049                    4452mm         LSR     #$08, D1
00002E42  EA49                    4453mm         LSR     #$05, D1
00002E44  43F8 00CC               4454mm         LEA     ODN, A1     
00002E48  103C 000E               4455mm         MOVE.B  #14,D0          
00002E4C  4E4F                    4456mm         TRAP    #15
00002E4E  103C 0003               4457mm         MOVE.B  #3,D0          
00002E52  4E4F                    4458mm         TRAP    #15
00002E54                          4459mm         ENDM
00002E54  6000 002C               4460m         BRA     COMPLETE_292 
00002E58                          4461m SRCDNB_292: 
00002E58  43F8 00C0               4462m         LEA     OBSIZE, A1     
00002E5C  103C 000E               4463m         MOVE.B  #14,D0          
00002E60  4E4F                    4464m         TRAP    #15
00002E62                          4465mm         PRINTDNDEST D3
00002E62  3203                    4466mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E64  E949                    4467mm         LSL     #$04, D1
00002E66  E049                    4468mm         LSR     #$08, D1
00002E68  EA49                    4469mm         LSR     #$05, D1
00002E6A  43F8 00CC               4470mm         LEA     ODN, A1     
00002E6E  103C 000E               4471mm         MOVE.B  #14,D0          
00002E72  4E4F                    4472mm         TRAP    #15
00002E74  103C 0003               4473mm         MOVE.B  #3,D0          
00002E78  4E4F                    4474mm         TRAP    #15
00002E7A                          4475mm         ENDM
00002E7A  6000 0006               4476m         BRA     COMPLETE_292 
00002E7E                          4477m 
00002E7E                          4478m NEXT_292:
00002E7E  5301                    4479m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002E80  4E75                    4480m         RTS                
00002E82                          4481m 
00002E82                          4482m COMPLETE_292:  ; OPCODE HAS BEEN VERIFIED
00002E82                          4483m         ENDM
00002E82  BC3C 0001               4484          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002E86  6700 05F8               4485          BEQ     decodeSubDestOp
00002E8A                          4486m         printComma
00002E8A  43F8 00D4               4487m         LEA     OCOMMA, A1     
00002E8E  103C 000E               4488m         MOVE.B  #14,D0          
00002E92  4E4F                    4489m         TRAP    #15
00002E94                          4490m         ENDM
00002E94                          4491m         prepareAdrMode  #$1, (A2)
00002E94  3C3C 0001               4492m         MOVE.W  #$1, D6      ; INPUT VALUE
00002E98  3212                    4493m         MOVE.W  (A2), D1
00002E9A  BC3C 0001               4494m         CMP.B   #$01, D6
00002E9E  6700 000C               4495m         BEQ     ADRSOURCE_297    
00002EA2                          4496m ADRDEST_297:
00002EA2  EF49                    4497m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002EA4  E049                    4498m         LSR     #$08, D1
00002EA6  EA49                    4499m         LSR     #$05, D1
00002EA8  6000 000A               4500m         BRA     COMPLETE_297 
00002EAC                          4501m ADRSOURCE_297:                
00002EAC  E149                    4502m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002EAE  E549                    4503m         LSL     #$02, D1
00002EB0  E049                    4504m         LSR     #$08, D1
00002EB2  EA49                    4505m         LSR     #$05, D1
00002EB4                          4506m COMPLETE_297:  ; OPCODE HAS BEEN VERIFIED
00002EB4                          4507m         ENDM        
00002EB4                          4508m         decodeAdrMode   (A2), D1
00002EB4  3612                    4509m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002EB6  3201                    4510m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002EB8                          4511m 
00002EB8  B23C 0001               4512m         CMP.B   #$01, D1
00002EBC  6700 0066               4513m         BEQ     ADRREGDIRECT_298    
00002EC0  B23C 0002               4514m         CMP.B   #$02, D1
00002EC4  6700 00A0               4515m         BEQ     ADRREGINDIRECT_298  
00002EC8  B23C 0003               4516m         CMP.B   #$03, D1
00002ECC  6700 0102               4517m         BEQ     ADRREGPOSTINC_298  
00002ED0  B23C 0004               4518m         CMP.B   #$04, D1
00002ED4  6700 0178               4519m         BEQ     ADRREGPREDEC_298
00002ED8  B23C 0007               4520m         CMP.B   #$07, D1
00002EDC  6700 01EE               4521m         BEQ     ADRABSOLUTE_298    
00002EE0                          4522m         
00002EE0                          4523m DATAREGDIRECT_298: 
00002EE0  BC3C 0001               4524m         CMP.B   #$01, D6
00002EE4  6700 001E               4525m         BEQ     DATAREGDIRECTSRC_298   
00002EE8                          4526m DATAREGDIRECTDEST_298: 
00002EE8                          4527mm         PRINTDNDEST D3 
00002EE8  3203                    4528mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002EEA  E949                    4529mm         LSL     #$04, D1
00002EEC  E049                    4530mm         LSR     #$08, D1
00002EEE  EA49                    4531mm         LSR     #$05, D1
00002EF0  43F8 00CC               4532mm         LEA     ODN, A1     
00002EF4  103C 000E               4533mm         MOVE.B  #14,D0          
00002EF8  4E4F                    4534mm         TRAP    #15
00002EFA  103C 0003               4535mm         MOVE.B  #3,D0          
00002EFE  4E4F                    4536mm         TRAP    #15
00002F00                          4537mm         ENDM
00002F00  6000 057A               4538m         BRA     COMPLETE_298 
00002F04                          4539m DATAREGDIRECTSRC_298: 
00002F04                          4540mm         PRINTDNSRC D3 
00002F04  4281                    4541mm         CLR.L   D1
00002F06  3203                    4542mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F08  E149                    4543mm         LSL     #$08, D1
00002F0A  EB49                    4544mm         LSL     #$05, D1
00002F0C  E049                    4545mm         LSR     #$08, D1
00002F0E  EA49                    4546mm         LSR     #$05, D1
00002F10  43F8 00CC               4547mm         LEA     ODN, A1     
00002F14  103C 000E               4548mm         MOVE.B  #14,D0          
00002F18  4E4F                    4549mm         TRAP    #15
00002F1A  103C 0003               4550mm         MOVE.B  #3,D0          
00002F1E  4E4F                    4551mm         TRAP    #15
00002F20                          4552mm         ENDM
00002F20  6000 055A               4553m         BRA     COMPLETE_298   
00002F24                          4554m         
00002F24                          4555m ADRREGDIRECT_298: 
00002F24  BC3C 0001               4556m         CMP.B   #$01, D6
00002F28  6700 001E               4557m         BEQ     ADRREGDIRECTSRC_298   
00002F2C                          4558m ADRREGDIRECTDEST_298:
00002F2C                          4559mm         PRINTANDEST D3
00002F2C  3203                    4560mm         MOVE.W  D3, D1
00002F2E  E949                    4561mm         LSL     #$04, D1 ; BITS 9 TO 11
00002F30  E049                    4562mm         LSR     #$08, D1
00002F32  EA49                    4563mm         LSR     #$05, D1
00002F34  43F8 00CE               4564mm         LEA     OAN, A1     
00002F38  103C 000E               4565mm         MOVE.B  #14,D0          
00002F3C  4E4F                    4566mm         TRAP    #15
00002F3E  103C 0003               4567mm         MOVE.B  #3,D0          
00002F42  4E4F                    4568mm         TRAP    #15
00002F44                          4569mm         ENDM
00002F44  6000 0536               4570m         BRA     COMPLETE_298   
00002F48                          4571m ADRREGDIRECTSRC_298:
00002F48                          4572mm         PRINTANSRC D3
00002F48  3203                    4573mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F4A  E149                    4574mm         LSL     #$08, D1
00002F4C  EB49                    4575mm         LSL     #$05, D1
00002F4E  E049                    4576mm         LSR     #$08, D1
00002F50  EA49                    4577mm         LSR     #$05, D1
00002F52  43F8 00CE               4578mm         LEA     OAN, A1     
00002F56  103C 000E               4579mm         MOVE.B  #14,D0          
00002F5A  4E4F                    4580mm         TRAP    #15
00002F5C  103C 0003               4581mm         MOVE.B  #3,D0          
00002F60  4E4F                    4582mm         TRAP    #15
00002F62                          4583mm         ENDM
00002F62  6000 0518               4584m         BRA     COMPLETE_298   
00002F66                          4585m        
00002F66                          4586m ADRREGINDIRECT_298:   
00002F66  BC3C 0001               4587m         CMP.B   #$01, D6
00002F6A  6700 0032               4588m         BEQ     ADRREGINDIRECTSRC_298   
00002F6E                          4589m ADRREGINDIRECTDEST_298:
00002F6E                          4590mm         PRINTLB
00002F6E  43F8 00D0               4591mm         LEA     OLB, A1     
00002F72  103C 000E               4592mm         MOVE.B  #14,D0          
00002F76  4E4F                    4593mm         TRAP    #15
00002F78                          4594mm         ENDM
00002F78                          4595mm         PRINTANDEST D3  
00002F78  3203                    4596mm         MOVE.W  D3, D1
00002F7A  E949                    4597mm         LSL     #$04, D1 ; BITS 9 TO 11
00002F7C  E049                    4598mm         LSR     #$08, D1
00002F7E  EA49                    4599mm         LSR     #$05, D1
00002F80  43F8 00CE               4600mm         LEA     OAN, A1     
00002F84  103C 000E               4601mm         MOVE.B  #14,D0          
00002F88  4E4F                    4602mm         TRAP    #15
00002F8A  103C 0003               4603mm         MOVE.B  #3,D0          
00002F8E  4E4F                    4604mm         TRAP    #15
00002F90                          4605mm         ENDM
00002F90                          4606mm         PRINTRB
00002F90  43F8 00D2               4607mm         LEA     ORB, A1     
00002F94  103C 000E               4608mm         MOVE.B  #14,D0          
00002F98  4E4F                    4609mm         TRAP    #15
00002F9A                          4610mm         ENDM
00002F9A  6000 04E0               4611m         BRA     COMPLETE_298     
00002F9E                          4612m ADRREGINDIRECTSRC_298:   
00002F9E                          4613mm         PRINTLB
00002F9E  43F8 00D0               4614mm         LEA     OLB, A1     
00002FA2  103C 000E               4615mm         MOVE.B  #14,D0          
00002FA6  4E4F                    4616mm         TRAP    #15
00002FA8                          4617mm         ENDM
00002FA8                          4618mm         PRINTANSRC D3  
00002FA8  3203                    4619mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002FAA  E149                    4620mm         LSL     #$08, D1
00002FAC  EB49                    4621mm         LSL     #$05, D1
00002FAE  E049                    4622mm         LSR     #$08, D1
00002FB0  EA49                    4623mm         LSR     #$05, D1
00002FB2  43F8 00CE               4624mm         LEA     OAN, A1     
00002FB6  103C 000E               4625mm         MOVE.B  #14,D0          
00002FBA  4E4F                    4626mm         TRAP    #15
00002FBC  103C 0003               4627mm         MOVE.B  #3,D0          
00002FC0  4E4F                    4628mm         TRAP    #15
00002FC2                          4629mm         ENDM
00002FC2                          4630mm         PRINTRB
00002FC2  43F8 00D2               4631mm         LEA     ORB, A1     
00002FC6  103C 000E               4632mm         MOVE.B  #14,D0          
00002FCA  4E4F                    4633mm         TRAP    #15
00002FCC                          4634mm         ENDM
00002FCC  6000 04AE               4635m         BRA     COMPLETE_298   
00002FD0                          4636m         
00002FD0                          4637m ADRREGPOSTINC_298:   
00002FD0  BC3C 0001               4638m         CMP.B   #$01, D6
00002FD4  6700 003C               4639m         BEQ     ADRREGPOSTINCSRC_298   
00002FD8                          4640m ADRREGPOSTINCDEST_298: 
00002FD8                          4641mm         PRINTLB
00002FD8  43F8 00D0               4642mm         LEA     OLB, A1     
00002FDC  103C 000E               4643mm         MOVE.B  #14,D0          
00002FE0  4E4F                    4644mm         TRAP    #15
00002FE2                          4645mm         ENDM
00002FE2                          4646mm         PRINTANDEST D3  
00002FE2  3203                    4647mm         MOVE.W  D3, D1
00002FE4  E949                    4648mm         LSL     #$04, D1 ; BITS 9 TO 11
00002FE6  E049                    4649mm         LSR     #$08, D1
00002FE8  EA49                    4650mm         LSR     #$05, D1
00002FEA  43F8 00CE               4651mm         LEA     OAN, A1     
00002FEE  103C 000E               4652mm         MOVE.B  #14,D0          
00002FF2  4E4F                    4653mm         TRAP    #15
00002FF4  103C 0003               4654mm         MOVE.B  #3,D0          
00002FF8  4E4F                    4655mm         TRAP    #15
00002FFA                          4656mm         ENDM
00002FFA                          4657mm         PRINTRB
00002FFA  43F8 00D2               4658mm         LEA     ORB, A1     
00002FFE  103C 000E               4659mm         MOVE.B  #14,D0          
00003002  4E4F                    4660mm         TRAP    #15
00003004                          4661mm         ENDM
00003004                          4662mm         PRINTPI
00003004  43F8 00D9               4663mm         LEA     OPSTINC, A1     
00003008  103C 000E               4664mm         MOVE.B  #14,D0          
0000300C  4E4F                    4665mm         TRAP    #15
0000300E                          4666mm         ENDM
0000300E  6000 046C               4667m         BRA     COMPLETE_298  
00003012                          4668m ADRREGPOSTINCSRC_298:           
00003012                          4669mm         PRINTLB
00003012  43F8 00D0               4670mm         LEA     OLB, A1     
00003016  103C 000E               4671mm         MOVE.B  #14,D0          
0000301A  4E4F                    4672mm         TRAP    #15
0000301C                          4673mm         ENDM
0000301C                          4674mm         PRINTANSRC D3  
0000301C  3203                    4675mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000301E  E149                    4676mm         LSL     #$08, D1
00003020  EB49                    4677mm         LSL     #$05, D1
00003022  E049                    4678mm         LSR     #$08, D1
00003024  EA49                    4679mm         LSR     #$05, D1
00003026  43F8 00CE               4680mm         LEA     OAN, A1     
0000302A  103C 000E               4681mm         MOVE.B  #14,D0          
0000302E  4E4F                    4682mm         TRAP    #15
00003030  103C 0003               4683mm         MOVE.B  #3,D0          
00003034  4E4F                    4684mm         TRAP    #15
00003036                          4685mm         ENDM
00003036                          4686mm         PRINTRB
00003036  43F8 00D2               4687mm         LEA     ORB, A1     
0000303A  103C 000E               4688mm         MOVE.B  #14,D0          
0000303E  4E4F                    4689mm         TRAP    #15
00003040                          4690mm         ENDM
00003040                          4691mm         PRINTPI
00003040  43F8 00D9               4692mm         LEA     OPSTINC, A1     
00003044  103C 000E               4693mm         MOVE.B  #14,D0          
00003048  4E4F                    4694mm         TRAP    #15
0000304A                          4695mm         ENDM
0000304A  6000 0430               4696m         BRA     COMPLETE_298  
0000304E                          4697m ADRREGPREDEC_298: 
0000304E  BC3C 0001               4698m         CMP.B   #$01, D6
00003052  6700 003C               4699m         BEQ     ADRREGPREDECSRC_298   
00003056                          4700m ADRREGPREDECDEST_298:
00003056                          4701mm         PRINTPD  
00003056  43F8 00D7               4702mm         LEA     OPREDEC, A1     
0000305A  103C 000E               4703mm         MOVE.B  #14,D0          
0000305E  4E4F                    4704mm         TRAP    #15
00003060                          4705mm         ENDM
00003060                          4706mm         PRINTLB
00003060  43F8 00D0               4707mm         LEA     OLB, A1     
00003064  103C 000E               4708mm         MOVE.B  #14,D0          
00003068  4E4F                    4709mm         TRAP    #15
0000306A                          4710mm         ENDM
0000306A                          4711mm         PRINTANDEST D3  
0000306A  3203                    4712mm         MOVE.W  D3, D1
0000306C  E949                    4713mm         LSL     #$04, D1 ; BITS 9 TO 11
0000306E  E049                    4714mm         LSR     #$08, D1
00003070  EA49                    4715mm         LSR     #$05, D1
00003072  43F8 00CE               4716mm         LEA     OAN, A1     
00003076  103C 000E               4717mm         MOVE.B  #14,D0          
0000307A  4E4F                    4718mm         TRAP    #15
0000307C  103C 0003               4719mm         MOVE.B  #3,D0          
00003080  4E4F                    4720mm         TRAP    #15
00003082                          4721mm         ENDM
00003082                          4722mm         PRINTRB
00003082  43F8 00D2               4723mm         LEA     ORB, A1     
00003086  103C 000E               4724mm         MOVE.B  #14,D0          
0000308A  4E4F                    4725mm         TRAP    #15
0000308C                          4726mm         ENDM
0000308C  6000 03EE               4727m         BRA     COMPLETE_298   
00003090                          4728m ADRREGPREDECSRC_298: 
00003090                          4729mm         PRINTPD  
00003090  43F8 00D7               4730mm         LEA     OPREDEC, A1     
00003094  103C 000E               4731mm         MOVE.B  #14,D0          
00003098  4E4F                    4732mm         TRAP    #15
0000309A                          4733mm         ENDM
0000309A                          4734mm         PRINTLB
0000309A  43F8 00D0               4735mm         LEA     OLB, A1     
0000309E  103C 000E               4736mm         MOVE.B  #14,D0          
000030A2  4E4F                    4737mm         TRAP    #15
000030A4                          4738mm         ENDM
000030A4                          4739mm         PRINTANSRC D3  
000030A4  3203                    4740mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000030A6  E149                    4741mm         LSL     #$08, D1
000030A8  EB49                    4742mm         LSL     #$05, D1
000030AA  E049                    4743mm         LSR     #$08, D1
000030AC  EA49                    4744mm         LSR     #$05, D1
000030AE  43F8 00CE               4745mm         LEA     OAN, A1     
000030B2  103C 000E               4746mm         MOVE.B  #14,D0          
000030B6  4E4F                    4747mm         TRAP    #15
000030B8  103C 0003               4748mm         MOVE.B  #3,D0          
000030BC  4E4F                    4749mm         TRAP    #15
000030BE                          4750mm         ENDM
000030BE                          4751mm         PRINTRB
000030BE  43F8 00D2               4752mm         LEA     ORB, A1     
000030C2  103C 000E               4753mm         MOVE.B  #14,D0          
000030C6  4E4F                    4754mm         TRAP    #15
000030C8                          4755mm         ENDM
000030C8  6000 03B2               4756m         BRA     COMPLETE_298
000030CC                          4757m        
000030CC                          4758m ADRABSOLUTE_298:
000030CC  BC3C 0001               4759m         CMP.B   #$01, D6
000030D0  6600 0018               4760m         BNE     ADRABSOLUTEDST_298 
000030D4                          4761m         
000030D4  3A03                    4762m         MOVE.W  D3, D5
000030D6  0803 0002               4763m         BTST    #2, D3
000030DA  6600 0024               4764m         BNE     ADRIMMEDIATE_298
000030DE  0803 0000               4765m         BTST    #0, D3
000030E2  6600 0280               4766m         BNE     ADRABSOLUTEL_298
000030E6  6000 01E6               4767m         BRA     ADRABSOLUTEW_298
000030EA                          4768m ADRABSOLUTEDST_298:
000030EA  3A03                    4769m         MOVE.W  D3, D5
000030EC  0803 000B               4770m         BTST    #$B, D3
000030F0  6600 000E               4771m         BNE     ADRIMMEDIATE_298
000030F4  0803 0009               4772m         BTST    #$09, D3
000030F8  6600 026A               4773m         BNE     ADRABSOLUTEL_298
000030FC  6000 01D0               4774m         BRA     ADRABSOLUTEW_298
00003100                          4775m ADRIMMEDIATE_298:
00003100  BE3C 0001               4776m         CMP.B   #1, D7
00003104  6700 00A2               4777m         BEQ     ADRIMMEDIATEL_298
00003108                          4778m ADRIMMEDIATEW_298:
00003108  361A                    4779m         MOVE.W  (A2)+, D3
0000310A                          4780mm         PRINTHASH
0000310A  103C 0006               4781mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000310E  323C 0023               4782mm         MOVE.W  #35, D1     ; AN = SIGN
00003112  4E4F                    4783mm         TRAP    #15         ; OUTPUT = SIGN
00003114                          4784mm         ENDM
00003114                          4785mm         PRINTSIGN
00003114  103C 0006               4786mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003118  323C 0024               4787mm         MOVE.W  #36, D1     ; AN = SIGN
0000311C  4E4F                    4788mm         TRAP    #15         ; OUTPUT = SIGN
0000311E                          4789mm         ENDM
0000311E                          4790mm         ADROUT
0000311E  103C 0006               4791mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003122  3212                    4792mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003124  E049                    4793mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003126  E849                    4794mm         LSR.W   #4, D1      
00003128                          4795mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003128  0C01 0009               4796mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312C  6E00 000A               4797mmm         BGT     ALPHA_328
00003130  0601 0030               4798mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003134  6000 0006               4799mmm         BRA     DONE_328
00003138  0601 0037               4800mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313C  4E71                    4801mmm DONE_328: NOP
0000313E                          4802mmm         ENDM
0000313E  4E4F                    4803mm         TRAP    #15         ; EXECUTE OUTPUT
00003140                          4804mm         
00003140  3212                    4805mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003142  E949                    4806mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003144  E049                    4807mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003146  E849                    4808mm         LSR.W   #4, D1      
00003148                          4809mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003148  0C01 0009               4810mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314C  6E00 000A               4811mmm         BGT     ALPHA_329
00003150  0601 0030               4812mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003154  6000 0006               4813mmm         BRA     DONE_329
00003158  0601 0037               4814mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315C  4E71                    4815mmm DONE_329: NOP
0000315E                          4816mmm         ENDM
0000315E  4E4F                    4817mm         TRAP    #15         ; EXECUTE OUTPUT
00003160                          4818mm         
00003160  3212                    4819mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003162  E149                    4820mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003164  E049                    4821mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003166  E849                    4822mm         LSR.W   #4, D1      
00003168                          4823mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003168  0C01 0009               4824mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316C  6E00 000A               4825mmm         BGT     ALPHA_330
00003170  0601 0030               4826mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003174  6000 0006               4827mmm         BRA     DONE_330
00003178  0601 0037               4828mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317C  4E71                    4829mmm DONE_330: NOP
0000317E                          4830mmm         ENDM
0000317E  4E4F                    4831mm         TRAP    #15         ; EXECUTE OUTPUT
00003180                          4832mm         
00003180  3212                    4833mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003182  E149                    4834mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003184  E949                    4835mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003186  E049                    4836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003188  E849                    4837mm         LSR.W   #4, D1      
0000318A                          4838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000318A  0C01 0009               4839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000318E  6E00 000A               4840mmm         BGT     ALPHA_331
00003192  0601 0030               4841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003196  6000 0006               4842mmm         BRA     DONE_331
0000319A  0601 0037               4843mmm ALPHA_331: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000319E  4E71                    4844mmm DONE_331: NOP
000031A0                          4845mmm         ENDM
000031A0  4E4F                    4846mm         TRAP    #15         ; EXECUTE OUTPUT   
000031A2                          4847mm         ENDM     
000031A2  3605                    4848m         MOVE.W  D5, D3
000031A4  6000 02D6               4849m         BRA     COMPLETE_298
000031A8                          4850m ADRIMMEDIATEL_298:
000031A8  361A                    4851m         MOVE.W  (A2)+, D3
000031AA                          4852mm         PRINTHASH
000031AA  103C 0006               4853mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031AE  323C 0023               4854mm         MOVE.W  #35, D1     ; AN = SIGN
000031B2  4E4F                    4855mm         TRAP    #15         ; OUTPUT = SIGN
000031B4                          4856mm         ENDM
000031B4                          4857mm         PRINTSIGN
000031B4  103C 0006               4858mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031B8  323C 0024               4859mm         MOVE.W  #36, D1     ; AN = SIGN
000031BC  4E4F                    4860mm         TRAP    #15         ; OUTPUT = SIGN
000031BE                          4861mm         ENDM
000031BE                          4862mm         ADROUT 
000031BE  103C 0006               4863mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031C2  3212                    4864mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031C4  E049                    4865mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031C6  E849                    4866mm         LSR.W   #4, D1      
000031C8                          4867mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031C8  0C01 0009               4868mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031CC  6E00 000A               4869mmm         BGT     ALPHA_335
000031D0  0601 0030               4870mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031D4  6000 0006               4871mmm         BRA     DONE_335
000031D8  0601 0037               4872mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031DC  4E71                    4873mmm DONE_335: NOP
000031DE                          4874mmm         ENDM
000031DE  4E4F                    4875mm         TRAP    #15         ; EXECUTE OUTPUT
000031E0                          4876mm         
000031E0  3212                    4877mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031E2  E949                    4878mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031E4  E049                    4879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031E6  E849                    4880mm         LSR.W   #4, D1      
000031E8                          4881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031E8  0C01 0009               4882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031EC  6E00 000A               4883mmm         BGT     ALPHA_336
000031F0  0601 0030               4884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031F4  6000 0006               4885mmm         BRA     DONE_336
000031F8  0601 0037               4886mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031FC  4E71                    4887mmm DONE_336: NOP
000031FE                          4888mmm         ENDM
000031FE  4E4F                    4889mm         TRAP    #15         ; EXECUTE OUTPUT
00003200                          4890mm         
00003200  3212                    4891mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003202  E149                    4892mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003204  E049                    4893mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003206  E849                    4894mm         LSR.W   #4, D1      
00003208                          4895mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003208  0C01 0009               4896mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000320C  6E00 000A               4897mmm         BGT     ALPHA_337
00003210  0601 0030               4898mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003214  6000 0006               4899mmm         BRA     DONE_337
00003218  0601 0037               4900mmm ALPHA_337: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000321C  4E71                    4901mmm DONE_337: NOP
0000321E                          4902mmm         ENDM
0000321E  4E4F                    4903mm         TRAP    #15         ; EXECUTE OUTPUT
00003220                          4904mm         
00003220  3212                    4905mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003222  E149                    4906mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003224  E949                    4907mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003226  E049                    4908mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003228  E849                    4909mm         LSR.W   #4, D1      
0000322A                          4910mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000322A  0C01 0009               4911mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000322E  6E00 000A               4912mmm         BGT     ALPHA_338
00003232  0601 0030               4913mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003236  6000 0006               4914mmm         BRA     DONE_338
0000323A  0601 0037               4915mmm ALPHA_338: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000323E  4E71                    4916mmm DONE_338: NOP
00003240                          4917mmm         ENDM
00003240  4E4F                    4918mm         TRAP    #15         ; EXECUTE OUTPUT   
00003242                          4919mm         ENDM     
00003242  361A                    4920m         MOVE.W  (A2)+, D3
00003244                          4921mm         ADROUT
00003244  103C 0006               4922mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003248  3212                    4923mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000324A  E049                    4924mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000324C  E849                    4925mm         LSR.W   #4, D1      
0000324E                          4926mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000324E  0C01 0009               4927mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003252  6E00 000A               4928mmm         BGT     ALPHA_340
00003256  0601 0030               4929mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000325A  6000 0006               4930mmm         BRA     DONE_340
0000325E  0601 0037               4931mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003262  4E71                    4932mmm DONE_340: NOP
00003264                          4933mmm         ENDM
00003264  4E4F                    4934mm         TRAP    #15         ; EXECUTE OUTPUT
00003266                          4935mm         
00003266  3212                    4936mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003268  E949                    4937mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000326A  E049                    4938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000326C  E849                    4939mm         LSR.W   #4, D1      
0000326E                          4940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000326E  0C01 0009               4941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003272  6E00 000A               4942mmm         BGT     ALPHA_341
00003276  0601 0030               4943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000327A  6000 0006               4944mmm         BRA     DONE_341
0000327E  0601 0037               4945mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003282  4E71                    4946mmm DONE_341: NOP
00003284                          4947mmm         ENDM
00003284  4E4F                    4948mm         TRAP    #15         ; EXECUTE OUTPUT
00003286                          4949mm         
00003286  3212                    4950mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003288  E149                    4951mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000328A  E049                    4952mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000328C  E849                    4953mm         LSR.W   #4, D1      
0000328E                          4954mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000328E  0C01 0009               4955mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003292  6E00 000A               4956mmm         BGT     ALPHA_342
00003296  0601 0030               4957mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329A  6000 0006               4958mmm         BRA     DONE_342
0000329E  0601 0037               4959mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A2  4E71                    4960mmm DONE_342: NOP
000032A4                          4961mmm         ENDM
000032A4  4E4F                    4962mm         TRAP    #15         ; EXECUTE OUTPUT
000032A6                          4963mm         
000032A6  3212                    4964mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032A8  E149                    4965mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032AA  E949                    4966mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000032AC  E049                    4967mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032AE  E849                    4968mm         LSR.W   #4, D1      
000032B0                          4969mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032B0  0C01 0009               4970mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032B4  6E00 000A               4971mmm         BGT     ALPHA_343
000032B8  0601 0030               4972mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032BC  6000 0006               4973mmm         BRA     DONE_343
000032C0  0601 0037               4974mmm ALPHA_343: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032C4  4E71                    4975mmm DONE_343: NOP
000032C6                          4976mmm         ENDM
000032C6  4E4F                    4977mm         TRAP    #15         ; EXECUTE OUTPUT   
000032C8                          4978mm         ENDM     
000032C8  3605                    4979m         MOVE.W  D5, D3
000032CA  6000 01B0               4980m         BRA     COMPLETE_298 
000032CE                          4981m ADRABSOLUTEW_298:     
000032CE  361A                    4982m         MOVE.W  (A2)+, D3
000032D0                          4983mm         PRINTSIGN
000032D0  103C 0006               4984mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032D4  323C 0024               4985mm         MOVE.W  #36, D1     ; AN = SIGN
000032D8  4E4F                    4986mm         TRAP    #15         ; OUTPUT = SIGN
000032DA                          4987mm         ENDM
000032DA                          4988mm         ADROUT
000032DA  103C 0006               4989mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032DE  3212                    4990mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E0  E049                    4991mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032E2  E849                    4992mm         LSR.W   #4, D1      
000032E4                          4993mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032E4  0C01 0009               4994mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032E8  6E00 000A               4995mmm         BGT     ALPHA_346
000032EC  0601 0030               4996mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032F0  6000 0006               4997mmm         BRA     DONE_346
000032F4  0601 0037               4998mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032F8  4E71                    4999mmm DONE_346: NOP
000032FA                          5000mmm         ENDM
000032FA  4E4F                    5001mm         TRAP    #15         ; EXECUTE OUTPUT
000032FC                          5002mm         
000032FC  3212                    5003mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032FE  E949                    5004mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003300  E049                    5005mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003302  E849                    5006mm         LSR.W   #4, D1      
00003304                          5007mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003304  0C01 0009               5008mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003308  6E00 000A               5009mmm         BGT     ALPHA_347
0000330C  0601 0030               5010mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003310  6000 0006               5011mmm         BRA     DONE_347
00003314  0601 0037               5012mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003318  4E71                    5013mmm DONE_347: NOP
0000331A                          5014mmm         ENDM
0000331A  4E4F                    5015mm         TRAP    #15         ; EXECUTE OUTPUT
0000331C                          5016mm         
0000331C  3212                    5017mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000331E  E149                    5018mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003320  E049                    5019mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003322  E849                    5020mm         LSR.W   #4, D1      
00003324                          5021mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003324  0C01 0009               5022mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003328  6E00 000A               5023mmm         BGT     ALPHA_348
0000332C  0601 0030               5024mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003330  6000 0006               5025mmm         BRA     DONE_348
00003334  0601 0037               5026mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003338  4E71                    5027mmm DONE_348: NOP
0000333A                          5028mmm         ENDM
0000333A  4E4F                    5029mm         TRAP    #15         ; EXECUTE OUTPUT
0000333C                          5030mm         
0000333C  3212                    5031mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000333E  E149                    5032mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003340  E949                    5033mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003342  E049                    5034mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003344  E849                    5035mm         LSR.W   #4, D1      
00003346                          5036mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003346  0C01 0009               5037mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000334A  6E00 000A               5038mmm         BGT     ALPHA_349
0000334E  0601 0030               5039mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003352  6000 0006               5040mmm         BRA     DONE_349
00003356  0601 0037               5041mmm ALPHA_349: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000335A  4E71                    5042mmm DONE_349: NOP
0000335C                          5043mmm         ENDM
0000335C  4E4F                    5044mm         TRAP    #15         ; EXECUTE OUTPUT   
0000335E                          5045mm         ENDM     
0000335E  3605                    5046m         MOVE.W  D5, D3
00003360  6000 011A               5047m         BRA     COMPLETE_298  
00003364                          5048m ADRABSOLUTEL_298:  
00003364  361A                    5049m         MOVE.W  (A2)+, D3
00003366                          5050mm         PRINTSIGN
00003366  103C 0006               5051mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000336A  323C 0024               5052mm         MOVE.W  #36, D1     ; AN = SIGN
0000336E  4E4F                    5053mm         TRAP    #15         ; OUTPUT = SIGN
00003370                          5054mm         ENDM
00003370                          5055mm         ADROUT 
00003370  103C 0006               5056mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003374  3212                    5057mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003376  E049                    5058mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003378  E849                    5059mm         LSR.W   #4, D1      
0000337A                          5060mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000337A  0C01 0009               5061mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000337E  6E00 000A               5062mmm         BGT     ALPHA_352
00003382  0601 0030               5063mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003386  6000 0006               5064mmm         BRA     DONE_352
0000338A  0601 0037               5065mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000338E  4E71                    5066mmm DONE_352: NOP
00003390                          5067mmm         ENDM
00003390  4E4F                    5068mm         TRAP    #15         ; EXECUTE OUTPUT
00003392                          5069mm         
00003392  3212                    5070mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003394  E949                    5071mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003396  E049                    5072mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003398  E849                    5073mm         LSR.W   #4, D1      
0000339A                          5074mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000339A  0C01 0009               5075mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000339E  6E00 000A               5076mmm         BGT     ALPHA_353
000033A2  0601 0030               5077mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033A6  6000 0006               5078mmm         BRA     DONE_353
000033AA  0601 0037               5079mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033AE  4E71                    5080mmm DONE_353: NOP
000033B0                          5081mmm         ENDM
000033B0  4E4F                    5082mm         TRAP    #15         ; EXECUTE OUTPUT
000033B2                          5083mm         
000033B2  3212                    5084mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033B4  E149                    5085mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033B6  E049                    5086mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033B8  E849                    5087mm         LSR.W   #4, D1      
000033BA                          5088mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033BA  0C01 0009               5089mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033BE  6E00 000A               5090mmm         BGT     ALPHA_354
000033C2  0601 0030               5091mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033C6  6000 0006               5092mmm         BRA     DONE_354
000033CA  0601 0037               5093mmm ALPHA_354: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033CE  4E71                    5094mmm DONE_354: NOP
000033D0                          5095mmm         ENDM
000033D0  4E4F                    5096mm         TRAP    #15         ; EXECUTE OUTPUT
000033D2                          5097mm         
000033D2  3212                    5098mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033D4  E149                    5099mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033D6  E949                    5100mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000033D8  E049                    5101mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033DA  E849                    5102mm         LSR.W   #4, D1      
000033DC                          5103mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033DC  0C01 0009               5104mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033E0  6E00 000A               5105mmm         BGT     ALPHA_355
000033E4  0601 0030               5106mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033E8  6000 0006               5107mmm         BRA     DONE_355
000033EC  0601 0037               5108mmm ALPHA_355: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033F0  4E71                    5109mmm DONE_355: NOP
000033F2                          5110mmm         ENDM
000033F2  4E4F                    5111mm         TRAP    #15         ; EXECUTE OUTPUT   
000033F4                          5112mm         ENDM     
000033F4  361A                    5113m         MOVE.W  (A2)+, D3
000033F6                          5114mm         ADROUT
000033F6  103C 0006               5115mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000033FA  3212                    5116mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033FC  E049                    5117mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033FE  E849                    5118mm         LSR.W   #4, D1      
00003400                          5119mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003400  0C01 0009               5120mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003404  6E00 000A               5121mmm         BGT     ALPHA_357
00003408  0601 0030               5122mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000340C  6000 0006               5123mmm         BRA     DONE_357
00003410  0601 0037               5124mmm ALPHA_357: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003414  4E71                    5125mmm DONE_357: NOP
00003416                          5126mmm         ENDM
00003416  4E4F                    5127mm         TRAP    #15         ; EXECUTE OUTPUT
00003418                          5128mm         
00003418  3212                    5129mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000341A  E949                    5130mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000341C  E049                    5131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000341E  E849                    5132mm         LSR.W   #4, D1      
00003420                          5133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003420  0C01 0009               5134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003424  6E00 000A               5135mmm         BGT     ALPHA_358
00003428  0601 0030               5136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000342C  6000 0006               5137mmm         BRA     DONE_358
00003430  0601 0037               5138mmm ALPHA_358: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003434  4E71                    5139mmm DONE_358: NOP
00003436                          5140mmm         ENDM
00003436  4E4F                    5141mm         TRAP    #15         ; EXECUTE OUTPUT
00003438                          5142mm         
00003438  3212                    5143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000343A  E149                    5144mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000343C  E049                    5145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000343E  E849                    5146mm         LSR.W   #4, D1      
00003440                          5147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003440  0C01 0009               5148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003444  6E00 000A               5149mmm         BGT     ALPHA_359
00003448  0601 0030               5150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000344C  6000 0006               5151mmm         BRA     DONE_359
00003450  0601 0037               5152mmm ALPHA_359: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003454  4E71                    5153mmm DONE_359: NOP
00003456                          5154mmm         ENDM
00003456  4E4F                    5155mm         TRAP    #15         ; EXECUTE OUTPUT
00003458                          5156mm         
00003458  3212                    5157mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000345A  E149                    5158mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000345C  E949                    5159mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000345E  E049                    5160mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003460  E849                    5161mm         LSR.W   #4, D1      
00003462                          5162mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003462  0C01 0009               5163mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003466  6E00 000A               5164mmm         BGT     ALPHA_360
0000346A  0601 0030               5165mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000346E  6000 0006               5166mmm         BRA     DONE_360
00003472  0601 0037               5167mmm ALPHA_360: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003476  4E71                    5168mmm DONE_360: NOP
00003478                          5169mmm         ENDM
00003478  4E4F                    5170mm         TRAP    #15         ; EXECUTE OUTPUT   
0000347A                          5171mm         ENDM     
0000347A  3605                    5172m         MOVE.W  D5, D3
0000347C                          5173m 
0000347C                          5174m COMPLETE_298:  ; OPCODE HAS BEEN VERIFIED
0000347C                          5175m         ENDM
0000347C  6000 060C               5176          BRA     decodeSUBcomp
00003480                          5177  decodeSubDestOp:
00003480                          5178m         prepareAdrMode  #$1,(A2)
00003480  3C3C 0001               5179m         MOVE.W  #$1, D6      ; INPUT VALUE
00003484  3212                    5180m         MOVE.W  (A2), D1
00003486  BC3C 0001               5181m         CMP.B   #$01, D6
0000348A  6700 000C               5182m         BEQ     ADRSOURCE_361    
0000348E                          5183m ADRDEST_361:
0000348E  EF49                    5184m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003490  E049                    5185m         LSR     #$08, D1
00003492  EA49                    5186m         LSR     #$05, D1
00003494  6000 000A               5187m         BRA     COMPLETE_361 
00003498                          5188m ADRSOURCE_361:                
00003498  E149                    5189m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000349A  E549                    5190m         LSL     #$02, D1
0000349C  E049                    5191m         LSR     #$08, D1
0000349E  EA49                    5192m         LSR     #$05, D1
000034A0                          5193m COMPLETE_361:  ; OPCODE HAS BEEN VERIFIED
000034A0                          5194m         ENDM        
000034A0                          5195m         decodeAdrMode   (A2), D1
000034A0  3612                    5196m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000034A2  3201                    5197m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000034A4                          5198m 
000034A4  B23C 0001               5199m         CMP.B   #$01, D1
000034A8  6700 0066               5200m         BEQ     ADRREGDIRECT_362    
000034AC  B23C 0002               5201m         CMP.B   #$02, D1
000034B0  6700 00A0               5202m         BEQ     ADRREGINDIRECT_362  
000034B4  B23C 0003               5203m         CMP.B   #$03, D1
000034B8  6700 0102               5204m         BEQ     ADRREGPOSTINC_362  
000034BC  B23C 0004               5205m         CMP.B   #$04, D1
000034C0  6700 0178               5206m         BEQ     ADRREGPREDEC_362
000034C4  B23C 0007               5207m         CMP.B   #$07, D1
000034C8  6700 01EE               5208m         BEQ     ADRABSOLUTE_362    
000034CC                          5209m         
000034CC                          5210m DATAREGDIRECT_362: 
000034CC  BC3C 0001               5211m         CMP.B   #$01, D6
000034D0  6700 001E               5212m         BEQ     DATAREGDIRECTSRC_362   
000034D4                          5213m DATAREGDIRECTDEST_362: 
000034D4                          5214mm         PRINTDNDEST D3 
000034D4  3203                    5215mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000034D6  E949                    5216mm         LSL     #$04, D1
000034D8  E049                    5217mm         LSR     #$08, D1
000034DA  EA49                    5218mm         LSR     #$05, D1
000034DC  43F8 00CC               5219mm         LEA     ODN, A1     
000034E0  103C 000E               5220mm         MOVE.B  #14,D0          
000034E4  4E4F                    5221mm         TRAP    #15
000034E6  103C 0003               5222mm         MOVE.B  #3,D0          
000034EA  4E4F                    5223mm         TRAP    #15
000034EC                          5224mm         ENDM
000034EC  6000 057A               5225m         BRA     COMPLETE_362 
000034F0                          5226m DATAREGDIRECTSRC_362: 
000034F0                          5227mm         PRINTDNSRC D3 
000034F0  4281                    5228mm         CLR.L   D1
000034F2  3203                    5229mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034F4  E149                    5230mm         LSL     #$08, D1
000034F6  EB49                    5231mm         LSL     #$05, D1
000034F8  E049                    5232mm         LSR     #$08, D1
000034FA  EA49                    5233mm         LSR     #$05, D1
000034FC  43F8 00CC               5234mm         LEA     ODN, A1     
00003500  103C 000E               5235mm         MOVE.B  #14,D0          
00003504  4E4F                    5236mm         TRAP    #15
00003506  103C 0003               5237mm         MOVE.B  #3,D0          
0000350A  4E4F                    5238mm         TRAP    #15
0000350C                          5239mm         ENDM
0000350C  6000 055A               5240m         BRA     COMPLETE_362   
00003510                          5241m         
00003510                          5242m ADRREGDIRECT_362: 
00003510  BC3C 0001               5243m         CMP.B   #$01, D6
00003514  6700 001E               5244m         BEQ     ADRREGDIRECTSRC_362   
00003518                          5245m ADRREGDIRECTDEST_362:
00003518                          5246mm         PRINTANDEST D3
00003518  3203                    5247mm         MOVE.W  D3, D1
0000351A  E949                    5248mm         LSL     #$04, D1 ; BITS 9 TO 11
0000351C  E049                    5249mm         LSR     #$08, D1
0000351E  EA49                    5250mm         LSR     #$05, D1
00003520  43F8 00CE               5251mm         LEA     OAN, A1     
00003524  103C 000E               5252mm         MOVE.B  #14,D0          
00003528  4E4F                    5253mm         TRAP    #15
0000352A  103C 0003               5254mm         MOVE.B  #3,D0          
0000352E  4E4F                    5255mm         TRAP    #15
00003530                          5256mm         ENDM
00003530  6000 0536               5257m         BRA     COMPLETE_362   
00003534                          5258m ADRREGDIRECTSRC_362:
00003534                          5259mm         PRINTANSRC D3
00003534  3203                    5260mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003536  E149                    5261mm         LSL     #$08, D1
00003538  EB49                    5262mm         LSL     #$05, D1
0000353A  E049                    5263mm         LSR     #$08, D1
0000353C  EA49                    5264mm         LSR     #$05, D1
0000353E  43F8 00CE               5265mm         LEA     OAN, A1     
00003542  103C 000E               5266mm         MOVE.B  #14,D0          
00003546  4E4F                    5267mm         TRAP    #15
00003548  103C 0003               5268mm         MOVE.B  #3,D0          
0000354C  4E4F                    5269mm         TRAP    #15
0000354E                          5270mm         ENDM
0000354E  6000 0518               5271m         BRA     COMPLETE_362   
00003552                          5272m        
00003552                          5273m ADRREGINDIRECT_362:   
00003552  BC3C 0001               5274m         CMP.B   #$01, D6
00003556  6700 0032               5275m         BEQ     ADRREGINDIRECTSRC_362   
0000355A                          5276m ADRREGINDIRECTDEST_362:
0000355A                          5277mm         PRINTLB
0000355A  43F8 00D0               5278mm         LEA     OLB, A1     
0000355E  103C 000E               5279mm         MOVE.B  #14,D0          
00003562  4E4F                    5280mm         TRAP    #15
00003564                          5281mm         ENDM
00003564                          5282mm         PRINTANDEST D3  
00003564  3203                    5283mm         MOVE.W  D3, D1
00003566  E949                    5284mm         LSL     #$04, D1 ; BITS 9 TO 11
00003568  E049                    5285mm         LSR     #$08, D1
0000356A  EA49                    5286mm         LSR     #$05, D1
0000356C  43F8 00CE               5287mm         LEA     OAN, A1     
00003570  103C 000E               5288mm         MOVE.B  #14,D0          
00003574  4E4F                    5289mm         TRAP    #15
00003576  103C 0003               5290mm         MOVE.B  #3,D0          
0000357A  4E4F                    5291mm         TRAP    #15
0000357C                          5292mm         ENDM
0000357C                          5293mm         PRINTRB
0000357C  43F8 00D2               5294mm         LEA     ORB, A1     
00003580  103C 000E               5295mm         MOVE.B  #14,D0          
00003584  4E4F                    5296mm         TRAP    #15
00003586                          5297mm         ENDM
00003586  6000 04E0               5298m         BRA     COMPLETE_362     
0000358A                          5299m ADRREGINDIRECTSRC_362:   
0000358A                          5300mm         PRINTLB
0000358A  43F8 00D0               5301mm         LEA     OLB, A1     
0000358E  103C 000E               5302mm         MOVE.B  #14,D0          
00003592  4E4F                    5303mm         TRAP    #15
00003594                          5304mm         ENDM
00003594                          5305mm         PRINTANSRC D3  
00003594  3203                    5306mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003596  E149                    5307mm         LSL     #$08, D1
00003598  EB49                    5308mm         LSL     #$05, D1
0000359A  E049                    5309mm         LSR     #$08, D1
0000359C  EA49                    5310mm         LSR     #$05, D1
0000359E  43F8 00CE               5311mm         LEA     OAN, A1     
000035A2  103C 000E               5312mm         MOVE.B  #14,D0          
000035A6  4E4F                    5313mm         TRAP    #15
000035A8  103C 0003               5314mm         MOVE.B  #3,D0          
000035AC  4E4F                    5315mm         TRAP    #15
000035AE                          5316mm         ENDM
000035AE                          5317mm         PRINTRB
000035AE  43F8 00D2               5318mm         LEA     ORB, A1     
000035B2  103C 000E               5319mm         MOVE.B  #14,D0          
000035B6  4E4F                    5320mm         TRAP    #15
000035B8                          5321mm         ENDM
000035B8  6000 04AE               5322m         BRA     COMPLETE_362   
000035BC                          5323m         
000035BC                          5324m ADRREGPOSTINC_362:   
000035BC  BC3C 0001               5325m         CMP.B   #$01, D6
000035C0  6700 003C               5326m         BEQ     ADRREGPOSTINCSRC_362   
000035C4                          5327m ADRREGPOSTINCDEST_362: 
000035C4                          5328mm         PRINTLB
000035C4  43F8 00D0               5329mm         LEA     OLB, A1     
000035C8  103C 000E               5330mm         MOVE.B  #14,D0          
000035CC  4E4F                    5331mm         TRAP    #15
000035CE                          5332mm         ENDM
000035CE                          5333mm         PRINTANDEST D3  
000035CE  3203                    5334mm         MOVE.W  D3, D1
000035D0  E949                    5335mm         LSL     #$04, D1 ; BITS 9 TO 11
000035D2  E049                    5336mm         LSR     #$08, D1
000035D4  EA49                    5337mm         LSR     #$05, D1
000035D6  43F8 00CE               5338mm         LEA     OAN, A1     
000035DA  103C 000E               5339mm         MOVE.B  #14,D0          
000035DE  4E4F                    5340mm         TRAP    #15
000035E0  103C 0003               5341mm         MOVE.B  #3,D0          
000035E4  4E4F                    5342mm         TRAP    #15
000035E6                          5343mm         ENDM
000035E6                          5344mm         PRINTRB
000035E6  43F8 00D2               5345mm         LEA     ORB, A1     
000035EA  103C 000E               5346mm         MOVE.B  #14,D0          
000035EE  4E4F                    5347mm         TRAP    #15
000035F0                          5348mm         ENDM
000035F0                          5349mm         PRINTPI
000035F0  43F8 00D9               5350mm         LEA     OPSTINC, A1     
000035F4  103C 000E               5351mm         MOVE.B  #14,D0          
000035F8  4E4F                    5352mm         TRAP    #15
000035FA                          5353mm         ENDM
000035FA  6000 046C               5354m         BRA     COMPLETE_362  
000035FE                          5355m ADRREGPOSTINCSRC_362:           
000035FE                          5356mm         PRINTLB
000035FE  43F8 00D0               5357mm         LEA     OLB, A1     
00003602  103C 000E               5358mm         MOVE.B  #14,D0          
00003606  4E4F                    5359mm         TRAP    #15
00003608                          5360mm         ENDM
00003608                          5361mm         PRINTANSRC D3  
00003608  3203                    5362mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000360A  E149                    5363mm         LSL     #$08, D1
0000360C  EB49                    5364mm         LSL     #$05, D1
0000360E  E049                    5365mm         LSR     #$08, D1
00003610  EA49                    5366mm         LSR     #$05, D1
00003612  43F8 00CE               5367mm         LEA     OAN, A1     
00003616  103C 000E               5368mm         MOVE.B  #14,D0          
0000361A  4E4F                    5369mm         TRAP    #15
0000361C  103C 0003               5370mm         MOVE.B  #3,D0          
00003620  4E4F                    5371mm         TRAP    #15
00003622                          5372mm         ENDM
00003622                          5373mm         PRINTRB
00003622  43F8 00D2               5374mm         LEA     ORB, A1     
00003626  103C 000E               5375mm         MOVE.B  #14,D0          
0000362A  4E4F                    5376mm         TRAP    #15
0000362C                          5377mm         ENDM
0000362C                          5378mm         PRINTPI
0000362C  43F8 00D9               5379mm         LEA     OPSTINC, A1     
00003630  103C 000E               5380mm         MOVE.B  #14,D0          
00003634  4E4F                    5381mm         TRAP    #15
00003636                          5382mm         ENDM
00003636  6000 0430               5383m         BRA     COMPLETE_362  
0000363A                          5384m ADRREGPREDEC_362: 
0000363A  BC3C 0001               5385m         CMP.B   #$01, D6
0000363E  6700 003C               5386m         BEQ     ADRREGPREDECSRC_362   
00003642                          5387m ADRREGPREDECDEST_362:
00003642                          5388mm         PRINTPD  
00003642  43F8 00D7               5389mm         LEA     OPREDEC, A1     
00003646  103C 000E               5390mm         MOVE.B  #14,D0          
0000364A  4E4F                    5391mm         TRAP    #15
0000364C                          5392mm         ENDM
0000364C                          5393mm         PRINTLB
0000364C  43F8 00D0               5394mm         LEA     OLB, A1     
00003650  103C 000E               5395mm         MOVE.B  #14,D0          
00003654  4E4F                    5396mm         TRAP    #15
00003656                          5397mm         ENDM
00003656                          5398mm         PRINTANDEST D3  
00003656  3203                    5399mm         MOVE.W  D3, D1
00003658  E949                    5400mm         LSL     #$04, D1 ; BITS 9 TO 11
0000365A  E049                    5401mm         LSR     #$08, D1
0000365C  EA49                    5402mm         LSR     #$05, D1
0000365E  43F8 00CE               5403mm         LEA     OAN, A1     
00003662  103C 000E               5404mm         MOVE.B  #14,D0          
00003666  4E4F                    5405mm         TRAP    #15
00003668  103C 0003               5406mm         MOVE.B  #3,D0          
0000366C  4E4F                    5407mm         TRAP    #15
0000366E                          5408mm         ENDM
0000366E                          5409mm         PRINTRB
0000366E  43F8 00D2               5410mm         LEA     ORB, A1     
00003672  103C 000E               5411mm         MOVE.B  #14,D0          
00003676  4E4F                    5412mm         TRAP    #15
00003678                          5413mm         ENDM
00003678  6000 03EE               5414m         BRA     COMPLETE_362   
0000367C                          5415m ADRREGPREDECSRC_362: 
0000367C                          5416mm         PRINTPD  
0000367C  43F8 00D7               5417mm         LEA     OPREDEC, A1     
00003680  103C 000E               5418mm         MOVE.B  #14,D0          
00003684  4E4F                    5419mm         TRAP    #15
00003686                          5420mm         ENDM
00003686                          5421mm         PRINTLB
00003686  43F8 00D0               5422mm         LEA     OLB, A1     
0000368A  103C 000E               5423mm         MOVE.B  #14,D0          
0000368E  4E4F                    5424mm         TRAP    #15
00003690                          5425mm         ENDM
00003690                          5426mm         PRINTANSRC D3  
00003690  3203                    5427mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003692  E149                    5428mm         LSL     #$08, D1
00003694  EB49                    5429mm         LSL     #$05, D1
00003696  E049                    5430mm         LSR     #$08, D1
00003698  EA49                    5431mm         LSR     #$05, D1
0000369A  43F8 00CE               5432mm         LEA     OAN, A1     
0000369E  103C 000E               5433mm         MOVE.B  #14,D0          
000036A2  4E4F                    5434mm         TRAP    #15
000036A4  103C 0003               5435mm         MOVE.B  #3,D0          
000036A8  4E4F                    5436mm         TRAP    #15
000036AA                          5437mm         ENDM
000036AA                          5438mm         PRINTRB
000036AA  43F8 00D2               5439mm         LEA     ORB, A1     
000036AE  103C 000E               5440mm         MOVE.B  #14,D0          
000036B2  4E4F                    5441mm         TRAP    #15
000036B4                          5442mm         ENDM
000036B4  6000 03B2               5443m         BRA     COMPLETE_362
000036B8                          5444m        
000036B8                          5445m ADRABSOLUTE_362:
000036B8  BC3C 0001               5446m         CMP.B   #$01, D6
000036BC  6600 0018               5447m         BNE     ADRABSOLUTEDST_362 
000036C0                          5448m         
000036C0  3A03                    5449m         MOVE.W  D3, D5
000036C2  0803 0002               5450m         BTST    #2, D3
000036C6  6600 0024               5451m         BNE     ADRIMMEDIATE_362
000036CA  0803 0000               5452m         BTST    #0, D3
000036CE  6600 0280               5453m         BNE     ADRABSOLUTEL_362
000036D2  6000 01E6               5454m         BRA     ADRABSOLUTEW_362
000036D6                          5455m ADRABSOLUTEDST_362:
000036D6  3A03                    5456m         MOVE.W  D3, D5
000036D8  0803 000B               5457m         BTST    #$B, D3
000036DC  6600 000E               5458m         BNE     ADRIMMEDIATE_362
000036E0  0803 0009               5459m         BTST    #$09, D3
000036E4  6600 026A               5460m         BNE     ADRABSOLUTEL_362
000036E8  6000 01D0               5461m         BRA     ADRABSOLUTEW_362
000036EC                          5462m ADRIMMEDIATE_362:
000036EC  BE3C 0001               5463m         CMP.B   #1, D7
000036F0  6700 00A2               5464m         BEQ     ADRIMMEDIATEL_362
000036F4                          5465m ADRIMMEDIATEW_362:
000036F4  361A                    5466m         MOVE.W  (A2)+, D3
000036F6                          5467mm         PRINTHASH
000036F6  103C 0006               5468mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036FA  323C 0023               5469mm         MOVE.W  #35, D1     ; AN = SIGN
000036FE  4E4F                    5470mm         TRAP    #15         ; OUTPUT = SIGN
00003700                          5471mm         ENDM
00003700                          5472mm         PRINTSIGN
00003700  103C 0006               5473mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003704  323C 0024               5474mm         MOVE.W  #36, D1     ; AN = SIGN
00003708  4E4F                    5475mm         TRAP    #15         ; OUTPUT = SIGN
0000370A                          5476mm         ENDM
0000370A                          5477mm         ADROUT
0000370A  103C 0006               5478mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000370E  3212                    5479mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003710  E049                    5480mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003712  E849                    5481mm         LSR.W   #4, D1      
00003714                          5482mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003714  0C01 0009               5483mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003718  6E00 000A               5484mmm         BGT     ALPHA_392
0000371C  0601 0030               5485mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003720  6000 0006               5486mmm         BRA     DONE_392
00003724  0601 0037               5487mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003728  4E71                    5488mmm DONE_392: NOP
0000372A                          5489mmm         ENDM
0000372A  4E4F                    5490mm         TRAP    #15         ; EXECUTE OUTPUT
0000372C                          5491mm         
0000372C  3212                    5492mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000372E  E949                    5493mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003730  E049                    5494mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003732  E849                    5495mm         LSR.W   #4, D1      
00003734                          5496mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003734  0C01 0009               5497mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003738  6E00 000A               5498mmm         BGT     ALPHA_393
0000373C  0601 0030               5499mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003740  6000 0006               5500mmm         BRA     DONE_393
00003744  0601 0037               5501mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003748  4E71                    5502mmm DONE_393: NOP
0000374A                          5503mmm         ENDM
0000374A  4E4F                    5504mm         TRAP    #15         ; EXECUTE OUTPUT
0000374C                          5505mm         
0000374C  3212                    5506mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000374E  E149                    5507mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003750  E049                    5508mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003752  E849                    5509mm         LSR.W   #4, D1      
00003754                          5510mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003754  0C01 0009               5511mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003758  6E00 000A               5512mmm         BGT     ALPHA_394
0000375C  0601 0030               5513mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003760  6000 0006               5514mmm         BRA     DONE_394
00003764  0601 0037               5515mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003768  4E71                    5516mmm DONE_394: NOP
0000376A                          5517mmm         ENDM
0000376A  4E4F                    5518mm         TRAP    #15         ; EXECUTE OUTPUT
0000376C                          5519mm         
0000376C  3212                    5520mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000376E  E149                    5521mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003770  E949                    5522mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003772  E049                    5523mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003774  E849                    5524mm         LSR.W   #4, D1      
00003776                          5525mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003776  0C01 0009               5526mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000377A  6E00 000A               5527mmm         BGT     ALPHA_395
0000377E  0601 0030               5528mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003782  6000 0006               5529mmm         BRA     DONE_395
00003786  0601 0037               5530mmm ALPHA_395: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000378A  4E71                    5531mmm DONE_395: NOP
0000378C                          5532mmm         ENDM
0000378C  4E4F                    5533mm         TRAP    #15         ; EXECUTE OUTPUT   
0000378E                          5534mm         ENDM     
0000378E  3605                    5535m         MOVE.W  D5, D3
00003790  6000 02D6               5536m         BRA     COMPLETE_362
00003794                          5537m ADRIMMEDIATEL_362:
00003794  361A                    5538m         MOVE.W  (A2)+, D3
00003796                          5539mm         PRINTHASH
00003796  103C 0006               5540mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000379A  323C 0023               5541mm         MOVE.W  #35, D1     ; AN = SIGN
0000379E  4E4F                    5542mm         TRAP    #15         ; OUTPUT = SIGN
000037A0                          5543mm         ENDM
000037A0                          5544mm         PRINTSIGN
000037A0  103C 0006               5545mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000037A4  323C 0024               5546mm         MOVE.W  #36, D1     ; AN = SIGN
000037A8  4E4F                    5547mm         TRAP    #15         ; OUTPUT = SIGN
000037AA                          5548mm         ENDM
000037AA                          5549mm         ADROUT 
000037AA  103C 0006               5550mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000037AE  3212                    5551mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037B0  E049                    5552mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037B2  E849                    5553mm         LSR.W   #4, D1      
000037B4                          5554mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037B4  0C01 0009               5555mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B8  6E00 000A               5556mmm         BGT     ALPHA_399
000037BC  0601 0030               5557mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037C0  6000 0006               5558mmm         BRA     DONE_399
000037C4  0601 0037               5559mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C8  4E71                    5560mmm DONE_399: NOP
000037CA                          5561mmm         ENDM
000037CA  4E4F                    5562mm         TRAP    #15         ; EXECUTE OUTPUT
000037CC                          5563mm         
000037CC  3212                    5564mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037CE  E949                    5565mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000037D0  E049                    5566mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037D2  E849                    5567mm         LSR.W   #4, D1      
000037D4                          5568mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D4  0C01 0009               5569mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D8  6E00 000A               5570mmm         BGT     ALPHA_400
000037DC  0601 0030               5571mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037E0  6000 0006               5572mmm         BRA     DONE_400
000037E4  0601 0037               5573mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E8  4E71                    5574mmm DONE_400: NOP
000037EA                          5575mmm         ENDM
000037EA  4E4F                    5576mm         TRAP    #15         ; EXECUTE OUTPUT
000037EC                          5577mm         
000037EC  3212                    5578mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037EE  E149                    5579mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037F0  E049                    5580mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037F2  E849                    5581mm         LSR.W   #4, D1      
000037F4                          5582mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037F4  0C01 0009               5583mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037F8  6E00 000A               5584mmm         BGT     ALPHA_401
000037FC  0601 0030               5585mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003800  6000 0006               5586mmm         BRA     DONE_401
00003804  0601 0037               5587mmm ALPHA_401: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003808  4E71                    5588mmm DONE_401: NOP
0000380A                          5589mmm         ENDM
0000380A  4E4F                    5590mm         TRAP    #15         ; EXECUTE OUTPUT
0000380C                          5591mm         
0000380C  3212                    5592mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000380E  E149                    5593mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003810  E949                    5594mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003812  E049                    5595mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003814  E849                    5596mm         LSR.W   #4, D1      
00003816                          5597mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003816  0C01 0009               5598mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000381A  6E00 000A               5599mmm         BGT     ALPHA_402
0000381E  0601 0030               5600mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003822  6000 0006               5601mmm         BRA     DONE_402
00003826  0601 0037               5602mmm ALPHA_402: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000382A  4E71                    5603mmm DONE_402: NOP
0000382C                          5604mmm         ENDM
0000382C  4E4F                    5605mm         TRAP    #15         ; EXECUTE OUTPUT   
0000382E                          5606mm         ENDM     
0000382E  361A                    5607m         MOVE.W  (A2)+, D3
00003830                          5608mm         ADROUT
00003830  103C 0006               5609mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003834  3212                    5610mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003836  E049                    5611mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003838  E849                    5612mm         LSR.W   #4, D1      
0000383A                          5613mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000383A  0C01 0009               5614mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000383E  6E00 000A               5615mmm         BGT     ALPHA_404
00003842  0601 0030               5616mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003846  6000 0006               5617mmm         BRA     DONE_404
0000384A  0601 0037               5618mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000384E  4E71                    5619mmm DONE_404: NOP
00003850                          5620mmm         ENDM
00003850  4E4F                    5621mm         TRAP    #15         ; EXECUTE OUTPUT
00003852                          5622mm         
00003852  3212                    5623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003854  E949                    5624mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003856  E049                    5625mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003858  E849                    5626mm         LSR.W   #4, D1      
0000385A                          5627mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000385A  0C01 0009               5628mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000385E  6E00 000A               5629mmm         BGT     ALPHA_405
00003862  0601 0030               5630mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003866  6000 0006               5631mmm         BRA     DONE_405
0000386A  0601 0037               5632mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000386E  4E71                    5633mmm DONE_405: NOP
00003870                          5634mmm         ENDM
00003870  4E4F                    5635mm         TRAP    #15         ; EXECUTE OUTPUT
00003872                          5636mm         
00003872  3212                    5637mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003874  E149                    5638mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003876  E049                    5639mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003878  E849                    5640mm         LSR.W   #4, D1      
0000387A                          5641mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000387A  0C01 0009               5642mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000387E  6E00 000A               5643mmm         BGT     ALPHA_406
00003882  0601 0030               5644mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003886  6000 0006               5645mmm         BRA     DONE_406
0000388A  0601 0037               5646mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000388E  4E71                    5647mmm DONE_406: NOP
00003890                          5648mmm         ENDM
00003890  4E4F                    5649mm         TRAP    #15         ; EXECUTE OUTPUT
00003892                          5650mm         
00003892  3212                    5651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003894  E149                    5652mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003896  E949                    5653mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003898  E049                    5654mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000389A  E849                    5655mm         LSR.W   #4, D1      
0000389C                          5656mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000389C  0C01 0009               5657mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038A0  6E00 000A               5658mmm         BGT     ALPHA_407
000038A4  0601 0030               5659mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038A8  6000 0006               5660mmm         BRA     DONE_407
000038AC  0601 0037               5661mmm ALPHA_407: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038B0  4E71                    5662mmm DONE_407: NOP
000038B2                          5663mmm         ENDM
000038B2  4E4F                    5664mm         TRAP    #15         ; EXECUTE OUTPUT   
000038B4                          5665mm         ENDM     
000038B4  3605                    5666m         MOVE.W  D5, D3
000038B6  6000 01B0               5667m         BRA     COMPLETE_362 
000038BA                          5668m ADRABSOLUTEW_362:     
000038BA  361A                    5669m         MOVE.W  (A2)+, D3
000038BC                          5670mm         PRINTSIGN
000038BC  103C 0006               5671mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038C0  323C 0024               5672mm         MOVE.W  #36, D1     ; AN = SIGN
000038C4  4E4F                    5673mm         TRAP    #15         ; OUTPUT = SIGN
000038C6                          5674mm         ENDM
000038C6                          5675mm         ADROUT
000038C6  103C 0006               5676mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038CA  3212                    5677mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038CC  E049                    5678mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038CE  E849                    5679mm         LSR.W   #4, D1      
000038D0                          5680mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038D0  0C01 0009               5681mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038D4  6E00 000A               5682mmm         BGT     ALPHA_410
000038D8  0601 0030               5683mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038DC  6000 0006               5684mmm         BRA     DONE_410
000038E0  0601 0037               5685mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038E4  4E71                    5686mmm DONE_410: NOP
000038E6                          5687mmm         ENDM
000038E6  4E4F                    5688mm         TRAP    #15         ; EXECUTE OUTPUT
000038E8                          5689mm         
000038E8  3212                    5690mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038EA  E949                    5691mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000038EC  E049                    5692mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038EE  E849                    5693mm         LSR.W   #4, D1      
000038F0                          5694mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038F0  0C01 0009               5695mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038F4  6E00 000A               5696mmm         BGT     ALPHA_411
000038F8  0601 0030               5697mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038FC  6000 0006               5698mmm         BRA     DONE_411
00003900  0601 0037               5699mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003904  4E71                    5700mmm DONE_411: NOP
00003906                          5701mmm         ENDM
00003906  4E4F                    5702mm         TRAP    #15         ; EXECUTE OUTPUT
00003908                          5703mm         
00003908  3212                    5704mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000390A  E149                    5705mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000390C  E049                    5706mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000390E  E849                    5707mm         LSR.W   #4, D1      
00003910                          5708mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003910  0C01 0009               5709mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003914  6E00 000A               5710mmm         BGT     ALPHA_412
00003918  0601 0030               5711mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000391C  6000 0006               5712mmm         BRA     DONE_412
00003920  0601 0037               5713mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003924  4E71                    5714mmm DONE_412: NOP
00003926                          5715mmm         ENDM
00003926  4E4F                    5716mm         TRAP    #15         ; EXECUTE OUTPUT
00003928                          5717mm         
00003928  3212                    5718mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000392A  E149                    5719mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000392C  E949                    5720mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000392E  E049                    5721mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003930  E849                    5722mm         LSR.W   #4, D1      
00003932                          5723mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003932  0C01 0009               5724mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003936  6E00 000A               5725mmm         BGT     ALPHA_413
0000393A  0601 0030               5726mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000393E  6000 0006               5727mmm         BRA     DONE_413
00003942  0601 0037               5728mmm ALPHA_413: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003946  4E71                    5729mmm DONE_413: NOP
00003948                          5730mmm         ENDM
00003948  4E4F                    5731mm         TRAP    #15         ; EXECUTE OUTPUT   
0000394A                          5732mm         ENDM     
0000394A  3605                    5733m         MOVE.W  D5, D3
0000394C  6000 011A               5734m         BRA     COMPLETE_362  
00003950                          5735m ADRABSOLUTEL_362:  
00003950  361A                    5736m         MOVE.W  (A2)+, D3
00003952                          5737mm         PRINTSIGN
00003952  103C 0006               5738mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003956  323C 0024               5739mm         MOVE.W  #36, D1     ; AN = SIGN
0000395A  4E4F                    5740mm         TRAP    #15         ; OUTPUT = SIGN
0000395C                          5741mm         ENDM
0000395C                          5742mm         ADROUT 
0000395C  103C 0006               5743mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003960  3212                    5744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003962  E049                    5745mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003964  E849                    5746mm         LSR.W   #4, D1      
00003966                          5747mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003966  0C01 0009               5748mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000396A  6E00 000A               5749mmm         BGT     ALPHA_416
0000396E  0601 0030               5750mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003972  6000 0006               5751mmm         BRA     DONE_416
00003976  0601 0037               5752mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000397A  4E71                    5753mmm DONE_416: NOP
0000397C                          5754mmm         ENDM
0000397C  4E4F                    5755mm         TRAP    #15         ; EXECUTE OUTPUT
0000397E                          5756mm         
0000397E  3212                    5757mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003980  E949                    5758mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003982  E049                    5759mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003984  E849                    5760mm         LSR.W   #4, D1      
00003986                          5761mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003986  0C01 0009               5762mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000398A  6E00 000A               5763mmm         BGT     ALPHA_417
0000398E  0601 0030               5764mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003992  6000 0006               5765mmm         BRA     DONE_417
00003996  0601 0037               5766mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000399A  4E71                    5767mmm DONE_417: NOP
0000399C                          5768mmm         ENDM
0000399C  4E4F                    5769mm         TRAP    #15         ; EXECUTE OUTPUT
0000399E                          5770mm         
0000399E  3212                    5771mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039A0  E149                    5772mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000039A2  E049                    5773mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039A4  E849                    5774mm         LSR.W   #4, D1      
000039A6                          5775mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039A6  0C01 0009               5776mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039AA  6E00 000A               5777mmm         BGT     ALPHA_418
000039AE  0601 0030               5778mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039B2  6000 0006               5779mmm         BRA     DONE_418
000039B6  0601 0037               5780mmm ALPHA_418: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039BA  4E71                    5781mmm DONE_418: NOP
000039BC                          5782mmm         ENDM
000039BC  4E4F                    5783mm         TRAP    #15         ; EXECUTE OUTPUT
000039BE                          5784mm         
000039BE  3212                    5785mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039C0  E149                    5786mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000039C2  E949                    5787mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000039C4  E049                    5788mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039C6  E849                    5789mm         LSR.W   #4, D1      
000039C8                          5790mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039C8  0C01 0009               5791mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039CC  6E00 000A               5792mmm         BGT     ALPHA_419
000039D0  0601 0030               5793mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039D4  6000 0006               5794mmm         BRA     DONE_419
000039D8  0601 0037               5795mmm ALPHA_419: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039DC  4E71                    5796mmm DONE_419: NOP
000039DE                          5797mmm         ENDM
000039DE  4E4F                    5798mm         TRAP    #15         ; EXECUTE OUTPUT   
000039E0                          5799mm         ENDM     
000039E0  361A                    5800m         MOVE.W  (A2)+, D3
000039E2                          5801mm         ADROUT
000039E2  103C 0006               5802mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000039E6  3212                    5803mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039E8  E049                    5804mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039EA  E849                    5805mm         LSR.W   #4, D1      
000039EC                          5806mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039EC  0C01 0009               5807mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039F0  6E00 000A               5808mmm         BGT     ALPHA_421
000039F4  0601 0030               5809mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039F8  6000 0006               5810mmm         BRA     DONE_421
000039FC  0601 0037               5811mmm ALPHA_421: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A00  4E71                    5812mmm DONE_421: NOP
00003A02                          5813mmm         ENDM
00003A02  4E4F                    5814mm         TRAP    #15         ; EXECUTE OUTPUT
00003A04                          5815mm         
00003A04  3212                    5816mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A06  E949                    5817mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003A08  E049                    5818mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A0A  E849                    5819mm         LSR.W   #4, D1      
00003A0C                          5820mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A0C  0C01 0009               5821mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A10  6E00 000A               5822mmm         BGT     ALPHA_422
00003A14  0601 0030               5823mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A18  6000 0006               5824mmm         BRA     DONE_422
00003A1C  0601 0037               5825mmm ALPHA_422: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A20  4E71                    5826mmm DONE_422: NOP
00003A22                          5827mmm         ENDM
00003A22  4E4F                    5828mm         TRAP    #15         ; EXECUTE OUTPUT
00003A24                          5829mm         
00003A24  3212                    5830mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A26  E149                    5831mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A28  E049                    5832mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A2A  E849                    5833mm         LSR.W   #4, D1      
00003A2C                          5834mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A2C  0C01 0009               5835mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A30  6E00 000A               5836mmm         BGT     ALPHA_423
00003A34  0601 0030               5837mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A38  6000 0006               5838mmm         BRA     DONE_423
00003A3C  0601 0037               5839mmm ALPHA_423: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A40  4E71                    5840mmm DONE_423: NOP
00003A42                          5841mmm         ENDM
00003A42  4E4F                    5842mm         TRAP    #15         ; EXECUTE OUTPUT
00003A44                          5843mm         
00003A44  3212                    5844mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A46  E149                    5845mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A48  E949                    5846mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003A4A  E049                    5847mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A4C  E849                    5848mm         LSR.W   #4, D1      
00003A4E                          5849mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A4E  0C01 0009               5850mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A52  6E00 000A               5851mmm         BGT     ALPHA_424
00003A56  0601 0030               5852mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A5A  6000 0006               5853mmm         BRA     DONE_424
00003A5E  0601 0037               5854mmm ALPHA_424: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A62  4E71                    5855mmm DONE_424: NOP
00003A64                          5856mmm         ENDM
00003A64  4E4F                    5857mm         TRAP    #15         ; EXECUTE OUTPUT   
00003A66                          5858mm         ENDM     
00003A66  3605                    5859m         MOVE.W  D5, D3
00003A68                          5860m 
00003A68                          5861m COMPLETE_362:  ; OPCODE HAS BEEN VERIFIED
00003A68                          5862m         ENDM
00003A68                          5863m         printComma
00003A68  43F8 00D4               5864m         LEA     OCOMMA, A1     
00003A6C  103C 000E               5865m         MOVE.B  #14,D0          
00003A70  4E4F                    5866m         TRAP    #15
00003A72                          5867m         ENDM
00003A72                          5868m         printDnDest     D3
00003A72  3203                    5869m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003A74  E949                    5870m         LSL     #$04, D1
00003A76  E049                    5871m         LSR     #$08, D1
00003A78  EA49                    5872m         LSR     #$05, D1
00003A7A  43F8 00CC               5873m         LEA     ODN, A1     
00003A7E  103C 000E               5874m         MOVE.B  #14,D0          
00003A82  4E4F                    5875m         TRAP    #15
00003A84  103C 0003               5876m         MOVE.B  #3,D0          
00003A88  4E4F                    5877m         TRAP    #15
00003A8A                          5878m         ENDM
00003A8A                          5879  decodeSUBcomp:
00003A8A  4E75                    5880          RTS                ; Return from decodeSUBcomp subroutine
00003A8C                          5881  
00003A8C                          5882  
00003A8C                          5883  ; ------------------------------------------------------------
00003A8C                          5884  ; 6. "decodeMULS" subroutine
00003A8C                          5885  ; Gary
00003A8C                          5886  ;
00003A8C                          5887  ; Decodes muls by verifying, printing, then checking adressing
00003A8C                          5888  ; modes and printing them in a formatted form.
00003A8C                          5889  ; ------------------------------------------------------------
00003A8C                          5890  decodeMULS:
00003A8C                          5891m         verifyOpcode    pMULS, (A2)
00003A8C  43F8 0153               5892m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003A90  3612                    5893m         MOVE.W  (A2), D3      ; INPUT VALUE
00003A92  123C 000F               5894m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003A96                          5895m         
00003A96                          5896m LOOP_427: 
00003A96  0C11 0030               5897m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003A9A  6700 000E               5898m         BEQ     CHECKFOR0_427
00003A9E  0C11 0031               5899m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003AA2  6700 0010               5900m         BEQ     CHECKFOR1_427
00003AA6  6000 0012               5901m         BRA     NEXT_427      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003AAA                          5902m         
00003AAA                          5903m CHECKFOR0_427: 
00003AAA  0303                    5904m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003AAC  6600 3CF4               5905m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003AB0  6000 0008               5906m         BRA     NEXT_427
00003AB4                          5907m 
00003AB4                          5908m CHECKFOR1_427:
00003AB4  0303                    5909m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003AB6  6700 3CEA               5910m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003ABA                          5911m 
00003ABA                          5912m NEXT_427: 
00003ABA  B23C 0000               5913m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003ABE  6700 0008               5914m         BEQ     COMPLETE_427  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003AC2  5301                    5915m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003AC4  1819                    5916m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003AC6  60CE                    5917m         BRA     LOOP_427      ; BEGIN LOOP AGAIN
00003AC8                          5918m 
00003AC8                          5919m COMPLETE_427:  ; OPCODE HAS BEEN VERIFIED
00003AC8                          5920m         ENDM
00003AC8  43F8 007C               5921          LEA     oMULS, A1     
00003ACC  103C 000E               5922          MOVE.B  #14,D0          
00003AD0  4E4F                    5923          TRAP    #15
00003AD2  4247                    5924          CLR     D7
00003AD4                          5925m         prepareAdrMode  #$1, (A2)
00003AD4  3C3C 0001               5926m         MOVE.W  #$1, D6      ; INPUT VALUE
00003AD8  3212                    5927m         MOVE.W  (A2), D1
00003ADA  BC3C 0001               5928m         CMP.B   #$01, D6
00003ADE  6700 000C               5929m         BEQ     ADRSOURCE_428    
00003AE2                          5930m ADRDEST_428:
00003AE2  EF49                    5931m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003AE4  E049                    5932m         LSR     #$08, D1
00003AE6  EA49                    5933m         LSR     #$05, D1
00003AE8  6000 000A               5934m         BRA     COMPLETE_428 
00003AEC                          5935m ADRSOURCE_428:                
00003AEC  E149                    5936m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003AEE  E549                    5937m         LSL     #$02, D1
00003AF0  E049                    5938m         LSR     #$08, D1
00003AF2  EA49                    5939m         LSR     #$05, D1
00003AF4                          5940m COMPLETE_428:  ; OPCODE HAS BEEN VERIFIED
00003AF4                          5941m         ENDM        
00003AF4                          5942m         decodeAdrMode   (A2), D1
00003AF4  3612                    5943m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003AF6  3201                    5944m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003AF8                          5945m 
00003AF8  B23C 0001               5946m         CMP.B   #$01, D1
00003AFC  6700 0066               5947m         BEQ     ADRREGDIRECT_429    
00003B00  B23C 0002               5948m         CMP.B   #$02, D1
00003B04  6700 00A0               5949m         BEQ     ADRREGINDIRECT_429  
00003B08  B23C 0003               5950m         CMP.B   #$03, D1
00003B0C  6700 0102               5951m         BEQ     ADRREGPOSTINC_429  
00003B10  B23C 0004               5952m         CMP.B   #$04, D1
00003B14  6700 0178               5953m         BEQ     ADRREGPREDEC_429
00003B18  B23C 0007               5954m         CMP.B   #$07, D1
00003B1C  6700 01EE               5955m         BEQ     ADRABSOLUTE_429    
00003B20                          5956m         
00003B20                          5957m DATAREGDIRECT_429: 
00003B20  BC3C 0001               5958m         CMP.B   #$01, D6
00003B24  6700 001E               5959m         BEQ     DATAREGDIRECTSRC_429   
00003B28                          5960m DATAREGDIRECTDEST_429: 
00003B28                          5961mm         PRINTDNDEST D3 
00003B28  3203                    5962mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003B2A  E949                    5963mm         LSL     #$04, D1
00003B2C  E049                    5964mm         LSR     #$08, D1
00003B2E  EA49                    5965mm         LSR     #$05, D1
00003B30  43F8 00CC               5966mm         LEA     ODN, A1     
00003B34  103C 000E               5967mm         MOVE.B  #14,D0          
00003B38  4E4F                    5968mm         TRAP    #15
00003B3A  103C 0003               5969mm         MOVE.B  #3,D0          
00003B3E  4E4F                    5970mm         TRAP    #15
00003B40                          5971mm         ENDM
00003B40  6000 057A               5972m         BRA     COMPLETE_429 
00003B44                          5973m DATAREGDIRECTSRC_429: 
00003B44                          5974mm         PRINTDNSRC D3 
00003B44  4281                    5975mm         CLR.L   D1
00003B46  3203                    5976mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B48  E149                    5977mm         LSL     #$08, D1
00003B4A  EB49                    5978mm         LSL     #$05, D1
00003B4C  E049                    5979mm         LSR     #$08, D1
00003B4E  EA49                    5980mm         LSR     #$05, D1
00003B50  43F8 00CC               5981mm         LEA     ODN, A1     
00003B54  103C 000E               5982mm         MOVE.B  #14,D0          
00003B58  4E4F                    5983mm         TRAP    #15
00003B5A  103C 0003               5984mm         MOVE.B  #3,D0          
00003B5E  4E4F                    5985mm         TRAP    #15
00003B60                          5986mm         ENDM
00003B60  6000 055A               5987m         BRA     COMPLETE_429   
00003B64                          5988m         
00003B64                          5989m ADRREGDIRECT_429: 
00003B64  BC3C 0001               5990m         CMP.B   #$01, D6
00003B68  6700 001E               5991m         BEQ     ADRREGDIRECTSRC_429   
00003B6C                          5992m ADRREGDIRECTDEST_429:
00003B6C                          5993mm         PRINTANDEST D3
00003B6C  3203                    5994mm         MOVE.W  D3, D1
00003B6E  E949                    5995mm         LSL     #$04, D1 ; BITS 9 TO 11
00003B70  E049                    5996mm         LSR     #$08, D1
00003B72  EA49                    5997mm         LSR     #$05, D1
00003B74  43F8 00CE               5998mm         LEA     OAN, A1     
00003B78  103C 000E               5999mm         MOVE.B  #14,D0          
00003B7C  4E4F                    6000mm         TRAP    #15
00003B7E  103C 0003               6001mm         MOVE.B  #3,D0          
00003B82  4E4F                    6002mm         TRAP    #15
00003B84                          6003mm         ENDM
00003B84  6000 0536               6004m         BRA     COMPLETE_429   
00003B88                          6005m ADRREGDIRECTSRC_429:
00003B88                          6006mm         PRINTANSRC D3
00003B88  3203                    6007mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B8A  E149                    6008mm         LSL     #$08, D1
00003B8C  EB49                    6009mm         LSL     #$05, D1
00003B8E  E049                    6010mm         LSR     #$08, D1
00003B90  EA49                    6011mm         LSR     #$05, D1
00003B92  43F8 00CE               6012mm         LEA     OAN, A1     
00003B96  103C 000E               6013mm         MOVE.B  #14,D0          
00003B9A  4E4F                    6014mm         TRAP    #15
00003B9C  103C 0003               6015mm         MOVE.B  #3,D0          
00003BA0  4E4F                    6016mm         TRAP    #15
00003BA2                          6017mm         ENDM
00003BA2  6000 0518               6018m         BRA     COMPLETE_429   
00003BA6                          6019m        
00003BA6                          6020m ADRREGINDIRECT_429:   
00003BA6  BC3C 0001               6021m         CMP.B   #$01, D6
00003BAA  6700 0032               6022m         BEQ     ADRREGINDIRECTSRC_429   
00003BAE                          6023m ADRREGINDIRECTDEST_429:
00003BAE                          6024mm         PRINTLB
00003BAE  43F8 00D0               6025mm         LEA     OLB, A1     
00003BB2  103C 000E               6026mm         MOVE.B  #14,D0          
00003BB6  4E4F                    6027mm         TRAP    #15
00003BB8                          6028mm         ENDM
00003BB8                          6029mm         PRINTANDEST D3  
00003BB8  3203                    6030mm         MOVE.W  D3, D1
00003BBA  E949                    6031mm         LSL     #$04, D1 ; BITS 9 TO 11
00003BBC  E049                    6032mm         LSR     #$08, D1
00003BBE  EA49                    6033mm         LSR     #$05, D1
00003BC0  43F8 00CE               6034mm         LEA     OAN, A1     
00003BC4  103C 000E               6035mm         MOVE.B  #14,D0          
00003BC8  4E4F                    6036mm         TRAP    #15
00003BCA  103C 0003               6037mm         MOVE.B  #3,D0          
00003BCE  4E4F                    6038mm         TRAP    #15
00003BD0                          6039mm         ENDM
00003BD0                          6040mm         PRINTRB
00003BD0  43F8 00D2               6041mm         LEA     ORB, A1     
00003BD4  103C 000E               6042mm         MOVE.B  #14,D0          
00003BD8  4E4F                    6043mm         TRAP    #15
00003BDA                          6044mm         ENDM
00003BDA  6000 04E0               6045m         BRA     COMPLETE_429     
00003BDE                          6046m ADRREGINDIRECTSRC_429:   
00003BDE                          6047mm         PRINTLB
00003BDE  43F8 00D0               6048mm         LEA     OLB, A1     
00003BE2  103C 000E               6049mm         MOVE.B  #14,D0          
00003BE6  4E4F                    6050mm         TRAP    #15
00003BE8                          6051mm         ENDM
00003BE8                          6052mm         PRINTANSRC D3  
00003BE8  3203                    6053mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BEA  E149                    6054mm         LSL     #$08, D1
00003BEC  EB49                    6055mm         LSL     #$05, D1
00003BEE  E049                    6056mm         LSR     #$08, D1
00003BF0  EA49                    6057mm         LSR     #$05, D1
00003BF2  43F8 00CE               6058mm         LEA     OAN, A1     
00003BF6  103C 000E               6059mm         MOVE.B  #14,D0          
00003BFA  4E4F                    6060mm         TRAP    #15
00003BFC  103C 0003               6061mm         MOVE.B  #3,D0          
00003C00  4E4F                    6062mm         TRAP    #15
00003C02                          6063mm         ENDM
00003C02                          6064mm         PRINTRB
00003C02  43F8 00D2               6065mm         LEA     ORB, A1     
00003C06  103C 000E               6066mm         MOVE.B  #14,D0          
00003C0A  4E4F                    6067mm         TRAP    #15
00003C0C                          6068mm         ENDM
00003C0C  6000 04AE               6069m         BRA     COMPLETE_429   
00003C10                          6070m         
00003C10                          6071m ADRREGPOSTINC_429:   
00003C10  BC3C 0001               6072m         CMP.B   #$01, D6
00003C14  6700 003C               6073m         BEQ     ADRREGPOSTINCSRC_429   
00003C18                          6074m ADRREGPOSTINCDEST_429: 
00003C18                          6075mm         PRINTLB
00003C18  43F8 00D0               6076mm         LEA     OLB, A1     
00003C1C  103C 000E               6077mm         MOVE.B  #14,D0          
00003C20  4E4F                    6078mm         TRAP    #15
00003C22                          6079mm         ENDM
00003C22                          6080mm         PRINTANDEST D3  
00003C22  3203                    6081mm         MOVE.W  D3, D1
00003C24  E949                    6082mm         LSL     #$04, D1 ; BITS 9 TO 11
00003C26  E049                    6083mm         LSR     #$08, D1
00003C28  EA49                    6084mm         LSR     #$05, D1
00003C2A  43F8 00CE               6085mm         LEA     OAN, A1     
00003C2E  103C 000E               6086mm         MOVE.B  #14,D0          
00003C32  4E4F                    6087mm         TRAP    #15
00003C34  103C 0003               6088mm         MOVE.B  #3,D0          
00003C38  4E4F                    6089mm         TRAP    #15
00003C3A                          6090mm         ENDM
00003C3A                          6091mm         PRINTRB
00003C3A  43F8 00D2               6092mm         LEA     ORB, A1     
00003C3E  103C 000E               6093mm         MOVE.B  #14,D0          
00003C42  4E4F                    6094mm         TRAP    #15
00003C44                          6095mm         ENDM
00003C44                          6096mm         PRINTPI
00003C44  43F8 00D9               6097mm         LEA     OPSTINC, A1     
00003C48  103C 000E               6098mm         MOVE.B  #14,D0          
00003C4C  4E4F                    6099mm         TRAP    #15
00003C4E                          6100mm         ENDM
00003C4E  6000 046C               6101m         BRA     COMPLETE_429  
00003C52                          6102m ADRREGPOSTINCSRC_429:           
00003C52                          6103mm         PRINTLB
00003C52  43F8 00D0               6104mm         LEA     OLB, A1     
00003C56  103C 000E               6105mm         MOVE.B  #14,D0          
00003C5A  4E4F                    6106mm         TRAP    #15
00003C5C                          6107mm         ENDM
00003C5C                          6108mm         PRINTANSRC D3  
00003C5C  3203                    6109mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003C5E  E149                    6110mm         LSL     #$08, D1
00003C60  EB49                    6111mm         LSL     #$05, D1
00003C62  E049                    6112mm         LSR     #$08, D1
00003C64  EA49                    6113mm         LSR     #$05, D1
00003C66  43F8 00CE               6114mm         LEA     OAN, A1     
00003C6A  103C 000E               6115mm         MOVE.B  #14,D0          
00003C6E  4E4F                    6116mm         TRAP    #15
00003C70  103C 0003               6117mm         MOVE.B  #3,D0          
00003C74  4E4F                    6118mm         TRAP    #15
00003C76                          6119mm         ENDM
00003C76                          6120mm         PRINTRB
00003C76  43F8 00D2               6121mm         LEA     ORB, A1     
00003C7A  103C 000E               6122mm         MOVE.B  #14,D0          
00003C7E  4E4F                    6123mm         TRAP    #15
00003C80                          6124mm         ENDM
00003C80                          6125mm         PRINTPI
00003C80  43F8 00D9               6126mm         LEA     OPSTINC, A1     
00003C84  103C 000E               6127mm         MOVE.B  #14,D0          
00003C88  4E4F                    6128mm         TRAP    #15
00003C8A                          6129mm         ENDM
00003C8A  6000 0430               6130m         BRA     COMPLETE_429  
00003C8E                          6131m ADRREGPREDEC_429: 
00003C8E  BC3C 0001               6132m         CMP.B   #$01, D6
00003C92  6700 003C               6133m         BEQ     ADRREGPREDECSRC_429   
00003C96                          6134m ADRREGPREDECDEST_429:
00003C96                          6135mm         PRINTPD  
00003C96  43F8 00D7               6136mm         LEA     OPREDEC, A1     
00003C9A  103C 000E               6137mm         MOVE.B  #14,D0          
00003C9E  4E4F                    6138mm         TRAP    #15
00003CA0                          6139mm         ENDM
00003CA0                          6140mm         PRINTLB
00003CA0  43F8 00D0               6141mm         LEA     OLB, A1     
00003CA4  103C 000E               6142mm         MOVE.B  #14,D0          
00003CA8  4E4F                    6143mm         TRAP    #15
00003CAA                          6144mm         ENDM
00003CAA                          6145mm         PRINTANDEST D3  
00003CAA  3203                    6146mm         MOVE.W  D3, D1
00003CAC  E949                    6147mm         LSL     #$04, D1 ; BITS 9 TO 11
00003CAE  E049                    6148mm         LSR     #$08, D1
00003CB0  EA49                    6149mm         LSR     #$05, D1
00003CB2  43F8 00CE               6150mm         LEA     OAN, A1     
00003CB6  103C 000E               6151mm         MOVE.B  #14,D0          
00003CBA  4E4F                    6152mm         TRAP    #15
00003CBC  103C 0003               6153mm         MOVE.B  #3,D0          
00003CC0  4E4F                    6154mm         TRAP    #15
00003CC2                          6155mm         ENDM
00003CC2                          6156mm         PRINTRB
00003CC2  43F8 00D2               6157mm         LEA     ORB, A1     
00003CC6  103C 000E               6158mm         MOVE.B  #14,D0          
00003CCA  4E4F                    6159mm         TRAP    #15
00003CCC                          6160mm         ENDM
00003CCC  6000 03EE               6161m         BRA     COMPLETE_429   
00003CD0                          6162m ADRREGPREDECSRC_429: 
00003CD0                          6163mm         PRINTPD  
00003CD0  43F8 00D7               6164mm         LEA     OPREDEC, A1     
00003CD4  103C 000E               6165mm         MOVE.B  #14,D0          
00003CD8  4E4F                    6166mm         TRAP    #15
00003CDA                          6167mm         ENDM
00003CDA                          6168mm         PRINTLB
00003CDA  43F8 00D0               6169mm         LEA     OLB, A1     
00003CDE  103C 000E               6170mm         MOVE.B  #14,D0          
00003CE2  4E4F                    6171mm         TRAP    #15
00003CE4                          6172mm         ENDM
00003CE4                          6173mm         PRINTANSRC D3  
00003CE4  3203                    6174mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003CE6  E149                    6175mm         LSL     #$08, D1
00003CE8  EB49                    6176mm         LSL     #$05, D1
00003CEA  E049                    6177mm         LSR     #$08, D1
00003CEC  EA49                    6178mm         LSR     #$05, D1
00003CEE  43F8 00CE               6179mm         LEA     OAN, A1     
00003CF2  103C 000E               6180mm         MOVE.B  #14,D0          
00003CF6  4E4F                    6181mm         TRAP    #15
00003CF8  103C 0003               6182mm         MOVE.B  #3,D0          
00003CFC  4E4F                    6183mm         TRAP    #15
00003CFE                          6184mm         ENDM
00003CFE                          6185mm         PRINTRB
00003CFE  43F8 00D2               6186mm         LEA     ORB, A1     
00003D02  103C 000E               6187mm         MOVE.B  #14,D0          
00003D06  4E4F                    6188mm         TRAP    #15
00003D08                          6189mm         ENDM
00003D08  6000 03B2               6190m         BRA     COMPLETE_429
00003D0C                          6191m        
00003D0C                          6192m ADRABSOLUTE_429:
00003D0C  BC3C 0001               6193m         CMP.B   #$01, D6
00003D10  6600 0018               6194m         BNE     ADRABSOLUTEDST_429 
00003D14                          6195m         
00003D14  3A03                    6196m         MOVE.W  D3, D5
00003D16  0803 0002               6197m         BTST    #2, D3
00003D1A  6600 0024               6198m         BNE     ADRIMMEDIATE_429
00003D1E  0803 0000               6199m         BTST    #0, D3
00003D22  6600 0280               6200m         BNE     ADRABSOLUTEL_429
00003D26  6000 01E6               6201m         BRA     ADRABSOLUTEW_429
00003D2A                          6202m ADRABSOLUTEDST_429:
00003D2A  3A03                    6203m         MOVE.W  D3, D5
00003D2C  0803 000B               6204m         BTST    #$B, D3
00003D30  6600 000E               6205m         BNE     ADRIMMEDIATE_429
00003D34  0803 0009               6206m         BTST    #$09, D3
00003D38  6600 026A               6207m         BNE     ADRABSOLUTEL_429
00003D3C  6000 01D0               6208m         BRA     ADRABSOLUTEW_429
00003D40                          6209m ADRIMMEDIATE_429:
00003D40  BE3C 0001               6210m         CMP.B   #1, D7
00003D44  6700 00A2               6211m         BEQ     ADRIMMEDIATEL_429
00003D48                          6212m ADRIMMEDIATEW_429:
00003D48  361A                    6213m         MOVE.W  (A2)+, D3
00003D4A                          6214mm         PRINTHASH
00003D4A  103C 0006               6215mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D4E  323C 0023               6216mm         MOVE.W  #35, D1     ; AN = SIGN
00003D52  4E4F                    6217mm         TRAP    #15         ; OUTPUT = SIGN
00003D54                          6218mm         ENDM
00003D54                          6219mm         PRINTSIGN
00003D54  103C 0006               6220mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D58  323C 0024               6221mm         MOVE.W  #36, D1     ; AN = SIGN
00003D5C  4E4F                    6222mm         TRAP    #15         ; OUTPUT = SIGN
00003D5E                          6223mm         ENDM
00003D5E                          6224mm         ADROUT
00003D5E  103C 0006               6225mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D62  3212                    6226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D64  E049                    6227mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D66  E849                    6228mm         LSR.W   #4, D1      
00003D68                          6229mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D68  0C01 0009               6230mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D6C  6E00 000A               6231mmm         BGT     ALPHA_459
00003D70  0601 0030               6232mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D74  6000 0006               6233mmm         BRA     DONE_459
00003D78  0601 0037               6234mmm ALPHA_459: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D7C  4E71                    6235mmm DONE_459: NOP
00003D7E                          6236mmm         ENDM
00003D7E  4E4F                    6237mm         TRAP    #15         ; EXECUTE OUTPUT
00003D80                          6238mm         
00003D80  3212                    6239mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D82  E949                    6240mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D84  E049                    6241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D86  E849                    6242mm         LSR.W   #4, D1      
00003D88                          6243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D88  0C01 0009               6244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D8C  6E00 000A               6245mmm         BGT     ALPHA_460
00003D90  0601 0030               6246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D94  6000 0006               6247mmm         BRA     DONE_460
00003D98  0601 0037               6248mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D9C  4E71                    6249mmm DONE_460: NOP
00003D9E                          6250mmm         ENDM
00003D9E  4E4F                    6251mm         TRAP    #15         ; EXECUTE OUTPUT
00003DA0                          6252mm         
00003DA0  3212                    6253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DA2  E149                    6254mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DA4  E049                    6255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DA6  E849                    6256mm         LSR.W   #4, D1      
00003DA8                          6257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DA8  0C01 0009               6258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DAC  6E00 000A               6259mmm         BGT     ALPHA_461
00003DB0  0601 0030               6260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DB4  6000 0006               6261mmm         BRA     DONE_461
00003DB8  0601 0037               6262mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DBC  4E71                    6263mmm DONE_461: NOP
00003DBE                          6264mmm         ENDM
00003DBE  4E4F                    6265mm         TRAP    #15         ; EXECUTE OUTPUT
00003DC0                          6266mm         
00003DC0  3212                    6267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DC2  E149                    6268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DC4  E949                    6269mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DC6  E049                    6270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DC8  E849                    6271mm         LSR.W   #4, D1      
00003DCA                          6272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DCA  0C01 0009               6273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DCE  6E00 000A               6274mmm         BGT     ALPHA_462
00003DD2  0601 0030               6275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DD6  6000 0006               6276mmm         BRA     DONE_462
00003DDA  0601 0037               6277mmm ALPHA_462: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DDE  4E71                    6278mmm DONE_462: NOP
00003DE0                          6279mmm         ENDM
00003DE0  4E4F                    6280mm         TRAP    #15         ; EXECUTE OUTPUT   
00003DE2                          6281mm         ENDM     
00003DE2  3605                    6282m         MOVE.W  D5, D3
00003DE4  6000 02D6               6283m         BRA     COMPLETE_429
00003DE8                          6284m ADRIMMEDIATEL_429:
00003DE8  361A                    6285m         MOVE.W  (A2)+, D3
00003DEA                          6286mm         PRINTHASH
00003DEA  103C 0006               6287mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DEE  323C 0023               6288mm         MOVE.W  #35, D1     ; AN = SIGN
00003DF2  4E4F                    6289mm         TRAP    #15         ; OUTPUT = SIGN
00003DF4                          6290mm         ENDM
00003DF4                          6291mm         PRINTSIGN
00003DF4  103C 0006               6292mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DF8  323C 0024               6293mm         MOVE.W  #36, D1     ; AN = SIGN
00003DFC  4E4F                    6294mm         TRAP    #15         ; OUTPUT = SIGN
00003DFE                          6295mm         ENDM
00003DFE                          6296mm         ADROUT 
00003DFE  103C 0006               6297mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E02  3212                    6298mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E04  E049                    6299mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E06  E849                    6300mm         LSR.W   #4, D1      
00003E08                          6301mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E08  0C01 0009               6302mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E0C  6E00 000A               6303mmm         BGT     ALPHA_466
00003E10  0601 0030               6304mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E14  6000 0006               6305mmm         BRA     DONE_466
00003E18  0601 0037               6306mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E1C  4E71                    6307mmm DONE_466: NOP
00003E1E                          6308mmm         ENDM
00003E1E  4E4F                    6309mm         TRAP    #15         ; EXECUTE OUTPUT
00003E20                          6310mm         
00003E20  3212                    6311mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E22  E949                    6312mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E24  E049                    6313mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E26  E849                    6314mm         LSR.W   #4, D1      
00003E28                          6315mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E28  0C01 0009               6316mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E2C  6E00 000A               6317mmm         BGT     ALPHA_467
00003E30  0601 0030               6318mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E34  6000 0006               6319mmm         BRA     DONE_467
00003E38  0601 0037               6320mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E3C  4E71                    6321mmm DONE_467: NOP
00003E3E                          6322mmm         ENDM
00003E3E  4E4F                    6323mm         TRAP    #15         ; EXECUTE OUTPUT
00003E40                          6324mm         
00003E40  3212                    6325mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E42  E149                    6326mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E44  E049                    6327mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E46  E849                    6328mm         LSR.W   #4, D1      
00003E48                          6329mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E48  0C01 0009               6330mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E4C  6E00 000A               6331mmm         BGT     ALPHA_468
00003E50  0601 0030               6332mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E54  6000 0006               6333mmm         BRA     DONE_468
00003E58  0601 0037               6334mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E5C  4E71                    6335mmm DONE_468: NOP
00003E5E                          6336mmm         ENDM
00003E5E  4E4F                    6337mm         TRAP    #15         ; EXECUTE OUTPUT
00003E60                          6338mm         
00003E60  3212                    6339mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E62  E149                    6340mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E64  E949                    6341mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E66  E049                    6342mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E68  E849                    6343mm         LSR.W   #4, D1      
00003E6A                          6344mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E6A  0C01 0009               6345mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E6E  6E00 000A               6346mmm         BGT     ALPHA_469
00003E72  0601 0030               6347mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E76  6000 0006               6348mmm         BRA     DONE_469
00003E7A  0601 0037               6349mmm ALPHA_469: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E7E  4E71                    6350mmm DONE_469: NOP
00003E80                          6351mmm         ENDM
00003E80  4E4F                    6352mm         TRAP    #15         ; EXECUTE OUTPUT   
00003E82                          6353mm         ENDM     
00003E82  361A                    6354m         MOVE.W  (A2)+, D3
00003E84                          6355mm         ADROUT
00003E84  103C 0006               6356mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E88  3212                    6357mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E8A  E049                    6358mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E8C  E849                    6359mm         LSR.W   #4, D1      
00003E8E                          6360mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E8E  0C01 0009               6361mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E92  6E00 000A               6362mmm         BGT     ALPHA_471
00003E96  0601 0030               6363mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E9A  6000 0006               6364mmm         BRA     DONE_471
00003E9E  0601 0037               6365mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EA2  4E71                    6366mmm DONE_471: NOP
00003EA4                          6367mmm         ENDM
00003EA4  4E4F                    6368mm         TRAP    #15         ; EXECUTE OUTPUT
00003EA6                          6369mm         
00003EA6  3212                    6370mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EA8  E949                    6371mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003EAA  E049                    6372mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EAC  E849                    6373mm         LSR.W   #4, D1      
00003EAE                          6374mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EAE  0C01 0009               6375mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EB2  6E00 000A               6376mmm         BGT     ALPHA_472
00003EB6  0601 0030               6377mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EBA  6000 0006               6378mmm         BRA     DONE_472
00003EBE  0601 0037               6379mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EC2  4E71                    6380mmm DONE_472: NOP
00003EC4                          6381mmm         ENDM
00003EC4  4E4F                    6382mm         TRAP    #15         ; EXECUTE OUTPUT
00003EC6                          6383mm         
00003EC6  3212                    6384mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EC8  E149                    6385mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003ECA  E049                    6386mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ECC  E849                    6387mm         LSR.W   #4, D1      
00003ECE                          6388mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003ECE  0C01 0009               6389mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003ED2  6E00 000A               6390mmm         BGT     ALPHA_473
00003ED6  0601 0030               6391mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EDA  6000 0006               6392mmm         BRA     DONE_473
00003EDE  0601 0037               6393mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EE2  4E71                    6394mmm DONE_473: NOP
00003EE4                          6395mmm         ENDM
00003EE4  4E4F                    6396mm         TRAP    #15         ; EXECUTE OUTPUT
00003EE6                          6397mm         
00003EE6  3212                    6398mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EE8  E149                    6399mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EEA  E949                    6400mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003EEC  E049                    6401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EEE  E849                    6402mm         LSR.W   #4, D1      
00003EF0                          6403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EF0  0C01 0009               6404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EF4  6E00 000A               6405mmm         BGT     ALPHA_474
00003EF8  0601 0030               6406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EFC  6000 0006               6407mmm         BRA     DONE_474
00003F00  0601 0037               6408mmm ALPHA_474: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F04  4E71                    6409mmm DONE_474: NOP
00003F06                          6410mmm         ENDM
00003F06  4E4F                    6411mm         TRAP    #15         ; EXECUTE OUTPUT   
00003F08                          6412mm         ENDM     
00003F08  3605                    6413m         MOVE.W  D5, D3
00003F0A  6000 01B0               6414m         BRA     COMPLETE_429 
00003F0E                          6415m ADRABSOLUTEW_429:     
00003F0E  361A                    6416m         MOVE.W  (A2)+, D3
00003F10                          6417mm         PRINTSIGN
00003F10  103C 0006               6418mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F14  323C 0024               6419mm         MOVE.W  #36, D1     ; AN = SIGN
00003F18  4E4F                    6420mm         TRAP    #15         ; OUTPUT = SIGN
00003F1A                          6421mm         ENDM
00003F1A                          6422mm         ADROUT
00003F1A  103C 0006               6423mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F1E  3212                    6424mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F20  E049                    6425mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F22  E849                    6426mm         LSR.W   #4, D1      
00003F24                          6427mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F24  0C01 0009               6428mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F28  6E00 000A               6429mmm         BGT     ALPHA_477
00003F2C  0601 0030               6430mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F30  6000 0006               6431mmm         BRA     DONE_477
00003F34  0601 0037               6432mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F38  4E71                    6433mmm DONE_477: NOP
00003F3A                          6434mmm         ENDM
00003F3A  4E4F                    6435mm         TRAP    #15         ; EXECUTE OUTPUT
00003F3C                          6436mm         
00003F3C  3212                    6437mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F3E  E949                    6438mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F40  E049                    6439mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F42  E849                    6440mm         LSR.W   #4, D1      
00003F44                          6441mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F44  0C01 0009               6442mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F48  6E00 000A               6443mmm         BGT     ALPHA_478
00003F4C  0601 0030               6444mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F50  6000 0006               6445mmm         BRA     DONE_478
00003F54  0601 0037               6446mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F58  4E71                    6447mmm DONE_478: NOP
00003F5A                          6448mmm         ENDM
00003F5A  4E4F                    6449mm         TRAP    #15         ; EXECUTE OUTPUT
00003F5C                          6450mm         
00003F5C  3212                    6451mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F5E  E149                    6452mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F60  E049                    6453mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F62  E849                    6454mm         LSR.W   #4, D1      
00003F64                          6455mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F64  0C01 0009               6456mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F68  6E00 000A               6457mmm         BGT     ALPHA_479
00003F6C  0601 0030               6458mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F70  6000 0006               6459mmm         BRA     DONE_479
00003F74  0601 0037               6460mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F78  4E71                    6461mmm DONE_479: NOP
00003F7A                          6462mmm         ENDM
00003F7A  4E4F                    6463mm         TRAP    #15         ; EXECUTE OUTPUT
00003F7C                          6464mm         
00003F7C  3212                    6465mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F7E  E149                    6466mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F80  E949                    6467mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F82  E049                    6468mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F84  E849                    6469mm         LSR.W   #4, D1      
00003F86                          6470mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F86  0C01 0009               6471mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F8A  6E00 000A               6472mmm         BGT     ALPHA_480
00003F8E  0601 0030               6473mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F92  6000 0006               6474mmm         BRA     DONE_480
00003F96  0601 0037               6475mmm ALPHA_480: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F9A  4E71                    6476mmm DONE_480: NOP
00003F9C                          6477mmm         ENDM
00003F9C  4E4F                    6478mm         TRAP    #15         ; EXECUTE OUTPUT   
00003F9E                          6479mm         ENDM     
00003F9E  3605                    6480m         MOVE.W  D5, D3
00003FA0  6000 011A               6481m         BRA     COMPLETE_429  
00003FA4                          6482m ADRABSOLUTEL_429:  
00003FA4  361A                    6483m         MOVE.W  (A2)+, D3
00003FA6                          6484mm         PRINTSIGN
00003FA6  103C 0006               6485mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003FAA  323C 0024               6486mm         MOVE.W  #36, D1     ; AN = SIGN
00003FAE  4E4F                    6487mm         TRAP    #15         ; OUTPUT = SIGN
00003FB0                          6488mm         ENDM
00003FB0                          6489mm         ADROUT 
00003FB0  103C 0006               6490mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003FB4  3212                    6491mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FB6  E049                    6492mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FB8  E849                    6493mm         LSR.W   #4, D1      
00003FBA                          6494mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FBA  0C01 0009               6495mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FBE  6E00 000A               6496mmm         BGT     ALPHA_483
00003FC2  0601 0030               6497mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FC6  6000 0006               6498mmm         BRA     DONE_483
00003FCA  0601 0037               6499mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FCE  4E71                    6500mmm DONE_483: NOP
00003FD0                          6501mmm         ENDM
00003FD0  4E4F                    6502mm         TRAP    #15         ; EXECUTE OUTPUT
00003FD2                          6503mm         
00003FD2  3212                    6504mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FD4  E949                    6505mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003FD6  E049                    6506mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FD8  E849                    6507mm         LSR.W   #4, D1      
00003FDA                          6508mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FDA  0C01 0009               6509mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FDE  6E00 000A               6510mmm         BGT     ALPHA_484
00003FE2  0601 0030               6511mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FE6  6000 0006               6512mmm         BRA     DONE_484
00003FEA  0601 0037               6513mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FEE  4E71                    6514mmm DONE_484: NOP
00003FF0                          6515mmm         ENDM
00003FF0  4E4F                    6516mm         TRAP    #15         ; EXECUTE OUTPUT
00003FF2                          6517mm         
00003FF2  3212                    6518mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FF4  E149                    6519mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FF6  E049                    6520mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FF8  E849                    6521mm         LSR.W   #4, D1      
00003FFA                          6522mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FFA  0C01 0009               6523mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FFE  6E00 000A               6524mmm         BGT     ALPHA_485
00004002  0601 0030               6525mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004006  6000 0006               6526mmm         BRA     DONE_485
0000400A  0601 0037               6527mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000400E  4E71                    6528mmm DONE_485: NOP
00004010                          6529mmm         ENDM
00004010  4E4F                    6530mm         TRAP    #15         ; EXECUTE OUTPUT
00004012                          6531mm         
00004012  3212                    6532mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004014  E149                    6533mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004016  E949                    6534mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004018  E049                    6535mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000401A  E849                    6536mm         LSR.W   #4, D1      
0000401C                          6537mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000401C  0C01 0009               6538mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004020  6E00 000A               6539mmm         BGT     ALPHA_486
00004024  0601 0030               6540mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004028  6000 0006               6541mmm         BRA     DONE_486
0000402C  0601 0037               6542mmm ALPHA_486: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004030  4E71                    6543mmm DONE_486: NOP
00004032                          6544mmm         ENDM
00004032  4E4F                    6545mm         TRAP    #15         ; EXECUTE OUTPUT   
00004034                          6546mm         ENDM     
00004034  361A                    6547m         MOVE.W  (A2)+, D3
00004036                          6548mm         ADROUT
00004036  103C 0006               6549mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000403A  3212                    6550mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000403C  E049                    6551mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000403E  E849                    6552mm         LSR.W   #4, D1      
00004040                          6553mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004040  0C01 0009               6554mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004044  6E00 000A               6555mmm         BGT     ALPHA_488
00004048  0601 0030               6556mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000404C  6000 0006               6557mmm         BRA     DONE_488
00004050  0601 0037               6558mmm ALPHA_488: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004054  4E71                    6559mmm DONE_488: NOP
00004056                          6560mmm         ENDM
00004056  4E4F                    6561mm         TRAP    #15         ; EXECUTE OUTPUT
00004058                          6562mm         
00004058  3212                    6563mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000405A  E949                    6564mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000405C  E049                    6565mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000405E  E849                    6566mm         LSR.W   #4, D1      
00004060                          6567mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004060  0C01 0009               6568mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004064  6E00 000A               6569mmm         BGT     ALPHA_489
00004068  0601 0030               6570mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000406C  6000 0006               6571mmm         BRA     DONE_489
00004070  0601 0037               6572mmm ALPHA_489: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004074  4E71                    6573mmm DONE_489: NOP
00004076                          6574mmm         ENDM
00004076  4E4F                    6575mm         TRAP    #15         ; EXECUTE OUTPUT
00004078                          6576mm         
00004078  3212                    6577mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000407A  E149                    6578mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000407C  E049                    6579mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000407E  E849                    6580mm         LSR.W   #4, D1      
00004080                          6581mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004080  0C01 0009               6582mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004084  6E00 000A               6583mmm         BGT     ALPHA_490
00004088  0601 0030               6584mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000408C  6000 0006               6585mmm         BRA     DONE_490
00004090  0601 0037               6586mmm ALPHA_490: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004094  4E71                    6587mmm DONE_490: NOP
00004096                          6588mmm         ENDM
00004096  4E4F                    6589mm         TRAP    #15         ; EXECUTE OUTPUT
00004098                          6590mm         
00004098  3212                    6591mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000409A  E149                    6592mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000409C  E949                    6593mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000409E  E049                    6594mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000040A0  E849                    6595mm         LSR.W   #4, D1      
000040A2                          6596mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000040A2  0C01 0009               6597mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000040A6  6E00 000A               6598mmm         BGT     ALPHA_491
000040AA  0601 0030               6599mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000040AE  6000 0006               6600mmm         BRA     DONE_491
000040B2  0601 0037               6601mmm ALPHA_491: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000040B6  4E71                    6602mmm DONE_491: NOP
000040B8                          6603mmm         ENDM
000040B8  4E4F                    6604mm         TRAP    #15         ; EXECUTE OUTPUT   
000040BA                          6605mm         ENDM     
000040BA  3605                    6606m         MOVE.W  D5, D3
000040BC                          6607m 
000040BC                          6608m COMPLETE_429:  ; OPCODE HAS BEEN VERIFIED
000040BC                          6609m         ENDM
000040BC                          6610m         printComma
000040BC  43F8 00D4               6611m         LEA     OCOMMA, A1     
000040C0  103C 000E               6612m         MOVE.B  #14,D0          
000040C4  4E4F                    6613m         TRAP    #15
000040C6                          6614m         ENDM
000040C6                          6615m         printDnDest     D3
000040C6  3203                    6616m         MOVE.W  D3, D1      ; BITS 9 TO 11
000040C8  E949                    6617m         LSL     #$04, D1
000040CA  E049                    6618m         LSR     #$08, D1
000040CC  EA49                    6619m         LSR     #$05, D1
000040CE  43F8 00CC               6620m         LEA     ODN, A1     
000040D2  103C 000E               6621m         MOVE.B  #14,D0          
000040D6  4E4F                    6622m         TRAP    #15
000040D8  103C 0003               6623m         MOVE.B  #3,D0          
000040DC  4E4F                    6624m         TRAP    #15
000040DE                          6625m         ENDM
000040DE  4E75                    6626          RTS                 ; Return from decodeMULS subroutine
000040E0                          6627          
000040E0                          6628  ; ------------------------------------------------------------
000040E0                          6629  ; 7. "decodeDIVU" subroutine
000040E0                          6630  ; Gary
000040E0                          6631  ;
000040E0                          6632  ; Decodes divu by verifying, printing, then checking adressing
000040E0                          6633  ; modes and printing them in a formatted form.
000040E0                          6634  ; ------------------------------------------------------------
000040E0                          6635  decodeDIVU:
000040E0                          6636m         verifyOpcode    pDIVU, (A2)
000040E0  43F8 0164               6637m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
000040E4  3612                    6638m         MOVE.W  (A2), D3      ; INPUT VALUE
000040E6  123C 000F               6639m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000040EA                          6640m         
000040EA                          6641m LOOP_494: 
000040EA  0C11 0030               6642m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000040EE  6700 000E               6643m         BEQ     CHECKFOR0_494
000040F2  0C11 0031               6644m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000040F6  6700 0010               6645m         BEQ     CHECKFOR1_494
000040FA  6000 0012               6646m         BRA     NEXT_494      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000040FE                          6647m         
000040FE                          6648m CHECKFOR0_494: 
000040FE  0303                    6649m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004100  6600 36A0               6650m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004104  6000 0008               6651m         BRA     NEXT_494
00004108                          6652m 
00004108                          6653m CHECKFOR1_494:
00004108  0303                    6654m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000410A  6700 3696               6655m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000410E                          6656m 
0000410E                          6657m NEXT_494: 
0000410E  B23C 0000               6658m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004112  6700 0008               6659m         BEQ     COMPLETE_494  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004116  5301                    6660m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004118  1819                    6661m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000411A  60CE                    6662m         BRA     LOOP_494      ; BEGIN LOOP AGAIN
0000411C                          6663m 
0000411C                          6664m COMPLETE_494:  ; OPCODE HAS BEEN VERIFIED
0000411C                          6665m         ENDM
0000411C  43F8 0084               6666          LEA     oDIVU, A1     
00004120  103C 000E               6667          MOVE.B  #14,D0          
00004124  4E4F                    6668          TRAP    #15
00004126  4247                    6669          CLR     D7
00004128                          6670m         prepareAdrMode  #$1, (A2)
00004128  3C3C 0001               6671m         MOVE.W  #$1, D6      ; INPUT VALUE
0000412C  3212                    6672m         MOVE.W  (A2), D1
0000412E  BC3C 0001               6673m         CMP.B   #$01, D6
00004132  6700 000C               6674m         BEQ     ADRSOURCE_495    
00004136                          6675m ADRDEST_495:
00004136  EF49                    6676m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004138  E049                    6677m         LSR     #$08, D1
0000413A  EA49                    6678m         LSR     #$05, D1
0000413C  6000 000A               6679m         BRA     COMPLETE_495 
00004140                          6680m ADRSOURCE_495:                
00004140  E149                    6681m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004142  E549                    6682m         LSL     #$02, D1
00004144  E049                    6683m         LSR     #$08, D1
00004146  EA49                    6684m         LSR     #$05, D1
00004148                          6685m COMPLETE_495:  ; OPCODE HAS BEEN VERIFIED
00004148                          6686m         ENDM        
00004148                          6687m         decodeAdrMode   (A2), D1
00004148  3612                    6688m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000414A  3201                    6689m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000414C                          6690m 
0000414C  B23C 0001               6691m         CMP.B   #$01, D1
00004150  6700 0066               6692m         BEQ     ADRREGDIRECT_496    
00004154  B23C 0002               6693m         CMP.B   #$02, D1
00004158  6700 00A0               6694m         BEQ     ADRREGINDIRECT_496  
0000415C  B23C 0003               6695m         CMP.B   #$03, D1
00004160  6700 0102               6696m         BEQ     ADRREGPOSTINC_496  
00004164  B23C 0004               6697m         CMP.B   #$04, D1
00004168  6700 0178               6698m         BEQ     ADRREGPREDEC_496
0000416C  B23C 0007               6699m         CMP.B   #$07, D1
00004170  6700 01EE               6700m         BEQ     ADRABSOLUTE_496    
00004174                          6701m         
00004174                          6702m DATAREGDIRECT_496: 
00004174  BC3C 0001               6703m         CMP.B   #$01, D6
00004178  6700 001E               6704m         BEQ     DATAREGDIRECTSRC_496   
0000417C                          6705m DATAREGDIRECTDEST_496: 
0000417C                          6706mm         PRINTDNDEST D3 
0000417C  3203                    6707mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000417E  E949                    6708mm         LSL     #$04, D1
00004180  E049                    6709mm         LSR     #$08, D1
00004182  EA49                    6710mm         LSR     #$05, D1
00004184  43F8 00CC               6711mm         LEA     ODN, A1     
00004188  103C 000E               6712mm         MOVE.B  #14,D0          
0000418C  4E4F                    6713mm         TRAP    #15
0000418E  103C 0003               6714mm         MOVE.B  #3,D0          
00004192  4E4F                    6715mm         TRAP    #15
00004194                          6716mm         ENDM
00004194  6000 057A               6717m         BRA     COMPLETE_496 
00004198                          6718m DATAREGDIRECTSRC_496: 
00004198                          6719mm         PRINTDNSRC D3 
00004198  4281                    6720mm         CLR.L   D1
0000419A  3203                    6721mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000419C  E149                    6722mm         LSL     #$08, D1
0000419E  EB49                    6723mm         LSL     #$05, D1
000041A0  E049                    6724mm         LSR     #$08, D1
000041A2  EA49                    6725mm         LSR     #$05, D1
000041A4  43F8 00CC               6726mm         LEA     ODN, A1     
000041A8  103C 000E               6727mm         MOVE.B  #14,D0          
000041AC  4E4F                    6728mm         TRAP    #15
000041AE  103C 0003               6729mm         MOVE.B  #3,D0          
000041B2  4E4F                    6730mm         TRAP    #15
000041B4                          6731mm         ENDM
000041B4  6000 055A               6732m         BRA     COMPLETE_496   
000041B8                          6733m         
000041B8                          6734m ADRREGDIRECT_496: 
000041B8  BC3C 0001               6735m         CMP.B   #$01, D6
000041BC  6700 001E               6736m         BEQ     ADRREGDIRECTSRC_496   
000041C0                          6737m ADRREGDIRECTDEST_496:
000041C0                          6738mm         PRINTANDEST D3
000041C0  3203                    6739mm         MOVE.W  D3, D1
000041C2  E949                    6740mm         LSL     #$04, D1 ; BITS 9 TO 11
000041C4  E049                    6741mm         LSR     #$08, D1
000041C6  EA49                    6742mm         LSR     #$05, D1
000041C8  43F8 00CE               6743mm         LEA     OAN, A1     
000041CC  103C 000E               6744mm         MOVE.B  #14,D0          
000041D0  4E4F                    6745mm         TRAP    #15
000041D2  103C 0003               6746mm         MOVE.B  #3,D0          
000041D6  4E4F                    6747mm         TRAP    #15
000041D8                          6748mm         ENDM
000041D8  6000 0536               6749m         BRA     COMPLETE_496   
000041DC                          6750m ADRREGDIRECTSRC_496:
000041DC                          6751mm         PRINTANSRC D3
000041DC  3203                    6752mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041DE  E149                    6753mm         LSL     #$08, D1
000041E0  EB49                    6754mm         LSL     #$05, D1
000041E2  E049                    6755mm         LSR     #$08, D1
000041E4  EA49                    6756mm         LSR     #$05, D1
000041E6  43F8 00CE               6757mm         LEA     OAN, A1     
000041EA  103C 000E               6758mm         MOVE.B  #14,D0          
000041EE  4E4F                    6759mm         TRAP    #15
000041F0  103C 0003               6760mm         MOVE.B  #3,D0          
000041F4  4E4F                    6761mm         TRAP    #15
000041F6                          6762mm         ENDM
000041F6  6000 0518               6763m         BRA     COMPLETE_496   
000041FA                          6764m        
000041FA                          6765m ADRREGINDIRECT_496:   
000041FA  BC3C 0001               6766m         CMP.B   #$01, D6
000041FE  6700 0032               6767m         BEQ     ADRREGINDIRECTSRC_496   
00004202                          6768m ADRREGINDIRECTDEST_496:
00004202                          6769mm         PRINTLB
00004202  43F8 00D0               6770mm         LEA     OLB, A1     
00004206  103C 000E               6771mm         MOVE.B  #14,D0          
0000420A  4E4F                    6772mm         TRAP    #15
0000420C                          6773mm         ENDM
0000420C                          6774mm         PRINTANDEST D3  
0000420C  3203                    6775mm         MOVE.W  D3, D1
0000420E  E949                    6776mm         LSL     #$04, D1 ; BITS 9 TO 11
00004210  E049                    6777mm         LSR     #$08, D1
00004212  EA49                    6778mm         LSR     #$05, D1
00004214  43F8 00CE               6779mm         LEA     OAN, A1     
00004218  103C 000E               6780mm         MOVE.B  #14,D0          
0000421C  4E4F                    6781mm         TRAP    #15
0000421E  103C 0003               6782mm         MOVE.B  #3,D0          
00004222  4E4F                    6783mm         TRAP    #15
00004224                          6784mm         ENDM
00004224                          6785mm         PRINTRB
00004224  43F8 00D2               6786mm         LEA     ORB, A1     
00004228  103C 000E               6787mm         MOVE.B  #14,D0          
0000422C  4E4F                    6788mm         TRAP    #15
0000422E                          6789mm         ENDM
0000422E  6000 04E0               6790m         BRA     COMPLETE_496     
00004232                          6791m ADRREGINDIRECTSRC_496:   
00004232                          6792mm         PRINTLB
00004232  43F8 00D0               6793mm         LEA     OLB, A1     
00004236  103C 000E               6794mm         MOVE.B  #14,D0          
0000423A  4E4F                    6795mm         TRAP    #15
0000423C                          6796mm         ENDM
0000423C                          6797mm         PRINTANSRC D3  
0000423C  3203                    6798mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000423E  E149                    6799mm         LSL     #$08, D1
00004240  EB49                    6800mm         LSL     #$05, D1
00004242  E049                    6801mm         LSR     #$08, D1
00004244  EA49                    6802mm         LSR     #$05, D1
00004246  43F8 00CE               6803mm         LEA     OAN, A1     
0000424A  103C 000E               6804mm         MOVE.B  #14,D0          
0000424E  4E4F                    6805mm         TRAP    #15
00004250  103C 0003               6806mm         MOVE.B  #3,D0          
00004254  4E4F                    6807mm         TRAP    #15
00004256                          6808mm         ENDM
00004256                          6809mm         PRINTRB
00004256  43F8 00D2               6810mm         LEA     ORB, A1     
0000425A  103C 000E               6811mm         MOVE.B  #14,D0          
0000425E  4E4F                    6812mm         TRAP    #15
00004260                          6813mm         ENDM
00004260  6000 04AE               6814m         BRA     COMPLETE_496   
00004264                          6815m         
00004264                          6816m ADRREGPOSTINC_496:   
00004264  BC3C 0001               6817m         CMP.B   #$01, D6
00004268  6700 003C               6818m         BEQ     ADRREGPOSTINCSRC_496   
0000426C                          6819m ADRREGPOSTINCDEST_496: 
0000426C                          6820mm         PRINTLB
0000426C  43F8 00D0               6821mm         LEA     OLB, A1     
00004270  103C 000E               6822mm         MOVE.B  #14,D0          
00004274  4E4F                    6823mm         TRAP    #15
00004276                          6824mm         ENDM
00004276                          6825mm         PRINTANDEST D3  
00004276  3203                    6826mm         MOVE.W  D3, D1
00004278  E949                    6827mm         LSL     #$04, D1 ; BITS 9 TO 11
0000427A  E049                    6828mm         LSR     #$08, D1
0000427C  EA49                    6829mm         LSR     #$05, D1
0000427E  43F8 00CE               6830mm         LEA     OAN, A1     
00004282  103C 000E               6831mm         MOVE.B  #14,D0          
00004286  4E4F                    6832mm         TRAP    #15
00004288  103C 0003               6833mm         MOVE.B  #3,D0          
0000428C  4E4F                    6834mm         TRAP    #15
0000428E                          6835mm         ENDM
0000428E                          6836mm         PRINTRB
0000428E  43F8 00D2               6837mm         LEA     ORB, A1     
00004292  103C 000E               6838mm         MOVE.B  #14,D0          
00004296  4E4F                    6839mm         TRAP    #15
00004298                          6840mm         ENDM
00004298                          6841mm         PRINTPI
00004298  43F8 00D9               6842mm         LEA     OPSTINC, A1     
0000429C  103C 000E               6843mm         MOVE.B  #14,D0          
000042A0  4E4F                    6844mm         TRAP    #15
000042A2                          6845mm         ENDM
000042A2  6000 046C               6846m         BRA     COMPLETE_496  
000042A6                          6847m ADRREGPOSTINCSRC_496:           
000042A6                          6848mm         PRINTLB
000042A6  43F8 00D0               6849mm         LEA     OLB, A1     
000042AA  103C 000E               6850mm         MOVE.B  #14,D0          
000042AE  4E4F                    6851mm         TRAP    #15
000042B0                          6852mm         ENDM
000042B0                          6853mm         PRINTANSRC D3  
000042B0  3203                    6854mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000042B2  E149                    6855mm         LSL     #$08, D1
000042B4  EB49                    6856mm         LSL     #$05, D1
000042B6  E049                    6857mm         LSR     #$08, D1
000042B8  EA49                    6858mm         LSR     #$05, D1
000042BA  43F8 00CE               6859mm         LEA     OAN, A1     
000042BE  103C 000E               6860mm         MOVE.B  #14,D0          
000042C2  4E4F                    6861mm         TRAP    #15
000042C4  103C 0003               6862mm         MOVE.B  #3,D0          
000042C8  4E4F                    6863mm         TRAP    #15
000042CA                          6864mm         ENDM
000042CA                          6865mm         PRINTRB
000042CA  43F8 00D2               6866mm         LEA     ORB, A1     
000042CE  103C 000E               6867mm         MOVE.B  #14,D0          
000042D2  4E4F                    6868mm         TRAP    #15
000042D4                          6869mm         ENDM
000042D4                          6870mm         PRINTPI
000042D4  43F8 00D9               6871mm         LEA     OPSTINC, A1     
000042D8  103C 000E               6872mm         MOVE.B  #14,D0          
000042DC  4E4F                    6873mm         TRAP    #15
000042DE                          6874mm         ENDM
000042DE  6000 0430               6875m         BRA     COMPLETE_496  
000042E2                          6876m ADRREGPREDEC_496: 
000042E2  BC3C 0001               6877m         CMP.B   #$01, D6
000042E6  6700 003C               6878m         BEQ     ADRREGPREDECSRC_496   
000042EA                          6879m ADRREGPREDECDEST_496:
000042EA                          6880mm         PRINTPD  
000042EA  43F8 00D7               6881mm         LEA     OPREDEC, A1     
000042EE  103C 000E               6882mm         MOVE.B  #14,D0          
000042F2  4E4F                    6883mm         TRAP    #15
000042F4                          6884mm         ENDM
000042F4                          6885mm         PRINTLB
000042F4  43F8 00D0               6886mm         LEA     OLB, A1     
000042F8  103C 000E               6887mm         MOVE.B  #14,D0          
000042FC  4E4F                    6888mm         TRAP    #15
000042FE                          6889mm         ENDM
000042FE                          6890mm         PRINTANDEST D3  
000042FE  3203                    6891mm         MOVE.W  D3, D1
00004300  E949                    6892mm         LSL     #$04, D1 ; BITS 9 TO 11
00004302  E049                    6893mm         LSR     #$08, D1
00004304  EA49                    6894mm         LSR     #$05, D1
00004306  43F8 00CE               6895mm         LEA     OAN, A1     
0000430A  103C 000E               6896mm         MOVE.B  #14,D0          
0000430E  4E4F                    6897mm         TRAP    #15
00004310  103C 0003               6898mm         MOVE.B  #3,D0          
00004314  4E4F                    6899mm         TRAP    #15
00004316                          6900mm         ENDM
00004316                          6901mm         PRINTRB
00004316  43F8 00D2               6902mm         LEA     ORB, A1     
0000431A  103C 000E               6903mm         MOVE.B  #14,D0          
0000431E  4E4F                    6904mm         TRAP    #15
00004320                          6905mm         ENDM
00004320  6000 03EE               6906m         BRA     COMPLETE_496   
00004324                          6907m ADRREGPREDECSRC_496: 
00004324                          6908mm         PRINTPD  
00004324  43F8 00D7               6909mm         LEA     OPREDEC, A1     
00004328  103C 000E               6910mm         MOVE.B  #14,D0          
0000432C  4E4F                    6911mm         TRAP    #15
0000432E                          6912mm         ENDM
0000432E                          6913mm         PRINTLB
0000432E  43F8 00D0               6914mm         LEA     OLB, A1     
00004332  103C 000E               6915mm         MOVE.B  #14,D0          
00004336  4E4F                    6916mm         TRAP    #15
00004338                          6917mm         ENDM
00004338                          6918mm         PRINTANSRC D3  
00004338  3203                    6919mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000433A  E149                    6920mm         LSL     #$08, D1
0000433C  EB49                    6921mm         LSL     #$05, D1
0000433E  E049                    6922mm         LSR     #$08, D1
00004340  EA49                    6923mm         LSR     #$05, D1
00004342  43F8 00CE               6924mm         LEA     OAN, A1     
00004346  103C 000E               6925mm         MOVE.B  #14,D0          
0000434A  4E4F                    6926mm         TRAP    #15
0000434C  103C 0003               6927mm         MOVE.B  #3,D0          
00004350  4E4F                    6928mm         TRAP    #15
00004352                          6929mm         ENDM
00004352                          6930mm         PRINTRB
00004352  43F8 00D2               6931mm         LEA     ORB, A1     
00004356  103C 000E               6932mm         MOVE.B  #14,D0          
0000435A  4E4F                    6933mm         TRAP    #15
0000435C                          6934mm         ENDM
0000435C  6000 03B2               6935m         BRA     COMPLETE_496
00004360                          6936m        
00004360                          6937m ADRABSOLUTE_496:
00004360  BC3C 0001               6938m         CMP.B   #$01, D6
00004364  6600 0018               6939m         BNE     ADRABSOLUTEDST_496 
00004368                          6940m         
00004368  3A03                    6941m         MOVE.W  D3, D5
0000436A  0803 0002               6942m         BTST    #2, D3
0000436E  6600 0024               6943m         BNE     ADRIMMEDIATE_496
00004372  0803 0000               6944m         BTST    #0, D3
00004376  6600 0280               6945m         BNE     ADRABSOLUTEL_496
0000437A  6000 01E6               6946m         BRA     ADRABSOLUTEW_496
0000437E                          6947m ADRABSOLUTEDST_496:
0000437E  3A03                    6948m         MOVE.W  D3, D5
00004380  0803 000B               6949m         BTST    #$B, D3
00004384  6600 000E               6950m         BNE     ADRIMMEDIATE_496
00004388  0803 0009               6951m         BTST    #$09, D3
0000438C  6600 026A               6952m         BNE     ADRABSOLUTEL_496
00004390  6000 01D0               6953m         BRA     ADRABSOLUTEW_496
00004394                          6954m ADRIMMEDIATE_496:
00004394  BE3C 0001               6955m         CMP.B   #1, D7
00004398  6700 00A2               6956m         BEQ     ADRIMMEDIATEL_496
0000439C                          6957m ADRIMMEDIATEW_496:
0000439C  361A                    6958m         MOVE.W  (A2)+, D3
0000439E                          6959mm         PRINTHASH
0000439E  103C 0006               6960mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000043A2  323C 0023               6961mm         MOVE.W  #35, D1     ; AN = SIGN
000043A6  4E4F                    6962mm         TRAP    #15         ; OUTPUT = SIGN
000043A8                          6963mm         ENDM
000043A8                          6964mm         PRINTSIGN
000043A8  103C 0006               6965mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000043AC  323C 0024               6966mm         MOVE.W  #36, D1     ; AN = SIGN
000043B0  4E4F                    6967mm         TRAP    #15         ; OUTPUT = SIGN
000043B2                          6968mm         ENDM
000043B2                          6969mm         ADROUT
000043B2  103C 0006               6970mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000043B6  3212                    6971mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043B8  E049                    6972mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043BA  E849                    6973mm         LSR.W   #4, D1      
000043BC                          6974mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043BC  0C01 0009               6975mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043C0  6E00 000A               6976mmm         BGT     ALPHA_526
000043C4  0601 0030               6977mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043C8  6000 0006               6978mmm         BRA     DONE_526
000043CC  0601 0037               6979mmm ALPHA_526: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043D0  4E71                    6980mmm DONE_526: NOP
000043D2                          6981mmm         ENDM
000043D2  4E4F                    6982mm         TRAP    #15         ; EXECUTE OUTPUT
000043D4                          6983mm         
000043D4  3212                    6984mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043D6  E949                    6985mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043D8  E049                    6986mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043DA  E849                    6987mm         LSR.W   #4, D1      
000043DC                          6988mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043DC  0C01 0009               6989mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043E0  6E00 000A               6990mmm         BGT     ALPHA_527
000043E4  0601 0030               6991mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043E8  6000 0006               6992mmm         BRA     DONE_527
000043EC  0601 0037               6993mmm ALPHA_527: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043F0  4E71                    6994mmm DONE_527: NOP
000043F2                          6995mmm         ENDM
000043F2  4E4F                    6996mm         TRAP    #15         ; EXECUTE OUTPUT
000043F4                          6997mm         
000043F4  3212                    6998mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043F6  E149                    6999mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043F8  E049                    7000mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043FA  E849                    7001mm         LSR.W   #4, D1      
000043FC                          7002mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043FC  0C01 0009               7003mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004400  6E00 000A               7004mmm         BGT     ALPHA_528
00004404  0601 0030               7005mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004408  6000 0006               7006mmm         BRA     DONE_528
0000440C  0601 0037               7007mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004410  4E71                    7008mmm DONE_528: NOP
00004412                          7009mmm         ENDM
00004412  4E4F                    7010mm         TRAP    #15         ; EXECUTE OUTPUT
00004414                          7011mm         
00004414  3212                    7012mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004416  E149                    7013mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004418  E949                    7014mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000441A  E049                    7015mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000441C  E849                    7016mm         LSR.W   #4, D1      
0000441E                          7017mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000441E  0C01 0009               7018mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004422  6E00 000A               7019mmm         BGT     ALPHA_529
00004426  0601 0030               7020mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000442A  6000 0006               7021mmm         BRA     DONE_529
0000442E  0601 0037               7022mmm ALPHA_529: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004432  4E71                    7023mmm DONE_529: NOP
00004434                          7024mmm         ENDM
00004434  4E4F                    7025mm         TRAP    #15         ; EXECUTE OUTPUT   
00004436                          7026mm         ENDM     
00004436  3605                    7027m         MOVE.W  D5, D3
00004438  6000 02D6               7028m         BRA     COMPLETE_496
0000443C                          7029m ADRIMMEDIATEL_496:
0000443C  361A                    7030m         MOVE.W  (A2)+, D3
0000443E                          7031mm         PRINTHASH
0000443E  103C 0006               7032mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004442  323C 0023               7033mm         MOVE.W  #35, D1     ; AN = SIGN
00004446  4E4F                    7034mm         TRAP    #15         ; OUTPUT = SIGN
00004448                          7035mm         ENDM
00004448                          7036mm         PRINTSIGN
00004448  103C 0006               7037mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000444C  323C 0024               7038mm         MOVE.W  #36, D1     ; AN = SIGN
00004450  4E4F                    7039mm         TRAP    #15         ; OUTPUT = SIGN
00004452                          7040mm         ENDM
00004452                          7041mm         ADROUT 
00004452  103C 0006               7042mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004456  3212                    7043mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004458  E049                    7044mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000445A  E849                    7045mm         LSR.W   #4, D1      
0000445C                          7046mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000445C  0C01 0009               7047mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004460  6E00 000A               7048mmm         BGT     ALPHA_533
00004464  0601 0030               7049mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004468  6000 0006               7050mmm         BRA     DONE_533
0000446C  0601 0037               7051mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004470  4E71                    7052mmm DONE_533: NOP
00004472                          7053mmm         ENDM
00004472  4E4F                    7054mm         TRAP    #15         ; EXECUTE OUTPUT
00004474                          7055mm         
00004474  3212                    7056mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004476  E949                    7057mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004478  E049                    7058mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000447A  E849                    7059mm         LSR.W   #4, D1      
0000447C                          7060mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000447C  0C01 0009               7061mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004480  6E00 000A               7062mmm         BGT     ALPHA_534
00004484  0601 0030               7063mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004488  6000 0006               7064mmm         BRA     DONE_534
0000448C  0601 0037               7065mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004490  4E71                    7066mmm DONE_534: NOP
00004492                          7067mmm         ENDM
00004492  4E4F                    7068mm         TRAP    #15         ; EXECUTE OUTPUT
00004494                          7069mm         
00004494  3212                    7070mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004496  E149                    7071mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004498  E049                    7072mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449A  E849                    7073mm         LSR.W   #4, D1      
0000449C                          7074mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449C  0C01 0009               7075mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A0  6E00 000A               7076mmm         BGT     ALPHA_535
000044A4  0601 0030               7077mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044A8  6000 0006               7078mmm         BRA     DONE_535
000044AC  0601 0037               7079mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B0  4E71                    7080mmm DONE_535: NOP
000044B2                          7081mmm         ENDM
000044B2  4E4F                    7082mm         TRAP    #15         ; EXECUTE OUTPUT
000044B4                          7083mm         
000044B4  3212                    7084mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044B6  E149                    7085mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044B8  E949                    7086mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044BA  E049                    7087mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BC  E849                    7088mm         LSR.W   #4, D1      
000044BE                          7089mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044BE  0C01 0009               7090mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C2  6E00 000A               7091mmm         BGT     ALPHA_536
000044C6  0601 0030               7092mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CA  6000 0006               7093mmm         BRA     DONE_536
000044CE  0601 0037               7094mmm ALPHA_536: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D2  4E71                    7095mmm DONE_536: NOP
000044D4                          7096mmm         ENDM
000044D4  4E4F                    7097mm         TRAP    #15         ; EXECUTE OUTPUT   
000044D6                          7098mm         ENDM     
000044D6  361A                    7099m         MOVE.W  (A2)+, D3
000044D8                          7100mm         ADROUT
000044D8  103C 0006               7101mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044DC  3212                    7102mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044DE  E049                    7103mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044E0  E849                    7104mm         LSR.W   #4, D1      
000044E2                          7105mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044E2  0C01 0009               7106mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044E6  6E00 000A               7107mmm         BGT     ALPHA_538
000044EA  0601 0030               7108mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044EE  6000 0006               7109mmm         BRA     DONE_538
000044F2  0601 0037               7110mmm ALPHA_538: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044F6  4E71                    7111mmm DONE_538: NOP
000044F8                          7112mmm         ENDM
000044F8  4E4F                    7113mm         TRAP    #15         ; EXECUTE OUTPUT
000044FA                          7114mm         
000044FA  3212                    7115mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044FC  E949                    7116mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000044FE  E049                    7117mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004500  E849                    7118mm         LSR.W   #4, D1      
00004502                          7119mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004502  0C01 0009               7120mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004506  6E00 000A               7121mmm         BGT     ALPHA_539
0000450A  0601 0030               7122mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000450E  6000 0006               7123mmm         BRA     DONE_539
00004512  0601 0037               7124mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004516  4E71                    7125mmm DONE_539: NOP
00004518                          7126mmm         ENDM
00004518  4E4F                    7127mm         TRAP    #15         ; EXECUTE OUTPUT
0000451A                          7128mm         
0000451A  3212                    7129mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000451C  E149                    7130mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000451E  E049                    7131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004520  E849                    7132mm         LSR.W   #4, D1      
00004522                          7133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004522  0C01 0009               7134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004526  6E00 000A               7135mmm         BGT     ALPHA_540
0000452A  0601 0030               7136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000452E  6000 0006               7137mmm         BRA     DONE_540
00004532  0601 0037               7138mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004536  4E71                    7139mmm DONE_540: NOP
00004538                          7140mmm         ENDM
00004538  4E4F                    7141mm         TRAP    #15         ; EXECUTE OUTPUT
0000453A                          7142mm         
0000453A  3212                    7143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000453C  E149                    7144mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000453E  E949                    7145mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004540  E049                    7146mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004542  E849                    7147mm         LSR.W   #4, D1      
00004544                          7148mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004544  0C01 0009               7149mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004548  6E00 000A               7150mmm         BGT     ALPHA_541
0000454C  0601 0030               7151mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004550  6000 0006               7152mmm         BRA     DONE_541
00004554  0601 0037               7153mmm ALPHA_541: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004558  4E71                    7154mmm DONE_541: NOP
0000455A                          7155mmm         ENDM
0000455A  4E4F                    7156mm         TRAP    #15         ; EXECUTE OUTPUT   
0000455C                          7157mm         ENDM     
0000455C  3605                    7158m         MOVE.W  D5, D3
0000455E  6000 01B0               7159m         BRA     COMPLETE_496 
00004562                          7160m ADRABSOLUTEW_496:     
00004562  361A                    7161m         MOVE.W  (A2)+, D3
00004564                          7162mm         PRINTSIGN
00004564  103C 0006               7163mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004568  323C 0024               7164mm         MOVE.W  #36, D1     ; AN = SIGN
0000456C  4E4F                    7165mm         TRAP    #15         ; OUTPUT = SIGN
0000456E                          7166mm         ENDM
0000456E                          7167mm         ADROUT
0000456E  103C 0006               7168mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004572  3212                    7169mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004574  E049                    7170mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004576  E849                    7171mm         LSR.W   #4, D1      
00004578                          7172mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004578  0C01 0009               7173mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000457C  6E00 000A               7174mmm         BGT     ALPHA_544
00004580  0601 0030               7175mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004584  6000 0006               7176mmm         BRA     DONE_544
00004588  0601 0037               7177mmm ALPHA_544: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000458C  4E71                    7178mmm DONE_544: NOP
0000458E                          7179mmm         ENDM
0000458E  4E4F                    7180mm         TRAP    #15         ; EXECUTE OUTPUT
00004590                          7181mm         
00004590  3212                    7182mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004592  E949                    7183mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004594  E049                    7184mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004596  E849                    7185mm         LSR.W   #4, D1      
00004598                          7186mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004598  0C01 0009               7187mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000459C  6E00 000A               7188mmm         BGT     ALPHA_545
000045A0  0601 0030               7189mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045A4  6000 0006               7190mmm         BRA     DONE_545
000045A8  0601 0037               7191mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045AC  4E71                    7192mmm DONE_545: NOP
000045AE                          7193mmm         ENDM
000045AE  4E4F                    7194mm         TRAP    #15         ; EXECUTE OUTPUT
000045B0                          7195mm         
000045B0  3212                    7196mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045B2  E149                    7197mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045B4  E049                    7198mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B6  E849                    7199mm         LSR.W   #4, D1      
000045B8                          7200mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B8  0C01 0009               7201mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045BC  6E00 000A               7202mmm         BGT     ALPHA_546
000045C0  0601 0030               7203mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045C4  6000 0006               7204mmm         BRA     DONE_546
000045C8  0601 0037               7205mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045CC  4E71                    7206mmm DONE_546: NOP
000045CE                          7207mmm         ENDM
000045CE  4E4F                    7208mm         TRAP    #15         ; EXECUTE OUTPUT
000045D0                          7209mm         
000045D0  3212                    7210mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045D2  E149                    7211mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045D4  E949                    7212mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045D6  E049                    7213mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D8  E849                    7214mm         LSR.W   #4, D1      
000045DA                          7215mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045DA  0C01 0009               7216mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045DE  6E00 000A               7217mmm         BGT     ALPHA_547
000045E2  0601 0030               7218mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045E6  6000 0006               7219mmm         BRA     DONE_547
000045EA  0601 0037               7220mmm ALPHA_547: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045EE  4E71                    7221mmm DONE_547: NOP
000045F0                          7222mmm         ENDM
000045F0  4E4F                    7223mm         TRAP    #15         ; EXECUTE OUTPUT   
000045F2                          7224mm         ENDM     
000045F2  3605                    7225m         MOVE.W  D5, D3
000045F4  6000 011A               7226m         BRA     COMPLETE_496  
000045F8                          7227m ADRABSOLUTEL_496:  
000045F8  361A                    7228m         MOVE.W  (A2)+, D3
000045FA                          7229mm         PRINTSIGN
000045FA  103C 0006               7230mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000045FE  323C 0024               7231mm         MOVE.W  #36, D1     ; AN = SIGN
00004602  4E4F                    7232mm         TRAP    #15         ; OUTPUT = SIGN
00004604                          7233mm         ENDM
00004604                          7234mm         ADROUT 
00004604  103C 0006               7235mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004608  3212                    7236mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000460A  E049                    7237mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000460C  E849                    7238mm         LSR.W   #4, D1      
0000460E                          7239mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000460E  0C01 0009               7240mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004612  6E00 000A               7241mmm         BGT     ALPHA_550
00004616  0601 0030               7242mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000461A  6000 0006               7243mmm         BRA     DONE_550
0000461E  0601 0037               7244mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004622  4E71                    7245mmm DONE_550: NOP
00004624                          7246mmm         ENDM
00004624  4E4F                    7247mm         TRAP    #15         ; EXECUTE OUTPUT
00004626                          7248mm         
00004626  3212                    7249mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004628  E949                    7250mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000462A  E049                    7251mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000462C  E849                    7252mm         LSR.W   #4, D1      
0000462E                          7253mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000462E  0C01 0009               7254mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004632  6E00 000A               7255mmm         BGT     ALPHA_551
00004636  0601 0030               7256mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000463A  6000 0006               7257mmm         BRA     DONE_551
0000463E  0601 0037               7258mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004642  4E71                    7259mmm DONE_551: NOP
00004644                          7260mmm         ENDM
00004644  4E4F                    7261mm         TRAP    #15         ; EXECUTE OUTPUT
00004646                          7262mm         
00004646  3212                    7263mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004648  E149                    7264mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000464A  E049                    7265mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000464C  E849                    7266mm         LSR.W   #4, D1      
0000464E                          7267mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000464E  0C01 0009               7268mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004652  6E00 000A               7269mmm         BGT     ALPHA_552
00004656  0601 0030               7270mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000465A  6000 0006               7271mmm         BRA     DONE_552
0000465E  0601 0037               7272mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004662  4E71                    7273mmm DONE_552: NOP
00004664                          7274mmm         ENDM
00004664  4E4F                    7275mm         TRAP    #15         ; EXECUTE OUTPUT
00004666                          7276mm         
00004666  3212                    7277mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004668  E149                    7278mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000466A  E949                    7279mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000466C  E049                    7280mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000466E  E849                    7281mm         LSR.W   #4, D1      
00004670                          7282mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004670  0C01 0009               7283mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004674  6E00 000A               7284mmm         BGT     ALPHA_553
00004678  0601 0030               7285mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000467C  6000 0006               7286mmm         BRA     DONE_553
00004680  0601 0037               7287mmm ALPHA_553: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004684  4E71                    7288mmm DONE_553: NOP
00004686                          7289mmm         ENDM
00004686  4E4F                    7290mm         TRAP    #15         ; EXECUTE OUTPUT   
00004688                          7291mm         ENDM     
00004688  361A                    7292m         MOVE.W  (A2)+, D3
0000468A                          7293mm         ADROUT
0000468A  103C 0006               7294mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000468E  3212                    7295mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004690  E049                    7296mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004692  E849                    7297mm         LSR.W   #4, D1      
00004694                          7298mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004694  0C01 0009               7299mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004698  6E00 000A               7300mmm         BGT     ALPHA_555
0000469C  0601 0030               7301mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046A0  6000 0006               7302mmm         BRA     DONE_555
000046A4  0601 0037               7303mmm ALPHA_555: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046A8  4E71                    7304mmm DONE_555: NOP
000046AA                          7305mmm         ENDM
000046AA  4E4F                    7306mm         TRAP    #15         ; EXECUTE OUTPUT
000046AC                          7307mm         
000046AC  3212                    7308mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046AE  E949                    7309mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000046B0  E049                    7310mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046B2  E849                    7311mm         LSR.W   #4, D1      
000046B4                          7312mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046B4  0C01 0009               7313mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046B8  6E00 000A               7314mmm         BGT     ALPHA_556
000046BC  0601 0030               7315mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046C0  6000 0006               7316mmm         BRA     DONE_556
000046C4  0601 0037               7317mmm ALPHA_556: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046C8  4E71                    7318mmm DONE_556: NOP
000046CA                          7319mmm         ENDM
000046CA  4E4F                    7320mm         TRAP    #15         ; EXECUTE OUTPUT
000046CC                          7321mm         
000046CC  3212                    7322mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046CE  E149                    7323mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046D0  E049                    7324mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046D2  E849                    7325mm         LSR.W   #4, D1      
000046D4                          7326mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046D4  0C01 0009               7327mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046D8  6E00 000A               7328mmm         BGT     ALPHA_557
000046DC  0601 0030               7329mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046E0  6000 0006               7330mmm         BRA     DONE_557
000046E4  0601 0037               7331mmm ALPHA_557: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046E8  4E71                    7332mmm DONE_557: NOP
000046EA                          7333mmm         ENDM
000046EA  4E4F                    7334mm         TRAP    #15         ; EXECUTE OUTPUT
000046EC                          7335mm         
000046EC  3212                    7336mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046EE  E149                    7337mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046F0  E949                    7338mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000046F2  E049                    7339mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046F4  E849                    7340mm         LSR.W   #4, D1      
000046F6                          7341mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046F6  0C01 0009               7342mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046FA  6E00 000A               7343mmm         BGT     ALPHA_558
000046FE  0601 0030               7344mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004702  6000 0006               7345mmm         BRA     DONE_558
00004706  0601 0037               7346mmm ALPHA_558: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000470A  4E71                    7347mmm DONE_558: NOP
0000470C                          7348mmm         ENDM
0000470C  4E4F                    7349mm         TRAP    #15         ; EXECUTE OUTPUT   
0000470E                          7350mm         ENDM     
0000470E  3605                    7351m         MOVE.W  D5, D3
00004710                          7352m 
00004710                          7353m COMPLETE_496:  ; OPCODE HAS BEEN VERIFIED
00004710                          7354m         ENDM
00004710                          7355m         printComma
00004710  43F8 00D4               7356m         LEA     OCOMMA, A1     
00004714  103C 000E               7357m         MOVE.B  #14,D0          
00004718  4E4F                    7358m         TRAP    #15
0000471A                          7359m         ENDM
0000471A                          7360m         printDnDest     D3
0000471A  3203                    7361m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000471C  E949                    7362m         LSL     #$04, D1
0000471E  E049                    7363m         LSR     #$08, D1
00004720  EA49                    7364m         LSR     #$05, D1
00004722  43F8 00CC               7365m         LEA     ODN, A1     
00004726  103C 000E               7366m         MOVE.B  #14,D0          
0000472A  4E4F                    7367m         TRAP    #15
0000472C  103C 0003               7368m         MOVE.B  #3,D0          
00004730  4E4F                    7369m         TRAP    #15
00004732                          7370m         ENDM
00004732  4E75                    7371          RTS                 ; Return from decodeDIVU subroutine
00004734                          7372  
00004734                          7373  
00004734                          7374  ; ------------------------------------------------------------
00004734                          7375  ; 8. "decodeLEA" subroutine
00004734                          7376  ; Gary
00004734                          7377  ;
00004734                          7378  ; Decodes lea by verifying, printing in a formatted form,
00004734                          7379  ; then decoding adressing modes and outputing them in formatted form.
00004734                          7380  ; ------------------------------------------------------------
00004734                          7381  decodeLEA:
00004734                          7382m         verifyOpcode    pLEA, (A2)
00004734  43F8 0175               7383m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004738  3612                    7384m         MOVE.W  (A2), D3      ; INPUT VALUE
0000473A  123C 000F               7385m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000473E                          7386m         
0000473E                          7387m LOOP_561: 
0000473E  0C11 0030               7388m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004742  6700 000E               7389m         BEQ     CHECKFOR0_561
00004746  0C11 0031               7390m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000474A  6700 0010               7391m         BEQ     CHECKFOR1_561
0000474E  6000 0012               7392m         BRA     NEXT_561      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004752                          7393m         
00004752                          7394m CHECKFOR0_561: 
00004752  0303                    7395m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004754  6600 304C               7396m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004758  6000 0008               7397m         BRA     NEXT_561
0000475C                          7398m 
0000475C                          7399m CHECKFOR1_561:
0000475C  0303                    7400m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000475E  6700 3042               7401m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004762                          7402m 
00004762                          7403m NEXT_561: 
00004762  B23C 0000               7404m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004766  6700 0008               7405m         BEQ     COMPLETE_561  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000476A  5301                    7406m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000476C  1819                    7407m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000476E  60CE                    7408m         BRA     LOOP_561      ; BEGIN LOOP AGAIN
00004770                          7409m 
00004770                          7410m COMPLETE_561:  ; OPCODE HAS BEEN VERIFIED
00004770                          7411m         ENDM
00004770  43F8 008C               7412          LEA     oLEA, A1     
00004774  103C 000E               7413          MOVE.B  #14,D0          
00004778  4E4F                    7414          TRAP    #15
0000477A  43F8 00DD               7415          LEA     oBlank, A1     
0000477E  103C 000E               7416          MOVE.B  #14,D0          
00004782  4E4F                    7417          TRAP    #15
00004784  3A12                    7418          MOVE.W  (A2), D5
00004786                          7419m         prepareAdrMode  #$1, (A2)
00004786  3C3C 0001               7420m         MOVE.W  #$1, D6      ; INPUT VALUE
0000478A  3212                    7421m         MOVE.W  (A2), D1
0000478C  BC3C 0001               7422m         CMP.B   #$01, D6
00004790  6700 000C               7423m         BEQ     ADRSOURCE_562    
00004794                          7424m ADRDEST_562:
00004794  EF49                    7425m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004796  E049                    7426m         LSR     #$08, D1
00004798  EA49                    7427m         LSR     #$05, D1
0000479A  6000 000A               7428m         BRA     COMPLETE_562 
0000479E                          7429m ADRSOURCE_562:                
0000479E  E149                    7430m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000047A0  E549                    7431m         LSL     #$02, D1
000047A2  E049                    7432m         LSR     #$08, D1
000047A4  EA49                    7433m         LSR     #$05, D1
000047A6                          7434m COMPLETE_562:  ; OPCODE HAS BEEN VERIFIED
000047A6                          7435m         ENDM        
000047A6                          7436m         decodeAdrMode   (A2), D1
000047A6  3612                    7437m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000047A8  3201                    7438m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000047AA                          7439m 
000047AA  B23C 0001               7440m         CMP.B   #$01, D1
000047AE  6700 0066               7441m         BEQ     ADRREGDIRECT_563    
000047B2  B23C 0002               7442m         CMP.B   #$02, D1
000047B6  6700 00A0               7443m         BEQ     ADRREGINDIRECT_563  
000047BA  B23C 0003               7444m         CMP.B   #$03, D1
000047BE  6700 0102               7445m         BEQ     ADRREGPOSTINC_563  
000047C2  B23C 0004               7446m         CMP.B   #$04, D1
000047C6  6700 0178               7447m         BEQ     ADRREGPREDEC_563
000047CA  B23C 0007               7448m         CMP.B   #$07, D1
000047CE  6700 01EE               7449m         BEQ     ADRABSOLUTE_563    
000047D2                          7450m         
000047D2                          7451m DATAREGDIRECT_563: 
000047D2  BC3C 0001               7452m         CMP.B   #$01, D6
000047D6  6700 001E               7453m         BEQ     DATAREGDIRECTSRC_563   
000047DA                          7454m DATAREGDIRECTDEST_563: 
000047DA                          7455mm         PRINTDNDEST D3 
000047DA  3203                    7456mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000047DC  E949                    7457mm         LSL     #$04, D1
000047DE  E049                    7458mm         LSR     #$08, D1
000047E0  EA49                    7459mm         LSR     #$05, D1
000047E2  43F8 00CC               7460mm         LEA     ODN, A1     
000047E6  103C 000E               7461mm         MOVE.B  #14,D0          
000047EA  4E4F                    7462mm         TRAP    #15
000047EC  103C 0003               7463mm         MOVE.B  #3,D0          
000047F0  4E4F                    7464mm         TRAP    #15
000047F2                          7465mm         ENDM
000047F2  6000 057A               7466m         BRA     COMPLETE_563 
000047F6                          7467m DATAREGDIRECTSRC_563: 
000047F6                          7468mm         PRINTDNSRC D3 
000047F6  4281                    7469mm         CLR.L   D1
000047F8  3203                    7470mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047FA  E149                    7471mm         LSL     #$08, D1
000047FC  EB49                    7472mm         LSL     #$05, D1
000047FE  E049                    7473mm         LSR     #$08, D1
00004800  EA49                    7474mm         LSR     #$05, D1
00004802  43F8 00CC               7475mm         LEA     ODN, A1     
00004806  103C 000E               7476mm         MOVE.B  #14,D0          
0000480A  4E4F                    7477mm         TRAP    #15
0000480C  103C 0003               7478mm         MOVE.B  #3,D0          
00004810  4E4F                    7479mm         TRAP    #15
00004812                          7480mm         ENDM
00004812  6000 055A               7481m         BRA     COMPLETE_563   
00004816                          7482m         
00004816                          7483m ADRREGDIRECT_563: 
00004816  BC3C 0001               7484m         CMP.B   #$01, D6
0000481A  6700 001E               7485m         BEQ     ADRREGDIRECTSRC_563   
0000481E                          7486m ADRREGDIRECTDEST_563:
0000481E                          7487mm         PRINTANDEST D3
0000481E  3203                    7488mm         MOVE.W  D3, D1
00004820  E949                    7489mm         LSL     #$04, D1 ; BITS 9 TO 11
00004822  E049                    7490mm         LSR     #$08, D1
00004824  EA49                    7491mm         LSR     #$05, D1
00004826  43F8 00CE               7492mm         LEA     OAN, A1     
0000482A  103C 000E               7493mm         MOVE.B  #14,D0          
0000482E  4E4F                    7494mm         TRAP    #15
00004830  103C 0003               7495mm         MOVE.B  #3,D0          
00004834  4E4F                    7496mm         TRAP    #15
00004836                          7497mm         ENDM
00004836  6000 0536               7498m         BRA     COMPLETE_563   
0000483A                          7499m ADRREGDIRECTSRC_563:
0000483A                          7500mm         PRINTANSRC D3
0000483A  3203                    7501mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000483C  E149                    7502mm         LSL     #$08, D1
0000483E  EB49                    7503mm         LSL     #$05, D1
00004840  E049                    7504mm         LSR     #$08, D1
00004842  EA49                    7505mm         LSR     #$05, D1
00004844  43F8 00CE               7506mm         LEA     OAN, A1     
00004848  103C 000E               7507mm         MOVE.B  #14,D0          
0000484C  4E4F                    7508mm         TRAP    #15
0000484E  103C 0003               7509mm         MOVE.B  #3,D0          
00004852  4E4F                    7510mm         TRAP    #15
00004854                          7511mm         ENDM
00004854  6000 0518               7512m         BRA     COMPLETE_563   
00004858                          7513m        
00004858                          7514m ADRREGINDIRECT_563:   
00004858  BC3C 0001               7515m         CMP.B   #$01, D6
0000485C  6700 0032               7516m         BEQ     ADRREGINDIRECTSRC_563   
00004860                          7517m ADRREGINDIRECTDEST_563:
00004860                          7518mm         PRINTLB
00004860  43F8 00D0               7519mm         LEA     OLB, A1     
00004864  103C 000E               7520mm         MOVE.B  #14,D0          
00004868  4E4F                    7521mm         TRAP    #15
0000486A                          7522mm         ENDM
0000486A                          7523mm         PRINTANDEST D3  
0000486A  3203                    7524mm         MOVE.W  D3, D1
0000486C  E949                    7525mm         LSL     #$04, D1 ; BITS 9 TO 11
0000486E  E049                    7526mm         LSR     #$08, D1
00004870  EA49                    7527mm         LSR     #$05, D1
00004872  43F8 00CE               7528mm         LEA     OAN, A1     
00004876  103C 000E               7529mm         MOVE.B  #14,D0          
0000487A  4E4F                    7530mm         TRAP    #15
0000487C  103C 0003               7531mm         MOVE.B  #3,D0          
00004880  4E4F                    7532mm         TRAP    #15
00004882                          7533mm         ENDM
00004882                          7534mm         PRINTRB
00004882  43F8 00D2               7535mm         LEA     ORB, A1     
00004886  103C 000E               7536mm         MOVE.B  #14,D0          
0000488A  4E4F                    7537mm         TRAP    #15
0000488C                          7538mm         ENDM
0000488C  6000 04E0               7539m         BRA     COMPLETE_563     
00004890                          7540m ADRREGINDIRECTSRC_563:   
00004890                          7541mm         PRINTLB
00004890  43F8 00D0               7542mm         LEA     OLB, A1     
00004894  103C 000E               7543mm         MOVE.B  #14,D0          
00004898  4E4F                    7544mm         TRAP    #15
0000489A                          7545mm         ENDM
0000489A                          7546mm         PRINTANSRC D3  
0000489A  3203                    7547mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000489C  E149                    7548mm         LSL     #$08, D1
0000489E  EB49                    7549mm         LSL     #$05, D1
000048A0  E049                    7550mm         LSR     #$08, D1
000048A2  EA49                    7551mm         LSR     #$05, D1
000048A4  43F8 00CE               7552mm         LEA     OAN, A1     
000048A8  103C 000E               7553mm         MOVE.B  #14,D0          
000048AC  4E4F                    7554mm         TRAP    #15
000048AE  103C 0003               7555mm         MOVE.B  #3,D0          
000048B2  4E4F                    7556mm         TRAP    #15
000048B4                          7557mm         ENDM
000048B4                          7558mm         PRINTRB
000048B4  43F8 00D2               7559mm         LEA     ORB, A1     
000048B8  103C 000E               7560mm         MOVE.B  #14,D0          
000048BC  4E4F                    7561mm         TRAP    #15
000048BE                          7562mm         ENDM
000048BE  6000 04AE               7563m         BRA     COMPLETE_563   
000048C2                          7564m         
000048C2                          7565m ADRREGPOSTINC_563:   
000048C2  BC3C 0001               7566m         CMP.B   #$01, D6
000048C6  6700 003C               7567m         BEQ     ADRREGPOSTINCSRC_563   
000048CA                          7568m ADRREGPOSTINCDEST_563: 
000048CA                          7569mm         PRINTLB
000048CA  43F8 00D0               7570mm         LEA     OLB, A1     
000048CE  103C 000E               7571mm         MOVE.B  #14,D0          
000048D2  4E4F                    7572mm         TRAP    #15
000048D4                          7573mm         ENDM
000048D4                          7574mm         PRINTANDEST D3  
000048D4  3203                    7575mm         MOVE.W  D3, D1
000048D6  E949                    7576mm         LSL     #$04, D1 ; BITS 9 TO 11
000048D8  E049                    7577mm         LSR     #$08, D1
000048DA  EA49                    7578mm         LSR     #$05, D1
000048DC  43F8 00CE               7579mm         LEA     OAN, A1     
000048E0  103C 000E               7580mm         MOVE.B  #14,D0          
000048E4  4E4F                    7581mm         TRAP    #15
000048E6  103C 0003               7582mm         MOVE.B  #3,D0          
000048EA  4E4F                    7583mm         TRAP    #15
000048EC                          7584mm         ENDM
000048EC                          7585mm         PRINTRB
000048EC  43F8 00D2               7586mm         LEA     ORB, A1     
000048F0  103C 000E               7587mm         MOVE.B  #14,D0          
000048F4  4E4F                    7588mm         TRAP    #15
000048F6                          7589mm         ENDM
000048F6                          7590mm         PRINTPI
000048F6  43F8 00D9               7591mm         LEA     OPSTINC, A1     
000048FA  103C 000E               7592mm         MOVE.B  #14,D0          
000048FE  4E4F                    7593mm         TRAP    #15
00004900                          7594mm         ENDM
00004900  6000 046C               7595m         BRA     COMPLETE_563  
00004904                          7596m ADRREGPOSTINCSRC_563:           
00004904                          7597mm         PRINTLB
00004904  43F8 00D0               7598mm         LEA     OLB, A1     
00004908  103C 000E               7599mm         MOVE.B  #14,D0          
0000490C  4E4F                    7600mm         TRAP    #15
0000490E                          7601mm         ENDM
0000490E                          7602mm         PRINTANSRC D3  
0000490E  3203                    7603mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004910  E149                    7604mm         LSL     #$08, D1
00004912  EB49                    7605mm         LSL     #$05, D1
00004914  E049                    7606mm         LSR     #$08, D1
00004916  EA49                    7607mm         LSR     #$05, D1
00004918  43F8 00CE               7608mm         LEA     OAN, A1     
0000491C  103C 000E               7609mm         MOVE.B  #14,D0          
00004920  4E4F                    7610mm         TRAP    #15
00004922  103C 0003               7611mm         MOVE.B  #3,D0          
00004926  4E4F                    7612mm         TRAP    #15
00004928                          7613mm         ENDM
00004928                          7614mm         PRINTRB
00004928  43F8 00D2               7615mm         LEA     ORB, A1     
0000492C  103C 000E               7616mm         MOVE.B  #14,D0          
00004930  4E4F                    7617mm         TRAP    #15
00004932                          7618mm         ENDM
00004932                          7619mm         PRINTPI
00004932  43F8 00D9               7620mm         LEA     OPSTINC, A1     
00004936  103C 000E               7621mm         MOVE.B  #14,D0          
0000493A  4E4F                    7622mm         TRAP    #15
0000493C                          7623mm         ENDM
0000493C  6000 0430               7624m         BRA     COMPLETE_563  
00004940                          7625m ADRREGPREDEC_563: 
00004940  BC3C 0001               7626m         CMP.B   #$01, D6
00004944  6700 003C               7627m         BEQ     ADRREGPREDECSRC_563   
00004948                          7628m ADRREGPREDECDEST_563:
00004948                          7629mm         PRINTPD  
00004948  43F8 00D7               7630mm         LEA     OPREDEC, A1     
0000494C  103C 000E               7631mm         MOVE.B  #14,D0          
00004950  4E4F                    7632mm         TRAP    #15
00004952                          7633mm         ENDM
00004952                          7634mm         PRINTLB
00004952  43F8 00D0               7635mm         LEA     OLB, A1     
00004956  103C 000E               7636mm         MOVE.B  #14,D0          
0000495A  4E4F                    7637mm         TRAP    #15
0000495C                          7638mm         ENDM
0000495C                          7639mm         PRINTANDEST D3  
0000495C  3203                    7640mm         MOVE.W  D3, D1
0000495E  E949                    7641mm         LSL     #$04, D1 ; BITS 9 TO 11
00004960  E049                    7642mm         LSR     #$08, D1
00004962  EA49                    7643mm         LSR     #$05, D1
00004964  43F8 00CE               7644mm         LEA     OAN, A1     
00004968  103C 000E               7645mm         MOVE.B  #14,D0          
0000496C  4E4F                    7646mm         TRAP    #15
0000496E  103C 0003               7647mm         MOVE.B  #3,D0          
00004972  4E4F                    7648mm         TRAP    #15
00004974                          7649mm         ENDM
00004974                          7650mm         PRINTRB
00004974  43F8 00D2               7651mm         LEA     ORB, A1     
00004978  103C 000E               7652mm         MOVE.B  #14,D0          
0000497C  4E4F                    7653mm         TRAP    #15
0000497E                          7654mm         ENDM
0000497E  6000 03EE               7655m         BRA     COMPLETE_563   
00004982                          7656m ADRREGPREDECSRC_563: 
00004982                          7657mm         PRINTPD  
00004982  43F8 00D7               7658mm         LEA     OPREDEC, A1     
00004986  103C 000E               7659mm         MOVE.B  #14,D0          
0000498A  4E4F                    7660mm         TRAP    #15
0000498C                          7661mm         ENDM
0000498C                          7662mm         PRINTLB
0000498C  43F8 00D0               7663mm         LEA     OLB, A1     
00004990  103C 000E               7664mm         MOVE.B  #14,D0          
00004994  4E4F                    7665mm         TRAP    #15
00004996                          7666mm         ENDM
00004996                          7667mm         PRINTANSRC D3  
00004996  3203                    7668mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004998  E149                    7669mm         LSL     #$08, D1
0000499A  EB49                    7670mm         LSL     #$05, D1
0000499C  E049                    7671mm         LSR     #$08, D1
0000499E  EA49                    7672mm         LSR     #$05, D1
000049A0  43F8 00CE               7673mm         LEA     OAN, A1     
000049A4  103C 000E               7674mm         MOVE.B  #14,D0          
000049A8  4E4F                    7675mm         TRAP    #15
000049AA  103C 0003               7676mm         MOVE.B  #3,D0          
000049AE  4E4F                    7677mm         TRAP    #15
000049B0                          7678mm         ENDM
000049B0                          7679mm         PRINTRB
000049B0  43F8 00D2               7680mm         LEA     ORB, A1     
000049B4  103C 000E               7681mm         MOVE.B  #14,D0          
000049B8  4E4F                    7682mm         TRAP    #15
000049BA                          7683mm         ENDM
000049BA  6000 03B2               7684m         BRA     COMPLETE_563
000049BE                          7685m        
000049BE                          7686m ADRABSOLUTE_563:
000049BE  BC3C 0001               7687m         CMP.B   #$01, D6
000049C2  6600 0018               7688m         BNE     ADRABSOLUTEDST_563 
000049C6                          7689m         
000049C6  3A03                    7690m         MOVE.W  D3, D5
000049C8  0803 0002               7691m         BTST    #2, D3
000049CC  6600 0024               7692m         BNE     ADRIMMEDIATE_563
000049D0  0803 0000               7693m         BTST    #0, D3
000049D4  6600 0280               7694m         BNE     ADRABSOLUTEL_563
000049D8  6000 01E6               7695m         BRA     ADRABSOLUTEW_563
000049DC                          7696m ADRABSOLUTEDST_563:
000049DC  3A03                    7697m         MOVE.W  D3, D5
000049DE  0803 000B               7698m         BTST    #$B, D3
000049E2  6600 000E               7699m         BNE     ADRIMMEDIATE_563
000049E6  0803 0009               7700m         BTST    #$09, D3
000049EA  6600 026A               7701m         BNE     ADRABSOLUTEL_563
000049EE  6000 01D0               7702m         BRA     ADRABSOLUTEW_563
000049F2                          7703m ADRIMMEDIATE_563:
000049F2  BE3C 0001               7704m         CMP.B   #1, D7
000049F6  6700 00A2               7705m         BEQ     ADRIMMEDIATEL_563
000049FA                          7706m ADRIMMEDIATEW_563:
000049FA  361A                    7707m         MOVE.W  (A2)+, D3
000049FC                          7708mm         PRINTHASH
000049FC  103C 0006               7709mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A00  323C 0023               7710mm         MOVE.W  #35, D1     ; AN = SIGN
00004A04  4E4F                    7711mm         TRAP    #15         ; OUTPUT = SIGN
00004A06                          7712mm         ENDM
00004A06                          7713mm         PRINTSIGN
00004A06  103C 0006               7714mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A0A  323C 0024               7715mm         MOVE.W  #36, D1     ; AN = SIGN
00004A0E  4E4F                    7716mm         TRAP    #15         ; OUTPUT = SIGN
00004A10                          7717mm         ENDM
00004A10                          7718mm         ADROUT
00004A10  103C 0006               7719mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A14  3212                    7720mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A16  E049                    7721mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A18  E849                    7722mm         LSR.W   #4, D1      
00004A1A                          7723mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A1A  0C01 0009               7724mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A1E  6E00 000A               7725mmm         BGT     ALPHA_593
00004A22  0601 0030               7726mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A26  6000 0006               7727mmm         BRA     DONE_593
00004A2A  0601 0037               7728mmm ALPHA_593: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A2E  4E71                    7729mmm DONE_593: NOP
00004A30                          7730mmm         ENDM
00004A30  4E4F                    7731mm         TRAP    #15         ; EXECUTE OUTPUT
00004A32                          7732mm         
00004A32  3212                    7733mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A34  E949                    7734mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A36  E049                    7735mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A38  E849                    7736mm         LSR.W   #4, D1      
00004A3A                          7737mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A3A  0C01 0009               7738mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A3E  6E00 000A               7739mmm         BGT     ALPHA_594
00004A42  0601 0030               7740mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A46  6000 0006               7741mmm         BRA     DONE_594
00004A4A  0601 0037               7742mmm ALPHA_594: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A4E  4E71                    7743mmm DONE_594: NOP
00004A50                          7744mmm         ENDM
00004A50  4E4F                    7745mm         TRAP    #15         ; EXECUTE OUTPUT
00004A52                          7746mm         
00004A52  3212                    7747mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A54  E149                    7748mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A56  E049                    7749mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A58  E849                    7750mm         LSR.W   #4, D1      
00004A5A                          7751mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A5A  0C01 0009               7752mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A5E  6E00 000A               7753mmm         BGT     ALPHA_595
00004A62  0601 0030               7754mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A66  6000 0006               7755mmm         BRA     DONE_595
00004A6A  0601 0037               7756mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A6E  4E71                    7757mmm DONE_595: NOP
00004A70                          7758mmm         ENDM
00004A70  4E4F                    7759mm         TRAP    #15         ; EXECUTE OUTPUT
00004A72                          7760mm         
00004A72  3212                    7761mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A74  E149                    7762mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A76  E949                    7763mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A78  E049                    7764mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A7A  E849                    7765mm         LSR.W   #4, D1      
00004A7C                          7766mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A7C  0C01 0009               7767mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A80  6E00 000A               7768mmm         BGT     ALPHA_596
00004A84  0601 0030               7769mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A88  6000 0006               7770mmm         BRA     DONE_596
00004A8C  0601 0037               7771mmm ALPHA_596: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A90  4E71                    7772mmm DONE_596: NOP
00004A92                          7773mmm         ENDM
00004A92  4E4F                    7774mm         TRAP    #15         ; EXECUTE OUTPUT   
00004A94                          7775mm         ENDM     
00004A94  3605                    7776m         MOVE.W  D5, D3
00004A96  6000 02D6               7777m         BRA     COMPLETE_563
00004A9A                          7778m ADRIMMEDIATEL_563:
00004A9A  361A                    7779m         MOVE.W  (A2)+, D3
00004A9C                          7780mm         PRINTHASH
00004A9C  103C 0006               7781mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004AA0  323C 0023               7782mm         MOVE.W  #35, D1     ; AN = SIGN
00004AA4  4E4F                    7783mm         TRAP    #15         ; OUTPUT = SIGN
00004AA6                          7784mm         ENDM
00004AA6                          7785mm         PRINTSIGN
00004AA6  103C 0006               7786mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004AAA  323C 0024               7787mm         MOVE.W  #36, D1     ; AN = SIGN
00004AAE  4E4F                    7788mm         TRAP    #15         ; OUTPUT = SIGN
00004AB0                          7789mm         ENDM
00004AB0                          7790mm         ADROUT 
00004AB0  103C 0006               7791mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004AB4  3212                    7792mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AB6  E049                    7793mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AB8  E849                    7794mm         LSR.W   #4, D1      
00004ABA                          7795mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004ABA  0C01 0009               7796mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004ABE  6E00 000A               7797mmm         BGT     ALPHA_600
00004AC2  0601 0030               7798mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AC6  6000 0006               7799mmm         BRA     DONE_600
00004ACA  0601 0037               7800mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004ACE  4E71                    7801mmm DONE_600: NOP
00004AD0                          7802mmm         ENDM
00004AD0  4E4F                    7803mm         TRAP    #15         ; EXECUTE OUTPUT
00004AD2                          7804mm         
00004AD2  3212                    7805mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AD4  E949                    7806mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004AD6  E049                    7807mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AD8  E849                    7808mm         LSR.W   #4, D1      
00004ADA                          7809mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004ADA  0C01 0009               7810mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004ADE  6E00 000A               7811mmm         BGT     ALPHA_601
00004AE2  0601 0030               7812mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AE6  6000 0006               7813mmm         BRA     DONE_601
00004AEA  0601 0037               7814mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AEE  4E71                    7815mmm DONE_601: NOP
00004AF0                          7816mmm         ENDM
00004AF0  4E4F                    7817mm         TRAP    #15         ; EXECUTE OUTPUT
00004AF2                          7818mm         
00004AF2  3212                    7819mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AF4  E149                    7820mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AF6  E049                    7821mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AF8  E849                    7822mm         LSR.W   #4, D1      
00004AFA                          7823mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AFA  0C01 0009               7824mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AFE  6E00 000A               7825mmm         BGT     ALPHA_602
00004B02  0601 0030               7826mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B06  6000 0006               7827mmm         BRA     DONE_602
00004B0A  0601 0037               7828mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B0E  4E71                    7829mmm DONE_602: NOP
00004B10                          7830mmm         ENDM
00004B10  4E4F                    7831mm         TRAP    #15         ; EXECUTE OUTPUT
00004B12                          7832mm         
00004B12  3212                    7833mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B14  E149                    7834mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B16  E949                    7835mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B18  E049                    7836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B1A  E849                    7837mm         LSR.W   #4, D1      
00004B1C                          7838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B1C  0C01 0009               7839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B20  6E00 000A               7840mmm         BGT     ALPHA_603
00004B24  0601 0030               7841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B28  6000 0006               7842mmm         BRA     DONE_603
00004B2C  0601 0037               7843mmm ALPHA_603: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B30  4E71                    7844mmm DONE_603: NOP
00004B32                          7845mmm         ENDM
00004B32  4E4F                    7846mm         TRAP    #15         ; EXECUTE OUTPUT   
00004B34                          7847mm         ENDM     
00004B34  361A                    7848m         MOVE.W  (A2)+, D3
00004B36                          7849mm         ADROUT
00004B36  103C 0006               7850mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B3A  3212                    7851mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B3C  E049                    7852mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B3E  E849                    7853mm         LSR.W   #4, D1      
00004B40                          7854mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B40  0C01 0009               7855mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B44  6E00 000A               7856mmm         BGT     ALPHA_605
00004B48  0601 0030               7857mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B4C  6000 0006               7858mmm         BRA     DONE_605
00004B50  0601 0037               7859mmm ALPHA_605: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B54  4E71                    7860mmm DONE_605: NOP
00004B56                          7861mmm         ENDM
00004B56  4E4F                    7862mm         TRAP    #15         ; EXECUTE OUTPUT
00004B58                          7863mm         
00004B58  3212                    7864mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B5A  E949                    7865mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B5C  E049                    7866mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B5E  E849                    7867mm         LSR.W   #4, D1      
00004B60                          7868mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B60  0C01 0009               7869mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B64  6E00 000A               7870mmm         BGT     ALPHA_606
00004B68  0601 0030               7871mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B6C  6000 0006               7872mmm         BRA     DONE_606
00004B70  0601 0037               7873mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B74  4E71                    7874mmm DONE_606: NOP
00004B76                          7875mmm         ENDM
00004B76  4E4F                    7876mm         TRAP    #15         ; EXECUTE OUTPUT
00004B78                          7877mm         
00004B78  3212                    7878mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B7A  E149                    7879mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B7C  E049                    7880mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B7E  E849                    7881mm         LSR.W   #4, D1      
00004B80                          7882mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B80  0C01 0009               7883mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B84  6E00 000A               7884mmm         BGT     ALPHA_607
00004B88  0601 0030               7885mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B8C  6000 0006               7886mmm         BRA     DONE_607
00004B90  0601 0037               7887mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B94  4E71                    7888mmm DONE_607: NOP
00004B96                          7889mmm         ENDM
00004B96  4E4F                    7890mm         TRAP    #15         ; EXECUTE OUTPUT
00004B98                          7891mm         
00004B98  3212                    7892mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B9A  E149                    7893mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B9C  E949                    7894mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B9E  E049                    7895mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BA0  E849                    7896mm         LSR.W   #4, D1      
00004BA2                          7897mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BA2  0C01 0009               7898mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BA6  6E00 000A               7899mmm         BGT     ALPHA_608
00004BAA  0601 0030               7900mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BAE  6000 0006               7901mmm         BRA     DONE_608
00004BB2  0601 0037               7902mmm ALPHA_608: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BB6  4E71                    7903mmm DONE_608: NOP
00004BB8                          7904mmm         ENDM
00004BB8  4E4F                    7905mm         TRAP    #15         ; EXECUTE OUTPUT   
00004BBA                          7906mm         ENDM     
00004BBA  3605                    7907m         MOVE.W  D5, D3
00004BBC  6000 01B0               7908m         BRA     COMPLETE_563 
00004BC0                          7909m ADRABSOLUTEW_563:     
00004BC0  361A                    7910m         MOVE.W  (A2)+, D3
00004BC2                          7911mm         PRINTSIGN
00004BC2  103C 0006               7912mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BC6  323C 0024               7913mm         MOVE.W  #36, D1     ; AN = SIGN
00004BCA  4E4F                    7914mm         TRAP    #15         ; OUTPUT = SIGN
00004BCC                          7915mm         ENDM
00004BCC                          7916mm         ADROUT
00004BCC  103C 0006               7917mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BD0  3212                    7918mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD2  E049                    7919mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD4  E849                    7920mm         LSR.W   #4, D1      
00004BD6                          7921mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD6  0C01 0009               7922mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BDA  6E00 000A               7923mmm         BGT     ALPHA_611
00004BDE  0601 0030               7924mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE2  6000 0006               7925mmm         BRA     DONE_611
00004BE6  0601 0037               7926mmm ALPHA_611: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BEA  4E71                    7927mmm DONE_611: NOP
00004BEC                          7928mmm         ENDM
00004BEC  4E4F                    7929mm         TRAP    #15         ; EXECUTE OUTPUT
00004BEE                          7930mm         
00004BEE  3212                    7931mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF0  E949                    7932mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BF2  E049                    7933mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF4  E849                    7934mm         LSR.W   #4, D1      
00004BF6                          7935mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF6  0C01 0009               7936mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BFA  6E00 000A               7937mmm         BGT     ALPHA_612
00004BFE  0601 0030               7938mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C02  6000 0006               7939mmm         BRA     DONE_612
00004C06  0601 0037               7940mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C0A  4E71                    7941mmm DONE_612: NOP
00004C0C                          7942mmm         ENDM
00004C0C  4E4F                    7943mm         TRAP    #15         ; EXECUTE OUTPUT
00004C0E                          7944mm         
00004C0E  3212                    7945mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C10  E149                    7946mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C12  E049                    7947mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C14  E849                    7948mm         LSR.W   #4, D1      
00004C16                          7949mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C16  0C01 0009               7950mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1A  6E00 000A               7951mmm         BGT     ALPHA_613
00004C1E  0601 0030               7952mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C22  6000 0006               7953mmm         BRA     DONE_613
00004C26  0601 0037               7954mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2A  4E71                    7955mmm DONE_613: NOP
00004C2C                          7956mmm         ENDM
00004C2C  4E4F                    7957mm         TRAP    #15         ; EXECUTE OUTPUT
00004C2E                          7958mm         
00004C2E  3212                    7959mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C30  E149                    7960mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C32  E949                    7961mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C34  E049                    7962mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C36  E849                    7963mm         LSR.W   #4, D1      
00004C38                          7964mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C38  0C01 0009               7965mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C3C  6E00 000A               7966mmm         BGT     ALPHA_614
00004C40  0601 0030               7967mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C44  6000 0006               7968mmm         BRA     DONE_614
00004C48  0601 0037               7969mmm ALPHA_614: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C4C  4E71                    7970mmm DONE_614: NOP
00004C4E                          7971mmm         ENDM
00004C4E  4E4F                    7972mm         TRAP    #15         ; EXECUTE OUTPUT   
00004C50                          7973mm         ENDM     
00004C50  3605                    7974m         MOVE.W  D5, D3
00004C52  6000 011A               7975m         BRA     COMPLETE_563  
00004C56                          7976m ADRABSOLUTEL_563:  
00004C56  361A                    7977m         MOVE.W  (A2)+, D3
00004C58                          7978mm         PRINTSIGN
00004C58  103C 0006               7979mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C5C  323C 0024               7980mm         MOVE.W  #36, D1     ; AN = SIGN
00004C60  4E4F                    7981mm         TRAP    #15         ; OUTPUT = SIGN
00004C62                          7982mm         ENDM
00004C62                          7983mm         ADROUT 
00004C62  103C 0006               7984mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C66  3212                    7985mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C68  E049                    7986mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C6A  E849                    7987mm         LSR.W   #4, D1      
00004C6C                          7988mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C6C  0C01 0009               7989mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C70  6E00 000A               7990mmm         BGT     ALPHA_617
00004C74  0601 0030               7991mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C78  6000 0006               7992mmm         BRA     DONE_617
00004C7C  0601 0037               7993mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C80  4E71                    7994mmm DONE_617: NOP
00004C82                          7995mmm         ENDM
00004C82  4E4F                    7996mm         TRAP    #15         ; EXECUTE OUTPUT
00004C84                          7997mm         
00004C84  3212                    7998mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C86  E949                    7999mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004C88  E049                    8000mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C8A  E849                    8001mm         LSR.W   #4, D1      
00004C8C                          8002mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C8C  0C01 0009               8003mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C90  6E00 000A               8004mmm         BGT     ALPHA_618
00004C94  0601 0030               8005mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C98  6000 0006               8006mmm         BRA     DONE_618
00004C9C  0601 0037               8007mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CA0  4E71                    8008mmm DONE_618: NOP
00004CA2                          8009mmm         ENDM
00004CA2  4E4F                    8010mm         TRAP    #15         ; EXECUTE OUTPUT
00004CA4                          8011mm         
00004CA4  3212                    8012mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CA6  E149                    8013mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004CA8  E049                    8014mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CAA  E849                    8015mm         LSR.W   #4, D1      
00004CAC                          8016mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CAC  0C01 0009               8017mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CB0  6E00 000A               8018mmm         BGT     ALPHA_619
00004CB4  0601 0030               8019mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CB8  6000 0006               8020mmm         BRA     DONE_619
00004CBC  0601 0037               8021mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CC0  4E71                    8022mmm DONE_619: NOP
00004CC2                          8023mmm         ENDM
00004CC2  4E4F                    8024mm         TRAP    #15         ; EXECUTE OUTPUT
00004CC4                          8025mm         
00004CC4  3212                    8026mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CC6  E149                    8027mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004CC8  E949                    8028mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004CCA  E049                    8029mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CCC  E849                    8030mm         LSR.W   #4, D1      
00004CCE                          8031mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CCE  0C01 0009               8032mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CD2  6E00 000A               8033mmm         BGT     ALPHA_620
00004CD6  0601 0030               8034mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CDA  6000 0006               8035mmm         BRA     DONE_620
00004CDE  0601 0037               8036mmm ALPHA_620: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CE2  4E71                    8037mmm DONE_620: NOP
00004CE4                          8038mmm         ENDM
00004CE4  4E4F                    8039mm         TRAP    #15         ; EXECUTE OUTPUT   
00004CE6                          8040mm         ENDM     
00004CE6  361A                    8041m         MOVE.W  (A2)+, D3
00004CE8                          8042mm         ADROUT
00004CE8  103C 0006               8043mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004CEC  3212                    8044mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CEE  E049                    8045mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CF0  E849                    8046mm         LSR.W   #4, D1      
00004CF2                          8047mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CF2  0C01 0009               8048mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CF6  6E00 000A               8049mmm         BGT     ALPHA_622
00004CFA  0601 0030               8050mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CFE  6000 0006               8051mmm         BRA     DONE_622
00004D02  0601 0037               8052mmm ALPHA_622: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D06  4E71                    8053mmm DONE_622: NOP
00004D08                          8054mmm         ENDM
00004D08  4E4F                    8055mm         TRAP    #15         ; EXECUTE OUTPUT
00004D0A                          8056mm         
00004D0A  3212                    8057mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D0C  E949                    8058mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004D0E  E049                    8059mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D10  E849                    8060mm         LSR.W   #4, D1      
00004D12                          8061mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D12  0C01 0009               8062mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D16  6E00 000A               8063mmm         BGT     ALPHA_623
00004D1A  0601 0030               8064mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D1E  6000 0006               8065mmm         BRA     DONE_623
00004D22  0601 0037               8066mmm ALPHA_623: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D26  4E71                    8067mmm DONE_623: NOP
00004D28                          8068mmm         ENDM
00004D28  4E4F                    8069mm         TRAP    #15         ; EXECUTE OUTPUT
00004D2A                          8070mm         
00004D2A  3212                    8071mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D2C  E149                    8072mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D2E  E049                    8073mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D30  E849                    8074mm         LSR.W   #4, D1      
00004D32                          8075mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D32  0C01 0009               8076mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D36  6E00 000A               8077mmm         BGT     ALPHA_624
00004D3A  0601 0030               8078mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D3E  6000 0006               8079mmm         BRA     DONE_624
00004D42  0601 0037               8080mmm ALPHA_624: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D46  4E71                    8081mmm DONE_624: NOP
00004D48                          8082mmm         ENDM
00004D48  4E4F                    8083mm         TRAP    #15         ; EXECUTE OUTPUT
00004D4A                          8084mm         
00004D4A  3212                    8085mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D4C  E149                    8086mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D4E  E949                    8087mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004D50  E049                    8088mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D52  E849                    8089mm         LSR.W   #4, D1      
00004D54                          8090mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D54  0C01 0009               8091mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D58  6E00 000A               8092mmm         BGT     ALPHA_625
00004D5C  0601 0030               8093mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D60  6000 0006               8094mmm         BRA     DONE_625
00004D64  0601 0037               8095mmm ALPHA_625: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D68  4E71                    8096mmm DONE_625: NOP
00004D6A                          8097mmm         ENDM
00004D6A  4E4F                    8098mm         TRAP    #15         ; EXECUTE OUTPUT   
00004D6C                          8099mm         ENDM     
00004D6C  3605                    8100m         MOVE.W  D5, D3
00004D6E                          8101m 
00004D6E                          8102m COMPLETE_563:  ; OPCODE HAS BEEN VERIFIED
00004D6E                          8103m         ENDM
00004D6E                          8104m         printComma
00004D6E  43F8 00D4               8105m         LEA     OCOMMA, A1     
00004D72  103C 000E               8106m         MOVE.B  #14,D0          
00004D76  4E4F                    8107m         TRAP    #15
00004D78                          8108m         ENDM
00004D78                          8109m         printAnDest     D5
00004D78  3205                    8110m         MOVE.W  D5, D1
00004D7A  E949                    8111m         LSL     #$04, D1 ; BITS 9 TO 11
00004D7C  E049                    8112m         LSR     #$08, D1
00004D7E  EA49                    8113m         LSR     #$05, D1
00004D80  43F8 00CE               8114m         LEA     OAN, A1     
00004D84  103C 000E               8115m         MOVE.B  #14,D0          
00004D88  4E4F                    8116m         TRAP    #15
00004D8A  103C 0003               8117m         MOVE.B  #3,D0          
00004D8E  4E4F                    8118m         TRAP    #15
00004D90                          8119m         ENDM
00004D90  4E75                    8120          RTS                 ; Return from decodeLEA subroutine
00004D92                          8121  
00004D92                          8122  
00004D92                          8123  ; ------------------------------------------------------------
00004D92                          8124  ; 9. "decodeAND" subroutine
00004D92                          8125  ; Gary
00004D92                          8126  ;
00004D92                          8127  ; Decodes and by verifying, printing in a formatted form,
00004D92                          8128  ; then decoding adressing modes and outputing them in formatted form.
00004D92                          8129  ; ------------------------------------------------------------
00004D92                          8130  decodeAND:
00004D92                          8131m         verifyOpcode    pAND, (A2)
00004D92  43F8 0186               8132m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004D96  3612                    8133m         MOVE.W  (A2), D3      ; INPUT VALUE
00004D98  123C 000F               8134m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004D9C                          8135m         
00004D9C                          8136m LOOP_628: 
00004D9C  0C11 0030               8137m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004DA0  6700 000E               8138m         BEQ     CHECKFOR0_628
00004DA4  0C11 0031               8139m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004DA8  6700 0010               8140m         BEQ     CHECKFOR1_628
00004DAC  6000 0012               8141m         BRA     NEXT_628      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004DB0                          8142m         
00004DB0                          8143m CHECKFOR0_628: 
00004DB0  0303                    8144m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004DB2  6600 29EE               8145m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004DB6  6000 0008               8146m         BRA     NEXT_628
00004DBA                          8147m 
00004DBA                          8148m CHECKFOR1_628:
00004DBA  0303                    8149m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004DBC  6700 29E4               8150m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004DC0                          8151m 
00004DC0                          8152m NEXT_628: 
00004DC0  B23C 0000               8153m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004DC4  6700 0008               8154m         BEQ     COMPLETE_628  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004DC8  5301                    8155m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004DCA  1819                    8156m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004DCC  60CE                    8157m         BRA     LOOP_628      ; BEGIN LOOP AGAIN
00004DCE                          8158m 
00004DCE                          8159m COMPLETE_628:  ; OPCODE HAS BEEN VERIFIED
00004DCE                          8160m         ENDM
00004DCE  43F8 0090               8161          LEA     oAND, A1     
00004DD2  103C 000E               8162          MOVE.B  #14,D0          
00004DD6  4E4F                    8163          TRAP    #15
00004DD8                          8164m         printOpMode     (A2)
00004DD8  3612                    8165m         MOVE.W  (A2), D3      
00004DDA  123C 0008               8166m         MOVE.B  #8, D1    
00004DDE  4246                    8167m         CLR     D6
00004DE0  4247                    8168m         CLR     D7
00004DE2                          8169m CHECKFORDESTDN_629: 
00004DE2  0303                    8170m         BTST    D1, D3      
00004DE4  6600 004C               8171m         BNE     CHECKFORSRCDN_629
00004DE8  4EB9 00004EC0           8172m         JSR     NEXT_629
00004DEE  1C3C 0001               8173m         MOVE.B  #$1, D6
00004DF2  0303                    8174m         BTST    D1, D3      
00004DF4  6700 0014               8175m         BEQ     DESTDNW_629
00004DF8                          8176m DESTDNL_629:        
00004DF8  43F8 00C8               8177m         LEA     OLSIZE, A1     
00004DFC  103C 000E               8178m         MOVE.B  #14,D0          
00004E00  4E4F                    8179m         TRAP    #15
00004E02  1E3C 0001               8180m         MOVE.B  #$1, D7
00004E06  6000 00BC               8181m         BRA     COMPLETE_629 
00004E0A                          8182m DESTDNW_629: 
00004E0A  4EB9 00004EC0           8183m         JSR     NEXT_629
00004E10  0303                    8184m         BTST    D1, D3      
00004E12  6700 0010               8185m         BEQ     DESTDNB_629
00004E16  43F8 00C4               8186m         LEA     OWSIZE, A1     
00004E1A  103C 000E               8187m         MOVE.B  #14,D0          
00004E1E  4E4F                    8188m         TRAP    #15
00004E20  6000 00A2               8189m         BRA     COMPLETE_629 
00004E24                          8190m DESTDNB_629: 
00004E24  43F8 00C0               8191m         LEA     OBSIZE, A1     
00004E28  103C 000E               8192m         MOVE.B  #14,D0          
00004E2C  4E4F                    8193m         TRAP    #15
00004E2E  6000 0094               8194m         BRA     COMPLETE_629 
00004E32                          8195m CHECKFORSRCDN_629: 
00004E32  4EB9 00004EC0           8196m         JSR     NEXT_629
00004E38  0303                    8197m         BTST    D1, D3      
00004E3A  6700 002C               8198m         BEQ     SRCDNW_629
00004E3E                          8199m SRCDNL_629:        
00004E3E  43F8 00C8               8200m         LEA     OLSIZE, A1     
00004E42  103C 000E               8201m         MOVE.B  #14,D0          
00004E46  4E4F                    8202m         TRAP    #15
00004E48  1E3C 0001               8203m         MOVE.B  #$1, D7
00004E4C                          8204mm         PRINTDNDEST D3
00004E4C  3203                    8205mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E4E  E949                    8206mm         LSL     #$04, D1
00004E50  E049                    8207mm         LSR     #$08, D1
00004E52  EA49                    8208mm         LSR     #$05, D1
00004E54  43F8 00CC               8209mm         LEA     ODN, A1     
00004E58  103C 000E               8210mm         MOVE.B  #14,D0          
00004E5C  4E4F                    8211mm         TRAP    #15
00004E5E  103C 0003               8212mm         MOVE.B  #3,D0          
00004E62  4E4F                    8213mm         TRAP    #15
00004E64                          8214mm         ENDM
00004E64  6000 005E               8215m         BRA     COMPLETE_629 
00004E68                          8216m SRCDNW_629:
00004E68  4EB9 00004EC0           8217m         JSR     NEXT_629
00004E6E  0303                    8218m         BTST    D1, D3     
00004E70  6700 0028               8219m         BEQ     SRCDNB_629
00004E74  43F8 00C4               8220m         LEA     OWSIZE, A1     
00004E78  103C 000E               8221m         MOVE.B  #14,D0          
00004E7C  4E4F                    8222m         TRAP    #15
00004E7E                          8223mm         PRINTDNDEST D3
00004E7E  3203                    8224mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E80  E949                    8225mm         LSL     #$04, D1
00004E82  E049                    8226mm         LSR     #$08, D1
00004E84  EA49                    8227mm         LSR     #$05, D1
00004E86  43F8 00CC               8228mm         LEA     ODN, A1     
00004E8A  103C 000E               8229mm         MOVE.B  #14,D0          
00004E8E  4E4F                    8230mm         TRAP    #15
00004E90  103C 0003               8231mm         MOVE.B  #3,D0          
00004E94  4E4F                    8232mm         TRAP    #15
00004E96                          8233mm         ENDM
00004E96  6000 002C               8234m         BRA     COMPLETE_629 
00004E9A                          8235m SRCDNB_629: 
00004E9A  43F8 00C0               8236m         LEA     OBSIZE, A1     
00004E9E  103C 000E               8237m         MOVE.B  #14,D0          
00004EA2  4E4F                    8238m         TRAP    #15
00004EA4                          8239mm         PRINTDNDEST D3
00004EA4  3203                    8240mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004EA6  E949                    8241mm         LSL     #$04, D1
00004EA8  E049                    8242mm         LSR     #$08, D1
00004EAA  EA49                    8243mm         LSR     #$05, D1
00004EAC  43F8 00CC               8244mm         LEA     ODN, A1     
00004EB0  103C 000E               8245mm         MOVE.B  #14,D0          
00004EB4  4E4F                    8246mm         TRAP    #15
00004EB6  103C 0003               8247mm         MOVE.B  #3,D0          
00004EBA  4E4F                    8248mm         TRAP    #15
00004EBC                          8249mm         ENDM
00004EBC  6000 0006               8250m         BRA     COMPLETE_629 
00004EC0                          8251m 
00004EC0                          8252m NEXT_629:
00004EC0  5301                    8253m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004EC2  4E75                    8254m         RTS                
00004EC4                          8255m 
00004EC4                          8256m COMPLETE_629:  ; OPCODE HAS BEEN VERIFIED
00004EC4                          8257m         ENDM
00004EC4  BC3C 0001               8258          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004EC8  6700 05F8               8259          BEQ     decodeAndDestOp
00004ECC                          8260m         printComma
00004ECC  43F8 00D4               8261m         LEA     OCOMMA, A1     
00004ED0  103C 000E               8262m         MOVE.B  #14,D0          
00004ED4  4E4F                    8263m         TRAP    #15
00004ED6                          8264m         ENDM
00004ED6                          8265m         prepareAdrMode  #$1, (A2)
00004ED6  3C3C 0001               8266m         MOVE.W  #$1, D6      ; INPUT VALUE
00004EDA  3212                    8267m         MOVE.W  (A2), D1
00004EDC  BC3C 0001               8268m         CMP.B   #$01, D6
00004EE0  6700 000C               8269m         BEQ     ADRSOURCE_634    
00004EE4                          8270m ADRDEST_634:
00004EE4  EF49                    8271m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004EE6  E049                    8272m         LSR     #$08, D1
00004EE8  EA49                    8273m         LSR     #$05, D1
00004EEA  6000 000A               8274m         BRA     COMPLETE_634 
00004EEE                          8275m ADRSOURCE_634:                
00004EEE  E149                    8276m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004EF0  E549                    8277m         LSL     #$02, D1
00004EF2  E049                    8278m         LSR     #$08, D1
00004EF4  EA49                    8279m         LSR     #$05, D1
00004EF6                          8280m COMPLETE_634:  ; OPCODE HAS BEEN VERIFIED
00004EF6                          8281m         ENDM        
00004EF6                          8282m         decodeAdrMode   (A2), D1
00004EF6  3612                    8283m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004EF8  3201                    8284m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004EFA                          8285m 
00004EFA  B23C 0001               8286m         CMP.B   #$01, D1
00004EFE  6700 0066               8287m         BEQ     ADRREGDIRECT_635    
00004F02  B23C 0002               8288m         CMP.B   #$02, D1
00004F06  6700 00A0               8289m         BEQ     ADRREGINDIRECT_635  
00004F0A  B23C 0003               8290m         CMP.B   #$03, D1
00004F0E  6700 0102               8291m         BEQ     ADRREGPOSTINC_635  
00004F12  B23C 0004               8292m         CMP.B   #$04, D1
00004F16  6700 0178               8293m         BEQ     ADRREGPREDEC_635
00004F1A  B23C 0007               8294m         CMP.B   #$07, D1
00004F1E  6700 01EE               8295m         BEQ     ADRABSOLUTE_635    
00004F22                          8296m         
00004F22                          8297m DATAREGDIRECT_635: 
00004F22  BC3C 0001               8298m         CMP.B   #$01, D6
00004F26  6700 001E               8299m         BEQ     DATAREGDIRECTSRC_635   
00004F2A                          8300m DATAREGDIRECTDEST_635: 
00004F2A                          8301mm         PRINTDNDEST D3 
00004F2A  3203                    8302mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004F2C  E949                    8303mm         LSL     #$04, D1
00004F2E  E049                    8304mm         LSR     #$08, D1
00004F30  EA49                    8305mm         LSR     #$05, D1
00004F32  43F8 00CC               8306mm         LEA     ODN, A1     
00004F36  103C 000E               8307mm         MOVE.B  #14,D0          
00004F3A  4E4F                    8308mm         TRAP    #15
00004F3C  103C 0003               8309mm         MOVE.B  #3,D0          
00004F40  4E4F                    8310mm         TRAP    #15
00004F42                          8311mm         ENDM
00004F42  6000 057A               8312m         BRA     COMPLETE_635 
00004F46                          8313m DATAREGDIRECTSRC_635: 
00004F46                          8314mm         PRINTDNSRC D3 
00004F46  4281                    8315mm         CLR.L   D1
00004F48  3203                    8316mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F4A  E149                    8317mm         LSL     #$08, D1
00004F4C  EB49                    8318mm         LSL     #$05, D1
00004F4E  E049                    8319mm         LSR     #$08, D1
00004F50  EA49                    8320mm         LSR     #$05, D1
00004F52  43F8 00CC               8321mm         LEA     ODN, A1     
00004F56  103C 000E               8322mm         MOVE.B  #14,D0          
00004F5A  4E4F                    8323mm         TRAP    #15
00004F5C  103C 0003               8324mm         MOVE.B  #3,D0          
00004F60  4E4F                    8325mm         TRAP    #15
00004F62                          8326mm         ENDM
00004F62  6000 055A               8327m         BRA     COMPLETE_635   
00004F66                          8328m         
00004F66                          8329m ADRREGDIRECT_635: 
00004F66  BC3C 0001               8330m         CMP.B   #$01, D6
00004F6A  6700 001E               8331m         BEQ     ADRREGDIRECTSRC_635   
00004F6E                          8332m ADRREGDIRECTDEST_635:
00004F6E                          8333mm         PRINTANDEST D3
00004F6E  3203                    8334mm         MOVE.W  D3, D1
00004F70  E949                    8335mm         LSL     #$04, D1 ; BITS 9 TO 11
00004F72  E049                    8336mm         LSR     #$08, D1
00004F74  EA49                    8337mm         LSR     #$05, D1
00004F76  43F8 00CE               8338mm         LEA     OAN, A1     
00004F7A  103C 000E               8339mm         MOVE.B  #14,D0          
00004F7E  4E4F                    8340mm         TRAP    #15
00004F80  103C 0003               8341mm         MOVE.B  #3,D0          
00004F84  4E4F                    8342mm         TRAP    #15
00004F86                          8343mm         ENDM
00004F86  6000 0536               8344m         BRA     COMPLETE_635   
00004F8A                          8345m ADRREGDIRECTSRC_635:
00004F8A                          8346mm         PRINTANSRC D3
00004F8A  3203                    8347mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F8C  E149                    8348mm         LSL     #$08, D1
00004F8E  EB49                    8349mm         LSL     #$05, D1
00004F90  E049                    8350mm         LSR     #$08, D1
00004F92  EA49                    8351mm         LSR     #$05, D1
00004F94  43F8 00CE               8352mm         LEA     OAN, A1     
00004F98  103C 000E               8353mm         MOVE.B  #14,D0          
00004F9C  4E4F                    8354mm         TRAP    #15
00004F9E  103C 0003               8355mm         MOVE.B  #3,D0          
00004FA2  4E4F                    8356mm         TRAP    #15
00004FA4                          8357mm         ENDM
00004FA4  6000 0518               8358m         BRA     COMPLETE_635   
00004FA8                          8359m        
00004FA8                          8360m ADRREGINDIRECT_635:   
00004FA8  BC3C 0001               8361m         CMP.B   #$01, D6
00004FAC  6700 0032               8362m         BEQ     ADRREGINDIRECTSRC_635   
00004FB0                          8363m ADRREGINDIRECTDEST_635:
00004FB0                          8364mm         PRINTLB
00004FB0  43F8 00D0               8365mm         LEA     OLB, A1     
00004FB4  103C 000E               8366mm         MOVE.B  #14,D0          
00004FB8  4E4F                    8367mm         TRAP    #15
00004FBA                          8368mm         ENDM
00004FBA                          8369mm         PRINTANDEST D3  
00004FBA  3203                    8370mm         MOVE.W  D3, D1
00004FBC  E949                    8371mm         LSL     #$04, D1 ; BITS 9 TO 11
00004FBE  E049                    8372mm         LSR     #$08, D1
00004FC0  EA49                    8373mm         LSR     #$05, D1
00004FC2  43F8 00CE               8374mm         LEA     OAN, A1     
00004FC6  103C 000E               8375mm         MOVE.B  #14,D0          
00004FCA  4E4F                    8376mm         TRAP    #15
00004FCC  103C 0003               8377mm         MOVE.B  #3,D0          
00004FD0  4E4F                    8378mm         TRAP    #15
00004FD2                          8379mm         ENDM
00004FD2                          8380mm         PRINTRB
00004FD2  43F8 00D2               8381mm         LEA     ORB, A1     
00004FD6  103C 000E               8382mm         MOVE.B  #14,D0          
00004FDA  4E4F                    8383mm         TRAP    #15
00004FDC                          8384mm         ENDM
00004FDC  6000 04E0               8385m         BRA     COMPLETE_635     
00004FE0                          8386m ADRREGINDIRECTSRC_635:   
00004FE0                          8387mm         PRINTLB
00004FE0  43F8 00D0               8388mm         LEA     OLB, A1     
00004FE4  103C 000E               8389mm         MOVE.B  #14,D0          
00004FE8  4E4F                    8390mm         TRAP    #15
00004FEA                          8391mm         ENDM
00004FEA                          8392mm         PRINTANSRC D3  
00004FEA  3203                    8393mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FEC  E149                    8394mm         LSL     #$08, D1
00004FEE  EB49                    8395mm         LSL     #$05, D1
00004FF0  E049                    8396mm         LSR     #$08, D1
00004FF2  EA49                    8397mm         LSR     #$05, D1
00004FF4  43F8 00CE               8398mm         LEA     OAN, A1     
00004FF8  103C 000E               8399mm         MOVE.B  #14,D0          
00004FFC  4E4F                    8400mm         TRAP    #15
00004FFE  103C 0003               8401mm         MOVE.B  #3,D0          
00005002  4E4F                    8402mm         TRAP    #15
00005004                          8403mm         ENDM
00005004                          8404mm         PRINTRB
00005004  43F8 00D2               8405mm         LEA     ORB, A1     
00005008  103C 000E               8406mm         MOVE.B  #14,D0          
0000500C  4E4F                    8407mm         TRAP    #15
0000500E                          8408mm         ENDM
0000500E  6000 04AE               8409m         BRA     COMPLETE_635   
00005012                          8410m         
00005012                          8411m ADRREGPOSTINC_635:   
00005012  BC3C 0001               8412m         CMP.B   #$01, D6
00005016  6700 003C               8413m         BEQ     ADRREGPOSTINCSRC_635   
0000501A                          8414m ADRREGPOSTINCDEST_635: 
0000501A                          8415mm         PRINTLB
0000501A  43F8 00D0               8416mm         LEA     OLB, A1     
0000501E  103C 000E               8417mm         MOVE.B  #14,D0          
00005022  4E4F                    8418mm         TRAP    #15
00005024                          8419mm         ENDM
00005024                          8420mm         PRINTANDEST D3  
00005024  3203                    8421mm         MOVE.W  D3, D1
00005026  E949                    8422mm         LSL     #$04, D1 ; BITS 9 TO 11
00005028  E049                    8423mm         LSR     #$08, D1
0000502A  EA49                    8424mm         LSR     #$05, D1
0000502C  43F8 00CE               8425mm         LEA     OAN, A1     
00005030  103C 000E               8426mm         MOVE.B  #14,D0          
00005034  4E4F                    8427mm         TRAP    #15
00005036  103C 0003               8428mm         MOVE.B  #3,D0          
0000503A  4E4F                    8429mm         TRAP    #15
0000503C                          8430mm         ENDM
0000503C                          8431mm         PRINTRB
0000503C  43F8 00D2               8432mm         LEA     ORB, A1     
00005040  103C 000E               8433mm         MOVE.B  #14,D0          
00005044  4E4F                    8434mm         TRAP    #15
00005046                          8435mm         ENDM
00005046                          8436mm         PRINTPI
00005046  43F8 00D9               8437mm         LEA     OPSTINC, A1     
0000504A  103C 000E               8438mm         MOVE.B  #14,D0          
0000504E  4E4F                    8439mm         TRAP    #15
00005050                          8440mm         ENDM
00005050  6000 046C               8441m         BRA     COMPLETE_635  
00005054                          8442m ADRREGPOSTINCSRC_635:           
00005054                          8443mm         PRINTLB
00005054  43F8 00D0               8444mm         LEA     OLB, A1     
00005058  103C 000E               8445mm         MOVE.B  #14,D0          
0000505C  4E4F                    8446mm         TRAP    #15
0000505E                          8447mm         ENDM
0000505E                          8448mm         PRINTANSRC D3  
0000505E  3203                    8449mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005060  E149                    8450mm         LSL     #$08, D1
00005062  EB49                    8451mm         LSL     #$05, D1
00005064  E049                    8452mm         LSR     #$08, D1
00005066  EA49                    8453mm         LSR     #$05, D1
00005068  43F8 00CE               8454mm         LEA     OAN, A1     
0000506C  103C 000E               8455mm         MOVE.B  #14,D0          
00005070  4E4F                    8456mm         TRAP    #15
00005072  103C 0003               8457mm         MOVE.B  #3,D0          
00005076  4E4F                    8458mm         TRAP    #15
00005078                          8459mm         ENDM
00005078                          8460mm         PRINTRB
00005078  43F8 00D2               8461mm         LEA     ORB, A1     
0000507C  103C 000E               8462mm         MOVE.B  #14,D0          
00005080  4E4F                    8463mm         TRAP    #15
00005082                          8464mm         ENDM
00005082                          8465mm         PRINTPI
00005082  43F8 00D9               8466mm         LEA     OPSTINC, A1     
00005086  103C 000E               8467mm         MOVE.B  #14,D0          
0000508A  4E4F                    8468mm         TRAP    #15
0000508C                          8469mm         ENDM
0000508C  6000 0430               8470m         BRA     COMPLETE_635  
00005090                          8471m ADRREGPREDEC_635: 
00005090  BC3C 0001               8472m         CMP.B   #$01, D6
00005094  6700 003C               8473m         BEQ     ADRREGPREDECSRC_635   
00005098                          8474m ADRREGPREDECDEST_635:
00005098                          8475mm         PRINTPD  
00005098  43F8 00D7               8476mm         LEA     OPREDEC, A1     
0000509C  103C 000E               8477mm         MOVE.B  #14,D0          
000050A0  4E4F                    8478mm         TRAP    #15
000050A2                          8479mm         ENDM
000050A2                          8480mm         PRINTLB
000050A2  43F8 00D0               8481mm         LEA     OLB, A1     
000050A6  103C 000E               8482mm         MOVE.B  #14,D0          
000050AA  4E4F                    8483mm         TRAP    #15
000050AC                          8484mm         ENDM
000050AC                          8485mm         PRINTANDEST D3  
000050AC  3203                    8486mm         MOVE.W  D3, D1
000050AE  E949                    8487mm         LSL     #$04, D1 ; BITS 9 TO 11
000050B0  E049                    8488mm         LSR     #$08, D1
000050B2  EA49                    8489mm         LSR     #$05, D1
000050B4  43F8 00CE               8490mm         LEA     OAN, A1     
000050B8  103C 000E               8491mm         MOVE.B  #14,D0          
000050BC  4E4F                    8492mm         TRAP    #15
000050BE  103C 0003               8493mm         MOVE.B  #3,D0          
000050C2  4E4F                    8494mm         TRAP    #15
000050C4                          8495mm         ENDM
000050C4                          8496mm         PRINTRB
000050C4  43F8 00D2               8497mm         LEA     ORB, A1     
000050C8  103C 000E               8498mm         MOVE.B  #14,D0          
000050CC  4E4F                    8499mm         TRAP    #15
000050CE                          8500mm         ENDM
000050CE  6000 03EE               8501m         BRA     COMPLETE_635   
000050D2                          8502m ADRREGPREDECSRC_635: 
000050D2                          8503mm         PRINTPD  
000050D2  43F8 00D7               8504mm         LEA     OPREDEC, A1     
000050D6  103C 000E               8505mm         MOVE.B  #14,D0          
000050DA  4E4F                    8506mm         TRAP    #15
000050DC                          8507mm         ENDM
000050DC                          8508mm         PRINTLB
000050DC  43F8 00D0               8509mm         LEA     OLB, A1     
000050E0  103C 000E               8510mm         MOVE.B  #14,D0          
000050E4  4E4F                    8511mm         TRAP    #15
000050E6                          8512mm         ENDM
000050E6                          8513mm         PRINTANSRC D3  
000050E6  3203                    8514mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000050E8  E149                    8515mm         LSL     #$08, D1
000050EA  EB49                    8516mm         LSL     #$05, D1
000050EC  E049                    8517mm         LSR     #$08, D1
000050EE  EA49                    8518mm         LSR     #$05, D1
000050F0  43F8 00CE               8519mm         LEA     OAN, A1     
000050F4  103C 000E               8520mm         MOVE.B  #14,D0          
000050F8  4E4F                    8521mm         TRAP    #15
000050FA  103C 0003               8522mm         MOVE.B  #3,D0          
000050FE  4E4F                    8523mm         TRAP    #15
00005100                          8524mm         ENDM
00005100                          8525mm         PRINTRB
00005100  43F8 00D2               8526mm         LEA     ORB, A1     
00005104  103C 000E               8527mm         MOVE.B  #14,D0          
00005108  4E4F                    8528mm         TRAP    #15
0000510A                          8529mm         ENDM
0000510A  6000 03B2               8530m         BRA     COMPLETE_635
0000510E                          8531m        
0000510E                          8532m ADRABSOLUTE_635:
0000510E  BC3C 0001               8533m         CMP.B   #$01, D6
00005112  6600 0018               8534m         BNE     ADRABSOLUTEDST_635 
00005116                          8535m         
00005116  3A03                    8536m         MOVE.W  D3, D5
00005118  0803 0002               8537m         BTST    #2, D3
0000511C  6600 0024               8538m         BNE     ADRIMMEDIATE_635
00005120  0803 0000               8539m         BTST    #0, D3
00005124  6600 0280               8540m         BNE     ADRABSOLUTEL_635
00005128  6000 01E6               8541m         BRA     ADRABSOLUTEW_635
0000512C                          8542m ADRABSOLUTEDST_635:
0000512C  3A03                    8543m         MOVE.W  D3, D5
0000512E  0803 000B               8544m         BTST    #$B, D3
00005132  6600 000E               8545m         BNE     ADRIMMEDIATE_635
00005136  0803 0009               8546m         BTST    #$09, D3
0000513A  6600 026A               8547m         BNE     ADRABSOLUTEL_635
0000513E  6000 01D0               8548m         BRA     ADRABSOLUTEW_635
00005142                          8549m ADRIMMEDIATE_635:
00005142  BE3C 0001               8550m         CMP.B   #1, D7
00005146  6700 00A2               8551m         BEQ     ADRIMMEDIATEL_635
0000514A                          8552m ADRIMMEDIATEW_635:
0000514A  361A                    8553m         MOVE.W  (A2)+, D3
0000514C                          8554mm         PRINTHASH
0000514C  103C 0006               8555mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005150  323C 0023               8556mm         MOVE.W  #35, D1     ; AN = SIGN
00005154  4E4F                    8557mm         TRAP    #15         ; OUTPUT = SIGN
00005156                          8558mm         ENDM
00005156                          8559mm         PRINTSIGN
00005156  103C 0006               8560mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000515A  323C 0024               8561mm         MOVE.W  #36, D1     ; AN = SIGN
0000515E  4E4F                    8562mm         TRAP    #15         ; OUTPUT = SIGN
00005160                          8563mm         ENDM
00005160                          8564mm         ADROUT
00005160  103C 0006               8565mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005164  3212                    8566mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005166  E049                    8567mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005168  E849                    8568mm         LSR.W   #4, D1      
0000516A                          8569mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000516A  0C01 0009               8570mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000516E  6E00 000A               8571mmm         BGT     ALPHA_665
00005172  0601 0030               8572mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005176  6000 0006               8573mmm         BRA     DONE_665
0000517A  0601 0037               8574mmm ALPHA_665: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000517E  4E71                    8575mmm DONE_665: NOP
00005180                          8576mmm         ENDM
00005180  4E4F                    8577mm         TRAP    #15         ; EXECUTE OUTPUT
00005182                          8578mm         
00005182  3212                    8579mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005184  E949                    8580mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005186  E049                    8581mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005188  E849                    8582mm         LSR.W   #4, D1      
0000518A                          8583mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000518A  0C01 0009               8584mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000518E  6E00 000A               8585mmm         BGT     ALPHA_666
00005192  0601 0030               8586mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005196  6000 0006               8587mmm         BRA     DONE_666
0000519A  0601 0037               8588mmm ALPHA_666: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000519E  4E71                    8589mmm DONE_666: NOP
000051A0                          8590mmm         ENDM
000051A0  4E4F                    8591mm         TRAP    #15         ; EXECUTE OUTPUT
000051A2                          8592mm         
000051A2  3212                    8593mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051A4  E149                    8594mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051A6  E049                    8595mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051A8  E849                    8596mm         LSR.W   #4, D1      
000051AA                          8597mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051AA  0C01 0009               8598mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051AE  6E00 000A               8599mmm         BGT     ALPHA_667
000051B2  0601 0030               8600mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051B6  6000 0006               8601mmm         BRA     DONE_667
000051BA  0601 0037               8602mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051BE  4E71                    8603mmm DONE_667: NOP
000051C0                          8604mmm         ENDM
000051C0  4E4F                    8605mm         TRAP    #15         ; EXECUTE OUTPUT
000051C2                          8606mm         
000051C2  3212                    8607mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051C4  E149                    8608mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051C6  E949                    8609mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000051C8  E049                    8610mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051CA  E849                    8611mm         LSR.W   #4, D1      
000051CC                          8612mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051CC  0C01 0009               8613mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051D0  6E00 000A               8614mmm         BGT     ALPHA_668
000051D4  0601 0030               8615mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051D8  6000 0006               8616mmm         BRA     DONE_668
000051DC  0601 0037               8617mmm ALPHA_668: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051E0  4E71                    8618mmm DONE_668: NOP
000051E2                          8619mmm         ENDM
000051E2  4E4F                    8620mm         TRAP    #15         ; EXECUTE OUTPUT   
000051E4                          8621mm         ENDM     
000051E4  3605                    8622m         MOVE.W  D5, D3
000051E6  6000 02D6               8623m         BRA     COMPLETE_635
000051EA                          8624m ADRIMMEDIATEL_635:
000051EA  361A                    8625m         MOVE.W  (A2)+, D3
000051EC                          8626mm         PRINTHASH
000051EC  103C 0006               8627mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051F0  323C 0023               8628mm         MOVE.W  #35, D1     ; AN = SIGN
000051F4  4E4F                    8629mm         TRAP    #15         ; OUTPUT = SIGN
000051F6                          8630mm         ENDM
000051F6                          8631mm         PRINTSIGN
000051F6  103C 0006               8632mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051FA  323C 0024               8633mm         MOVE.W  #36, D1     ; AN = SIGN
000051FE  4E4F                    8634mm         TRAP    #15         ; OUTPUT = SIGN
00005200                          8635mm         ENDM
00005200                          8636mm         ADROUT 
00005200  103C 0006               8637mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005204  3212                    8638mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005206  E049                    8639mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005208  E849                    8640mm         LSR.W   #4, D1      
0000520A                          8641mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000520A  0C01 0009               8642mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000520E  6E00 000A               8643mmm         BGT     ALPHA_672
00005212  0601 0030               8644mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005216  6000 0006               8645mmm         BRA     DONE_672
0000521A  0601 0037               8646mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000521E  4E71                    8647mmm DONE_672: NOP
00005220                          8648mmm         ENDM
00005220  4E4F                    8649mm         TRAP    #15         ; EXECUTE OUTPUT
00005222                          8650mm         
00005222  3212                    8651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005224  E949                    8652mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005226  E049                    8653mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005228  E849                    8654mm         LSR.W   #4, D1      
0000522A                          8655mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000522A  0C01 0009               8656mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000522E  6E00 000A               8657mmm         BGT     ALPHA_673
00005232  0601 0030               8658mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005236  6000 0006               8659mmm         BRA     DONE_673
0000523A  0601 0037               8660mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000523E  4E71                    8661mmm DONE_673: NOP
00005240                          8662mmm         ENDM
00005240  4E4F                    8663mm         TRAP    #15         ; EXECUTE OUTPUT
00005242                          8664mm         
00005242  3212                    8665mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005244  E149                    8666mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005246  E049                    8667mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005248  E849                    8668mm         LSR.W   #4, D1      
0000524A                          8669mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000524A  0C01 0009               8670mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000524E  6E00 000A               8671mmm         BGT     ALPHA_674
00005252  0601 0030               8672mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005256  6000 0006               8673mmm         BRA     DONE_674
0000525A  0601 0037               8674mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000525E  4E71                    8675mmm DONE_674: NOP
00005260                          8676mmm         ENDM
00005260  4E4F                    8677mm         TRAP    #15         ; EXECUTE OUTPUT
00005262                          8678mm         
00005262  3212                    8679mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005264  E149                    8680mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005266  E949                    8681mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005268  E049                    8682mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000526A  E849                    8683mm         LSR.W   #4, D1      
0000526C                          8684mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000526C  0C01 0009               8685mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005270  6E00 000A               8686mmm         BGT     ALPHA_675
00005274  0601 0030               8687mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005278  6000 0006               8688mmm         BRA     DONE_675
0000527C  0601 0037               8689mmm ALPHA_675: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005280  4E71                    8690mmm DONE_675: NOP
00005282                          8691mmm         ENDM
00005282  4E4F                    8692mm         TRAP    #15         ; EXECUTE OUTPUT   
00005284                          8693mm         ENDM     
00005284  361A                    8694m         MOVE.W  (A2)+, D3
00005286                          8695mm         ADROUT
00005286  103C 0006               8696mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000528A  3212                    8697mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000528C  E049                    8698mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000528E  E849                    8699mm         LSR.W   #4, D1      
00005290                          8700mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005290  0C01 0009               8701mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005294  6E00 000A               8702mmm         BGT     ALPHA_677
00005298  0601 0030               8703mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000529C  6000 0006               8704mmm         BRA     DONE_677
000052A0  0601 0037               8705mmm ALPHA_677: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052A4  4E71                    8706mmm DONE_677: NOP
000052A6                          8707mmm         ENDM
000052A6  4E4F                    8708mm         TRAP    #15         ; EXECUTE OUTPUT
000052A8                          8709mm         
000052A8  3212                    8710mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052AA  E949                    8711mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000052AC  E049                    8712mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052AE  E849                    8713mm         LSR.W   #4, D1      
000052B0                          8714mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052B0  0C01 0009               8715mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052B4  6E00 000A               8716mmm         BGT     ALPHA_678
000052B8  0601 0030               8717mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052BC  6000 0006               8718mmm         BRA     DONE_678
000052C0  0601 0037               8719mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052C4  4E71                    8720mmm DONE_678: NOP
000052C6                          8721mmm         ENDM
000052C6  4E4F                    8722mm         TRAP    #15         ; EXECUTE OUTPUT
000052C8                          8723mm         
000052C8  3212                    8724mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052CA  E149                    8725mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052CC  E049                    8726mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052CE  E849                    8727mm         LSR.W   #4, D1      
000052D0                          8728mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052D0  0C01 0009               8729mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052D4  6E00 000A               8730mmm         BGT     ALPHA_679
000052D8  0601 0030               8731mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052DC  6000 0006               8732mmm         BRA     DONE_679
000052E0  0601 0037               8733mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052E4  4E71                    8734mmm DONE_679: NOP
000052E6                          8735mmm         ENDM
000052E6  4E4F                    8736mm         TRAP    #15         ; EXECUTE OUTPUT
000052E8                          8737mm         
000052E8  3212                    8738mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052EA  E149                    8739mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052EC  E949                    8740mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052EE  E049                    8741mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052F0  E849                    8742mm         LSR.W   #4, D1      
000052F2                          8743mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052F2  0C01 0009               8744mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052F6  6E00 000A               8745mmm         BGT     ALPHA_680
000052FA  0601 0030               8746mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052FE  6000 0006               8747mmm         BRA     DONE_680
00005302  0601 0037               8748mmm ALPHA_680: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005306  4E71                    8749mmm DONE_680: NOP
00005308                          8750mmm         ENDM
00005308  4E4F                    8751mm         TRAP    #15         ; EXECUTE OUTPUT   
0000530A                          8752mm         ENDM     
0000530A  3605                    8753m         MOVE.W  D5, D3
0000530C  6000 01B0               8754m         BRA     COMPLETE_635 
00005310                          8755m ADRABSOLUTEW_635:     
00005310  361A                    8756m         MOVE.W  (A2)+, D3
00005312                          8757mm         PRINTSIGN
00005312  103C 0006               8758mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005316  323C 0024               8759mm         MOVE.W  #36, D1     ; AN = SIGN
0000531A  4E4F                    8760mm         TRAP    #15         ; OUTPUT = SIGN
0000531C                          8761mm         ENDM
0000531C                          8762mm         ADROUT
0000531C  103C 0006               8763mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005320  3212                    8764mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005322  E049                    8765mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005324  E849                    8766mm         LSR.W   #4, D1      
00005326                          8767mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005326  0C01 0009               8768mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000532A  6E00 000A               8769mmm         BGT     ALPHA_683
0000532E  0601 0030               8770mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005332  6000 0006               8771mmm         BRA     DONE_683
00005336  0601 0037               8772mmm ALPHA_683: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000533A  4E71                    8773mmm DONE_683: NOP
0000533C                          8774mmm         ENDM
0000533C  4E4F                    8775mm         TRAP    #15         ; EXECUTE OUTPUT
0000533E                          8776mm         
0000533E  3212                    8777mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005340  E949                    8778mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005342  E049                    8779mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005344  E849                    8780mm         LSR.W   #4, D1      
00005346                          8781mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005346  0C01 0009               8782mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000534A  6E00 000A               8783mmm         BGT     ALPHA_684
0000534E  0601 0030               8784mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005352  6000 0006               8785mmm         BRA     DONE_684
00005356  0601 0037               8786mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000535A  4E71                    8787mmm DONE_684: NOP
0000535C                          8788mmm         ENDM
0000535C  4E4F                    8789mm         TRAP    #15         ; EXECUTE OUTPUT
0000535E                          8790mm         
0000535E  3212                    8791mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005360  E149                    8792mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005362  E049                    8793mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005364  E849                    8794mm         LSR.W   #4, D1      
00005366                          8795mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005366  0C01 0009               8796mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000536A  6E00 000A               8797mmm         BGT     ALPHA_685
0000536E  0601 0030               8798mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005372  6000 0006               8799mmm         BRA     DONE_685
00005376  0601 0037               8800mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000537A  4E71                    8801mmm DONE_685: NOP
0000537C                          8802mmm         ENDM
0000537C  4E4F                    8803mm         TRAP    #15         ; EXECUTE OUTPUT
0000537E                          8804mm         
0000537E  3212                    8805mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005380  E149                    8806mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005382  E949                    8807mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005384  E049                    8808mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005386  E849                    8809mm         LSR.W   #4, D1      
00005388                          8810mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005388  0C01 0009               8811mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000538C  6E00 000A               8812mmm         BGT     ALPHA_686
00005390  0601 0030               8813mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005394  6000 0006               8814mmm         BRA     DONE_686
00005398  0601 0037               8815mmm ALPHA_686: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000539C  4E71                    8816mmm DONE_686: NOP
0000539E                          8817mmm         ENDM
0000539E  4E4F                    8818mm         TRAP    #15         ; EXECUTE OUTPUT   
000053A0                          8819mm         ENDM     
000053A0  3605                    8820m         MOVE.W  D5, D3
000053A2  6000 011A               8821m         BRA     COMPLETE_635  
000053A6                          8822m ADRABSOLUTEL_635:  
000053A6  361A                    8823m         MOVE.W  (A2)+, D3
000053A8                          8824mm         PRINTSIGN
000053A8  103C 0006               8825mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000053AC  323C 0024               8826mm         MOVE.W  #36, D1     ; AN = SIGN
000053B0  4E4F                    8827mm         TRAP    #15         ; OUTPUT = SIGN
000053B2                          8828mm         ENDM
000053B2                          8829mm         ADROUT 
000053B2  103C 0006               8830mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000053B6  3212                    8831mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053B8  E049                    8832mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053BA  E849                    8833mm         LSR.W   #4, D1      
000053BC                          8834mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053BC  0C01 0009               8835mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053C0  6E00 000A               8836mmm         BGT     ALPHA_689
000053C4  0601 0030               8837mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053C8  6000 0006               8838mmm         BRA     DONE_689
000053CC  0601 0037               8839mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053D0  4E71                    8840mmm DONE_689: NOP
000053D2                          8841mmm         ENDM
000053D2  4E4F                    8842mm         TRAP    #15         ; EXECUTE OUTPUT
000053D4                          8843mm         
000053D4  3212                    8844mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053D6  E949                    8845mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000053D8  E049                    8846mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053DA  E849                    8847mm         LSR.W   #4, D1      
000053DC                          8848mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053DC  0C01 0009               8849mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053E0  6E00 000A               8850mmm         BGT     ALPHA_690
000053E4  0601 0030               8851mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053E8  6000 0006               8852mmm         BRA     DONE_690
000053EC  0601 0037               8853mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053F0  4E71                    8854mmm DONE_690: NOP
000053F2                          8855mmm         ENDM
000053F2  4E4F                    8856mm         TRAP    #15         ; EXECUTE OUTPUT
000053F4                          8857mm         
000053F4  3212                    8858mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053F6  E149                    8859mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000053F8  E049                    8860mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053FA  E849                    8861mm         LSR.W   #4, D1      
000053FC                          8862mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053FC  0C01 0009               8863mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005400  6E00 000A               8864mmm         BGT     ALPHA_691
00005404  0601 0030               8865mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005408  6000 0006               8866mmm         BRA     DONE_691
0000540C  0601 0037               8867mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005410  4E71                    8868mmm DONE_691: NOP
00005412                          8869mmm         ENDM
00005412  4E4F                    8870mm         TRAP    #15         ; EXECUTE OUTPUT
00005414                          8871mm         
00005414  3212                    8872mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005416  E149                    8873mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005418  E949                    8874mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000541A  E049                    8875mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000541C  E849                    8876mm         LSR.W   #4, D1      
0000541E                          8877mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000541E  0C01 0009               8878mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005422  6E00 000A               8879mmm         BGT     ALPHA_692
00005426  0601 0030               8880mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000542A  6000 0006               8881mmm         BRA     DONE_692
0000542E  0601 0037               8882mmm ALPHA_692: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005432  4E71                    8883mmm DONE_692: NOP
00005434                          8884mmm         ENDM
00005434  4E4F                    8885mm         TRAP    #15         ; EXECUTE OUTPUT   
00005436                          8886mm         ENDM     
00005436  361A                    8887m         MOVE.W  (A2)+, D3
00005438                          8888mm         ADROUT
00005438  103C 0006               8889mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000543C  3212                    8890mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000543E  E049                    8891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005440  E849                    8892mm         LSR.W   #4, D1      
00005442                          8893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005442  0C01 0009               8894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005446  6E00 000A               8895mmm         BGT     ALPHA_694
0000544A  0601 0030               8896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000544E  6000 0006               8897mmm         BRA     DONE_694
00005452  0601 0037               8898mmm ALPHA_694: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005456  4E71                    8899mmm DONE_694: NOP
00005458                          8900mmm         ENDM
00005458  4E4F                    8901mm         TRAP    #15         ; EXECUTE OUTPUT
0000545A                          8902mm         
0000545A  3212                    8903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000545C  E949                    8904mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000545E  E049                    8905mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005460  E849                    8906mm         LSR.W   #4, D1      
00005462                          8907mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005462  0C01 0009               8908mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005466  6E00 000A               8909mmm         BGT     ALPHA_695
0000546A  0601 0030               8910mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000546E  6000 0006               8911mmm         BRA     DONE_695
00005472  0601 0037               8912mmm ALPHA_695: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005476  4E71                    8913mmm DONE_695: NOP
00005478                          8914mmm         ENDM
00005478  4E4F                    8915mm         TRAP    #15         ; EXECUTE OUTPUT
0000547A                          8916mm         
0000547A  3212                    8917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000547C  E149                    8918mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000547E  E049                    8919mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005480  E849                    8920mm         LSR.W   #4, D1      
00005482                          8921mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005482  0C01 0009               8922mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005486  6E00 000A               8923mmm         BGT     ALPHA_696
0000548A  0601 0030               8924mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000548E  6000 0006               8925mmm         BRA     DONE_696
00005492  0601 0037               8926mmm ALPHA_696: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005496  4E71                    8927mmm DONE_696: NOP
00005498                          8928mmm         ENDM
00005498  4E4F                    8929mm         TRAP    #15         ; EXECUTE OUTPUT
0000549A                          8930mm         
0000549A  3212                    8931mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000549C  E149                    8932mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000549E  E949                    8933mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000054A0  E049                    8934mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000054A2  E849                    8935mm         LSR.W   #4, D1      
000054A4                          8936mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000054A4  0C01 0009               8937mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000054A8  6E00 000A               8938mmm         BGT     ALPHA_697
000054AC  0601 0030               8939mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000054B0  6000 0006               8940mmm         BRA     DONE_697
000054B4  0601 0037               8941mmm ALPHA_697: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000054B8  4E71                    8942mmm DONE_697: NOP
000054BA                          8943mmm         ENDM
000054BA  4E4F                    8944mm         TRAP    #15         ; EXECUTE OUTPUT   
000054BC                          8945mm         ENDM     
000054BC  3605                    8946m         MOVE.W  D5, D3
000054BE                          8947m 
000054BE                          8948m COMPLETE_635:  ; OPCODE HAS BEEN VERIFIED
000054BE                          8949m         ENDM
000054BE  6000 060C               8950          BRA     decodeANDcomp
000054C2                          8951  decodeAndDestOp:
000054C2                          8952m         prepareAdrMode  #$1,(A2)
000054C2  3C3C 0001               8953m         MOVE.W  #$1, D6      ; INPUT VALUE
000054C6  3212                    8954m         MOVE.W  (A2), D1
000054C8  BC3C 0001               8955m         CMP.B   #$01, D6
000054CC  6700 000C               8956m         BEQ     ADRSOURCE_698    
000054D0                          8957m ADRDEST_698:
000054D0  EF49                    8958m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000054D2  E049                    8959m         LSR     #$08, D1
000054D4  EA49                    8960m         LSR     #$05, D1
000054D6  6000 000A               8961m         BRA     COMPLETE_698 
000054DA                          8962m ADRSOURCE_698:                
000054DA  E149                    8963m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000054DC  E549                    8964m         LSL     #$02, D1
000054DE  E049                    8965m         LSR     #$08, D1
000054E0  EA49                    8966m         LSR     #$05, D1
000054E2                          8967m COMPLETE_698:  ; OPCODE HAS BEEN VERIFIED
000054E2                          8968m         ENDM        
000054E2                          8969m         decodeAdrMode   (A2), D1
000054E2  3612                    8970m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000054E4  3201                    8971m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000054E6                          8972m 
000054E6  B23C 0001               8973m         CMP.B   #$01, D1
000054EA  6700 0066               8974m         BEQ     ADRREGDIRECT_699    
000054EE  B23C 0002               8975m         CMP.B   #$02, D1
000054F2  6700 00A0               8976m         BEQ     ADRREGINDIRECT_699  
000054F6  B23C 0003               8977m         CMP.B   #$03, D1
000054FA  6700 0102               8978m         BEQ     ADRREGPOSTINC_699  
000054FE  B23C 0004               8979m         CMP.B   #$04, D1
00005502  6700 0178               8980m         BEQ     ADRREGPREDEC_699
00005506  B23C 0007               8981m         CMP.B   #$07, D1
0000550A  6700 01EE               8982m         BEQ     ADRABSOLUTE_699    
0000550E                          8983m         
0000550E                          8984m DATAREGDIRECT_699: 
0000550E  BC3C 0001               8985m         CMP.B   #$01, D6
00005512  6700 001E               8986m         BEQ     DATAREGDIRECTSRC_699   
00005516                          8987m DATAREGDIRECTDEST_699: 
00005516                          8988mm         PRINTDNDEST D3 
00005516  3203                    8989mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005518  E949                    8990mm         LSL     #$04, D1
0000551A  E049                    8991mm         LSR     #$08, D1
0000551C  EA49                    8992mm         LSR     #$05, D1
0000551E  43F8 00CC               8993mm         LEA     ODN, A1     
00005522  103C 000E               8994mm         MOVE.B  #14,D0          
00005526  4E4F                    8995mm         TRAP    #15
00005528  103C 0003               8996mm         MOVE.B  #3,D0          
0000552C  4E4F                    8997mm         TRAP    #15
0000552E                          8998mm         ENDM
0000552E  6000 057A               8999m         BRA     COMPLETE_699 
00005532                          9000m DATAREGDIRECTSRC_699: 
00005532                          9001mm         PRINTDNSRC D3 
00005532  4281                    9002mm         CLR.L   D1
00005534  3203                    9003mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005536  E149                    9004mm         LSL     #$08, D1
00005538  EB49                    9005mm         LSL     #$05, D1
0000553A  E049                    9006mm         LSR     #$08, D1
0000553C  EA49                    9007mm         LSR     #$05, D1
0000553E  43F8 00CC               9008mm         LEA     ODN, A1     
00005542  103C 000E               9009mm         MOVE.B  #14,D0          
00005546  4E4F                    9010mm         TRAP    #15
00005548  103C 0003               9011mm         MOVE.B  #3,D0          
0000554C  4E4F                    9012mm         TRAP    #15
0000554E                          9013mm         ENDM
0000554E  6000 055A               9014m         BRA     COMPLETE_699   
00005552                          9015m         
00005552                          9016m ADRREGDIRECT_699: 
00005552  BC3C 0001               9017m         CMP.B   #$01, D6
00005556  6700 001E               9018m         BEQ     ADRREGDIRECTSRC_699   
0000555A                          9019m ADRREGDIRECTDEST_699:
0000555A                          9020mm         PRINTANDEST D3
0000555A  3203                    9021mm         MOVE.W  D3, D1
0000555C  E949                    9022mm         LSL     #$04, D1 ; BITS 9 TO 11
0000555E  E049                    9023mm         LSR     #$08, D1
00005560  EA49                    9024mm         LSR     #$05, D1
00005562  43F8 00CE               9025mm         LEA     OAN, A1     
00005566  103C 000E               9026mm         MOVE.B  #14,D0          
0000556A  4E4F                    9027mm         TRAP    #15
0000556C  103C 0003               9028mm         MOVE.B  #3,D0          
00005570  4E4F                    9029mm         TRAP    #15
00005572                          9030mm         ENDM
00005572  6000 0536               9031m         BRA     COMPLETE_699   
00005576                          9032m ADRREGDIRECTSRC_699:
00005576                          9033mm         PRINTANSRC D3
00005576  3203                    9034mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005578  E149                    9035mm         LSL     #$08, D1
0000557A  EB49                    9036mm         LSL     #$05, D1
0000557C  E049                    9037mm         LSR     #$08, D1
0000557E  EA49                    9038mm         LSR     #$05, D1
00005580  43F8 00CE               9039mm         LEA     OAN, A1     
00005584  103C 000E               9040mm         MOVE.B  #14,D0          
00005588  4E4F                    9041mm         TRAP    #15
0000558A  103C 0003               9042mm         MOVE.B  #3,D0          
0000558E  4E4F                    9043mm         TRAP    #15
00005590                          9044mm         ENDM
00005590  6000 0518               9045m         BRA     COMPLETE_699   
00005594                          9046m        
00005594                          9047m ADRREGINDIRECT_699:   
00005594  BC3C 0001               9048m         CMP.B   #$01, D6
00005598  6700 0032               9049m         BEQ     ADRREGINDIRECTSRC_699   
0000559C                          9050m ADRREGINDIRECTDEST_699:
0000559C                          9051mm         PRINTLB
0000559C  43F8 00D0               9052mm         LEA     OLB, A1     
000055A0  103C 000E               9053mm         MOVE.B  #14,D0          
000055A4  4E4F                    9054mm         TRAP    #15
000055A6                          9055mm         ENDM
000055A6                          9056mm         PRINTANDEST D3  
000055A6  3203                    9057mm         MOVE.W  D3, D1
000055A8  E949                    9058mm         LSL     #$04, D1 ; BITS 9 TO 11
000055AA  E049                    9059mm         LSR     #$08, D1
000055AC  EA49                    9060mm         LSR     #$05, D1
000055AE  43F8 00CE               9061mm         LEA     OAN, A1     
000055B2  103C 000E               9062mm         MOVE.B  #14,D0          
000055B6  4E4F                    9063mm         TRAP    #15
000055B8  103C 0003               9064mm         MOVE.B  #3,D0          
000055BC  4E4F                    9065mm         TRAP    #15
000055BE                          9066mm         ENDM
000055BE                          9067mm         PRINTRB
000055BE  43F8 00D2               9068mm         LEA     ORB, A1     
000055C2  103C 000E               9069mm         MOVE.B  #14,D0          
000055C6  4E4F                    9070mm         TRAP    #15
000055C8                          9071mm         ENDM
000055C8  6000 04E0               9072m         BRA     COMPLETE_699     
000055CC                          9073m ADRREGINDIRECTSRC_699:   
000055CC                          9074mm         PRINTLB
000055CC  43F8 00D0               9075mm         LEA     OLB, A1     
000055D0  103C 000E               9076mm         MOVE.B  #14,D0          
000055D4  4E4F                    9077mm         TRAP    #15
000055D6                          9078mm         ENDM
000055D6                          9079mm         PRINTANSRC D3  
000055D6  3203                    9080mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000055D8  E149                    9081mm         LSL     #$08, D1
000055DA  EB49                    9082mm         LSL     #$05, D1
000055DC  E049                    9083mm         LSR     #$08, D1
000055DE  EA49                    9084mm         LSR     #$05, D1
000055E0  43F8 00CE               9085mm         LEA     OAN, A1     
000055E4  103C 000E               9086mm         MOVE.B  #14,D0          
000055E8  4E4F                    9087mm         TRAP    #15
000055EA  103C 0003               9088mm         MOVE.B  #3,D0          
000055EE  4E4F                    9089mm         TRAP    #15
000055F0                          9090mm         ENDM
000055F0                          9091mm         PRINTRB
000055F0  43F8 00D2               9092mm         LEA     ORB, A1     
000055F4  103C 000E               9093mm         MOVE.B  #14,D0          
000055F8  4E4F                    9094mm         TRAP    #15
000055FA                          9095mm         ENDM
000055FA  6000 04AE               9096m         BRA     COMPLETE_699   
000055FE                          9097m         
000055FE                          9098m ADRREGPOSTINC_699:   
000055FE  BC3C 0001               9099m         CMP.B   #$01, D6
00005602  6700 003C               9100m         BEQ     ADRREGPOSTINCSRC_699   
00005606                          9101m ADRREGPOSTINCDEST_699: 
00005606                          9102mm         PRINTLB
00005606  43F8 00D0               9103mm         LEA     OLB, A1     
0000560A  103C 000E               9104mm         MOVE.B  #14,D0          
0000560E  4E4F                    9105mm         TRAP    #15
00005610                          9106mm         ENDM
00005610                          9107mm         PRINTANDEST D3  
00005610  3203                    9108mm         MOVE.W  D3, D1
00005612  E949                    9109mm         LSL     #$04, D1 ; BITS 9 TO 11
00005614  E049                    9110mm         LSR     #$08, D1
00005616  EA49                    9111mm         LSR     #$05, D1
00005618  43F8 00CE               9112mm         LEA     OAN, A1     
0000561C  103C 000E               9113mm         MOVE.B  #14,D0          
00005620  4E4F                    9114mm         TRAP    #15
00005622  103C 0003               9115mm         MOVE.B  #3,D0          
00005626  4E4F                    9116mm         TRAP    #15
00005628                          9117mm         ENDM
00005628                          9118mm         PRINTRB
00005628  43F8 00D2               9119mm         LEA     ORB, A1     
0000562C  103C 000E               9120mm         MOVE.B  #14,D0          
00005630  4E4F                    9121mm         TRAP    #15
00005632                          9122mm         ENDM
00005632                          9123mm         PRINTPI
00005632  43F8 00D9               9124mm         LEA     OPSTINC, A1     
00005636  103C 000E               9125mm         MOVE.B  #14,D0          
0000563A  4E4F                    9126mm         TRAP    #15
0000563C                          9127mm         ENDM
0000563C  6000 046C               9128m         BRA     COMPLETE_699  
00005640                          9129m ADRREGPOSTINCSRC_699:           
00005640                          9130mm         PRINTLB
00005640  43F8 00D0               9131mm         LEA     OLB, A1     
00005644  103C 000E               9132mm         MOVE.B  #14,D0          
00005648  4E4F                    9133mm         TRAP    #15
0000564A                          9134mm         ENDM
0000564A                          9135mm         PRINTANSRC D3  
0000564A  3203                    9136mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000564C  E149                    9137mm         LSL     #$08, D1
0000564E  EB49                    9138mm         LSL     #$05, D1
00005650  E049                    9139mm         LSR     #$08, D1
00005652  EA49                    9140mm         LSR     #$05, D1
00005654  43F8 00CE               9141mm         LEA     OAN, A1     
00005658  103C 000E               9142mm         MOVE.B  #14,D0          
0000565C  4E4F                    9143mm         TRAP    #15
0000565E  103C 0003               9144mm         MOVE.B  #3,D0          
00005662  4E4F                    9145mm         TRAP    #15
00005664                          9146mm         ENDM
00005664                          9147mm         PRINTRB
00005664  43F8 00D2               9148mm         LEA     ORB, A1     
00005668  103C 000E               9149mm         MOVE.B  #14,D0          
0000566C  4E4F                    9150mm         TRAP    #15
0000566E                          9151mm         ENDM
0000566E                          9152mm         PRINTPI
0000566E  43F8 00D9               9153mm         LEA     OPSTINC, A1     
00005672  103C 000E               9154mm         MOVE.B  #14,D0          
00005676  4E4F                    9155mm         TRAP    #15
00005678                          9156mm         ENDM
00005678  6000 0430               9157m         BRA     COMPLETE_699  
0000567C                          9158m ADRREGPREDEC_699: 
0000567C  BC3C 0001               9159m         CMP.B   #$01, D6
00005680  6700 003C               9160m         BEQ     ADRREGPREDECSRC_699   
00005684                          9161m ADRREGPREDECDEST_699:
00005684                          9162mm         PRINTPD  
00005684  43F8 00D7               9163mm         LEA     OPREDEC, A1     
00005688  103C 000E               9164mm         MOVE.B  #14,D0          
0000568C  4E4F                    9165mm         TRAP    #15
0000568E                          9166mm         ENDM
0000568E                          9167mm         PRINTLB
0000568E  43F8 00D0               9168mm         LEA     OLB, A1     
00005692  103C 000E               9169mm         MOVE.B  #14,D0          
00005696  4E4F                    9170mm         TRAP    #15
00005698                          9171mm         ENDM
00005698                          9172mm         PRINTANDEST D3  
00005698  3203                    9173mm         MOVE.W  D3, D1
0000569A  E949                    9174mm         LSL     #$04, D1 ; BITS 9 TO 11
0000569C  E049                    9175mm         LSR     #$08, D1
0000569E  EA49                    9176mm         LSR     #$05, D1
000056A0  43F8 00CE               9177mm         LEA     OAN, A1     
000056A4  103C 000E               9178mm         MOVE.B  #14,D0          
000056A8  4E4F                    9179mm         TRAP    #15
000056AA  103C 0003               9180mm         MOVE.B  #3,D0          
000056AE  4E4F                    9181mm         TRAP    #15
000056B0                          9182mm         ENDM
000056B0                          9183mm         PRINTRB
000056B0  43F8 00D2               9184mm         LEA     ORB, A1     
000056B4  103C 000E               9185mm         MOVE.B  #14,D0          
000056B8  4E4F                    9186mm         TRAP    #15
000056BA                          9187mm         ENDM
000056BA  6000 03EE               9188m         BRA     COMPLETE_699   
000056BE                          9189m ADRREGPREDECSRC_699: 
000056BE                          9190mm         PRINTPD  
000056BE  43F8 00D7               9191mm         LEA     OPREDEC, A1     
000056C2  103C 000E               9192mm         MOVE.B  #14,D0          
000056C6  4E4F                    9193mm         TRAP    #15
000056C8                          9194mm         ENDM
000056C8                          9195mm         PRINTLB
000056C8  43F8 00D0               9196mm         LEA     OLB, A1     
000056CC  103C 000E               9197mm         MOVE.B  #14,D0          
000056D0  4E4F                    9198mm         TRAP    #15
000056D2                          9199mm         ENDM
000056D2                          9200mm         PRINTANSRC D3  
000056D2  3203                    9201mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000056D4  E149                    9202mm         LSL     #$08, D1
000056D6  EB49                    9203mm         LSL     #$05, D1
000056D8  E049                    9204mm         LSR     #$08, D1
000056DA  EA49                    9205mm         LSR     #$05, D1
000056DC  43F8 00CE               9206mm         LEA     OAN, A1     
000056E0  103C 000E               9207mm         MOVE.B  #14,D0          
000056E4  4E4F                    9208mm         TRAP    #15
000056E6  103C 0003               9209mm         MOVE.B  #3,D0          
000056EA  4E4F                    9210mm         TRAP    #15
000056EC                          9211mm         ENDM
000056EC                          9212mm         PRINTRB
000056EC  43F8 00D2               9213mm         LEA     ORB, A1     
000056F0  103C 000E               9214mm         MOVE.B  #14,D0          
000056F4  4E4F                    9215mm         TRAP    #15
000056F6                          9216mm         ENDM
000056F6  6000 03B2               9217m         BRA     COMPLETE_699
000056FA                          9218m        
000056FA                          9219m ADRABSOLUTE_699:
000056FA  BC3C 0001               9220m         CMP.B   #$01, D6
000056FE  6600 0018               9221m         BNE     ADRABSOLUTEDST_699 
00005702                          9222m         
00005702  3A03                    9223m         MOVE.W  D3, D5
00005704  0803 0002               9224m         BTST    #2, D3
00005708  6600 0024               9225m         BNE     ADRIMMEDIATE_699
0000570C  0803 0000               9226m         BTST    #0, D3
00005710  6600 0280               9227m         BNE     ADRABSOLUTEL_699
00005714  6000 01E6               9228m         BRA     ADRABSOLUTEW_699
00005718                          9229m ADRABSOLUTEDST_699:
00005718  3A03                    9230m         MOVE.W  D3, D5
0000571A  0803 000B               9231m         BTST    #$B, D3
0000571E  6600 000E               9232m         BNE     ADRIMMEDIATE_699
00005722  0803 0009               9233m         BTST    #$09, D3
00005726  6600 026A               9234m         BNE     ADRABSOLUTEL_699
0000572A  6000 01D0               9235m         BRA     ADRABSOLUTEW_699
0000572E                          9236m ADRIMMEDIATE_699:
0000572E  BE3C 0001               9237m         CMP.B   #1, D7
00005732  6700 00A2               9238m         BEQ     ADRIMMEDIATEL_699
00005736                          9239m ADRIMMEDIATEW_699:
00005736  361A                    9240m         MOVE.W  (A2)+, D3
00005738                          9241mm         PRINTHASH
00005738  103C 0006               9242mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000573C  323C 0023               9243mm         MOVE.W  #35, D1     ; AN = SIGN
00005740  4E4F                    9244mm         TRAP    #15         ; OUTPUT = SIGN
00005742                          9245mm         ENDM
00005742                          9246mm         PRINTSIGN
00005742  103C 0006               9247mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005746  323C 0024               9248mm         MOVE.W  #36, D1     ; AN = SIGN
0000574A  4E4F                    9249mm         TRAP    #15         ; OUTPUT = SIGN
0000574C                          9250mm         ENDM
0000574C                          9251mm         ADROUT
0000574C  103C 0006               9252mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005750  3212                    9253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005752  E049                    9254mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005754  E849                    9255mm         LSR.W   #4, D1      
00005756                          9256mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005756  0C01 0009               9257mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000575A  6E00 000A               9258mmm         BGT     ALPHA_729
0000575E  0601 0030               9259mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005762  6000 0006               9260mmm         BRA     DONE_729
00005766  0601 0037               9261mmm ALPHA_729: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000576A  4E71                    9262mmm DONE_729: NOP
0000576C                          9263mmm         ENDM
0000576C  4E4F                    9264mm         TRAP    #15         ; EXECUTE OUTPUT
0000576E                          9265mm         
0000576E  3212                    9266mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005770  E949                    9267mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005772  E049                    9268mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005774  E849                    9269mm         LSR.W   #4, D1      
00005776                          9270mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005776  0C01 0009               9271mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000577A  6E00 000A               9272mmm         BGT     ALPHA_730
0000577E  0601 0030               9273mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005782  6000 0006               9274mmm         BRA     DONE_730
00005786  0601 0037               9275mmm ALPHA_730: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000578A  4E71                    9276mmm DONE_730: NOP
0000578C                          9277mmm         ENDM
0000578C  4E4F                    9278mm         TRAP    #15         ; EXECUTE OUTPUT
0000578E                          9279mm         
0000578E  3212                    9280mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005790  E149                    9281mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005792  E049                    9282mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005794  E849                    9283mm         LSR.W   #4, D1      
00005796                          9284mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005796  0C01 0009               9285mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000579A  6E00 000A               9286mmm         BGT     ALPHA_731
0000579E  0601 0030               9287mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057A2  6000 0006               9288mmm         BRA     DONE_731
000057A6  0601 0037               9289mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057AA  4E71                    9290mmm DONE_731: NOP
000057AC                          9291mmm         ENDM
000057AC  4E4F                    9292mm         TRAP    #15         ; EXECUTE OUTPUT
000057AE                          9293mm         
000057AE  3212                    9294mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057B0  E149                    9295mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057B2  E949                    9296mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000057B4  E049                    9297mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057B6  E849                    9298mm         LSR.W   #4, D1      
000057B8                          9299mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057B8  0C01 0009               9300mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057BC  6E00 000A               9301mmm         BGT     ALPHA_732
000057C0  0601 0030               9302mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057C4  6000 0006               9303mmm         BRA     DONE_732
000057C8  0601 0037               9304mmm ALPHA_732: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057CC  4E71                    9305mmm DONE_732: NOP
000057CE                          9306mmm         ENDM
000057CE  4E4F                    9307mm         TRAP    #15         ; EXECUTE OUTPUT   
000057D0                          9308mm         ENDM     
000057D0  3605                    9309m         MOVE.W  D5, D3
000057D2  6000 02D6               9310m         BRA     COMPLETE_699
000057D6                          9311m ADRIMMEDIATEL_699:
000057D6  361A                    9312m         MOVE.W  (A2)+, D3
000057D8                          9313mm         PRINTHASH
000057D8  103C 0006               9314mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057DC  323C 0023               9315mm         MOVE.W  #35, D1     ; AN = SIGN
000057E0  4E4F                    9316mm         TRAP    #15         ; OUTPUT = SIGN
000057E2                          9317mm         ENDM
000057E2                          9318mm         PRINTSIGN
000057E2  103C 0006               9319mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057E6  323C 0024               9320mm         MOVE.W  #36, D1     ; AN = SIGN
000057EA  4E4F                    9321mm         TRAP    #15         ; OUTPUT = SIGN
000057EC                          9322mm         ENDM
000057EC                          9323mm         ADROUT 
000057EC  103C 0006               9324mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057F0  3212                    9325mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057F2  E049                    9326mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057F4  E849                    9327mm         LSR.W   #4, D1      
000057F6                          9328mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057F6  0C01 0009               9329mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057FA  6E00 000A               9330mmm         BGT     ALPHA_736
000057FE  0601 0030               9331mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005802  6000 0006               9332mmm         BRA     DONE_736
00005806  0601 0037               9333mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000580A  4E71                    9334mmm DONE_736: NOP
0000580C                          9335mmm         ENDM
0000580C  4E4F                    9336mm         TRAP    #15         ; EXECUTE OUTPUT
0000580E                          9337mm         
0000580E  3212                    9338mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005810  E949                    9339mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005812  E049                    9340mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005814  E849                    9341mm         LSR.W   #4, D1      
00005816                          9342mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005816  0C01 0009               9343mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000581A  6E00 000A               9344mmm         BGT     ALPHA_737
0000581E  0601 0030               9345mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005822  6000 0006               9346mmm         BRA     DONE_737
00005826  0601 0037               9347mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000582A  4E71                    9348mmm DONE_737: NOP
0000582C                          9349mmm         ENDM
0000582C  4E4F                    9350mm         TRAP    #15         ; EXECUTE OUTPUT
0000582E                          9351mm         
0000582E  3212                    9352mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005830  E149                    9353mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005832  E049                    9354mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005834  E849                    9355mm         LSR.W   #4, D1      
00005836                          9356mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005836  0C01 0009               9357mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000583A  6E00 000A               9358mmm         BGT     ALPHA_738
0000583E  0601 0030               9359mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005842  6000 0006               9360mmm         BRA     DONE_738
00005846  0601 0037               9361mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000584A  4E71                    9362mmm DONE_738: NOP
0000584C                          9363mmm         ENDM
0000584C  4E4F                    9364mm         TRAP    #15         ; EXECUTE OUTPUT
0000584E                          9365mm         
0000584E  3212                    9366mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005850  E149                    9367mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005852  E949                    9368mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005854  E049                    9369mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005856  E849                    9370mm         LSR.W   #4, D1      
00005858                          9371mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005858  0C01 0009               9372mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000585C  6E00 000A               9373mmm         BGT     ALPHA_739
00005860  0601 0030               9374mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005864  6000 0006               9375mmm         BRA     DONE_739
00005868  0601 0037               9376mmm ALPHA_739: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000586C  4E71                    9377mmm DONE_739: NOP
0000586E                          9378mmm         ENDM
0000586E  4E4F                    9379mm         TRAP    #15         ; EXECUTE OUTPUT   
00005870                          9380mm         ENDM     
00005870  361A                    9381m         MOVE.W  (A2)+, D3
00005872                          9382mm         ADROUT
00005872  103C 0006               9383mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005876  3212                    9384mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005878  E049                    9385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000587A  E849                    9386mm         LSR.W   #4, D1      
0000587C                          9387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000587C  0C01 0009               9388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005880  6E00 000A               9389mmm         BGT     ALPHA_741
00005884  0601 0030               9390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005888  6000 0006               9391mmm         BRA     DONE_741
0000588C  0601 0037               9392mmm ALPHA_741: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005890  4E71                    9393mmm DONE_741: NOP
00005892                          9394mmm         ENDM
00005892  4E4F                    9395mm         TRAP    #15         ; EXECUTE OUTPUT
00005894                          9396mm         
00005894  3212                    9397mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005896  E949                    9398mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005898  E049                    9399mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000589A  E849                    9400mm         LSR.W   #4, D1      
0000589C                          9401mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000589C  0C01 0009               9402mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058A0  6E00 000A               9403mmm         BGT     ALPHA_742
000058A4  0601 0030               9404mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A8  6000 0006               9405mmm         BRA     DONE_742
000058AC  0601 0037               9406mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058B0  4E71                    9407mmm DONE_742: NOP
000058B2                          9408mmm         ENDM
000058B2  4E4F                    9409mm         TRAP    #15         ; EXECUTE OUTPUT
000058B4                          9410mm         
000058B4  3212                    9411mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B6  E149                    9412mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058B8  E049                    9413mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058BA  E849                    9414mm         LSR.W   #4, D1      
000058BC                          9415mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058BC  0C01 0009               9416mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058C0  6E00 000A               9417mmm         BGT     ALPHA_743
000058C4  0601 0030               9418mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C8  6000 0006               9419mmm         BRA     DONE_743
000058CC  0601 0037               9420mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058D0  4E71                    9421mmm DONE_743: NOP
000058D2                          9422mmm         ENDM
000058D2  4E4F                    9423mm         TRAP    #15         ; EXECUTE OUTPUT
000058D4                          9424mm         
000058D4  3212                    9425mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058D6  E149                    9426mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058D8  E949                    9427mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000058DA  E049                    9428mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058DC  E849                    9429mm         LSR.W   #4, D1      
000058DE                          9430mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058DE  0C01 0009               9431mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058E2  6E00 000A               9432mmm         BGT     ALPHA_744
000058E6  0601 0030               9433mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058EA  6000 0006               9434mmm         BRA     DONE_744
000058EE  0601 0037               9435mmm ALPHA_744: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058F2  4E71                    9436mmm DONE_744: NOP
000058F4                          9437mmm         ENDM
000058F4  4E4F                    9438mm         TRAP    #15         ; EXECUTE OUTPUT   
000058F6                          9439mm         ENDM     
000058F6  3605                    9440m         MOVE.W  D5, D3
000058F8  6000 01B0               9441m         BRA     COMPLETE_699 
000058FC                          9442m ADRABSOLUTEW_699:     
000058FC  361A                    9443m         MOVE.W  (A2)+, D3
000058FE                          9444mm         PRINTSIGN
000058FE  103C 0006               9445mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005902  323C 0024               9446mm         MOVE.W  #36, D1     ; AN = SIGN
00005906  4E4F                    9447mm         TRAP    #15         ; OUTPUT = SIGN
00005908                          9448mm         ENDM
00005908                          9449mm         ADROUT
00005908  103C 0006               9450mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000590C  3212                    9451mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000590E  E049                    9452mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005910  E849                    9453mm         LSR.W   #4, D1      
00005912                          9454mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005912  0C01 0009               9455mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005916  6E00 000A               9456mmm         BGT     ALPHA_747
0000591A  0601 0030               9457mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000591E  6000 0006               9458mmm         BRA     DONE_747
00005922  0601 0037               9459mmm ALPHA_747: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005926  4E71                    9460mmm DONE_747: NOP
00005928                          9461mmm         ENDM
00005928  4E4F                    9462mm         TRAP    #15         ; EXECUTE OUTPUT
0000592A                          9463mm         
0000592A  3212                    9464mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000592C  E949                    9465mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000592E  E049                    9466mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005930  E849                    9467mm         LSR.W   #4, D1      
00005932                          9468mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005932  0C01 0009               9469mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005936  6E00 000A               9470mmm         BGT     ALPHA_748
0000593A  0601 0030               9471mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000593E  6000 0006               9472mmm         BRA     DONE_748
00005942  0601 0037               9473mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005946  4E71                    9474mmm DONE_748: NOP
00005948                          9475mmm         ENDM
00005948  4E4F                    9476mm         TRAP    #15         ; EXECUTE OUTPUT
0000594A                          9477mm         
0000594A  3212                    9478mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000594C  E149                    9479mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000594E  E049                    9480mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005950  E849                    9481mm         LSR.W   #4, D1      
00005952                          9482mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005952  0C01 0009               9483mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005956  6E00 000A               9484mmm         BGT     ALPHA_749
0000595A  0601 0030               9485mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000595E  6000 0006               9486mmm         BRA     DONE_749
00005962  0601 0037               9487mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005966  4E71                    9488mmm DONE_749: NOP
00005968                          9489mmm         ENDM
00005968  4E4F                    9490mm         TRAP    #15         ; EXECUTE OUTPUT
0000596A                          9491mm         
0000596A  3212                    9492mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000596C  E149                    9493mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000596E  E949                    9494mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005970  E049                    9495mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005972  E849                    9496mm         LSR.W   #4, D1      
00005974                          9497mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005974  0C01 0009               9498mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005978  6E00 000A               9499mmm         BGT     ALPHA_750
0000597C  0601 0030               9500mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005980  6000 0006               9501mmm         BRA     DONE_750
00005984  0601 0037               9502mmm ALPHA_750: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005988  4E71                    9503mmm DONE_750: NOP
0000598A                          9504mmm         ENDM
0000598A  4E4F                    9505mm         TRAP    #15         ; EXECUTE OUTPUT   
0000598C                          9506mm         ENDM     
0000598C  3605                    9507m         MOVE.W  D5, D3
0000598E  6000 011A               9508m         BRA     COMPLETE_699  
00005992                          9509m ADRABSOLUTEL_699:  
00005992  361A                    9510m         MOVE.W  (A2)+, D3
00005994                          9511mm         PRINTSIGN
00005994  103C 0006               9512mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005998  323C 0024               9513mm         MOVE.W  #36, D1     ; AN = SIGN
0000599C  4E4F                    9514mm         TRAP    #15         ; OUTPUT = SIGN
0000599E                          9515mm         ENDM
0000599E                          9516mm         ADROUT 
0000599E  103C 0006               9517mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000059A2  3212                    9518mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059A4  E049                    9519mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059A6  E849                    9520mm         LSR.W   #4, D1      
000059A8                          9521mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059A8  0C01 0009               9522mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059AC  6E00 000A               9523mmm         BGT     ALPHA_753
000059B0  0601 0030               9524mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059B4  6000 0006               9525mmm         BRA     DONE_753
000059B8  0601 0037               9526mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059BC  4E71                    9527mmm DONE_753: NOP
000059BE                          9528mmm         ENDM
000059BE  4E4F                    9529mm         TRAP    #15         ; EXECUTE OUTPUT
000059C0                          9530mm         
000059C0  3212                    9531mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059C2  E949                    9532mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000059C4  E049                    9533mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059C6  E849                    9534mm         LSR.W   #4, D1      
000059C8                          9535mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059C8  0C01 0009               9536mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059CC  6E00 000A               9537mmm         BGT     ALPHA_754
000059D0  0601 0030               9538mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059D4  6000 0006               9539mmm         BRA     DONE_754
000059D8  0601 0037               9540mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059DC  4E71                    9541mmm DONE_754: NOP
000059DE                          9542mmm         ENDM
000059DE  4E4F                    9543mm         TRAP    #15         ; EXECUTE OUTPUT
000059E0                          9544mm         
000059E0  3212                    9545mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059E2  E149                    9546mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000059E4  E049                    9547mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059E6  E849                    9548mm         LSR.W   #4, D1      
000059E8                          9549mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059E8  0C01 0009               9550mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059EC  6E00 000A               9551mmm         BGT     ALPHA_755
000059F0  0601 0030               9552mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059F4  6000 0006               9553mmm         BRA     DONE_755
000059F8  0601 0037               9554mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059FC  4E71                    9555mmm DONE_755: NOP
000059FE                          9556mmm         ENDM
000059FE  4E4F                    9557mm         TRAP    #15         ; EXECUTE OUTPUT
00005A00                          9558mm         
00005A00  3212                    9559mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A02  E149                    9560mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A04  E949                    9561mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005A06  E049                    9562mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A08  E849                    9563mm         LSR.W   #4, D1      
00005A0A                          9564mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A0A  0C01 0009               9565mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A0E  6E00 000A               9566mmm         BGT     ALPHA_756
00005A12  0601 0030               9567mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A16  6000 0006               9568mmm         BRA     DONE_756
00005A1A  0601 0037               9569mmm ALPHA_756: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A1E  4E71                    9570mmm DONE_756: NOP
00005A20                          9571mmm         ENDM
00005A20  4E4F                    9572mm         TRAP    #15         ; EXECUTE OUTPUT   
00005A22                          9573mm         ENDM     
00005A22  361A                    9574m         MOVE.W  (A2)+, D3
00005A24                          9575mm         ADROUT
00005A24  103C 0006               9576mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005A28  3212                    9577mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A2A  E049                    9578mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A2C  E849                    9579mm         LSR.W   #4, D1      
00005A2E                          9580mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A2E  0C01 0009               9581mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A32  6E00 000A               9582mmm         BGT     ALPHA_758
00005A36  0601 0030               9583mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A3A  6000 0006               9584mmm         BRA     DONE_758
00005A3E  0601 0037               9585mmm ALPHA_758: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A42  4E71                    9586mmm DONE_758: NOP
00005A44                          9587mmm         ENDM
00005A44  4E4F                    9588mm         TRAP    #15         ; EXECUTE OUTPUT
00005A46                          9589mm         
00005A46  3212                    9590mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A48  E949                    9591mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005A4A  E049                    9592mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A4C  E849                    9593mm         LSR.W   #4, D1      
00005A4E                          9594mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A4E  0C01 0009               9595mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A52  6E00 000A               9596mmm         BGT     ALPHA_759
00005A56  0601 0030               9597mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A5A  6000 0006               9598mmm         BRA     DONE_759
00005A5E  0601 0037               9599mmm ALPHA_759: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A62  4E71                    9600mmm DONE_759: NOP
00005A64                          9601mmm         ENDM
00005A64  4E4F                    9602mm         TRAP    #15         ; EXECUTE OUTPUT
00005A66                          9603mm         
00005A66  3212                    9604mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A68  E149                    9605mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A6A  E049                    9606mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A6C  E849                    9607mm         LSR.W   #4, D1      
00005A6E                          9608mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A6E  0C01 0009               9609mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A72  6E00 000A               9610mmm         BGT     ALPHA_760
00005A76  0601 0030               9611mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A7A  6000 0006               9612mmm         BRA     DONE_760
00005A7E  0601 0037               9613mmm ALPHA_760: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A82  4E71                    9614mmm DONE_760: NOP
00005A84                          9615mmm         ENDM
00005A84  4E4F                    9616mm         TRAP    #15         ; EXECUTE OUTPUT
00005A86                          9617mm         
00005A86  3212                    9618mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A88  E149                    9619mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A8A  E949                    9620mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005A8C  E049                    9621mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A8E  E849                    9622mm         LSR.W   #4, D1      
00005A90                          9623mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A90  0C01 0009               9624mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A94  6E00 000A               9625mmm         BGT     ALPHA_761
00005A98  0601 0030               9626mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A9C  6000 0006               9627mmm         BRA     DONE_761
00005AA0  0601 0037               9628mmm ALPHA_761: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005AA4  4E71                    9629mmm DONE_761: NOP
00005AA6                          9630mmm         ENDM
00005AA6  4E4F                    9631mm         TRAP    #15         ; EXECUTE OUTPUT   
00005AA8                          9632mm         ENDM     
00005AA8  3605                    9633m         MOVE.W  D5, D3
00005AAA                          9634m 
00005AAA                          9635m COMPLETE_699:  ; OPCODE HAS BEEN VERIFIED
00005AAA                          9636m         ENDM
00005AAA                          9637m         printComma
00005AAA  43F8 00D4               9638m         LEA     OCOMMA, A1     
00005AAE  103C 000E               9639m         MOVE.B  #14,D0          
00005AB2  4E4F                    9640m         TRAP    #15
00005AB4                          9641m         ENDM
00005AB4                          9642m         printDnDest     (A2)
00005AB4  3212                    9643m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005AB6  E949                    9644m         LSL     #$04, D1
00005AB8  E049                    9645m         LSR     #$08, D1
00005ABA  EA49                    9646m         LSR     #$05, D1
00005ABC  43F8 00CC               9647m         LEA     ODN, A1     
00005AC0  103C 000E               9648m         MOVE.B  #14,D0          
00005AC4  4E4F                    9649m         TRAP    #15
00005AC6  103C 0003               9650m         MOVE.B  #3,D0          
00005ACA  4E4F                    9651m         TRAP    #15
00005ACC                          9652m         ENDM
00005ACC                          9653  decodeANDcomp:
00005ACC  4E75                    9654          RTS                ; Return from decodeANDcomp subroutine
00005ACE                          9655  
00005ACE                          9656  
00005ACE                          9657  ; ------------------------------------------------------------
00005ACE                          9658  ; 10. "decodeNOT" subroutine
00005ACE                          9659  ; Gary
00005ACE                          9660  ;
00005ACE                          9661  ; Decodes not by verifying, printing in a formatted form,
00005ACE                          9662  ; then decoding adressing modes and outputing them in formatted form.
00005ACE                          9663  ; ------------------------------------------------------------
00005ACE                          9664  decodeNOT:
00005ACE                          9665m         verifyOpcode    pNOT, (A2)
00005ACE  43F8 0197               9666m         LEA     PNOT, A1      ; INPUT PATTERN STRING
00005AD2  3612                    9667m         MOVE.W  (A2), D3      ; INPUT VALUE
00005AD4  123C 000F               9668m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005AD8                          9669m         
00005AD8                          9670m LOOP_764: 
00005AD8  0C11 0030               9671m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005ADC  6700 000E               9672m         BEQ     CHECKFOR0_764
00005AE0  0C11 0031               9673m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005AE4  6700 0010               9674m         BEQ     CHECKFOR1_764
00005AE8  6000 0012               9675m         BRA     NEXT_764      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005AEC                          9676m         
00005AEC                          9677m CHECKFOR0_764: 
00005AEC  0303                    9678m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005AEE  6600 1CB2               9679m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005AF2  6000 0008               9680m         BRA     NEXT_764
00005AF6                          9681m 
00005AF6                          9682m CHECKFOR1_764:
00005AF6  0303                    9683m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005AF8  6700 1CA8               9684m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005AFC                          9685m 
00005AFC                          9686m NEXT_764: 
00005AFC  B23C 0000               9687m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005B00  6700 0008               9688m         BEQ     COMPLETE_764  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005B04  5301                    9689m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005B06  1819                    9690m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005B08  60CE                    9691m         BRA     LOOP_764      ; BEGIN LOOP AGAIN
00005B0A                          9692m 
00005B0A                          9693m COMPLETE_764:  ; OPCODE HAS BEEN VERIFIED
00005B0A                          9694m         ENDM
00005B0A  0812 000B               9695          BTST    #$B, (A2)
00005B0E  6600 C4C0               9696          BNE     decodeMOVEM
00005B12  0812 000C               9697          BTST    #$C, (A2)
00005B16  6600 C4B8               9698          BNE     decodeMOVEM ;Second verification step
00005B1A                          9699          
00005B1A  43F8 0094               9700          LEA     oNOT, A1     
00005B1E  103C 000E               9701          MOVE.B  #14,D0          
00005B22  4E4F                    9702          TRAP    #15
00005B24                          9703          
00005B24                          9704m         printSizeLow       (A2)
00005B24  3612                    9705m         MOVE.W  (A2), D3      ; INPUT VALUE   
00005B26  4247                    9706m         CLR     D7   
00005B28                          9707m CHECKFORB_765: 
00005B28  0803 0006               9708m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00005B2C  6600 0018               9709m         BNE     CHECKFORW_765  ; IF NOT GO TO WORD SIZE
00005B30  0803 0007               9710m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00005B34  6600 001E               9711m         BNE     CHECKFORL_765 ; IF NOT GO TO LONGWORD SIZE
00005B38  43F8 00C0               9712m         LEA     OBSIZE, A1     
00005B3C  103C 000E               9713m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B40  4E4F                    9714m         TRAP    #15
00005B42  6000 001E               9715m         BRA     COMPLETE_765      
00005B46                          9716m CHECKFORW_765: 
00005B46  43F8 00C4               9717m         LEA     OWSIZE, A1     
00005B4A  103C 000E               9718m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00005B4E  4E4F                    9719m         TRAP    #15
00005B50  6000 0010               9720m         BRA     COMPLETE_765  
00005B54                          9721m CHECKFORL_765:
00005B54  1E3C 0001               9722m         MOVE.B  #$1, D7
00005B58  43F8 00C8               9723m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00005B5C  103C 000E               9724m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B60  4E4F                    9725m         TRAP    #15
00005B62                          9726m COMPLETE_765:  ; SIZE HAS BEEN PRINTED
00005B62                          9727m         ENDM
00005B62                          9728m         prepareAdrMode  #$1, (A2)
00005B62  3C3C 0001               9729m         MOVE.W  #$1, D6      ; INPUT VALUE
00005B66  3212                    9730m         MOVE.W  (A2), D1
00005B68  BC3C 0001               9731m         CMP.B   #$01, D6
00005B6C  6700 000C               9732m         BEQ     ADRSOURCE_766    
00005B70                          9733m ADRDEST_766:
00005B70  EF49                    9734m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005B72  E049                    9735m         LSR     #$08, D1
00005B74  EA49                    9736m         LSR     #$05, D1
00005B76  6000 000A               9737m         BRA     COMPLETE_766 
00005B7A                          9738m ADRSOURCE_766:                
00005B7A  E149                    9739m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00005B7C  E549                    9740m         LSL     #$02, D1
00005B7E  E049                    9741m         LSR     #$08, D1
00005B80  EA49                    9742m         LSR     #$05, D1
00005B82                          9743m COMPLETE_766:  ; OPCODE HAS BEEN VERIFIED
00005B82                          9744m         ENDM        
00005B82                          9745m         decodeAdrMode   (A2), D1
00005B82  3612                    9746m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005B84  3201                    9747m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005B86                          9748m 
00005B86  B23C 0001               9749m         CMP.B   #$01, D1
00005B8A  6700 0066               9750m         BEQ     ADRREGDIRECT_767    
00005B8E  B23C 0002               9751m         CMP.B   #$02, D1
00005B92  6700 00A0               9752m         BEQ     ADRREGINDIRECT_767  
00005B96  B23C 0003               9753m         CMP.B   #$03, D1
00005B9A  6700 0102               9754m         BEQ     ADRREGPOSTINC_767  
00005B9E  B23C 0004               9755m         CMP.B   #$04, D1
00005BA2  6700 0178               9756m         BEQ     ADRREGPREDEC_767
00005BA6  B23C 0007               9757m         CMP.B   #$07, D1
00005BAA  6700 01EE               9758m         BEQ     ADRABSOLUTE_767    
00005BAE                          9759m         
00005BAE                          9760m DATAREGDIRECT_767: 
00005BAE  BC3C 0001               9761m         CMP.B   #$01, D6
00005BB2  6700 001E               9762m         BEQ     DATAREGDIRECTSRC_767   
00005BB6                          9763m DATAREGDIRECTDEST_767: 
00005BB6                          9764mm         PRINTDNDEST D3 
00005BB6  3203                    9765mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005BB8  E949                    9766mm         LSL     #$04, D1
00005BBA  E049                    9767mm         LSR     #$08, D1
00005BBC  EA49                    9768mm         LSR     #$05, D1
00005BBE  43F8 00CC               9769mm         LEA     ODN, A1     
00005BC2  103C 000E               9770mm         MOVE.B  #14,D0          
00005BC6  4E4F                    9771mm         TRAP    #15
00005BC8  103C 0003               9772mm         MOVE.B  #3,D0          
00005BCC  4E4F                    9773mm         TRAP    #15
00005BCE                          9774mm         ENDM
00005BCE  6000 057A               9775m         BRA     COMPLETE_767 
00005BD2                          9776m DATAREGDIRECTSRC_767: 
00005BD2                          9777mm         PRINTDNSRC D3 
00005BD2  4281                    9778mm         CLR.L   D1
00005BD4  3203                    9779mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BD6  E149                    9780mm         LSL     #$08, D1
00005BD8  EB49                    9781mm         LSL     #$05, D1
00005BDA  E049                    9782mm         LSR     #$08, D1
00005BDC  EA49                    9783mm         LSR     #$05, D1
00005BDE  43F8 00CC               9784mm         LEA     ODN, A1     
00005BE2  103C 000E               9785mm         MOVE.B  #14,D0          
00005BE6  4E4F                    9786mm         TRAP    #15
00005BE8  103C 0003               9787mm         MOVE.B  #3,D0          
00005BEC  4E4F                    9788mm         TRAP    #15
00005BEE                          9789mm         ENDM
00005BEE  6000 055A               9790m         BRA     COMPLETE_767   
00005BF2                          9791m         
00005BF2                          9792m ADRREGDIRECT_767: 
00005BF2  BC3C 0001               9793m         CMP.B   #$01, D6
00005BF6  6700 001E               9794m         BEQ     ADRREGDIRECTSRC_767   
00005BFA                          9795m ADRREGDIRECTDEST_767:
00005BFA                          9796mm         PRINTANDEST D3
00005BFA  3203                    9797mm         MOVE.W  D3, D1
00005BFC  E949                    9798mm         LSL     #$04, D1 ; BITS 9 TO 11
00005BFE  E049                    9799mm         LSR     #$08, D1
00005C00  EA49                    9800mm         LSR     #$05, D1
00005C02  43F8 00CE               9801mm         LEA     OAN, A1     
00005C06  103C 000E               9802mm         MOVE.B  #14,D0          
00005C0A  4E4F                    9803mm         TRAP    #15
00005C0C  103C 0003               9804mm         MOVE.B  #3,D0          
00005C10  4E4F                    9805mm         TRAP    #15
00005C12                          9806mm         ENDM
00005C12  6000 0536               9807m         BRA     COMPLETE_767   
00005C16                          9808m ADRREGDIRECTSRC_767:
00005C16                          9809mm         PRINTANSRC D3
00005C16  3203                    9810mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C18  E149                    9811mm         LSL     #$08, D1
00005C1A  EB49                    9812mm         LSL     #$05, D1
00005C1C  E049                    9813mm         LSR     #$08, D1
00005C1E  EA49                    9814mm         LSR     #$05, D1
00005C20  43F8 00CE               9815mm         LEA     OAN, A1     
00005C24  103C 000E               9816mm         MOVE.B  #14,D0          
00005C28  4E4F                    9817mm         TRAP    #15
00005C2A  103C 0003               9818mm         MOVE.B  #3,D0          
00005C2E  4E4F                    9819mm         TRAP    #15
00005C30                          9820mm         ENDM
00005C30  6000 0518               9821m         BRA     COMPLETE_767   
00005C34                          9822m        
00005C34                          9823m ADRREGINDIRECT_767:   
00005C34  BC3C 0001               9824m         CMP.B   #$01, D6
00005C38  6700 0032               9825m         BEQ     ADRREGINDIRECTSRC_767   
00005C3C                          9826m ADRREGINDIRECTDEST_767:
00005C3C                          9827mm         PRINTLB
00005C3C  43F8 00D0               9828mm         LEA     OLB, A1     
00005C40  103C 000E               9829mm         MOVE.B  #14,D0          
00005C44  4E4F                    9830mm         TRAP    #15
00005C46                          9831mm         ENDM
00005C46                          9832mm         PRINTANDEST D3  
00005C46  3203                    9833mm         MOVE.W  D3, D1
00005C48  E949                    9834mm         LSL     #$04, D1 ; BITS 9 TO 11
00005C4A  E049                    9835mm         LSR     #$08, D1
00005C4C  EA49                    9836mm         LSR     #$05, D1
00005C4E  43F8 00CE               9837mm         LEA     OAN, A1     
00005C52  103C 000E               9838mm         MOVE.B  #14,D0          
00005C56  4E4F                    9839mm         TRAP    #15
00005C58  103C 0003               9840mm         MOVE.B  #3,D0          
00005C5C  4E4F                    9841mm         TRAP    #15
00005C5E                          9842mm         ENDM
00005C5E                          9843mm         PRINTRB
00005C5E  43F8 00D2               9844mm         LEA     ORB, A1     
00005C62  103C 000E               9845mm         MOVE.B  #14,D0          
00005C66  4E4F                    9846mm         TRAP    #15
00005C68                          9847mm         ENDM
00005C68  6000 04E0               9848m         BRA     COMPLETE_767     
00005C6C                          9849m ADRREGINDIRECTSRC_767:   
00005C6C                          9850mm         PRINTLB
00005C6C  43F8 00D0               9851mm         LEA     OLB, A1     
00005C70  103C 000E               9852mm         MOVE.B  #14,D0          
00005C74  4E4F                    9853mm         TRAP    #15
00005C76                          9854mm         ENDM
00005C76                          9855mm         PRINTANSRC D3  
00005C76  3203                    9856mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C78  E149                    9857mm         LSL     #$08, D1
00005C7A  EB49                    9858mm         LSL     #$05, D1
00005C7C  E049                    9859mm         LSR     #$08, D1
00005C7E  EA49                    9860mm         LSR     #$05, D1
00005C80  43F8 00CE               9861mm         LEA     OAN, A1     
00005C84  103C 000E               9862mm         MOVE.B  #14,D0          
00005C88  4E4F                    9863mm         TRAP    #15
00005C8A  103C 0003               9864mm         MOVE.B  #3,D0          
00005C8E  4E4F                    9865mm         TRAP    #15
00005C90                          9866mm         ENDM
00005C90                          9867mm         PRINTRB
00005C90  43F8 00D2               9868mm         LEA     ORB, A1     
00005C94  103C 000E               9869mm         MOVE.B  #14,D0          
00005C98  4E4F                    9870mm         TRAP    #15
00005C9A                          9871mm         ENDM
00005C9A  6000 04AE               9872m         BRA     COMPLETE_767   
00005C9E                          9873m         
00005C9E                          9874m ADRREGPOSTINC_767:   
00005C9E  BC3C 0001               9875m         CMP.B   #$01, D6
00005CA2  6700 003C               9876m         BEQ     ADRREGPOSTINCSRC_767   
00005CA6                          9877m ADRREGPOSTINCDEST_767: 
00005CA6                          9878mm         PRINTLB
00005CA6  43F8 00D0               9879mm         LEA     OLB, A1     
00005CAA  103C 000E               9880mm         MOVE.B  #14,D0          
00005CAE  4E4F                    9881mm         TRAP    #15
00005CB0                          9882mm         ENDM
00005CB0                          9883mm         PRINTANDEST D3  
00005CB0  3203                    9884mm         MOVE.W  D3, D1
00005CB2  E949                    9885mm         LSL     #$04, D1 ; BITS 9 TO 11
00005CB4  E049                    9886mm         LSR     #$08, D1
00005CB6  EA49                    9887mm         LSR     #$05, D1
00005CB8  43F8 00CE               9888mm         LEA     OAN, A1     
00005CBC  103C 000E               9889mm         MOVE.B  #14,D0          
00005CC0  4E4F                    9890mm         TRAP    #15
00005CC2  103C 0003               9891mm         MOVE.B  #3,D0          
00005CC6  4E4F                    9892mm         TRAP    #15
00005CC8                          9893mm         ENDM
00005CC8                          9894mm         PRINTRB
00005CC8  43F8 00D2               9895mm         LEA     ORB, A1     
00005CCC  103C 000E               9896mm         MOVE.B  #14,D0          
00005CD0  4E4F                    9897mm         TRAP    #15
00005CD2                          9898mm         ENDM
00005CD2                          9899mm         PRINTPI
00005CD2  43F8 00D9               9900mm         LEA     OPSTINC, A1     
00005CD6  103C 000E               9901mm         MOVE.B  #14,D0          
00005CDA  4E4F                    9902mm         TRAP    #15
00005CDC                          9903mm         ENDM
00005CDC  6000 046C               9904m         BRA     COMPLETE_767  
00005CE0                          9905m ADRREGPOSTINCSRC_767:           
00005CE0                          9906mm         PRINTLB
00005CE0  43F8 00D0               9907mm         LEA     OLB, A1     
00005CE4  103C 000E               9908mm         MOVE.B  #14,D0          
00005CE8  4E4F                    9909mm         TRAP    #15
00005CEA                          9910mm         ENDM
00005CEA                          9911mm         PRINTANSRC D3  
00005CEA  3203                    9912mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005CEC  E149                    9913mm         LSL     #$08, D1
00005CEE  EB49                    9914mm         LSL     #$05, D1
00005CF0  E049                    9915mm         LSR     #$08, D1
00005CF2  EA49                    9916mm         LSR     #$05, D1
00005CF4  43F8 00CE               9917mm         LEA     OAN, A1     
00005CF8  103C 000E               9918mm         MOVE.B  #14,D0          
00005CFC  4E4F                    9919mm         TRAP    #15
00005CFE  103C 0003               9920mm         MOVE.B  #3,D0          
00005D02  4E4F                    9921mm         TRAP    #15
00005D04                          9922mm         ENDM
00005D04                          9923mm         PRINTRB
00005D04  43F8 00D2               9924mm         LEA     ORB, A1     
00005D08  103C 000E               9925mm         MOVE.B  #14,D0          
00005D0C  4E4F                    9926mm         TRAP    #15
00005D0E                          9927mm         ENDM
00005D0E                          9928mm         PRINTPI
00005D0E  43F8 00D9               9929mm         LEA     OPSTINC, A1     
00005D12  103C 000E               9930mm         MOVE.B  #14,D0          
00005D16  4E4F                    9931mm         TRAP    #15
00005D18                          9932mm         ENDM
00005D18  6000 0430               9933m         BRA     COMPLETE_767  
00005D1C                          9934m ADRREGPREDEC_767: 
00005D1C  BC3C 0001               9935m         CMP.B   #$01, D6
00005D20  6700 003C               9936m         BEQ     ADRREGPREDECSRC_767   
00005D24                          9937m ADRREGPREDECDEST_767:
00005D24                          9938mm         PRINTPD  
00005D24  43F8 00D7               9939mm         LEA     OPREDEC, A1     
00005D28  103C 000E               9940mm         MOVE.B  #14,D0          
00005D2C  4E4F                    9941mm         TRAP    #15
00005D2E                          9942mm         ENDM
00005D2E                          9943mm         PRINTLB
00005D2E  43F8 00D0               9944mm         LEA     OLB, A1     
00005D32  103C 000E               9945mm         MOVE.B  #14,D0          
00005D36  4E4F                    9946mm         TRAP    #15
00005D38                          9947mm         ENDM
00005D38                          9948mm         PRINTANDEST D3  
00005D38  3203                    9949mm         MOVE.W  D3, D1
00005D3A  E949                    9950mm         LSL     #$04, D1 ; BITS 9 TO 11
00005D3C  E049                    9951mm         LSR     #$08, D1
00005D3E  EA49                    9952mm         LSR     #$05, D1
00005D40  43F8 00CE               9953mm         LEA     OAN, A1     
00005D44  103C 000E               9954mm         MOVE.B  #14,D0          
00005D48  4E4F                    9955mm         TRAP    #15
00005D4A  103C 0003               9956mm         MOVE.B  #3,D0          
00005D4E  4E4F                    9957mm         TRAP    #15
00005D50                          9958mm         ENDM
00005D50                          9959mm         PRINTRB
00005D50  43F8 00D2               9960mm         LEA     ORB, A1     
00005D54  103C 000E               9961mm         MOVE.B  #14,D0          
00005D58  4E4F                    9962mm         TRAP    #15
00005D5A                          9963mm         ENDM
00005D5A  6000 03EE               9964m         BRA     COMPLETE_767   
00005D5E                          9965m ADRREGPREDECSRC_767: 
00005D5E                          9966mm         PRINTPD  
00005D5E  43F8 00D7               9967mm         LEA     OPREDEC, A1     
00005D62  103C 000E               9968mm         MOVE.B  #14,D0          
00005D66  4E4F                    9969mm         TRAP    #15
00005D68                          9970mm         ENDM
00005D68                          9971mm         PRINTLB
00005D68  43F8 00D0               9972mm         LEA     OLB, A1     
00005D6C  103C 000E               9973mm         MOVE.B  #14,D0          
00005D70  4E4F                    9974mm         TRAP    #15
00005D72                          9975mm         ENDM
00005D72                          9976mm         PRINTANSRC D3  
00005D72  3203                    9977mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005D74  E149                    9978mm         LSL     #$08, D1
00005D76  EB49                    9979mm         LSL     #$05, D1
00005D78  E049                    9980mm         LSR     #$08, D1
00005D7A  EA49                    9981mm         LSR     #$05, D1
00005D7C  43F8 00CE               9982mm         LEA     OAN, A1     
00005D80  103C 000E               9983mm         MOVE.B  #14,D0          
00005D84  4E4F                    9984mm         TRAP    #15
00005D86  103C 0003               9985mm         MOVE.B  #3,D0          
00005D8A  4E4F                    9986mm         TRAP    #15
00005D8C                          9987mm         ENDM
00005D8C                          9988mm         PRINTRB
00005D8C  43F8 00D2               9989mm         LEA     ORB, A1     
00005D90  103C 000E               9990mm         MOVE.B  #14,D0          
00005D94  4E4F                    9991mm         TRAP    #15
00005D96                          9992mm         ENDM
00005D96  6000 03B2               9993m         BRA     COMPLETE_767
00005D9A                          9994m        
00005D9A                          9995m ADRABSOLUTE_767:
00005D9A  BC3C 0001               9996m         CMP.B   #$01, D6
00005D9E  6600 0018               9997m         BNE     ADRABSOLUTEDST_767 
00005DA2                          9998m         
00005DA2  3A03                    9999m         MOVE.W  D3, D5
00005DA4  0803 0002              10000m         BTST    #2, D3
00005DA8  6600 0024              10001m         BNE     ADRIMMEDIATE_767
00005DAC  0803 0000              10002m         BTST    #0, D3
00005DB0  6600 0280              10003m         BNE     ADRABSOLUTEL_767
00005DB4  6000 01E6              10004m         BRA     ADRABSOLUTEW_767
00005DB8                         10005m ADRABSOLUTEDST_767:
00005DB8  3A03                   10006m         MOVE.W  D3, D5
00005DBA  0803 000B              10007m         BTST    #$B, D3
00005DBE  6600 000E              10008m         BNE     ADRIMMEDIATE_767
00005DC2  0803 0009              10009m         BTST    #$09, D3
00005DC6  6600 026A              10010m         BNE     ADRABSOLUTEL_767
00005DCA  6000 01D0              10011m         BRA     ADRABSOLUTEW_767
00005DCE                         10012m ADRIMMEDIATE_767:
00005DCE  BE3C 0001              10013m         CMP.B   #1, D7
00005DD2  6700 00A2              10014m         BEQ     ADRIMMEDIATEL_767
00005DD6                         10015m ADRIMMEDIATEW_767:
00005DD6  361A                   10016m         MOVE.W  (A2)+, D3
00005DD8                         10017mm         PRINTHASH
00005DD8  103C 0006              10018mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DDC  323C 0023              10019mm         MOVE.W  #35, D1     ; AN = SIGN
00005DE0  4E4F                   10020mm         TRAP    #15         ; OUTPUT = SIGN
00005DE2                         10021mm         ENDM
00005DE2                         10022mm         PRINTSIGN
00005DE2  103C 0006              10023mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DE6  323C 0024              10024mm         MOVE.W  #36, D1     ; AN = SIGN
00005DEA  4E4F                   10025mm         TRAP    #15         ; OUTPUT = SIGN
00005DEC                         10026mm         ENDM
00005DEC                         10027mm         ADROUT
00005DEC  103C 0006              10028mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DF0  3212                   10029mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DF2  E049                   10030mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DF4  E849                   10031mm         LSR.W   #4, D1      
00005DF6                         10032mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DF6  0C01 0009              10033mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DFA  6E00 000A              10034mmm         BGT     ALPHA_797
00005DFE  0601 0030              10035mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E02  6000 0006              10036mmm         BRA     DONE_797
00005E06  0601 0037              10037mmm ALPHA_797: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E0A  4E71                   10038mmm DONE_797: NOP
00005E0C                         10039mmm         ENDM
00005E0C  4E4F                   10040mm         TRAP    #15         ; EXECUTE OUTPUT
00005E0E                         10041mm         
00005E0E  3212                   10042mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E10  E949                   10043mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E12  E049                   10044mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E14  E849                   10045mm         LSR.W   #4, D1      
00005E16                         10046mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E16  0C01 0009              10047mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E1A  6E00 000A              10048mmm         BGT     ALPHA_798
00005E1E  0601 0030              10049mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E22  6000 0006              10050mmm         BRA     DONE_798
00005E26  0601 0037              10051mmm ALPHA_798: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E2A  4E71                   10052mmm DONE_798: NOP
00005E2C                         10053mmm         ENDM
00005E2C  4E4F                   10054mm         TRAP    #15         ; EXECUTE OUTPUT
00005E2E                         10055mm         
00005E2E  3212                   10056mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E30  E149                   10057mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E32  E049                   10058mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E34  E849                   10059mm         LSR.W   #4, D1      
00005E36                         10060mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E36  0C01 0009              10061mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E3A  6E00 000A              10062mmm         BGT     ALPHA_799
00005E3E  0601 0030              10063mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E42  6000 0006              10064mmm         BRA     DONE_799
00005E46  0601 0037              10065mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E4A  4E71                   10066mmm DONE_799: NOP
00005E4C                         10067mmm         ENDM
00005E4C  4E4F                   10068mm         TRAP    #15         ; EXECUTE OUTPUT
00005E4E                         10069mm         
00005E4E  3212                   10070mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E50  E149                   10071mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E52  E949                   10072mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E54  E049                   10073mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E56  E849                   10074mm         LSR.W   #4, D1      
00005E58                         10075mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E58  0C01 0009              10076mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E5C  6E00 000A              10077mmm         BGT     ALPHA_800
00005E60  0601 0030              10078mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E64  6000 0006              10079mmm         BRA     DONE_800
00005E68  0601 0037              10080mmm ALPHA_800: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E6C  4E71                   10081mmm DONE_800: NOP
00005E6E                         10082mmm         ENDM
00005E6E  4E4F                   10083mm         TRAP    #15         ; EXECUTE OUTPUT   
00005E70                         10084mm         ENDM     
00005E70  3605                   10085m         MOVE.W  D5, D3
00005E72  6000 02D6              10086m         BRA     COMPLETE_767
00005E76                         10087m ADRIMMEDIATEL_767:
00005E76  361A                   10088m         MOVE.W  (A2)+, D3
00005E78                         10089mm         PRINTHASH
00005E78  103C 0006              10090mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E7C  323C 0023              10091mm         MOVE.W  #35, D1     ; AN = SIGN
00005E80  4E4F                   10092mm         TRAP    #15         ; OUTPUT = SIGN
00005E82                         10093mm         ENDM
00005E82                         10094mm         PRINTSIGN
00005E82  103C 0006              10095mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E86  323C 0024              10096mm         MOVE.W  #36, D1     ; AN = SIGN
00005E8A  4E4F                   10097mm         TRAP    #15         ; OUTPUT = SIGN
00005E8C                         10098mm         ENDM
00005E8C                         10099mm         ADROUT 
00005E8C  103C 0006              10100mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E90  3212                   10101mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E92  E049                   10102mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E94  E849                   10103mm         LSR.W   #4, D1      
00005E96                         10104mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E96  0C01 0009              10105mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E9A  6E00 000A              10106mmm         BGT     ALPHA_804
00005E9E  0601 0030              10107mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EA2  6000 0006              10108mmm         BRA     DONE_804
00005EA6  0601 0037              10109mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EAA  4E71                   10110mmm DONE_804: NOP
00005EAC                         10111mmm         ENDM
00005EAC  4E4F                   10112mm         TRAP    #15         ; EXECUTE OUTPUT
00005EAE                         10113mm         
00005EAE  3212                   10114mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EB0  E949                   10115mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005EB2  E049                   10116mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EB4  E849                   10117mm         LSR.W   #4, D1      
00005EB6                         10118mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EB6  0C01 0009              10119mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EBA  6E00 000A              10120mmm         BGT     ALPHA_805
00005EBE  0601 0030              10121mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EC2  6000 0006              10122mmm         BRA     DONE_805
00005EC6  0601 0037              10123mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005ECA  4E71                   10124mmm DONE_805: NOP
00005ECC                         10125mmm         ENDM
00005ECC  4E4F                   10126mm         TRAP    #15         ; EXECUTE OUTPUT
00005ECE                         10127mm         
00005ECE  3212                   10128mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005ED0  E149                   10129mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005ED2  E049                   10130mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005ED4  E849                   10131mm         LSR.W   #4, D1      
00005ED6                         10132mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005ED6  0C01 0009              10133mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EDA  6E00 000A              10134mmm         BGT     ALPHA_806
00005EDE  0601 0030              10135mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EE2  6000 0006              10136mmm         BRA     DONE_806
00005EE6  0601 0037              10137mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EEA  4E71                   10138mmm DONE_806: NOP
00005EEC                         10139mmm         ENDM
00005EEC  4E4F                   10140mm         TRAP    #15         ; EXECUTE OUTPUT
00005EEE                         10141mm         
00005EEE  3212                   10142mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EF0  E149                   10143mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EF2  E949                   10144mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005EF4  E049                   10145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EF6  E849                   10146mm         LSR.W   #4, D1      
00005EF8                         10147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EF8  0C01 0009              10148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EFC  6E00 000A              10149mmm         BGT     ALPHA_807
00005F00  0601 0030              10150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F04  6000 0006              10151mmm         BRA     DONE_807
00005F08  0601 0037              10152mmm ALPHA_807: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F0C  4E71                   10153mmm DONE_807: NOP
00005F0E                         10154mmm         ENDM
00005F0E  4E4F                   10155mm         TRAP    #15         ; EXECUTE OUTPUT   
00005F10                         10156mm         ENDM     
00005F10  361A                   10157m         MOVE.W  (A2)+, D3
00005F12                         10158mm         ADROUT
00005F12  103C 0006              10159mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F16  3212                   10160mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F18  E049                   10161mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F1A  E849                   10162mm         LSR.W   #4, D1      
00005F1C                         10163mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F1C  0C01 0009              10164mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F20  6E00 000A              10165mmm         BGT     ALPHA_809
00005F24  0601 0030              10166mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F28  6000 0006              10167mmm         BRA     DONE_809
00005F2C  0601 0037              10168mmm ALPHA_809: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F30  4E71                   10169mmm DONE_809: NOP
00005F32                         10170mmm         ENDM
00005F32  4E4F                   10171mm         TRAP    #15         ; EXECUTE OUTPUT
00005F34                         10172mm         
00005F34  3212                   10173mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F36  E949                   10174mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F38  E049                   10175mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F3A  E849                   10176mm         LSR.W   #4, D1      
00005F3C                         10177mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F3C  0C01 0009              10178mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F40  6E00 000A              10179mmm         BGT     ALPHA_810
00005F44  0601 0030              10180mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F48  6000 0006              10181mmm         BRA     DONE_810
00005F4C  0601 0037              10182mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F50  4E71                   10183mmm DONE_810: NOP
00005F52                         10184mmm         ENDM
00005F52  4E4F                   10185mm         TRAP    #15         ; EXECUTE OUTPUT
00005F54                         10186mm         
00005F54  3212                   10187mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F56  E149                   10188mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F58  E049                   10189mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F5A  E849                   10190mm         LSR.W   #4, D1      
00005F5C                         10191mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F5C  0C01 0009              10192mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F60  6E00 000A              10193mmm         BGT     ALPHA_811
00005F64  0601 0030              10194mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F68  6000 0006              10195mmm         BRA     DONE_811
00005F6C  0601 0037              10196mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F70  4E71                   10197mmm DONE_811: NOP
00005F72                         10198mmm         ENDM
00005F72  4E4F                   10199mm         TRAP    #15         ; EXECUTE OUTPUT
00005F74                         10200mm         
00005F74  3212                   10201mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F76  E149                   10202mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F78  E949                   10203mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F7A  E049                   10204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F7C  E849                   10205mm         LSR.W   #4, D1      
00005F7E                         10206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F7E  0C01 0009              10207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F82  6E00 000A              10208mmm         BGT     ALPHA_812
00005F86  0601 0030              10209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F8A  6000 0006              10210mmm         BRA     DONE_812
00005F8E  0601 0037              10211mmm ALPHA_812: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F92  4E71                   10212mmm DONE_812: NOP
00005F94                         10213mmm         ENDM
00005F94  4E4F                   10214mm         TRAP    #15         ; EXECUTE OUTPUT   
00005F96                         10215mm         ENDM     
00005F96  3605                   10216m         MOVE.W  D5, D3
00005F98  6000 01B0              10217m         BRA     COMPLETE_767 
00005F9C                         10218m ADRABSOLUTEW_767:     
00005F9C  361A                   10219m         MOVE.W  (A2)+, D3
00005F9E                         10220mm         PRINTSIGN
00005F9E  103C 0006              10221mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005FA2  323C 0024              10222mm         MOVE.W  #36, D1     ; AN = SIGN
00005FA6  4E4F                   10223mm         TRAP    #15         ; OUTPUT = SIGN
00005FA8                         10224mm         ENDM
00005FA8                         10225mm         ADROUT
00005FA8  103C 0006              10226mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005FAC  3212                   10227mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FAE  E049                   10228mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FB0  E849                   10229mm         LSR.W   #4, D1      
00005FB2                         10230mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FB2  0C01 0009              10231mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FB6  6E00 000A              10232mmm         BGT     ALPHA_815
00005FBA  0601 0030              10233mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FBE  6000 0006              10234mmm         BRA     DONE_815
00005FC2  0601 0037              10235mmm ALPHA_815: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FC6  4E71                   10236mmm DONE_815: NOP
00005FC8                         10237mmm         ENDM
00005FC8  4E4F                   10238mm         TRAP    #15         ; EXECUTE OUTPUT
00005FCA                         10239mm         
00005FCA  3212                   10240mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FCC  E949                   10241mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005FCE  E049                   10242mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FD0  E849                   10243mm         LSR.W   #4, D1      
00005FD2                         10244mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FD2  0C01 0009              10245mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FD6  6E00 000A              10246mmm         BGT     ALPHA_816
00005FDA  0601 0030              10247mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FDE  6000 0006              10248mmm         BRA     DONE_816
00005FE2  0601 0037              10249mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FE6  4E71                   10250mmm DONE_816: NOP
00005FE8                         10251mmm         ENDM
00005FE8  4E4F                   10252mm         TRAP    #15         ; EXECUTE OUTPUT
00005FEA                         10253mm         
00005FEA  3212                   10254mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FEC  E149                   10255mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FEE  E049                   10256mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FF0  E849                   10257mm         LSR.W   #4, D1      
00005FF2                         10258mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FF2  0C01 0009              10259mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FF6  6E00 000A              10260mmm         BGT     ALPHA_817
00005FFA  0601 0030              10261mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FFE  6000 0006              10262mmm         BRA     DONE_817
00006002  0601 0037              10263mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006006  4E71                   10264mmm DONE_817: NOP
00006008                         10265mmm         ENDM
00006008  4E4F                   10266mm         TRAP    #15         ; EXECUTE OUTPUT
0000600A                         10267mm         
0000600A  3212                   10268mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000600C  E149                   10269mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000600E  E949                   10270mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006010  E049                   10271mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006012  E849                   10272mm         LSR.W   #4, D1      
00006014                         10273mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006014  0C01 0009              10274mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006018  6E00 000A              10275mmm         BGT     ALPHA_818
0000601C  0601 0030              10276mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006020  6000 0006              10277mmm         BRA     DONE_818
00006024  0601 0037              10278mmm ALPHA_818: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006028  4E71                   10279mmm DONE_818: NOP
0000602A                         10280mmm         ENDM
0000602A  4E4F                   10281mm         TRAP    #15         ; EXECUTE OUTPUT   
0000602C                         10282mm         ENDM     
0000602C  3605                   10283m         MOVE.W  D5, D3
0000602E  6000 011A              10284m         BRA     COMPLETE_767  
00006032                         10285m ADRABSOLUTEL_767:  
00006032  361A                   10286m         MOVE.W  (A2)+, D3
00006034                         10287mm         PRINTSIGN
00006034  103C 0006              10288mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006038  323C 0024              10289mm         MOVE.W  #36, D1     ; AN = SIGN
0000603C  4E4F                   10290mm         TRAP    #15         ; OUTPUT = SIGN
0000603E                         10291mm         ENDM
0000603E                         10292mm         ADROUT 
0000603E  103C 0006              10293mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006042  3212                   10294mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006044  E049                   10295mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006046  E849                   10296mm         LSR.W   #4, D1      
00006048                         10297mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006048  0C01 0009              10298mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000604C  6E00 000A              10299mmm         BGT     ALPHA_821
00006050  0601 0030              10300mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006054  6000 0006              10301mmm         BRA     DONE_821
00006058  0601 0037              10302mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000605C  4E71                   10303mmm DONE_821: NOP
0000605E                         10304mmm         ENDM
0000605E  4E4F                   10305mm         TRAP    #15         ; EXECUTE OUTPUT
00006060                         10306mm         
00006060  3212                   10307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006062  E949                   10308mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006064  E049                   10309mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006066  E849                   10310mm         LSR.W   #4, D1      
00006068                         10311mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006068  0C01 0009              10312mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000606C  6E00 000A              10313mmm         BGT     ALPHA_822
00006070  0601 0030              10314mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006074  6000 0006              10315mmm         BRA     DONE_822
00006078  0601 0037              10316mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000607C  4E71                   10317mmm DONE_822: NOP
0000607E                         10318mmm         ENDM
0000607E  4E4F                   10319mm         TRAP    #15         ; EXECUTE OUTPUT
00006080                         10320mm         
00006080  3212                   10321mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006082  E149                   10322mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006084  E049                   10323mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006086  E849                   10324mm         LSR.W   #4, D1      
00006088                         10325mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006088  0C01 0009              10326mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000608C  6E00 000A              10327mmm         BGT     ALPHA_823
00006090  0601 0030              10328mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006094  6000 0006              10329mmm         BRA     DONE_823
00006098  0601 0037              10330mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000609C  4E71                   10331mmm DONE_823: NOP
0000609E                         10332mmm         ENDM
0000609E  4E4F                   10333mm         TRAP    #15         ; EXECUTE OUTPUT
000060A0                         10334mm         
000060A0  3212                   10335mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060A2  E149                   10336mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000060A4  E949                   10337mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000060A6  E049                   10338mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060A8  E849                   10339mm         LSR.W   #4, D1      
000060AA                         10340mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060AA  0C01 0009              10341mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060AE  6E00 000A              10342mmm         BGT     ALPHA_824
000060B2  0601 0030              10343mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060B6  6000 0006              10344mmm         BRA     DONE_824
000060BA  0601 0037              10345mmm ALPHA_824: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060BE  4E71                   10346mmm DONE_824: NOP
000060C0                         10347mmm         ENDM
000060C0  4E4F                   10348mm         TRAP    #15         ; EXECUTE OUTPUT   
000060C2                         10349mm         ENDM     
000060C2  361A                   10350m         MOVE.W  (A2)+, D3
000060C4                         10351mm         ADROUT
000060C4  103C 0006              10352mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000060C8  3212                   10353mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060CA  E049                   10354mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060CC  E849                   10355mm         LSR.W   #4, D1      
000060CE                         10356mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060CE  0C01 0009              10357mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060D2  6E00 000A              10358mmm         BGT     ALPHA_826
000060D6  0601 0030              10359mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060DA  6000 0006              10360mmm         BRA     DONE_826
000060DE  0601 0037              10361mmm ALPHA_826: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060E2  4E71                   10362mmm DONE_826: NOP
000060E4                         10363mmm         ENDM
000060E4  4E4F                   10364mm         TRAP    #15         ; EXECUTE OUTPUT
000060E6                         10365mm         
000060E6  3212                   10366mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060E8  E949                   10367mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000060EA  E049                   10368mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060EC  E849                   10369mm         LSR.W   #4, D1      
000060EE                         10370mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060EE  0C01 0009              10371mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060F2  6E00 000A              10372mmm         BGT     ALPHA_827
000060F6  0601 0030              10373mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060FA  6000 0006              10374mmm         BRA     DONE_827
000060FE  0601 0037              10375mmm ALPHA_827: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006102  4E71                   10376mmm DONE_827: NOP
00006104                         10377mmm         ENDM
00006104  4E4F                   10378mm         TRAP    #15         ; EXECUTE OUTPUT
00006106                         10379mm         
00006106  3212                   10380mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006108  E149                   10381mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000610A  E049                   10382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000610C  E849                   10383mm         LSR.W   #4, D1      
0000610E                         10384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000610E  0C01 0009              10385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006112  6E00 000A              10386mmm         BGT     ALPHA_828
00006116  0601 0030              10387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000611A  6000 0006              10388mmm         BRA     DONE_828
0000611E  0601 0037              10389mmm ALPHA_828: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006122  4E71                   10390mmm DONE_828: NOP
00006124                         10391mmm         ENDM
00006124  4E4F                   10392mm         TRAP    #15         ; EXECUTE OUTPUT
00006126                         10393mm         
00006126  3212                   10394mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006128  E149                   10395mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000612A  E949                   10396mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000612C  E049                   10397mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000612E  E849                   10398mm         LSR.W   #4, D1      
00006130                         10399mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006130  0C01 0009              10400mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006134  6E00 000A              10401mmm         BGT     ALPHA_829
00006138  0601 0030              10402mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000613C  6000 0006              10403mmm         BRA     DONE_829
00006140  0601 0037              10404mmm ALPHA_829: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006144  4E71                   10405mmm DONE_829: NOP
00006146                         10406mmm         ENDM
00006146  4E4F                   10407mm         TRAP    #15         ; EXECUTE OUTPUT   
00006148                         10408mm         ENDM     
00006148  3605                   10409m         MOVE.W  D5, D3
0000614A                         10410m 
0000614A                         10411m COMPLETE_767:  ; OPCODE HAS BEEN VERIFIED
0000614A                         10412m         ENDM
0000614A  4E75                   10413          RTS                 ; Return from decodeNOT subroutine
0000614C                         10414  
0000614C                         10415  ; ------------------------------------------------------------
0000614C                         10416  ; 11a. "decodeLSx_M" subroutine
0000614C                         10417  ; Gary
0000614C                         10418  ;
0000614C                         10419  ; Decodes Logical Shifts by checking if its memory or registers
0000614C                         10420  ; it receives then prints. 
0000614C                         10421  ; ------------------------------------------------------------
0000614C                         10422  decodeLSx_M:
0000614C                         10423m         verifyOpcode    pLSx_M, (A2)
0000614C  43F8 01A8              10424m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00006150  3612                   10425m         MOVE.W  (A2), D3      ; INPUT VALUE
00006152  123C 000F              10426m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006156                         10427m         
00006156                         10428m LOOP_830: 
00006156  0C11 0030              10429m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000615A  6700 000E              10430m         BEQ     CHECKFOR0_830
0000615E  0C11 0031              10431m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006162  6700 0010              10432m         BEQ     CHECKFOR1_830
00006166  6000 0012              10433m         BRA     NEXT_830      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000616A                         10434m         
0000616A                         10435m CHECKFOR0_830: 
0000616A  0303                   10436m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000616C  6600 1634              10437m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006170  6000 0008              10438m         BRA     NEXT_830
00006174                         10439m 
00006174                         10440m CHECKFOR1_830:
00006174  0303                   10441m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006176  6700 162A              10442m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000617A                         10443m 
0000617A                         10444m NEXT_830: 
0000617A  B23C 0000              10445m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000617E  6700 0008              10446m         BEQ     COMPLETE_830  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006182  5301                   10447m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006184  1819                   10448m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006186  60CE                   10449m         BRA     LOOP_830      ; BEGIN LOOP AGAIN
00006188                         10450m 
00006188                         10451m COMPLETE_830:  ; OPCODE HAS BEEN VERIFIED
00006188                         10452m         ENDM
00006188  0803 0008              10453          BTST    #$08, D3     ; Check the 8th bit
0000618C  6700 0010              10454          BEQ     LSR_M
00006190  43F8 0098              10455  LSL_M:  LEA     oLSL, A1
00006194  103C 000E              10456          MOVE.B  #14,D0          
00006198  4E4F                   10457          TRAP    #15 
0000619A  6000 000C              10458          BRA     reg_M        
0000619E                         10459    
0000619E  43F8 009C              10460  LSR_M:  LEA     oLSR, A1
000061A2  103C 000E              10461          MOVE.B  #14,D0          
000061A6  4E4F                   10462          TRAP    #15      
000061A8                         10463m reg_M:  printSizeLow       (A2) 
000061A8  3612                   10464m         MOVE.W  (A2), D3      ; INPUT VALUE   
000061AA  4247                   10465m         CLR     D7   
000061AC                         10466m CHECKFORB_831: 
000061AC  0803 0006              10467m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000061B0  6600 0018              10468m         BNE     CHECKFORW_831  ; IF NOT GO TO WORD SIZE
000061B4  0803 0007              10469m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000061B8  6600 001E              10470m         BNE     CHECKFORL_831 ; IF NOT GO TO LONGWORD SIZE
000061BC  43F8 00C0              10471m         LEA     OBSIZE, A1     
000061C0  103C 000E              10472m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061C4  4E4F                   10473m         TRAP    #15
000061C6  6000 001E              10474m         BRA     COMPLETE_831      
000061CA                         10475m CHECKFORW_831: 
000061CA  43F8 00C4              10476m         LEA     OWSIZE, A1     
000061CE  103C 000E              10477m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000061D2  4E4F                   10478m         TRAP    #15
000061D4  6000 0010              10479m         BRA     COMPLETE_831  
000061D8                         10480m CHECKFORL_831:
000061D8  1E3C 0001              10481m         MOVE.B  #$1, D7
000061DC  43F8 00C8              10482m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000061E0  103C 000E              10483m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061E4  4E4F                   10484m         TRAP    #15
000061E6                         10485m COMPLETE_831:  ; SIZE HAS BEEN PRINTED
000061E6                         10486m         ENDM
000061E6                         10487m         printCount       (A2)
000061E6  3212                   10488m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000061E8  E949                   10489m         LSL     #$04, D1
000061EA  E049                   10490m         LSR     #$08, D1
000061EC  EA49                   10491m         LSR     #$05, D1
000061EE  43F8 00DB              10492m         LEA     OHASH, A1     
000061F2  103C 000E              10493m         MOVE.B  #14,D0          
000061F6  4E4F                   10494m         TRAP    #15
000061F8  103C 0003              10495m         MOVE.B  #3,D0          
000061FC  4E4F                   10496m         TRAP    #15
000061FE                         10497m         ENDM
000061FE                         10498m         printComma
000061FE  43F8 00D4              10499m         LEA     OCOMMA, A1     
00006202  103C 000E              10500m         MOVE.B  #14,D0          
00006206  4E4F                   10501m         TRAP    #15
00006208                         10502m         ENDM
00006208                         10503m         printDnSrc     (A2)        
00006208  4281                   10504m         CLR.L   D1
0000620A  3212                   10505m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000620C  E149                   10506m         LSL     #$08, D1
0000620E  EB49                   10507m         LSL     #$05, D1
00006210  E049                   10508m         LSR     #$08, D1
00006212  EA49                   10509m         LSR     #$05, D1
00006214  43F8 00CC              10510m         LEA     ODN, A1     
00006218  103C 000E              10511m         MOVE.B  #14,D0          
0000621C  4E4F                   10512m         TRAP    #15
0000621E  103C 0003              10513m         MOVE.B  #3,D0          
00006222  4E4F                   10514m         TRAP    #15
00006224                         10515m         ENDM
00006224  4E75                   10516          RTS                 ; Return from decodeLSx_M subroutine
00006226                         10517  
00006226                         10518  
00006226                         10519  ; ------------------------------------------------------------
00006226                         10520  ; 11b. "decodeLSx_R" subroutine
00006226                         10521  ; Gary
00006226                         10522  ;
00006226                         10523  ; Decodes Logical Shifts by checking if its memory or registers
00006226                         10524  ; it receives then prints. 
00006226                         10525  ; ------------------------------------------------------------
00006226                         10526  decodeLSx_R:
00006226                         10527m         verifyOpcode    pLSx_R, (A2)
00006226  43F8 01B9              10528m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
0000622A  3612                   10529m         MOVE.W  (A2), D3      ; INPUT VALUE
0000622C  123C 000F              10530m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006230                         10531m         
00006230                         10532m LOOP_835: 
00006230  0C11 0030              10533m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006234  6700 000E              10534m         BEQ     CHECKFOR0_835
00006238  0C11 0031              10535m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000623C  6700 0010              10536m         BEQ     CHECKFOR1_835
00006240  6000 0012              10537m         BRA     NEXT_835      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006244                         10538m         
00006244                         10539m CHECKFOR0_835: 
00006244  0303                   10540m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006246  6600 155A              10541m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000624A  6000 0008              10542m         BRA     NEXT_835
0000624E                         10543m 
0000624E                         10544m CHECKFOR1_835:
0000624E  0303                   10545m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006250  6700 1550              10546m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006254                         10547m 
00006254                         10548m NEXT_835: 
00006254  B23C 0000              10549m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006258  6700 0008              10550m         BEQ     COMPLETE_835  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000625C  5301                   10551m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000625E  1819                   10552m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006260  60CE                   10553m         BRA     LOOP_835      ; BEGIN LOOP AGAIN
00006262                         10554m 
00006262                         10555m COMPLETE_835:  ; OPCODE HAS BEEN VERIFIED
00006262                         10556m         ENDM
00006262  0803 0008              10557          BTST    #$08, D3     ; Check the 8th bit
00006266  6700 0010              10558          BEQ     LSR_R
0000626A  43F8 0098              10559  LSL_R:  LEA     oLSL, A1
0000626E  103C 000E              10560          MOVE.B  #14,D0          
00006272  4E4F                   10561          TRAP    #15 
00006274  6000 000C              10562          BRA     reg_R       
00006278                         10563    
00006278  43F8 009C              10564  LSR_R:  LEA     oLSR, A1
0000627C  103C 000E              10565          MOVE.B  #14,D0          
00006280  4E4F                   10566          TRAP    #15      
00006282                         10567m reg_R:  printSizeLow       (A2)
00006282  3612                   10568m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006284  4247                   10569m         CLR     D7   
00006286                         10570m CHECKFORB_836: 
00006286  0803 0006              10571m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000628A  6600 0018              10572m         BNE     CHECKFORW_836  ; IF NOT GO TO WORD SIZE
0000628E  0803 0007              10573m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006292  6600 001E              10574m         BNE     CHECKFORL_836 ; IF NOT GO TO LONGWORD SIZE
00006296  43F8 00C0              10575m         LEA     OBSIZE, A1     
0000629A  103C 000E              10576m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000629E  4E4F                   10577m         TRAP    #15
000062A0  6000 001E              10578m         BRA     COMPLETE_836      
000062A4                         10579m CHECKFORW_836: 
000062A4  43F8 00C4              10580m         LEA     OWSIZE, A1     
000062A8  103C 000E              10581m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000062AC  4E4F                   10582m         TRAP    #15
000062AE  6000 0010              10583m         BRA     COMPLETE_836  
000062B2                         10584m CHECKFORL_836:
000062B2  1E3C 0001              10585m         MOVE.B  #$1, D7
000062B6  43F8 00C8              10586m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000062BA  103C 000E              10587m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062BE  4E4F                   10588m         TRAP    #15
000062C0                         10589m COMPLETE_836:  ; SIZE HAS BEEN PRINTED
000062C0                         10590m         ENDM
000062C0                         10591m         printDnDest    (A2)
000062C0  3212                   10592m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000062C2  E949                   10593m         LSL     #$04, D1
000062C4  E049                   10594m         LSR     #$08, D1
000062C6  EA49                   10595m         LSR     #$05, D1
000062C8  43F8 00CC              10596m         LEA     ODN, A1     
000062CC  103C 000E              10597m         MOVE.B  #14,D0          
000062D0  4E4F                   10598m         TRAP    #15
000062D2  103C 0003              10599m         MOVE.B  #3,D0          
000062D6  4E4F                   10600m         TRAP    #15
000062D8                         10601m         ENDM
000062D8                         10602m         printComma
000062D8  43F8 00D4              10603m         LEA     OCOMMA, A1     
000062DC  103C 000E              10604m         MOVE.B  #14,D0          
000062E0  4E4F                   10605m         TRAP    #15
000062E2                         10606m         ENDM
000062E2                         10607m         printDnSrc     (A2)
000062E2  4281                   10608m         CLR.L   D1
000062E4  3212                   10609m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000062E6  E149                   10610m         LSL     #$08, D1
000062E8  EB49                   10611m         LSL     #$05, D1
000062EA  E049                   10612m         LSR     #$08, D1
000062EC  EA49                   10613m         LSR     #$05, D1
000062EE  43F8 00CC              10614m         LEA     ODN, A1     
000062F2  103C 000E              10615m         MOVE.B  #14,D0          
000062F6  4E4F                   10616m         TRAP    #15
000062F8  103C 0003              10617m         MOVE.B  #3,D0          
000062FC  4E4F                   10618m         TRAP    #15
000062FE                         10619m         ENDM
000062FE  4E75                   10620          RTS                 ; Return from ddecodeLSx_R subroutine
00006300                         10621          
00006300                         10622  ; ------------------------------------------------------------
00006300                         10623  ; 12a. "decodeASx_M" subroutine
00006300                         10624  ; Gary
00006300                         10625  ;
00006300                         10626  ; Decodes Arithmetical Shifts by checking if its memory or registers
00006300                         10627  ; it receives then prints. 
00006300                         10628  ; ------------------------------------------------------------
00006300                         10629  decodeASx_M:
00006300                         10630m         verifyOpcode    pASx_M, (A2)
00006300  43F8 01DB              10631m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006304  3612                   10632m         MOVE.W  (A2), D3      ; INPUT VALUE
00006306  123C 000F              10633m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000630A                         10634m         
0000630A                         10635m LOOP_840: 
0000630A  0C11 0030              10636m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000630E  6700 000E              10637m         BEQ     CHECKFOR0_840
00006312  0C11 0031              10638m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006316  6700 0010              10639m         BEQ     CHECKFOR1_840
0000631A  6000 0012              10640m         BRA     NEXT_840      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000631E                         10641m         
0000631E                         10642m CHECKFOR0_840: 
0000631E  0303                   10643m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006320  6600 1480              10644m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006324  6000 0008              10645m         BRA     NEXT_840
00006328                         10646m 
00006328                         10647m CHECKFOR1_840:
00006328  0303                   10648m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000632A  6700 1476              10649m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000632E                         10650m 
0000632E                         10651m NEXT_840: 
0000632E  B23C 0000              10652m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006332  6700 0008              10653m         BEQ     COMPLETE_840  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006336  5301                   10654m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006338  1819                   10655m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000633A  60CE                   10656m         BRA     LOOP_840      ; BEGIN LOOP AGAIN
0000633C                         10657m 
0000633C                         10658m COMPLETE_840:  ; OPCODE HAS BEEN VERIFIED
0000633C                         10659m         ENDM
0000633C  0803 0008              10660          BTST    #$08, D3     ; Check the 8th bit
00006340  6700 0010              10661          BEQ     ASR_M
00006344  43F8 00A0              10662  ASL_M:  LEA     oASL, A1
00006348  103C 000E              10663          MOVE.B  #14,D0          
0000634C  4E4F                   10664          TRAP    #15 
0000634E  6000 000C              10665          BRA     Areg_M        
00006352                         10666    
00006352  43F8 00A4              10667  ASR_M:  LEA     oASR, A1
00006356  103C 000E              10668          MOVE.B  #14,D0          
0000635A  4E4F                   10669          TRAP    #15      
0000635C                         10670m Areg_M: printSizeLow       (A2) 
0000635C  3612                   10671m         MOVE.W  (A2), D3      ; INPUT VALUE   
0000635E  4247                   10672m         CLR     D7   
00006360                         10673m CHECKFORB_841: 
00006360  0803 0006              10674m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006364  6600 0018              10675m         BNE     CHECKFORW_841  ; IF NOT GO TO WORD SIZE
00006368  0803 0007              10676m         BTST    #7, D3      ; CHECK IF CONTAINS 0
0000636C  6600 001E              10677m         BNE     CHECKFORL_841 ; IF NOT GO TO LONGWORD SIZE
00006370  43F8 00C0              10678m         LEA     OBSIZE, A1     
00006374  103C 000E              10679m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006378  4E4F                   10680m         TRAP    #15
0000637A  6000 001E              10681m         BRA     COMPLETE_841      
0000637E                         10682m CHECKFORW_841: 
0000637E  43F8 00C4              10683m         LEA     OWSIZE, A1     
00006382  103C 000E              10684m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006386  4E4F                   10685m         TRAP    #15
00006388  6000 0010              10686m         BRA     COMPLETE_841  
0000638C                         10687m CHECKFORL_841:
0000638C  1E3C 0001              10688m         MOVE.B  #$1, D7
00006390  43F8 00C8              10689m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006394  103C 000E              10690m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006398  4E4F                   10691m         TRAP    #15
0000639A                         10692m COMPLETE_841:  ; SIZE HAS BEEN PRINTED
0000639A                         10693m         ENDM
0000639A                         10694m         printCount       (A2)
0000639A  3212                   10695m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000639C  E949                   10696m         LSL     #$04, D1
0000639E  E049                   10697m         LSR     #$08, D1
000063A0  EA49                   10698m         LSR     #$05, D1
000063A2  43F8 00DB              10699m         LEA     OHASH, A1     
000063A6  103C 000E              10700m         MOVE.B  #14,D0          
000063AA  4E4F                   10701m         TRAP    #15
000063AC  103C 0003              10702m         MOVE.B  #3,D0          
000063B0  4E4F                   10703m         TRAP    #15
000063B2                         10704m         ENDM
000063B2                         10705m         printComma
000063B2  43F8 00D4              10706m         LEA     OCOMMA, A1     
000063B6  103C 000E              10707m         MOVE.B  #14,D0          
000063BA  4E4F                   10708m         TRAP    #15
000063BC                         10709m         ENDM
000063BC                         10710m         printDnSrc     (A2)          
000063BC  4281                   10711m         CLR.L   D1
000063BE  3212                   10712m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000063C0  E149                   10713m         LSL     #$08, D1
000063C2  EB49                   10714m         LSL     #$05, D1
000063C4  E049                   10715m         LSR     #$08, D1
000063C6  EA49                   10716m         LSR     #$05, D1
000063C8  43F8 00CC              10717m         LEA     ODN, A1     
000063CC  103C 000E              10718m         MOVE.B  #14,D0          
000063D0  4E4F                   10719m         TRAP    #15
000063D2  103C 0003              10720m         MOVE.B  #3,D0          
000063D6  4E4F                   10721m         TRAP    #15
000063D8                         10722m         ENDM
000063D8  4E75                   10723          RTS                 ; Return from decodeASx_M subroutine
000063DA                         10724  
000063DA                         10725  
000063DA                         10726  ; ------------------------------------------------------------
000063DA                         10727  ; 12b. "decodeASx_R" subroutine
000063DA                         10728  ; Gary
000063DA                         10729  ;
000063DA                         10730  ; Decodes Arithmetical Shifts by checking if its memory or registers
000063DA                         10731  ; it receives then prints. 
000063DA                         10732  ; ------------------------------------------------------------
000063DA                         10733  decodeASx_R:
000063DA                         10734m         verifyOpcode    pASx_R, (A2)
000063DA  43F8 01EC              10735m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
000063DE  3612                   10736m         MOVE.W  (A2), D3      ; INPUT VALUE
000063E0  123C 000F              10737m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063E4                         10738m         
000063E4                         10739m LOOP_845: 
000063E4  0C11 0030              10740m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063E8  6700 000E              10741m         BEQ     CHECKFOR0_845
000063EC  0C11 0031              10742m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063F0  6700 0010              10743m         BEQ     CHECKFOR1_845
000063F4  6000 0012              10744m         BRA     NEXT_845      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063F8                         10745m         
000063F8                         10746m CHECKFOR0_845: 
000063F8  0303                   10747m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063FA  6600 13A6              10748m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063FE  6000 0008              10749m         BRA     NEXT_845
00006402                         10750m 
00006402                         10751m CHECKFOR1_845:
00006402  0303                   10752m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006404  6700 139C              10753m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006408                         10754m 
00006408                         10755m NEXT_845: 
00006408  B23C 0000              10756m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000640C  6700 0008              10757m         BEQ     COMPLETE_845  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006410  5301                   10758m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006412  1819                   10759m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006414  60CE                   10760m         BRA     LOOP_845      ; BEGIN LOOP AGAIN
00006416                         10761m 
00006416                         10762m COMPLETE_845:  ; OPCODE HAS BEEN VERIFIED
00006416                         10763m         ENDM
00006416  0803 0008              10764          BTST    #$08, D3     ; Check the 8th bit
0000641A  6700 0010              10765          BEQ     ASR_R
0000641E  43F8 00A0              10766  ASL_R:  LEA     oASL, A1
00006422  103C 000E              10767          MOVE.B  #14,D0          
00006426  4E4F                   10768          TRAP    #15 
00006428  6000 000C              10769          BRA     Areg_R       
0000642C                         10770    
0000642C  43F8 00A4              10771  ASR_R:  LEA     oASR, A1
00006430  103C 000E              10772          MOVE.B  #14,D0          
00006434  4E4F                   10773          TRAP    #15      
00006436                         10774m Areg_R: printSizeLow       (A2)
00006436  3612                   10775m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006438  4247                   10776m         CLR     D7   
0000643A                         10777m CHECKFORB_846: 
0000643A  0803 0006              10778m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000643E  6600 0018              10779m         BNE     CHECKFORW_846  ; IF NOT GO TO WORD SIZE
00006442  0803 0007              10780m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006446  6600 001E              10781m         BNE     CHECKFORL_846 ; IF NOT GO TO LONGWORD SIZE
0000644A  43F8 00C0              10782m         LEA     OBSIZE, A1     
0000644E  103C 000E              10783m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006452  4E4F                   10784m         TRAP    #15
00006454  6000 001E              10785m         BRA     COMPLETE_846      
00006458                         10786m CHECKFORW_846: 
00006458  43F8 00C4              10787m         LEA     OWSIZE, A1     
0000645C  103C 000E              10788m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006460  4E4F                   10789m         TRAP    #15
00006462  6000 0010              10790m         BRA     COMPLETE_846  
00006466                         10791m CHECKFORL_846:
00006466  1E3C 0001              10792m         MOVE.B  #$1, D7
0000646A  43F8 00C8              10793m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000646E  103C 000E              10794m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006472  4E4F                   10795m         TRAP    #15
00006474                         10796m COMPLETE_846:  ; SIZE HAS BEEN PRINTED
00006474                         10797m         ENDM
00006474                         10798m         printDnDest    (A2)
00006474  3212                   10799m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006476  E949                   10800m         LSL     #$04, D1
00006478  E049                   10801m         LSR     #$08, D1
0000647A  EA49                   10802m         LSR     #$05, D1
0000647C  43F8 00CC              10803m         LEA     ODN, A1     
00006480  103C 000E              10804m         MOVE.B  #14,D0          
00006484  4E4F                   10805m         TRAP    #15
00006486  103C 0003              10806m         MOVE.B  #3,D0          
0000648A  4E4F                   10807m         TRAP    #15
0000648C                         10808m         ENDM
0000648C                         10809m         printComma
0000648C  43F8 00D4              10810m         LEA     OCOMMA, A1     
00006490  103C 000E              10811m         MOVE.B  #14,D0          
00006494  4E4F                   10812m         TRAP    #15
00006496                         10813m         ENDM
00006496                         10814m         printDnSrc     (A2)
00006496  4281                   10815m         CLR.L   D1
00006498  3212                   10816m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000649A  E149                   10817m         LSL     #$08, D1
0000649C  EB49                   10818m         LSL     #$05, D1
0000649E  E049                   10819m         LSR     #$08, D1
000064A0  EA49                   10820m         LSR     #$05, D1
000064A2  43F8 00CC              10821m         LEA     ODN, A1     
000064A6  103C 000E              10822m         MOVE.B  #14,D0          
000064AA  4E4F                   10823m         TRAP    #15
000064AC  103C 0003              10824m         MOVE.B  #3,D0          
000064B0  4E4F                   10825m         TRAP    #15
000064B2                         10826m         ENDM
000064B2  4E75                   10827          RTS                 ; Return from decodeASx_R subroutine
000064B4                         10828          
000064B4                         10829          ; ------------------------------------------------------------
000064B4                         10830  
000064B4                         10831  
000064B4                         10832  ; ------------------------------------------------------------
000064B4                         10833  ; 13a. "decodeBEQ" subroutine
000064B4                         10834  ; Gary
000064B4                         10835  ;
000064B4                         10836  ; Decodes Branching by verifying then decoding displacement.
000064B4                         10837  ; ------------------------------------------------------------
000064B4                         10838  decodeBEQ:
000064B4                         10839m         verifyOpcode    pBEQ, (A2)
000064B4  43F8 020E              10840m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
000064B8  3612                   10841m         MOVE.W  (A2), D3      ; INPUT VALUE
000064BA  123C 000F              10842m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000064BE                         10843m         
000064BE                         10844m LOOP_850: 
000064BE  0C11 0030              10845m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000064C2  6700 000E              10846m         BEQ     CHECKFOR0_850
000064C6  0C11 0031              10847m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000064CA  6700 0010              10848m         BEQ     CHECKFOR1_850
000064CE  6000 0012              10849m         BRA     NEXT_850      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000064D2                         10850m         
000064D2                         10851m CHECKFOR0_850: 
000064D2  0303                   10852m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000064D4  6600 12CC              10853m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000064D8  6000 0008              10854m         BRA     NEXT_850
000064DC                         10855m 
000064DC                         10856m CHECKFOR1_850:
000064DC  0303                   10857m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000064DE  6700 12C2              10858m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000064E2                         10859m 
000064E2                         10860m NEXT_850: 
000064E2  B23C 0000              10861m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000064E6  6700 0008              10862m         BEQ     COMPLETE_850  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000064EA  5301                   10863m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000064EC  1819                   10864m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000064EE  60CE                   10865m         BRA     LOOP_850      ; BEGIN LOOP AGAIN
000064F0                         10866m 
000064F0                         10867m COMPLETE_850:  ; OPCODE HAS BEEN VERIFIED
000064F0                         10868m         ENDM
000064F0  43F8 00A8              10869          LEA     oBEQ, A1     
000064F4  103C 000E              10870          MOVE.B  #14,D0          
000064F8  4E4F                   10871          TRAP    #15
000064FA                         10872m         space
000064FA  43F8 00DD              10873m         LEA     OBLANK, A1
000064FE  103C 000E              10874m         MOVE.B  #14,D0          
00006502  4E4F                   10875m         TRAP    #15
00006504                         10876m         ENDM
00006504                         10877m         printSign
00006504  103C 0006              10878m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006508  323C 0024              10879m         MOVE.W  #36, D1     ; AN = SIGN
0000650C  4E4F                   10880m         TRAP    #15         ; OUTPUT = SIGN
0000650E                         10881m         ENDM
0000650E                         10882m         decodeDisplacement (A2)
0000650E  3612                   10883m         MOVE.W (A2), D3           
00006510  4241                   10884m         CLR     D1
00006512  3E0A                   10885m         MOVE.W  A2, D7
00006514  B63C 0000              10886m         CMP.B   #$0, D3
00006518  6700 009E              10887m         BEQ     SBIT_853
0000651C  B63C 00FF              10888m         CMP.B   #$FF, D3
00006520  6700 0128              10889m         BEQ     TBIT_853
00006524                         10890m EBIT_853:   
00006524  E14B                   10891m         LSL     #08, D3
00006526  E04B                   10892m         LSR     #08, D3
00006528  48C3                   10893m         EXT.L   D3
0000652A  DE83                   10894m         ADD.L   D3, D7
0000652C  5487                   10895m         ADD.L   #2, D7
0000652E                         10896mm         ADROUTINPUT D7     
0000652E  2E07                   10897mm         MOVE.L   D7, D7     
00006530  103C 0006              10898mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006534  3207                   10899mm         MOVE.W  D7, D1    
00006536  E049                   10900mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006538  E849                   10901mm         LSR.W   #4, D1      
0000653A                         10902mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000653A  0C01 0009              10903mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000653E  6E00 000A              10904mmm         BGT     ALPHA_855
00006542  0601 0030              10905mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006546  6000 0006              10906mmm         BRA     DONE_855
0000654A  0601 0037              10907mmm ALPHA_855: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000654E  4E71                   10908mmm DONE_855: NOP
00006550                         10909mmm         ENDM
00006550  4E4F                   10910mm         TRAP    #15         ; EXECUTE OUTPUT
00006552                         10911mm         
00006552  3207                   10912mm         MOVE.W  D7, D1    
00006554  E949                   10913mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006556  E049                   10914mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006558  E849                   10915mm         LSR.W   #4, D1      
0000655A                         10916mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000655A  0C01 0009              10917mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000655E  6E00 000A              10918mmm         BGT     ALPHA_856
00006562  0601 0030              10919mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006566  6000 0006              10920mmm         BRA     DONE_856
0000656A  0601 0037              10921mmm ALPHA_856: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000656E  4E71                   10922mmm DONE_856: NOP
00006570                         10923mmm         ENDM
00006570  4E4F                   10924mm         TRAP    #15         ; EXECUTE OUTPUT
00006572                         10925mm         
00006572  3207                   10926mm         MOVE.W  D7, D1    
00006574  E149                   10927mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006576  E049                   10928mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006578  E849                   10929mm         LSR.W   #4, D1      
0000657A                         10930mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000657A  0C01 0009              10931mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000657E  6E00 000A              10932mmm         BGT     ALPHA_857
00006582  0601 0030              10933mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006586  6000 0006              10934mmm         BRA     DONE_857
0000658A  0601 0037              10935mmm ALPHA_857: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000658E  4E71                   10936mmm DONE_857: NOP
00006590                         10937mmm         ENDM
00006590  4E4F                   10938mm         TRAP    #15         ; EXECUTE OUTPUT
00006592                         10939mm         
00006592  3207                   10940mm         MOVE.W  D7, D1    
00006594  E149                   10941mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006596  E949                   10942mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006598  E049                   10943mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000659A  E849                   10944mm         LSR.W   #4, D1      
0000659C                         10945mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000659C  0C01 0009              10946mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065A0  6E00 000A              10947mmm         BGT     ALPHA_858
000065A4  0601 0030              10948mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065A8  6000 0006              10949mmm         BRA     DONE_858
000065AC  0601 0037              10950mmm ALPHA_858: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000065B0  4E71                   10951mmm DONE_858: NOP
000065B2                         10952mmm         ENDM
000065B2  4E4F                   10953mm         TRAP    #15         ; EXECUTE OUTPUT       
000065B4                         10954mm         ENDM 
000065B4  6000 0126              10955m         BRA     DECODEDISPLACEMENT_853
000065B8                         10956m SBIT_853:  
000065B8  361A                   10957m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
000065BA  48C3                   10958m         EXT.L    D3
000065BC  DE83                   10959m         ADD.L   D3, D7
000065BE  5487                   10960m         ADD.L   #2, D7
000065C0                         10961mm         ADROUTINPUT D7
000065C0  2E07                   10962mm         MOVE.L   D7, D7     
000065C2  103C 0006              10963mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000065C6  3207                   10964mm         MOVE.W  D7, D1    
000065C8  E049                   10965mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000065CA  E849                   10966mm         LSR.W   #4, D1      
000065CC                         10967mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000065CC  0C01 0009              10968mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065D0  6E00 000A              10969mmm         BGT     ALPHA_860
000065D4  0601 0030              10970mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065D8  6000 0006              10971mmm         BRA     DONE_860
000065DC  0601 0037              10972mmm ALPHA_860: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000065E0  4E71                   10973mmm DONE_860: NOP
000065E2                         10974mmm         ENDM
000065E2  4E4F                   10975mm         TRAP    #15         ; EXECUTE OUTPUT
000065E4                         10976mm         
000065E4  3207                   10977mm         MOVE.W  D7, D1    
000065E6  E949                   10978mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000065E8  E049                   10979mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000065EA  E849                   10980mm         LSR.W   #4, D1      
000065EC                         10981mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000065EC  0C01 0009              10982mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065F0  6E00 000A              10983mmm         BGT     ALPHA_861
000065F4  0601 0030              10984mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065F8  6000 0006              10985mmm         BRA     DONE_861
000065FC  0601 0037              10986mmm ALPHA_861: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006600  4E71                   10987mmm DONE_861: NOP
00006602                         10988mmm         ENDM
00006602  4E4F                   10989mm         TRAP    #15         ; EXECUTE OUTPUT
00006604                         10990mm         
00006604  3207                   10991mm         MOVE.W  D7, D1    
00006606  E149                   10992mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006608  E049                   10993mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000660A  E849                   10994mm         LSR.W   #4, D1      
0000660C                         10995mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000660C  0C01 0009              10996mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006610  6E00 000A              10997mmm         BGT     ALPHA_862
00006614  0601 0030              10998mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006618  6000 0006              10999mmm         BRA     DONE_862
0000661C  0601 0037              11000mmm ALPHA_862: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006620  4E71                   11001mmm DONE_862: NOP
00006622                         11002mmm         ENDM
00006622  4E4F                   11003mm         TRAP    #15         ; EXECUTE OUTPUT
00006624                         11004mm         
00006624  3207                   11005mm         MOVE.W  D7, D1    
00006626  E149                   11006mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006628  E949                   11007mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000662A  E049                   11008mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000662C  E849                   11009mm         LSR.W   #4, D1      
0000662E                         11010mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000662E  0C01 0009              11011mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006632  6E00 000A              11012mmm         BGT     ALPHA_863
00006636  0601 0030              11013mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000663A  6000 0006              11014mmm         BRA     DONE_863
0000663E  0601 0037              11015mmm ALPHA_863: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006642  4E71                   11016mmm DONE_863: NOP
00006644                         11017mmm         ENDM
00006644  4E4F                   11018mm         TRAP    #15         ; EXECUTE OUTPUT       
00006646                         11019mm         ENDM 
00006646  6000 0094              11020m         BRA     DECODEDISPLACEMENT_853
0000664A                         11021m TBIT_853:  
0000664A  361A                   11022m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
0000664C  48C3                   11023m         EXT.L   D3
0000664E  4843                   11024m         SWAP    D3
00006650  361A                   11025m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
00006652  DE83                   11026m         ADD.L   D3, D7
00006654  5487                   11027m         ADD.L   #2, D7
00006656                         11028mm         ADROUTINPUT D7
00006656  2E07                   11029mm         MOVE.L   D7, D7     
00006658  103C 0006              11030mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000665C  3207                   11031mm         MOVE.W  D7, D1    
0000665E  E049                   11032mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006660  E849                   11033mm         LSR.W   #4, D1      
00006662                         11034mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006662  0C01 0009              11035mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006666  6E00 000A              11036mmm         BGT     ALPHA_865
0000666A  0601 0030              11037mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000666E  6000 0006              11038mmm         BRA     DONE_865
00006672  0601 0037              11039mmm ALPHA_865: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006676  4E71                   11040mmm DONE_865: NOP
00006678                         11041mmm         ENDM
00006678  4E4F                   11042mm         TRAP    #15         ; EXECUTE OUTPUT
0000667A                         11043mm         
0000667A  3207                   11044mm         MOVE.W  D7, D1    
0000667C  E949                   11045mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000667E  E049                   11046mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006680  E849                   11047mm         LSR.W   #4, D1      
00006682                         11048mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006682  0C01 0009              11049mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006686  6E00 000A              11050mmm         BGT     ALPHA_866
0000668A  0601 0030              11051mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000668E  6000 0006              11052mmm         BRA     DONE_866
00006692  0601 0037              11053mmm ALPHA_866: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006696  4E71                   11054mmm DONE_866: NOP
00006698                         11055mmm         ENDM
00006698  4E4F                   11056mm         TRAP    #15         ; EXECUTE OUTPUT
0000669A                         11057mm         
0000669A  3207                   11058mm         MOVE.W  D7, D1    
0000669C  E149                   11059mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000669E  E049                   11060mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000066A0  E849                   11061mm         LSR.W   #4, D1      
000066A2                         11062mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000066A2  0C01 0009              11063mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000066A6  6E00 000A              11064mmm         BGT     ALPHA_867
000066AA  0601 0030              11065mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000066AE  6000 0006              11066mmm         BRA     DONE_867
000066B2  0601 0037              11067mmm ALPHA_867: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000066B6  4E71                   11068mmm DONE_867: NOP
000066B8                         11069mmm         ENDM
000066B8  4E4F                   11070mm         TRAP    #15         ; EXECUTE OUTPUT
000066BA                         11071mm         
000066BA  3207                   11072mm         MOVE.W  D7, D1    
000066BC  E149                   11073mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000066BE  E949                   11074mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000066C0  E049                   11075mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000066C2  E849                   11076mm         LSR.W   #4, D1      
000066C4                         11077mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000066C4  0C01 0009              11078mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000066C8  6E00 000A              11079mmm         BGT     ALPHA_868
000066CC  0601 0030              11080mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000066D0  6000 0006              11081mmm         BRA     DONE_868
000066D4  0601 0037              11082mmm ALPHA_868: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000066D8  4E71                   11083mmm DONE_868: NOP
000066DA                         11084mmm         ENDM
000066DA  4E4F                   11085mm         TRAP    #15         ; EXECUTE OUTPUT       
000066DC                         11086mm         ENDM 
000066DC                         11087m DECODEDISPLACEMENT_853:
000066DC                         11088m         ENDM        
000066DC  4E75                   11089          RTS                 ; Return from decodeBEQ subroutine
000066DE                         11090  
000066DE                         11091  
000066DE                         11092  ; ------------------------------------------------------------
000066DE                         11093  ; 13b. "decodeBGE" subroutine
000066DE                         11094  ; Gary
000066DE                         11095  ;
000066DE                         11096  ; Decodes Branching by verifying then decoding displacement.
000066DE                         11097  ; ------------------------------------------------------------
000066DE                         11098  decodeBGE:
000066DE                         11099m         verifyOpcode    pBGE, (A2)
000066DE  43F8 021F              11100m         LEA     PBGE, A1      ; INPUT PATTERN STRING
000066E2  3612                   11101m         MOVE.W  (A2), D3      ; INPUT VALUE
000066E4  123C 000F              11102m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000066E8                         11103m         
000066E8                         11104m LOOP_869: 
000066E8  0C11 0030              11105m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000066EC  6700 000E              11106m         BEQ     CHECKFOR0_869
000066F0  0C11 0031              11107m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000066F4  6700 0010              11108m         BEQ     CHECKFOR1_869
000066F8  6000 0012              11109m         BRA     NEXT_869      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000066FC                         11110m         
000066FC                         11111m CHECKFOR0_869: 
000066FC  0303                   11112m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000066FE  6600 10A2              11113m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006702  6000 0008              11114m         BRA     NEXT_869
00006706                         11115m 
00006706                         11116m CHECKFOR1_869:
00006706  0303                   11117m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006708  6700 1098              11118m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000670C                         11119m 
0000670C                         11120m NEXT_869: 
0000670C  B23C 0000              11121m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006710  6700 0008              11122m         BEQ     COMPLETE_869  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006714  5301                   11123m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006716  1819                   11124m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006718  60CE                   11125m         BRA     LOOP_869      ; BEGIN LOOP AGAIN
0000671A                         11126m 
0000671A                         11127m COMPLETE_869:  ; OPCODE HAS BEEN VERIFIED
0000671A                         11128m         ENDM
0000671A  43F8 00AC              11129          LEA     oBGE, A1     
0000671E  103C 000E              11130          MOVE.B  #14,D0          
00006722  4E4F                   11131          TRAP    #15
00006724                         11132m         space
00006724  43F8 00DD              11133m         LEA     OBLANK, A1
00006728  103C 000E              11134m         MOVE.B  #14,D0          
0000672C  4E4F                   11135m         TRAP    #15
0000672E                         11136m         ENDM
0000672E                         11137m         printSign
0000672E  103C 0006              11138m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006732  323C 0024              11139m         MOVE.W  #36, D1     ; AN = SIGN
00006736  4E4F                   11140m         TRAP    #15         ; OUTPUT = SIGN
00006738                         11141m         ENDM
00006738                         11142m         decodeDisplacement (A2)
00006738  3612                   11143m         MOVE.W (A2), D3           
0000673A  4241                   11144m         CLR     D1
0000673C  3E0A                   11145m         MOVE.W  A2, D7
0000673E  B63C 0000              11146m         CMP.B   #$0, D3
00006742  6700 009E              11147m         BEQ     SBIT_872
00006746  B63C 00FF              11148m         CMP.B   #$FF, D3
0000674A  6700 0128              11149m         BEQ     TBIT_872
0000674E                         11150m EBIT_872:   
0000674E  E14B                   11151m         LSL     #08, D3
00006750  E04B                   11152m         LSR     #08, D3
00006752  48C3                   11153m         EXT.L   D3
00006754  DE83                   11154m         ADD.L   D3, D7
00006756  5487                   11155m         ADD.L   #2, D7
00006758                         11156mm         ADROUTINPUT D7     
00006758  2E07                   11157mm         MOVE.L   D7, D7     
0000675A  103C 0006              11158mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000675E  3207                   11159mm         MOVE.W  D7, D1    
00006760  E049                   11160mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006762  E849                   11161mm         LSR.W   #4, D1      
00006764                         11162mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006764  0C01 0009              11163mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006768  6E00 000A              11164mmm         BGT     ALPHA_874
0000676C  0601 0030              11165mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006770  6000 0006              11166mmm         BRA     DONE_874
00006774  0601 0037              11167mmm ALPHA_874: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006778  4E71                   11168mmm DONE_874: NOP
0000677A                         11169mmm         ENDM
0000677A  4E4F                   11170mm         TRAP    #15         ; EXECUTE OUTPUT
0000677C                         11171mm         
0000677C  3207                   11172mm         MOVE.W  D7, D1    
0000677E  E949                   11173mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006780  E049                   11174mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006782  E849                   11175mm         LSR.W   #4, D1      
00006784                         11176mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006784  0C01 0009              11177mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006788  6E00 000A              11178mmm         BGT     ALPHA_875
0000678C  0601 0030              11179mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006790  6000 0006              11180mmm         BRA     DONE_875
00006794  0601 0037              11181mmm ALPHA_875: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006798  4E71                   11182mmm DONE_875: NOP
0000679A                         11183mmm         ENDM
0000679A  4E4F                   11184mm         TRAP    #15         ; EXECUTE OUTPUT
0000679C                         11185mm         
0000679C  3207                   11186mm         MOVE.W  D7, D1    
0000679E  E149                   11187mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067A0  E049                   11188mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067A2  E849                   11189mm         LSR.W   #4, D1      
000067A4                         11190mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067A4  0C01 0009              11191mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067A8  6E00 000A              11192mmm         BGT     ALPHA_876
000067AC  0601 0030              11193mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067B0  6000 0006              11194mmm         BRA     DONE_876
000067B4  0601 0037              11195mmm ALPHA_876: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067B8  4E71                   11196mmm DONE_876: NOP
000067BA                         11197mmm         ENDM
000067BA  4E4F                   11198mm         TRAP    #15         ; EXECUTE OUTPUT
000067BC                         11199mm         
000067BC  3207                   11200mm         MOVE.W  D7, D1    
000067BE  E149                   11201mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067C0  E949                   11202mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000067C2  E049                   11203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067C4  E849                   11204mm         LSR.W   #4, D1      
000067C6                         11205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067C6  0C01 0009              11206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067CA  6E00 000A              11207mmm         BGT     ALPHA_877
000067CE  0601 0030              11208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067D2  6000 0006              11209mmm         BRA     DONE_877
000067D6  0601 0037              11210mmm ALPHA_877: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067DA  4E71                   11211mmm DONE_877: NOP
000067DC                         11212mmm         ENDM
000067DC  4E4F                   11213mm         TRAP    #15         ; EXECUTE OUTPUT       
000067DE                         11214mm         ENDM 
000067DE  6000 0126              11215m         BRA     DECODEDISPLACEMENT_872
000067E2                         11216m SBIT_872:  
000067E2  361A                   11217m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
000067E4  48C3                   11218m         EXT.L    D3
000067E6  DE83                   11219m         ADD.L   D3, D7
000067E8  5487                   11220m         ADD.L   #2, D7
000067EA                         11221mm         ADROUTINPUT D7
000067EA  2E07                   11222mm         MOVE.L   D7, D7     
000067EC  103C 0006              11223mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000067F0  3207                   11224mm         MOVE.W  D7, D1    
000067F2  E049                   11225mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067F4  E849                   11226mm         LSR.W   #4, D1      
000067F6                         11227mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067F6  0C01 0009              11228mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067FA  6E00 000A              11229mmm         BGT     ALPHA_879
000067FE  0601 0030              11230mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006802  6000 0006              11231mmm         BRA     DONE_879
00006806  0601 0037              11232mmm ALPHA_879: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000680A  4E71                   11233mmm DONE_879: NOP
0000680C                         11234mmm         ENDM
0000680C  4E4F                   11235mm         TRAP    #15         ; EXECUTE OUTPUT
0000680E                         11236mm         
0000680E  3207                   11237mm         MOVE.W  D7, D1    
00006810  E949                   11238mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006812  E049                   11239mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006814  E849                   11240mm         LSR.W   #4, D1      
00006816                         11241mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006816  0C01 0009              11242mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000681A  6E00 000A              11243mmm         BGT     ALPHA_880
0000681E  0601 0030              11244mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006822  6000 0006              11245mmm         BRA     DONE_880
00006826  0601 0037              11246mmm ALPHA_880: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000682A  4E71                   11247mmm DONE_880: NOP
0000682C                         11248mmm         ENDM
0000682C  4E4F                   11249mm         TRAP    #15         ; EXECUTE OUTPUT
0000682E                         11250mm         
0000682E  3207                   11251mm         MOVE.W  D7, D1    
00006830  E149                   11252mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006832  E049                   11253mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006834  E849                   11254mm         LSR.W   #4, D1      
00006836                         11255mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006836  0C01 0009              11256mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000683A  6E00 000A              11257mmm         BGT     ALPHA_881
0000683E  0601 0030              11258mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006842  6000 0006              11259mmm         BRA     DONE_881
00006846  0601 0037              11260mmm ALPHA_881: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000684A  4E71                   11261mmm DONE_881: NOP
0000684C                         11262mmm         ENDM
0000684C  4E4F                   11263mm         TRAP    #15         ; EXECUTE OUTPUT
0000684E                         11264mm         
0000684E  3207                   11265mm         MOVE.W  D7, D1    
00006850  E149                   11266mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006852  E949                   11267mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006854  E049                   11268mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006856  E849                   11269mm         LSR.W   #4, D1      
00006858                         11270mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006858  0C01 0009              11271mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000685C  6E00 000A              11272mmm         BGT     ALPHA_882
00006860  0601 0030              11273mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006864  6000 0006              11274mmm         BRA     DONE_882
00006868  0601 0037              11275mmm ALPHA_882: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000686C  4E71                   11276mmm DONE_882: NOP
0000686E                         11277mmm         ENDM
0000686E  4E4F                   11278mm         TRAP    #15         ; EXECUTE OUTPUT       
00006870                         11279mm         ENDM 
00006870  6000 0094              11280m         BRA     DECODEDISPLACEMENT_872
00006874                         11281m TBIT_872:  
00006874  361A                   11282m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006876  48C3                   11283m         EXT.L   D3
00006878  4843                   11284m         SWAP    D3
0000687A  361A                   11285m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
0000687C  DE83                   11286m         ADD.L   D3, D7
0000687E  5487                   11287m         ADD.L   #2, D7
00006880                         11288mm         ADROUTINPUT D7
00006880  2E07                   11289mm         MOVE.L   D7, D7     
00006882  103C 0006              11290mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006886  3207                   11291mm         MOVE.W  D7, D1    
00006888  E049                   11292mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000688A  E849                   11293mm         LSR.W   #4, D1      
0000688C                         11294mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000688C  0C01 0009              11295mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006890  6E00 000A              11296mmm         BGT     ALPHA_884
00006894  0601 0030              11297mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006898  6000 0006              11298mmm         BRA     DONE_884
0000689C  0601 0037              11299mmm ALPHA_884: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068A0  4E71                   11300mmm DONE_884: NOP
000068A2                         11301mmm         ENDM
000068A2  4E4F                   11302mm         TRAP    #15         ; EXECUTE OUTPUT
000068A4                         11303mm         
000068A4  3207                   11304mm         MOVE.W  D7, D1    
000068A6  E949                   11305mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000068A8  E049                   11306mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068AA  E849                   11307mm         LSR.W   #4, D1      
000068AC                         11308mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068AC  0C01 0009              11309mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068B0  6E00 000A              11310mmm         BGT     ALPHA_885
000068B4  0601 0030              11311mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068B8  6000 0006              11312mmm         BRA     DONE_885
000068BC  0601 0037              11313mmm ALPHA_885: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068C0  4E71                   11314mmm DONE_885: NOP
000068C2                         11315mmm         ENDM
000068C2  4E4F                   11316mm         TRAP    #15         ; EXECUTE OUTPUT
000068C4                         11317mm         
000068C4  3207                   11318mm         MOVE.W  D7, D1    
000068C6  E149                   11319mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068C8  E049                   11320mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068CA  E849                   11321mm         LSR.W   #4, D1      
000068CC                         11322mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068CC  0C01 0009              11323mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068D0  6E00 000A              11324mmm         BGT     ALPHA_886
000068D4  0601 0030              11325mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068D8  6000 0006              11326mmm         BRA     DONE_886
000068DC  0601 0037              11327mmm ALPHA_886: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068E0  4E71                   11328mmm DONE_886: NOP
000068E2                         11329mmm         ENDM
000068E2  4E4F                   11330mm         TRAP    #15         ; EXECUTE OUTPUT
000068E4                         11331mm         
000068E4  3207                   11332mm         MOVE.W  D7, D1    
000068E6  E149                   11333mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068E8  E949                   11334mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000068EA  E049                   11335mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068EC  E849                   11336mm         LSR.W   #4, D1      
000068EE                         11337mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068EE  0C01 0009              11338mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068F2  6E00 000A              11339mmm         BGT     ALPHA_887
000068F6  0601 0030              11340mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068FA  6000 0006              11341mmm         BRA     DONE_887
000068FE  0601 0037              11342mmm ALPHA_887: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006902  4E71                   11343mmm DONE_887: NOP
00006904                         11344mmm         ENDM
00006904  4E4F                   11345mm         TRAP    #15         ; EXECUTE OUTPUT       
00006906                         11346mm         ENDM 
00006906                         11347m DECODEDISPLACEMENT_872:
00006906                         11348m         ENDM        
00006906                         11349  
00006906  4E75                   11350          RTS                 ; Return from decodeBGE subroutine
00006908                         11351  
00006908                         11352  
00006908                         11353  ; ------------------------------------------------------------
00006908                         11354  ; 13c. "decodeBLT" subroutine
00006908                         11355  ; Gary
00006908                         11356  ;
00006908                         11357  ; Decodes Branching by verifying then decoding displacement.
00006908                         11358  ; ------------------------------------------------------------
00006908                         11359  decodeBLT:
00006908                         11360m         verifyOpcode    pBLT, (A2)
00006908  43F8 0230              11361m         LEA     PBLT, A1      ; INPUT PATTERN STRING
0000690C  3612                   11362m         MOVE.W  (A2), D3      ; INPUT VALUE
0000690E  123C 000F              11363m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006912                         11364m         
00006912                         11365m LOOP_888: 
00006912  0C11 0030              11366m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006916  6700 000E              11367m         BEQ     CHECKFOR0_888
0000691A  0C11 0031              11368m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000691E  6700 0010              11369m         BEQ     CHECKFOR1_888
00006922  6000 0012              11370m         BRA     NEXT_888      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006926                         11371m         
00006926                         11372m CHECKFOR0_888: 
00006926  0303                   11373m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006928  6600 0E78              11374m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000692C  6000 0008              11375m         BRA     NEXT_888
00006930                         11376m 
00006930                         11377m CHECKFOR1_888:
00006930  0303                   11378m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006932  6700 0E6E              11379m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006936                         11380m 
00006936                         11381m NEXT_888: 
00006936  B23C 0000              11382m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000693A  6700 0008              11383m         BEQ     COMPLETE_888  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000693E  5301                   11384m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006940  1819                   11385m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006942  60CE                   11386m         BRA     LOOP_888      ; BEGIN LOOP AGAIN
00006944                         11387m 
00006944                         11388m COMPLETE_888:  ; OPCODE HAS BEEN VERIFIED
00006944                         11389m         ENDM
00006944  43F8 00B0              11390          LEA     oBLT, A1     
00006948  103C 000E              11391          MOVE.B  #14,D0          
0000694C  4E4F                   11392          TRAP    #15
0000694E                         11393m         space
0000694E  43F8 00DD              11394m         LEA     OBLANK, A1
00006952  103C 000E              11395m         MOVE.B  #14,D0          
00006956  4E4F                   11396m         TRAP    #15
00006958                         11397m         ENDM
00006958                         11398m         printSign
00006958  103C 0006              11399m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000695C  323C 0024              11400m         MOVE.W  #36, D1     ; AN = SIGN
00006960  4E4F                   11401m         TRAP    #15         ; OUTPUT = SIGN
00006962                         11402m         ENDM
00006962                         11403m         decodeDisplacement (A2)
00006962  3612                   11404m         MOVE.W (A2), D3           
00006964  4241                   11405m         CLR     D1
00006966  3E0A                   11406m         MOVE.W  A2, D7
00006968  B63C 0000              11407m         CMP.B   #$0, D3
0000696C  6700 009E              11408m         BEQ     SBIT_891
00006970  B63C 00FF              11409m         CMP.B   #$FF, D3
00006974  6700 0128              11410m         BEQ     TBIT_891
00006978                         11411m EBIT_891:   
00006978  E14B                   11412m         LSL     #08, D3
0000697A  E04B                   11413m         LSR     #08, D3
0000697C  48C3                   11414m         EXT.L   D3
0000697E  DE83                   11415m         ADD.L   D3, D7
00006980  5487                   11416m         ADD.L   #2, D7
00006982                         11417mm         ADROUTINPUT D7     
00006982  2E07                   11418mm         MOVE.L   D7, D7     
00006984  103C 0006              11419mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006988  3207                   11420mm         MOVE.W  D7, D1    
0000698A  E049                   11421mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000698C  E849                   11422mm         LSR.W   #4, D1      
0000698E                         11423mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000698E  0C01 0009              11424mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006992  6E00 000A              11425mmm         BGT     ALPHA_893
00006996  0601 0030              11426mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000699A  6000 0006              11427mmm         BRA     DONE_893
0000699E  0601 0037              11428mmm ALPHA_893: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069A2  4E71                   11429mmm DONE_893: NOP
000069A4                         11430mmm         ENDM
000069A4  4E4F                   11431mm         TRAP    #15         ; EXECUTE OUTPUT
000069A6                         11432mm         
000069A6  3207                   11433mm         MOVE.W  D7, D1    
000069A8  E949                   11434mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000069AA  E049                   11435mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069AC  E849                   11436mm         LSR.W   #4, D1      
000069AE                         11437mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069AE  0C01 0009              11438mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069B2  6E00 000A              11439mmm         BGT     ALPHA_894
000069B6  0601 0030              11440mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069BA  6000 0006              11441mmm         BRA     DONE_894
000069BE  0601 0037              11442mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069C2  4E71                   11443mmm DONE_894: NOP
000069C4                         11444mmm         ENDM
000069C4  4E4F                   11445mm         TRAP    #15         ; EXECUTE OUTPUT
000069C6                         11446mm         
000069C6  3207                   11447mm         MOVE.W  D7, D1    
000069C8  E149                   11448mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069CA  E049                   11449mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069CC  E849                   11450mm         LSR.W   #4, D1      
000069CE                         11451mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069CE  0C01 0009              11452mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069D2  6E00 000A              11453mmm         BGT     ALPHA_895
000069D6  0601 0030              11454mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069DA  6000 0006              11455mmm         BRA     DONE_895
000069DE  0601 0037              11456mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069E2  4E71                   11457mmm DONE_895: NOP
000069E4                         11458mmm         ENDM
000069E4  4E4F                   11459mm         TRAP    #15         ; EXECUTE OUTPUT
000069E6                         11460mm         
000069E6  3207                   11461mm         MOVE.W  D7, D1    
000069E8  E149                   11462mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069EA  E949                   11463mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069EC  E049                   11464mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069EE  E849                   11465mm         LSR.W   #4, D1      
000069F0                         11466mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069F0  0C01 0009              11467mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069F4  6E00 000A              11468mmm         BGT     ALPHA_896
000069F8  0601 0030              11469mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069FC  6000 0006              11470mmm         BRA     DONE_896
00006A00  0601 0037              11471mmm ALPHA_896: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A04  4E71                   11472mmm DONE_896: NOP
00006A06                         11473mmm         ENDM
00006A06  4E4F                   11474mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A08                         11475mm         ENDM 
00006A08  6000 0126              11476m         BRA     DECODEDISPLACEMENT_891
00006A0C                         11477m SBIT_891:  
00006A0C  361A                   11478m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006A0E  48C3                   11479m         EXT.L    D3
00006A10  DE83                   11480m         ADD.L   D3, D7
00006A12  5487                   11481m         ADD.L   #2, D7
00006A14                         11482mm         ADROUTINPUT D7
00006A14  2E07                   11483mm         MOVE.L   D7, D7     
00006A16  103C 0006              11484mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006A1A  3207                   11485mm         MOVE.W  D7, D1    
00006A1C  E049                   11486mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A1E  E849                   11487mm         LSR.W   #4, D1      
00006A20                         11488mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A20  0C01 0009              11489mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A24  6E00 000A              11490mmm         BGT     ALPHA_898
00006A28  0601 0030              11491mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A2C  6000 0006              11492mmm         BRA     DONE_898
00006A30  0601 0037              11493mmm ALPHA_898: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A34  4E71                   11494mmm DONE_898: NOP
00006A36                         11495mmm         ENDM
00006A36  4E4F                   11496mm         TRAP    #15         ; EXECUTE OUTPUT
00006A38                         11497mm         
00006A38  3207                   11498mm         MOVE.W  D7, D1    
00006A3A  E949                   11499mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A3C  E049                   11500mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A3E  E849                   11501mm         LSR.W   #4, D1      
00006A40                         11502mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A40  0C01 0009              11503mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A44  6E00 000A              11504mmm         BGT     ALPHA_899
00006A48  0601 0030              11505mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A4C  6000 0006              11506mmm         BRA     DONE_899
00006A50  0601 0037              11507mmm ALPHA_899: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A54  4E71                   11508mmm DONE_899: NOP
00006A56                         11509mmm         ENDM
00006A56  4E4F                   11510mm         TRAP    #15         ; EXECUTE OUTPUT
00006A58                         11511mm         
00006A58  3207                   11512mm         MOVE.W  D7, D1    
00006A5A  E149                   11513mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A5C  E049                   11514mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A5E  E849                   11515mm         LSR.W   #4, D1      
00006A60                         11516mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A60  0C01 0009              11517mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A64  6E00 000A              11518mmm         BGT     ALPHA_900
00006A68  0601 0030              11519mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A6C  6000 0006              11520mmm         BRA     DONE_900
00006A70  0601 0037              11521mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A74  4E71                   11522mmm DONE_900: NOP
00006A76                         11523mmm         ENDM
00006A76  4E4F                   11524mm         TRAP    #15         ; EXECUTE OUTPUT
00006A78                         11525mm         
00006A78  3207                   11526mm         MOVE.W  D7, D1    
00006A7A  E149                   11527mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A7C  E949                   11528mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A7E  E049                   11529mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A80  E849                   11530mm         LSR.W   #4, D1      
00006A82                         11531mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A82  0C01 0009              11532mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A86  6E00 000A              11533mmm         BGT     ALPHA_901
00006A8A  0601 0030              11534mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A8E  6000 0006              11535mmm         BRA     DONE_901
00006A92  0601 0037              11536mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A96  4E71                   11537mmm DONE_901: NOP
00006A98                         11538mmm         ENDM
00006A98  4E4F                   11539mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A9A                         11540mm         ENDM 
00006A9A  6000 0094              11541m         BRA     DECODEDISPLACEMENT_891
00006A9E                         11542m TBIT_891:  
00006A9E  361A                   11543m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006AA0  48C3                   11544m         EXT.L   D3
00006AA2  4843                   11545m         SWAP    D3
00006AA4  361A                   11546m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
00006AA6  DE83                   11547m         ADD.L   D3, D7
00006AA8  5487                   11548m         ADD.L   #2, D7
00006AAA                         11549mm         ADROUTINPUT D7
00006AAA  2E07                   11550mm         MOVE.L   D7, D7     
00006AAC  103C 0006              11551mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006AB0  3207                   11552mm         MOVE.W  D7, D1    
00006AB2  E049                   11553mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AB4  E849                   11554mm         LSR.W   #4, D1      
00006AB6                         11555mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AB6  0C01 0009              11556mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006ABA  6E00 000A              11557mmm         BGT     ALPHA_903
00006ABE  0601 0030              11558mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AC2  6000 0006              11559mmm         BRA     DONE_903
00006AC6  0601 0037              11560mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006ACA  4E71                   11561mmm DONE_903: NOP
00006ACC                         11562mmm         ENDM
00006ACC  4E4F                   11563mm         TRAP    #15         ; EXECUTE OUTPUT
00006ACE                         11564mm         
00006ACE  3207                   11565mm         MOVE.W  D7, D1    
00006AD0  E949                   11566mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006AD2  E049                   11567mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AD4  E849                   11568mm         LSR.W   #4, D1      
00006AD6                         11569mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AD6  0C01 0009              11570mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006ADA  6E00 000A              11571mmm         BGT     ALPHA_904
00006ADE  0601 0030              11572mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AE2  6000 0006              11573mmm         BRA     DONE_904
00006AE6  0601 0037              11574mmm ALPHA_904: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AEA  4E71                   11575mmm DONE_904: NOP
00006AEC                         11576mmm         ENDM
00006AEC  4E4F                   11577mm         TRAP    #15         ; EXECUTE OUTPUT
00006AEE                         11578mm         
00006AEE  3207                   11579mm         MOVE.W  D7, D1    
00006AF0  E149                   11580mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AF2  E049                   11581mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AF4  E849                   11582mm         LSR.W   #4, D1      
00006AF6                         11583mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AF6  0C01 0009              11584mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AFA  6E00 000A              11585mmm         BGT     ALPHA_905
00006AFE  0601 0030              11586mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B02  6000 0006              11587mmm         BRA     DONE_905
00006B06  0601 0037              11588mmm ALPHA_905: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B0A  4E71                   11589mmm DONE_905: NOP
00006B0C                         11590mmm         ENDM
00006B0C  4E4F                   11591mm         TRAP    #15         ; EXECUTE OUTPUT
00006B0E                         11592mm         
00006B0E  3207                   11593mm         MOVE.W  D7, D1    
00006B10  E149                   11594mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B12  E949                   11595mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006B14  E049                   11596mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B16  E849                   11597mm         LSR.W   #4, D1      
00006B18                         11598mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B18  0C01 0009              11599mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B1C  6E00 000A              11600mmm         BGT     ALPHA_906
00006B20  0601 0030              11601mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B24  6000 0006              11602mmm         BRA     DONE_906
00006B28  0601 0037              11603mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B2C  4E71                   11604mmm DONE_906: NOP
00006B2E                         11605mmm         ENDM
00006B2E  4E4F                   11606mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B30                         11607mm         ENDM 
00006B30                         11608m DECODEDISPLACEMENT_891:
00006B30                         11609m         ENDM        
00006B30                         11610  
00006B30  4E75                   11611          RTS                 ; Return from decodeBLT subroutine
00006B32                         11612  
00006B32                         11613  
00006B32                         11614  ; ------------------------------------------------------------
00006B32                         11615  ; 14. "decodeJSR" subroutine
00006B32                         11616  ; Gary
00006B32                         11617  ;
00006B32                         11618  ; Decodes Branching by verifying then decoding displacement.
00006B32                         11619  ; ------------------------------------------------------------
00006B32                         11620  decodeJSR:
00006B32                         11621m         verifyOpcode    pJSR, (A2)
00006B32  43F8 0241              11622m         LEA     PJSR, A1      ; INPUT PATTERN STRING
00006B36  3612                   11623m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B38  123C 000F              11624m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B3C                         11625m         
00006B3C                         11626m LOOP_907: 
00006B3C  0C11 0030              11627m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B40  6700 000E              11628m         BEQ     CHECKFOR0_907
00006B44  0C11 0031              11629m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B48  6700 0010              11630m         BEQ     CHECKFOR1_907
00006B4C  6000 0012              11631m         BRA     NEXT_907      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B50                         11632m         
00006B50                         11633m CHECKFOR0_907: 
00006B50  0303                   11634m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B52  6600 0C4E              11635m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B56  6000 0008              11636m         BRA     NEXT_907
00006B5A                         11637m 
00006B5A                         11638m CHECKFOR1_907:
00006B5A  0303                   11639m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006B5C  6700 0C44              11640m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006B60                         11641m 
00006B60                         11642m NEXT_907: 
00006B60  B23C 0000              11643m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006B64  6700 0008              11644m         BEQ     COMPLETE_907  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B68  5301                   11645m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B6A  1819                   11646m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B6C  60CE                   11647m         BRA     LOOP_907      ; BEGIN LOOP AGAIN
00006B6E                         11648m 
00006B6E                         11649m COMPLETE_907:  ; OPCODE HAS BEEN VERIFIED
00006B6E                         11650m         ENDM
00006B6E  43F8 00B4              11651          LEA     oJSR, A1     
00006B72  103C 000E              11652          MOVE.B  #14,D0          
00006B76  4E4F                   11653          TRAP    #15
00006B78                         11654          
00006B78  43F8 00DD              11655          LEA     oBlank, A1     
00006B7C  103C 000E              11656          MOVE.B  #14,D0          
00006B80  4E4F                   11657          TRAP    #15
00006B82                         11658  
00006B82                         11659m         prepareAdrMode  #$1, (A2)
00006B82  3C3C 0001              11660m         MOVE.W  #$1, D6      ; INPUT VALUE
00006B86  3212                   11661m         MOVE.W  (A2), D1
00006B88  BC3C 0001              11662m         CMP.B   #$01, D6
00006B8C  6700 000C              11663m         BEQ     ADRSOURCE_908    
00006B90                         11664m ADRDEST_908:
00006B90  EF49                   11665m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00006B92  E049                   11666m         LSR     #$08, D1
00006B94  EA49                   11667m         LSR     #$05, D1
00006B96  6000 000A              11668m         BRA     COMPLETE_908 
00006B9A                         11669m ADRSOURCE_908:                
00006B9A  E149                   11670m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006B9C  E549                   11671m         LSL     #$02, D1
00006B9E  E049                   11672m         LSR     #$08, D1
00006BA0  EA49                   11673m         LSR     #$05, D1
00006BA2                         11674m COMPLETE_908:  ; OPCODE HAS BEEN VERIFIED
00006BA2                         11675m         ENDM        
00006BA2                         11676m         decodeAdrMode   (A2), D1        
00006BA2  3612                   11677m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00006BA4  3201                   11678m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00006BA6                         11679m 
00006BA6  B23C 0001              11680m         CMP.B   #$01, D1
00006BAA  6700 0066              11681m         BEQ     ADRREGDIRECT_909    
00006BAE  B23C 0002              11682m         CMP.B   #$02, D1
00006BB2  6700 00A0              11683m         BEQ     ADRREGINDIRECT_909  
00006BB6  B23C 0003              11684m         CMP.B   #$03, D1
00006BBA  6700 0102              11685m         BEQ     ADRREGPOSTINC_909  
00006BBE  B23C 0004              11686m         CMP.B   #$04, D1
00006BC2  6700 0178              11687m         BEQ     ADRREGPREDEC_909
00006BC6  B23C 0007              11688m         CMP.B   #$07, D1
00006BCA  6700 01EE              11689m         BEQ     ADRABSOLUTE_909    
00006BCE                         11690m         
00006BCE                         11691m DATAREGDIRECT_909: 
00006BCE  BC3C 0001              11692m         CMP.B   #$01, D6
00006BD2  6700 001E              11693m         BEQ     DATAREGDIRECTSRC_909   
00006BD6                         11694m DATAREGDIRECTDEST_909: 
00006BD6                         11695mm         PRINTDNDEST D3 
00006BD6  3203                   11696mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00006BD8  E949                   11697mm         LSL     #$04, D1
00006BDA  E049                   11698mm         LSR     #$08, D1
00006BDC  EA49                   11699mm         LSR     #$05, D1
00006BDE  43F8 00CC              11700mm         LEA     ODN, A1     
00006BE2  103C 000E              11701mm         MOVE.B  #14,D0          
00006BE6  4E4F                   11702mm         TRAP    #15
00006BE8  103C 0003              11703mm         MOVE.B  #3,D0          
00006BEC  4E4F                   11704mm         TRAP    #15
00006BEE                         11705mm         ENDM
00006BEE  6000 057A              11706m         BRA     COMPLETE_909 
00006BF2                         11707m DATAREGDIRECTSRC_909: 
00006BF2                         11708mm         PRINTDNSRC D3 
00006BF2  4281                   11709mm         CLR.L   D1
00006BF4  3203                   11710mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006BF6  E149                   11711mm         LSL     #$08, D1
00006BF8  EB49                   11712mm         LSL     #$05, D1
00006BFA  E049                   11713mm         LSR     #$08, D1
00006BFC  EA49                   11714mm         LSR     #$05, D1
00006BFE  43F8 00CC              11715mm         LEA     ODN, A1     
00006C02  103C 000E              11716mm         MOVE.B  #14,D0          
00006C06  4E4F                   11717mm         TRAP    #15
00006C08  103C 0003              11718mm         MOVE.B  #3,D0          
00006C0C  4E4F                   11719mm         TRAP    #15
00006C0E                         11720mm         ENDM
00006C0E  6000 055A              11721m         BRA     COMPLETE_909   
00006C12                         11722m         
00006C12                         11723m ADRREGDIRECT_909: 
00006C12  BC3C 0001              11724m         CMP.B   #$01, D6
00006C16  6700 001E              11725m         BEQ     ADRREGDIRECTSRC_909   
00006C1A                         11726m ADRREGDIRECTDEST_909:
00006C1A                         11727mm         PRINTANDEST D3
00006C1A  3203                   11728mm         MOVE.W  D3, D1
00006C1C  E949                   11729mm         LSL     #$04, D1 ; BITS 9 TO 11
00006C1E  E049                   11730mm         LSR     #$08, D1
00006C20  EA49                   11731mm         LSR     #$05, D1
00006C22  43F8 00CE              11732mm         LEA     OAN, A1     
00006C26  103C 000E              11733mm         MOVE.B  #14,D0          
00006C2A  4E4F                   11734mm         TRAP    #15
00006C2C  103C 0003              11735mm         MOVE.B  #3,D0          
00006C30  4E4F                   11736mm         TRAP    #15
00006C32                         11737mm         ENDM
00006C32  6000 0536              11738m         BRA     COMPLETE_909   
00006C36                         11739m ADRREGDIRECTSRC_909:
00006C36                         11740mm         PRINTANSRC D3
00006C36  3203                   11741mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006C38  E149                   11742mm         LSL     #$08, D1
00006C3A  EB49                   11743mm         LSL     #$05, D1
00006C3C  E049                   11744mm         LSR     #$08, D1
00006C3E  EA49                   11745mm         LSR     #$05, D1
00006C40  43F8 00CE              11746mm         LEA     OAN, A1     
00006C44  103C 000E              11747mm         MOVE.B  #14,D0          
00006C48  4E4F                   11748mm         TRAP    #15
00006C4A  103C 0003              11749mm         MOVE.B  #3,D0          
00006C4E  4E4F                   11750mm         TRAP    #15
00006C50                         11751mm         ENDM
00006C50  6000 0518              11752m         BRA     COMPLETE_909   
00006C54                         11753m        
00006C54                         11754m ADRREGINDIRECT_909:   
00006C54  BC3C 0001              11755m         CMP.B   #$01, D6
00006C58  6700 0032              11756m         BEQ     ADRREGINDIRECTSRC_909   
00006C5C                         11757m ADRREGINDIRECTDEST_909:
00006C5C                         11758mm         PRINTLB
00006C5C  43F8 00D0              11759mm         LEA     OLB, A1     
00006C60  103C 000E              11760mm         MOVE.B  #14,D0          
00006C64  4E4F                   11761mm         TRAP    #15
00006C66                         11762mm         ENDM
00006C66                         11763mm         PRINTANDEST D3  
00006C66  3203                   11764mm         MOVE.W  D3, D1
00006C68  E949                   11765mm         LSL     #$04, D1 ; BITS 9 TO 11
00006C6A  E049                   11766mm         LSR     #$08, D1
00006C6C  EA49                   11767mm         LSR     #$05, D1
00006C6E  43F8 00CE              11768mm         LEA     OAN, A1     
00006C72  103C 000E              11769mm         MOVE.B  #14,D0          
00006C76  4E4F                   11770mm         TRAP    #15
00006C78  103C 0003              11771mm         MOVE.B  #3,D0          
00006C7C  4E4F                   11772mm         TRAP    #15
00006C7E                         11773mm         ENDM
00006C7E                         11774mm         PRINTRB
00006C7E  43F8 00D2              11775mm         LEA     ORB, A1     
00006C82  103C 000E              11776mm         MOVE.B  #14,D0          
00006C86  4E4F                   11777mm         TRAP    #15
00006C88                         11778mm         ENDM
00006C88  6000 04E0              11779m         BRA     COMPLETE_909     
00006C8C                         11780m ADRREGINDIRECTSRC_909:   
00006C8C                         11781mm         PRINTLB
00006C8C  43F8 00D0              11782mm         LEA     OLB, A1     
00006C90  103C 000E              11783mm         MOVE.B  #14,D0          
00006C94  4E4F                   11784mm         TRAP    #15
00006C96                         11785mm         ENDM
00006C96                         11786mm         PRINTANSRC D3  
00006C96  3203                   11787mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006C98  E149                   11788mm         LSL     #$08, D1
00006C9A  EB49                   11789mm         LSL     #$05, D1
00006C9C  E049                   11790mm         LSR     #$08, D1
00006C9E  EA49                   11791mm         LSR     #$05, D1
00006CA0  43F8 00CE              11792mm         LEA     OAN, A1     
00006CA4  103C 000E              11793mm         MOVE.B  #14,D0          
00006CA8  4E4F                   11794mm         TRAP    #15
00006CAA  103C 0003              11795mm         MOVE.B  #3,D0          
00006CAE  4E4F                   11796mm         TRAP    #15
00006CB0                         11797mm         ENDM
00006CB0                         11798mm         PRINTRB
00006CB0  43F8 00D2              11799mm         LEA     ORB, A1     
00006CB4  103C 000E              11800mm         MOVE.B  #14,D0          
00006CB8  4E4F                   11801mm         TRAP    #15
00006CBA                         11802mm         ENDM
00006CBA  6000 04AE              11803m         BRA     COMPLETE_909   
00006CBE                         11804m         
00006CBE                         11805m ADRREGPOSTINC_909:   
00006CBE  BC3C 0001              11806m         CMP.B   #$01, D6
00006CC2  6700 003C              11807m         BEQ     ADRREGPOSTINCSRC_909   
00006CC6                         11808m ADRREGPOSTINCDEST_909: 
00006CC6                         11809mm         PRINTLB
00006CC6  43F8 00D0              11810mm         LEA     OLB, A1     
00006CCA  103C 000E              11811mm         MOVE.B  #14,D0          
00006CCE  4E4F                   11812mm         TRAP    #15
00006CD0                         11813mm         ENDM
00006CD0                         11814mm         PRINTANDEST D3  
00006CD0  3203                   11815mm         MOVE.W  D3, D1
00006CD2  E949                   11816mm         LSL     #$04, D1 ; BITS 9 TO 11
00006CD4  E049                   11817mm         LSR     #$08, D1
00006CD6  EA49                   11818mm         LSR     #$05, D1
00006CD8  43F8 00CE              11819mm         LEA     OAN, A1     
00006CDC  103C 000E              11820mm         MOVE.B  #14,D0          
00006CE0  4E4F                   11821mm         TRAP    #15
00006CE2  103C 0003              11822mm         MOVE.B  #3,D0          
00006CE6  4E4F                   11823mm         TRAP    #15
00006CE8                         11824mm         ENDM
00006CE8                         11825mm         PRINTRB
00006CE8  43F8 00D2              11826mm         LEA     ORB, A1     
00006CEC  103C 000E              11827mm         MOVE.B  #14,D0          
00006CF0  4E4F                   11828mm         TRAP    #15
00006CF2                         11829mm         ENDM
00006CF2                         11830mm         PRINTPI
00006CF2  43F8 00D9              11831mm         LEA     OPSTINC, A1     
00006CF6  103C 000E              11832mm         MOVE.B  #14,D0          
00006CFA  4E4F                   11833mm         TRAP    #15
00006CFC                         11834mm         ENDM
00006CFC  6000 046C              11835m         BRA     COMPLETE_909  
00006D00                         11836m ADRREGPOSTINCSRC_909:           
00006D00                         11837mm         PRINTLB
00006D00  43F8 00D0              11838mm         LEA     OLB, A1     
00006D04  103C 000E              11839mm         MOVE.B  #14,D0          
00006D08  4E4F                   11840mm         TRAP    #15
00006D0A                         11841mm         ENDM
00006D0A                         11842mm         PRINTANSRC D3  
00006D0A  3203                   11843mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006D0C  E149                   11844mm         LSL     #$08, D1
00006D0E  EB49                   11845mm         LSL     #$05, D1
00006D10  E049                   11846mm         LSR     #$08, D1
00006D12  EA49                   11847mm         LSR     #$05, D1
00006D14  43F8 00CE              11848mm         LEA     OAN, A1     
00006D18  103C 000E              11849mm         MOVE.B  #14,D0          
00006D1C  4E4F                   11850mm         TRAP    #15
00006D1E  103C 0003              11851mm         MOVE.B  #3,D0          
00006D22  4E4F                   11852mm         TRAP    #15
00006D24                         11853mm         ENDM
00006D24                         11854mm         PRINTRB
00006D24  43F8 00D2              11855mm         LEA     ORB, A1     
00006D28  103C 000E              11856mm         MOVE.B  #14,D0          
00006D2C  4E4F                   11857mm         TRAP    #15
00006D2E                         11858mm         ENDM
00006D2E                         11859mm         PRINTPI
00006D2E  43F8 00D9              11860mm         LEA     OPSTINC, A1     
00006D32  103C 000E              11861mm         MOVE.B  #14,D0          
00006D36  4E4F                   11862mm         TRAP    #15
00006D38                         11863mm         ENDM
00006D38  6000 0430              11864m         BRA     COMPLETE_909  
00006D3C                         11865m ADRREGPREDEC_909: 
00006D3C  BC3C 0001              11866m         CMP.B   #$01, D6
00006D40  6700 003C              11867m         BEQ     ADRREGPREDECSRC_909   
00006D44                         11868m ADRREGPREDECDEST_909:
00006D44                         11869mm         PRINTPD  
00006D44  43F8 00D7              11870mm         LEA     OPREDEC, A1     
00006D48  103C 000E              11871mm         MOVE.B  #14,D0          
00006D4C  4E4F                   11872mm         TRAP    #15
00006D4E                         11873mm         ENDM
00006D4E                         11874mm         PRINTLB
00006D4E  43F8 00D0              11875mm         LEA     OLB, A1     
00006D52  103C 000E              11876mm         MOVE.B  #14,D0          
00006D56  4E4F                   11877mm         TRAP    #15
00006D58                         11878mm         ENDM
00006D58                         11879mm         PRINTANDEST D3  
00006D58  3203                   11880mm         MOVE.W  D3, D1
00006D5A  E949                   11881mm         LSL     #$04, D1 ; BITS 9 TO 11
00006D5C  E049                   11882mm         LSR     #$08, D1
00006D5E  EA49                   11883mm         LSR     #$05, D1
00006D60  43F8 00CE              11884mm         LEA     OAN, A1     
00006D64  103C 000E              11885mm         MOVE.B  #14,D0          
00006D68  4E4F                   11886mm         TRAP    #15
00006D6A  103C 0003              11887mm         MOVE.B  #3,D0          
00006D6E  4E4F                   11888mm         TRAP    #15
00006D70                         11889mm         ENDM
00006D70                         11890mm         PRINTRB
00006D70  43F8 00D2              11891mm         LEA     ORB, A1     
00006D74  103C 000E              11892mm         MOVE.B  #14,D0          
00006D78  4E4F                   11893mm         TRAP    #15
00006D7A                         11894mm         ENDM
00006D7A  6000 03EE              11895m         BRA     COMPLETE_909   
00006D7E                         11896m ADRREGPREDECSRC_909: 
00006D7E                         11897mm         PRINTPD  
00006D7E  43F8 00D7              11898mm         LEA     OPREDEC, A1     
00006D82  103C 000E              11899mm         MOVE.B  #14,D0          
00006D86  4E4F                   11900mm         TRAP    #15
00006D88                         11901mm         ENDM
00006D88                         11902mm         PRINTLB
00006D88  43F8 00D0              11903mm         LEA     OLB, A1     
00006D8C  103C 000E              11904mm         MOVE.B  #14,D0          
00006D90  4E4F                   11905mm         TRAP    #15
00006D92                         11906mm         ENDM
00006D92                         11907mm         PRINTANSRC D3  
00006D92  3203                   11908mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006D94  E149                   11909mm         LSL     #$08, D1
00006D96  EB49                   11910mm         LSL     #$05, D1
00006D98  E049                   11911mm         LSR     #$08, D1
00006D9A  EA49                   11912mm         LSR     #$05, D1
00006D9C  43F8 00CE              11913mm         LEA     OAN, A1     
00006DA0  103C 000E              11914mm         MOVE.B  #14,D0          
00006DA4  4E4F                   11915mm         TRAP    #15
00006DA6  103C 0003              11916mm         MOVE.B  #3,D0          
00006DAA  4E4F                   11917mm         TRAP    #15
00006DAC                         11918mm         ENDM
00006DAC                         11919mm         PRINTRB
00006DAC  43F8 00D2              11920mm         LEA     ORB, A1     
00006DB0  103C 000E              11921mm         MOVE.B  #14,D0          
00006DB4  4E4F                   11922mm         TRAP    #15
00006DB6                         11923mm         ENDM
00006DB6  6000 03B2              11924m         BRA     COMPLETE_909
00006DBA                         11925m        
00006DBA                         11926m ADRABSOLUTE_909:
00006DBA  BC3C 0001              11927m         CMP.B   #$01, D6
00006DBE  6600 0018              11928m         BNE     ADRABSOLUTEDST_909 
00006DC2                         11929m         
00006DC2  3A03                   11930m         MOVE.W  D3, D5
00006DC4  0803 0002              11931m         BTST    #2, D3
00006DC8  6600 0024              11932m         BNE     ADRIMMEDIATE_909
00006DCC  0803 0000              11933m         BTST    #0, D3
00006DD0  6600 0280              11934m         BNE     ADRABSOLUTEL_909
00006DD4  6000 01E6              11935m         BRA     ADRABSOLUTEW_909
00006DD8                         11936m ADRABSOLUTEDST_909:
00006DD8  3A03                   11937m         MOVE.W  D3, D5
00006DDA  0803 000B              11938m         BTST    #$B, D3
00006DDE  6600 000E              11939m         BNE     ADRIMMEDIATE_909
00006DE2  0803 0009              11940m         BTST    #$09, D3
00006DE6  6600 026A              11941m         BNE     ADRABSOLUTEL_909
00006DEA  6000 01D0              11942m         BRA     ADRABSOLUTEW_909
00006DEE                         11943m ADRIMMEDIATE_909:
00006DEE  BE3C 0001              11944m         CMP.B   #1, D7
00006DF2  6700 00A2              11945m         BEQ     ADRIMMEDIATEL_909
00006DF6                         11946m ADRIMMEDIATEW_909:
00006DF6  361A                   11947m         MOVE.W  (A2)+, D3
00006DF8                         11948mm         PRINTHASH
00006DF8  103C 0006              11949mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006DFC  323C 0023              11950mm         MOVE.W  #35, D1     ; AN = SIGN
00006E00  4E4F                   11951mm         TRAP    #15         ; OUTPUT = SIGN
00006E02                         11952mm         ENDM
00006E02                         11953mm         PRINTSIGN
00006E02  103C 0006              11954mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E06  323C 0024              11955mm         MOVE.W  #36, D1     ; AN = SIGN
00006E0A  4E4F                   11956mm         TRAP    #15         ; OUTPUT = SIGN
00006E0C                         11957mm         ENDM
00006E0C                         11958mm         ADROUT
00006E0C  103C 0006              11959mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E10  3212                   11960mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E12  E049                   11961mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E14  E849                   11962mm         LSR.W   #4, D1      
00006E16                         11963mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E16  0C01 0009              11964mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E1A  6E00 000A              11965mmm         BGT     ALPHA_939
00006E1E  0601 0030              11966mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E22  6000 0006              11967mmm         BRA     DONE_939
00006E26  0601 0037              11968mmm ALPHA_939: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E2A  4E71                   11969mmm DONE_939: NOP
00006E2C                         11970mmm         ENDM
00006E2C  4E4F                   11971mm         TRAP    #15         ; EXECUTE OUTPUT
00006E2E                         11972mm         
00006E2E  3212                   11973mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E30  E949                   11974mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006E32  E049                   11975mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E34  E849                   11976mm         LSR.W   #4, D1      
00006E36                         11977mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E36  0C01 0009              11978mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E3A  6E00 000A              11979mmm         BGT     ALPHA_940
00006E3E  0601 0030              11980mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E42  6000 0006              11981mmm         BRA     DONE_940
00006E46  0601 0037              11982mmm ALPHA_940: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E4A  4E71                   11983mmm DONE_940: NOP
00006E4C                         11984mmm         ENDM
00006E4C  4E4F                   11985mm         TRAP    #15         ; EXECUTE OUTPUT
00006E4E                         11986mm         
00006E4E  3212                   11987mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E50  E149                   11988mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E52  E049                   11989mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E54  E849                   11990mm         LSR.W   #4, D1      
00006E56                         11991mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E56  0C01 0009              11992mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E5A  6E00 000A              11993mmm         BGT     ALPHA_941
00006E5E  0601 0030              11994mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E62  6000 0006              11995mmm         BRA     DONE_941
00006E66  0601 0037              11996mmm ALPHA_941: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E6A  4E71                   11997mmm DONE_941: NOP
00006E6C                         11998mmm         ENDM
00006E6C  4E4F                   11999mm         TRAP    #15         ; EXECUTE OUTPUT
00006E6E                         12000mm         
00006E6E  3212                   12001mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E70  E149                   12002mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E72  E949                   12003mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006E74  E049                   12004mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E76  E849                   12005mm         LSR.W   #4, D1      
00006E78                         12006mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E78  0C01 0009              12007mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E7C  6E00 000A              12008mmm         BGT     ALPHA_942
00006E80  0601 0030              12009mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E84  6000 0006              12010mmm         BRA     DONE_942
00006E88  0601 0037              12011mmm ALPHA_942: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E8C  4E71                   12012mmm DONE_942: NOP
00006E8E                         12013mmm         ENDM
00006E8E  4E4F                   12014mm         TRAP    #15         ; EXECUTE OUTPUT   
00006E90                         12015mm         ENDM     
00006E90  3605                   12016m         MOVE.W  D5, D3
00006E92  6000 02D6              12017m         BRA     COMPLETE_909
00006E96                         12018m ADRIMMEDIATEL_909:
00006E96  361A                   12019m         MOVE.W  (A2)+, D3
00006E98                         12020mm         PRINTHASH
00006E98  103C 0006              12021mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E9C  323C 0023              12022mm         MOVE.W  #35, D1     ; AN = SIGN
00006EA0  4E4F                   12023mm         TRAP    #15         ; OUTPUT = SIGN
00006EA2                         12024mm         ENDM
00006EA2                         12025mm         PRINTSIGN
00006EA2  103C 0006              12026mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006EA6  323C 0024              12027mm         MOVE.W  #36, D1     ; AN = SIGN
00006EAA  4E4F                   12028mm         TRAP    #15         ; OUTPUT = SIGN
00006EAC                         12029mm         ENDM
00006EAC                         12030mm         ADROUT 
00006EAC  103C 0006              12031mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006EB0  3212                   12032mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EB2  E049                   12033mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006EB4  E849                   12034mm         LSR.W   #4, D1      
00006EB6                         12035mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006EB6  0C01 0009              12036mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EBA  6E00 000A              12037mmm         BGT     ALPHA_946
00006EBE  0601 0030              12038mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EC2  6000 0006              12039mmm         BRA     DONE_946
00006EC6  0601 0037              12040mmm ALPHA_946: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006ECA  4E71                   12041mmm DONE_946: NOP
00006ECC                         12042mmm         ENDM
00006ECC  4E4F                   12043mm         TRAP    #15         ; EXECUTE OUTPUT
00006ECE                         12044mm         
00006ECE  3212                   12045mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006ED0  E949                   12046mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006ED2  E049                   12047mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006ED4  E849                   12048mm         LSR.W   #4, D1      
00006ED6                         12049mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ED6  0C01 0009              12050mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EDA  6E00 000A              12051mmm         BGT     ALPHA_947
00006EDE  0601 0030              12052mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EE2  6000 0006              12053mmm         BRA     DONE_947
00006EE6  0601 0037              12054mmm ALPHA_947: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EEA  4E71                   12055mmm DONE_947: NOP
00006EEC                         12056mmm         ENDM
00006EEC  4E4F                   12057mm         TRAP    #15         ; EXECUTE OUTPUT
00006EEE                         12058mm         
00006EEE  3212                   12059mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EF0  E149                   12060mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006EF2  E049                   12061mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006EF4  E849                   12062mm         LSR.W   #4, D1      
00006EF6                         12063mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006EF6  0C01 0009              12064mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EFA  6E00 000A              12065mmm         BGT     ALPHA_948
00006EFE  0601 0030              12066mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F02  6000 0006              12067mmm         BRA     DONE_948
00006F06  0601 0037              12068mmm ALPHA_948: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F0A  4E71                   12069mmm DONE_948: NOP
00006F0C                         12070mmm         ENDM
00006F0C  4E4F                   12071mm         TRAP    #15         ; EXECUTE OUTPUT
00006F0E                         12072mm         
00006F0E  3212                   12073mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F10  E149                   12074mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F12  E949                   12075mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006F14  E049                   12076mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F16  E849                   12077mm         LSR.W   #4, D1      
00006F18                         12078mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F18  0C01 0009              12079mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F1C  6E00 000A              12080mmm         BGT     ALPHA_949
00006F20  0601 0030              12081mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F24  6000 0006              12082mmm         BRA     DONE_949
00006F28  0601 0037              12083mmm ALPHA_949: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F2C  4E71                   12084mmm DONE_949: NOP
00006F2E                         12085mmm         ENDM
00006F2E  4E4F                   12086mm         TRAP    #15         ; EXECUTE OUTPUT   
00006F30                         12087mm         ENDM     
00006F30  361A                   12088m         MOVE.W  (A2)+, D3
00006F32                         12089mm         ADROUT
00006F32  103C 0006              12090mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006F36  3212                   12091mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F38  E049                   12092mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F3A  E849                   12093mm         LSR.W   #4, D1      
00006F3C                         12094mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F3C  0C01 0009              12095mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F40  6E00 000A              12096mmm         BGT     ALPHA_951
00006F44  0601 0030              12097mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F48  6000 0006              12098mmm         BRA     DONE_951
00006F4C  0601 0037              12099mmm ALPHA_951: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F50  4E71                   12100mmm DONE_951: NOP
00006F52                         12101mmm         ENDM
00006F52  4E4F                   12102mm         TRAP    #15         ; EXECUTE OUTPUT
00006F54                         12103mm         
00006F54  3212                   12104mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F56  E949                   12105mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006F58  E049                   12106mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F5A  E849                   12107mm         LSR.W   #4, D1      
00006F5C                         12108mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F5C  0C01 0009              12109mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F60  6E00 000A              12110mmm         BGT     ALPHA_952
00006F64  0601 0030              12111mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F68  6000 0006              12112mmm         BRA     DONE_952
00006F6C  0601 0037              12113mmm ALPHA_952: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F70  4E71                   12114mmm DONE_952: NOP
00006F72                         12115mmm         ENDM
00006F72  4E4F                   12116mm         TRAP    #15         ; EXECUTE OUTPUT
00006F74                         12117mm         
00006F74  3212                   12118mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F76  E149                   12119mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F78  E049                   12120mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F7A  E849                   12121mm         LSR.W   #4, D1      
00006F7C                         12122mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F7C  0C01 0009              12123mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F80  6E00 000A              12124mmm         BGT     ALPHA_953
00006F84  0601 0030              12125mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F88  6000 0006              12126mmm         BRA     DONE_953
00006F8C  0601 0037              12127mmm ALPHA_953: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F90  4E71                   12128mmm DONE_953: NOP
00006F92                         12129mmm         ENDM
00006F92  4E4F                   12130mm         TRAP    #15         ; EXECUTE OUTPUT
00006F94                         12131mm         
00006F94  3212                   12132mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F96  E149                   12133mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F98  E949                   12134mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006F9A  E049                   12135mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F9C  E849                   12136mm         LSR.W   #4, D1      
00006F9E                         12137mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F9E  0C01 0009              12138mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FA2  6E00 000A              12139mmm         BGT     ALPHA_954
00006FA6  0601 0030              12140mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FAA  6000 0006              12141mmm         BRA     DONE_954
00006FAE  0601 0037              12142mmm ALPHA_954: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FB2  4E71                   12143mmm DONE_954: NOP
00006FB4                         12144mmm         ENDM
00006FB4  4E4F                   12145mm         TRAP    #15         ; EXECUTE OUTPUT   
00006FB6                         12146mm         ENDM     
00006FB6  3605                   12147m         MOVE.W  D5, D3
00006FB8  6000 01B0              12148m         BRA     COMPLETE_909 
00006FBC                         12149m ADRABSOLUTEW_909:     
00006FBC  361A                   12150m         MOVE.W  (A2)+, D3
00006FBE                         12151mm         PRINTSIGN
00006FBE  103C 0006              12152mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006FC2  323C 0024              12153mm         MOVE.W  #36, D1     ; AN = SIGN
00006FC6  4E4F                   12154mm         TRAP    #15         ; OUTPUT = SIGN
00006FC8                         12155mm         ENDM
00006FC8                         12156mm         ADROUT
00006FC8  103C 0006              12157mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006FCC  3212                   12158mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FCE  E049                   12159mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FD0  E849                   12160mm         LSR.W   #4, D1      
00006FD2                         12161mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FD2  0C01 0009              12162mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FD6  6E00 000A              12163mmm         BGT     ALPHA_957
00006FDA  0601 0030              12164mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FDE  6000 0006              12165mmm         BRA     DONE_957
00006FE2  0601 0037              12166mmm ALPHA_957: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FE6  4E71                   12167mmm DONE_957: NOP
00006FE8                         12168mmm         ENDM
00006FE8  4E4F                   12169mm         TRAP    #15         ; EXECUTE OUTPUT
00006FEA                         12170mm         
00006FEA  3212                   12171mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FEC  E949                   12172mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006FEE  E049                   12173mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FF0  E849                   12174mm         LSR.W   #4, D1      
00006FF2                         12175mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FF2  0C01 0009              12176mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FF6  6E00 000A              12177mmm         BGT     ALPHA_958
00006FFA  0601 0030              12178mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FFE  6000 0006              12179mmm         BRA     DONE_958
00007002  0601 0037              12180mmm ALPHA_958: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007006  4E71                   12181mmm DONE_958: NOP
00007008                         12182mmm         ENDM
00007008  4E4F                   12183mm         TRAP    #15         ; EXECUTE OUTPUT
0000700A                         12184mm         
0000700A  3212                   12185mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000700C  E149                   12186mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000700E  E049                   12187mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007010  E849                   12188mm         LSR.W   #4, D1      
00007012                         12189mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007012  0C01 0009              12190mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007016  6E00 000A              12191mmm         BGT     ALPHA_959
0000701A  0601 0030              12192mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000701E  6000 0006              12193mmm         BRA     DONE_959
00007022  0601 0037              12194mmm ALPHA_959: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007026  4E71                   12195mmm DONE_959: NOP
00007028                         12196mmm         ENDM
00007028  4E4F                   12197mm         TRAP    #15         ; EXECUTE OUTPUT
0000702A                         12198mm         
0000702A  3212                   12199mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000702C  E149                   12200mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000702E  E949                   12201mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007030  E049                   12202mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007032  E849                   12203mm         LSR.W   #4, D1      
00007034                         12204mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007034  0C01 0009              12205mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007038  6E00 000A              12206mmm         BGT     ALPHA_960
0000703C  0601 0030              12207mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007040  6000 0006              12208mmm         BRA     DONE_960
00007044  0601 0037              12209mmm ALPHA_960: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007048  4E71                   12210mmm DONE_960: NOP
0000704A                         12211mmm         ENDM
0000704A  4E4F                   12212mm         TRAP    #15         ; EXECUTE OUTPUT   
0000704C                         12213mm         ENDM     
0000704C  3605                   12214m         MOVE.W  D5, D3
0000704E  6000 011A              12215m         BRA     COMPLETE_909  
00007052                         12216m ADRABSOLUTEL_909:  
00007052  361A                   12217m         MOVE.W  (A2)+, D3
00007054                         12218mm         PRINTSIGN
00007054  103C 0006              12219mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007058  323C 0024              12220mm         MOVE.W  #36, D1     ; AN = SIGN
0000705C  4E4F                   12221mm         TRAP    #15         ; OUTPUT = SIGN
0000705E                         12222mm         ENDM
0000705E                         12223mm         ADROUT 
0000705E  103C 0006              12224mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007062  3212                   12225mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007064  E049                   12226mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007066  E849                   12227mm         LSR.W   #4, D1      
00007068                         12228mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007068  0C01 0009              12229mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000706C  6E00 000A              12230mmm         BGT     ALPHA_963
00007070  0601 0030              12231mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007074  6000 0006              12232mmm         BRA     DONE_963
00007078  0601 0037              12233mmm ALPHA_963: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000707C  4E71                   12234mmm DONE_963: NOP
0000707E                         12235mmm         ENDM
0000707E  4E4F                   12236mm         TRAP    #15         ; EXECUTE OUTPUT
00007080                         12237mm         
00007080  3212                   12238mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007082  E949                   12239mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007084  E049                   12240mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007086  E849                   12241mm         LSR.W   #4, D1      
00007088                         12242mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007088  0C01 0009              12243mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000708C  6E00 000A              12244mmm         BGT     ALPHA_964
00007090  0601 0030              12245mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007094  6000 0006              12246mmm         BRA     DONE_964
00007098  0601 0037              12247mmm ALPHA_964: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000709C  4E71                   12248mmm DONE_964: NOP
0000709E                         12249mmm         ENDM
0000709E  4E4F                   12250mm         TRAP    #15         ; EXECUTE OUTPUT
000070A0                         12251mm         
000070A0  3212                   12252mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070A2  E149                   12253mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000070A4  E049                   12254mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070A6  E849                   12255mm         LSR.W   #4, D1      
000070A8                         12256mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070A8  0C01 0009              12257mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070AC  6E00 000A              12258mmm         BGT     ALPHA_965
000070B0  0601 0030              12259mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070B4  6000 0006              12260mmm         BRA     DONE_965
000070B8  0601 0037              12261mmm ALPHA_965: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070BC  4E71                   12262mmm DONE_965: NOP
000070BE                         12263mmm         ENDM
000070BE  4E4F                   12264mm         TRAP    #15         ; EXECUTE OUTPUT
000070C0                         12265mm         
000070C0  3212                   12266mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070C2  E149                   12267mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000070C4  E949                   12268mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000070C6  E049                   12269mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070C8  E849                   12270mm         LSR.W   #4, D1      
000070CA                         12271mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070CA  0C01 0009              12272mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070CE  6E00 000A              12273mmm         BGT     ALPHA_966
000070D2  0601 0030              12274mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070D6  6000 0006              12275mmm         BRA     DONE_966
000070DA  0601 0037              12276mmm ALPHA_966: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070DE  4E71                   12277mmm DONE_966: NOP
000070E0                         12278mmm         ENDM
000070E0  4E4F                   12279mm         TRAP    #15         ; EXECUTE OUTPUT   
000070E2                         12280mm         ENDM     
000070E2  361A                   12281m         MOVE.W  (A2)+, D3
000070E4                         12282mm         ADROUT
000070E4  103C 0006              12283mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000070E8  3212                   12284mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070EA  E049                   12285mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070EC  E849                   12286mm         LSR.W   #4, D1      
000070EE                         12287mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070EE  0C01 0009              12288mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070F2  6E00 000A              12289mmm         BGT     ALPHA_968
000070F6  0601 0030              12290mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070FA  6000 0006              12291mmm         BRA     DONE_968
000070FE  0601 0037              12292mmm ALPHA_968: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007102  4E71                   12293mmm DONE_968: NOP
00007104                         12294mmm         ENDM
00007104  4E4F                   12295mm         TRAP    #15         ; EXECUTE OUTPUT
00007106                         12296mm         
00007106  3212                   12297mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007108  E949                   12298mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000710A  E049                   12299mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000710C  E849                   12300mm         LSR.W   #4, D1      
0000710E                         12301mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000710E  0C01 0009              12302mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007112  6E00 000A              12303mmm         BGT     ALPHA_969
00007116  0601 0030              12304mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000711A  6000 0006              12305mmm         BRA     DONE_969
0000711E  0601 0037              12306mmm ALPHA_969: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007122  4E71                   12307mmm DONE_969: NOP
00007124                         12308mmm         ENDM
00007124  4E4F                   12309mm         TRAP    #15         ; EXECUTE OUTPUT
00007126                         12310mm         
00007126  3212                   12311mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007128  E149                   12312mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000712A  E049                   12313mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000712C  E849                   12314mm         LSR.W   #4, D1      
0000712E                         12315mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000712E  0C01 0009              12316mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007132  6E00 000A              12317mmm         BGT     ALPHA_970
00007136  0601 0030              12318mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000713A  6000 0006              12319mmm         BRA     DONE_970
0000713E  0601 0037              12320mmm ALPHA_970: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007142  4E71                   12321mmm DONE_970: NOP
00007144                         12322mmm         ENDM
00007144  4E4F                   12323mm         TRAP    #15         ; EXECUTE OUTPUT
00007146                         12324mm         
00007146  3212                   12325mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007148  E149                   12326mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000714A  E949                   12327mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000714C  E049                   12328mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000714E  E849                   12329mm         LSR.W   #4, D1      
00007150                         12330mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007150  0C01 0009              12331mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007154  6E00 000A              12332mmm         BGT     ALPHA_971
00007158  0601 0030              12333mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000715C  6000 0006              12334mmm         BRA     DONE_971
00007160  0601 0037              12335mmm ALPHA_971: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007164  4E71                   12336mmm DONE_971: NOP
00007166                         12337mmm         ENDM
00007166  4E4F                   12338mm         TRAP    #15         ; EXECUTE OUTPUT   
00007168                         12339mm         ENDM     
00007168  3605                   12340m         MOVE.W  D5, D3
0000716A                         12341m 
0000716A                         12342m COMPLETE_909:  ; OPCODE HAS BEEN VERIFIED
0000716A                         12343m         ENDM
0000716A  4E75                   12344          RTS                 ; Return from decodeJSR subroutine
0000716C                         12345  
0000716C                         12346  
0000716C                         12347  ; ------------------------------------------------------------
0000716C                         12348  ; 15. "decodeRTS" subroutine
0000716C                         12349  ; Gary
0000716C                         12350  ;
0000716C                         12351  ; Decodes RTS by verifying then printing
0000716C                         12352  ; ------------------------------------------------------------
0000716C                         12353  decodeRTS:
0000716C                         12354m         verifyOpcode    pRTS, (A2)
0000716C  43F8 0252              12355m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00007170  3612                   12356m         MOVE.W  (A2), D3      ; INPUT VALUE
00007172  123C 000F              12357m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00007176                         12358m         
00007176                         12359m LOOP_972: 
00007176  0C11 0030              12360m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000717A  6700 000E              12361m         BEQ     CHECKFOR0_972
0000717E  0C11 0031              12362m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00007182  6700 0010              12363m         BEQ     CHECKFOR1_972
00007186  6000 0012              12364m         BRA     NEXT_972      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000718A                         12365m         
0000718A                         12366m CHECKFOR0_972: 
0000718A  0303                   12367m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000718C  6600 0614              12368m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00007190  6000 0008              12369m         BRA     NEXT_972
00007194                         12370m 
00007194                         12371m CHECKFOR1_972:
00007194  0303                   12372m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00007196  6700 060A              12373m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000719A                         12374m 
0000719A                         12375m NEXT_972: 
0000719A  B23C 0000              12376m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000719E  6700 0008              12377m         BEQ     COMPLETE_972  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000071A2  5301                   12378m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000071A4  1819                   12379m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000071A6  60CE                   12380m         BRA     LOOP_972      ; BEGIN LOOP AGAIN
000071A8                         12381m 
000071A8                         12382m COMPLETE_972:  ; OPCODE HAS BEEN VERIFIED
000071A8                         12383m         ENDM
000071A8  43F8 00B8              12384          LEA     oRTS, A1     
000071AC  103C 000E              12385          MOVE.B  #14,D0          
000071B0  4E4F                   12386          TRAP    #15
000071B2  4E75                   12387          RTS                 ; Return from decodeRTS subroutine
000071B4                         12388  
000071B4                         12389  
000071B4                         12390  ; ------------------------------------------------------------
000071B4                         12391  ; 16. "decodeBRA" subroutine
000071B4                         12392  ; Gary
000071B4                         12393  ;
000071B4                         12394  ; Decodes Branching by verifying then decoding displacement.
000071B4                         12395  ; ------------------------------------------------------------
000071B4                         12396  decodeBRA:
000071B4                         12397m         verifyOpcode    pBRA, (A2)
000071B4  43F8 0263              12398m         LEA     PBRA, A1      ; INPUT PATTERN STRING
000071B8  3612                   12399m         MOVE.W  (A2), D3      ; INPUT VALUE
000071BA  123C 000F              12400m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000071BE                         12401m         
000071BE                         12402m LOOP_973: 
000071BE  0C11 0030              12403m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000071C2  6700 000E              12404m         BEQ     CHECKFOR0_973
000071C6  0C11 0031              12405m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000071CA  6700 0010              12406m         BEQ     CHECKFOR1_973
000071CE  6000 0012              12407m         BRA     NEXT_973      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000071D2                         12408m         
000071D2                         12409m CHECKFOR0_973: 
000071D2  0303                   12410m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000071D4  6600 05CC              12411m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000071D8  6000 0008              12412m         BRA     NEXT_973
000071DC                         12413m 
000071DC                         12414m CHECKFOR1_973:
000071DC  0303                   12415m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000071DE  6700 05C2              12416m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000071E2                         12417m 
000071E2                         12418m NEXT_973: 
000071E2  B23C 0000              12419m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000071E6  6700 0008              12420m         BEQ     COMPLETE_973  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000071EA  5301                   12421m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000071EC  1819                   12422m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000071EE  60CE                   12423m         BRA     LOOP_973      ; BEGIN LOOP AGAIN
000071F0                         12424m 
000071F0                         12425m COMPLETE_973:  ; OPCODE HAS BEEN VERIFIED
000071F0                         12426m         ENDM
000071F0  43F8 00BC              12427          LEA     oBRA, A1     
000071F4  103C 000E              12428          MOVE.B  #14,D0          
000071F8  4E4F                   12429          TRAP    #15
000071FA                         12430m         space
000071FA  43F8 00DD              12431m         LEA     OBLANK, A1
000071FE  103C 000E              12432m         MOVE.B  #14,D0          
00007202  4E4F                   12433m         TRAP    #15
00007204                         12434m         ENDM
00007204                         12435m         printSign
00007204  103C 0006              12436m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007208  323C 0024              12437m         MOVE.W  #36, D1     ; AN = SIGN
0000720C  4E4F                   12438m         TRAP    #15         ; OUTPUT = SIGN
0000720E                         12439m         ENDM
0000720E                         12440m         decodeDisplacement (A2)
0000720E  3612                   12441m         MOVE.W (A2), D3           
00007210  4241                   12442m         CLR     D1
00007212  3E0A                   12443m         MOVE.W  A2, D7
00007214  B63C 0000              12444m         CMP.B   #$0, D3
00007218  6700 009E              12445m         BEQ     SBIT_976
0000721C  B63C 00FF              12446m         CMP.B   #$FF, D3
00007220  6700 0128              12447m         BEQ     TBIT_976
00007224                         12448m EBIT_976:   
00007224  E14B                   12449m         LSL     #08, D3
00007226  E04B                   12450m         LSR     #08, D3
00007228  48C3                   12451m         EXT.L   D3
0000722A  DE83                   12452m         ADD.L   D3, D7
0000722C  5487                   12453m         ADD.L   #2, D7
0000722E                         12454mm         ADROUTINPUT D7     
0000722E  2E07                   12455mm         MOVE.L   D7, D7     
00007230  103C 0006              12456mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007234  3207                   12457mm         MOVE.W  D7, D1    
00007236  E049                   12458mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007238  E849                   12459mm         LSR.W   #4, D1      
0000723A                         12460mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000723A  0C01 0009              12461mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000723E  6E00 000A              12462mmm         BGT     ALPHA_978
00007242  0601 0030              12463mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007246  6000 0006              12464mmm         BRA     DONE_978
0000724A  0601 0037              12465mmm ALPHA_978: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000724E  4E71                   12466mmm DONE_978: NOP
00007250                         12467mmm         ENDM
00007250  4E4F                   12468mm         TRAP    #15         ; EXECUTE OUTPUT
00007252                         12469mm         
00007252  3207                   12470mm         MOVE.W  D7, D1    
00007254  E949                   12471mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007256  E049                   12472mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007258  E849                   12473mm         LSR.W   #4, D1      
0000725A                         12474mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000725A  0C01 0009              12475mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000725E  6E00 000A              12476mmm         BGT     ALPHA_979
00007262  0601 0030              12477mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007266  6000 0006              12478mmm         BRA     DONE_979
0000726A  0601 0037              12479mmm ALPHA_979: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000726E  4E71                   12480mmm DONE_979: NOP
00007270                         12481mmm         ENDM
00007270  4E4F                   12482mm         TRAP    #15         ; EXECUTE OUTPUT
00007272                         12483mm         
00007272  3207                   12484mm         MOVE.W  D7, D1    
00007274  E149                   12485mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007276  E049                   12486mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007278  E849                   12487mm         LSR.W   #4, D1      
0000727A                         12488mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000727A  0C01 0009              12489mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000727E  6E00 000A              12490mmm         BGT     ALPHA_980
00007282  0601 0030              12491mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007286  6000 0006              12492mmm         BRA     DONE_980
0000728A  0601 0037              12493mmm ALPHA_980: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000728E  4E71                   12494mmm DONE_980: NOP
00007290                         12495mmm         ENDM
00007290  4E4F                   12496mm         TRAP    #15         ; EXECUTE OUTPUT
00007292                         12497mm         
00007292  3207                   12498mm         MOVE.W  D7, D1    
00007294  E149                   12499mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007296  E949                   12500mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007298  E049                   12501mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000729A  E849                   12502mm         LSR.W   #4, D1      
0000729C                         12503mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000729C  0C01 0009              12504mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072A0  6E00 000A              12505mmm         BGT     ALPHA_981
000072A4  0601 0030              12506mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072A8  6000 0006              12507mmm         BRA     DONE_981
000072AC  0601 0037              12508mmm ALPHA_981: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000072B0  4E71                   12509mmm DONE_981: NOP
000072B2                         12510mmm         ENDM
000072B2  4E4F                   12511mm         TRAP    #15         ; EXECUTE OUTPUT       
000072B4                         12512mm         ENDM 
000072B4  6000 0126              12513m         BRA     DECODEDISPLACEMENT_976
000072B8                         12514m SBIT_976:  
000072B8  361A                   12515m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
000072BA  48C3                   12516m         EXT.L    D3
000072BC  DE83                   12517m         ADD.L   D3, D7
000072BE  5487                   12518m         ADD.L   #2, D7
000072C0                         12519mm         ADROUTINPUT D7
000072C0  2E07                   12520mm         MOVE.L   D7, D7     
000072C2  103C 0006              12521mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000072C6  3207                   12522mm         MOVE.W  D7, D1    
000072C8  E049                   12523mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000072CA  E849                   12524mm         LSR.W   #4, D1      
000072CC                         12525mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000072CC  0C01 0009              12526mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072D0  6E00 000A              12527mmm         BGT     ALPHA_983
000072D4  0601 0030              12528mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072D8  6000 0006              12529mmm         BRA     DONE_983
000072DC  0601 0037              12530mmm ALPHA_983: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000072E0  4E71                   12531mmm DONE_983: NOP
000072E2                         12532mmm         ENDM
000072E2  4E4F                   12533mm         TRAP    #15         ; EXECUTE OUTPUT
000072E4                         12534mm         
000072E4  3207                   12535mm         MOVE.W  D7, D1    
000072E6  E949                   12536mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000072E8  E049                   12537mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000072EA  E849                   12538mm         LSR.W   #4, D1      
000072EC                         12539mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000072EC  0C01 0009              12540mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072F0  6E00 000A              12541mmm         BGT     ALPHA_984
000072F4  0601 0030              12542mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072F8  6000 0006              12543mmm         BRA     DONE_984
000072FC  0601 0037              12544mmm ALPHA_984: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007300  4E71                   12545mmm DONE_984: NOP
00007302                         12546mmm         ENDM
00007302  4E4F                   12547mm         TRAP    #15         ; EXECUTE OUTPUT
00007304                         12548mm         
00007304  3207                   12549mm         MOVE.W  D7, D1    
00007306  E149                   12550mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007308  E049                   12551mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000730A  E849                   12552mm         LSR.W   #4, D1      
0000730C                         12553mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000730C  0C01 0009              12554mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007310  6E00 000A              12555mmm         BGT     ALPHA_985
00007314  0601 0030              12556mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007318  6000 0006              12557mmm         BRA     DONE_985
0000731C  0601 0037              12558mmm ALPHA_985: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007320  4E71                   12559mmm DONE_985: NOP
00007322                         12560mmm         ENDM
00007322  4E4F                   12561mm         TRAP    #15         ; EXECUTE OUTPUT
00007324                         12562mm         
00007324  3207                   12563mm         MOVE.W  D7, D1    
00007326  E149                   12564mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007328  E949                   12565mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000732A  E049                   12566mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000732C  E849                   12567mm         LSR.W   #4, D1      
0000732E                         12568mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000732E  0C01 0009              12569mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007332  6E00 000A              12570mmm         BGT     ALPHA_986
00007336  0601 0030              12571mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000733A  6000 0006              12572mmm         BRA     DONE_986
0000733E  0601 0037              12573mmm ALPHA_986: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007342  4E71                   12574mmm DONE_986: NOP
00007344                         12575mmm         ENDM
00007344  4E4F                   12576mm         TRAP    #15         ; EXECUTE OUTPUT       
00007346                         12577mm         ENDM 
00007346  6000 0094              12578m         BRA     DECODEDISPLACEMENT_976
0000734A                         12579m TBIT_976:  
0000734A  361A                   12580m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
0000734C  48C3                   12581m         EXT.L   D3
0000734E  4843                   12582m         SWAP    D3
00007350  361A                   12583m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
00007352  DE83                   12584m         ADD.L   D3, D7
00007354  5487                   12585m         ADD.L   #2, D7
00007356                         12586mm         ADROUTINPUT D7
00007356  2E07                   12587mm         MOVE.L   D7, D7     
00007358  103C 0006              12588mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000735C  3207                   12589mm         MOVE.W  D7, D1    
0000735E  E049                   12590mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007360  E849                   12591mm         LSR.W   #4, D1      
00007362                         12592mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007362  0C01 0009              12593mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007366  6E00 000A              12594mmm         BGT     ALPHA_988
0000736A  0601 0030              12595mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000736E  6000 0006              12596mmm         BRA     DONE_988
00007372  0601 0037              12597mmm ALPHA_988: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007376  4E71                   12598mmm DONE_988: NOP
00007378                         12599mmm         ENDM
00007378  4E4F                   12600mm         TRAP    #15         ; EXECUTE OUTPUT
0000737A                         12601mm         
0000737A  3207                   12602mm         MOVE.W  D7, D1    
0000737C  E949                   12603mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000737E  E049                   12604mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007380  E849                   12605mm         LSR.W   #4, D1      
00007382                         12606mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007382  0C01 0009              12607mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007386  6E00 000A              12608mmm         BGT     ALPHA_989
0000738A  0601 0030              12609mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000738E  6000 0006              12610mmm         BRA     DONE_989
00007392  0601 0037              12611mmm ALPHA_989: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007396  4E71                   12612mmm DONE_989: NOP
00007398                         12613mmm         ENDM
00007398  4E4F                   12614mm         TRAP    #15         ; EXECUTE OUTPUT
0000739A                         12615mm         
0000739A  3207                   12616mm         MOVE.W  D7, D1    
0000739C  E149                   12617mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000739E  E049                   12618mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000073A0  E849                   12619mm         LSR.W   #4, D1      
000073A2                         12620mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000073A2  0C01 0009              12621mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000073A6  6E00 000A              12622mmm         BGT     ALPHA_990
000073AA  0601 0030              12623mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000073AE  6000 0006              12624mmm         BRA     DONE_990
000073B2  0601 0037              12625mmm ALPHA_990: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000073B6  4E71                   12626mmm DONE_990: NOP
000073B8                         12627mmm         ENDM
000073B8  4E4F                   12628mm         TRAP    #15         ; EXECUTE OUTPUT
000073BA                         12629mm         
000073BA  3207                   12630mm         MOVE.W  D7, D1    
000073BC  E149                   12631mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000073BE  E949                   12632mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000073C0  E049                   12633mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000073C2  E849                   12634mm         LSR.W   #4, D1      
000073C4                         12635mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000073C4  0C01 0009              12636mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000073C8  6E00 000A              12637mmm         BGT     ALPHA_991
000073CC  0601 0030              12638mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000073D0  6000 0006              12639mmm         BRA     DONE_991
000073D4  0601 0037              12640mmm ALPHA_991: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000073D8  4E71                   12641mmm DONE_991: NOP
000073DA                         12642mmm         ENDM
000073DA  4E4F                   12643mm         TRAP    #15         ; EXECUTE OUTPUT       
000073DC                         12644mm         ENDM 
000073DC                         12645m DECODEDISPLACEMENT_976:
000073DC                         12646m         ENDM        
000073DC  4E75                   12647          RTS                 ; Return from decodeBRA subroutine
000073DE                         12648          
000073DE                         12649  ; ------------------------------------------------------------
000073DE                         12650  ; 17. "decodeImmediate" subroutine
000073DE                         12651  ; Gary
000073DE                         12652  ;
000073DE                         12653  ; Decodes cases where an immediate mode is encountered.
000073DE                         12654  ; Does so by calculating how many words it needs to scan before
000073DE                         12655  ; moving on. This is calculated through the adressing mode and the
000073DE                         12656  ; opcode size.
000073DE                         12657  ; ------------------------------------------------------------
000073DE                         12658  decodeImmediate:
000073DE  4EB9 000077A2          12659          JSR     outputData
000073E4  4241                   12660          CLR     D1
000073E6  4246                   12661          CLR     D6
000073E8  364A                   12662          MOVEA   A2, A3
000073EA  381A                   12663          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
000073EC                         12664m         prepareAdrMode  #$1,(A3)  
000073EC  3C3C 0001              12665m         MOVE.W  #$1, D6      ; INPUT VALUE
000073F0  3213                   12666m         MOVE.W  (A3), D1
000073F2  BC3C 0001              12667m         CMP.B   #$01, D6
000073F6  6700 000C              12668m         BEQ     ADRSOURCE_992    
000073FA                         12669m ADRDEST_992:
000073FA  EF49                   12670m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000073FC  E049                   12671m         LSR     #$08, D1
000073FE  EA49                   12672m         LSR     #$05, D1
00007400  6000 000A              12673m         BRA     COMPLETE_992 
00007404                         12674m ADRSOURCE_992:                
00007404  E149                   12675m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00007406  E549                   12676m         LSL     #$02, D1
00007408  E049                   12677m         LSR     #$08, D1
0000740A  EA49                   12678m         LSR     #$05, D1
0000740C                         12679m COMPLETE_992:  ; OPCODE HAS BEEN VERIFIED
0000740C                         12680m         ENDM        
0000740C                         12681m         decodeSizeLow   (A3)
0000740C  3613                   12682m         MOVE.W  (A3), D3      ; INPUT VALUE   
0000740E  4246                   12683m         CLR     D6   
00007410                         12684m CHECKFORBORW_993: 
00007410  0803 0007              12685m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00007414  6600 0006              12686m         BNE     CHECKFORL_993 ; IF NOT GO TO LONGWORD SIZE         
00007418  6000 0006              12687m         BRA     COMPLETE_993  
0000741C                         12688m CHECKFORL_993:
0000741C  1C3C 0001              12689m         MOVE.B  #$1, D6
00007420                         12690m COMPLETE_993:  ; SIZE HAS BEEN CHECEKED
00007420                         12691m         ENDM 
00007420  1E01                   12692          MOVE.B  D1, D7
00007422  BC3C 0001              12693          CMP.B   #1, D6
00007426  6700 009C              12694          BEQ     decodeImmediateL
0000742A                         12695m         space
0000742A  43F8 00DD              12696m         LEA     OBLANK, A1
0000742E  103C 000E              12697m         MOVE.B  #14,D0          
00007432  4E4F                   12698m         TRAP    #15
00007434                         12699m         ENDM
00007434                         12700m         adrOut
00007434  103C 0006              12701m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007438  3212                   12702m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000743A  E049                   12703m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000743C  E849                   12704m         LSR.W   #4, D1      
0000743E                         12705mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000743E  0C01 0009              12706mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007442  6E00 000A              12707mm         BGT     ALPHA_996
00007446  0601 0030              12708mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000744A  6000 0006              12709mm         BRA     DONE_996
0000744E  0601 0037              12710mm ALPHA_996: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007452  4E71                   12711mm DONE_996: NOP
00007454                         12712mm         ENDM
00007454  4E4F                   12713m         TRAP    #15         ; EXECUTE OUTPUT
00007456                         12714m         
00007456  3212                   12715m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007458  E949                   12716m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000745A  E049                   12717m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000745C  E849                   12718m         LSR.W   #4, D1      
0000745E                         12719mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000745E  0C01 0009              12720mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007462  6E00 000A              12721mm         BGT     ALPHA_997
00007466  0601 0030              12722mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000746A  6000 0006              12723mm         BRA     DONE_997
0000746E  0601 0037              12724mm ALPHA_997: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007472  4E71                   12725mm DONE_997: NOP
00007474                         12726mm         ENDM
00007474  4E4F                   12727m         TRAP    #15         ; EXECUTE OUTPUT
00007476                         12728m         
00007476  3212                   12729m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007478  E149                   12730m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000747A  E049                   12731m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000747C  E849                   12732m         LSR.W   #4, D1      
0000747E                         12733mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000747E  0C01 0009              12734mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007482  6E00 000A              12735mm         BGT     ALPHA_998
00007486  0601 0030              12736mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000748A  6000 0006              12737mm         BRA     DONE_998
0000748E  0601 0037              12738mm ALPHA_998: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007492  4E71                   12739mm DONE_998: NOP
00007494                         12740mm         ENDM
00007494  4E4F                   12741m         TRAP    #15         ; EXECUTE OUTPUT
00007496                         12742m         
00007496  3212                   12743m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007498  E149                   12744m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000749A  E949                   12745m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000749C  E049                   12746m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000749E  E849                   12747m         LSR.W   #4, D1      
000074A0                         12748mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074A0  0C01 0009              12749mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074A4  6E00 000A              12750mm         BGT     ALPHA_999
000074A8  0601 0030              12751mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000074AC  6000 0006              12752mm         BRA     DONE_999
000074B0  0601 0037              12753mm ALPHA_999: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000074B4  4E71                   12754mm DONE_999: NOP
000074B6                         12755mm         ENDM
000074B6  4E4F                   12756m         TRAP    #15         ; EXECUTE OUTPUT   
000074B8                         12757m         ENDM     
000074B8                         12758          
000074B8  BE3C 0007              12759          CMP.B   #$07, D7
000074BC  6700 0130              12760          BEQ     decodeImmediateDest
000074C0                         12761          
000074C0  6000 02DE              12762          BRA     decodeImmediateComp
000074C4                         12763  decodeImmediateL:
000074C4                         12764m         space
000074C4  43F8 00DD              12765m         LEA     OBLANK, A1
000074C8  103C 000E              12766m         MOVE.B  #14,D0          
000074CC  4E4F                   12767m         TRAP    #15
000074CE                         12768m         ENDM
000074CE                         12769m         adrOut
000074CE  103C 0006              12770m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000074D2  3212                   12771m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000074D4  E049                   12772m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000074D6  E849                   12773m         LSR.W   #4, D1      
000074D8                         12774mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074D8  0C01 0009              12775mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074DC  6E00 000A              12776mm         BGT     ALPHA_1002
000074E0  0601 0030              12777mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000074E4  6000 0006              12778mm         BRA     DONE_1002
000074E8  0601 0037              12779mm ALPHA_1002: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000074EC  4E71                   12780mm DONE_1002: NOP
000074EE                         12781mm         ENDM
000074EE  4E4F                   12782m         TRAP    #15         ; EXECUTE OUTPUT
000074F0                         12783m         
000074F0  3212                   12784m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000074F2  E949                   12785m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000074F4  E049                   12786m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000074F6  E849                   12787m         LSR.W   #4, D1      
000074F8                         12788mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074F8  0C01 0009              12789mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074FC  6E00 000A              12790mm         BGT     ALPHA_1003
00007500  0601 0030              12791mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007504  6000 0006              12792mm         BRA     DONE_1003
00007508  0601 0037              12793mm ALPHA_1003: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000750C  4E71                   12794mm DONE_1003: NOP
0000750E                         12795mm         ENDM
0000750E  4E4F                   12796m         TRAP    #15         ; EXECUTE OUTPUT
00007510                         12797m         
00007510  3212                   12798m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007512  E149                   12799m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007514  E049                   12800m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007516  E849                   12801m         LSR.W   #4, D1      
00007518                         12802mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007518  0C01 0009              12803mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000751C  6E00 000A              12804mm         BGT     ALPHA_1004
00007520  0601 0030              12805mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007524  6000 0006              12806mm         BRA     DONE_1004
00007528  0601 0037              12807mm ALPHA_1004: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000752C  4E71                   12808mm DONE_1004: NOP
0000752E                         12809mm         ENDM
0000752E  4E4F                   12810m         TRAP    #15         ; EXECUTE OUTPUT
00007530                         12811m         
00007530  3212                   12812m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007532  E149                   12813m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007534  E949                   12814m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007536  E049                   12815m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007538  E849                   12816m         LSR.W   #4, D1      
0000753A                         12817mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000753A  0C01 0009              12818mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000753E  6E00 000A              12819mm         BGT     ALPHA_1005
00007542  0601 0030              12820mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007546  6000 0006              12821mm         BRA     DONE_1005
0000754A  0601 0037              12822mm ALPHA_1005: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000754E  4E71                   12823mm DONE_1005: NOP
00007550                         12824mm         ENDM
00007550  4E4F                   12825m         TRAP    #15         ; EXECUTE OUTPUT   
00007552                         12826m         ENDM     
00007552                         12827m         space
00007552  43F8 00DD              12828m         LEA     OBLANK, A1
00007556  103C 000E              12829m         MOVE.B  #14,D0          
0000755A  4E4F                   12830m         TRAP    #15
0000755C                         12831m         ENDM
0000755C  381A                   12832          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
0000755E                         12833m         adrOut
0000755E  103C 0006              12834m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007562  3212                   12835m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007564  E049                   12836m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007566  E849                   12837m         LSR.W   #4, D1      
00007568                         12838mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007568  0C01 0009              12839mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000756C  6E00 000A              12840mm         BGT     ALPHA_1008
00007570  0601 0030              12841mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007574  6000 0006              12842mm         BRA     DONE_1008
00007578  0601 0037              12843mm ALPHA_1008: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000757C  4E71                   12844mm DONE_1008: NOP
0000757E                         12845mm         ENDM
0000757E  4E4F                   12846m         TRAP    #15         ; EXECUTE OUTPUT
00007580                         12847m         
00007580  3212                   12848m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007582  E949                   12849m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007584  E049                   12850m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007586  E849                   12851m         LSR.W   #4, D1      
00007588                         12852mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007588  0C01 0009              12853mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000758C  6E00 000A              12854mm         BGT     ALPHA_1009
00007590  0601 0030              12855mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007594  6000 0006              12856mm         BRA     DONE_1009
00007598  0601 0037              12857mm ALPHA_1009: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000759C  4E71                   12858mm DONE_1009: NOP
0000759E                         12859mm         ENDM
0000759E  4E4F                   12860m         TRAP    #15         ; EXECUTE OUTPUT
000075A0                         12861m         
000075A0  3212                   12862m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000075A2  E149                   12863m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000075A4  E049                   12864m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000075A6  E849                   12865m         LSR.W   #4, D1      
000075A8                         12866mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000075A8  0C01 0009              12867mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000075AC  6E00 000A              12868mm         BGT     ALPHA_1010
000075B0  0601 0030              12869mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000075B4  6000 0006              12870mm         BRA     DONE_1010
000075B8  0601 0037              12871mm ALPHA_1010: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000075BC  4E71                   12872mm DONE_1010: NOP
000075BE                         12873mm         ENDM
000075BE  4E4F                   12874m         TRAP    #15         ; EXECUTE OUTPUT
000075C0                         12875m         
000075C0  3212                   12876m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000075C2  E149                   12877m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000075C4  E949                   12878m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000075C6  E049                   12879m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000075C8  E849                   12880m         LSR.W   #4, D1      
000075CA                         12881mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000075CA  0C01 0009              12882mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000075CE  6E00 000A              12883mm         BGT     ALPHA_1011
000075D2  0601 0030              12884mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000075D6  6000 0006              12885mm         BRA     DONE_1011
000075DA  0601 0037              12886mm ALPHA_1011: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000075DE  4E71                   12887mm DONE_1011: NOP
000075E0                         12888mm         ENDM
000075E0  4E4F                   12889m         TRAP    #15         ; EXECUTE OUTPUT   
000075E2                         12890m         ENDM     
000075E2                         12891          
000075E2  BE3C 0007              12892          CMP.B   #$07, D7
000075E6  6700 0006              12893          BEQ     decodeImmediateDest
000075EA                         12894  
000075EA  6000 01B4              12895          BRA     decodeImmediateComp
000075EE                         12896  decodeImmediateDest:
000075EE  3E13                   12897          MOVE.W  (A3), D7
000075F0  381A                   12898          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
000075F2  0807 0000              12899          BTST    #0, D7
000075F6  6600 0094              12900          BNE     decodeImmediateDestL
000075FA                         12901  decodeImmediateDestW:        
000075FA                         12902m         space
000075FA  43F8 00DD              12903m         LEA     OBLANK, A1
000075FE  103C 000E              12904m         MOVE.B  #14,D0          
00007602  4E4F                   12905m         TRAP    #15
00007604                         12906m         ENDM
00007604                         12907m         adrOut 
00007604  103C 0006              12908m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007608  3212                   12909m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000760A  E049                   12910m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000760C  E849                   12911m         LSR.W   #4, D1      
0000760E                         12912mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000760E  0C01 0009              12913mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007612  6E00 000A              12914mm         BGT     ALPHA_1014
00007616  0601 0030              12915mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000761A  6000 0006              12916mm         BRA     DONE_1014
0000761E  0601 0037              12917mm ALPHA_1014: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007622  4E71                   12918mm DONE_1014: NOP
00007624                         12919mm         ENDM
00007624  4E4F                   12920m         TRAP    #15         ; EXECUTE OUTPUT
00007626                         12921m         
00007626  3212                   12922m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007628  E949                   12923m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000762A  E049                   12924m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000762C  E849                   12925m         LSR.W   #4, D1      
0000762E                         12926mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000762E  0C01 0009              12927mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007632  6E00 000A              12928mm         BGT     ALPHA_1015
00007636  0601 0030              12929mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000763A  6000 0006              12930mm         BRA     DONE_1015
0000763E  0601 0037              12931mm ALPHA_1015: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007642  4E71                   12932mm DONE_1015: NOP
00007644                         12933mm         ENDM
00007644  4E4F                   12934m         TRAP    #15         ; EXECUTE OUTPUT
00007646                         12935m         
00007646  3212                   12936m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007648  E149                   12937m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000764A  E049                   12938m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000764C  E849                   12939m         LSR.W   #4, D1      
0000764E                         12940mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000764E  0C01 0009              12941mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007652  6E00 000A              12942mm         BGT     ALPHA_1016
00007656  0601 0030              12943mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000765A  6000 0006              12944mm         BRA     DONE_1016
0000765E  0601 0037              12945mm ALPHA_1016: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007662  4E71                   12946mm DONE_1016: NOP
00007664                         12947mm         ENDM
00007664  4E4F                   12948m         TRAP    #15         ; EXECUTE OUTPUT
00007666                         12949m         
00007666  3212                   12950m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007668  E149                   12951m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000766A  E949                   12952m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000766C  E049                   12953m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000766E  E849                   12954m         LSR.W   #4, D1      
00007670                         12955mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007670  0C01 0009              12956mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007674  6E00 000A              12957mm         BGT     ALPHA_1017
00007678  0601 0030              12958mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000767C  6000 0006              12959mm         BRA     DONE_1017
00007680  0601 0037              12960mm ALPHA_1017: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007684  4E71                   12961mm DONE_1017: NOP
00007686                         12962mm         ENDM
00007686  4E4F                   12963m         TRAP    #15         ; EXECUTE OUTPUT   
00007688                         12964m         ENDM     
00007688  6000 0116              12965          BRA     decodeImmediateComp
0000768C                         12966  decodeImmediateDestL:
0000768C                         12967m         space
0000768C  43F8 00DD              12968m         LEA     OBLANK, A1
00007690  103C 000E              12969m         MOVE.B  #14,D0          
00007694  4E4F                   12970m         TRAP    #15
00007696                         12971m         ENDM
00007696                         12972m         adrOut
00007696  103C 0006              12973m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000769A  3212                   12974m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000769C  E049                   12975m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000769E  E849                   12976m         LSR.W   #4, D1      
000076A0                         12977mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076A0  0C01 0009              12978mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000076A4  6E00 000A              12979mm         BGT     ALPHA_1020
000076A8  0601 0030              12980mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076AC  6000 0006              12981mm         BRA     DONE_1020
000076B0  0601 0037              12982mm ALPHA_1020: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076B4  4E71                   12983mm DONE_1020: NOP
000076B6                         12984mm         ENDM
000076B6  4E4F                   12985m         TRAP    #15         ; EXECUTE OUTPUT
000076B8                         12986m         
000076B8  3212                   12987m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076BA  E949                   12988m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000076BC  E049                   12989m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000076BE  E849                   12990m         LSR.W   #4, D1      
000076C0                         12991mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076C0  0C01 0009              12992mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000076C4  6E00 000A              12993mm         BGT     ALPHA_1021
000076C8  0601 0030              12994mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076CC  6000 0006              12995mm         BRA     DONE_1021
000076D0  0601 0037              12996mm ALPHA_1021: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076D4  4E71                   12997mm DONE_1021: NOP
000076D6                         12998mm         ENDM
000076D6  4E4F                   12999m         TRAP    #15         ; EXECUTE OUTPUT
000076D8                         13000m         
000076D8  3212                   13001m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076DA  E149                   13002m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000076DC  E049                   13003m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000076DE  E849                   13004m         LSR.W   #4, D1      
000076E0                         13005mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076E0  0C01 0009              13006mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000076E4  6E00 000A              13007mm         BGT     ALPHA_1022
000076E8  0601 0030              13008mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076EC  6000 0006              13009mm         BRA     DONE_1022
000076F0  0601 0037              13010mm ALPHA_1022: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076F4  4E71                   13011mm DONE_1022: NOP
000076F6                         13012mm         ENDM
000076F6  4E4F                   13013m         TRAP    #15         ; EXECUTE OUTPUT
000076F8                         13014m         
000076F8  3212                   13015m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076FA  E149                   13016m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000076FC  E949                   13017m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000076FE  E049                   13018m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007700  E849                   13019m         LSR.W   #4, D1      
00007702                         13020mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007702  0C01 0009              13021mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007706  6E00 000A              13022mm         BGT     ALPHA_1023
0000770A  0601 0030              13023mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000770E  6000 0006              13024mm         BRA     DONE_1023
00007712  0601 0037              13025mm ALPHA_1023: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007716  4E71                   13026mm DONE_1023: NOP
00007718                         13027mm         ENDM
00007718  4E4F                   13028m         TRAP    #15         ; EXECUTE OUTPUT   
0000771A                         13029m         ENDM     
0000771A  381A                   13030          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
0000771C                         13031m         adrOut
0000771C  103C 0006              13032m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007720  3212                   13033m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007722  E049                   13034m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007724  E849                   13035m         LSR.W   #4, D1      
00007726                         13036mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007726  0C01 0009              13037mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000772A  6E00 000A              13038mm         BGT     ALPHA_1025
0000772E  0601 0030              13039mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007732  6000 0006              13040mm         BRA     DONE_1025
00007736  0601 0037              13041mm ALPHA_1025: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000773A  4E71                   13042mm DONE_1025: NOP
0000773C                         13043mm         ENDM
0000773C  4E4F                   13044m         TRAP    #15         ; EXECUTE OUTPUT
0000773E                         13045m         
0000773E  3212                   13046m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007740  E949                   13047m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007742  E049                   13048m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007744  E849                   13049m         LSR.W   #4, D1      
00007746                         13050mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007746  0C01 0009              13051mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000774A  6E00 000A              13052mm         BGT     ALPHA_1026
0000774E  0601 0030              13053mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007752  6000 0006              13054mm         BRA     DONE_1026
00007756  0601 0037              13055mm ALPHA_1026: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000775A  4E71                   13056mm DONE_1026: NOP
0000775C                         13057mm         ENDM
0000775C  4E4F                   13058m         TRAP    #15         ; EXECUTE OUTPUT
0000775E                         13059m         
0000775E  3212                   13060m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007760  E149                   13061m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007762  E049                   13062m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007764  E849                   13063m         LSR.W   #4, D1      
00007766                         13064mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007766  0C01 0009              13065mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000776A  6E00 000A              13066mm         BGT     ALPHA_1027
0000776E  0601 0030              13067mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007772  6000 0006              13068mm         BRA     DONE_1027
00007776  0601 0037              13069mm ALPHA_1027: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000777A  4E71                   13070mm DONE_1027: NOP
0000777C                         13071mm         ENDM
0000777C  4E4F                   13072m         TRAP    #15         ; EXECUTE OUTPUT
0000777E                         13073m         
0000777E  3212                   13074m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007780  E149                   13075m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007782  E949                   13076m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007784  E049                   13077m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007786  E849                   13078m         LSR.W   #4, D1      
00007788                         13079mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007788  0C01 0009              13080mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000778C  6E00 000A              13081mm         BGT     ALPHA_1028
00007790  0601 0030              13082mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007794  6000 0006              13083mm         BRA     DONE_1028
00007798  0601 0037              13084mm ALPHA_1028: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000779C  4E71                   13085mm DONE_1028: NOP
0000779E                         13086mm         ENDM
0000779E  4E4F                   13087m         TRAP    #15         ; EXECUTE OUTPUT   
000077A0                         13088m         ENDM     
000077A0                         13089          
000077A0                         13090  decodeImmediateComp:
000077A0  4E75                   13091          RTS                 ; Return from decodeDIVU subroutine
000077A2                         13092  
000077A2                         13093  ; ========================================================================
000077A2                         13094  ; Generic Helper Functions
000077A2                         13095  ; 
000077A2                         13096  ; Set of subroutines which do various tasks which are repeated frequently.
000077A2                         13097  ; Each helper function should be commented with required input and output.
000077A2                         13098  ; 
000077A2                         13099  ; If input is required, request through D0, D1, etc
000077A2                         13100  ; Return using D0
000077A2                         13101  ; ========================================================================
000077A2                         13102  
000077A2                         13103  ; ------------------------------------------------------------
000077A2                         13104  ; outputData
000077A2                         13105  ; Jonathan
000077A2                         13106  ;
000077A2                         13107  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
000077A2                         13108  ; ------------------------------------------------------------
000077A2                         13109  outputData:
000077A2  103C 0006              13110          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
000077A6  323C 003D              13111          MOVE.W  #61, D1     ; An = sign
000077AA  4E4F                   13112          TRAP    #15         ; Output = sign
000077AC                         13113          
000077AC  3212                   13114          MOVE.W  (A2), D1    ; Move A2 into D1
000077AE  E049                   13115          LSR.W   #8, D1      ; Get the first hex digit of D1
000077B0  E849                   13116          LSR.W   #4, D1      
000077B2                         13117m         ConvertHtoA D1      ; Convert D1 to a character
000077B2  0C01 0009              13118m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077B6  6E00 000A              13119m         BGT     ALPHA_1029
000077BA  0601 0030              13120m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077BE  6000 0006              13121m         BRA     DONE_1029
000077C2  0601 0037              13122m ALPHA_1029: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000077C6  4E71                   13123m DONE_1029: NOP
000077C8                         13124m         ENDM
000077C8  4E4F                   13125          TRAP    #15         ; Execute output
000077CA                         13126          
000077CA  3212                   13127          MOVE.W  (A2), D1    ; Move A2 into D1
000077CC  E949                   13128          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
000077CE  E049                   13129          LSR.W   #8, D1      ; Get the first hex digit of D1
000077D0  E849                   13130          LSR.W   #4, D1      
000077D2                         13131m         ConvertHtoA D1      ; Convert D1 to a character
000077D2  0C01 0009              13132m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077D6  6E00 000A              13133m         BGT     ALPHA_1030
000077DA  0601 0030              13134m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077DE  6000 0006              13135m         BRA     DONE_1030
000077E2  0601 0037              13136m ALPHA_1030: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000077E6  4E71                   13137m DONE_1030: NOP
000077E8                         13138m         ENDM
000077E8  4E4F                   13139          TRAP    #15         ; Execute output
000077EA                         13140          
000077EA  3212                   13141          MOVE.W  (A2), D1    ; Move A2 into D1
000077EC  E149                   13142          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
000077EE  E049                   13143          LSR.W   #8, D1      ; Get the first hex digit of D1
000077F0  E849                   13144          LSR.W   #4, D1      
000077F2                         13145m         ConvertHtoA D1      ; Convert D1 to a character
000077F2  0C01 0009              13146m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077F6  6E00 000A              13147m         BGT     ALPHA_1031
000077FA  0601 0030              13148m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077FE  6000 0006              13149m         BRA     DONE_1031
00007802  0601 0037              13150m ALPHA_1031: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007806  4E71                   13151m DONE_1031: NOP
00007808                         13152m         ENDM
00007808  4E4F                   13153          TRAP    #15         ; Execute output
0000780A                         13154          
0000780A  3212                   13155          MOVE.W  (A2), D1    ; Move A2 into D1
0000780C  E149                   13156          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000780E  E949                   13157          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00007810  E049                   13158          LSR.W   #8, D1      ; Get the first hex digit of D1
00007812  E849                   13159          LSR.W   #4, D1      
00007814                         13160m         ConvertHtoA D1      ; Convert D1 to a character
00007814  0C01 0009              13161m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007818  6E00 000A              13162m         BGT     ALPHA_1032
0000781C  0601 0030              13163m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007820  6000 0006              13164m         BRA     DONE_1032
00007824  0601 0037              13165m ALPHA_1032: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007828  4E71                   13166m DONE_1032: NOP
0000782A                         13167m         ENDM
0000782A  4E4F                   13168          TRAP    #15         ; Execute output
0000782C  4E75                   13169          RTS
0000782E                         13170  
0000782E                         13171  
0000782E                         13172  
0000782E                         13173  
0000782E                         13174  
0000782E                         13175  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000782E                         13176                              ; End of Code
0000782E                         13177          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_162  23AE
ADRABSOLUTEDST_226  299A
ADRABSOLUTEDST_26   164A
ADRABSOLUTEDST_298  30EA
ADRABSOLUTEDST_362  36D6
ADRABSOLUTEDST_429  3D2A
ADRABSOLUTEDST_496  437E
ADRABSOLUTEDST_563  49DC
ADRABSOLUTEDST_635  512C
ADRABSOLUTEDST_699  5718
ADRABSOLUTEDST_767  5DB8
ADRABSOLUTEDST_909  6DD8
ADRABSOLUTEDST_91   1C3C
ADRABSOLUTEL_162    2628
ADRABSOLUTEL_226    2C14
ADRABSOLUTEL_26     18C4
ADRABSOLUTEL_298    3364
ADRABSOLUTEL_362    3950
ADRABSOLUTEL_429    3FA4
ADRABSOLUTEL_496    45F8
ADRABSOLUTEL_563    4C56
ADRABSOLUTEL_635    53A6
ADRABSOLUTEL_699    5992
ADRABSOLUTEL_767    6032
ADRABSOLUTEL_909    7052
ADRABSOLUTEL_91     1EB6
ADRABSOLUTEW_162    2592
ADRABSOLUTEW_226    2B7E
ADRABSOLUTEW_26     182E
ADRABSOLUTEW_298    32CE
ADRABSOLUTEW_362    38BA
ADRABSOLUTEW_429    3F0E
ADRABSOLUTEW_496    4562
ADRABSOLUTEW_563    4BC0
ADRABSOLUTEW_635    5310
ADRABSOLUTEW_699    58FC
ADRABSOLUTEW_767    5F9C
ADRABSOLUTEW_909    6FBC
ADRABSOLUTEW_91     1E20
ADRABSOLUTE_162     2390
ADRABSOLUTE_226     297C
ADRABSOLUTE_26      162C
ADRABSOLUTE_298     30CC
ADRABSOLUTE_362     36B8
ADRABSOLUTE_429     3D0C
ADRABSOLUTE_496     4360
ADRABSOLUTE_563     49BE
ADRABSOLUTE_635     510E
ADRABSOLUTE_699     56FA
ADRABSOLUTE_767     5D9A
ADRABSOLUTE_909     6DBA
ADRABSOLUTE_91      1C1E
ADRDEST_161         2166
ADRDEST_225         2752
ADRDEST_25          1402
ADRDEST_297         2EA2
ADRDEST_361         348E
ADRDEST_428         3AE2
ADRDEST_495         4136
ADRDEST_562         4794
ADRDEST_634         4EE4
ADRDEST_698         54D0
ADRDEST_766         5B70
ADRDEST_90          19F4
ADRDEST_908         6B90
ADRDEST_992         73FA
ADRIMMEDIATEL_162   246C
ADRIMMEDIATEL_226   2A58
ADRIMMEDIATEL_26    1708
ADRIMMEDIATEL_298   31A8
ADRIMMEDIATEL_362   3794
ADRIMMEDIATEL_429   3DE8
ADRIMMEDIATEL_496   443C
ADRIMMEDIATEL_563   4A9A
ADRIMMEDIATEL_635   51EA
ADRIMMEDIATEL_699   57D6
ADRIMMEDIATEL_767   5E76
ADRIMMEDIATEL_909   6E96
ADRIMMEDIATEL_91    1CFA
ADRIMMEDIATEW_162   23CC
ADRIMMEDIATEW_226   29B8
ADRIMMEDIATEW_26    1668
ADRIMMEDIATEW_298   3108
ADRIMMEDIATEW_362   36F4
ADRIMMEDIATEW_429   3D48
ADRIMMEDIATEW_496   439C
ADRIMMEDIATEW_563   49FA
ADRIMMEDIATEW_635   514A
ADRIMMEDIATEW_699   5736
ADRIMMEDIATEW_767   5DD6
ADRIMMEDIATEW_909   6DF6
ADRIMMEDIATEW_91    1C5A
ADRIMMEDIATE_162    23C4
ADRIMMEDIATE_226    29B0
ADRIMMEDIATE_26     1660
ADRIMMEDIATE_298    3100
ADRIMMEDIATE_362    36EC
ADRIMMEDIATE_429    3D40
ADRIMMEDIATE_496    4394
ADRIMMEDIATE_563    49F2
ADRIMMEDIATE_635    5142
ADRIMMEDIATE_699    572E
ADRIMMEDIATE_767    5DCE
ADRIMMEDIATE_909    6DEE
ADRIMMEDIATE_91     1C52
ADROUT              957
ADROUTINPUT         EC2
ADRREGDIRECTDEST_162  21F0
ADRREGDIRECTDEST_226  27DC
ADRREGDIRECTDEST_26  148C
ADRREGDIRECTDEST_298  2F2C
ADRREGDIRECTDEST_362  3518
ADRREGDIRECTDEST_429  3B6C
ADRREGDIRECTDEST_496  41C0
ADRREGDIRECTDEST_563  481E
ADRREGDIRECTDEST_635  4F6E
ADRREGDIRECTDEST_699  555A
ADRREGDIRECTDEST_767  5BFA
ADRREGDIRECTDEST_909  6C1A
ADRREGDIRECTDEST_91  1A7E
ADRREGDIRECTSRC_162  220C
ADRREGDIRECTSRC_226  27F8
ADRREGDIRECTSRC_26  14A8
ADRREGDIRECTSRC_298  2F48
ADRREGDIRECTSRC_362  3534
ADRREGDIRECTSRC_429  3B88
ADRREGDIRECTSRC_496  41DC
ADRREGDIRECTSRC_563  483A
ADRREGDIRECTSRC_635  4F8A
ADRREGDIRECTSRC_699  5576
ADRREGDIRECTSRC_767  5C16
ADRREGDIRECTSRC_909  6C36
ADRREGDIRECTSRC_91  1A9A
ADRREGDIRECT_162    21E8
ADRREGDIRECT_226    27D4
ADRREGDIRECT_26     1484
ADRREGDIRECT_298    2F24
ADRREGDIRECT_362    3510
ADRREGDIRECT_429    3B64
ADRREGDIRECT_496    41B8
ADRREGDIRECT_563    4816
ADRREGDIRECT_635    4F66
ADRREGDIRECT_699    5552
ADRREGDIRECT_767    5BF2
ADRREGDIRECT_909    6C12
ADRREGDIRECT_91     1A76
ADRREGINDIRECTDEST_162  2232
ADRREGINDIRECTDEST_226  281E
ADRREGINDIRECTDEST_26  14CE
ADRREGINDIRECTDEST_298  2F6E
ADRREGINDIRECTDEST_362  355A
ADRREGINDIRECTDEST_429  3BAE
ADRREGINDIRECTDEST_496  4202
ADRREGINDIRECTDEST_563  4860
ADRREGINDIRECTDEST_635  4FB0
ADRREGINDIRECTDEST_699  559C
ADRREGINDIRECTDEST_767  5C3C
ADRREGINDIRECTDEST_909  6C5C
ADRREGINDIRECTDEST_91  1AC0
ADRREGINDIRECTSRC_162  2262
ADRREGINDIRECTSRC_226  284E
ADRREGINDIRECTSRC_26  14FE
ADRREGINDIRECTSRC_298  2F9E
ADRREGINDIRECTSRC_362  358A
ADRREGINDIRECTSRC_429  3BDE
ADRREGINDIRECTSRC_496  4232
ADRREGINDIRECTSRC_563  4890
ADRREGINDIRECTSRC_635  4FE0
ADRREGINDIRECTSRC_699  55CC
ADRREGINDIRECTSRC_767  5C6C
ADRREGINDIRECTSRC_909  6C8C
ADRREGINDIRECTSRC_91  1AF0
ADRREGINDIRECT_162  222A
ADRREGINDIRECT_226  2816
ADRREGINDIRECT_26   14C6
ADRREGINDIRECT_298  2F66
ADRREGINDIRECT_362  3552
ADRREGINDIRECT_429  3BA6
ADRREGINDIRECT_496  41FA
ADRREGINDIRECT_563  4858
ADRREGINDIRECT_635  4FA8
ADRREGINDIRECT_699  5594
ADRREGINDIRECT_767  5C34
ADRREGINDIRECT_909  6C54
ADRREGINDIRECT_91   1AB8
ADRREGPOSTINCDEST_162  229C
ADRREGPOSTINCDEST_226  2888
ADRREGPOSTINCDEST_26  1538
ADRREGPOSTINCDEST_298  2FD8
ADRREGPOSTINCDEST_362  35C4
ADRREGPOSTINCDEST_429  3C18
ADRREGPOSTINCDEST_496  426C
ADRREGPOSTINCDEST_563  48CA
ADRREGPOSTINCDEST_635  501A
ADRREGPOSTINCDEST_699  5606
ADRREGPOSTINCDEST_767  5CA6
ADRREGPOSTINCDEST_909  6CC6
ADRREGPOSTINCDEST_91  1B2A
ADRREGPOSTINCSRC_162  22D6
ADRREGPOSTINCSRC_226  28C2
ADRREGPOSTINCSRC_26  1572
ADRREGPOSTINCSRC_298  3012
ADRREGPOSTINCSRC_362  35FE
ADRREGPOSTINCSRC_429  3C52
ADRREGPOSTINCSRC_496  42A6
ADRREGPOSTINCSRC_563  4904
ADRREGPOSTINCSRC_635  5054
ADRREGPOSTINCSRC_699  5640
ADRREGPOSTINCSRC_767  5CE0
ADRREGPOSTINCSRC_909  6D00
ADRREGPOSTINCSRC_91  1B64
ADRREGPOSTINC_162   2294
ADRREGPOSTINC_226   2880
ADRREGPOSTINC_26    1530
ADRREGPOSTINC_298   2FD0
ADRREGPOSTINC_362   35BC
ADRREGPOSTINC_429   3C10
ADRREGPOSTINC_496   4264
ADRREGPOSTINC_563   48C2
ADRREGPOSTINC_635   5012
ADRREGPOSTINC_699   55FE
ADRREGPOSTINC_767   5C9E
ADRREGPOSTINC_909   6CBE
ADRREGPOSTINC_91    1B22
ADRREGPREDECDEST_162  231A
ADRREGPREDECDEST_226  2906
ADRREGPREDECDEST_26  15B6
ADRREGPREDECDEST_298  3056
ADRREGPREDECDEST_362  3642
ADRREGPREDECDEST_429  3C96
ADRREGPREDECDEST_496  42EA
ADRREGPREDECDEST_563  4948
ADRREGPREDECDEST_635  5098
ADRREGPREDECDEST_699  5684
ADRREGPREDECDEST_767  5D24
ADRREGPREDECDEST_909  6D44
ADRREGPREDECDEST_91  1BA8
ADRREGPREDECSRC_162  2354
ADRREGPREDECSRC_226  2940
ADRREGPREDECSRC_26  15F0
ADRREGPREDECSRC_298  3090
ADRREGPREDECSRC_362  367C
ADRREGPREDECSRC_429  3CD0
ADRREGPREDECSRC_496  4324
ADRREGPREDECSRC_563  4982
ADRREGPREDECSRC_635  50D2
ADRREGPREDECSRC_699  56BE
ADRREGPREDECSRC_767  5D5E
ADRREGPREDECSRC_909  6D7E
ADRREGPREDECSRC_91  1BE2
ADRREGPREDEC_162    2312
ADRREGPREDEC_226    28FE
ADRREGPREDEC_26     15AE
ADRREGPREDEC_298    304E
ADRREGPREDEC_362    363A
ADRREGPREDEC_429    3C8E
ADRREGPREDEC_496    42E2
ADRREGPREDEC_563    4940
ADRREGPREDEC_635    5090
ADRREGPREDEC_699    567C
ADRREGPREDEC_767    5D1C
ADRREGPREDEC_909    6D3C
ADRREGPREDEC_91     1BA0
ADRSOURCE_161       2170
ADRSOURCE_225       275C
ADRSOURCE_25        140C
ADRSOURCE_297       2EAC
ADRSOURCE_361       3498
ADRSOURCE_428       3AEC
ADRSOURCE_495       4140
ADRSOURCE_562       479E
ADRSOURCE_634       4EEE
ADRSOURCE_698       54DA
ADRSOURCE_766       5B7A
ADRSOURCE_90        19FE
ADRSOURCE_908       6B9A
ADRSOURCE_992       7404
ALPHA_10            10EE
ALPHA_1002          74E8
ALPHA_1003          7508
ALPHA_1004          7528
ALPHA_1005          754A
ALPHA_1008          7578
ALPHA_1009          7598
ALPHA_1010          75B8
ALPHA_1011          75DA
ALPHA_1014          761E
ALPHA_1015          763E
ALPHA_1016          765E
ALPHA_1017          7680
ALPHA_1020          76B0
ALPHA_1021          76D0
ALPHA_1022          76F0
ALPHA_1023          7712
ALPHA_1025          7736
ALPHA_1026          7756
ALPHA_1027          7776
ALPHA_1028          7798
ALPHA_1029          77C2
ALPHA_1030          77E2
ALPHA_1031          7802
ALPHA_1032          7824
ALPHA_11            110E
ALPHA_12            112E
ALPHA_121           1C8A
ALPHA_122           1CAA
ALPHA_123           1CCA
ALPHA_124           1CEC
ALPHA_128           1D2A
ALPHA_129           1D4A
ALPHA_130           1D6A
ALPHA_131           1D8C
ALPHA_133           1DB0
ALPHA_134           1DD0
ALPHA_135           1DF0
ALPHA_136           1E12
ALPHA_139           1E46
ALPHA_140           1E66
ALPHA_141           1E86
ALPHA_142           1EA8
ALPHA_145           1EDC
ALPHA_146           1EFC
ALPHA_147           1F1C
ALPHA_148           1F3E
ALPHA_150           1F62
ALPHA_151           1F82
ALPHA_152           1FA2
ALPHA_153           1FC4
ALPHA_16            1174
ALPHA_17            1198
ALPHA_18            11BC
ALPHA_19            11E2
ALPHA_192           23FC
ALPHA_193           241C
ALPHA_194           243C
ALPHA_195           245E
ALPHA_199           249C
ALPHA_200           24BC
ALPHA_201           24DC
ALPHA_202           24FE
ALPHA_204           2522
ALPHA_205           2542
ALPHA_206           2562
ALPHA_207           2584
ALPHA_210           25B8
ALPHA_211           25D8
ALPHA_212           25F8
ALPHA_213           261A
ALPHA_216           264E
ALPHA_217           266E
ALPHA_218           268E
ALPHA_219           26B0
ALPHA_221           26D4
ALPHA_222           26F4
ALPHA_223           2714
ALPHA_224           2736
ALPHA_256           29E8
ALPHA_257           2A08
ALPHA_258           2A28
ALPHA_259           2A4A
ALPHA_263           2A88
ALPHA_264           2AA8
ALPHA_265           2AC8
ALPHA_266           2AEA
ALPHA_268           2B0E
ALPHA_269           2B2E
ALPHA_270           2B4E
ALPHA_271           2B70
ALPHA_274           2BA4
ALPHA_275           2BC4
ALPHA_276           2BE4
ALPHA_277           2C06
ALPHA_280           2C3A
ALPHA_281           2C5A
ALPHA_282           2C7A
ALPHA_283           2C9C
ALPHA_285           2CC0
ALPHA_286           2CE0
ALPHA_287           2D00
ALPHA_288           2D22
ALPHA_3             1034
ALPHA_328           3138
ALPHA_329           3158
ALPHA_330           3178
ALPHA_331           319A
ALPHA_335           31D8
ALPHA_336           31F8
ALPHA_337           3218
ALPHA_338           323A
ALPHA_340           325E
ALPHA_341           327E
ALPHA_342           329E
ALPHA_343           32C0
ALPHA_346           32F4
ALPHA_347           3314
ALPHA_348           3334
ALPHA_349           3356
ALPHA_352           338A
ALPHA_353           33AA
ALPHA_354           33CA
ALPHA_355           33EC
ALPHA_357           3410
ALPHA_358           3430
ALPHA_359           3450
ALPHA_360           3472
ALPHA_392           3724
ALPHA_393           3744
ALPHA_394           3764
ALPHA_395           3786
ALPHA_399           37C4
ALPHA_4             1056
ALPHA_400           37E4
ALPHA_401           3804
ALPHA_402           3826
ALPHA_404           384A
ALPHA_405           386A
ALPHA_406           388A
ALPHA_407           38AC
ALPHA_410           38E0
ALPHA_411           3900
ALPHA_412           3920
ALPHA_413           3942
ALPHA_416           3976
ALPHA_417           3996
ALPHA_418           39B6
ALPHA_419           39D8
ALPHA_421           39FC
ALPHA_422           3A1C
ALPHA_423           3A3C
ALPHA_424           3A5E
ALPHA_459           3D78
ALPHA_460           3D98
ALPHA_461           3DB8
ALPHA_462           3DDA
ALPHA_466           3E18
ALPHA_467           3E38
ALPHA_468           3E58
ALPHA_469           3E7A
ALPHA_471           3E9E
ALPHA_472           3EBE
ALPHA_473           3EDE
ALPHA_474           3F00
ALPHA_477           3F34
ALPHA_478           3F54
ALPHA_479           3F74
ALPHA_480           3F96
ALPHA_483           3FCA
ALPHA_484           3FEA
ALPHA_485           400A
ALPHA_486           402C
ALPHA_488           4050
ALPHA_489           4070
ALPHA_490           4090
ALPHA_491           40B2
ALPHA_5             1076
ALPHA_526           43CC
ALPHA_527           43EC
ALPHA_528           440C
ALPHA_529           442E
ALPHA_533           446C
ALPHA_534           448C
ALPHA_535           44AC
ALPHA_536           44CE
ALPHA_538           44F2
ALPHA_539           4512
ALPHA_540           4532
ALPHA_541           4554
ALPHA_544           4588
ALPHA_545           45A8
ALPHA_546           45C8
ALPHA_547           45EA
ALPHA_550           461E
ALPHA_551           463E
ALPHA_552           465E
ALPHA_553           4680
ALPHA_555           46A4
ALPHA_556           46C4
ALPHA_557           46E4
ALPHA_558           4706
ALPHA_56            1698
ALPHA_57            16B8
ALPHA_58            16D8
ALPHA_59            16FA
ALPHA_593           4A2A
ALPHA_594           4A4A
ALPHA_595           4A6A
ALPHA_596           4A8C
ALPHA_6             1096
ALPHA_600           4ACA
ALPHA_601           4AEA
ALPHA_602           4B0A
ALPHA_603           4B2C
ALPHA_605           4B50
ALPHA_606           4B70
ALPHA_607           4B90
ALPHA_608           4BB2
ALPHA_611           4BE6
ALPHA_612           4C06
ALPHA_613           4C26
ALPHA_614           4C48
ALPHA_617           4C7C
ALPHA_618           4C9C
ALPHA_619           4CBC
ALPHA_620           4CDE
ALPHA_622           4D02
ALPHA_623           4D22
ALPHA_624           4D42
ALPHA_625           4D64
ALPHA_63            1738
ALPHA_64            1758
ALPHA_65            1778
ALPHA_66            179A
ALPHA_665           517A
ALPHA_666           519A
ALPHA_667           51BA
ALPHA_668           51DC
ALPHA_672           521A
ALPHA_673           523A
ALPHA_674           525A
ALPHA_675           527C
ALPHA_677           52A0
ALPHA_678           52C0
ALPHA_679           52E0
ALPHA_68            17BE
ALPHA_680           5302
ALPHA_683           5336
ALPHA_684           5356
ALPHA_685           5376
ALPHA_686           5398
ALPHA_689           53CC
ALPHA_69            17DE
ALPHA_690           53EC
ALPHA_691           540C
ALPHA_692           542E
ALPHA_694           5452
ALPHA_695           5472
ALPHA_696           5492
ALPHA_697           54B4
ALPHA_70            17FE
ALPHA_71            1820
ALPHA_729           5766
ALPHA_730           5786
ALPHA_731           57A6
ALPHA_732           57C8
ALPHA_736           5806
ALPHA_737           5826
ALPHA_738           5846
ALPHA_739           5868
ALPHA_74            1854
ALPHA_741           588C
ALPHA_742           58AC
ALPHA_743           58CC
ALPHA_744           58EE
ALPHA_747           5922
ALPHA_748           5942
ALPHA_749           5962
ALPHA_75            1874
ALPHA_750           5984
ALPHA_753           59B8
ALPHA_754           59D8
ALPHA_755           59F8
ALPHA_756           5A1A
ALPHA_758           5A3E
ALPHA_759           5A5E
ALPHA_76            1894
ALPHA_760           5A7E
ALPHA_761           5AA0
ALPHA_77            18B6
ALPHA_797           5E06
ALPHA_798           5E26
ALPHA_799           5E46
ALPHA_80            18EA
ALPHA_800           5E68
ALPHA_804           5EA6
ALPHA_805           5EC6
ALPHA_806           5EE6
ALPHA_807           5F08
ALPHA_809           5F2C
ALPHA_81            190A
ALPHA_810           5F4C
ALPHA_811           5F6C
ALPHA_812           5F8E
ALPHA_815           5FC2
ALPHA_816           5FE2
ALPHA_817           6002
ALPHA_818           6024
ALPHA_82            192A
ALPHA_821           6058
ALPHA_822           6078
ALPHA_823           6098
ALPHA_824           60BA
ALPHA_826           60DE
ALPHA_827           60FE
ALPHA_828           611E
ALPHA_829           6140
ALPHA_83            194C
ALPHA_85            1970
ALPHA_855           654A
ALPHA_856           656A
ALPHA_857           658A
ALPHA_858           65AC
ALPHA_86            1990
ALPHA_860           65DC
ALPHA_861           65FC
ALPHA_862           661C
ALPHA_863           663E
ALPHA_865           6672
ALPHA_866           6692
ALPHA_867           66B2
ALPHA_868           66D4
ALPHA_87            19B0
ALPHA_874           6774
ALPHA_875           6794
ALPHA_876           67B4
ALPHA_877           67D6
ALPHA_879           6806
ALPHA_88            19D2
ALPHA_880           6826
ALPHA_881           6846
ALPHA_882           6868
ALPHA_884           689C
ALPHA_885           68BC
ALPHA_886           68DC
ALPHA_887           68FE
ALPHA_893           699E
ALPHA_894           69BE
ALPHA_895           69DE
ALPHA_896           6A00
ALPHA_898           6A30
ALPHA_899           6A50
ALPHA_9             10CC
ALPHA_900           6A70
ALPHA_901           6A92
ALPHA_903           6AC6
ALPHA_904           6AE6
ALPHA_905           6B06
ALPHA_906           6B28
ALPHA_939           6E26
ALPHA_940           6E46
ALPHA_941           6E66
ALPHA_942           6E88
ALPHA_946           6EC6
ALPHA_947           6EE6
ALPHA_948           6F06
ALPHA_949           6F28
ALPHA_951           6F4C
ALPHA_952           6F6C
ALPHA_953           6F8C
ALPHA_954           6FAE
ALPHA_957           6FE2
ALPHA_958           7002
ALPHA_959           7022
ALPHA_960           7044
ALPHA_963           7078
ALPHA_964           7098
ALPHA_965           70B8
ALPHA_966           70DA
ALPHA_968           70FE
ALPHA_969           711E
ALPHA_970           713E
ALPHA_971           7160
ALPHA_978           724A
ALPHA_979           726A
ALPHA_980           728A
ALPHA_981           72AC
ALPHA_983           72DC
ALPHA_984           72FC
ALPHA_985           731C
ALPHA_986           733E
ALPHA_988           7372
ALPHA_989           7392
ALPHA_990           73B2
ALPHA_991           73D4
ALPHA_996           744E
ALPHA_997           746E
ALPHA_998           748E
ALPHA_999           74B0
AREG_M              635C
AREG_R              6436
ARIREG              131C
ARISHIFT            1310
ASL_M               6344
ASL_R               641E
ASR_M               6352
ASR_R               642C
CHECKFOR0_154       1FEE
CHECKFOR0_155       2032
CHECKFOR0_22        133E
CHECKFOR0_23        1386
CHECKFOR0_291       2D6E
CHECKFOR0_427       3AAA
CHECKFOR0_494       40FE
CHECKFOR0_561       4752
CHECKFOR0_628       4DB0
CHECKFOR0_764       5AEC
CHECKFOR0_830       616A
CHECKFOR0_835       6244
CHECKFOR0_840       631E
CHECKFOR0_845       63F8
CHECKFOR0_850       64D2
CHECKFOR0_869       66FC
CHECKFOR0_888       6926
CHECKFOR0_907       6B50
CHECKFOR0_972       718A
CHECKFOR0_973       71D2
CHECKFOR1_154       1FF8
CHECKFOR1_155       203C
CHECKFOR1_22        1348
CHECKFOR1_23        1390
CHECKFOR1_291       2D78
CHECKFOR1_427       3AB4
CHECKFOR1_494       4108
CHECKFOR1_561       475C
CHECKFOR1_628       4DBA
CHECKFOR1_764       5AF6
CHECKFOR1_830       6174
CHECKFOR1_835       624E
CHECKFOR1_840       6328
CHECKFOR1_845       6402
CHECKFOR1_850       64DC
CHECKFOR1_869       6706
CHECKFOR1_888       6930
CHECKFOR1_907       6B5A
CHECKFOR1_972       7194
CHECKFOR1_973       71DC
CHECKFORBORW_993    7410
CHECKFORB_24        13BA
CHECKFORB_765       5B28
CHECKFORB_831       61AC
CHECKFORB_836       6286
CHECKFORB_841       6360
CHECKFORB_846       643A
CHECKFORDESTDN_156  2064
CHECKFORDESTDN_292  2DA0
CHECKFORDESTDN_629  4DE2
CHECKFORL_24        13E6
CHECKFORL_765       5B54
CHECKFORL_831       61D8
CHECKFORL_836       62B2
CHECKFORL_841       638C
CHECKFORL_846       6466
CHECKFORL_993       741C
CHECKFORSRCDN_156   20B4
CHECKFORSRCDN_292   2DF0
CHECKFORSRCDN_629   4E32
CHECKFORW_24        13D0
CHECKFORW_765       5B46
CHECKFORW_831       61CA
CHECKFORW_836       62A4
CHECKFORW_841       637E
CHECKFORW_846       6458
COMPLETE_154        200C
COMPLETE_155        2050
COMPLETE_156        2146
COMPLETE_161        2178
COMPLETE_162        2740
COMPLETE_22         135C
COMPLETE_225        2764
COMPLETE_226        2D2C
COMPLETE_23         13A4
COMPLETE_24         13F4
COMPLETE_25         1414
COMPLETE_26         19DC
COMPLETE_291        2D8C
COMPLETE_292        2E82
COMPLETE_297        2EB4
COMPLETE_298        347C
COMPLETE_361        34A0
COMPLETE_362        3A68
COMPLETE_427        3AC8
COMPLETE_428        3AF4
COMPLETE_429        40BC
COMPLETE_494        411C
COMPLETE_495        4148
COMPLETE_496        4710
COMPLETE_561        4770
COMPLETE_562        47A6
COMPLETE_563        4D6E
COMPLETE_628        4DCE
COMPLETE_629        4EC4
COMPLETE_634        4EF6
COMPLETE_635        54BE
COMPLETE_698        54E2
COMPLETE_699        5AAA
COMPLETE_764        5B0A
COMPLETE_765        5B62
COMPLETE_766        5B82
COMPLETE_767        614A
COMPLETE_830        6188
COMPLETE_831        61E6
COMPLETE_835        6262
COMPLETE_836        62C0
COMPLETE_840        633C
COMPLETE_841        639A
COMPLETE_845        6416
COMPLETE_846        6474
COMPLETE_850        64F0
COMPLETE_869        671A
COMPLETE_888        6944
COMPLETE_90         1A06
COMPLETE_907        6B6E
COMPLETE_908        6BA2
COMPLETE_909        716A
COMPLETE_91         1FCE
COMPLETE_972        71A8
COMPLETE_973        71F0
COMPLETE_992        740C
COMPLETE_993        7420
CONVERTATOH         0
CONVERTHTOA         833
DATAREGDIRECTDEST_162  21AC
DATAREGDIRECTDEST_226  2798
DATAREGDIRECTDEST_26  1448
DATAREGDIRECTDEST_298  2EE8
DATAREGDIRECTDEST_362  34D4
DATAREGDIRECTDEST_429  3B28
DATAREGDIRECTDEST_496  417C
DATAREGDIRECTDEST_563  47DA
DATAREGDIRECTDEST_635  4F2A
DATAREGDIRECTDEST_699  5516
DATAREGDIRECTDEST_767  5BB6
DATAREGDIRECTDEST_909  6BD6
DATAREGDIRECTDEST_91  1A3A
DATAREGDIRECTSRC_162  21C8
DATAREGDIRECTSRC_226  27B4
DATAREGDIRECTSRC_26  1464
DATAREGDIRECTSRC_298  2F04
DATAREGDIRECTSRC_362  34F0
DATAREGDIRECTSRC_429  3B44
DATAREGDIRECTSRC_496  4198
DATAREGDIRECTSRC_563  47F6
DATAREGDIRECTSRC_635  4F46
DATAREGDIRECTSRC_699  5532
DATAREGDIRECTSRC_767  5BD2
DATAREGDIRECTSRC_909  6BF2
DATAREGDIRECTSRC_91  1A56
DATAREGDIRECT_162   21A4
DATAREGDIRECT_226   2790
DATAREGDIRECT_26    1440
DATAREGDIRECT_298   2EE0
DATAREGDIRECT_362   34CC
DATAREGDIRECT_429   3B20
DATAREGDIRECT_496   4174
DATAREGDIRECT_563   47D2
DATAREGDIRECT_635   4F22
DATAREGDIRECT_699   550E
DATAREGDIRECT_767   5BAE
DATAREGDIRECT_909   6BCE
DATAREGDIRECT_91    1A32
DECODEADD           2014
DECODEADDCOMP       2D4E
DECODEADDDESTOP     2744
DECODEADRMODE       2C53
DECODEAND           4D92
DECODEANDCOMP       5ACC
DECODEANDDESTOP     54C2
DECODEASX_M         6300
DECODEASX_R         63DA
DECODEBEQ           64B4
DECODEBGE           66DE
DECODEBLT           6908
DECODEBRA           71B4
DECODEDISPLACEMENT  2081
DECODEDISPLACEMENT_853  66DC
DECODEDISPLACEMENT_872  6906
DECODEDISPLACEMENT_891  6B30
DECODEDISPLACEMENT_976  73DC
DECODEDIVU          40E0
DECODEIMMEDIATE     73DE
DECODEIMMEDIATECOMP  77A0
DECODEIMMEDIATEDEST  75EE
DECODEIMMEDIATEDESTL  768C
DECODEIMMEDIATEDESTW  75FA
DECODEIMMEDIATEL    74C4
DECODEJSR           6B32
DECODELEA           4734
DECODELSX_M         614C
DECODELSX_R         6226
DECODEMOVE          1368
DECODEMOVEM         1FD0
DECODEMULS          3A8C
DECODENOP           1320
DECODENOT           5ACE
DECODERTS           716C
DECODESIZELOW       1F39
DECODESUB           2D50
DECODESUBCOMP       3A8A
DECODESUBDESTOP     3480
DESTDNB_156         20A6
DESTDNB_292         2DE2
DESTDNB_629         4E24
DESTDNL_156         207A
DESTDNL_292         2DB6
DESTDNL_629         4DF8
DESTDNW_156         208C
DESTDNW_292         2DC8
DESTDNW_629         4E0A
DONE_10             10F2
DONE_1002           74EC
DONE_1003           750C
DONE_1004           752C
DONE_1005           754E
DONE_1008           757C
DONE_1009           759C
DONE_1010           75BC
DONE_1011           75DE
DONE_1014           7622
DONE_1015           7642
DONE_1016           7662
DONE_1017           7684
DONE_1020           76B4
DONE_1021           76D4
DONE_1022           76F4
DONE_1023           7716
DONE_1025           773A
DONE_1026           775A
DONE_1027           777A
DONE_1028           779C
DONE_1029           77C6
DONE_1030           77E6
DONE_1031           7806
DONE_1032           7828
DONE_11             1112
DONE_12             1132
DONE_121            1C8E
DONE_122            1CAE
DONE_123            1CCE
DONE_124            1CF0
DONE_128            1D2E
DONE_129            1D4E
DONE_130            1D6E
DONE_131            1D90
DONE_133            1DB4
DONE_134            1DD4
DONE_135            1DF4
DONE_136            1E16
DONE_139            1E4A
DONE_140            1E6A
DONE_141            1E8A
DONE_142            1EAC
DONE_145            1EE0
DONE_146            1F00
DONE_147            1F20
DONE_148            1F42
DONE_150            1F66
DONE_151            1F86
DONE_152            1FA6
DONE_153            1FC8
DONE_16             1178
DONE_17             119C
DONE_18             11C0
DONE_19             11E6
DONE_192            2400
DONE_193            2420
DONE_194            2440
DONE_195            2462
DONE_199            24A0
DONE_200            24C0
DONE_201            24E0
DONE_202            2502
DONE_204            2526
DONE_205            2546
DONE_206            2566
DONE_207            2588
DONE_210            25BC
DONE_211            25DC
DONE_212            25FC
DONE_213            261E
DONE_216            2652
DONE_217            2672
DONE_218            2692
DONE_219            26B4
DONE_221            26D8
DONE_222            26F8
DONE_223            2718
DONE_224            273A
DONE_256            29EC
DONE_257            2A0C
DONE_258            2A2C
DONE_259            2A4E
DONE_263            2A8C
DONE_264            2AAC
DONE_265            2ACC
DONE_266            2AEE
DONE_268            2B12
DONE_269            2B32
DONE_270            2B52
DONE_271            2B74
DONE_274            2BA8
DONE_275            2BC8
DONE_276            2BE8
DONE_277            2C0A
DONE_280            2C3E
DONE_281            2C5E
DONE_282            2C7E
DONE_283            2CA0
DONE_285            2CC4
DONE_286            2CE4
DONE_287            2D04
DONE_288            2D26
DONE_3              1038
DONE_328            313C
DONE_329            315C
DONE_330            317C
DONE_331            319E
DONE_335            31DC
DONE_336            31FC
DONE_337            321C
DONE_338            323E
DONE_340            3262
DONE_341            3282
DONE_342            32A2
DONE_343            32C4
DONE_346            32F8
DONE_347            3318
DONE_348            3338
DONE_349            335A
DONE_352            338E
DONE_353            33AE
DONE_354            33CE
DONE_355            33F0
DONE_357            3414
DONE_358            3434
DONE_359            3454
DONE_360            3476
DONE_392            3728
DONE_393            3748
DONE_394            3768
DONE_395            378A
DONE_399            37C8
DONE_4              105A
DONE_400            37E8
DONE_401            3808
DONE_402            382A
DONE_404            384E
DONE_405            386E
DONE_406            388E
DONE_407            38B0
DONE_410            38E4
DONE_411            3904
DONE_412            3924
DONE_413            3946
DONE_416            397A
DONE_417            399A
DONE_418            39BA
DONE_419            39DC
DONE_421            3A00
DONE_422            3A20
DONE_423            3A40
DONE_424            3A62
DONE_459            3D7C
DONE_460            3D9C
DONE_461            3DBC
DONE_462            3DDE
DONE_466            3E1C
DONE_467            3E3C
DONE_468            3E5C
DONE_469            3E7E
DONE_471            3EA2
DONE_472            3EC2
DONE_473            3EE2
DONE_474            3F04
DONE_477            3F38
DONE_478            3F58
DONE_479            3F78
DONE_480            3F9A
DONE_483            3FCE
DONE_484            3FEE
DONE_485            400E
DONE_486            4030
DONE_488            4054
DONE_489            4074
DONE_490            4094
DONE_491            40B6
DONE_5              107A
DONE_526            43D0
DONE_527            43F0
DONE_528            4410
DONE_529            4432
DONE_533            4470
DONE_534            4490
DONE_535            44B0
DONE_536            44D2
DONE_538            44F6
DONE_539            4516
DONE_540            4536
DONE_541            4558
DONE_544            458C
DONE_545            45AC
DONE_546            45CC
DONE_547            45EE
DONE_550            4622
DONE_551            4642
DONE_552            4662
DONE_553            4684
DONE_555            46A8
DONE_556            46C8
DONE_557            46E8
DONE_558            470A
DONE_56             169C
DONE_57             16BC
DONE_58             16DC
DONE_59             16FE
DONE_593            4A2E
DONE_594            4A4E
DONE_595            4A6E
DONE_596            4A90
DONE_6              109A
DONE_600            4ACE
DONE_601            4AEE
DONE_602            4B0E
DONE_603            4B30
DONE_605            4B54
DONE_606            4B74
DONE_607            4B94
DONE_608            4BB6
DONE_611            4BEA
DONE_612            4C0A
DONE_613            4C2A
DONE_614            4C4C
DONE_617            4C80
DONE_618            4CA0
DONE_619            4CC0
DONE_620            4CE2
DONE_622            4D06
DONE_623            4D26
DONE_624            4D46
DONE_625            4D68
DONE_63             173C
DONE_64             175C
DONE_65             177C
DONE_66             179E
DONE_665            517E
DONE_666            519E
DONE_667            51BE
DONE_668            51E0
DONE_672            521E
DONE_673            523E
DONE_674            525E
DONE_675            5280
DONE_677            52A4
DONE_678            52C4
DONE_679            52E4
DONE_68             17C2
DONE_680            5306
DONE_683            533A
DONE_684            535A
DONE_685            537A
DONE_686            539C
DONE_689            53D0
DONE_69             17E2
DONE_690            53F0
DONE_691            5410
DONE_692            5432
DONE_694            5456
DONE_695            5476
DONE_696            5496
DONE_697            54B8
DONE_70             1802
DONE_71             1824
DONE_729            576A
DONE_730            578A
DONE_731            57AA
DONE_732            57CC
DONE_736            580A
DONE_737            582A
DONE_738            584A
DONE_739            586C
DONE_74             1858
DONE_741            5890
DONE_742            58B0
DONE_743            58D0
DONE_744            58F2
DONE_747            5926
DONE_748            5946
DONE_749            5966
DONE_75             1878
DONE_750            5988
DONE_753            59BC
DONE_754            59DC
DONE_755            59FC
DONE_756            5A1E
DONE_758            5A42
DONE_759            5A62
DONE_76             1898
DONE_760            5A82
DONE_761            5AA4
DONE_77             18BA
DONE_797            5E0A
DONE_798            5E2A
DONE_799            5E4A
DONE_80             18EE
DONE_800            5E6C
DONE_804            5EAA
DONE_805            5ECA
DONE_806            5EEA
DONE_807            5F0C
DONE_809            5F30
DONE_81             190E
DONE_810            5F50
DONE_811            5F70
DONE_812            5F92
DONE_815            5FC6
DONE_816            5FE6
DONE_817            6006
DONE_818            6028
DONE_82             192E
DONE_821            605C
DONE_822            607C
DONE_823            609C
DONE_824            60BE
DONE_826            60E2
DONE_827            6102
DONE_828            6122
DONE_829            6144
DONE_83             1950
DONE_85             1974
DONE_855            654E
DONE_856            656E
DONE_857            658E
DONE_858            65B0
DONE_86             1994
DONE_860            65E0
DONE_861            6600
DONE_862            6620
DONE_863            6642
DONE_865            6676
DONE_866            6696
DONE_867            66B6
DONE_868            66D8
DONE_87             19B4
DONE_874            6778
DONE_875            6798
DONE_876            67B8
DONE_877            67DA
DONE_879            680A
DONE_88             19D6
DONE_880            682A
DONE_881            684A
DONE_882            686C
DONE_884            68A0
DONE_885            68C0
DONE_886            68E0
DONE_887            6902
DONE_893            69A2
DONE_894            69C2
DONE_895            69E2
DONE_896            6A04
DONE_898            6A34
DONE_899            6A54
DONE_9              10D0
DONE_900            6A74
DONE_901            6A96
DONE_903            6ACA
DONE_904            6AEA
DONE_905            6B0A
DONE_906            6B2C
DONE_939            6E2A
DONE_940            6E4A
DONE_941            6E6A
DONE_942            6E8C
DONE_946            6ECA
DONE_947            6EEA
DONE_948            6F0A
DONE_949            6F2C
DONE_951            6F50
DONE_952            6F70
DONE_953            6F90
DONE_954            6FB2
DONE_957            6FE6
DONE_958            7006
DONE_959            7026
DONE_960            7048
DONE_963            707C
DONE_964            709C
DONE_965            70BC
DONE_966            70DE
DONE_968            7102
DONE_969            7122
DONE_970            7142
DONE_971            7164
DONE_978            724E
DONE_979            726E
DONE_980            728E
DONE_981            72B0
DONE_983            72E0
DONE_984            7300
DONE_985            7320
DONE_986            7342
DONE_988            7376
DONE_989            7396
DONE_990            73B6
DONE_991            73D8
DONE_996            7452
DONE_997            7472
DONE_998            7492
DONE_999            74B4
EBIT_853            6524
EBIT_872            674E
EBIT_891            6978
EBIT_976            7224
ENDSIM              120E
GOLOOP              1150
IDENTIFYOPCODE      1212
LOGREG              1304
LOOP_154            1FDA
LOOP_155            201E
LOOP_22             132A
LOOP_23             1372
LOOP_291            2D5A
LOOP_427            3A96
LOOP_494            40EA
LOOP_561            473E
LOOP_628            4D9C
LOOP_764            5AD8
LOOP_830            6156
LOOP_835            6230
LOOP_840            630A
LOOP_845            63E4
LOOP_850            64BE
LOOP_869            66E8
LOOP_888            6912
LOOP_907            6B3C
LOOP_972            7176
LOOP_973            71BE
LSL_M               6190
LSL_R               626A
LSR_M               619E
LSR_R               6278
MAIN                1000
NEWLINE             482C
NEXT_154            1FFE
NEXT_155            2042
NEXT_156            2142
NEXT_22             134E
NEXT_23             1396
NEXT_291            2D7E
NEXT_292            2E7E
NEXT_427            3ABA
NEXT_494            410E
NEXT_561            4762
NEXT_628            4DC0
NEXT_629            4EC0
NEXT_764            5AFC
NEXT_830            617A
NEXT_835            6254
NEXT_840            632E
NEXT_845            6408
NEXT_850            64E2
NEXT_869            670C
NEXT_888            6936
NEXT_907            6B60
NEXT_972            719A
NEXT_973            71E2
OADD                6F
OADDI               73
OAN                 CE
OAND                90
OASL                A0
OASR                A4
OBEQ                A8
OBGE                AC
OBLANK              DD
OBLT                B0
OBRA                BC
OBSIZE              C0
OCOMMA              D4
ODIVU               84
ODN                 CC
OHASH               DB
OJSR                B4
OLB                 D0
OLEA                8C
OLSIZE              C8
OLSL                98
OLSR                9C
OMOVE               64
OMOVEM              69
OMULS               7C
ONOP                60
ONOT                94
OPREDEC             D7
OPSTINC             D9
ORB                 D2
ORTS                B8
OSLASH              E3
OSUB                78
OTAB                DF
OUTPUTDATA          77A2
OWELCOME            E5
OWSIZE              C4
PADD                131
PAND                186
PASX_M              1DB
PASX_R              1EC
PASX_S              1FD
PBEQ                20E
PBGE                21F
PBLT                230
PBRA                263
PDIVU               164
PJSR                241
PLEA                175
PLSX_M              1A8
PLSX_R              1B9
PLSX_S              1CA
PMOVE               10F
PMOVEM              120
PMULS               153
PNOP                FE
PNOT                197
PREPAREADRMODE      2A46
PRINTADR            3E38
PRINTANDEST         3C01
PRINTANSRC          3D0F
PRINTCOMMA          440A
PRINTCOUNT          389C
PRINTDNDEST         39B1
PRINTDNSRC          3AC4
PRINTHASH           46B8
PRINTLB             453E
PRINTMOVEMBITS      F4
PRINTOPMODE         23EB
PRINTPD             44D7
PRINTPI             4470
PRINTRB             45A1
PRINTSIGN           4604
PRINTSIZE           1872
PRINTSIZELOW        1BE3
PRTS                252
PSUB                142
READINPUT           4CB
REG_M               61A8
REG_R               6282
REND                31
RSTART              0
SBIT_853            65B8
SBIT_872            67E2
SBIT_891            6A0C
SBIT_976            72B8
SLASH               488D
SPACE               476C
SPLIT0              1220
SPLIT000            122C
SPLIT01             1240
SPLIT0100           124C
SPLIT0100111        1268
SPLIT0110           127C
SPLIT01100          1288
SPLIT01101          129C
SPLIT1              12A8
SPLIT10             12B4
SPLIT11             12C0
SPLIT110            12CC
SPLIT111            12F0
SRCDNB_156          211C
SRCDNB_292          2E58
SRCDNB_629          4E9A
SRCDNL_156          20C0
SRCDNL_292          2DFC
SRCDNL_629          4E3E
SRCDNW_156          20EA
SRCDNW_292          2E26
SRCDNW_629          4E68
TAB                 47CD
TBIT_853            664A
TBIT_872            6874
TBIT_891            6A9E
TBIT_976            734A
VERIFYOPCODE        13FF
