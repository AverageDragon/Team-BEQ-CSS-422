00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/2/2021 11:59:29 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 53 55 42 00              102  oSUB:   DC.B    'SUB',0
00000077= 4D 55 4C 53 00           103  oMULS:  DC.B    'MULS',0
0000007C= 44 49 56 55 00           104  oDIVU:  DC.B    'DIVU',0
00000081= 4C 45 41 00              105  oLEA:   DC.B    'LEA',0
00000085= 41 4E 44 00              106  oAND:   DC.B    'AND',0
00000089= 4E 4F 54 00              107  oNOT:   DC.B    'NOT',0
0000008D= 4C 53 4C 00              108  oLSL:   DC.B    'LSL',0
00000091= 4C 53 52 00              109  oLSR:   DC.B    'LSR',0
00000095= 41 53 4C 00              110  oASL:   DC.B    'ASL',0
00000099= 41 53 52 00              111  oASR:   DC.B    'ASR',0
0000009D= 42 45 51 00              112  oBEQ:   DC.B    'BEQ',0
000000A1= 42 47 45 00              113  oBGE:   DC.B    'BGE',0
000000A5= 42 4C 54 00              114  oBLT:   DC.B    'BLT',0
000000A9= 4A 53 52 00              115  oJSR:   DC.B    'JSR',0
000000AD= 52 54 53 00              116  oRTS:   DC.B    'RTS',0
000000B1= 42 52 41 00              117  oBRA:   DC.B    'BRA',0
000000B5= 2E 42 20 00              118  oBSize  DC.B    '.B ',0
000000B9= 2E 57 20 00              119  oWSize  DC.B    '.W ',0
000000BD= 2E 4C 20 00              120  oLSize  DC.B    '.L ',0
000000C1= 44 00                    121  oDn     DC.B    'D',0
000000C3= 41 00                    122  oAn     DC.B    'A',0
000000C5= 28 00                    123  oLB     DC.B    '(',0
000000C7= 29 00                    124  oRB     DC.B    ')',0
000000C9= 2C 20 00                 125  oComma  DC.B    ', ',0
000000CC= 2D 00                    126  oPreDec DC.B    '-',0
000000CE= 2B 00                    127  oPstInc DC.B    '+',0
000000D0= 23 00                    128  oHash   DC.B    '#',0
000000D2= 20 00                    129  oBlank  DC.B    ' ',0
000000D4                           130  ; ------------------------------------------------------------
000000D4                           131  ; "Pattern" Variables
000000D4                           132  ; Jonathan
000000D4                           133  ; 
000000D4                           134  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000D4                           135  ; and the opcode isn't actually data
000000D4                           136  ; ------------------------------------------------------------
000000D4= 30 31 30 30 31 31 ...    137  pNOP:   DC.B    '0100111001110001',0
000000E5= 30 30 2E 2E 2E 2E ...    138  pMOVE:  DC.B    '00..............',0
000000F6= 30 31 30 30 31 2E ...    139  pMOVEM: DC.B    '01001.001.......',0
00000107= 31 31 30 31 2E 2E ...    140  pADD:   DC.B    '1101............',0
00000118= 31 30 30 31 2E 2E ...    141  pSUB:   DC.B    '1001............',0
00000129= 31 31 30 30 2E 2E ...    142  pMULS:  DC.B    '1100...111......',0
0000013A= 31 30 30 30 2E 2E ...    143  pDIVU:  DC.B    '1000...011......',0
0000014B= 30 31 30 30 2E 2E ...    144  pLEA:   DC.B    '0100...111......',0
0000015C= 31 31 30 30 2E 2E ...    145  pAND:   DC.B    '1100............',0
0000016D= 30 31 30 30 30 31 ...    146  pNOT:   DC.B    '01000110........',0
0000017E= 31 31 31 30 2E 2E ...    147  pLSx_M: DC.B    '1110......001...',0
0000018F= 31 31 31 30 2E 2E ...    148  pLSx_R: DC.B    '1110......101...',0
000001A0= 31 31 31 30 2E 2E ...    149  pLSx_S: DC.B    '1110......100...',0
000001B1= 31 31 31 30 2E 2E ...    150  pASx_M: DC.B    '1110......000...',0
000001C2= 31 31 31 30 2E 2E ...    151  pASx_R: DC.B    '1110......100...',0
000001D3= 31 31 31 30 2E 2E ...    152  pASx_S: DC.B    '1110......100...',0
000001E4= 30 31 31 30 30 31 ...    153  pBEQ:   DC.B    '01100111........',0
000001F5= 30 31 31 30 31 31 ...    154  pBGE:   DC.B    '01101100........',0
00000206= 30 31 31 30 31 31 ...    155  pBLT:   DC.B    '01101101........',0
00000217= 30 31 30 30 31 31 ...    156  pJSR:   DC.B    '0100111010......',0
00000228= 30 31 30 30 31 31 ...    157  pRTS:   DC.B    '0100111001110101',0
00000239= 30 31 31 30 30 30 ...    158  pBRA:   DC.B    '01100000........',0
0000024A                           159  
0000024A                           160  
0000024A                           161  ; ========================================================================
0000024A                           162  ; Macros
0000024A                           163  ; ========================================================================
0000024A                           164  ; ------------------------------------------------------------
0000024A                           165  ; "convertHtoA" Helper
0000024A                           166  ; Jonathan
0000024A                           167  ;
0000024A                           168  ; 1st argument is a data register containing a single digit of a hex number.
0000024A                           169  ;
0000024A                           170  ; Converts the argument from a hex digit to an ascii character
0000024A                           171  ; ------------------------------------------------------------
0000024A                           172  convertHtoA:    MACRO
0000024A                           173          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
0000024A                           174          BGT     alpha\@
0000024A                           175          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
0000024A                           176          BRA     done\@
0000024A                           177  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
0000024A                           178  done\@: NOP
0000024A                           179          ENDM
0000024A                           180  ; ------------------------------------------------------------
0000024A                           181  ; adrOut
0000024A                           182  ; Gary
0000024A                           183  ;
0000024A                           184  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000024A                           185  ; ------------------------------------------------------------
0000024A                           186  adrOut:         MACRO
0000024A                           187          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           188          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           189          LSR.W   #4, D1      
0000024A                           190          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           191          TRAP    #15         ; Execute output
0000024A                           192          
0000024A                           193          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           194          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000024A                           195          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           196          LSR.W   #4, D1      
0000024A                           197          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           198          TRAP    #15         ; Execute output
0000024A                           199          
0000024A                           200          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           201          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           202          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           203          LSR.W   #4, D1      
0000024A                           204          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           205          TRAP    #15         ; Execute output
0000024A                           206          
0000024A                           207          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           208          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           209          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000024A                           210          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           211          LSR.W   #4, D1      
0000024A                           212          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           213          TRAP    #15         ; Execute output       
0000024A                           214          ENDM 
0000024A                           215  ; ------------------------------------------------------------
0000024A                           216  ; "verifyOpcode" Helper
0000024A                           217  ; Jonathan
0000024A                           218  ;
0000024A                           219  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
0000024A                           220  ; 2nd argument is a data register to check against the template
0000024A                           221  ;
0000024A                           222  ; Verifies that the opcode passed through \2 matches the pattern of \1
0000024A                           223  ; If they do not match, branches to outputData
0000024A                           224  ; ------------------------------------------------------------
0000024A                           225  verifyOpcode:  MACRO
0000024A                           226          LEA     \1, A1      ; Input pattern string
0000024A                           227          MOVE.W  \2, D3      ; input value
0000024A                           228          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
0000024A                           229          
0000024A                           230  loop\@: 
0000024A                           231          CMP.B   #$30, (A1)  ; Check if the template wants a 0
0000024A                           232          BEQ     checkFor0\@
0000024A                           233          CMP.B   #$31, (A1)  ; Check if the template wants a 1
0000024A                           234          BEQ     checkFor1\@
0000024A                           235          BRA     next\@      ; Template has a wildcard, go to next iteration
0000024A                           236          
0000024A                           237  checkFor0\@: 
0000024A                           238          BTST    D1, D3      ; Check if contains 0
0000024A                           239          BNE     outputData  ; Missing a 0 -> Not a valid opcode
0000024A                           240          BRA     next\@
0000024A                           241  
0000024A                           242  checkFor1\@:
0000024A                           243          BTST    D1, D3      ; Check if contains 1
0000024A                           244          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
0000024A                           245  
0000024A                           246  next\@: 
0000024A                           247          CMP.B   #0, D1      ; Compare bit counter to 0
0000024A                           248          BEQ     complete\@  ; Branch to complete if bit counter reached 0
0000024A                           249          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           250          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
0000024A                           251          BRA     loop\@      ; Begin loop again
0000024A                           252  
0000024A                           253  complete\@:  ; Opcode has been verified
0000024A                           254          ENDM
0000024A                           255          
0000024A                           256  ; ------------------------------------------------------------
0000024A                           257  ; "printSize" Helper
0000024A                           258  ; Gary
0000024A                           259  ;
0000024A                           260  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           261  ;
0000024A                           262  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
0000024A                           263  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
0000024A                           264  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
0000024A                           265  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
0000024A                           266  ; ------------------------------------------------------------
0000024A                           267  printSize:  MACRO
0000024A                           268          MOVE.W  \1, D3      ; input value
0000024A                           269          CLR     D7      
0000024A                           270  checkForB\@: 
0000024A                           271          BTST    #13, D3      ; Check if contains 0
0000024A                           272          BNE     checkForW\@  ; If not go to word size
0000024A                           273          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
0000024A                           274          MOVE.B  #14,D0          
0000024A                           275          TRAP    #15
0000024A                           276          BRA     complete\@      
0000024A                           277  checkForW\@: 
0000024A                           278          BTST    #12, D3      ; Check if contains 1
0000024A                           279          BEQ     checkForL\@  ; If not, size cannot be word
0000024A                           280          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
0000024A                           281          MOVE.B  #14,D0          
0000024A                           282          TRAP    #15
0000024A                           283          BRA     complete\@  
0000024A                           284  checkForL\@:
0000024A                           285          MOVE.B  #$1, D7
0000024A                           286          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
0000024A                           287          MOVE.B  #14,D0          
0000024A                           288          TRAP    #15
0000024A                           289  complete\@:  ; Size has been printed
0000024A                           290          ENDM
0000024A                           291          
0000024A                           292          ; ------------------------------------------------------------
0000024A                           293  ; "printSizeLow" Helper
0000024A                           294  ; Gary
0000024A                           295  ;
0000024A                           296  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           297  ;
0000024A                           298  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
0000024A                           299  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
0000024A                           300  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
0000024A                           301  ; Once matched, size is printed and appended to already printed opcode, macro exits.
0000024A                           302  ; ------------------------------------------------------------
0000024A                           303  printSizeLow:  MACRO
0000024A                           304          MOVE.W  \1, D3      ; input value      
0000024A                           305  checkForB\@: 
0000024A                           306          BTST    #6,  D3      ; Check if contains 0
0000024A                           307          BNE     checkForW\@  ; If not go to word size
0000024A                           308          LEA     oBSize, A1     
0000024A                           309          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           310          TRAP    #15
0000024A                           311          BRA     complete\@      
0000024A                           312  checkForW\@: 
0000024A                           313          BTST    #7, D3      ; Check if contains 0
0000024A                           314          BNE     checkForL\@ ; If not go to longword size
0000024A                           315          LEA     oWSize, A1     
0000024A                           316          MOVE.B  #14,D0       ; Print and end macro       
0000024A                           317          TRAP    #15
0000024A                           318          BRA     complete\@  
0000024A                           319  checkForL\@:
0000024A                           320          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
0000024A                           321          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           322          TRAP    #15
0000024A                           323  complete\@:  ; Size has been printed
0000024A                           324          ENDM
0000024A                           325          
0000024A                           326          
0000024A                           327  ; ------------------------------------------------------------
0000024A                           328  ; "printOpMode" Helper
0000024A                           329  ; Gary
0000024A                           330  ;
0000024A                           331  ; 1st argument holds opcode whose opmode is being decoded
0000024A                           332  ;
0000024A                           333  ; With the opcode in D3, D1 is designated as the bit tracker. Split
0000024A                           334  ; into two sorting mechanisms: first, the macro determines whether
0000024A                           335  ; the register is a source or a destination. Then, the macro determines
0000024A                           336  ; the size and appends it to printed opcode in a similar manner to printSize.
0000024A                           337  ; ------------------------------------------------------------
0000024A                           338  printOpMode:  MACRO
0000024A                           339          MOVE.W  \1, D3      
0000024A                           340          MOVE.B  #8, D1    
0000024A                           341          CLR     D6
0000024A                           342  checkForDestDn\@: 
0000024A                           343          BTST    D1, D3      
0000024A                           344          BNE     checkForSrcDn\@
0000024A                           345          JSR     next\@
0000024A                           346          MOVE.B  #$1, D6
0000024A                           347          BTST    D1, D3      
0000024A                           348          BEQ     DestDnW\@
0000024A                           349  DestDnL\@:        
0000024A                           350          LEA     oLSize, A1     
0000024A                           351          MOVE.B  #14,D0          
0000024A                           352          TRAP    #15
0000024A                           353          BRA     complete\@ 
0000024A                           354  DestDnW\@: 
0000024A                           355          JSR     next\@
0000024A                           356          BTST    D1, D3      
0000024A                           357          BEQ     DestDnB\@
0000024A                           358          LEA     oWSize, A1     
0000024A                           359          MOVE.B  #14,D0          
0000024A                           360          TRAP    #15
0000024A                           361          BRA     complete\@ 
0000024A                           362  DestDnB\@: 
0000024A                           363          LEA     oBSize, A1     
0000024A                           364          MOVE.B  #14,D0          
0000024A                           365          TRAP    #15
0000024A                           366          BRA     complete\@ 
0000024A                           367  checkForSrcDn\@: 
0000024A                           368          JSR     next\@
0000024A                           369          BTST    D1, D3      
0000024A                           370          BEQ     SrcDnW\@
0000024A                           371  SrcDnL\@:        
0000024A                           372          LEA     oLSize, A1     
0000024A                           373          MOVE.B  #14,D0          
0000024A                           374          TRAP    #15
0000024A                           375          printDnDest D3
0000024A                           376          BRA     complete\@ 
0000024A                           377  SrcDnW\@:
0000024A                           378          JSR     next\@
0000024A                           379          BTST    D1, D3     
0000024A                           380          BEQ     SrcDnB\@
0000024A                           381          LEA     oWSize, A1     
0000024A                           382          MOVE.B  #14,D0          
0000024A                           383          TRAP    #15
0000024A                           384          printDnDest D3
0000024A                           385          BRA     complete\@ 
0000024A                           386  SrcDnB\@: 
0000024A                           387          LEA     oBSize, A1     
0000024A                           388          MOVE.B  #14,D0          
0000024A                           389          TRAP    #15
0000024A                           390          printDnDest D3
0000024A                           391          BRA     complete\@ 
0000024A                           392  
0000024A                           393  next\@:
0000024A                           394          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           395          RTS                
0000024A                           396  
0000024A                           397  complete\@:  ; Opcode has been verified
0000024A                           398          ENDM
0000024A                           399  ; ------------------------------------------------------------
0000024A                           400  ; "prepareAdrMode" Helper
0000024A                           401  ; Gary
0000024A                           402  ; 
0000024A                           403  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
0000024A                           404  ; ------------------------------------------------------------
0000024A                           405  prepareAdrMode: MACRO
0000024A                           406          MOVE.W  \1, D6      ; input value
0000024A                           407          MOVE.W  \2, D1
0000024A                           408          CMP.B   #$01, D6
0000024A                           409          BEQ     AdrSource\@    
0000024A                           410  AdrDest\@:
0000024A                           411          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
0000024A                           412          LSR     #$08, D1
0000024A                           413          LSR     #$05, D1
0000024A                           414          BRA     complete\@ 
0000024A                           415  AdrSource\@:                
0000024A                           416          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
0000024A                           417          LSL     #$02, D1
0000024A                           418          LSR     #$08, D1
0000024A                           419          LSR     #$05, D1
0000024A                           420  complete\@:  ; Opcode has been verified
0000024A                           421          ENDM        
0000024A                           422          
0000024A                           423  ; ------------------------------------------------------------
0000024A                           424  ; "decodeAdrMode" Helper
0000024A                           425  ; Gary
0000024A                           426  ; 
0000024A                           427  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           428  ; bits. 
0000024A                           429  ; ------------------------------------------------------------
0000024A                           430  decodeAdrMode:  MACRO
0000024A                           431          MOVE.W  \1, D3      ; holds full opcode
0000024A                           432          MOVE.W  \2, D1      ; holds just opmode
0000024A                           433  
0000024A                           434          CMP.B   #$01, D1
0000024A                           435          BEQ     AdrRegDirect\@    
0000024A                           436          CMP.B   #$02, D1
0000024A                           437          BEQ     AdrRegInDirect\@  
0000024A                           438          CMP.B   #$03, D1
0000024A                           439          BEQ     AdrRegPostInc\@  
0000024A                           440          CMP.B   #$04, D1
0000024A                           441          BEQ     AdrRegPreDec\@
0000024A                           442          CMP.B   #$07, D1
0000024A                           443          BEQ     AdrAbsolute\@    
0000024A                           444          
0000024A                           445  dataRegDirect\@: 
0000024A                           446          CMP.B   #$01, D6
0000024A                           447          BEQ     dataRegDirectSrc\@   
0000024A                           448  dataRegDirectDest\@: 
0000024A                           449          printDnDest D3 
0000024A                           450          BRA     complete\@ 
0000024A                           451  dataRegDirectSrc\@: 
0000024A                           452          printDnSrc D3 
0000024A                           453          BRA     complete\@   
0000024A                           454          
0000024A                           455  AdrRegDirect\@: 
0000024A                           456          CMP.B   #$01, D6
0000024A                           457          BEQ     AdrRegDirectSrc\@   
0000024A                           458  AdrRegDirectDest\@:
0000024A                           459          printAnDest D3
0000024A                           460          BRA     complete\@   
0000024A                           461  AdrRegDirectSrc\@:
0000024A                           462          printAnSrc D3
0000024A                           463          BRA     complete\@   
0000024A                           464         
0000024A                           465  AdrRegInDirect\@:   
0000024A                           466          CMP.B   #$01, D6
0000024A                           467          BEQ     AdrRegInDirectSrc\@   
0000024A                           468  AdrRegInDirectDest\@:
0000024A                           469          printLB
0000024A                           470          printAnDest D3  
0000024A                           471          printRB
0000024A                           472          BRA     complete\@     
0000024A                           473  AdrRegInDirectSrc\@:   
0000024A                           474          printLB
0000024A                           475          printAnSrc D3  
0000024A                           476          printRB
0000024A                           477          BRA     complete\@   
0000024A                           478          
0000024A                           479  AdrRegPostInc\@:   
0000024A                           480          CMP.B   #$01, D6
0000024A                           481          BEQ     AdrRegPostIncSrc\@   
0000024A                           482  AdrRegPostIncDest\@: 
0000024A                           483          printLB
0000024A                           484          printAnDest D3  
0000024A                           485          printRB
0000024A                           486          printPI
0000024A                           487          BRA     complete\@  
0000024A                           488  AdrRegPostIncSrc\@:           
0000024A                           489          printLB
0000024A                           490          printAnSrc D3  
0000024A                           491          printRB
0000024A                           492          printPI
0000024A                           493          BRA     complete\@  
0000024A                           494          
0000024A                           495  AdrRegPreDec\@: 
0000024A                           496          CMP.B   #$01, D6
0000024A                           497          BEQ     AdrRegPreDecSrc\@   
0000024A                           498  AdrRegPreDecDest\@:
0000024A                           499          printPD  
0000024A                           500          printLB
0000024A                           501          printAnDest D3  
0000024A                           502          printRB
0000024A                           503          BRA     complete\@   
0000024A                           504  AdrRegPreDecSrc\@: 
0000024A                           505          printPD  
0000024A                           506          printLB
0000024A                           507          printAnSrc D3  
0000024A                           508          printRB
0000024A                           509          BRA     complete\@
0000024A                           510         
0000024A                           511  AdrAbsolute\@:
0000024A                           512          CMP.B   #$01, D6
0000024A                           513          BNE     AdrAbsoluteDst\@ 
0000024A                           514          
0000024A                           515          MOVE.W  D3, D5
0000024A                           516          BTST    #2, D3
0000024A                           517          BNE     AdrImmediate\@
0000024A                           518          BTST    #0, D3
0000024A                           519          BNE     AdrAbsoluteL\@
0000024A                           520          BRA     AdrAbsoluteW\@
0000024A                           521  AdrAbsoluteDst\@:
0000024A                           522          MOVE.W  D3, D5
0000024A                           523          BTST    #$B, D3
0000024A                           524          BNE     AdrImmediate\@
0000024A                           525          BTST    #$09, D3
0000024A                           526          BNE     AdrAbsoluteL\@
0000024A                           527          BRA     AdrAbsoluteW\@
0000024A                           528  AdrImmediate\@:
0000024A                           529          CMP.B   #1, D7
0000024A                           530          BEQ     AdrImmediateL\@
0000024A                           531  AdrImmediateW\@:
0000024A                           532          MOVE.W  (A2)+, D3
0000024A                           533          printHash
0000024A                           534          printSign
0000024A                           535          adrOut
0000024A                           536          MOVE.W  D5, D3
0000024A                           537          BRA     complete\@
0000024A                           538  AdrImmediateL\@:
0000024A                           539          MOVE.W  (A2)+, D3
0000024A                           540          printHash
0000024A                           541          printSign
0000024A                           542          adrOut 
0000024A                           543          MOVE.W  (A2)+, D3
0000024A                           544          adrOut
0000024A                           545          MOVE.W  D5, D3
0000024A                           546          BRA     complete\@ 
0000024A                           547  AdrAbsoluteW\@:     
0000024A                           548          MOVE.W  (A2)+, D3
0000024A                           549          printSign
0000024A                           550          printSign
0000024A                           551          adrOut
0000024A                           552          MOVE.W  D5, D3
0000024A                           553          BRA     complete\@  
0000024A                           554  AdrAbsoluteL\@:  
0000024A                           555          MOVE.W  (A2)+, D3
0000024A                           556          printSign
0000024A                           557          adrOut 
0000024A                           558          MOVE.W  (A2)+, D3
0000024A                           559          adrOut
0000024A                           560          MOVE.W  D5, D3
0000024A                           561  
0000024A                           562  complete\@:  ; Opcode has been verified
0000024A                           563          ENDM
0000024A                           564  
0000024A                           565  printCount:     MACRO
0000024A                           566          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           567          LSL     #$04, D1
0000024A                           568          LSR     #$08, D1
0000024A                           569          LSR     #$05, D1
0000024A                           570          LEA     oHash, A1     
0000024A                           571          MOVE.B  #14,D0          
0000024A                           572          TRAP    #15
0000024A                           573          MOVE.B  #3,D0          
0000024A                           574          TRAP    #15
0000024A                           575          ENDM
0000024A                           576  
0000024A                           577  printDnDest:    MACRO 
0000024A                           578          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           579          LSL     #$04, D1
0000024A                           580          LSR     #$08, D1
0000024A                           581          LSR     #$05, D1
0000024A                           582          LEA     oDn, A1     
0000024A                           583          MOVE.B  #14,D0          
0000024A                           584          TRAP    #15
0000024A                           585          MOVE.B  #3,D0          
0000024A                           586          TRAP    #15
0000024A                           587          ENDM
0000024A                           588  printDnSrc:    MACRO   
0000024A                           589          CLR.L   D1
0000024A                           590          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           591          LSL     #$08, D1
0000024A                           592          LSL     #$05, D1
0000024A                           593          LSR     #$08, D1
0000024A                           594          LSR     #$05, D1
0000024A                           595          LEA     oDn, A1     
0000024A                           596          MOVE.B  #14,D0          
0000024A                           597          TRAP    #15
0000024A                           598          MOVE.B  #3,D0          
0000024A                           599          TRAP    #15
0000024A                           600          ENDM
0000024A                           601  printAnDest:    MACRO
0000024A                           602          MOVE.W  \1, D1
0000024A                           603          LSL     #$04, D1
0000024A                           604          LSR     #$08, D1
0000024A                           605          LSR     #$05, D1
0000024A                           606          LEA     oAn, A1     
0000024A                           607          MOVE.B  #14,D0          
0000024A                           608          TRAP    #15
0000024A                           609          MOVE.B  #3,D0          
0000024A                           610          TRAP    #15
0000024A                           611          ENDM
0000024A                           612  printAnSrc:    MACRO   
0000024A                           613          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           614          LSL     #$08, D1
0000024A                           615          LSL     #$05, D1
0000024A                           616          LSR     #$08, D1
0000024A                           617          LSR     #$05, D1
0000024A                           618          LEA     oAn, A1     
0000024A                           619          MOVE.B  #14,D0          
0000024A                           620          TRAP    #15
0000024A                           621          MOVE.B  #3,D0          
0000024A                           622          TRAP    #15
0000024A                           623          ENDM
0000024A                           624  printComma:    MACRO
0000024A                           625          LEA     oComma, A1     
0000024A                           626          MOVE.B  #14,D0          
0000024A                           627          TRAP    #15
0000024A                           628          ENDM
0000024A                           629  printPI:    MACRO
0000024A                           630          LEA     oPstInc, A1     
0000024A                           631          MOVE.B  #14,D0          
0000024A                           632          TRAP    #15
0000024A                           633          ENDM
0000024A                           634  printPD:    MACRO
0000024A                           635          LEA     oPreDec, A1     
0000024A                           636          MOVE.B  #14,D0          
0000024A                           637          TRAP    #15
0000024A                           638          ENDM
0000024A                           639  
0000024A                           640  printLB:    MACRO
0000024A                           641          LEA     oLB, A1     
0000024A                           642          MOVE.B  #14,D0          
0000024A                           643          TRAP    #15
0000024A                           644          ENDM
0000024A                           645  printRB:    MACRO
0000024A                           646          LEA     oRB, A1     
0000024A                           647          MOVE.B  #14,D0          
0000024A                           648          TRAP    #15
0000024A                           649          ENDM
0000024A                           650  printSign:  MACRO
0000024A                           651          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           652          MOVE.W  #36, D1     ; An = sign
0000024A                           653          TRAP    #15         ; Output = sign
0000024A                           654          ENDM
0000024A                           655  printHash:  MACRO
0000024A                           656          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           657          MOVE.W  #35, D1     ; An = sign
0000024A                           658          TRAP    #15         ; Output = sign
0000024A                           659          ENDM
0000024A                           660          
0000024A                           661  space:      MACRO
0000024A                           662          LEA     oBlank, A1
0000024A                           663          MOVE.B  #14,D0          
0000024A                           664          TRAP    #15
0000024A                           665          ENDM
0000024A                           666  newLine:    MACRO
0000024A                           667          LEA     oBlank, A1
0000024A                           668          MOVE.B  #13,D0          
0000024A                           669          TRAP    #15
0000024A                           670          ENDM
0000024A                           671  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000024A                           672  ; "main" routine
0000024A                           673  ; Dylan, Gary
0000024A                           674  ; 
0000024A                           675  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
0000024A                           676  ; ========================================================================
00001000                           677          ORG     $1000
00001000                           678          OPT     MEX
00001000                           679          
00001000  43F8 0000                680  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                681          MOVE.B  #13, D0
00001008  4E4F                     682          TRAP    #15
0000100A                           683m         readInput   D2      ; Read 4 digit hex input
0000100A                           684m         ; READ USER's input
0000100A  103C 0005                685m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     686m         TRAP    #15
00001010                           687mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                688mm         CMPI.B  #$39, D1
00001014  6E00 000A                689mm         BGT     ALPHA_2
00001018  0401 0030                690mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                691mm         BRA     DONE_2
00001020  0401 0037                692mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     693mm DONE_2: NOP
00001026                           694mm         ENDM
00001026  E149                     695m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     696m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     697m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           698m         
0000102C  323C 0000                699m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     700m         TRAP    #15         ; READ SECOND DIGIT
00001032                           701mm         CONVERTATOH D1
00001032  0C01 0039                702mm         CMPI.B  #$39, D1
00001036  6E00 000A                703mm         BGT     ALPHA_3
0000103A  0401 0030                704mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                705mm         BRA     DONE_3
00001042  0401 0037                706mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     707mm DONE_3: NOP
00001048                           708mm         ENDM
00001048  E149                     709m         LSL.W   #8, D1      
0000104A  D441                     710m         ADD.W   D1, D2
0000104C                           711m         
0000104C  323C 0000                712m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     713m         TRAP    #15         ; READ THIRD DIGIT
00001052                           714mm         CONVERTATOH D1
00001052  0C01 0039                715mm         CMPI.B  #$39, D1
00001056  6E00 000A                716mm         BGT     ALPHA_4
0000105A  0401 0030                717mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                718mm         BRA     DONE_4
00001062  0401 0037                719mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     720mm DONE_4: NOP
00001068                           721mm         ENDM
00001068  E949                     722m         LSL.W   #4, D1      
0000106A  D441                     723m         ADD.W   D1, D2
0000106C                           724m         
0000106C  323C 0000                725m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     726m         TRAP    #15         ; READ FINAL DIGIT
00001072                           727mm         CONVERTATOH D1     
00001072  0C01 0039                728mm         CMPI.B  #$39, D1
00001076  6E00 000A                729mm         BGT     ALPHA_5
0000107A  0401 0030                730mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                731mm         BRA     DONE_5
00001082  0401 0037                732mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     733mm DONE_5: NOP
00001088                           734mm         ENDM
00001088  D441                     735m         ADD.W   D1, D2
0000108A  3402                     736m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           737m         ENDM
0000108C  3442                     738          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           739m         newline
0000108E  43F8 00D2                740m         LEA     OBLANK, A1
00001092  103C 000D                741m         MOVE.B  #13,D0          
00001096  4E4F                     742m         TRAP    #15
00001098                           743m         ENDM
00001098                           744          
00001098  43F8 0031                745          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                746          MOVE.B  #13, D0
000010A0  4E4F                     747          TRAP    #15
000010A2                           748m         readInput   D2      ; Read 4 digit hex input
000010A2                           749m         ; READ USER's input
000010A2  103C 0005                750m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     751m         TRAP    #15
000010A8                           752mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                753mm         CMPI.B  #$39, D1
000010AC  6E00 000A                754mm         BGT     ALPHA_8
000010B0  0401 0030                755mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                756mm         BRA     DONE_8
000010B8  0401 0037                757mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     758mm DONE_8: NOP
000010BE                           759mm         ENDM
000010BE  E149                     760m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     761m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     762m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           763m         
000010C4  323C 0000                764m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     765m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           766mm         CONVERTATOH D1
000010CA  0C01 0039                767mm         CMPI.B  #$39, D1
000010CE  6E00 000A                768mm         BGT     ALPHA_9
000010D2  0401 0030                769mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                770mm         BRA     DONE_9
000010DA  0401 0037                771mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     772mm DONE_9: NOP
000010E0                           773mm         ENDM
000010E0  E149                     774m         LSL.W   #8, D1      
000010E2  D441                     775m         ADD.W   D1, D2
000010E4                           776m         
000010E4  323C 0000                777m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     778m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           779mm         CONVERTATOH D1
000010EA  0C01 0039                780mm         CMPI.B  #$39, D1
000010EE  6E00 000A                781mm         BGT     ALPHA_10
000010F2  0401 0030                782mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                783mm         BRA     DONE_10
000010FA  0401 0037                784mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     785mm DONE_10: NOP
00001100                           786mm         ENDM
00001100  E949                     787m         LSL.W   #4, D1      
00001102  D441                     788m         ADD.W   D1, D2
00001104                           789m         
00001104  323C 0000                790m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     791m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           792mm         CONVERTATOH D1     
0000110A  0C01 0039                793mm         CMPI.B  #$39, D1
0000110E  6E00 000A                794mm         BGT     ALPHA_11
00001112  0401 0030                795mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                796mm         BRA     DONE_11
0000111A  0401 0037                797mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     798mm DONE_11: NOP
00001120                           799mm         ENDM
00001120  D441                     800m         ADD.W   D1, D2
00001122  3402                     801m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           802m         ENDM
00001124  31C2 0500                803          MOVE.W  D2, ($500)  ; Store at mem location $500
00001128                           804m         newline
00001128  43F8 00D2                805m         LEA     OBLANK, A1
0000112C  103C 000D                806m         MOVE.B  #13,D0          
00001130  4E4F                     807m         TRAP    #15
00001132                           808m         ENDM
00001132                           809m         newline
00001132  43F8 00D2                810m         LEA     OBLANK, A1
00001136  103C 000D                811m         MOVE.B  #13,D0          
0000113A  4E4F                     812m         TRAP    #15
0000113C                           813m         ENDM
0000113C                           814          
0000113C  7200                     815  goLoop: MOVE.L  #0, D1
0000113E  3238 0500                816          MOVE.W  ($500), D1
00001142  240A                     817          MOVE.L  A2, D2
00001144  B282                     818          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 0016                819          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A  4EB9 00001162            820          JSR     identifyOpcode  ; Decode what is at A2
00001150  381A                     821          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
00001152                           822m         newline
00001152  43F8 00D2                823m         LEA     OBLANK, A1
00001156  103C 000D                824m         MOVE.B  #13,D0          
0000115A  4E4F                     825m         TRAP    #15
0000115C                           826m         ENDM
0000115C  60DE                     827          BRA     goLoop
0000115E                           828          
0000115E                           829          
0000115E                           830          
0000115E  FFFF FFFF                831  endSim: SIMHALT             ; halt simulator
00001162                           832          
00001162                           833          
00001162                           834  ; ========================================================================
00001162                           835  ; "identifyOpcode" subroutine
00001162                           836  ; Jonathan
00001162                           837  ; 
00001162                           838  ; Reads the Word at A2 and determines which opcode it represents.
00001162                           839  ; When the opcode is identified, the appropriate "decodeX" subroutine
00001162                           840  ; is invoked.
00001162                           841  ;
00001162                           842  ; Uses a generated Trie structure to determine where to split on which bits
00001162                           843  ; in order to efficiently identify the exact opcode
00001162                           844  ; ========================================================================
00001162                           845  identifyOpcode:
00001162  3612                     846          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001164  0803 000F                847          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001168  6700 0006                848          BEQ     split0      ; Split based on the first bit
0000116C  6000 0082                849          BRA     split1
00001170                           850  
00001170                           851  split0: 
00001170  0803 000E                852          BTST    #$E, D3     ; Check the 2nd bit
00001174  6700 0006                853          BEQ     split000    ; MOVE follows 00+        
00001178  6000 0016                854          BRA     split01
0000117C                           855          
0000117C                           856  split000:        
0000117C  0803 000D                857          BTST    #$D, D3     ; Check the 3rd bit
00001180  6600 0126                858          BNE     decodeMOVE
00001184  0803 000C                859          BTST    #$C, D3     ; Check the 3rd bit
00001188  6600 011E                860          BNE     decodeMOVE
0000118C  6000 59C2                861          BRA     outputData
00001190                           862  split01:
00001190  0803 000D                863          BTST    #$D, D3     ; Check the 3rd bit
00001194  6700 0006                864          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001198  6000 0032                865          BRA     split0110   ; Code is 011, but all subcodes are 0110        
0000119C                           866  
0000119C                           867  split0100:
0000119C  0803 0008                868          BTST    #$8, D3     ; Check the 8th bit for LEA
000011A0  6600 34B8                869          BNE     decodeLEA   ; LEA follows 0100XXX1+
000011A4  0803 000B                870          BTST    #$B, D3     ; Check the 5th bit for NOT
000011A8  6700 4814                871          BEQ     decodeNOT   ; NOT follows 01000+
000011AC  0803 0009                872          BTST    #$9, D3     ; Check the 7th bit
000011B0  6700 0D3A                873          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
000011B4  6000 0002                874          BRA     split0100111
000011B8                           875  
000011B8                           876  split0100111:
000011B8  0803 0007                877          BTST    #$7, D3     ; Check the 9th bit for JSR
000011BC  6600 52E0                878          BNE     decodeJSR   ; JSR follows 010011101+
000011C0  0803 0002                879          BTST    #$2, D3     ; Check the 14th bit
000011C4  6700 009A                880          BEQ     decodeNOP   ; NOP follows 01001110011100+
000011C8  6000 5900                881          BRA     decodeRTS   ; RTS follows 01001110011101+
000011CC                           882  
000011CC                           883  split0110:
000011CC  0803 000B                884          BTST    #$B, D3     ; Check the 5th bit
000011D0  6700 0006                885          BEQ     split01100
000011D4  6000 000E                886          BRA     split01101
000011D8                           887  
000011D8                           888  split01100:
000011D8  0803 000A                889          BTST    #$A, D3     ; Check the 6th bit
000011DC  6700 5934                890          BEQ     decodeBRA   ; BRA starts with 011000
000011E0  6000 5202                891          BRA     decodeBEQ   ; BEQ starts with 011001
000011E4                           892          
000011E4                           893  split01101:
000011E4  0803 0008                894          BTST    #$8, D3     ; Check the 8th bit
000011E8  6700 5238                895          BEQ     decodeBGE   ; BGE starts with 01101100
000011EC  6000 5272                896          BRA     decodeBLT   ; BLT starts with 01101101
000011F0                           897          
000011F0                           898  split1: 
000011F0  0803 000E                899          BTST    #$E, D3     ; Check the 2nd bit
000011F4  6700 0006                900          BEQ     split10
000011F8  6000 000E                901          BRA     split11
000011FC                           902  
000011FC                           903  split10:
000011FC  0803 000C                904          BTST    #$C, D3     ; Check the 4th bit
00001200  6700 2DD6                905          BEQ     decodeDIVU  ; DIVU follows 1000+
00001204  6000 1A3A                906          BRA     decodeSUB   ; SUB follows 1001+
00001208                           907  
00001208                           908  split11:
00001208  0803 000D                909          BTST    #$D, D3     ; Check the 3rd bit
0000120C  6700 0006                910          BEQ     split110
00001210  6000 0026                911          BRA     split111
00001214                           912  
00001214                           913  split110:
00001214  0803 000C                914          BTST    #$C, D3     ; Check the 4th bit for ADD
00001218  6600 0D10                915          BNE     decodeADD   ; ADD follows 1101+
0000121C  0803 0008                916          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
00001220  6700 3A86                917          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
00001224  0803 0007                918          BTST    #$7, D3
00001228  6700 3A7E                919          BEQ     decodeAND
0000122C  0803 0006                920          BTST    #$6, D3
00001230  6700 3A76                921          BEQ     decodeAND
00001234  6000 2720                922          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
00001238                           923  
00001238                           924  split111: 
00001238  0803 0003                925          BTST    #$3, D3     ; Check 13th bit
0000123C  6700 0012                926          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
00001240                           927     
00001240  0803 0005                928          BTST    #$5, D3     
00001244  6600 0006                929          BNE     logReg      
00001248  6000 4DCE                930          BRA     decodeLSx_M
0000124C                           931        
0000124C  6000 4E9E                932  logReg: BRA     decodeLSx_R
00001250                           933  
00001250                           934  ariShift: ; Special split specifically for Arithmetic Shift
00001250  0803 0005                935          BTST    #$5, D3     
00001254  6600 0006                936          BNE     ariReg
00001258  6000 4FA4                937          BRA     decodeASx_M    
0000125C  6000 5074                938  ariReg: BRA     decodeASx_R
00001260                           939  
00001260                           940  
00001260                           941  
00001260                           942  
00001260                           943  ; ========================================================================
00001260                           944  ; "decodeX" subroutines
00001260                           945  ; Gary, Dylan
00001260                           946  ; 
00001260                           947  ; Set of subroutines which are invoked by identifyOpcode.
00001260                           948  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
00001260                           949  ; the instruction.
00001260                           950  ;
00001260                           951  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
00001260                           952  ; opcode) to record the parameters (such as destination register). If the
00001260                           953  ; opcode indicates that the next word represents a destination address, then
00001260                           954  ; decodeLEA will advance A2 to the next word and decode that.
00001260                           955  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
00001260                           956  ; ========================================================================
00001260                           957  
00001260                           958  ; ------------------------------------------------------------
00001260                           959  ; 1. "decodeNOP" subroutine
00001260                           960  ; AUTHOR
00001260                           961  ;
00001260                           962  ; TODO: DESCRIPTION
00001260                           963  ; ------------------------------------------------------------
00001260                           964  decodeNOP:
00001260                           965m         verifyOpcode    pNOP, (A2)
00001260  43F8 00D4                966m         LEA     PNOP, A1      ; INPUT PATTERN STRING
00001264  3612                     967m         MOVE.W  (A2), D3      ; INPUT VALUE
00001266  123C 000F                968m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000126A                           969m         
0000126A                           970m LOOP_15: 
0000126A  0C11 0030                971m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000126E  6700 000E                972m         BEQ     CHECKFOR0_15
00001272  0C11 0031                973m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001276  6700 0010                974m         BEQ     CHECKFOR1_15
0000127A  6000 0012                975m         BRA     NEXT_15      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000127E                           976m         
0000127E                           977m CHECKFOR0_15: 
0000127E  0303                     978m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001280  6600 58CE                979m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001284  6000 0008                980m         BRA     NEXT_15
00001288                           981m 
00001288                           982m CHECKFOR1_15:
00001288  0303                     983m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000128A  6700 58C4                984m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000128E                           985m 
0000128E                           986m NEXT_15: 
0000128E  B23C 0000                987m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001292  6700 0008                988m         BEQ     COMPLETE_15  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001296  5301                     989m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001298  1819                     990m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000129A  60CE                     991m         BRA     LOOP_15      ; BEGIN LOOP AGAIN
0000129C                           992m 
0000129C                           993m COMPLETE_15:  ; OPCODE HAS BEEN VERIFIED
0000129C                           994m         ENDM
0000129C  43F8 0060                995          LEA     oNOP, A1     ; Loads byteVAR
000012A0  103C 000E                996          MOVE.B  #14,D0          
000012A4  4E4F                     997          TRAP    #15
000012A6  4E75                     998          RTS                 ; Return from decodeNOP subroutine
000012A8                           999  
000012A8                          1000  
000012A8                          1001  ; ------------------------------------------------------------
000012A8                          1002  ; 2. "decodeMOVE" subroutine
000012A8                          1003  ; AUTHOR
000012A8                          1004  ;
000012A8                          1005  ; TODO: DESCRIPTION
000012A8                          1006  ; ------------------------------------------------------------
000012A8                          1007  decodeMOVE:
000012A8                          1008m         verifyOpcode    pMOVE, (A2)
000012A8  43F8 00E5               1009m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
000012AC  3612                    1010m         MOVE.W  (A2), D3      ; INPUT VALUE
000012AE  123C 000F               1011m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000012B2                          1012m         
000012B2                          1013m LOOP_16: 
000012B2  0C11 0030               1014m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000012B6  6700 000E               1015m         BEQ     CHECKFOR0_16
000012BA  0C11 0031               1016m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000012BE  6700 0010               1017m         BEQ     CHECKFOR1_16
000012C2  6000 0012               1018m         BRA     NEXT_16      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000012C6                          1019m         
000012C6                          1020m CHECKFOR0_16: 
000012C6  0303                    1021m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000012C8  6600 5886               1022m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000012CC  6000 0008               1023m         BRA     NEXT_16
000012D0                          1024m 
000012D0                          1025m CHECKFOR1_16:
000012D0  0303                    1026m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000012D2  6700 587C               1027m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000012D6                          1028m 
000012D6                          1029m NEXT_16: 
000012D6  B23C 0000               1030m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000012DA  6700 0008               1031m         BEQ     COMPLETE_16  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000012DE  5301                    1032m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012E0  1819                    1033m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012E2  60CE                    1034m         BRA     LOOP_16      ; BEGIN LOOP AGAIN
000012E4                          1035m 
000012E4                          1036m COMPLETE_16:  ; OPCODE HAS BEEN VERIFIED
000012E4                          1037m         ENDM
000012E4  43F8 0064               1038          LEA     oMOVE, A1     
000012E8  103C 000E               1039          MOVE.B  #14,D0          
000012EC  4E4F                    1040          TRAP    #15
000012EE                          1041m         printSize       (A2)
000012EE  3612                    1042m         MOVE.W  (A2), D3      ; INPUT VALUE
000012F0  4247                    1043m         CLR     D7      
000012F2                          1044m CHECKFORB_17: 
000012F2  0803 000D               1045m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000012F6  6600 0010               1046m         BNE     CHECKFORW_17  ; IF NOT GO TO WORD SIZE
000012FA  43F8 00B5               1047m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000012FE  103C 000E               1048m         MOVE.B  #14,D0          
00001302  4E4F                    1049m         TRAP    #15
00001304  6000 0026               1050m         BRA     COMPLETE_17      
00001308                          1051m CHECKFORW_17: 
00001308  0803 000C               1052m         BTST    #12, D3      ; CHECK IF CONTAINS 1
0000130C  6700 0010               1053m         BEQ     CHECKFORL_17  ; IF NOT, SIZE CANNOT BE WORD
00001310  43F8 00B9               1054m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
00001314  103C 000E               1055m         MOVE.B  #14,D0          
00001318  4E4F                    1056m         TRAP    #15
0000131A  6000 0010               1057m         BRA     COMPLETE_17  
0000131E                          1058m CHECKFORL_17:
0000131E  1E3C 0001               1059m         MOVE.B  #$1, D7
00001322  43F8 00BD               1060m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
00001326  103C 000E               1061m         MOVE.B  #14,D0          
0000132A  4E4F                    1062m         TRAP    #15
0000132C                          1063m COMPLETE_17:  ; SIZE HAS BEEN PRINTED
0000132C                          1064m         ENDM
0000132C                          1065m         prepareAdrMode  #$1, (A2)
0000132C  3C3C 0001               1066m         MOVE.W  #$1, D6      ; INPUT VALUE
00001330  3212                    1067m         MOVE.W  (A2), D1
00001332  BC3C 0001               1068m         CMP.B   #$01, D6
00001336  6700 000C               1069m         BEQ     ADRSOURCE_18    
0000133A                          1070m ADRDEST_18:
0000133A  EF49                    1071m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000133C  E049                    1072m         LSR     #$08, D1
0000133E  EA49                    1073m         LSR     #$05, D1
00001340  6000 000A               1074m         BRA     COMPLETE_18 
00001344                          1075m ADRSOURCE_18:                
00001344  E149                    1076m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00001346  E549                    1077m         LSL     #$02, D1
00001348  E049                    1078m         LSR     #$08, D1
0000134A  EA49                    1079m         LSR     #$05, D1
0000134C                          1080m COMPLETE_18:  ; OPCODE HAS BEEN VERIFIED
0000134C                          1081m         ENDM        
0000134C                          1082m         decodeAdrMode   (A2), D1
0000134C  3612                    1083m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000134E  3201                    1084m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001350                          1085m 
00001350  B23C 0001               1086m         CMP.B   #$01, D1
00001354  6700 0066               1087m         BEQ     ADRREGDIRECT_19    
00001358  B23C 0002               1088m         CMP.B   #$02, D1
0000135C  6700 00A0               1089m         BEQ     ADRREGINDIRECT_19  
00001360  B23C 0003               1090m         CMP.B   #$03, D1
00001364  6700 0102               1091m         BEQ     ADRREGPOSTINC_19  
00001368  B23C 0004               1092m         CMP.B   #$04, D1
0000136C  6700 0178               1093m         BEQ     ADRREGPREDEC_19
00001370  B23C 0007               1094m         CMP.B   #$07, D1
00001374  6700 01EE               1095m         BEQ     ADRABSOLUTE_19    
00001378                          1096m         
00001378                          1097m DATAREGDIRECT_19: 
00001378  BC3C 0001               1098m         CMP.B   #$01, D6
0000137C  6700 001E               1099m         BEQ     DATAREGDIRECTSRC_19   
00001380                          1100m DATAREGDIRECTDEST_19: 
00001380                          1101mm         PRINTDNDEST D3 
00001380  3203                    1102mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001382  E949                    1103mm         LSL     #$04, D1
00001384  E049                    1104mm         LSR     #$08, D1
00001386  EA49                    1105mm         LSR     #$05, D1
00001388  43F8 00C1               1106mm         LEA     ODN, A1     
0000138C  103C 000E               1107mm         MOVE.B  #14,D0          
00001390  4E4F                    1108mm         TRAP    #15
00001392  103C 0003               1109mm         MOVE.B  #3,D0          
00001396  4E4F                    1110mm         TRAP    #15
00001398                          1111mm         ENDM
00001398  6000 056C               1112m         BRA     COMPLETE_19 
0000139C                          1113m DATAREGDIRECTSRC_19: 
0000139C                          1114mm         PRINTDNSRC D3 
0000139C  4281                    1115mm         CLR.L   D1
0000139E  3203                    1116mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013A0  E149                    1117mm         LSL     #$08, D1
000013A2  EB49                    1118mm         LSL     #$05, D1
000013A4  E049                    1119mm         LSR     #$08, D1
000013A6  EA49                    1120mm         LSR     #$05, D1
000013A8  43F8 00C1               1121mm         LEA     ODN, A1     
000013AC  103C 000E               1122mm         MOVE.B  #14,D0          
000013B0  4E4F                    1123mm         TRAP    #15
000013B2  103C 0003               1124mm         MOVE.B  #3,D0          
000013B6  4E4F                    1125mm         TRAP    #15
000013B8                          1126mm         ENDM
000013B8  6000 054C               1127m         BRA     COMPLETE_19   
000013BC                          1128m         
000013BC                          1129m ADRREGDIRECT_19: 
000013BC  BC3C 0001               1130m         CMP.B   #$01, D6
000013C0  6700 001E               1131m         BEQ     ADRREGDIRECTSRC_19   
000013C4                          1132m ADRREGDIRECTDEST_19:
000013C4                          1133mm         PRINTANDEST D3
000013C4  3203                    1134mm         MOVE.W  D3, D1
000013C6  E949                    1135mm         LSL     #$04, D1
000013C8  E049                    1136mm         LSR     #$08, D1
000013CA  EA49                    1137mm         LSR     #$05, D1
000013CC  43F8 00C3               1138mm         LEA     OAN, A1     
000013D0  103C 000E               1139mm         MOVE.B  #14,D0          
000013D4  4E4F                    1140mm         TRAP    #15
000013D6  103C 0003               1141mm         MOVE.B  #3,D0          
000013DA  4E4F                    1142mm         TRAP    #15
000013DC                          1143mm         ENDM
000013DC  6000 0528               1144m         BRA     COMPLETE_19   
000013E0                          1145m ADRREGDIRECTSRC_19:
000013E0                          1146mm         PRINTANSRC D3
000013E0  3203                    1147mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013E2  E149                    1148mm         LSL     #$08, D1
000013E4  EB49                    1149mm         LSL     #$05, D1
000013E6  E049                    1150mm         LSR     #$08, D1
000013E8  EA49                    1151mm         LSR     #$05, D1
000013EA  43F8 00C3               1152mm         LEA     OAN, A1     
000013EE  103C 000E               1153mm         MOVE.B  #14,D0          
000013F2  4E4F                    1154mm         TRAP    #15
000013F4  103C 0003               1155mm         MOVE.B  #3,D0          
000013F8  4E4F                    1156mm         TRAP    #15
000013FA                          1157mm         ENDM
000013FA  6000 050A               1158m         BRA     COMPLETE_19   
000013FE                          1159m        
000013FE                          1160m ADRREGINDIRECT_19:   
000013FE  BC3C 0001               1161m         CMP.B   #$01, D6
00001402  6700 0032               1162m         BEQ     ADRREGINDIRECTSRC_19   
00001406                          1163m ADRREGINDIRECTDEST_19:
00001406                          1164mm         PRINTLB
00001406  43F8 00C5               1165mm         LEA     OLB, A1     
0000140A  103C 000E               1166mm         MOVE.B  #14,D0          
0000140E  4E4F                    1167mm         TRAP    #15
00001410                          1168mm         ENDM
00001410                          1169mm         PRINTANDEST D3  
00001410  3203                    1170mm         MOVE.W  D3, D1
00001412  E949                    1171mm         LSL     #$04, D1
00001414  E049                    1172mm         LSR     #$08, D1
00001416  EA49                    1173mm         LSR     #$05, D1
00001418  43F8 00C3               1174mm         LEA     OAN, A1     
0000141C  103C 000E               1175mm         MOVE.B  #14,D0          
00001420  4E4F                    1176mm         TRAP    #15
00001422  103C 0003               1177mm         MOVE.B  #3,D0          
00001426  4E4F                    1178mm         TRAP    #15
00001428                          1179mm         ENDM
00001428                          1180mm         PRINTRB
00001428  43F8 00C7               1181mm         LEA     ORB, A1     
0000142C  103C 000E               1182mm         MOVE.B  #14,D0          
00001430  4E4F                    1183mm         TRAP    #15
00001432                          1184mm         ENDM
00001432  6000 04D2               1185m         BRA     COMPLETE_19     
00001436                          1186m ADRREGINDIRECTSRC_19:   
00001436                          1187mm         PRINTLB
00001436  43F8 00C5               1188mm         LEA     OLB, A1     
0000143A  103C 000E               1189mm         MOVE.B  #14,D0          
0000143E  4E4F                    1190mm         TRAP    #15
00001440                          1191mm         ENDM
00001440                          1192mm         PRINTANSRC D3  
00001440  3203                    1193mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001442  E149                    1194mm         LSL     #$08, D1
00001444  EB49                    1195mm         LSL     #$05, D1
00001446  E049                    1196mm         LSR     #$08, D1
00001448  EA49                    1197mm         LSR     #$05, D1
0000144A  43F8 00C3               1198mm         LEA     OAN, A1     
0000144E  103C 000E               1199mm         MOVE.B  #14,D0          
00001452  4E4F                    1200mm         TRAP    #15
00001454  103C 0003               1201mm         MOVE.B  #3,D0          
00001458  4E4F                    1202mm         TRAP    #15
0000145A                          1203mm         ENDM
0000145A                          1204mm         PRINTRB
0000145A  43F8 00C7               1205mm         LEA     ORB, A1     
0000145E  103C 000E               1206mm         MOVE.B  #14,D0          
00001462  4E4F                    1207mm         TRAP    #15
00001464                          1208mm         ENDM
00001464  6000 04A0               1209m         BRA     COMPLETE_19   
00001468                          1210m         
00001468                          1211m ADRREGPOSTINC_19:   
00001468  BC3C 0001               1212m         CMP.B   #$01, D6
0000146C  6700 003C               1213m         BEQ     ADRREGPOSTINCSRC_19   
00001470                          1214m ADRREGPOSTINCDEST_19: 
00001470                          1215mm         PRINTLB
00001470  43F8 00C5               1216mm         LEA     OLB, A1     
00001474  103C 000E               1217mm         MOVE.B  #14,D0          
00001478  4E4F                    1218mm         TRAP    #15
0000147A                          1219mm         ENDM
0000147A                          1220mm         PRINTANDEST D3  
0000147A  3203                    1221mm         MOVE.W  D3, D1
0000147C  E949                    1222mm         LSL     #$04, D1
0000147E  E049                    1223mm         LSR     #$08, D1
00001480  EA49                    1224mm         LSR     #$05, D1
00001482  43F8 00C3               1225mm         LEA     OAN, A1     
00001486  103C 000E               1226mm         MOVE.B  #14,D0          
0000148A  4E4F                    1227mm         TRAP    #15
0000148C  103C 0003               1228mm         MOVE.B  #3,D0          
00001490  4E4F                    1229mm         TRAP    #15
00001492                          1230mm         ENDM
00001492                          1231mm         PRINTRB
00001492  43F8 00C7               1232mm         LEA     ORB, A1     
00001496  103C 000E               1233mm         MOVE.B  #14,D0          
0000149A  4E4F                    1234mm         TRAP    #15
0000149C                          1235mm         ENDM
0000149C                          1236mm         PRINTPI
0000149C  43F8 00CE               1237mm         LEA     OPSTINC, A1     
000014A0  103C 000E               1238mm         MOVE.B  #14,D0          
000014A4  4E4F                    1239mm         TRAP    #15
000014A6                          1240mm         ENDM
000014A6  6000 045E               1241m         BRA     COMPLETE_19  
000014AA                          1242m ADRREGPOSTINCSRC_19:           
000014AA                          1243mm         PRINTLB
000014AA  43F8 00C5               1244mm         LEA     OLB, A1     
000014AE  103C 000E               1245mm         MOVE.B  #14,D0          
000014B2  4E4F                    1246mm         TRAP    #15
000014B4                          1247mm         ENDM
000014B4                          1248mm         PRINTANSRC D3  
000014B4  3203                    1249mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014B6  E149                    1250mm         LSL     #$08, D1
000014B8  EB49                    1251mm         LSL     #$05, D1
000014BA  E049                    1252mm         LSR     #$08, D1
000014BC  EA49                    1253mm         LSR     #$05, D1
000014BE  43F8 00C3               1254mm         LEA     OAN, A1     
000014C2  103C 000E               1255mm         MOVE.B  #14,D0          
000014C6  4E4F                    1256mm         TRAP    #15
000014C8  103C 0003               1257mm         MOVE.B  #3,D0          
000014CC  4E4F                    1258mm         TRAP    #15
000014CE                          1259mm         ENDM
000014CE                          1260mm         PRINTRB
000014CE  43F8 00C7               1261mm         LEA     ORB, A1     
000014D2  103C 000E               1262mm         MOVE.B  #14,D0          
000014D6  4E4F                    1263mm         TRAP    #15
000014D8                          1264mm         ENDM
000014D8                          1265mm         PRINTPI
000014D8  43F8 00CE               1266mm         LEA     OPSTINC, A1     
000014DC  103C 000E               1267mm         MOVE.B  #14,D0          
000014E0  4E4F                    1268mm         TRAP    #15
000014E2                          1269mm         ENDM
000014E2  6000 0422               1270m         BRA     COMPLETE_19  
000014E6                          1271m         
000014E6                          1272m ADRREGPREDEC_19: 
000014E6  BC3C 0001               1273m         CMP.B   #$01, D6
000014EA  6700 003C               1274m         BEQ     ADRREGPREDECSRC_19   
000014EE                          1275m ADRREGPREDECDEST_19:
000014EE                          1276mm         PRINTPD  
000014EE  43F8 00CC               1277mm         LEA     OPREDEC, A1     
000014F2  103C 000E               1278mm         MOVE.B  #14,D0          
000014F6  4E4F                    1279mm         TRAP    #15
000014F8                          1280mm         ENDM
000014F8                          1281mm         PRINTLB
000014F8  43F8 00C5               1282mm         LEA     OLB, A1     
000014FC  103C 000E               1283mm         MOVE.B  #14,D0          
00001500  4E4F                    1284mm         TRAP    #15
00001502                          1285mm         ENDM
00001502                          1286mm         PRINTANDEST D3  
00001502  3203                    1287mm         MOVE.W  D3, D1
00001504  E949                    1288mm         LSL     #$04, D1
00001506  E049                    1289mm         LSR     #$08, D1
00001508  EA49                    1290mm         LSR     #$05, D1
0000150A  43F8 00C3               1291mm         LEA     OAN, A1     
0000150E  103C 000E               1292mm         MOVE.B  #14,D0          
00001512  4E4F                    1293mm         TRAP    #15
00001514  103C 0003               1294mm         MOVE.B  #3,D0          
00001518  4E4F                    1295mm         TRAP    #15
0000151A                          1296mm         ENDM
0000151A                          1297mm         PRINTRB
0000151A  43F8 00C7               1298mm         LEA     ORB, A1     
0000151E  103C 000E               1299mm         MOVE.B  #14,D0          
00001522  4E4F                    1300mm         TRAP    #15
00001524                          1301mm         ENDM
00001524  6000 03E0               1302m         BRA     COMPLETE_19   
00001528                          1303m ADRREGPREDECSRC_19: 
00001528                          1304mm         PRINTPD  
00001528  43F8 00CC               1305mm         LEA     OPREDEC, A1     
0000152C  103C 000E               1306mm         MOVE.B  #14,D0          
00001530  4E4F                    1307mm         TRAP    #15
00001532                          1308mm         ENDM
00001532                          1309mm         PRINTLB
00001532  43F8 00C5               1310mm         LEA     OLB, A1     
00001536  103C 000E               1311mm         MOVE.B  #14,D0          
0000153A  4E4F                    1312mm         TRAP    #15
0000153C                          1313mm         ENDM
0000153C                          1314mm         PRINTANSRC D3  
0000153C  3203                    1315mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000153E  E149                    1316mm         LSL     #$08, D1
00001540  EB49                    1317mm         LSL     #$05, D1
00001542  E049                    1318mm         LSR     #$08, D1
00001544  EA49                    1319mm         LSR     #$05, D1
00001546  43F8 00C3               1320mm         LEA     OAN, A1     
0000154A  103C 000E               1321mm         MOVE.B  #14,D0          
0000154E  4E4F                    1322mm         TRAP    #15
00001550  103C 0003               1323mm         MOVE.B  #3,D0          
00001554  4E4F                    1324mm         TRAP    #15
00001556                          1325mm         ENDM
00001556                          1326mm         PRINTRB
00001556  43F8 00C7               1327mm         LEA     ORB, A1     
0000155A  103C 000E               1328mm         MOVE.B  #14,D0          
0000155E  4E4F                    1329mm         TRAP    #15
00001560                          1330mm         ENDM
00001560  6000 03A4               1331m         BRA     COMPLETE_19
00001564                          1332m        
00001564                          1333m ADRABSOLUTE_19:
00001564  BC3C 0001               1334m         CMP.B   #$01, D6
00001568  6600 0018               1335m         BNE     ADRABSOLUTEDST_19 
0000156C                          1336m         
0000156C  3A03                    1337m         MOVE.W  D3, D5
0000156E  0803 0002               1338m         BTST    #2, D3
00001572  6600 0024               1339m         BNE     ADRIMMEDIATE_19
00001576  0803 0000               1340m         BTST    #0, D3
0000157A  6600 027A               1341m         BNE     ADRABSOLUTEL_19
0000157E  6000 01DA               1342m         BRA     ADRABSOLUTEW_19
00001582                          1343m ADRABSOLUTEDST_19:
00001582  3A03                    1344m         MOVE.W  D3, D5
00001584  0803 000B               1345m         BTST    #$B, D3
00001588  6600 000E               1346m         BNE     ADRIMMEDIATE_19
0000158C  0803 0009               1347m         BTST    #$09, D3
00001590  6600 0264               1348m         BNE     ADRABSOLUTEL_19
00001594  6000 01C4               1349m         BRA     ADRABSOLUTEW_19
00001598                          1350m ADRIMMEDIATE_19:
00001598  BE3C 0001               1351m         CMP.B   #1, D7
0000159C  6700 009E               1352m         BEQ     ADRIMMEDIATEL_19
000015A0                          1353m ADRIMMEDIATEW_19:
000015A0  361A                    1354m         MOVE.W  (A2)+, D3
000015A2                          1355mm         PRINTHASH
000015A2  103C 0006               1356mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015A6  323C 0023               1357mm         MOVE.W  #35, D1     ; AN = SIGN
000015AA  4E4F                    1358mm         TRAP    #15         ; OUTPUT = SIGN
000015AC                          1359mm         ENDM
000015AC                          1360mm         PRINTSIGN
000015AC  103C 0006               1361mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015B0  323C 0024               1362mm         MOVE.W  #36, D1     ; AN = SIGN
000015B4  4E4F                    1363mm         TRAP    #15         ; OUTPUT = SIGN
000015B6                          1364mm         ENDM
000015B6                          1365mm         ADROUT
000015B6  3212                    1366mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015B8  E049                    1367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015BA  E849                    1368mm         LSR.W   #4, D1      
000015BC                          1369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015BC  0C01 0009               1370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015C0  6E00 000A               1371mmm         BGT     ALPHA_49
000015C4  0601 0030               1372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015C8  6000 0006               1373mmm         BRA     DONE_49
000015CC  0601 0037               1374mmm ALPHA_49: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015D0  4E71                    1375mmm DONE_49: NOP
000015D2                          1376mmm         ENDM
000015D2  4E4F                    1377mm         TRAP    #15         ; EXECUTE OUTPUT
000015D4                          1378mm         
000015D4  3212                    1379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015D6  E949                    1380mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000015D8  E049                    1381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015DA  E849                    1382mm         LSR.W   #4, D1      
000015DC                          1383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015DC  0C01 0009               1384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015E0  6E00 000A               1385mmm         BGT     ALPHA_50
000015E4  0601 0030               1386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015E8  6000 0006               1387mmm         BRA     DONE_50
000015EC  0601 0037               1388mmm ALPHA_50: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015F0  4E71                    1389mmm DONE_50: NOP
000015F2                          1390mmm         ENDM
000015F2  4E4F                    1391mm         TRAP    #15         ; EXECUTE OUTPUT
000015F4                          1392mm         
000015F4  3212                    1393mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015F6  E149                    1394mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000015F8  E049                    1395mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015FA  E849                    1396mm         LSR.W   #4, D1      
000015FC                          1397mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015FC  0C01 0009               1398mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001600  6E00 000A               1399mmm         BGT     ALPHA_51
00001604  0601 0030               1400mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001608  6000 0006               1401mmm         BRA     DONE_51
0000160C  0601 0037               1402mmm ALPHA_51: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001610  4E71                    1403mmm DONE_51: NOP
00001612                          1404mmm         ENDM
00001612  4E4F                    1405mm         TRAP    #15         ; EXECUTE OUTPUT
00001614                          1406mm         
00001614  3212                    1407mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001616  E149                    1408mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001618  E949                    1409mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000161A  E049                    1410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000161C  E849                    1411mm         LSR.W   #4, D1      
0000161E                          1412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000161E  0C01 0009               1413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001622  6E00 000A               1414mmm         BGT     ALPHA_52
00001626  0601 0030               1415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000162A  6000 0006               1416mmm         BRA     DONE_52
0000162E  0601 0037               1417mmm ALPHA_52: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001632  4E71                    1418mmm DONE_52: NOP
00001634                          1419mmm         ENDM
00001634  4E4F                    1420mm         TRAP    #15         ; EXECUTE OUTPUT       
00001636                          1421mm         ENDM 
00001636  3605                    1422m         MOVE.W  D5, D3
00001638  6000 02CC               1423m         BRA     COMPLETE_19
0000163C                          1424m ADRIMMEDIATEL_19:
0000163C  361A                    1425m         MOVE.W  (A2)+, D3
0000163E                          1426mm         PRINTHASH
0000163E  103C 0006               1427mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001642  323C 0023               1428mm         MOVE.W  #35, D1     ; AN = SIGN
00001646  4E4F                    1429mm         TRAP    #15         ; OUTPUT = SIGN
00001648                          1430mm         ENDM
00001648                          1431mm         PRINTSIGN
00001648  103C 0006               1432mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000164C  323C 0024               1433mm         MOVE.W  #36, D1     ; AN = SIGN
00001650  4E4F                    1434mm         TRAP    #15         ; OUTPUT = SIGN
00001652                          1435mm         ENDM
00001652                          1436mm         ADROUT 
00001652  3212                    1437mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001654  E049                    1438mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001656  E849                    1439mm         LSR.W   #4, D1      
00001658                          1440mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001658  0C01 0009               1441mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000165C  6E00 000A               1442mmm         BGT     ALPHA_56
00001660  0601 0030               1443mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001664  6000 0006               1444mmm         BRA     DONE_56
00001668  0601 0037               1445mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000166C  4E71                    1446mmm DONE_56: NOP
0000166E                          1447mmm         ENDM
0000166E  4E4F                    1448mm         TRAP    #15         ; EXECUTE OUTPUT
00001670                          1449mm         
00001670  3212                    1450mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001672  E949                    1451mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001674  E049                    1452mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001676  E849                    1453mm         LSR.W   #4, D1      
00001678                          1454mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001678  0C01 0009               1455mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000167C  6E00 000A               1456mmm         BGT     ALPHA_57
00001680  0601 0030               1457mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001684  6000 0006               1458mmm         BRA     DONE_57
00001688  0601 0037               1459mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000168C  4E71                    1460mmm DONE_57: NOP
0000168E                          1461mmm         ENDM
0000168E  4E4F                    1462mm         TRAP    #15         ; EXECUTE OUTPUT
00001690                          1463mm         
00001690  3212                    1464mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001692  E149                    1465mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001694  E049                    1466mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001696  E849                    1467mm         LSR.W   #4, D1      
00001698                          1468mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001698  0C01 0009               1469mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000169C  6E00 000A               1470mmm         BGT     ALPHA_58
000016A0  0601 0030               1471mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016A4  6000 0006               1472mmm         BRA     DONE_58
000016A8  0601 0037               1473mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016AC  4E71                    1474mmm DONE_58: NOP
000016AE                          1475mmm         ENDM
000016AE  4E4F                    1476mm         TRAP    #15         ; EXECUTE OUTPUT
000016B0                          1477mm         
000016B0  3212                    1478mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016B2  E149                    1479mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016B4  E949                    1480mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016B6  E049                    1481mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016B8  E849                    1482mm         LSR.W   #4, D1      
000016BA                          1483mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016BA  0C01 0009               1484mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016BE  6E00 000A               1485mmm         BGT     ALPHA_59
000016C2  0601 0030               1486mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016C6  6000 0006               1487mmm         BRA     DONE_59
000016CA  0601 0037               1488mmm ALPHA_59: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016CE  4E71                    1489mmm DONE_59: NOP
000016D0                          1490mmm         ENDM
000016D0  4E4F                    1491mm         TRAP    #15         ; EXECUTE OUTPUT       
000016D2                          1492mm         ENDM 
000016D2  361A                    1493m         MOVE.W  (A2)+, D3
000016D4                          1494mm         ADROUT
000016D4  3212                    1495mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016D6  E049                    1496mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016D8  E849                    1497mm         LSR.W   #4, D1      
000016DA                          1498mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016DA  0C01 0009               1499mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016DE  6E00 000A               1500mmm         BGT     ALPHA_61
000016E2  0601 0030               1501mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016E6  6000 0006               1502mmm         BRA     DONE_61
000016EA  0601 0037               1503mmm ALPHA_61: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016EE  4E71                    1504mmm DONE_61: NOP
000016F0                          1505mmm         ENDM
000016F0  4E4F                    1506mm         TRAP    #15         ; EXECUTE OUTPUT
000016F2                          1507mm         
000016F2  3212                    1508mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016F4  E949                    1509mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000016F6  E049                    1510mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016F8  E849                    1511mm         LSR.W   #4, D1      
000016FA                          1512mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016FA  0C01 0009               1513mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016FE  6E00 000A               1514mmm         BGT     ALPHA_62
00001702  0601 0030               1515mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001706  6000 0006               1516mmm         BRA     DONE_62
0000170A  0601 0037               1517mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000170E  4E71                    1518mmm DONE_62: NOP
00001710                          1519mmm         ENDM
00001710  4E4F                    1520mm         TRAP    #15         ; EXECUTE OUTPUT
00001712                          1521mm         
00001712  3212                    1522mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001714  E149                    1523mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001716  E049                    1524mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001718  E849                    1525mm         LSR.W   #4, D1      
0000171A                          1526mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000171A  0C01 0009               1527mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000171E  6E00 000A               1528mmm         BGT     ALPHA_63
00001722  0601 0030               1529mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001726  6000 0006               1530mmm         BRA     DONE_63
0000172A  0601 0037               1531mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000172E  4E71                    1532mmm DONE_63: NOP
00001730                          1533mmm         ENDM
00001730  4E4F                    1534mm         TRAP    #15         ; EXECUTE OUTPUT
00001732                          1535mm         
00001732  3212                    1536mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001734  E149                    1537mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001736  E949                    1538mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001738  E049                    1539mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000173A  E849                    1540mm         LSR.W   #4, D1      
0000173C                          1541mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000173C  0C01 0009               1542mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001740  6E00 000A               1543mmm         BGT     ALPHA_64
00001744  0601 0030               1544mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001748  6000 0006               1545mmm         BRA     DONE_64
0000174C  0601 0037               1546mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001750  4E71                    1547mmm DONE_64: NOP
00001752                          1548mmm         ENDM
00001752  4E4F                    1549mm         TRAP    #15         ; EXECUTE OUTPUT       
00001754                          1550mm         ENDM 
00001754  3605                    1551m         MOVE.W  D5, D3
00001756  6000 01AE               1552m         BRA     COMPLETE_19 
0000175A                          1553m ADRABSOLUTEW_19:     
0000175A  361A                    1554m         MOVE.W  (A2)+, D3
0000175C                          1555mm         PRINTSIGN
0000175C  103C 0006               1556mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001760  323C 0024               1557mm         MOVE.W  #36, D1     ; AN = SIGN
00001764  4E4F                    1558mm         TRAP    #15         ; OUTPUT = SIGN
00001766                          1559mm         ENDM
00001766                          1560mm         PRINTSIGN
00001766  103C 0006               1561mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000176A  323C 0024               1562mm         MOVE.W  #36, D1     ; AN = SIGN
0000176E  4E4F                    1563mm         TRAP    #15         ; OUTPUT = SIGN
00001770                          1564mm         ENDM
00001770                          1565mm         ADROUT
00001770  3212                    1566mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001772  E049                    1567mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001774  E849                    1568mm         LSR.W   #4, D1      
00001776                          1569mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001776  0C01 0009               1570mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000177A  6E00 000A               1571mmm         BGT     ALPHA_68
0000177E  0601 0030               1572mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001782  6000 0006               1573mmm         BRA     DONE_68
00001786  0601 0037               1574mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000178A  4E71                    1575mmm DONE_68: NOP
0000178C                          1576mmm         ENDM
0000178C  4E4F                    1577mm         TRAP    #15         ; EXECUTE OUTPUT
0000178E                          1578mm         
0000178E  3212                    1579mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001790  E949                    1580mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001792  E049                    1581mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001794  E849                    1582mm         LSR.W   #4, D1      
00001796                          1583mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001796  0C01 0009               1584mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000179A  6E00 000A               1585mmm         BGT     ALPHA_69
0000179E  0601 0030               1586mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017A2  6000 0006               1587mmm         BRA     DONE_69
000017A6  0601 0037               1588mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017AA  4E71                    1589mmm DONE_69: NOP
000017AC                          1590mmm         ENDM
000017AC  4E4F                    1591mm         TRAP    #15         ; EXECUTE OUTPUT
000017AE                          1592mm         
000017AE  3212                    1593mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017B0  E149                    1594mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017B2  E049                    1595mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B4  E849                    1596mm         LSR.W   #4, D1      
000017B6                          1597mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B6  0C01 0009               1598mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017BA  6E00 000A               1599mmm         BGT     ALPHA_70
000017BE  0601 0030               1600mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017C2  6000 0006               1601mmm         BRA     DONE_70
000017C6  0601 0037               1602mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017CA  4E71                    1603mmm DONE_70: NOP
000017CC                          1604mmm         ENDM
000017CC  4E4F                    1605mm         TRAP    #15         ; EXECUTE OUTPUT
000017CE                          1606mm         
000017CE  3212                    1607mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017D0  E149                    1608mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017D2  E949                    1609mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017D4  E049                    1610mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D6  E849                    1611mm         LSR.W   #4, D1      
000017D8                          1612mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D8  0C01 0009               1613mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017DC  6E00 000A               1614mmm         BGT     ALPHA_71
000017E0  0601 0030               1615mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017E4  6000 0006               1616mmm         BRA     DONE_71
000017E8  0601 0037               1617mmm ALPHA_71: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017EC  4E71                    1618mmm DONE_71: NOP
000017EE                          1619mmm         ENDM
000017EE  4E4F                    1620mm         TRAP    #15         ; EXECUTE OUTPUT       
000017F0                          1621mm         ENDM 
000017F0  3605                    1622m         MOVE.W  D5, D3
000017F2  6000 0112               1623m         BRA     COMPLETE_19  
000017F6                          1624m ADRABSOLUTEL_19:  
000017F6  361A                    1625m         MOVE.W  (A2)+, D3
000017F8                          1626mm         PRINTSIGN
000017F8  103C 0006               1627mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000017FC  323C 0024               1628mm         MOVE.W  #36, D1     ; AN = SIGN
00001800  4E4F                    1629mm         TRAP    #15         ; OUTPUT = SIGN
00001802                          1630mm         ENDM
00001802                          1631mm         ADROUT 
00001802  3212                    1632mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001804  E049                    1633mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001806  E849                    1634mm         LSR.W   #4, D1      
00001808                          1635mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001808  0C01 0009               1636mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000180C  6E00 000A               1637mmm         BGT     ALPHA_74
00001810  0601 0030               1638mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001814  6000 0006               1639mmm         BRA     DONE_74
00001818  0601 0037               1640mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000181C  4E71                    1641mmm DONE_74: NOP
0000181E                          1642mmm         ENDM
0000181E  4E4F                    1643mm         TRAP    #15         ; EXECUTE OUTPUT
00001820                          1644mm         
00001820  3212                    1645mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001822  E949                    1646mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001824  E049                    1647mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001826  E849                    1648mm         LSR.W   #4, D1      
00001828                          1649mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001828  0C01 0009               1650mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182C  6E00 000A               1651mmm         BGT     ALPHA_75
00001830  0601 0030               1652mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001834  6000 0006               1653mmm         BRA     DONE_75
00001838  0601 0037               1654mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183C  4E71                    1655mmm DONE_75: NOP
0000183E                          1656mmm         ENDM
0000183E  4E4F                    1657mm         TRAP    #15         ; EXECUTE OUTPUT
00001840                          1658mm         
00001840  3212                    1659mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001842  E149                    1660mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001844  E049                    1661mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001846  E849                    1662mm         LSR.W   #4, D1      
00001848                          1663mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001848  0C01 0009               1664mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184C  6E00 000A               1665mmm         BGT     ALPHA_76
00001850  0601 0030               1666mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001854  6000 0006               1667mmm         BRA     DONE_76
00001858  0601 0037               1668mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185C  4E71                    1669mmm DONE_76: NOP
0000185E                          1670mmm         ENDM
0000185E  4E4F                    1671mm         TRAP    #15         ; EXECUTE OUTPUT
00001860                          1672mm         
00001860  3212                    1673mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001862  E149                    1674mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001864  E949                    1675mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001866  E049                    1676mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001868  E849                    1677mm         LSR.W   #4, D1      
0000186A                          1678mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000186A  0C01 0009               1679mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186E  6E00 000A               1680mmm         BGT     ALPHA_77
00001872  0601 0030               1681mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001876  6000 0006               1682mmm         BRA     DONE_77
0000187A  0601 0037               1683mmm ALPHA_77: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187E  4E71                    1684mmm DONE_77: NOP
00001880                          1685mmm         ENDM
00001880  4E4F                    1686mm         TRAP    #15         ; EXECUTE OUTPUT       
00001882                          1687mm         ENDM 
00001882  361A                    1688m         MOVE.W  (A2)+, D3
00001884                          1689mm         ADROUT
00001884  3212                    1690mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001886  E049                    1691mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001888  E849                    1692mm         LSR.W   #4, D1      
0000188A                          1693mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000188A  0C01 0009               1694mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188E  6E00 000A               1695mmm         BGT     ALPHA_79
00001892  0601 0030               1696mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001896  6000 0006               1697mmm         BRA     DONE_79
0000189A  0601 0037               1698mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189E  4E71                    1699mmm DONE_79: NOP
000018A0                          1700mmm         ENDM
000018A0  4E4F                    1701mm         TRAP    #15         ; EXECUTE OUTPUT
000018A2                          1702mm         
000018A2  3212                    1703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018A4  E949                    1704mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018A6  E049                    1705mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A8  E849                    1706mm         LSR.W   #4, D1      
000018AA                          1707mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018AA  0C01 0009               1708mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AE  6E00 000A               1709mmm         BGT     ALPHA_80
000018B2  0601 0030               1710mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B6  6000 0006               1711mmm         BRA     DONE_80
000018BA  0601 0037               1712mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BE  4E71                    1713mmm DONE_80: NOP
000018C0                          1714mmm         ENDM
000018C0  4E4F                    1715mm         TRAP    #15         ; EXECUTE OUTPUT
000018C2                          1716mm         
000018C2  3212                    1717mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018C4  E149                    1718mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018C6  E049                    1719mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018C8  E849                    1720mm         LSR.W   #4, D1      
000018CA                          1721mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018CA  0C01 0009               1722mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018CE  6E00 000A               1723mmm         BGT     ALPHA_81
000018D2  0601 0030               1724mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018D6  6000 0006               1725mmm         BRA     DONE_81
000018DA  0601 0037               1726mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018DE  4E71                    1727mmm DONE_81: NOP
000018E0                          1728mmm         ENDM
000018E0  4E4F                    1729mm         TRAP    #15         ; EXECUTE OUTPUT
000018E2                          1730mm         
000018E2  3212                    1731mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018E4  E149                    1732mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018E6  E949                    1733mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000018E8  E049                    1734mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018EA  E849                    1735mm         LSR.W   #4, D1      
000018EC                          1736mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018EC  0C01 0009               1737mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018F0  6E00 000A               1738mmm         BGT     ALPHA_82
000018F4  0601 0030               1739mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018F8  6000 0006               1740mmm         BRA     DONE_82
000018FC  0601 0037               1741mmm ALPHA_82: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001900  4E71                    1742mmm DONE_82: NOP
00001902                          1743mmm         ENDM
00001902  4E4F                    1744mm         TRAP    #15         ; EXECUTE OUTPUT       
00001904                          1745mm         ENDM 
00001904  3605                    1746m         MOVE.W  D5, D3
00001906                          1747m 
00001906                          1748m COMPLETE_19:  ; OPCODE HAS BEEN VERIFIED
00001906                          1749m         ENDM
00001906                          1750m         printComma
00001906  43F8 00C9               1751m         LEA     OCOMMA, A1     
0000190A  103C 000E               1752m         MOVE.B  #14,D0          
0000190E  4E4F                    1753m         TRAP    #15
00001910                          1754m         ENDM
00001910                          1755m         prepareAdrMode  #$0,  D3
00001910  3C3C 0000               1756m         MOVE.W  #$0, D6      ; INPUT VALUE
00001914  3203                    1757m         MOVE.W  D3, D1
00001916  BC3C 0001               1758m         CMP.B   #$01, D6
0000191A  6700 000C               1759m         BEQ     ADRSOURCE_84    
0000191E                          1760m ADRDEST_84:
0000191E  EF49                    1761m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00001920  E049                    1762m         LSR     #$08, D1
00001922  EA49                    1763m         LSR     #$05, D1
00001924  6000 000A               1764m         BRA     COMPLETE_84 
00001928                          1765m ADRSOURCE_84:                
00001928  E149                    1766m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000192A  E549                    1767m         LSL     #$02, D1
0000192C  E049                    1768m         LSR     #$08, D1
0000192E  EA49                    1769m         LSR     #$05, D1
00001930                          1770m COMPLETE_84:  ; OPCODE HAS BEEN VERIFIED
00001930                          1771m         ENDM        
00001930                          1772m         decodeAdrMode   D3, D1
00001930  3603                    1773m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
00001932  3201                    1774m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001934                          1775m 
00001934  B23C 0001               1776m         CMP.B   #$01, D1
00001938  6700 0066               1777m         BEQ     ADRREGDIRECT_85    
0000193C  B23C 0002               1778m         CMP.B   #$02, D1
00001940  6700 00A0               1779m         BEQ     ADRREGINDIRECT_85  
00001944  B23C 0003               1780m         CMP.B   #$03, D1
00001948  6700 0102               1781m         BEQ     ADRREGPOSTINC_85  
0000194C  B23C 0004               1782m         CMP.B   #$04, D1
00001950  6700 0178               1783m         BEQ     ADRREGPREDEC_85
00001954  B23C 0007               1784m         CMP.B   #$07, D1
00001958  6700 01EE               1785m         BEQ     ADRABSOLUTE_85    
0000195C                          1786m         
0000195C                          1787m DATAREGDIRECT_85: 
0000195C  BC3C 0001               1788m         CMP.B   #$01, D6
00001960  6700 001E               1789m         BEQ     DATAREGDIRECTSRC_85   
00001964                          1790m DATAREGDIRECTDEST_85: 
00001964                          1791mm         PRINTDNDEST D3 
00001964  3203                    1792mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001966  E949                    1793mm         LSL     #$04, D1
00001968  E049                    1794mm         LSR     #$08, D1
0000196A  EA49                    1795mm         LSR     #$05, D1
0000196C  43F8 00C1               1796mm         LEA     ODN, A1     
00001970  103C 000E               1797mm         MOVE.B  #14,D0          
00001974  4E4F                    1798mm         TRAP    #15
00001976  103C 0003               1799mm         MOVE.B  #3,D0          
0000197A  4E4F                    1800mm         TRAP    #15
0000197C                          1801mm         ENDM
0000197C  6000 056C               1802m         BRA     COMPLETE_85 
00001980                          1803m DATAREGDIRECTSRC_85: 
00001980                          1804mm         PRINTDNSRC D3 
00001980  4281                    1805mm         CLR.L   D1
00001982  3203                    1806mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001984  E149                    1807mm         LSL     #$08, D1
00001986  EB49                    1808mm         LSL     #$05, D1
00001988  E049                    1809mm         LSR     #$08, D1
0000198A  EA49                    1810mm         LSR     #$05, D1
0000198C  43F8 00C1               1811mm         LEA     ODN, A1     
00001990  103C 000E               1812mm         MOVE.B  #14,D0          
00001994  4E4F                    1813mm         TRAP    #15
00001996  103C 0003               1814mm         MOVE.B  #3,D0          
0000199A  4E4F                    1815mm         TRAP    #15
0000199C                          1816mm         ENDM
0000199C  6000 054C               1817m         BRA     COMPLETE_85   
000019A0                          1818m         
000019A0                          1819m ADRREGDIRECT_85: 
000019A0  BC3C 0001               1820m         CMP.B   #$01, D6
000019A4  6700 001E               1821m         BEQ     ADRREGDIRECTSRC_85   
000019A8                          1822m ADRREGDIRECTDEST_85:
000019A8                          1823mm         PRINTANDEST D3
000019A8  3203                    1824mm         MOVE.W  D3, D1
000019AA  E949                    1825mm         LSL     #$04, D1
000019AC  E049                    1826mm         LSR     #$08, D1
000019AE  EA49                    1827mm         LSR     #$05, D1
000019B0  43F8 00C3               1828mm         LEA     OAN, A1     
000019B4  103C 000E               1829mm         MOVE.B  #14,D0          
000019B8  4E4F                    1830mm         TRAP    #15
000019BA  103C 0003               1831mm         MOVE.B  #3,D0          
000019BE  4E4F                    1832mm         TRAP    #15
000019C0                          1833mm         ENDM
000019C0  6000 0528               1834m         BRA     COMPLETE_85   
000019C4                          1835m ADRREGDIRECTSRC_85:
000019C4                          1836mm         PRINTANSRC D3
000019C4  3203                    1837mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000019C6  E149                    1838mm         LSL     #$08, D1
000019C8  EB49                    1839mm         LSL     #$05, D1
000019CA  E049                    1840mm         LSR     #$08, D1
000019CC  EA49                    1841mm         LSR     #$05, D1
000019CE  43F8 00C3               1842mm         LEA     OAN, A1     
000019D2  103C 000E               1843mm         MOVE.B  #14,D0          
000019D6  4E4F                    1844mm         TRAP    #15
000019D8  103C 0003               1845mm         MOVE.B  #3,D0          
000019DC  4E4F                    1846mm         TRAP    #15
000019DE                          1847mm         ENDM
000019DE  6000 050A               1848m         BRA     COMPLETE_85   
000019E2                          1849m        
000019E2                          1850m ADRREGINDIRECT_85:   
000019E2  BC3C 0001               1851m         CMP.B   #$01, D6
000019E6  6700 0032               1852m         BEQ     ADRREGINDIRECTSRC_85   
000019EA                          1853m ADRREGINDIRECTDEST_85:
000019EA                          1854mm         PRINTLB
000019EA  43F8 00C5               1855mm         LEA     OLB, A1     
000019EE  103C 000E               1856mm         MOVE.B  #14,D0          
000019F2  4E4F                    1857mm         TRAP    #15
000019F4                          1858mm         ENDM
000019F4                          1859mm         PRINTANDEST D3  
000019F4  3203                    1860mm         MOVE.W  D3, D1
000019F6  E949                    1861mm         LSL     #$04, D1
000019F8  E049                    1862mm         LSR     #$08, D1
000019FA  EA49                    1863mm         LSR     #$05, D1
000019FC  43F8 00C3               1864mm         LEA     OAN, A1     
00001A00  103C 000E               1865mm         MOVE.B  #14,D0          
00001A04  4E4F                    1866mm         TRAP    #15
00001A06  103C 0003               1867mm         MOVE.B  #3,D0          
00001A0A  4E4F                    1868mm         TRAP    #15
00001A0C                          1869mm         ENDM
00001A0C                          1870mm         PRINTRB
00001A0C  43F8 00C7               1871mm         LEA     ORB, A1     
00001A10  103C 000E               1872mm         MOVE.B  #14,D0          
00001A14  4E4F                    1873mm         TRAP    #15
00001A16                          1874mm         ENDM
00001A16  6000 04D2               1875m         BRA     COMPLETE_85     
00001A1A                          1876m ADRREGINDIRECTSRC_85:   
00001A1A                          1877mm         PRINTLB
00001A1A  43F8 00C5               1878mm         LEA     OLB, A1     
00001A1E  103C 000E               1879mm         MOVE.B  #14,D0          
00001A22  4E4F                    1880mm         TRAP    #15
00001A24                          1881mm         ENDM
00001A24                          1882mm         PRINTANSRC D3  
00001A24  3203                    1883mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A26  E149                    1884mm         LSL     #$08, D1
00001A28  EB49                    1885mm         LSL     #$05, D1
00001A2A  E049                    1886mm         LSR     #$08, D1
00001A2C  EA49                    1887mm         LSR     #$05, D1
00001A2E  43F8 00C3               1888mm         LEA     OAN, A1     
00001A32  103C 000E               1889mm         MOVE.B  #14,D0          
00001A36  4E4F                    1890mm         TRAP    #15
00001A38  103C 0003               1891mm         MOVE.B  #3,D0          
00001A3C  4E4F                    1892mm         TRAP    #15
00001A3E                          1893mm         ENDM
00001A3E                          1894mm         PRINTRB
00001A3E  43F8 00C7               1895mm         LEA     ORB, A1     
00001A42  103C 000E               1896mm         MOVE.B  #14,D0          
00001A46  4E4F                    1897mm         TRAP    #15
00001A48                          1898mm         ENDM
00001A48  6000 04A0               1899m         BRA     COMPLETE_85   
00001A4C                          1900m         
00001A4C                          1901m ADRREGPOSTINC_85:   
00001A4C  BC3C 0001               1902m         CMP.B   #$01, D6
00001A50  6700 003C               1903m         BEQ     ADRREGPOSTINCSRC_85   
00001A54                          1904m ADRREGPOSTINCDEST_85: 
00001A54                          1905mm         PRINTLB
00001A54  43F8 00C5               1906mm         LEA     OLB, A1     
00001A58  103C 000E               1907mm         MOVE.B  #14,D0          
00001A5C  4E4F                    1908mm         TRAP    #15
00001A5E                          1909mm         ENDM
00001A5E                          1910mm         PRINTANDEST D3  
00001A5E  3203                    1911mm         MOVE.W  D3, D1
00001A60  E949                    1912mm         LSL     #$04, D1
00001A62  E049                    1913mm         LSR     #$08, D1
00001A64  EA49                    1914mm         LSR     #$05, D1
00001A66  43F8 00C3               1915mm         LEA     OAN, A1     
00001A6A  103C 000E               1916mm         MOVE.B  #14,D0          
00001A6E  4E4F                    1917mm         TRAP    #15
00001A70  103C 0003               1918mm         MOVE.B  #3,D0          
00001A74  4E4F                    1919mm         TRAP    #15
00001A76                          1920mm         ENDM
00001A76                          1921mm         PRINTRB
00001A76  43F8 00C7               1922mm         LEA     ORB, A1     
00001A7A  103C 000E               1923mm         MOVE.B  #14,D0          
00001A7E  4E4F                    1924mm         TRAP    #15
00001A80                          1925mm         ENDM
00001A80                          1926mm         PRINTPI
00001A80  43F8 00CE               1927mm         LEA     OPSTINC, A1     
00001A84  103C 000E               1928mm         MOVE.B  #14,D0          
00001A88  4E4F                    1929mm         TRAP    #15
00001A8A                          1930mm         ENDM
00001A8A  6000 045E               1931m         BRA     COMPLETE_85  
00001A8E                          1932m ADRREGPOSTINCSRC_85:           
00001A8E                          1933mm         PRINTLB
00001A8E  43F8 00C5               1934mm         LEA     OLB, A1     
00001A92  103C 000E               1935mm         MOVE.B  #14,D0          
00001A96  4E4F                    1936mm         TRAP    #15
00001A98                          1937mm         ENDM
00001A98                          1938mm         PRINTANSRC D3  
00001A98  3203                    1939mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A9A  E149                    1940mm         LSL     #$08, D1
00001A9C  EB49                    1941mm         LSL     #$05, D1
00001A9E  E049                    1942mm         LSR     #$08, D1
00001AA0  EA49                    1943mm         LSR     #$05, D1
00001AA2  43F8 00C3               1944mm         LEA     OAN, A1     
00001AA6  103C 000E               1945mm         MOVE.B  #14,D0          
00001AAA  4E4F                    1946mm         TRAP    #15
00001AAC  103C 0003               1947mm         MOVE.B  #3,D0          
00001AB0  4E4F                    1948mm         TRAP    #15
00001AB2                          1949mm         ENDM
00001AB2                          1950mm         PRINTRB
00001AB2  43F8 00C7               1951mm         LEA     ORB, A1     
00001AB6  103C 000E               1952mm         MOVE.B  #14,D0          
00001ABA  4E4F                    1953mm         TRAP    #15
00001ABC                          1954mm         ENDM
00001ABC                          1955mm         PRINTPI
00001ABC  43F8 00CE               1956mm         LEA     OPSTINC, A1     
00001AC0  103C 000E               1957mm         MOVE.B  #14,D0          
00001AC4  4E4F                    1958mm         TRAP    #15
00001AC6                          1959mm         ENDM
00001AC6  6000 0422               1960m         BRA     COMPLETE_85  
00001ACA                          1961m         
00001ACA                          1962m ADRREGPREDEC_85: 
00001ACA  BC3C 0001               1963m         CMP.B   #$01, D6
00001ACE  6700 003C               1964m         BEQ     ADRREGPREDECSRC_85   
00001AD2                          1965m ADRREGPREDECDEST_85:
00001AD2                          1966mm         PRINTPD  
00001AD2  43F8 00CC               1967mm         LEA     OPREDEC, A1     
00001AD6  103C 000E               1968mm         MOVE.B  #14,D0          
00001ADA  4E4F                    1969mm         TRAP    #15
00001ADC                          1970mm         ENDM
00001ADC                          1971mm         PRINTLB
00001ADC  43F8 00C5               1972mm         LEA     OLB, A1     
00001AE0  103C 000E               1973mm         MOVE.B  #14,D0          
00001AE4  4E4F                    1974mm         TRAP    #15
00001AE6                          1975mm         ENDM
00001AE6                          1976mm         PRINTANDEST D3  
00001AE6  3203                    1977mm         MOVE.W  D3, D1
00001AE8  E949                    1978mm         LSL     #$04, D1
00001AEA  E049                    1979mm         LSR     #$08, D1
00001AEC  EA49                    1980mm         LSR     #$05, D1
00001AEE  43F8 00C3               1981mm         LEA     OAN, A1     
00001AF2  103C 000E               1982mm         MOVE.B  #14,D0          
00001AF6  4E4F                    1983mm         TRAP    #15
00001AF8  103C 0003               1984mm         MOVE.B  #3,D0          
00001AFC  4E4F                    1985mm         TRAP    #15
00001AFE                          1986mm         ENDM
00001AFE                          1987mm         PRINTRB
00001AFE  43F8 00C7               1988mm         LEA     ORB, A1     
00001B02  103C 000E               1989mm         MOVE.B  #14,D0          
00001B06  4E4F                    1990mm         TRAP    #15
00001B08                          1991mm         ENDM
00001B08  6000 03E0               1992m         BRA     COMPLETE_85   
00001B0C                          1993m ADRREGPREDECSRC_85: 
00001B0C                          1994mm         PRINTPD  
00001B0C  43F8 00CC               1995mm         LEA     OPREDEC, A1     
00001B10  103C 000E               1996mm         MOVE.B  #14,D0          
00001B14  4E4F                    1997mm         TRAP    #15
00001B16                          1998mm         ENDM
00001B16                          1999mm         PRINTLB
00001B16  43F8 00C5               2000mm         LEA     OLB, A1     
00001B1A  103C 000E               2001mm         MOVE.B  #14,D0          
00001B1E  4E4F                    2002mm         TRAP    #15
00001B20                          2003mm         ENDM
00001B20                          2004mm         PRINTANSRC D3  
00001B20  3203                    2005mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B22  E149                    2006mm         LSL     #$08, D1
00001B24  EB49                    2007mm         LSL     #$05, D1
00001B26  E049                    2008mm         LSR     #$08, D1
00001B28  EA49                    2009mm         LSR     #$05, D1
00001B2A  43F8 00C3               2010mm         LEA     OAN, A1     
00001B2E  103C 000E               2011mm         MOVE.B  #14,D0          
00001B32  4E4F                    2012mm         TRAP    #15
00001B34  103C 0003               2013mm         MOVE.B  #3,D0          
00001B38  4E4F                    2014mm         TRAP    #15
00001B3A                          2015mm         ENDM
00001B3A                          2016mm         PRINTRB
00001B3A  43F8 00C7               2017mm         LEA     ORB, A1     
00001B3E  103C 000E               2018mm         MOVE.B  #14,D0          
00001B42  4E4F                    2019mm         TRAP    #15
00001B44                          2020mm         ENDM
00001B44  6000 03A4               2021m         BRA     COMPLETE_85
00001B48                          2022m        
00001B48                          2023m ADRABSOLUTE_85:
00001B48  BC3C 0001               2024m         CMP.B   #$01, D6
00001B4C  6600 0018               2025m         BNE     ADRABSOLUTEDST_85 
00001B50                          2026m         
00001B50  3A03                    2027m         MOVE.W  D3, D5
00001B52  0803 0002               2028m         BTST    #2, D3
00001B56  6600 0024               2029m         BNE     ADRIMMEDIATE_85
00001B5A  0803 0000               2030m         BTST    #0, D3
00001B5E  6600 027A               2031m         BNE     ADRABSOLUTEL_85
00001B62  6000 01DA               2032m         BRA     ADRABSOLUTEW_85
00001B66                          2033m ADRABSOLUTEDST_85:
00001B66  3A03                    2034m         MOVE.W  D3, D5
00001B68  0803 000B               2035m         BTST    #$B, D3
00001B6C  6600 000E               2036m         BNE     ADRIMMEDIATE_85
00001B70  0803 0009               2037m         BTST    #$09, D3
00001B74  6600 0264               2038m         BNE     ADRABSOLUTEL_85
00001B78  6000 01C4               2039m         BRA     ADRABSOLUTEW_85
00001B7C                          2040m ADRIMMEDIATE_85:
00001B7C  BE3C 0001               2041m         CMP.B   #1, D7
00001B80  6700 009E               2042m         BEQ     ADRIMMEDIATEL_85
00001B84                          2043m ADRIMMEDIATEW_85:
00001B84  361A                    2044m         MOVE.W  (A2)+, D3
00001B86                          2045mm         PRINTHASH
00001B86  103C 0006               2046mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B8A  323C 0023               2047mm         MOVE.W  #35, D1     ; AN = SIGN
00001B8E  4E4F                    2048mm         TRAP    #15         ; OUTPUT = SIGN
00001B90                          2049mm         ENDM
00001B90                          2050mm         PRINTSIGN
00001B90  103C 0006               2051mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B94  323C 0024               2052mm         MOVE.W  #36, D1     ; AN = SIGN
00001B98  4E4F                    2053mm         TRAP    #15         ; OUTPUT = SIGN
00001B9A                          2054mm         ENDM
00001B9A                          2055mm         ADROUT
00001B9A  3212                    2056mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001B9C  E049                    2057mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001B9E  E849                    2058mm         LSR.W   #4, D1      
00001BA0                          2059mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BA0  0C01 0009               2060mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BA4  6E00 000A               2061mmm         BGT     ALPHA_115
00001BA8  0601 0030               2062mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BAC  6000 0006               2063mmm         BRA     DONE_115
00001BB0  0601 0037               2064mmm ALPHA_115: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BB4  4E71                    2065mmm DONE_115: NOP
00001BB6                          2066mmm         ENDM
00001BB6  4E4F                    2067mm         TRAP    #15         ; EXECUTE OUTPUT
00001BB8                          2068mm         
00001BB8  3212                    2069mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BBA  E949                    2070mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001BBC  E049                    2071mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BBE  E849                    2072mm         LSR.W   #4, D1      
00001BC0                          2073mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BC0  0C01 0009               2074mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BC4  6E00 000A               2075mmm         BGT     ALPHA_116
00001BC8  0601 0030               2076mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BCC  6000 0006               2077mmm         BRA     DONE_116
00001BD0  0601 0037               2078mmm ALPHA_116: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BD4  4E71                    2079mmm DONE_116: NOP
00001BD6                          2080mmm         ENDM
00001BD6  4E4F                    2081mm         TRAP    #15         ; EXECUTE OUTPUT
00001BD8                          2082mm         
00001BD8  3212                    2083mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BDA  E149                    2084mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BDC  E049                    2085mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BDE  E849                    2086mm         LSR.W   #4, D1      
00001BE0                          2087mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BE0  0C01 0009               2088mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BE4  6E00 000A               2089mmm         BGT     ALPHA_117
00001BE8  0601 0030               2090mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BEC  6000 0006               2091mmm         BRA     DONE_117
00001BF0  0601 0037               2092mmm ALPHA_117: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BF4  4E71                    2093mmm DONE_117: NOP
00001BF6                          2094mmm         ENDM
00001BF6  4E4F                    2095mm         TRAP    #15         ; EXECUTE OUTPUT
00001BF8                          2096mm         
00001BF8  3212                    2097mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BFA  E149                    2098mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BFC  E949                    2099mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001BFE  E049                    2100mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C00  E849                    2101mm         LSR.W   #4, D1      
00001C02                          2102mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C02  0C01 0009               2103mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C06  6E00 000A               2104mmm         BGT     ALPHA_118
00001C0A  0601 0030               2105mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C0E  6000 0006               2106mmm         BRA     DONE_118
00001C12  0601 0037               2107mmm ALPHA_118: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C16  4E71                    2108mmm DONE_118: NOP
00001C18                          2109mmm         ENDM
00001C18  4E4F                    2110mm         TRAP    #15         ; EXECUTE OUTPUT       
00001C1A                          2111mm         ENDM 
00001C1A  3605                    2112m         MOVE.W  D5, D3
00001C1C  6000 02CC               2113m         BRA     COMPLETE_85
00001C20                          2114m ADRIMMEDIATEL_85:
00001C20  361A                    2115m         MOVE.W  (A2)+, D3
00001C22                          2116mm         PRINTHASH
00001C22  103C 0006               2117mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C26  323C 0023               2118mm         MOVE.W  #35, D1     ; AN = SIGN
00001C2A  4E4F                    2119mm         TRAP    #15         ; OUTPUT = SIGN
00001C2C                          2120mm         ENDM
00001C2C                          2121mm         PRINTSIGN
00001C2C  103C 0006               2122mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C30  323C 0024               2123mm         MOVE.W  #36, D1     ; AN = SIGN
00001C34  4E4F                    2124mm         TRAP    #15         ; OUTPUT = SIGN
00001C36                          2125mm         ENDM
00001C36                          2126mm         ADROUT 
00001C36  3212                    2127mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C38  E049                    2128mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C3A  E849                    2129mm         LSR.W   #4, D1      
00001C3C                          2130mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C3C  0C01 0009               2131mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C40  6E00 000A               2132mmm         BGT     ALPHA_122
00001C44  0601 0030               2133mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C48  6000 0006               2134mmm         BRA     DONE_122
00001C4C  0601 0037               2135mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C50  4E71                    2136mmm DONE_122: NOP
00001C52                          2137mmm         ENDM
00001C52  4E4F                    2138mm         TRAP    #15         ; EXECUTE OUTPUT
00001C54                          2139mm         
00001C54  3212                    2140mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C56  E949                    2141mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C58  E049                    2142mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C5A  E849                    2143mm         LSR.W   #4, D1      
00001C5C                          2144mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5C  0C01 0009               2145mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C60  6E00 000A               2146mmm         BGT     ALPHA_123
00001C64  0601 0030               2147mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C68  6000 0006               2148mmm         BRA     DONE_123
00001C6C  0601 0037               2149mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C70  4E71                    2150mmm DONE_123: NOP
00001C72                          2151mmm         ENDM
00001C72  4E4F                    2152mm         TRAP    #15         ; EXECUTE OUTPUT
00001C74                          2153mm         
00001C74  3212                    2154mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C76  E149                    2155mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C78  E049                    2156mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C7A  E849                    2157mm         LSR.W   #4, D1      
00001C7C                          2158mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7C  0C01 0009               2159mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C80  6E00 000A               2160mmm         BGT     ALPHA_124
00001C84  0601 0030               2161mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C88  6000 0006               2162mmm         BRA     DONE_124
00001C8C  0601 0037               2163mmm ALPHA_124: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C90  4E71                    2164mmm DONE_124: NOP
00001C92                          2165mmm         ENDM
00001C92  4E4F                    2166mm         TRAP    #15         ; EXECUTE OUTPUT
00001C94                          2167mm         
00001C94  3212                    2168mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C96  E149                    2169mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C98  E949                    2170mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001C9A  E049                    2171mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9C  E849                    2172mm         LSR.W   #4, D1      
00001C9E                          2173mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9E  0C01 0009               2174mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA2  6E00 000A               2175mmm         BGT     ALPHA_125
00001CA6  0601 0030               2176mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CAA  6000 0006               2177mmm         BRA     DONE_125
00001CAE  0601 0037               2178mmm ALPHA_125: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB2  4E71                    2179mmm DONE_125: NOP
00001CB4                          2180mmm         ENDM
00001CB4  4E4F                    2181mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CB6                          2182mm         ENDM 
00001CB6  361A                    2183m         MOVE.W  (A2)+, D3
00001CB8                          2184mm         ADROUT
00001CB8  3212                    2185mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CBA  E049                    2186mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBC  E849                    2187mm         LSR.W   #4, D1      
00001CBE                          2188mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CBE  0C01 0009               2189mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC2  6E00 000A               2190mmm         BGT     ALPHA_127
00001CC6  0601 0030               2191mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CCA  6000 0006               2192mmm         BRA     DONE_127
00001CCE  0601 0037               2193mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD2  4E71                    2194mmm DONE_127: NOP
00001CD4                          2195mmm         ENDM
00001CD4  4E4F                    2196mm         TRAP    #15         ; EXECUTE OUTPUT
00001CD6                          2197mm         
00001CD6  3212                    2198mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CD8  E949                    2199mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001CDA  E049                    2200mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDC  E849                    2201mm         LSR.W   #4, D1      
00001CDE                          2202mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDE  0C01 0009               2203mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE2  6E00 000A               2204mmm         BGT     ALPHA_128
00001CE6  0601 0030               2205mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CEA  6000 0006               2206mmm         BRA     DONE_128
00001CEE  0601 0037               2207mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF2  4E71                    2208mmm DONE_128: NOP
00001CF4                          2209mmm         ENDM
00001CF4  4E4F                    2210mm         TRAP    #15         ; EXECUTE OUTPUT
00001CF6                          2211mm         
00001CF6  3212                    2212mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CF8  E149                    2213mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CFA  E049                    2214mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFC  E849                    2215mm         LSR.W   #4, D1      
00001CFE                          2216mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFE  0C01 0009               2217mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D02  6E00 000A               2218mmm         BGT     ALPHA_129
00001D06  0601 0030               2219mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D0A  6000 0006               2220mmm         BRA     DONE_129
00001D0E  0601 0037               2221mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D12  4E71                    2222mmm DONE_129: NOP
00001D14                          2223mmm         ENDM
00001D14  4E4F                    2224mm         TRAP    #15         ; EXECUTE OUTPUT
00001D16                          2225mm         
00001D16  3212                    2226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D18  E149                    2227mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D1A  E949                    2228mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D1C  E049                    2229mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1E  E849                    2230mm         LSR.W   #4, D1      
00001D20                          2231mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D20  0C01 0009               2232mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D24  6E00 000A               2233mmm         BGT     ALPHA_130
00001D28  0601 0030               2234mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2C  6000 0006               2235mmm         BRA     DONE_130
00001D30  0601 0037               2236mmm ALPHA_130: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D34  4E71                    2237mmm DONE_130: NOP
00001D36                          2238mmm         ENDM
00001D36  4E4F                    2239mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D38                          2240mm         ENDM 
00001D38  3605                    2241m         MOVE.W  D5, D3
00001D3A  6000 01AE               2242m         BRA     COMPLETE_85 
00001D3E                          2243m ADRABSOLUTEW_85:     
00001D3E  361A                    2244m         MOVE.W  (A2)+, D3
00001D40                          2245mm         PRINTSIGN
00001D40  103C 0006               2246mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D44  323C 0024               2247mm         MOVE.W  #36, D1     ; AN = SIGN
00001D48  4E4F                    2248mm         TRAP    #15         ; OUTPUT = SIGN
00001D4A                          2249mm         ENDM
00001D4A                          2250mm         PRINTSIGN
00001D4A  103C 0006               2251mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D4E  323C 0024               2252mm         MOVE.W  #36, D1     ; AN = SIGN
00001D52  4E4F                    2253mm         TRAP    #15         ; OUTPUT = SIGN
00001D54                          2254mm         ENDM
00001D54                          2255mm         ADROUT
00001D54  3212                    2256mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D56  E049                    2257mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D58  E849                    2258mm         LSR.W   #4, D1      
00001D5A                          2259mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D5A  0C01 0009               2260mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D5E  6E00 000A               2261mmm         BGT     ALPHA_134
00001D62  0601 0030               2262mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D66  6000 0006               2263mmm         BRA     DONE_134
00001D6A  0601 0037               2264mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D6E  4E71                    2265mmm DONE_134: NOP
00001D70                          2266mmm         ENDM
00001D70  4E4F                    2267mm         TRAP    #15         ; EXECUTE OUTPUT
00001D72                          2268mm         
00001D72  3212                    2269mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D74  E949                    2270mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D76  E049                    2271mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D78  E849                    2272mm         LSR.W   #4, D1      
00001D7A                          2273mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D7A  0C01 0009               2274mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D7E  6E00 000A               2275mmm         BGT     ALPHA_135
00001D82  0601 0030               2276mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D86  6000 0006               2277mmm         BRA     DONE_135
00001D8A  0601 0037               2278mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D8E  4E71                    2279mmm DONE_135: NOP
00001D90                          2280mmm         ENDM
00001D90  4E4F                    2281mm         TRAP    #15         ; EXECUTE OUTPUT
00001D92                          2282mm         
00001D92  3212                    2283mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D94  E149                    2284mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D96  E049                    2285mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D98  E849                    2286mm         LSR.W   #4, D1      
00001D9A                          2287mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D9A  0C01 0009               2288mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D9E  6E00 000A               2289mmm         BGT     ALPHA_136
00001DA2  0601 0030               2290mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DA6  6000 0006               2291mmm         BRA     DONE_136
00001DAA  0601 0037               2292mmm ALPHA_136: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DAE  4E71                    2293mmm DONE_136: NOP
00001DB0                          2294mmm         ENDM
00001DB0  4E4F                    2295mm         TRAP    #15         ; EXECUTE OUTPUT
00001DB2                          2296mm         
00001DB2  3212                    2297mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DB4  E149                    2298mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DB6  E949                    2299mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DB8  E049                    2300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DBA  E849                    2301mm         LSR.W   #4, D1      
00001DBC                          2302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DBC  0C01 0009               2303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DC0  6E00 000A               2304mmm         BGT     ALPHA_137
00001DC4  0601 0030               2305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DC8  6000 0006               2306mmm         BRA     DONE_137
00001DCC  0601 0037               2307mmm ALPHA_137: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DD0  4E71                    2308mmm DONE_137: NOP
00001DD2                          2309mmm         ENDM
00001DD2  4E4F                    2310mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DD4                          2311mm         ENDM 
00001DD4  3605                    2312m         MOVE.W  D5, D3
00001DD6  6000 0112               2313m         BRA     COMPLETE_85  
00001DDA                          2314m ADRABSOLUTEL_85:  
00001DDA  361A                    2315m         MOVE.W  (A2)+, D3
00001DDC                          2316mm         PRINTSIGN
00001DDC  103C 0006               2317mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001DE0  323C 0024               2318mm         MOVE.W  #36, D1     ; AN = SIGN
00001DE4  4E4F                    2319mm         TRAP    #15         ; OUTPUT = SIGN
00001DE6                          2320mm         ENDM
00001DE6                          2321mm         ADROUT 
00001DE6  3212                    2322mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DE8  E049                    2323mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DEA  E849                    2324mm         LSR.W   #4, D1      
00001DEC                          2325mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DEC  0C01 0009               2326mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DF0  6E00 000A               2327mmm         BGT     ALPHA_140
00001DF4  0601 0030               2328mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DF8  6000 0006               2329mmm         BRA     DONE_140
00001DFC  0601 0037               2330mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E00  4E71                    2331mmm DONE_140: NOP
00001E02                          2332mmm         ENDM
00001E02  4E4F                    2333mm         TRAP    #15         ; EXECUTE OUTPUT
00001E04                          2334mm         
00001E04  3212                    2335mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E06  E949                    2336mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E08  E049                    2337mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E0A  E849                    2338mm         LSR.W   #4, D1      
00001E0C                          2339mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E0C  0C01 0009               2340mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E10  6E00 000A               2341mmm         BGT     ALPHA_141
00001E14  0601 0030               2342mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E18  6000 0006               2343mmm         BRA     DONE_141
00001E1C  0601 0037               2344mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E20  4E71                    2345mmm DONE_141: NOP
00001E22                          2346mmm         ENDM
00001E22  4E4F                    2347mm         TRAP    #15         ; EXECUTE OUTPUT
00001E24                          2348mm         
00001E24  3212                    2349mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E26  E149                    2350mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E28  E049                    2351mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E2A  E849                    2352mm         LSR.W   #4, D1      
00001E2C                          2353mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E2C  0C01 0009               2354mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E30  6E00 000A               2355mmm         BGT     ALPHA_142
00001E34  0601 0030               2356mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E38  6000 0006               2357mmm         BRA     DONE_142
00001E3C  0601 0037               2358mmm ALPHA_142: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E40  4E71                    2359mmm DONE_142: NOP
00001E42                          2360mmm         ENDM
00001E42  4E4F                    2361mm         TRAP    #15         ; EXECUTE OUTPUT
00001E44                          2362mm         
00001E44  3212                    2363mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E46  E149                    2364mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E48  E949                    2365mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E4A  E049                    2366mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E4C  E849                    2367mm         LSR.W   #4, D1      
00001E4E                          2368mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E4E  0C01 0009               2369mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E52  6E00 000A               2370mmm         BGT     ALPHA_143
00001E56  0601 0030               2371mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E5A  6000 0006               2372mmm         BRA     DONE_143
00001E5E  0601 0037               2373mmm ALPHA_143: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E62  4E71                    2374mmm DONE_143: NOP
00001E64                          2375mmm         ENDM
00001E64  4E4F                    2376mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E66                          2377mm         ENDM 
00001E66  361A                    2378m         MOVE.W  (A2)+, D3
00001E68                          2379mm         ADROUT
00001E68  3212                    2380mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E6A  E049                    2381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E6C  E849                    2382mm         LSR.W   #4, D1      
00001E6E                          2383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E6E  0C01 0009               2384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E72  6E00 000A               2385mmm         BGT     ALPHA_145
00001E76  0601 0030               2386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E7A  6000 0006               2387mmm         BRA     DONE_145
00001E7E  0601 0037               2388mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E82  4E71                    2389mmm DONE_145: NOP
00001E84                          2390mmm         ENDM
00001E84  4E4F                    2391mm         TRAP    #15         ; EXECUTE OUTPUT
00001E86                          2392mm         
00001E86  3212                    2393mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E88  E949                    2394mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E8A  E049                    2395mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E8C  E849                    2396mm         LSR.W   #4, D1      
00001E8E                          2397mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E8E  0C01 0009               2398mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E92  6E00 000A               2399mmm         BGT     ALPHA_146
00001E96  0601 0030               2400mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E9A  6000 0006               2401mmm         BRA     DONE_146
00001E9E  0601 0037               2402mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EA2  4E71                    2403mmm DONE_146: NOP
00001EA4                          2404mmm         ENDM
00001EA4  4E4F                    2405mm         TRAP    #15         ; EXECUTE OUTPUT
00001EA6                          2406mm         
00001EA6  3212                    2407mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EA8  E149                    2408mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EAA  E049                    2409mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EAC  E849                    2410mm         LSR.W   #4, D1      
00001EAE                          2411mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EAE  0C01 0009               2412mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EB2  6E00 000A               2413mmm         BGT     ALPHA_147
00001EB6  0601 0030               2414mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EBA  6000 0006               2415mmm         BRA     DONE_147
00001EBE  0601 0037               2416mmm ALPHA_147: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EC2  4E71                    2417mmm DONE_147: NOP
00001EC4                          2418mmm         ENDM
00001EC4  4E4F                    2419mm         TRAP    #15         ; EXECUTE OUTPUT
00001EC6                          2420mm         
00001EC6  3212                    2421mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EC8  E149                    2422mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001ECA  E949                    2423mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001ECC  E049                    2424mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001ECE  E849                    2425mm         LSR.W   #4, D1      
00001ED0                          2426mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001ED0  0C01 0009               2427mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001ED4  6E00 000A               2428mmm         BGT     ALPHA_148
00001ED8  0601 0030               2429mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EDC  6000 0006               2430mmm         BRA     DONE_148
00001EE0  0601 0037               2431mmm ALPHA_148: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EE4  4E71                    2432mmm DONE_148: NOP
00001EE6                          2433mmm         ENDM
00001EE6  4E4F                    2434mm         TRAP    #15         ; EXECUTE OUTPUT       
00001EE8                          2435mm         ENDM 
00001EE8  3605                    2436m         MOVE.W  D5, D3
00001EEA                          2437m 
00001EEA                          2438m COMPLETE_85:  ; OPCODE HAS BEEN VERIFIED
00001EEA                          2439m         ENDM
00001EEA  4E75                    2440          RTS                 ; Return from decodeMOVE subroutine
00001EEC                          2441  
00001EEC                          2442  
00001EEC                          2443  ; ------------------------------------------------------------
00001EEC                          2444  ; 3. "decodeMOVEM" subroutine
00001EEC                          2445  ; AUTHOR
00001EEC                          2446  ;
00001EEC                          2447  ; TODO: DESCRIPTION
00001EEC                          2448  ; ------------------------------------------------------------
00001EEC                          2449  decodeMOVEM:
00001EEC                          2450m         verifyOpcode    pMOVEM, (A2)
00001EEC  43F8 00F6               2451m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001EF0  3612                    2452m         MOVE.W  (A2), D3      ; INPUT VALUE
00001EF2  123C 000F               2453m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001EF6                          2454m         
00001EF6                          2455m LOOP_149: 
00001EF6  0C11 0030               2456m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001EFA  6700 000E               2457m         BEQ     CHECKFOR0_149
00001EFE  0C11 0031               2458m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F02  6700 0010               2459m         BEQ     CHECKFOR1_149
00001F06  6000 0012               2460m         BRA     NEXT_149      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001F0A                          2461m         
00001F0A                          2462m CHECKFOR0_149: 
00001F0A  0303                    2463m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F0C  6600 4C42               2464m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F10  6000 0008               2465m         BRA     NEXT_149
00001F14                          2466m 
00001F14                          2467m CHECKFOR1_149:
00001F14  0303                    2468m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F16  6700 4C38               2469m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F1A                          2470m 
00001F1A                          2471m NEXT_149: 
00001F1A  B23C 0000               2472m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F1E  6700 0008               2473m         BEQ     COMPLETE_149  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F22  5301                    2474m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F24  1819                    2475m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F26  60CE                    2476m         BRA     LOOP_149      ; BEGIN LOOP AGAIN
00001F28                          2477m 
00001F28                          2478m COMPLETE_149:  ; OPCODE HAS BEEN VERIFIED
00001F28                          2479m         ENDM
00001F28                          2480          ; put code here
00001F28  4E75                    2481          RTS                 ; Return from decodeMOVEM subroutine
00001F2A                          2482  
00001F2A                          2483  
00001F2A                          2484  ; ------------------------------------------------------------
00001F2A                          2485  ; 4. "decodeADD" subroutine
00001F2A                          2486  ; AUTHOR
00001F2A                          2487  ;
00001F2A                          2488  ; TODO: DESCRIPTION
00001F2A                          2489  ; ------------------------------------------------------------
00001F2A                          2490  decodeADD:
00001F2A                          2491m         verifyOpcode    pADD, (A2)
00001F2A  43F8 0107               2492m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001F2E  3612                    2493m         MOVE.W  (A2), D3      ; INPUT VALUE
00001F30  123C 000F               2494m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001F34                          2495m         
00001F34                          2496m LOOP_150: 
00001F34  0C11 0030               2497m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001F38  6700 000E               2498m         BEQ     CHECKFOR0_150
00001F3C  0C11 0031               2499m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F40  6700 0010               2500m         BEQ     CHECKFOR1_150
00001F44  6000 0012               2501m         BRA     NEXT_150      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001F48                          2502m         
00001F48                          2503m CHECKFOR0_150: 
00001F48  0303                    2504m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F4A  6600 4C04               2505m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F4E  6000 0008               2506m         BRA     NEXT_150
00001F52                          2507m 
00001F52                          2508m CHECKFOR1_150:
00001F52  0303                    2509m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F54  6700 4BFA               2510m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F58                          2511m 
00001F58                          2512m NEXT_150: 
00001F58  B23C 0000               2513m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F5C  6700 0008               2514m         BEQ     COMPLETE_150  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F60  5301                    2515m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F62  1819                    2516m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F64  60CE                    2517m         BRA     LOOP_150      ; BEGIN LOOP AGAIN
00001F66                          2518m 
00001F66                          2519m COMPLETE_150:  ; OPCODE HAS BEEN VERIFIED
00001F66                          2520m         ENDM
00001F66  43F8 006F               2521          LEA     oADD, A1     
00001F6A  103C 000E               2522          MOVE.B  #14,D0          
00001F6E  4E4F                    2523          TRAP    #15
00001F70                          2524m         printOpMode     (A2)
00001F70  3612                    2525m         MOVE.W  (A2), D3      
00001F72  123C 0008               2526m         MOVE.B  #8, D1    
00001F76  4246                    2527m         CLR     D6
00001F78                          2528m CHECKFORDESTDN_151: 
00001F78  0303                    2529m         BTST    D1, D3      
00001F7A  6600 0048               2530m         BNE     CHECKFORSRCDN_151
00001F7E  4EB9 0000204E           2531m         JSR     NEXT_151
00001F84  1C3C 0001               2532m         MOVE.B  #$1, D6
00001F88  0303                    2533m         BTST    D1, D3      
00001F8A  6700 0010               2534m         BEQ     DESTDNW_151
00001F8E                          2535m DESTDNL_151:        
00001F8E  43F8 00BD               2536m         LEA     OLSIZE, A1     
00001F92  103C 000E               2537m         MOVE.B  #14,D0          
00001F96  4E4F                    2538m         TRAP    #15
00001F98  6000 00B8               2539m         BRA     COMPLETE_151 
00001F9C                          2540m DESTDNW_151: 
00001F9C  4EB9 0000204E           2541m         JSR     NEXT_151
00001FA2  0303                    2542m         BTST    D1, D3      
00001FA4  6700 0010               2543m         BEQ     DESTDNB_151
00001FA8  43F8 00B9               2544m         LEA     OWSIZE, A1     
00001FAC  103C 000E               2545m         MOVE.B  #14,D0          
00001FB0  4E4F                    2546m         TRAP    #15
00001FB2  6000 009E               2547m         BRA     COMPLETE_151 
00001FB6                          2548m DESTDNB_151: 
00001FB6  43F8 00B5               2549m         LEA     OBSIZE, A1     
00001FBA  103C 000E               2550m         MOVE.B  #14,D0          
00001FBE  4E4F                    2551m         TRAP    #15
00001FC0  6000 0090               2552m         BRA     COMPLETE_151 
00001FC4                          2553m CHECKFORSRCDN_151: 
00001FC4  4EB9 0000204E           2554m         JSR     NEXT_151
00001FCA  0303                    2555m         BTST    D1, D3      
00001FCC  6700 0028               2556m         BEQ     SRCDNW_151
00001FD0                          2557m SRCDNL_151:        
00001FD0  43F8 00BD               2558m         LEA     OLSIZE, A1     
00001FD4  103C 000E               2559m         MOVE.B  #14,D0          
00001FD8  4E4F                    2560m         TRAP    #15
00001FDA                          2561mm         PRINTDNDEST D3
00001FDA  3203                    2562mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001FDC  E949                    2563mm         LSL     #$04, D1
00001FDE  E049                    2564mm         LSR     #$08, D1
00001FE0  EA49                    2565mm         LSR     #$05, D1
00001FE2  43F8 00C1               2566mm         LEA     ODN, A1     
00001FE6  103C 000E               2567mm         MOVE.B  #14,D0          
00001FEA  4E4F                    2568mm         TRAP    #15
00001FEC  103C 0003               2569mm         MOVE.B  #3,D0          
00001FF0  4E4F                    2570mm         TRAP    #15
00001FF2                          2571mm         ENDM
00001FF2  6000 005E               2572m         BRA     COMPLETE_151 
00001FF6                          2573m SRCDNW_151:
00001FF6  4EB9 0000204E           2574m         JSR     NEXT_151
00001FFC  0303                    2575m         BTST    D1, D3     
00001FFE  6700 0028               2576m         BEQ     SRCDNB_151
00002002  43F8 00B9               2577m         LEA     OWSIZE, A1     
00002006  103C 000E               2578m         MOVE.B  #14,D0          
0000200A  4E4F                    2579m         TRAP    #15
0000200C                          2580mm         PRINTDNDEST D3
0000200C  3203                    2581mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000200E  E949                    2582mm         LSL     #$04, D1
00002010  E049                    2583mm         LSR     #$08, D1
00002012  EA49                    2584mm         LSR     #$05, D1
00002014  43F8 00C1               2585mm         LEA     ODN, A1     
00002018  103C 000E               2586mm         MOVE.B  #14,D0          
0000201C  4E4F                    2587mm         TRAP    #15
0000201E  103C 0003               2588mm         MOVE.B  #3,D0          
00002022  4E4F                    2589mm         TRAP    #15
00002024                          2590mm         ENDM
00002024  6000 002C               2591m         BRA     COMPLETE_151 
00002028                          2592m SRCDNB_151: 
00002028  43F8 00B5               2593m         LEA     OBSIZE, A1     
0000202C  103C 000E               2594m         MOVE.B  #14,D0          
00002030  4E4F                    2595m         TRAP    #15
00002032                          2596mm         PRINTDNDEST D3
00002032  3203                    2597mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002034  E949                    2598mm         LSL     #$04, D1
00002036  E049                    2599mm         LSR     #$08, D1
00002038  EA49                    2600mm         LSR     #$05, D1
0000203A  43F8 00C1               2601mm         LEA     ODN, A1     
0000203E  103C 000E               2602mm         MOVE.B  #14,D0          
00002042  4E4F                    2603mm         TRAP    #15
00002044  103C 0003               2604mm         MOVE.B  #3,D0          
00002048  4E4F                    2605mm         TRAP    #15
0000204A                          2606mm         ENDM
0000204A  6000 0006               2607m         BRA     COMPLETE_151 
0000204E                          2608m 
0000204E                          2609m NEXT_151:
0000204E  5301                    2610m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002050  4E75                    2611m         RTS                
00002052                          2612m 
00002052                          2613m COMPLETE_151:  ; OPCODE HAS BEEN VERIFIED
00002052                          2614m         ENDM
00002052  BC3C 0001               2615          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002056  6700 05EA               2616          BEQ     decodeAddDestOp
0000205A                          2617m         printComma
0000205A  43F8 00C9               2618m         LEA     OCOMMA, A1     
0000205E  103C 000E               2619m         MOVE.B  #14,D0          
00002062  4E4F                    2620m         TRAP    #15
00002064                          2621m         ENDM
00002064                          2622m         prepareAdrMode  #$0, (A2)
00002064  3C3C 0000               2623m         MOVE.W  #$0, D6      ; INPUT VALUE
00002068  3212                    2624m         MOVE.W  (A2), D1
0000206A  BC3C 0001               2625m         CMP.B   #$01, D6
0000206E  6700 000C               2626m         BEQ     ADRSOURCE_156    
00002072                          2627m ADRDEST_156:
00002072  EF49                    2628m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002074  E049                    2629m         LSR     #$08, D1
00002076  EA49                    2630m         LSR     #$05, D1
00002078  6000 000A               2631m         BRA     COMPLETE_156 
0000207C                          2632m ADRSOURCE_156:                
0000207C  E149                    2633m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000207E  E549                    2634m         LSL     #$02, D1
00002080  E049                    2635m         LSR     #$08, D1
00002082  EA49                    2636m         LSR     #$05, D1
00002084                          2637m COMPLETE_156:  ; OPCODE HAS BEEN VERIFIED
00002084                          2638m         ENDM        
00002084                          2639m         decodeAdrMode   (A2), D1
00002084  3612                    2640m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002086  3201                    2641m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002088                          2642m 
00002088  B23C 0001               2643m         CMP.B   #$01, D1
0000208C  6700 0066               2644m         BEQ     ADRREGDIRECT_157    
00002090  B23C 0002               2645m         CMP.B   #$02, D1
00002094  6700 00A0               2646m         BEQ     ADRREGINDIRECT_157  
00002098  B23C 0003               2647m         CMP.B   #$03, D1
0000209C  6700 0102               2648m         BEQ     ADRREGPOSTINC_157  
000020A0  B23C 0004               2649m         CMP.B   #$04, D1
000020A4  6700 0178               2650m         BEQ     ADRREGPREDEC_157
000020A8  B23C 0007               2651m         CMP.B   #$07, D1
000020AC  6700 01EE               2652m         BEQ     ADRABSOLUTE_157    
000020B0                          2653m         
000020B0                          2654m DATAREGDIRECT_157: 
000020B0  BC3C 0001               2655m         CMP.B   #$01, D6
000020B4  6700 001E               2656m         BEQ     DATAREGDIRECTSRC_157   
000020B8                          2657m DATAREGDIRECTDEST_157: 
000020B8                          2658mm         PRINTDNDEST D3 
000020B8  3203                    2659mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020BA  E949                    2660mm         LSL     #$04, D1
000020BC  E049                    2661mm         LSR     #$08, D1
000020BE  EA49                    2662mm         LSR     #$05, D1
000020C0  43F8 00C1               2663mm         LEA     ODN, A1     
000020C4  103C 000E               2664mm         MOVE.B  #14,D0          
000020C8  4E4F                    2665mm         TRAP    #15
000020CA  103C 0003               2666mm         MOVE.B  #3,D0          
000020CE  4E4F                    2667mm         TRAP    #15
000020D0                          2668mm         ENDM
000020D0  6000 056C               2669m         BRA     COMPLETE_157 
000020D4                          2670m DATAREGDIRECTSRC_157: 
000020D4                          2671mm         PRINTDNSRC D3 
000020D4  4281                    2672mm         CLR.L   D1
000020D6  3203                    2673mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000020D8  E149                    2674mm         LSL     #$08, D1
000020DA  EB49                    2675mm         LSL     #$05, D1
000020DC  E049                    2676mm         LSR     #$08, D1
000020DE  EA49                    2677mm         LSR     #$05, D1
000020E0  43F8 00C1               2678mm         LEA     ODN, A1     
000020E4  103C 000E               2679mm         MOVE.B  #14,D0          
000020E8  4E4F                    2680mm         TRAP    #15
000020EA  103C 0003               2681mm         MOVE.B  #3,D0          
000020EE  4E4F                    2682mm         TRAP    #15
000020F0                          2683mm         ENDM
000020F0  6000 054C               2684m         BRA     COMPLETE_157   
000020F4                          2685m         
000020F4                          2686m ADRREGDIRECT_157: 
000020F4  BC3C 0001               2687m         CMP.B   #$01, D6
000020F8  6700 001E               2688m         BEQ     ADRREGDIRECTSRC_157   
000020FC                          2689m ADRREGDIRECTDEST_157:
000020FC                          2690mm         PRINTANDEST D3
000020FC  3203                    2691mm         MOVE.W  D3, D1
000020FE  E949                    2692mm         LSL     #$04, D1
00002100  E049                    2693mm         LSR     #$08, D1
00002102  EA49                    2694mm         LSR     #$05, D1
00002104  43F8 00C3               2695mm         LEA     OAN, A1     
00002108  103C 000E               2696mm         MOVE.B  #14,D0          
0000210C  4E4F                    2697mm         TRAP    #15
0000210E  103C 0003               2698mm         MOVE.B  #3,D0          
00002112  4E4F                    2699mm         TRAP    #15
00002114                          2700mm         ENDM
00002114  6000 0528               2701m         BRA     COMPLETE_157   
00002118                          2702m ADRREGDIRECTSRC_157:
00002118                          2703mm         PRINTANSRC D3
00002118  3203                    2704mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000211A  E149                    2705mm         LSL     #$08, D1
0000211C  EB49                    2706mm         LSL     #$05, D1
0000211E  E049                    2707mm         LSR     #$08, D1
00002120  EA49                    2708mm         LSR     #$05, D1
00002122  43F8 00C3               2709mm         LEA     OAN, A1     
00002126  103C 000E               2710mm         MOVE.B  #14,D0          
0000212A  4E4F                    2711mm         TRAP    #15
0000212C  103C 0003               2712mm         MOVE.B  #3,D0          
00002130  4E4F                    2713mm         TRAP    #15
00002132                          2714mm         ENDM
00002132  6000 050A               2715m         BRA     COMPLETE_157   
00002136                          2716m        
00002136                          2717m ADRREGINDIRECT_157:   
00002136  BC3C 0001               2718m         CMP.B   #$01, D6
0000213A  6700 0032               2719m         BEQ     ADRREGINDIRECTSRC_157   
0000213E                          2720m ADRREGINDIRECTDEST_157:
0000213E                          2721mm         PRINTLB
0000213E  43F8 00C5               2722mm         LEA     OLB, A1     
00002142  103C 000E               2723mm         MOVE.B  #14,D0          
00002146  4E4F                    2724mm         TRAP    #15
00002148                          2725mm         ENDM
00002148                          2726mm         PRINTANDEST D3  
00002148  3203                    2727mm         MOVE.W  D3, D1
0000214A  E949                    2728mm         LSL     #$04, D1
0000214C  E049                    2729mm         LSR     #$08, D1
0000214E  EA49                    2730mm         LSR     #$05, D1
00002150  43F8 00C3               2731mm         LEA     OAN, A1     
00002154  103C 000E               2732mm         MOVE.B  #14,D0          
00002158  4E4F                    2733mm         TRAP    #15
0000215A  103C 0003               2734mm         MOVE.B  #3,D0          
0000215E  4E4F                    2735mm         TRAP    #15
00002160                          2736mm         ENDM
00002160                          2737mm         PRINTRB
00002160  43F8 00C7               2738mm         LEA     ORB, A1     
00002164  103C 000E               2739mm         MOVE.B  #14,D0          
00002168  4E4F                    2740mm         TRAP    #15
0000216A                          2741mm         ENDM
0000216A  6000 04D2               2742m         BRA     COMPLETE_157     
0000216E                          2743m ADRREGINDIRECTSRC_157:   
0000216E                          2744mm         PRINTLB
0000216E  43F8 00C5               2745mm         LEA     OLB, A1     
00002172  103C 000E               2746mm         MOVE.B  #14,D0          
00002176  4E4F                    2747mm         TRAP    #15
00002178                          2748mm         ENDM
00002178                          2749mm         PRINTANSRC D3  
00002178  3203                    2750mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000217A  E149                    2751mm         LSL     #$08, D1
0000217C  EB49                    2752mm         LSL     #$05, D1
0000217E  E049                    2753mm         LSR     #$08, D1
00002180  EA49                    2754mm         LSR     #$05, D1
00002182  43F8 00C3               2755mm         LEA     OAN, A1     
00002186  103C 000E               2756mm         MOVE.B  #14,D0          
0000218A  4E4F                    2757mm         TRAP    #15
0000218C  103C 0003               2758mm         MOVE.B  #3,D0          
00002190  4E4F                    2759mm         TRAP    #15
00002192                          2760mm         ENDM
00002192                          2761mm         PRINTRB
00002192  43F8 00C7               2762mm         LEA     ORB, A1     
00002196  103C 000E               2763mm         MOVE.B  #14,D0          
0000219A  4E4F                    2764mm         TRAP    #15
0000219C                          2765mm         ENDM
0000219C  6000 04A0               2766m         BRA     COMPLETE_157   
000021A0                          2767m         
000021A0                          2768m ADRREGPOSTINC_157:   
000021A0  BC3C 0001               2769m         CMP.B   #$01, D6
000021A4  6700 003C               2770m         BEQ     ADRREGPOSTINCSRC_157   
000021A8                          2771m ADRREGPOSTINCDEST_157: 
000021A8                          2772mm         PRINTLB
000021A8  43F8 00C5               2773mm         LEA     OLB, A1     
000021AC  103C 000E               2774mm         MOVE.B  #14,D0          
000021B0  4E4F                    2775mm         TRAP    #15
000021B2                          2776mm         ENDM
000021B2                          2777mm         PRINTANDEST D3  
000021B2  3203                    2778mm         MOVE.W  D3, D1
000021B4  E949                    2779mm         LSL     #$04, D1
000021B6  E049                    2780mm         LSR     #$08, D1
000021B8  EA49                    2781mm         LSR     #$05, D1
000021BA  43F8 00C3               2782mm         LEA     OAN, A1     
000021BE  103C 000E               2783mm         MOVE.B  #14,D0          
000021C2  4E4F                    2784mm         TRAP    #15
000021C4  103C 0003               2785mm         MOVE.B  #3,D0          
000021C8  4E4F                    2786mm         TRAP    #15
000021CA                          2787mm         ENDM
000021CA                          2788mm         PRINTRB
000021CA  43F8 00C7               2789mm         LEA     ORB, A1     
000021CE  103C 000E               2790mm         MOVE.B  #14,D0          
000021D2  4E4F                    2791mm         TRAP    #15
000021D4                          2792mm         ENDM
000021D4                          2793mm         PRINTPI
000021D4  43F8 00CE               2794mm         LEA     OPSTINC, A1     
000021D8  103C 000E               2795mm         MOVE.B  #14,D0          
000021DC  4E4F                    2796mm         TRAP    #15
000021DE                          2797mm         ENDM
000021DE  6000 045E               2798m         BRA     COMPLETE_157  
000021E2                          2799m ADRREGPOSTINCSRC_157:           
000021E2                          2800mm         PRINTLB
000021E2  43F8 00C5               2801mm         LEA     OLB, A1     
000021E6  103C 000E               2802mm         MOVE.B  #14,D0          
000021EA  4E4F                    2803mm         TRAP    #15
000021EC                          2804mm         ENDM
000021EC                          2805mm         PRINTANSRC D3  
000021EC  3203                    2806mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021EE  E149                    2807mm         LSL     #$08, D1
000021F0  EB49                    2808mm         LSL     #$05, D1
000021F2  E049                    2809mm         LSR     #$08, D1
000021F4  EA49                    2810mm         LSR     #$05, D1
000021F6  43F8 00C3               2811mm         LEA     OAN, A1     
000021FA  103C 000E               2812mm         MOVE.B  #14,D0          
000021FE  4E4F                    2813mm         TRAP    #15
00002200  103C 0003               2814mm         MOVE.B  #3,D0          
00002204  4E4F                    2815mm         TRAP    #15
00002206                          2816mm         ENDM
00002206                          2817mm         PRINTRB
00002206  43F8 00C7               2818mm         LEA     ORB, A1     
0000220A  103C 000E               2819mm         MOVE.B  #14,D0          
0000220E  4E4F                    2820mm         TRAP    #15
00002210                          2821mm         ENDM
00002210                          2822mm         PRINTPI
00002210  43F8 00CE               2823mm         LEA     OPSTINC, A1     
00002214  103C 000E               2824mm         MOVE.B  #14,D0          
00002218  4E4F                    2825mm         TRAP    #15
0000221A                          2826mm         ENDM
0000221A  6000 0422               2827m         BRA     COMPLETE_157  
0000221E                          2828m         
0000221E                          2829m ADRREGPREDEC_157: 
0000221E  BC3C 0001               2830m         CMP.B   #$01, D6
00002222  6700 003C               2831m         BEQ     ADRREGPREDECSRC_157   
00002226                          2832m ADRREGPREDECDEST_157:
00002226                          2833mm         PRINTPD  
00002226  43F8 00CC               2834mm         LEA     OPREDEC, A1     
0000222A  103C 000E               2835mm         MOVE.B  #14,D0          
0000222E  4E4F                    2836mm         TRAP    #15
00002230                          2837mm         ENDM
00002230                          2838mm         PRINTLB
00002230  43F8 00C5               2839mm         LEA     OLB, A1     
00002234  103C 000E               2840mm         MOVE.B  #14,D0          
00002238  4E4F                    2841mm         TRAP    #15
0000223A                          2842mm         ENDM
0000223A                          2843mm         PRINTANDEST D3  
0000223A  3203                    2844mm         MOVE.W  D3, D1
0000223C  E949                    2845mm         LSL     #$04, D1
0000223E  E049                    2846mm         LSR     #$08, D1
00002240  EA49                    2847mm         LSR     #$05, D1
00002242  43F8 00C3               2848mm         LEA     OAN, A1     
00002246  103C 000E               2849mm         MOVE.B  #14,D0          
0000224A  4E4F                    2850mm         TRAP    #15
0000224C  103C 0003               2851mm         MOVE.B  #3,D0          
00002250  4E4F                    2852mm         TRAP    #15
00002252                          2853mm         ENDM
00002252                          2854mm         PRINTRB
00002252  43F8 00C7               2855mm         LEA     ORB, A1     
00002256  103C 000E               2856mm         MOVE.B  #14,D0          
0000225A  4E4F                    2857mm         TRAP    #15
0000225C                          2858mm         ENDM
0000225C  6000 03E0               2859m         BRA     COMPLETE_157   
00002260                          2860m ADRREGPREDECSRC_157: 
00002260                          2861mm         PRINTPD  
00002260  43F8 00CC               2862mm         LEA     OPREDEC, A1     
00002264  103C 000E               2863mm         MOVE.B  #14,D0          
00002268  4E4F                    2864mm         TRAP    #15
0000226A                          2865mm         ENDM
0000226A                          2866mm         PRINTLB
0000226A  43F8 00C5               2867mm         LEA     OLB, A1     
0000226E  103C 000E               2868mm         MOVE.B  #14,D0          
00002272  4E4F                    2869mm         TRAP    #15
00002274                          2870mm         ENDM
00002274                          2871mm         PRINTANSRC D3  
00002274  3203                    2872mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002276  E149                    2873mm         LSL     #$08, D1
00002278  EB49                    2874mm         LSL     #$05, D1
0000227A  E049                    2875mm         LSR     #$08, D1
0000227C  EA49                    2876mm         LSR     #$05, D1
0000227E  43F8 00C3               2877mm         LEA     OAN, A1     
00002282  103C 000E               2878mm         MOVE.B  #14,D0          
00002286  4E4F                    2879mm         TRAP    #15
00002288  103C 0003               2880mm         MOVE.B  #3,D0          
0000228C  4E4F                    2881mm         TRAP    #15
0000228E                          2882mm         ENDM
0000228E                          2883mm         PRINTRB
0000228E  43F8 00C7               2884mm         LEA     ORB, A1     
00002292  103C 000E               2885mm         MOVE.B  #14,D0          
00002296  4E4F                    2886mm         TRAP    #15
00002298                          2887mm         ENDM
00002298  6000 03A4               2888m         BRA     COMPLETE_157
0000229C                          2889m        
0000229C                          2890m ADRABSOLUTE_157:
0000229C  BC3C 0001               2891m         CMP.B   #$01, D6
000022A0  6600 0018               2892m         BNE     ADRABSOLUTEDST_157 
000022A4                          2893m         
000022A4  3A03                    2894m         MOVE.W  D3, D5
000022A6  0803 0002               2895m         BTST    #2, D3
000022AA  6600 0024               2896m         BNE     ADRIMMEDIATE_157
000022AE  0803 0000               2897m         BTST    #0, D3
000022B2  6600 027A               2898m         BNE     ADRABSOLUTEL_157
000022B6  6000 01DA               2899m         BRA     ADRABSOLUTEW_157
000022BA                          2900m ADRABSOLUTEDST_157:
000022BA  3A03                    2901m         MOVE.W  D3, D5
000022BC  0803 000B               2902m         BTST    #$B, D3
000022C0  6600 000E               2903m         BNE     ADRIMMEDIATE_157
000022C4  0803 0009               2904m         BTST    #$09, D3
000022C8  6600 0264               2905m         BNE     ADRABSOLUTEL_157
000022CC  6000 01C4               2906m         BRA     ADRABSOLUTEW_157
000022D0                          2907m ADRIMMEDIATE_157:
000022D0  BE3C 0001               2908m         CMP.B   #1, D7
000022D4  6700 009E               2909m         BEQ     ADRIMMEDIATEL_157
000022D8                          2910m ADRIMMEDIATEW_157:
000022D8  361A                    2911m         MOVE.W  (A2)+, D3
000022DA                          2912mm         PRINTHASH
000022DA  103C 0006               2913mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022DE  323C 0023               2914mm         MOVE.W  #35, D1     ; AN = SIGN
000022E2  4E4F                    2915mm         TRAP    #15         ; OUTPUT = SIGN
000022E4                          2916mm         ENDM
000022E4                          2917mm         PRINTSIGN
000022E4  103C 0006               2918mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022E8  323C 0024               2919mm         MOVE.W  #36, D1     ; AN = SIGN
000022EC  4E4F                    2920mm         TRAP    #15         ; OUTPUT = SIGN
000022EE                          2921mm         ENDM
000022EE                          2922mm         ADROUT
000022EE  3212                    2923mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000022F0  E049                    2924mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000022F2  E849                    2925mm         LSR.W   #4, D1      
000022F4                          2926mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000022F4  0C01 0009               2927mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000022F8  6E00 000A               2928mmm         BGT     ALPHA_187
000022FC  0601 0030               2929mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002300  6000 0006               2930mmm         BRA     DONE_187
00002304  0601 0037               2931mmm ALPHA_187: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002308  4E71                    2932mmm DONE_187: NOP
0000230A                          2933mmm         ENDM
0000230A  4E4F                    2934mm         TRAP    #15         ; EXECUTE OUTPUT
0000230C                          2935mm         
0000230C  3212                    2936mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000230E  E949                    2937mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002310  E049                    2938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002312  E849                    2939mm         LSR.W   #4, D1      
00002314                          2940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002314  0C01 0009               2941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002318  6E00 000A               2942mmm         BGT     ALPHA_188
0000231C  0601 0030               2943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002320  6000 0006               2944mmm         BRA     DONE_188
00002324  0601 0037               2945mmm ALPHA_188: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002328  4E71                    2946mmm DONE_188: NOP
0000232A                          2947mmm         ENDM
0000232A  4E4F                    2948mm         TRAP    #15         ; EXECUTE OUTPUT
0000232C                          2949mm         
0000232C  3212                    2950mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000232E  E149                    2951mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002330  E049                    2952mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002332  E849                    2953mm         LSR.W   #4, D1      
00002334                          2954mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002334  0C01 0009               2955mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002338  6E00 000A               2956mmm         BGT     ALPHA_189
0000233C  0601 0030               2957mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002340  6000 0006               2958mmm         BRA     DONE_189
00002344  0601 0037               2959mmm ALPHA_189: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002348  4E71                    2960mmm DONE_189: NOP
0000234A                          2961mmm         ENDM
0000234A  4E4F                    2962mm         TRAP    #15         ; EXECUTE OUTPUT
0000234C                          2963mm         
0000234C  3212                    2964mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000234E  E149                    2965mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002350  E949                    2966mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002352  E049                    2967mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002354  E849                    2968mm         LSR.W   #4, D1      
00002356                          2969mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002356  0C01 0009               2970mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000235A  6E00 000A               2971mmm         BGT     ALPHA_190
0000235E  0601 0030               2972mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002362  6000 0006               2973mmm         BRA     DONE_190
00002366  0601 0037               2974mmm ALPHA_190: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000236A  4E71                    2975mmm DONE_190: NOP
0000236C                          2976mmm         ENDM
0000236C  4E4F                    2977mm         TRAP    #15         ; EXECUTE OUTPUT       
0000236E                          2978mm         ENDM 
0000236E  3605                    2979m         MOVE.W  D5, D3
00002370  6000 02CC               2980m         BRA     COMPLETE_157
00002374                          2981m ADRIMMEDIATEL_157:
00002374  361A                    2982m         MOVE.W  (A2)+, D3
00002376                          2983mm         PRINTHASH
00002376  103C 0006               2984mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000237A  323C 0023               2985mm         MOVE.W  #35, D1     ; AN = SIGN
0000237E  4E4F                    2986mm         TRAP    #15         ; OUTPUT = SIGN
00002380                          2987mm         ENDM
00002380                          2988mm         PRINTSIGN
00002380  103C 0006               2989mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002384  323C 0024               2990mm         MOVE.W  #36, D1     ; AN = SIGN
00002388  4E4F                    2991mm         TRAP    #15         ; OUTPUT = SIGN
0000238A                          2992mm         ENDM
0000238A                          2993mm         ADROUT 
0000238A  3212                    2994mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000238C  E049                    2995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000238E  E849                    2996mm         LSR.W   #4, D1      
00002390                          2997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002390  0C01 0009               2998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002394  6E00 000A               2999mmm         BGT     ALPHA_194
00002398  0601 0030               3000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000239C  6000 0006               3001mmm         BRA     DONE_194
000023A0  0601 0037               3002mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023A4  4E71                    3003mmm DONE_194: NOP
000023A6                          3004mmm         ENDM
000023A6  4E4F                    3005mm         TRAP    #15         ; EXECUTE OUTPUT
000023A8                          3006mm         
000023A8  3212                    3007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023AA  E949                    3008mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023AC  E049                    3009mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023AE  E849                    3010mm         LSR.W   #4, D1      
000023B0                          3011mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023B0  0C01 0009               3012mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023B4  6E00 000A               3013mmm         BGT     ALPHA_195
000023B8  0601 0030               3014mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023BC  6000 0006               3015mmm         BRA     DONE_195
000023C0  0601 0037               3016mmm ALPHA_195: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023C4  4E71                    3017mmm DONE_195: NOP
000023C6                          3018mmm         ENDM
000023C6  4E4F                    3019mm         TRAP    #15         ; EXECUTE OUTPUT
000023C8                          3020mm         
000023C8  3212                    3021mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023CA  E149                    3022mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023CC  E049                    3023mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023CE  E849                    3024mm         LSR.W   #4, D1      
000023D0                          3025mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023D0  0C01 0009               3026mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023D4  6E00 000A               3027mmm         BGT     ALPHA_196
000023D8  0601 0030               3028mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023DC  6000 0006               3029mmm         BRA     DONE_196
000023E0  0601 0037               3030mmm ALPHA_196: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023E4  4E71                    3031mmm DONE_196: NOP
000023E6                          3032mmm         ENDM
000023E6  4E4F                    3033mm         TRAP    #15         ; EXECUTE OUTPUT
000023E8                          3034mm         
000023E8  3212                    3035mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023EA  E149                    3036mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023EC  E949                    3037mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000023EE  E049                    3038mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023F0  E849                    3039mm         LSR.W   #4, D1      
000023F2                          3040mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023F2  0C01 0009               3041mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023F6  6E00 000A               3042mmm         BGT     ALPHA_197
000023FA  0601 0030               3043mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023FE  6000 0006               3044mmm         BRA     DONE_197
00002402  0601 0037               3045mmm ALPHA_197: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002406  4E71                    3046mmm DONE_197: NOP
00002408                          3047mmm         ENDM
00002408  4E4F                    3048mm         TRAP    #15         ; EXECUTE OUTPUT       
0000240A                          3049mm         ENDM 
0000240A  361A                    3050m         MOVE.W  (A2)+, D3
0000240C                          3051mm         ADROUT
0000240C  3212                    3052mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000240E  E049                    3053mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002410  E849                    3054mm         LSR.W   #4, D1      
00002412                          3055mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002412  0C01 0009               3056mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002416  6E00 000A               3057mmm         BGT     ALPHA_199
0000241A  0601 0030               3058mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000241E  6000 0006               3059mmm         BRA     DONE_199
00002422  0601 0037               3060mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002426  4E71                    3061mmm DONE_199: NOP
00002428                          3062mmm         ENDM
00002428  4E4F                    3063mm         TRAP    #15         ; EXECUTE OUTPUT
0000242A                          3064mm         
0000242A  3212                    3065mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000242C  E949                    3066mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000242E  E049                    3067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002430  E849                    3068mm         LSR.W   #4, D1      
00002432                          3069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002432  0C01 0009               3070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002436  6E00 000A               3071mmm         BGT     ALPHA_200
0000243A  0601 0030               3072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000243E  6000 0006               3073mmm         BRA     DONE_200
00002442  0601 0037               3074mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002446  4E71                    3075mmm DONE_200: NOP
00002448                          3076mmm         ENDM
00002448  4E4F                    3077mm         TRAP    #15         ; EXECUTE OUTPUT
0000244A                          3078mm         
0000244A  3212                    3079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000244C  E149                    3080mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000244E  E049                    3081mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002450  E849                    3082mm         LSR.W   #4, D1      
00002452                          3083mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002452  0C01 0009               3084mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002456  6E00 000A               3085mmm         BGT     ALPHA_201
0000245A  0601 0030               3086mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000245E  6000 0006               3087mmm         BRA     DONE_201
00002462  0601 0037               3088mmm ALPHA_201: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002466  4E71                    3089mmm DONE_201: NOP
00002468                          3090mmm         ENDM
00002468  4E4F                    3091mm         TRAP    #15         ; EXECUTE OUTPUT
0000246A                          3092mm         
0000246A  3212                    3093mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000246C  E149                    3094mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000246E  E949                    3095mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002470  E049                    3096mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002472  E849                    3097mm         LSR.W   #4, D1      
00002474                          3098mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002474  0C01 0009               3099mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002478  6E00 000A               3100mmm         BGT     ALPHA_202
0000247C  0601 0030               3101mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002480  6000 0006               3102mmm         BRA     DONE_202
00002484  0601 0037               3103mmm ALPHA_202: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002488  4E71                    3104mmm DONE_202: NOP
0000248A                          3105mmm         ENDM
0000248A  4E4F                    3106mm         TRAP    #15         ; EXECUTE OUTPUT       
0000248C                          3107mm         ENDM 
0000248C  3605                    3108m         MOVE.W  D5, D3
0000248E  6000 01AE               3109m         BRA     COMPLETE_157 
00002492                          3110m ADRABSOLUTEW_157:     
00002492  361A                    3111m         MOVE.W  (A2)+, D3
00002494                          3112mm         PRINTSIGN
00002494  103C 0006               3113mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002498  323C 0024               3114mm         MOVE.W  #36, D1     ; AN = SIGN
0000249C  4E4F                    3115mm         TRAP    #15         ; OUTPUT = SIGN
0000249E                          3116mm         ENDM
0000249E                          3117mm         PRINTSIGN
0000249E  103C 0006               3118mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000024A2  323C 0024               3119mm         MOVE.W  #36, D1     ; AN = SIGN
000024A6  4E4F                    3120mm         TRAP    #15         ; OUTPUT = SIGN
000024A8                          3121mm         ENDM
000024A8                          3122mm         ADROUT
000024A8  3212                    3123mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024AA  E049                    3124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024AC  E849                    3125mm         LSR.W   #4, D1      
000024AE                          3126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024AE  0C01 0009               3127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024B2  6E00 000A               3128mmm         BGT     ALPHA_206
000024B6  0601 0030               3129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024BA  6000 0006               3130mmm         BRA     DONE_206
000024BE  0601 0037               3131mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024C2  4E71                    3132mmm DONE_206: NOP
000024C4                          3133mmm         ENDM
000024C4  4E4F                    3134mm         TRAP    #15         ; EXECUTE OUTPUT
000024C6                          3135mm         
000024C6  3212                    3136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024C8  E949                    3137mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024CA  E049                    3138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024CC  E849                    3139mm         LSR.W   #4, D1      
000024CE                          3140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024CE  0C01 0009               3141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024D2  6E00 000A               3142mmm         BGT     ALPHA_207
000024D6  0601 0030               3143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024DA  6000 0006               3144mmm         BRA     DONE_207
000024DE  0601 0037               3145mmm ALPHA_207: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024E2  4E71                    3146mmm DONE_207: NOP
000024E4                          3147mmm         ENDM
000024E4  4E4F                    3148mm         TRAP    #15         ; EXECUTE OUTPUT
000024E6                          3149mm         
000024E6  3212                    3150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024E8  E149                    3151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024EA  E049                    3152mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024EC  E849                    3153mm         LSR.W   #4, D1      
000024EE                          3154mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024EE  0C01 0009               3155mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024F2  6E00 000A               3156mmm         BGT     ALPHA_208
000024F6  0601 0030               3157mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024FA  6000 0006               3158mmm         BRA     DONE_208
000024FE  0601 0037               3159mmm ALPHA_208: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002502  4E71                    3160mmm DONE_208: NOP
00002504                          3161mmm         ENDM
00002504  4E4F                    3162mm         TRAP    #15         ; EXECUTE OUTPUT
00002506                          3163mm         
00002506  3212                    3164mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002508  E149                    3165mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000250A  E949                    3166mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000250C  E049                    3167mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000250E  E849                    3168mm         LSR.W   #4, D1      
00002510                          3169mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002510  0C01 0009               3170mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002514  6E00 000A               3171mmm         BGT     ALPHA_209
00002518  0601 0030               3172mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000251C  6000 0006               3173mmm         BRA     DONE_209
00002520  0601 0037               3174mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002524  4E71                    3175mmm DONE_209: NOP
00002526                          3176mmm         ENDM
00002526  4E4F                    3177mm         TRAP    #15         ; EXECUTE OUTPUT       
00002528                          3178mm         ENDM 
00002528  3605                    3179m         MOVE.W  D5, D3
0000252A  6000 0112               3180m         BRA     COMPLETE_157  
0000252E                          3181m ADRABSOLUTEL_157:  
0000252E  361A                    3182m         MOVE.W  (A2)+, D3
00002530                          3183mm         PRINTSIGN
00002530  103C 0006               3184mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002534  323C 0024               3185mm         MOVE.W  #36, D1     ; AN = SIGN
00002538  4E4F                    3186mm         TRAP    #15         ; OUTPUT = SIGN
0000253A                          3187mm         ENDM
0000253A                          3188mm         ADROUT 
0000253A  3212                    3189mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000253C  E049                    3190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000253E  E849                    3191mm         LSR.W   #4, D1      
00002540                          3192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002540  0C01 0009               3193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002544  6E00 000A               3194mmm         BGT     ALPHA_212
00002548  0601 0030               3195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000254C  6000 0006               3196mmm         BRA     DONE_212
00002550  0601 0037               3197mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002554  4E71                    3198mmm DONE_212: NOP
00002556                          3199mmm         ENDM
00002556  4E4F                    3200mm         TRAP    #15         ; EXECUTE OUTPUT
00002558                          3201mm         
00002558  3212                    3202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000255A  E949                    3203mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000255C  E049                    3204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000255E  E849                    3205mm         LSR.W   #4, D1      
00002560                          3206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002560  0C01 0009               3207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002564  6E00 000A               3208mmm         BGT     ALPHA_213
00002568  0601 0030               3209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000256C  6000 0006               3210mmm         BRA     DONE_213
00002570  0601 0037               3211mmm ALPHA_213: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002574  4E71                    3212mmm DONE_213: NOP
00002576                          3213mmm         ENDM
00002576  4E4F                    3214mm         TRAP    #15         ; EXECUTE OUTPUT
00002578                          3215mm         
00002578  3212                    3216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000257A  E149                    3217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000257C  E049                    3218mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000257E  E849                    3219mm         LSR.W   #4, D1      
00002580                          3220mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002580  0C01 0009               3221mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002584  6E00 000A               3222mmm         BGT     ALPHA_214
00002588  0601 0030               3223mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000258C  6000 0006               3224mmm         BRA     DONE_214
00002590  0601 0037               3225mmm ALPHA_214: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002594  4E71                    3226mmm DONE_214: NOP
00002596                          3227mmm         ENDM
00002596  4E4F                    3228mm         TRAP    #15         ; EXECUTE OUTPUT
00002598                          3229mm         
00002598  3212                    3230mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000259A  E149                    3231mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000259C  E949                    3232mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000259E  E049                    3233mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025A0  E849                    3234mm         LSR.W   #4, D1      
000025A2                          3235mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025A2  0C01 0009               3236mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025A6  6E00 000A               3237mmm         BGT     ALPHA_215
000025AA  0601 0030               3238mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025AE  6000 0006               3239mmm         BRA     DONE_215
000025B2  0601 0037               3240mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025B6  4E71                    3241mmm DONE_215: NOP
000025B8                          3242mmm         ENDM
000025B8  4E4F                    3243mm         TRAP    #15         ; EXECUTE OUTPUT       
000025BA                          3244mm         ENDM 
000025BA  361A                    3245m         MOVE.W  (A2)+, D3
000025BC                          3246mm         ADROUT
000025BC  3212                    3247mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025BE  E049                    3248mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025C0  E849                    3249mm         LSR.W   #4, D1      
000025C2                          3250mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025C2  0C01 0009               3251mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025C6  6E00 000A               3252mmm         BGT     ALPHA_217
000025CA  0601 0030               3253mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025CE  6000 0006               3254mmm         BRA     DONE_217
000025D2  0601 0037               3255mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025D6  4E71                    3256mmm DONE_217: NOP
000025D8                          3257mmm         ENDM
000025D8  4E4F                    3258mm         TRAP    #15         ; EXECUTE OUTPUT
000025DA                          3259mm         
000025DA  3212                    3260mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025DC  E949                    3261mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025DE  E049                    3262mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025E0  E849                    3263mm         LSR.W   #4, D1      
000025E2                          3264mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025E2  0C01 0009               3265mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025E6  6E00 000A               3266mmm         BGT     ALPHA_218
000025EA  0601 0030               3267mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025EE  6000 0006               3268mmm         BRA     DONE_218
000025F2  0601 0037               3269mmm ALPHA_218: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025F6  4E71                    3270mmm DONE_218: NOP
000025F8                          3271mmm         ENDM
000025F8  4E4F                    3272mm         TRAP    #15         ; EXECUTE OUTPUT
000025FA                          3273mm         
000025FA  3212                    3274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025FC  E149                    3275mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025FE  E049                    3276mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002600  E849                    3277mm         LSR.W   #4, D1      
00002602                          3278mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002602  0C01 0009               3279mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002606  6E00 000A               3280mmm         BGT     ALPHA_219
0000260A  0601 0030               3281mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000260E  6000 0006               3282mmm         BRA     DONE_219
00002612  0601 0037               3283mmm ALPHA_219: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002616  4E71                    3284mmm DONE_219: NOP
00002618                          3285mmm         ENDM
00002618  4E4F                    3286mm         TRAP    #15         ; EXECUTE OUTPUT
0000261A                          3287mm         
0000261A  3212                    3288mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000261C  E149                    3289mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000261E  E949                    3290mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002620  E049                    3291mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002622  E849                    3292mm         LSR.W   #4, D1      
00002624                          3293mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002624  0C01 0009               3294mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002628  6E00 000A               3295mmm         BGT     ALPHA_220
0000262C  0601 0030               3296mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002630  6000 0006               3297mmm         BRA     DONE_220
00002634  0601 0037               3298mmm ALPHA_220: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002638  4E71                    3299mmm DONE_220: NOP
0000263A                          3300mmm         ENDM
0000263A  4E4F                    3301mm         TRAP    #15         ; EXECUTE OUTPUT       
0000263C                          3302mm         ENDM 
0000263C  3605                    3303m         MOVE.W  D5, D3
0000263E                          3304m 
0000263E                          3305m COMPLETE_157:  ; OPCODE HAS BEEN VERIFIED
0000263E                          3306m         ENDM
0000263E  6000 05FE               3307          BRA     decodeADDcomp
00002642                          3308  decodeAddDestOp:
00002642                          3309m         prepareAdrMode  #$1,(A2)
00002642  3C3C 0001               3310m         MOVE.W  #$1, D6      ; INPUT VALUE
00002646  3212                    3311m         MOVE.W  (A2), D1
00002648  BC3C 0001               3312m         CMP.B   #$01, D6
0000264C  6700 000C               3313m         BEQ     ADRSOURCE_221    
00002650                          3314m ADRDEST_221:
00002650  EF49                    3315m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002652  E049                    3316m         LSR     #$08, D1
00002654  EA49                    3317m         LSR     #$05, D1
00002656  6000 000A               3318m         BRA     COMPLETE_221 
0000265A                          3319m ADRSOURCE_221:                
0000265A  E149                    3320m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000265C  E549                    3321m         LSL     #$02, D1
0000265E  E049                    3322m         LSR     #$08, D1
00002660  EA49                    3323m         LSR     #$05, D1
00002662                          3324m COMPLETE_221:  ; OPCODE HAS BEEN VERIFIED
00002662                          3325m         ENDM        
00002662                          3326m         decodeAdrMode   (A2), D1
00002662  3612                    3327m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002664  3201                    3328m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002666                          3329m 
00002666  B23C 0001               3330m         CMP.B   #$01, D1
0000266A  6700 0066               3331m         BEQ     ADRREGDIRECT_222    
0000266E  B23C 0002               3332m         CMP.B   #$02, D1
00002672  6700 00A0               3333m         BEQ     ADRREGINDIRECT_222  
00002676  B23C 0003               3334m         CMP.B   #$03, D1
0000267A  6700 0102               3335m         BEQ     ADRREGPOSTINC_222  
0000267E  B23C 0004               3336m         CMP.B   #$04, D1
00002682  6700 0178               3337m         BEQ     ADRREGPREDEC_222
00002686  B23C 0007               3338m         CMP.B   #$07, D1
0000268A  6700 01EE               3339m         BEQ     ADRABSOLUTE_222    
0000268E                          3340m         
0000268E                          3341m DATAREGDIRECT_222: 
0000268E  BC3C 0001               3342m         CMP.B   #$01, D6
00002692  6700 001E               3343m         BEQ     DATAREGDIRECTSRC_222   
00002696                          3344m DATAREGDIRECTDEST_222: 
00002696                          3345mm         PRINTDNDEST D3 
00002696  3203                    3346mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002698  E949                    3347mm         LSL     #$04, D1
0000269A  E049                    3348mm         LSR     #$08, D1
0000269C  EA49                    3349mm         LSR     #$05, D1
0000269E  43F8 00C1               3350mm         LEA     ODN, A1     
000026A2  103C 000E               3351mm         MOVE.B  #14,D0          
000026A6  4E4F                    3352mm         TRAP    #15
000026A8  103C 0003               3353mm         MOVE.B  #3,D0          
000026AC  4E4F                    3354mm         TRAP    #15
000026AE                          3355mm         ENDM
000026AE  6000 056C               3356m         BRA     COMPLETE_222 
000026B2                          3357m DATAREGDIRECTSRC_222: 
000026B2                          3358mm         PRINTDNSRC D3 
000026B2  4281                    3359mm         CLR.L   D1
000026B4  3203                    3360mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026B6  E149                    3361mm         LSL     #$08, D1
000026B8  EB49                    3362mm         LSL     #$05, D1
000026BA  E049                    3363mm         LSR     #$08, D1
000026BC  EA49                    3364mm         LSR     #$05, D1
000026BE  43F8 00C1               3365mm         LEA     ODN, A1     
000026C2  103C 000E               3366mm         MOVE.B  #14,D0          
000026C6  4E4F                    3367mm         TRAP    #15
000026C8  103C 0003               3368mm         MOVE.B  #3,D0          
000026CC  4E4F                    3369mm         TRAP    #15
000026CE                          3370mm         ENDM
000026CE  6000 054C               3371m         BRA     COMPLETE_222   
000026D2                          3372m         
000026D2                          3373m ADRREGDIRECT_222: 
000026D2  BC3C 0001               3374m         CMP.B   #$01, D6
000026D6  6700 001E               3375m         BEQ     ADRREGDIRECTSRC_222   
000026DA                          3376m ADRREGDIRECTDEST_222:
000026DA                          3377mm         PRINTANDEST D3
000026DA  3203                    3378mm         MOVE.W  D3, D1
000026DC  E949                    3379mm         LSL     #$04, D1
000026DE  E049                    3380mm         LSR     #$08, D1
000026E0  EA49                    3381mm         LSR     #$05, D1
000026E2  43F8 00C3               3382mm         LEA     OAN, A1     
000026E6  103C 000E               3383mm         MOVE.B  #14,D0          
000026EA  4E4F                    3384mm         TRAP    #15
000026EC  103C 0003               3385mm         MOVE.B  #3,D0          
000026F0  4E4F                    3386mm         TRAP    #15
000026F2                          3387mm         ENDM
000026F2  6000 0528               3388m         BRA     COMPLETE_222   
000026F6                          3389m ADRREGDIRECTSRC_222:
000026F6                          3390mm         PRINTANSRC D3
000026F6  3203                    3391mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026F8  E149                    3392mm         LSL     #$08, D1
000026FA  EB49                    3393mm         LSL     #$05, D1
000026FC  E049                    3394mm         LSR     #$08, D1
000026FE  EA49                    3395mm         LSR     #$05, D1
00002700  43F8 00C3               3396mm         LEA     OAN, A1     
00002704  103C 000E               3397mm         MOVE.B  #14,D0          
00002708  4E4F                    3398mm         TRAP    #15
0000270A  103C 0003               3399mm         MOVE.B  #3,D0          
0000270E  4E4F                    3400mm         TRAP    #15
00002710                          3401mm         ENDM
00002710  6000 050A               3402m         BRA     COMPLETE_222   
00002714                          3403m        
00002714                          3404m ADRREGINDIRECT_222:   
00002714  BC3C 0001               3405m         CMP.B   #$01, D6
00002718  6700 0032               3406m         BEQ     ADRREGINDIRECTSRC_222   
0000271C                          3407m ADRREGINDIRECTDEST_222:
0000271C                          3408mm         PRINTLB
0000271C  43F8 00C5               3409mm         LEA     OLB, A1     
00002720  103C 000E               3410mm         MOVE.B  #14,D0          
00002724  4E4F                    3411mm         TRAP    #15
00002726                          3412mm         ENDM
00002726                          3413mm         PRINTANDEST D3  
00002726  3203                    3414mm         MOVE.W  D3, D1
00002728  E949                    3415mm         LSL     #$04, D1
0000272A  E049                    3416mm         LSR     #$08, D1
0000272C  EA49                    3417mm         LSR     #$05, D1
0000272E  43F8 00C3               3418mm         LEA     OAN, A1     
00002732  103C 000E               3419mm         MOVE.B  #14,D0          
00002736  4E4F                    3420mm         TRAP    #15
00002738  103C 0003               3421mm         MOVE.B  #3,D0          
0000273C  4E4F                    3422mm         TRAP    #15
0000273E                          3423mm         ENDM
0000273E                          3424mm         PRINTRB
0000273E  43F8 00C7               3425mm         LEA     ORB, A1     
00002742  103C 000E               3426mm         MOVE.B  #14,D0          
00002746  4E4F                    3427mm         TRAP    #15
00002748                          3428mm         ENDM
00002748  6000 04D2               3429m         BRA     COMPLETE_222     
0000274C                          3430m ADRREGINDIRECTSRC_222:   
0000274C                          3431mm         PRINTLB
0000274C  43F8 00C5               3432mm         LEA     OLB, A1     
00002750  103C 000E               3433mm         MOVE.B  #14,D0          
00002754  4E4F                    3434mm         TRAP    #15
00002756                          3435mm         ENDM
00002756                          3436mm         PRINTANSRC D3  
00002756  3203                    3437mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002758  E149                    3438mm         LSL     #$08, D1
0000275A  EB49                    3439mm         LSL     #$05, D1
0000275C  E049                    3440mm         LSR     #$08, D1
0000275E  EA49                    3441mm         LSR     #$05, D1
00002760  43F8 00C3               3442mm         LEA     OAN, A1     
00002764  103C 000E               3443mm         MOVE.B  #14,D0          
00002768  4E4F                    3444mm         TRAP    #15
0000276A  103C 0003               3445mm         MOVE.B  #3,D0          
0000276E  4E4F                    3446mm         TRAP    #15
00002770                          3447mm         ENDM
00002770                          3448mm         PRINTRB
00002770  43F8 00C7               3449mm         LEA     ORB, A1     
00002774  103C 000E               3450mm         MOVE.B  #14,D0          
00002778  4E4F                    3451mm         TRAP    #15
0000277A                          3452mm         ENDM
0000277A  6000 04A0               3453m         BRA     COMPLETE_222   
0000277E                          3454m         
0000277E                          3455m ADRREGPOSTINC_222:   
0000277E  BC3C 0001               3456m         CMP.B   #$01, D6
00002782  6700 003C               3457m         BEQ     ADRREGPOSTINCSRC_222   
00002786                          3458m ADRREGPOSTINCDEST_222: 
00002786                          3459mm         PRINTLB
00002786  43F8 00C5               3460mm         LEA     OLB, A1     
0000278A  103C 000E               3461mm         MOVE.B  #14,D0          
0000278E  4E4F                    3462mm         TRAP    #15
00002790                          3463mm         ENDM
00002790                          3464mm         PRINTANDEST D3  
00002790  3203                    3465mm         MOVE.W  D3, D1
00002792  E949                    3466mm         LSL     #$04, D1
00002794  E049                    3467mm         LSR     #$08, D1
00002796  EA49                    3468mm         LSR     #$05, D1
00002798  43F8 00C3               3469mm         LEA     OAN, A1     
0000279C  103C 000E               3470mm         MOVE.B  #14,D0          
000027A0  4E4F                    3471mm         TRAP    #15
000027A2  103C 0003               3472mm         MOVE.B  #3,D0          
000027A6  4E4F                    3473mm         TRAP    #15
000027A8                          3474mm         ENDM
000027A8                          3475mm         PRINTRB
000027A8  43F8 00C7               3476mm         LEA     ORB, A1     
000027AC  103C 000E               3477mm         MOVE.B  #14,D0          
000027B0  4E4F                    3478mm         TRAP    #15
000027B2                          3479mm         ENDM
000027B2                          3480mm         PRINTPI
000027B2  43F8 00CE               3481mm         LEA     OPSTINC, A1     
000027B6  103C 000E               3482mm         MOVE.B  #14,D0          
000027BA  4E4F                    3483mm         TRAP    #15
000027BC                          3484mm         ENDM
000027BC  6000 045E               3485m         BRA     COMPLETE_222  
000027C0                          3486m ADRREGPOSTINCSRC_222:           
000027C0                          3487mm         PRINTLB
000027C0  43F8 00C5               3488mm         LEA     OLB, A1     
000027C4  103C 000E               3489mm         MOVE.B  #14,D0          
000027C8  4E4F                    3490mm         TRAP    #15
000027CA                          3491mm         ENDM
000027CA                          3492mm         PRINTANSRC D3  
000027CA  3203                    3493mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027CC  E149                    3494mm         LSL     #$08, D1
000027CE  EB49                    3495mm         LSL     #$05, D1
000027D0  E049                    3496mm         LSR     #$08, D1
000027D2  EA49                    3497mm         LSR     #$05, D1
000027D4  43F8 00C3               3498mm         LEA     OAN, A1     
000027D8  103C 000E               3499mm         MOVE.B  #14,D0          
000027DC  4E4F                    3500mm         TRAP    #15
000027DE  103C 0003               3501mm         MOVE.B  #3,D0          
000027E2  4E4F                    3502mm         TRAP    #15
000027E4                          3503mm         ENDM
000027E4                          3504mm         PRINTRB
000027E4  43F8 00C7               3505mm         LEA     ORB, A1     
000027E8  103C 000E               3506mm         MOVE.B  #14,D0          
000027EC  4E4F                    3507mm         TRAP    #15
000027EE                          3508mm         ENDM
000027EE                          3509mm         PRINTPI
000027EE  43F8 00CE               3510mm         LEA     OPSTINC, A1     
000027F2  103C 000E               3511mm         MOVE.B  #14,D0          
000027F6  4E4F                    3512mm         TRAP    #15
000027F8                          3513mm         ENDM
000027F8  6000 0422               3514m         BRA     COMPLETE_222  
000027FC                          3515m         
000027FC                          3516m ADRREGPREDEC_222: 
000027FC  BC3C 0001               3517m         CMP.B   #$01, D6
00002800  6700 003C               3518m         BEQ     ADRREGPREDECSRC_222   
00002804                          3519m ADRREGPREDECDEST_222:
00002804                          3520mm         PRINTPD  
00002804  43F8 00CC               3521mm         LEA     OPREDEC, A1     
00002808  103C 000E               3522mm         MOVE.B  #14,D0          
0000280C  4E4F                    3523mm         TRAP    #15
0000280E                          3524mm         ENDM
0000280E                          3525mm         PRINTLB
0000280E  43F8 00C5               3526mm         LEA     OLB, A1     
00002812  103C 000E               3527mm         MOVE.B  #14,D0          
00002816  4E4F                    3528mm         TRAP    #15
00002818                          3529mm         ENDM
00002818                          3530mm         PRINTANDEST D3  
00002818  3203                    3531mm         MOVE.W  D3, D1
0000281A  E949                    3532mm         LSL     #$04, D1
0000281C  E049                    3533mm         LSR     #$08, D1
0000281E  EA49                    3534mm         LSR     #$05, D1
00002820  43F8 00C3               3535mm         LEA     OAN, A1     
00002824  103C 000E               3536mm         MOVE.B  #14,D0          
00002828  4E4F                    3537mm         TRAP    #15
0000282A  103C 0003               3538mm         MOVE.B  #3,D0          
0000282E  4E4F                    3539mm         TRAP    #15
00002830                          3540mm         ENDM
00002830                          3541mm         PRINTRB
00002830  43F8 00C7               3542mm         LEA     ORB, A1     
00002834  103C 000E               3543mm         MOVE.B  #14,D0          
00002838  4E4F                    3544mm         TRAP    #15
0000283A                          3545mm         ENDM
0000283A  6000 03E0               3546m         BRA     COMPLETE_222   
0000283E                          3547m ADRREGPREDECSRC_222: 
0000283E                          3548mm         PRINTPD  
0000283E  43F8 00CC               3549mm         LEA     OPREDEC, A1     
00002842  103C 000E               3550mm         MOVE.B  #14,D0          
00002846  4E4F                    3551mm         TRAP    #15
00002848                          3552mm         ENDM
00002848                          3553mm         PRINTLB
00002848  43F8 00C5               3554mm         LEA     OLB, A1     
0000284C  103C 000E               3555mm         MOVE.B  #14,D0          
00002850  4E4F                    3556mm         TRAP    #15
00002852                          3557mm         ENDM
00002852                          3558mm         PRINTANSRC D3  
00002852  3203                    3559mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002854  E149                    3560mm         LSL     #$08, D1
00002856  EB49                    3561mm         LSL     #$05, D1
00002858  E049                    3562mm         LSR     #$08, D1
0000285A  EA49                    3563mm         LSR     #$05, D1
0000285C  43F8 00C3               3564mm         LEA     OAN, A1     
00002860  103C 000E               3565mm         MOVE.B  #14,D0          
00002864  4E4F                    3566mm         TRAP    #15
00002866  103C 0003               3567mm         MOVE.B  #3,D0          
0000286A  4E4F                    3568mm         TRAP    #15
0000286C                          3569mm         ENDM
0000286C                          3570mm         PRINTRB
0000286C  43F8 00C7               3571mm         LEA     ORB, A1     
00002870  103C 000E               3572mm         MOVE.B  #14,D0          
00002874  4E4F                    3573mm         TRAP    #15
00002876                          3574mm         ENDM
00002876  6000 03A4               3575m         BRA     COMPLETE_222
0000287A                          3576m        
0000287A                          3577m ADRABSOLUTE_222:
0000287A  BC3C 0001               3578m         CMP.B   #$01, D6
0000287E  6600 0018               3579m         BNE     ADRABSOLUTEDST_222 
00002882                          3580m         
00002882  3A03                    3581m         MOVE.W  D3, D5
00002884  0803 0002               3582m         BTST    #2, D3
00002888  6600 0024               3583m         BNE     ADRIMMEDIATE_222
0000288C  0803 0000               3584m         BTST    #0, D3
00002890  6600 027A               3585m         BNE     ADRABSOLUTEL_222
00002894  6000 01DA               3586m         BRA     ADRABSOLUTEW_222
00002898                          3587m ADRABSOLUTEDST_222:
00002898  3A03                    3588m         MOVE.W  D3, D5
0000289A  0803 000B               3589m         BTST    #$B, D3
0000289E  6600 000E               3590m         BNE     ADRIMMEDIATE_222
000028A2  0803 0009               3591m         BTST    #$09, D3
000028A6  6600 0264               3592m         BNE     ADRABSOLUTEL_222
000028AA  6000 01C4               3593m         BRA     ADRABSOLUTEW_222
000028AE                          3594m ADRIMMEDIATE_222:
000028AE  BE3C 0001               3595m         CMP.B   #1, D7
000028B2  6700 009E               3596m         BEQ     ADRIMMEDIATEL_222
000028B6                          3597m ADRIMMEDIATEW_222:
000028B6  361A                    3598m         MOVE.W  (A2)+, D3
000028B8                          3599mm         PRINTHASH
000028B8  103C 0006               3600mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028BC  323C 0023               3601mm         MOVE.W  #35, D1     ; AN = SIGN
000028C0  4E4F                    3602mm         TRAP    #15         ; OUTPUT = SIGN
000028C2                          3603mm         ENDM
000028C2                          3604mm         PRINTSIGN
000028C2  103C 0006               3605mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028C6  323C 0024               3606mm         MOVE.W  #36, D1     ; AN = SIGN
000028CA  4E4F                    3607mm         TRAP    #15         ; OUTPUT = SIGN
000028CC                          3608mm         ENDM
000028CC                          3609mm         ADROUT
000028CC  3212                    3610mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028CE  E049                    3611mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028D0  E849                    3612mm         LSR.W   #4, D1      
000028D2                          3613mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028D2  0C01 0009               3614mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028D6  6E00 000A               3615mmm         BGT     ALPHA_252
000028DA  0601 0030               3616mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028DE  6000 0006               3617mmm         BRA     DONE_252
000028E2  0601 0037               3618mmm ALPHA_252: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028E6  4E71                    3619mmm DONE_252: NOP
000028E8                          3620mmm         ENDM
000028E8  4E4F                    3621mm         TRAP    #15         ; EXECUTE OUTPUT
000028EA                          3622mm         
000028EA  3212                    3623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028EC  E949                    3624mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000028EE  E049                    3625mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028F0  E849                    3626mm         LSR.W   #4, D1      
000028F2                          3627mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028F2  0C01 0009               3628mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028F6  6E00 000A               3629mmm         BGT     ALPHA_253
000028FA  0601 0030               3630mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028FE  6000 0006               3631mmm         BRA     DONE_253
00002902  0601 0037               3632mmm ALPHA_253: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002906  4E71                    3633mmm DONE_253: NOP
00002908                          3634mmm         ENDM
00002908  4E4F                    3635mm         TRAP    #15         ; EXECUTE OUTPUT
0000290A                          3636mm         
0000290A  3212                    3637mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000290C  E149                    3638mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000290E  E049                    3639mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002910  E849                    3640mm         LSR.W   #4, D1      
00002912                          3641mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002912  0C01 0009               3642mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002916  6E00 000A               3643mmm         BGT     ALPHA_254
0000291A  0601 0030               3644mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000291E  6000 0006               3645mmm         BRA     DONE_254
00002922  0601 0037               3646mmm ALPHA_254: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002926  4E71                    3647mmm DONE_254: NOP
00002928                          3648mmm         ENDM
00002928  4E4F                    3649mm         TRAP    #15         ; EXECUTE OUTPUT
0000292A                          3650mm         
0000292A  3212                    3651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000292C  E149                    3652mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000292E  E949                    3653mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002930  E049                    3654mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002932  E849                    3655mm         LSR.W   #4, D1      
00002934                          3656mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002934  0C01 0009               3657mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002938  6E00 000A               3658mmm         BGT     ALPHA_255
0000293C  0601 0030               3659mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002940  6000 0006               3660mmm         BRA     DONE_255
00002944  0601 0037               3661mmm ALPHA_255: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002948  4E71                    3662mmm DONE_255: NOP
0000294A                          3663mmm         ENDM
0000294A  4E4F                    3664mm         TRAP    #15         ; EXECUTE OUTPUT       
0000294C                          3665mm         ENDM 
0000294C  3605                    3666m         MOVE.W  D5, D3
0000294E  6000 02CC               3667m         BRA     COMPLETE_222
00002952                          3668m ADRIMMEDIATEL_222:
00002952  361A                    3669m         MOVE.W  (A2)+, D3
00002954                          3670mm         PRINTHASH
00002954  103C 0006               3671mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002958  323C 0023               3672mm         MOVE.W  #35, D1     ; AN = SIGN
0000295C  4E4F                    3673mm         TRAP    #15         ; OUTPUT = SIGN
0000295E                          3674mm         ENDM
0000295E                          3675mm         PRINTSIGN
0000295E  103C 0006               3676mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002962  323C 0024               3677mm         MOVE.W  #36, D1     ; AN = SIGN
00002966  4E4F                    3678mm         TRAP    #15         ; OUTPUT = SIGN
00002968                          3679mm         ENDM
00002968                          3680mm         ADROUT 
00002968  3212                    3681mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000296A  E049                    3682mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000296C  E849                    3683mm         LSR.W   #4, D1      
0000296E                          3684mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000296E  0C01 0009               3685mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002972  6E00 000A               3686mmm         BGT     ALPHA_259
00002976  0601 0030               3687mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000297A  6000 0006               3688mmm         BRA     DONE_259
0000297E  0601 0037               3689mmm ALPHA_259: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002982  4E71                    3690mmm DONE_259: NOP
00002984                          3691mmm         ENDM
00002984  4E4F                    3692mm         TRAP    #15         ; EXECUTE OUTPUT
00002986                          3693mm         
00002986  3212                    3694mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002988  E949                    3695mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000298A  E049                    3696mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000298C  E849                    3697mm         LSR.W   #4, D1      
0000298E                          3698mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000298E  0C01 0009               3699mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002992  6E00 000A               3700mmm         BGT     ALPHA_260
00002996  0601 0030               3701mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000299A  6000 0006               3702mmm         BRA     DONE_260
0000299E  0601 0037               3703mmm ALPHA_260: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029A2  4E71                    3704mmm DONE_260: NOP
000029A4                          3705mmm         ENDM
000029A4  4E4F                    3706mm         TRAP    #15         ; EXECUTE OUTPUT
000029A6                          3707mm         
000029A6  3212                    3708mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029A8  E149                    3709mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029AA  E049                    3710mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029AC  E849                    3711mm         LSR.W   #4, D1      
000029AE                          3712mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029AE  0C01 0009               3713mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029B2  6E00 000A               3714mmm         BGT     ALPHA_261
000029B6  0601 0030               3715mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029BA  6000 0006               3716mmm         BRA     DONE_261
000029BE  0601 0037               3717mmm ALPHA_261: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029C2  4E71                    3718mmm DONE_261: NOP
000029C4                          3719mmm         ENDM
000029C4  4E4F                    3720mm         TRAP    #15         ; EXECUTE OUTPUT
000029C6                          3721mm         
000029C6  3212                    3722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029C8  E149                    3723mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029CA  E949                    3724mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000029CC  E049                    3725mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029CE  E849                    3726mm         LSR.W   #4, D1      
000029D0                          3727mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029D0  0C01 0009               3728mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029D4  6E00 000A               3729mmm         BGT     ALPHA_262
000029D8  0601 0030               3730mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029DC  6000 0006               3731mmm         BRA     DONE_262
000029E0  0601 0037               3732mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029E4  4E71                    3733mmm DONE_262: NOP
000029E6                          3734mmm         ENDM
000029E6  4E4F                    3735mm         TRAP    #15         ; EXECUTE OUTPUT       
000029E8                          3736mm         ENDM 
000029E8  361A                    3737m         MOVE.W  (A2)+, D3
000029EA                          3738mm         ADROUT
000029EA  3212                    3739mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029EC  E049                    3740mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029EE  E849                    3741mm         LSR.W   #4, D1      
000029F0                          3742mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029F0  0C01 0009               3743mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029F4  6E00 000A               3744mmm         BGT     ALPHA_264
000029F8  0601 0030               3745mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029FC  6000 0006               3746mmm         BRA     DONE_264
00002A00  0601 0037               3747mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A04  4E71                    3748mmm DONE_264: NOP
00002A06                          3749mmm         ENDM
00002A06  4E4F                    3750mm         TRAP    #15         ; EXECUTE OUTPUT
00002A08                          3751mm         
00002A08  3212                    3752mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A0A  E949                    3753mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A0C  E049                    3754mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A0E  E849                    3755mm         LSR.W   #4, D1      
00002A10                          3756mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A10  0C01 0009               3757mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A14  6E00 000A               3758mmm         BGT     ALPHA_265
00002A18  0601 0030               3759mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A1C  6000 0006               3760mmm         BRA     DONE_265
00002A20  0601 0037               3761mmm ALPHA_265: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A24  4E71                    3762mmm DONE_265: NOP
00002A26                          3763mmm         ENDM
00002A26  4E4F                    3764mm         TRAP    #15         ; EXECUTE OUTPUT
00002A28                          3765mm         
00002A28  3212                    3766mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A2A  E149                    3767mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A2C  E049                    3768mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A2E  E849                    3769mm         LSR.W   #4, D1      
00002A30                          3770mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A30  0C01 0009               3771mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A34  6E00 000A               3772mmm         BGT     ALPHA_266
00002A38  0601 0030               3773mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A3C  6000 0006               3774mmm         BRA     DONE_266
00002A40  0601 0037               3775mmm ALPHA_266: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A44  4E71                    3776mmm DONE_266: NOP
00002A46                          3777mmm         ENDM
00002A46  4E4F                    3778mm         TRAP    #15         ; EXECUTE OUTPUT
00002A48                          3779mm         
00002A48  3212                    3780mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A4A  E149                    3781mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A4C  E949                    3782mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A4E  E049                    3783mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A50  E849                    3784mm         LSR.W   #4, D1      
00002A52                          3785mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A52  0C01 0009               3786mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A56  6E00 000A               3787mmm         BGT     ALPHA_267
00002A5A  0601 0030               3788mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A5E  6000 0006               3789mmm         BRA     DONE_267
00002A62  0601 0037               3790mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A66  4E71                    3791mmm DONE_267: NOP
00002A68                          3792mmm         ENDM
00002A68  4E4F                    3793mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A6A                          3794mm         ENDM 
00002A6A  3605                    3795m         MOVE.W  D5, D3
00002A6C  6000 01AE               3796m         BRA     COMPLETE_222 
00002A70                          3797m ADRABSOLUTEW_222:     
00002A70  361A                    3798m         MOVE.W  (A2)+, D3
00002A72                          3799mm         PRINTSIGN
00002A72  103C 0006               3800mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A76  323C 0024               3801mm         MOVE.W  #36, D1     ; AN = SIGN
00002A7A  4E4F                    3802mm         TRAP    #15         ; OUTPUT = SIGN
00002A7C                          3803mm         ENDM
00002A7C                          3804mm         PRINTSIGN
00002A7C  103C 0006               3805mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A80  323C 0024               3806mm         MOVE.W  #36, D1     ; AN = SIGN
00002A84  4E4F                    3807mm         TRAP    #15         ; OUTPUT = SIGN
00002A86                          3808mm         ENDM
00002A86                          3809mm         ADROUT
00002A86  3212                    3810mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A88  E049                    3811mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A8A  E849                    3812mm         LSR.W   #4, D1      
00002A8C                          3813mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A8C  0C01 0009               3814mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A90  6E00 000A               3815mmm         BGT     ALPHA_271
00002A94  0601 0030               3816mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A98  6000 0006               3817mmm         BRA     DONE_271
00002A9C  0601 0037               3818mmm ALPHA_271: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AA0  4E71                    3819mmm DONE_271: NOP
00002AA2                          3820mmm         ENDM
00002AA2  4E4F                    3821mm         TRAP    #15         ; EXECUTE OUTPUT
00002AA4                          3822mm         
00002AA4  3212                    3823mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AA6  E949                    3824mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002AA8  E049                    3825mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AAA  E849                    3826mm         LSR.W   #4, D1      
00002AAC                          3827mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AAC  0C01 0009               3828mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AB0  6E00 000A               3829mmm         BGT     ALPHA_272
00002AB4  0601 0030               3830mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AB8  6000 0006               3831mmm         BRA     DONE_272
00002ABC  0601 0037               3832mmm ALPHA_272: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AC0  4E71                    3833mmm DONE_272: NOP
00002AC2                          3834mmm         ENDM
00002AC2  4E4F                    3835mm         TRAP    #15         ; EXECUTE OUTPUT
00002AC4                          3836mm         
00002AC4  3212                    3837mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AC6  E149                    3838mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AC8  E049                    3839mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002ACA  E849                    3840mm         LSR.W   #4, D1      
00002ACC                          3841mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ACC  0C01 0009               3842mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AD0  6E00 000A               3843mmm         BGT     ALPHA_273
00002AD4  0601 0030               3844mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AD8  6000 0006               3845mmm         BRA     DONE_273
00002ADC  0601 0037               3846mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AE0  4E71                    3847mmm DONE_273: NOP
00002AE2                          3848mmm         ENDM
00002AE2  4E4F                    3849mm         TRAP    #15         ; EXECUTE OUTPUT
00002AE4                          3850mm         
00002AE4  3212                    3851mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AE6  E149                    3852mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AE8  E949                    3853mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002AEA  E049                    3854mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AEC  E849                    3855mm         LSR.W   #4, D1      
00002AEE                          3856mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AEE  0C01 0009               3857mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AF2  6E00 000A               3858mmm         BGT     ALPHA_274
00002AF6  0601 0030               3859mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AFA  6000 0006               3860mmm         BRA     DONE_274
00002AFE  0601 0037               3861mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B02  4E71                    3862mmm DONE_274: NOP
00002B04                          3863mmm         ENDM
00002B04  4E4F                    3864mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B06                          3865mm         ENDM 
00002B06  3605                    3866m         MOVE.W  D5, D3
00002B08  6000 0112               3867m         BRA     COMPLETE_222  
00002B0C                          3868m ADRABSOLUTEL_222:  
00002B0C  361A                    3869m         MOVE.W  (A2)+, D3
00002B0E                          3870mm         PRINTSIGN
00002B0E  103C 0006               3871mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B12  323C 0024               3872mm         MOVE.W  #36, D1     ; AN = SIGN
00002B16  4E4F                    3873mm         TRAP    #15         ; OUTPUT = SIGN
00002B18                          3874mm         ENDM
00002B18                          3875mm         ADROUT 
00002B18  3212                    3876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B1A  E049                    3877mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1C  E849                    3878mm         LSR.W   #4, D1      
00002B1E                          3879mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1E  0C01 0009               3880mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B22  6E00 000A               3881mmm         BGT     ALPHA_277
00002B26  0601 0030               3882mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B2A  6000 0006               3883mmm         BRA     DONE_277
00002B2E  0601 0037               3884mmm ALPHA_277: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B32  4E71                    3885mmm DONE_277: NOP
00002B34                          3886mmm         ENDM
00002B34  4E4F                    3887mm         TRAP    #15         ; EXECUTE OUTPUT
00002B36                          3888mm         
00002B36  3212                    3889mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B38  E949                    3890mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B3A  E049                    3891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    3892mm         LSR.W   #4, D1      
00002B3E                          3893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               3894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               3895mmm         BGT     ALPHA_278
00002B46  0601 0030               3896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               3897mmm         BRA     DONE_278
00002B4E  0601 0037               3898mmm ALPHA_278: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    3899mmm DONE_278: NOP
00002B54                          3900mmm         ENDM
00002B54  4E4F                    3901mm         TRAP    #15         ; EXECUTE OUTPUT
00002B56                          3902mm         
00002B56  3212                    3903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B58  E149                    3904mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B5A  E049                    3905mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B5C  E849                    3906mm         LSR.W   #4, D1      
00002B5E                          3907mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B5E  0C01 0009               3908mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B62  6E00 000A               3909mmm         BGT     ALPHA_279
00002B66  0601 0030               3910mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B6A  6000 0006               3911mmm         BRA     DONE_279
00002B6E  0601 0037               3912mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B72  4E71                    3913mmm DONE_279: NOP
00002B74                          3914mmm         ENDM
00002B74  4E4F                    3915mm         TRAP    #15         ; EXECUTE OUTPUT
00002B76                          3916mm         
00002B76  3212                    3917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B78  E149                    3918mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B7A  E949                    3919mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B7C  E049                    3920mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7E  E849                    3921mm         LSR.W   #4, D1      
00002B80                          3922mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B80  0C01 0009               3923mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B84  6E00 000A               3924mmm         BGT     ALPHA_280
00002B88  0601 0030               3925mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B8C  6000 0006               3926mmm         BRA     DONE_280
00002B90  0601 0037               3927mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B94  4E71                    3928mmm DONE_280: NOP
00002B96                          3929mmm         ENDM
00002B96  4E4F                    3930mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B98                          3931mm         ENDM 
00002B98  361A                    3932m         MOVE.W  (A2)+, D3
00002B9A                          3933mm         ADROUT
00002B9A  3212                    3934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B9C  E049                    3935mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B9E  E849                    3936mm         LSR.W   #4, D1      
00002BA0                          3937mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BA0  0C01 0009               3938mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BA4  6E00 000A               3939mmm         BGT     ALPHA_282
00002BA8  0601 0030               3940mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BAC  6000 0006               3941mmm         BRA     DONE_282
00002BB0  0601 0037               3942mmm ALPHA_282: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BB4  4E71                    3943mmm DONE_282: NOP
00002BB6                          3944mmm         ENDM
00002BB6  4E4F                    3945mm         TRAP    #15         ; EXECUTE OUTPUT
00002BB8                          3946mm         
00002BB8  3212                    3947mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BBA  E949                    3948mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002BBC  E049                    3949mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BBE  E849                    3950mm         LSR.W   #4, D1      
00002BC0                          3951mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BC0  0C01 0009               3952mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BC4  6E00 000A               3953mmm         BGT     ALPHA_283
00002BC8  0601 0030               3954mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BCC  6000 0006               3955mmm         BRA     DONE_283
00002BD0  0601 0037               3956mmm ALPHA_283: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BD4  4E71                    3957mmm DONE_283: NOP
00002BD6                          3958mmm         ENDM
00002BD6  4E4F                    3959mm         TRAP    #15         ; EXECUTE OUTPUT
00002BD8                          3960mm         
00002BD8  3212                    3961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BDA  E149                    3962mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BDC  E049                    3963mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BDE  E849                    3964mm         LSR.W   #4, D1      
00002BE0                          3965mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BE0  0C01 0009               3966mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BE4  6E00 000A               3967mmm         BGT     ALPHA_284
00002BE8  0601 0030               3968mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BEC  6000 0006               3969mmm         BRA     DONE_284
00002BF0  0601 0037               3970mmm ALPHA_284: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BF4  4E71                    3971mmm DONE_284: NOP
00002BF6                          3972mmm         ENDM
00002BF6  4E4F                    3973mm         TRAP    #15         ; EXECUTE OUTPUT
00002BF8                          3974mm         
00002BF8  3212                    3975mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BFA  E149                    3976mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BFC  E949                    3977mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BFE  E049                    3978mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C00  E849                    3979mm         LSR.W   #4, D1      
00002C02                          3980mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C02  0C01 0009               3981mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C06  6E00 000A               3982mmm         BGT     ALPHA_285
00002C0A  0601 0030               3983mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C0E  6000 0006               3984mmm         BRA     DONE_285
00002C12  0601 0037               3985mmm ALPHA_285: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C16  4E71                    3986mmm DONE_285: NOP
00002C18                          3987mmm         ENDM
00002C18  4E4F                    3988mm         TRAP    #15         ; EXECUTE OUTPUT       
00002C1A                          3989mm         ENDM 
00002C1A  3605                    3990m         MOVE.W  D5, D3
00002C1C                          3991m 
00002C1C                          3992m COMPLETE_222:  ; OPCODE HAS BEEN VERIFIED
00002C1C                          3993m         ENDM
00002C1C                          3994m         printComma
00002C1C  43F8 00C9               3995m         LEA     OCOMMA, A1     
00002C20  103C 000E               3996m         MOVE.B  #14,D0          
00002C24  4E4F                    3997m         TRAP    #15
00002C26                          3998m         ENDM
00002C26                          3999m         printDnDest     D3
00002C26  3203                    4000m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002C28  E949                    4001m         LSL     #$04, D1
00002C2A  E049                    4002m         LSR     #$08, D1
00002C2C  EA49                    4003m         LSR     #$05, D1
00002C2E  43F8 00C1               4004m         LEA     ODN, A1     
00002C32  103C 000E               4005m         MOVE.B  #14,D0          
00002C36  4E4F                    4006m         TRAP    #15
00002C38  103C 0003               4007m         MOVE.B  #3,D0          
00002C3C  4E4F                    4008m         TRAP    #15
00002C3E                          4009m         ENDM
00002C3E                          4010  decodeADDcomp:
00002C3E  4E75                    4011          RTS                ; Return from decodeADD subroutine
00002C40                          4012  
00002C40                          4013  
00002C40                          4014  ; ------------------------------------------------------------
00002C40                          4015  ; 5. "decodeSUB" subroutine
00002C40                          4016  ; AUTHOR
00002C40                          4017  ;
00002C40                          4018  ; TODO: DESCRIPTION
00002C40                          4019  ; ------------------------------------------------------------
00002C40                          4020  decodeSUB:
00002C40                          4021m         verifyOpcode    pSUB, (A2)
00002C40  43F8 0118               4022m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002C44  3612                    4023m         MOVE.W  (A2), D3      ; INPUT VALUE
00002C46  123C 000F               4024m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002C4A                          4025m         
00002C4A                          4026m LOOP_288: 
00002C4A  0C11 0030               4027m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002C4E  6700 000E               4028m         BEQ     CHECKFOR0_288
00002C52  0C11 0031               4029m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002C56  6700 0010               4030m         BEQ     CHECKFOR1_288
00002C5A  6000 0012               4031m         BRA     NEXT_288      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002C5E                          4032m         
00002C5E                          4033m CHECKFOR0_288: 
00002C5E  0303                    4034m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002C60  6600 3EEE               4035m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002C64  6000 0008               4036m         BRA     NEXT_288
00002C68                          4037m 
00002C68                          4038m CHECKFOR1_288:
00002C68  0303                    4039m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002C6A  6700 3EE4               4040m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002C6E                          4041m 
00002C6E                          4042m NEXT_288: 
00002C6E  B23C 0000               4043m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002C72  6700 0008               4044m         BEQ     COMPLETE_288  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002C76  5301                    4045m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002C78  1819                    4046m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002C7A  60CE                    4047m         BRA     LOOP_288      ; BEGIN LOOP AGAIN
00002C7C                          4048m 
00002C7C                          4049m COMPLETE_288:  ; OPCODE HAS BEEN VERIFIED
00002C7C                          4050m         ENDM
00002C7C  43F8 0073               4051          LEA     oSUB, A1     
00002C80  103C 000E               4052          MOVE.B  #14,D0          
00002C84  4E4F                    4053          TRAP    #15
00002C86                          4054m         printOpMode     (A2)
00002C86  3612                    4055m         MOVE.W  (A2), D3      
00002C88  123C 0008               4056m         MOVE.B  #8, D1    
00002C8C  4246                    4057m         CLR     D6
00002C8E                          4058m CHECKFORDESTDN_289: 
00002C8E  0303                    4059m         BTST    D1, D3      
00002C90  6600 0048               4060m         BNE     CHECKFORSRCDN_289
00002C94  4EB9 00002D64           4061m         JSR     NEXT_289
00002C9A  1C3C 0001               4062m         MOVE.B  #$1, D6
00002C9E  0303                    4063m         BTST    D1, D3      
00002CA0  6700 0010               4064m         BEQ     DESTDNW_289
00002CA4                          4065m DESTDNL_289:        
00002CA4  43F8 00BD               4066m         LEA     OLSIZE, A1     
00002CA8  103C 000E               4067m         MOVE.B  #14,D0          
00002CAC  4E4F                    4068m         TRAP    #15
00002CAE  6000 00B8               4069m         BRA     COMPLETE_289 
00002CB2                          4070m DESTDNW_289: 
00002CB2  4EB9 00002D64           4071m         JSR     NEXT_289
00002CB8  0303                    4072m         BTST    D1, D3      
00002CBA  6700 0010               4073m         BEQ     DESTDNB_289
00002CBE  43F8 00B9               4074m         LEA     OWSIZE, A1     
00002CC2  103C 000E               4075m         MOVE.B  #14,D0          
00002CC6  4E4F                    4076m         TRAP    #15
00002CC8  6000 009E               4077m         BRA     COMPLETE_289 
00002CCC                          4078m DESTDNB_289: 
00002CCC  43F8 00B5               4079m         LEA     OBSIZE, A1     
00002CD0  103C 000E               4080m         MOVE.B  #14,D0          
00002CD4  4E4F                    4081m         TRAP    #15
00002CD6  6000 0090               4082m         BRA     COMPLETE_289 
00002CDA                          4083m CHECKFORSRCDN_289: 
00002CDA  4EB9 00002D64           4084m         JSR     NEXT_289
00002CE0  0303                    4085m         BTST    D1, D3      
00002CE2  6700 0028               4086m         BEQ     SRCDNW_289
00002CE6                          4087m SRCDNL_289:        
00002CE6  43F8 00BD               4088m         LEA     OLSIZE, A1     
00002CEA  103C 000E               4089m         MOVE.B  #14,D0          
00002CEE  4E4F                    4090m         TRAP    #15
00002CF0                          4091mm         PRINTDNDEST D3
00002CF0  3203                    4092mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002CF2  E949                    4093mm         LSL     #$04, D1
00002CF4  E049                    4094mm         LSR     #$08, D1
00002CF6  EA49                    4095mm         LSR     #$05, D1
00002CF8  43F8 00C1               4096mm         LEA     ODN, A1     
00002CFC  103C 000E               4097mm         MOVE.B  #14,D0          
00002D00  4E4F                    4098mm         TRAP    #15
00002D02  103C 0003               4099mm         MOVE.B  #3,D0          
00002D06  4E4F                    4100mm         TRAP    #15
00002D08                          4101mm         ENDM
00002D08  6000 005E               4102m         BRA     COMPLETE_289 
00002D0C                          4103m SRCDNW_289:
00002D0C  4EB9 00002D64           4104m         JSR     NEXT_289
00002D12  0303                    4105m         BTST    D1, D3     
00002D14  6700 0028               4106m         BEQ     SRCDNB_289
00002D18  43F8 00B9               4107m         LEA     OWSIZE, A1     
00002D1C  103C 000E               4108m         MOVE.B  #14,D0          
00002D20  4E4F                    4109m         TRAP    #15
00002D22                          4110mm         PRINTDNDEST D3
00002D22  3203                    4111mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D24  E949                    4112mm         LSL     #$04, D1
00002D26  E049                    4113mm         LSR     #$08, D1
00002D28  EA49                    4114mm         LSR     #$05, D1
00002D2A  43F8 00C1               4115mm         LEA     ODN, A1     
00002D2E  103C 000E               4116mm         MOVE.B  #14,D0          
00002D32  4E4F                    4117mm         TRAP    #15
00002D34  103C 0003               4118mm         MOVE.B  #3,D0          
00002D38  4E4F                    4119mm         TRAP    #15
00002D3A                          4120mm         ENDM
00002D3A  6000 002C               4121m         BRA     COMPLETE_289 
00002D3E                          4122m SRCDNB_289: 
00002D3E  43F8 00B5               4123m         LEA     OBSIZE, A1     
00002D42  103C 000E               4124m         MOVE.B  #14,D0          
00002D46  4E4F                    4125m         TRAP    #15
00002D48                          4126mm         PRINTDNDEST D3
00002D48  3203                    4127mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D4A  E949                    4128mm         LSL     #$04, D1
00002D4C  E049                    4129mm         LSR     #$08, D1
00002D4E  EA49                    4130mm         LSR     #$05, D1
00002D50  43F8 00C1               4131mm         LEA     ODN, A1     
00002D54  103C 000E               4132mm         MOVE.B  #14,D0          
00002D58  4E4F                    4133mm         TRAP    #15
00002D5A  103C 0003               4134mm         MOVE.B  #3,D0          
00002D5E  4E4F                    4135mm         TRAP    #15
00002D60                          4136mm         ENDM
00002D60  6000 0006               4137m         BRA     COMPLETE_289 
00002D64                          4138m 
00002D64                          4139m NEXT_289:
00002D64  5301                    4140m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D66  4E75                    4141m         RTS                
00002D68                          4142m 
00002D68                          4143m COMPLETE_289:  ; OPCODE HAS BEEN VERIFIED
00002D68                          4144m         ENDM
00002D68  BC3C 0001               4145          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002D6C  6700 05EA               4146          BEQ     decodeSubDestOp
00002D70                          4147m         printComma
00002D70  43F8 00C9               4148m         LEA     OCOMMA, A1     
00002D74  103C 000E               4149m         MOVE.B  #14,D0          
00002D78  4E4F                    4150m         TRAP    #15
00002D7A                          4151m         ENDM
00002D7A                          4152m         prepareAdrMode  #$0, (A2)
00002D7A  3C3C 0000               4153m         MOVE.W  #$0, D6      ; INPUT VALUE
00002D7E  3212                    4154m         MOVE.W  (A2), D1
00002D80  BC3C 0001               4155m         CMP.B   #$01, D6
00002D84  6700 000C               4156m         BEQ     ADRSOURCE_294    
00002D88                          4157m ADRDEST_294:
00002D88  EF49                    4158m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002D8A  E049                    4159m         LSR     #$08, D1
00002D8C  EA49                    4160m         LSR     #$05, D1
00002D8E  6000 000A               4161m         BRA     COMPLETE_294 
00002D92                          4162m ADRSOURCE_294:                
00002D92  E149                    4163m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002D94  E549                    4164m         LSL     #$02, D1
00002D96  E049                    4165m         LSR     #$08, D1
00002D98  EA49                    4166m         LSR     #$05, D1
00002D9A                          4167m COMPLETE_294:  ; OPCODE HAS BEEN VERIFIED
00002D9A                          4168m         ENDM        
00002D9A                          4169m         decodeAdrMode   (A2), D1
00002D9A  3612                    4170m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002D9C  3201                    4171m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002D9E                          4172m 
00002D9E  B23C 0001               4173m         CMP.B   #$01, D1
00002DA2  6700 0066               4174m         BEQ     ADRREGDIRECT_295    
00002DA6  B23C 0002               4175m         CMP.B   #$02, D1
00002DAA  6700 00A0               4176m         BEQ     ADRREGINDIRECT_295  
00002DAE  B23C 0003               4177m         CMP.B   #$03, D1
00002DB2  6700 0102               4178m         BEQ     ADRREGPOSTINC_295  
00002DB6  B23C 0004               4179m         CMP.B   #$04, D1
00002DBA  6700 0178               4180m         BEQ     ADRREGPREDEC_295
00002DBE  B23C 0007               4181m         CMP.B   #$07, D1
00002DC2  6700 01EE               4182m         BEQ     ADRABSOLUTE_295    
00002DC6                          4183m         
00002DC6                          4184m DATAREGDIRECT_295: 
00002DC6  BC3C 0001               4185m         CMP.B   #$01, D6
00002DCA  6700 001E               4186m         BEQ     DATAREGDIRECTSRC_295   
00002DCE                          4187m DATAREGDIRECTDEST_295: 
00002DCE                          4188mm         PRINTDNDEST D3 
00002DCE  3203                    4189mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DD0  E949                    4190mm         LSL     #$04, D1
00002DD2  E049                    4191mm         LSR     #$08, D1
00002DD4  EA49                    4192mm         LSR     #$05, D1
00002DD6  43F8 00C1               4193mm         LEA     ODN, A1     
00002DDA  103C 000E               4194mm         MOVE.B  #14,D0          
00002DDE  4E4F                    4195mm         TRAP    #15
00002DE0  103C 0003               4196mm         MOVE.B  #3,D0          
00002DE4  4E4F                    4197mm         TRAP    #15
00002DE6                          4198mm         ENDM
00002DE6  6000 056C               4199m         BRA     COMPLETE_295 
00002DEA                          4200m DATAREGDIRECTSRC_295: 
00002DEA                          4201mm         PRINTDNSRC D3 
00002DEA  4281                    4202mm         CLR.L   D1
00002DEC  3203                    4203mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002DEE  E149                    4204mm         LSL     #$08, D1
00002DF0  EB49                    4205mm         LSL     #$05, D1
00002DF2  E049                    4206mm         LSR     #$08, D1
00002DF4  EA49                    4207mm         LSR     #$05, D1
00002DF6  43F8 00C1               4208mm         LEA     ODN, A1     
00002DFA  103C 000E               4209mm         MOVE.B  #14,D0          
00002DFE  4E4F                    4210mm         TRAP    #15
00002E00  103C 0003               4211mm         MOVE.B  #3,D0          
00002E04  4E4F                    4212mm         TRAP    #15
00002E06                          4213mm         ENDM
00002E06  6000 054C               4214m         BRA     COMPLETE_295   
00002E0A                          4215m         
00002E0A                          4216m ADRREGDIRECT_295: 
00002E0A  BC3C 0001               4217m         CMP.B   #$01, D6
00002E0E  6700 001E               4218m         BEQ     ADRREGDIRECTSRC_295   
00002E12                          4219m ADRREGDIRECTDEST_295:
00002E12                          4220mm         PRINTANDEST D3
00002E12  3203                    4221mm         MOVE.W  D3, D1
00002E14  E949                    4222mm         LSL     #$04, D1
00002E16  E049                    4223mm         LSR     #$08, D1
00002E18  EA49                    4224mm         LSR     #$05, D1
00002E1A  43F8 00C3               4225mm         LEA     OAN, A1     
00002E1E  103C 000E               4226mm         MOVE.B  #14,D0          
00002E22  4E4F                    4227mm         TRAP    #15
00002E24  103C 0003               4228mm         MOVE.B  #3,D0          
00002E28  4E4F                    4229mm         TRAP    #15
00002E2A                          4230mm         ENDM
00002E2A  6000 0528               4231m         BRA     COMPLETE_295   
00002E2E                          4232m ADRREGDIRECTSRC_295:
00002E2E                          4233mm         PRINTANSRC D3
00002E2E  3203                    4234mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E30  E149                    4235mm         LSL     #$08, D1
00002E32  EB49                    4236mm         LSL     #$05, D1
00002E34  E049                    4237mm         LSR     #$08, D1
00002E36  EA49                    4238mm         LSR     #$05, D1
00002E38  43F8 00C3               4239mm         LEA     OAN, A1     
00002E3C  103C 000E               4240mm         MOVE.B  #14,D0          
00002E40  4E4F                    4241mm         TRAP    #15
00002E42  103C 0003               4242mm         MOVE.B  #3,D0          
00002E46  4E4F                    4243mm         TRAP    #15
00002E48                          4244mm         ENDM
00002E48  6000 050A               4245m         BRA     COMPLETE_295   
00002E4C                          4246m        
00002E4C                          4247m ADRREGINDIRECT_295:   
00002E4C  BC3C 0001               4248m         CMP.B   #$01, D6
00002E50  6700 0032               4249m         BEQ     ADRREGINDIRECTSRC_295   
00002E54                          4250m ADRREGINDIRECTDEST_295:
00002E54                          4251mm         PRINTLB
00002E54  43F8 00C5               4252mm         LEA     OLB, A1     
00002E58  103C 000E               4253mm         MOVE.B  #14,D0          
00002E5C  4E4F                    4254mm         TRAP    #15
00002E5E                          4255mm         ENDM
00002E5E                          4256mm         PRINTANDEST D3  
00002E5E  3203                    4257mm         MOVE.W  D3, D1
00002E60  E949                    4258mm         LSL     #$04, D1
00002E62  E049                    4259mm         LSR     #$08, D1
00002E64  EA49                    4260mm         LSR     #$05, D1
00002E66  43F8 00C3               4261mm         LEA     OAN, A1     
00002E6A  103C 000E               4262mm         MOVE.B  #14,D0          
00002E6E  4E4F                    4263mm         TRAP    #15
00002E70  103C 0003               4264mm         MOVE.B  #3,D0          
00002E74  4E4F                    4265mm         TRAP    #15
00002E76                          4266mm         ENDM
00002E76                          4267mm         PRINTRB
00002E76  43F8 00C7               4268mm         LEA     ORB, A1     
00002E7A  103C 000E               4269mm         MOVE.B  #14,D0          
00002E7E  4E4F                    4270mm         TRAP    #15
00002E80                          4271mm         ENDM
00002E80  6000 04D2               4272m         BRA     COMPLETE_295     
00002E84                          4273m ADRREGINDIRECTSRC_295:   
00002E84                          4274mm         PRINTLB
00002E84  43F8 00C5               4275mm         LEA     OLB, A1     
00002E88  103C 000E               4276mm         MOVE.B  #14,D0          
00002E8C  4E4F                    4277mm         TRAP    #15
00002E8E                          4278mm         ENDM
00002E8E                          4279mm         PRINTANSRC D3  
00002E8E  3203                    4280mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E90  E149                    4281mm         LSL     #$08, D1
00002E92  EB49                    4282mm         LSL     #$05, D1
00002E94  E049                    4283mm         LSR     #$08, D1
00002E96  EA49                    4284mm         LSR     #$05, D1
00002E98  43F8 00C3               4285mm         LEA     OAN, A1     
00002E9C  103C 000E               4286mm         MOVE.B  #14,D0          
00002EA0  4E4F                    4287mm         TRAP    #15
00002EA2  103C 0003               4288mm         MOVE.B  #3,D0          
00002EA6  4E4F                    4289mm         TRAP    #15
00002EA8                          4290mm         ENDM
00002EA8                          4291mm         PRINTRB
00002EA8  43F8 00C7               4292mm         LEA     ORB, A1     
00002EAC  103C 000E               4293mm         MOVE.B  #14,D0          
00002EB0  4E4F                    4294mm         TRAP    #15
00002EB2                          4295mm         ENDM
00002EB2  6000 04A0               4296m         BRA     COMPLETE_295   
00002EB6                          4297m         
00002EB6                          4298m ADRREGPOSTINC_295:   
00002EB6  BC3C 0001               4299m         CMP.B   #$01, D6
00002EBA  6700 003C               4300m         BEQ     ADRREGPOSTINCSRC_295   
00002EBE                          4301m ADRREGPOSTINCDEST_295: 
00002EBE                          4302mm         PRINTLB
00002EBE  43F8 00C5               4303mm         LEA     OLB, A1     
00002EC2  103C 000E               4304mm         MOVE.B  #14,D0          
00002EC6  4E4F                    4305mm         TRAP    #15
00002EC8                          4306mm         ENDM
00002EC8                          4307mm         PRINTANDEST D3  
00002EC8  3203                    4308mm         MOVE.W  D3, D1
00002ECA  E949                    4309mm         LSL     #$04, D1
00002ECC  E049                    4310mm         LSR     #$08, D1
00002ECE  EA49                    4311mm         LSR     #$05, D1
00002ED0  43F8 00C3               4312mm         LEA     OAN, A1     
00002ED4  103C 000E               4313mm         MOVE.B  #14,D0          
00002ED8  4E4F                    4314mm         TRAP    #15
00002EDA  103C 0003               4315mm         MOVE.B  #3,D0          
00002EDE  4E4F                    4316mm         TRAP    #15
00002EE0                          4317mm         ENDM
00002EE0                          4318mm         PRINTRB
00002EE0  43F8 00C7               4319mm         LEA     ORB, A1     
00002EE4  103C 000E               4320mm         MOVE.B  #14,D0          
00002EE8  4E4F                    4321mm         TRAP    #15
00002EEA                          4322mm         ENDM
00002EEA                          4323mm         PRINTPI
00002EEA  43F8 00CE               4324mm         LEA     OPSTINC, A1     
00002EEE  103C 000E               4325mm         MOVE.B  #14,D0          
00002EF2  4E4F                    4326mm         TRAP    #15
00002EF4                          4327mm         ENDM
00002EF4  6000 045E               4328m         BRA     COMPLETE_295  
00002EF8                          4329m ADRREGPOSTINCSRC_295:           
00002EF8                          4330mm         PRINTLB
00002EF8  43F8 00C5               4331mm         LEA     OLB, A1     
00002EFC  103C 000E               4332mm         MOVE.B  #14,D0          
00002F00  4E4F                    4333mm         TRAP    #15
00002F02                          4334mm         ENDM
00002F02                          4335mm         PRINTANSRC D3  
00002F02  3203                    4336mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F04  E149                    4337mm         LSL     #$08, D1
00002F06  EB49                    4338mm         LSL     #$05, D1
00002F08  E049                    4339mm         LSR     #$08, D1
00002F0A  EA49                    4340mm         LSR     #$05, D1
00002F0C  43F8 00C3               4341mm         LEA     OAN, A1     
00002F10  103C 000E               4342mm         MOVE.B  #14,D0          
00002F14  4E4F                    4343mm         TRAP    #15
00002F16  103C 0003               4344mm         MOVE.B  #3,D0          
00002F1A  4E4F                    4345mm         TRAP    #15
00002F1C                          4346mm         ENDM
00002F1C                          4347mm         PRINTRB
00002F1C  43F8 00C7               4348mm         LEA     ORB, A1     
00002F20  103C 000E               4349mm         MOVE.B  #14,D0          
00002F24  4E4F                    4350mm         TRAP    #15
00002F26                          4351mm         ENDM
00002F26                          4352mm         PRINTPI
00002F26  43F8 00CE               4353mm         LEA     OPSTINC, A1     
00002F2A  103C 000E               4354mm         MOVE.B  #14,D0          
00002F2E  4E4F                    4355mm         TRAP    #15
00002F30                          4356mm         ENDM
00002F30  6000 0422               4357m         BRA     COMPLETE_295  
00002F34                          4358m         
00002F34                          4359m ADRREGPREDEC_295: 
00002F34  BC3C 0001               4360m         CMP.B   #$01, D6
00002F38  6700 003C               4361m         BEQ     ADRREGPREDECSRC_295   
00002F3C                          4362m ADRREGPREDECDEST_295:
00002F3C                          4363mm         PRINTPD  
00002F3C  43F8 00CC               4364mm         LEA     OPREDEC, A1     
00002F40  103C 000E               4365mm         MOVE.B  #14,D0          
00002F44  4E4F                    4366mm         TRAP    #15
00002F46                          4367mm         ENDM
00002F46                          4368mm         PRINTLB
00002F46  43F8 00C5               4369mm         LEA     OLB, A1     
00002F4A  103C 000E               4370mm         MOVE.B  #14,D0          
00002F4E  4E4F                    4371mm         TRAP    #15
00002F50                          4372mm         ENDM
00002F50                          4373mm         PRINTANDEST D3  
00002F50  3203                    4374mm         MOVE.W  D3, D1
00002F52  E949                    4375mm         LSL     #$04, D1
00002F54  E049                    4376mm         LSR     #$08, D1
00002F56  EA49                    4377mm         LSR     #$05, D1
00002F58  43F8 00C3               4378mm         LEA     OAN, A1     
00002F5C  103C 000E               4379mm         MOVE.B  #14,D0          
00002F60  4E4F                    4380mm         TRAP    #15
00002F62  103C 0003               4381mm         MOVE.B  #3,D0          
00002F66  4E4F                    4382mm         TRAP    #15
00002F68                          4383mm         ENDM
00002F68                          4384mm         PRINTRB
00002F68  43F8 00C7               4385mm         LEA     ORB, A1     
00002F6C  103C 000E               4386mm         MOVE.B  #14,D0          
00002F70  4E4F                    4387mm         TRAP    #15
00002F72                          4388mm         ENDM
00002F72  6000 03E0               4389m         BRA     COMPLETE_295   
00002F76                          4390m ADRREGPREDECSRC_295: 
00002F76                          4391mm         PRINTPD  
00002F76  43F8 00CC               4392mm         LEA     OPREDEC, A1     
00002F7A  103C 000E               4393mm         MOVE.B  #14,D0          
00002F7E  4E4F                    4394mm         TRAP    #15
00002F80                          4395mm         ENDM
00002F80                          4396mm         PRINTLB
00002F80  43F8 00C5               4397mm         LEA     OLB, A1     
00002F84  103C 000E               4398mm         MOVE.B  #14,D0          
00002F88  4E4F                    4399mm         TRAP    #15
00002F8A                          4400mm         ENDM
00002F8A                          4401mm         PRINTANSRC D3  
00002F8A  3203                    4402mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F8C  E149                    4403mm         LSL     #$08, D1
00002F8E  EB49                    4404mm         LSL     #$05, D1
00002F90  E049                    4405mm         LSR     #$08, D1
00002F92  EA49                    4406mm         LSR     #$05, D1
00002F94  43F8 00C3               4407mm         LEA     OAN, A1     
00002F98  103C 000E               4408mm         MOVE.B  #14,D0          
00002F9C  4E4F                    4409mm         TRAP    #15
00002F9E  103C 0003               4410mm         MOVE.B  #3,D0          
00002FA2  4E4F                    4411mm         TRAP    #15
00002FA4                          4412mm         ENDM
00002FA4                          4413mm         PRINTRB
00002FA4  43F8 00C7               4414mm         LEA     ORB, A1     
00002FA8  103C 000E               4415mm         MOVE.B  #14,D0          
00002FAC  4E4F                    4416mm         TRAP    #15
00002FAE                          4417mm         ENDM
00002FAE  6000 03A4               4418m         BRA     COMPLETE_295
00002FB2                          4419m        
00002FB2                          4420m ADRABSOLUTE_295:
00002FB2  BC3C 0001               4421m         CMP.B   #$01, D6
00002FB6  6600 0018               4422m         BNE     ADRABSOLUTEDST_295 
00002FBA                          4423m         
00002FBA  3A03                    4424m         MOVE.W  D3, D5
00002FBC  0803 0002               4425m         BTST    #2, D3
00002FC0  6600 0024               4426m         BNE     ADRIMMEDIATE_295
00002FC4  0803 0000               4427m         BTST    #0, D3
00002FC8  6600 027A               4428m         BNE     ADRABSOLUTEL_295
00002FCC  6000 01DA               4429m         BRA     ADRABSOLUTEW_295
00002FD0                          4430m ADRABSOLUTEDST_295:
00002FD0  3A03                    4431m         MOVE.W  D3, D5
00002FD2  0803 000B               4432m         BTST    #$B, D3
00002FD6  6600 000E               4433m         BNE     ADRIMMEDIATE_295
00002FDA  0803 0009               4434m         BTST    #$09, D3
00002FDE  6600 0264               4435m         BNE     ADRABSOLUTEL_295
00002FE2  6000 01C4               4436m         BRA     ADRABSOLUTEW_295
00002FE6                          4437m ADRIMMEDIATE_295:
00002FE6  BE3C 0001               4438m         CMP.B   #1, D7
00002FEA  6700 009E               4439m         BEQ     ADRIMMEDIATEL_295
00002FEE                          4440m ADRIMMEDIATEW_295:
00002FEE  361A                    4441m         MOVE.W  (A2)+, D3
00002FF0                          4442mm         PRINTHASH
00002FF0  103C 0006               4443mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FF4  323C 0023               4444mm         MOVE.W  #35, D1     ; AN = SIGN
00002FF8  4E4F                    4445mm         TRAP    #15         ; OUTPUT = SIGN
00002FFA                          4446mm         ENDM
00002FFA                          4447mm         PRINTSIGN
00002FFA  103C 0006               4448mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FFE  323C 0024               4449mm         MOVE.W  #36, D1     ; AN = SIGN
00003002  4E4F                    4450mm         TRAP    #15         ; OUTPUT = SIGN
00003004                          4451mm         ENDM
00003004                          4452mm         ADROUT
00003004  3212                    4453mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003006  E049                    4454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003008  E849                    4455mm         LSR.W   #4, D1      
0000300A                          4456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000300A  0C01 0009               4457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000300E  6E00 000A               4458mmm         BGT     ALPHA_325
00003012  0601 0030               4459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003016  6000 0006               4460mmm         BRA     DONE_325
0000301A  0601 0037               4461mmm ALPHA_325: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000301E  4E71                    4462mmm DONE_325: NOP
00003020                          4463mmm         ENDM
00003020  4E4F                    4464mm         TRAP    #15         ; EXECUTE OUTPUT
00003022                          4465mm         
00003022  3212                    4466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003024  E949                    4467mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003026  E049                    4468mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003028  E849                    4469mm         LSR.W   #4, D1      
0000302A                          4470mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000302A  0C01 0009               4471mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000302E  6E00 000A               4472mmm         BGT     ALPHA_326
00003032  0601 0030               4473mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003036  6000 0006               4474mmm         BRA     DONE_326
0000303A  0601 0037               4475mmm ALPHA_326: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000303E  4E71                    4476mmm DONE_326: NOP
00003040                          4477mmm         ENDM
00003040  4E4F                    4478mm         TRAP    #15         ; EXECUTE OUTPUT
00003042                          4479mm         
00003042  3212                    4480mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003044  E149                    4481mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003046  E049                    4482mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003048  E849                    4483mm         LSR.W   #4, D1      
0000304A                          4484mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000304A  0C01 0009               4485mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000304E  6E00 000A               4486mmm         BGT     ALPHA_327
00003052  0601 0030               4487mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003056  6000 0006               4488mmm         BRA     DONE_327
0000305A  0601 0037               4489mmm ALPHA_327: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000305E  4E71                    4490mmm DONE_327: NOP
00003060                          4491mmm         ENDM
00003060  4E4F                    4492mm         TRAP    #15         ; EXECUTE OUTPUT
00003062                          4493mm         
00003062  3212                    4494mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003064  E149                    4495mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003066  E949                    4496mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003068  E049                    4497mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000306A  E849                    4498mm         LSR.W   #4, D1      
0000306C                          4499mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000306C  0C01 0009               4500mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003070  6E00 000A               4501mmm         BGT     ALPHA_328
00003074  0601 0030               4502mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003078  6000 0006               4503mmm         BRA     DONE_328
0000307C  0601 0037               4504mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003080  4E71                    4505mmm DONE_328: NOP
00003082                          4506mmm         ENDM
00003082  4E4F                    4507mm         TRAP    #15         ; EXECUTE OUTPUT       
00003084                          4508mm         ENDM 
00003084  3605                    4509m         MOVE.W  D5, D3
00003086  6000 02CC               4510m         BRA     COMPLETE_295
0000308A                          4511m ADRIMMEDIATEL_295:
0000308A  361A                    4512m         MOVE.W  (A2)+, D3
0000308C                          4513mm         PRINTHASH
0000308C  103C 0006               4514mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003090  323C 0023               4515mm         MOVE.W  #35, D1     ; AN = SIGN
00003094  4E4F                    4516mm         TRAP    #15         ; OUTPUT = SIGN
00003096                          4517mm         ENDM
00003096                          4518mm         PRINTSIGN
00003096  103C 0006               4519mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000309A  323C 0024               4520mm         MOVE.W  #36, D1     ; AN = SIGN
0000309E  4E4F                    4521mm         TRAP    #15         ; OUTPUT = SIGN
000030A0                          4522mm         ENDM
000030A0                          4523mm         ADROUT 
000030A0  3212                    4524mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030A2  E049                    4525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030A4  E849                    4526mm         LSR.W   #4, D1      
000030A6                          4527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030A6  0C01 0009               4528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030AA  6E00 000A               4529mmm         BGT     ALPHA_332
000030AE  0601 0030               4530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030B2  6000 0006               4531mmm         BRA     DONE_332
000030B6  0601 0037               4532mmm ALPHA_332: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030BA  4E71                    4533mmm DONE_332: NOP
000030BC                          4534mmm         ENDM
000030BC  4E4F                    4535mm         TRAP    #15         ; EXECUTE OUTPUT
000030BE                          4536mm         
000030BE  3212                    4537mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030C0  E949                    4538mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000030C2  E049                    4539mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030C4  E849                    4540mm         LSR.W   #4, D1      
000030C6                          4541mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030C6  0C01 0009               4542mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030CA  6E00 000A               4543mmm         BGT     ALPHA_333
000030CE  0601 0030               4544mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030D2  6000 0006               4545mmm         BRA     DONE_333
000030D6  0601 0037               4546mmm ALPHA_333: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030DA  4E71                    4547mmm DONE_333: NOP
000030DC                          4548mmm         ENDM
000030DC  4E4F                    4549mm         TRAP    #15         ; EXECUTE OUTPUT
000030DE                          4550mm         
000030DE  3212                    4551mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030E0  E149                    4552mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030E2  E049                    4553mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030E4  E849                    4554mm         LSR.W   #4, D1      
000030E6                          4555mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030E6  0C01 0009               4556mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030EA  6E00 000A               4557mmm         BGT     ALPHA_334
000030EE  0601 0030               4558mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030F2  6000 0006               4559mmm         BRA     DONE_334
000030F6  0601 0037               4560mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030FA  4E71                    4561mmm DONE_334: NOP
000030FC                          4562mmm         ENDM
000030FC  4E4F                    4563mm         TRAP    #15         ; EXECUTE OUTPUT
000030FE                          4564mm         
000030FE  3212                    4565mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003100  E149                    4566mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003102  E949                    4567mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003104  E049                    4568mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003106  E849                    4569mm         LSR.W   #4, D1      
00003108                          4570mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003108  0C01 0009               4571mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000310C  6E00 000A               4572mmm         BGT     ALPHA_335
00003110  0601 0030               4573mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003114  6000 0006               4574mmm         BRA     DONE_335
00003118  0601 0037               4575mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000311C  4E71                    4576mmm DONE_335: NOP
0000311E                          4577mmm         ENDM
0000311E  4E4F                    4578mm         TRAP    #15         ; EXECUTE OUTPUT       
00003120                          4579mm         ENDM 
00003120  361A                    4580m         MOVE.W  (A2)+, D3
00003122                          4581mm         ADROUT
00003122  3212                    4582mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003124  E049                    4583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003126  E849                    4584mm         LSR.W   #4, D1      
00003128                          4585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003128  0C01 0009               4586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312C  6E00 000A               4587mmm         BGT     ALPHA_337
00003130  0601 0030               4588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003134  6000 0006               4589mmm         BRA     DONE_337
00003138  0601 0037               4590mmm ALPHA_337: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313C  4E71                    4591mmm DONE_337: NOP
0000313E                          4592mmm         ENDM
0000313E  4E4F                    4593mm         TRAP    #15         ; EXECUTE OUTPUT
00003140                          4594mm         
00003140  3212                    4595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003142  E949                    4596mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003144  E049                    4597mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003146  E849                    4598mm         LSR.W   #4, D1      
00003148                          4599mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003148  0C01 0009               4600mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314C  6E00 000A               4601mmm         BGT     ALPHA_338
00003150  0601 0030               4602mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003154  6000 0006               4603mmm         BRA     DONE_338
00003158  0601 0037               4604mmm ALPHA_338: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315C  4E71                    4605mmm DONE_338: NOP
0000315E                          4606mmm         ENDM
0000315E  4E4F                    4607mm         TRAP    #15         ; EXECUTE OUTPUT
00003160                          4608mm         
00003160  3212                    4609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003162  E149                    4610mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003164  E049                    4611mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003166  E849                    4612mm         LSR.W   #4, D1      
00003168                          4613mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003168  0C01 0009               4614mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316C  6E00 000A               4615mmm         BGT     ALPHA_339
00003170  0601 0030               4616mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003174  6000 0006               4617mmm         BRA     DONE_339
00003178  0601 0037               4618mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317C  4E71                    4619mmm DONE_339: NOP
0000317E                          4620mmm         ENDM
0000317E  4E4F                    4621mm         TRAP    #15         ; EXECUTE OUTPUT
00003180                          4622mm         
00003180  3212                    4623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003182  E149                    4624mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003184  E949                    4625mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003186  E049                    4626mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003188  E849                    4627mm         LSR.W   #4, D1      
0000318A                          4628mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000318A  0C01 0009               4629mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000318E  6E00 000A               4630mmm         BGT     ALPHA_340
00003192  0601 0030               4631mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003196  6000 0006               4632mmm         BRA     DONE_340
0000319A  0601 0037               4633mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000319E  4E71                    4634mmm DONE_340: NOP
000031A0                          4635mmm         ENDM
000031A0  4E4F                    4636mm         TRAP    #15         ; EXECUTE OUTPUT       
000031A2                          4637mm         ENDM 
000031A2  3605                    4638m         MOVE.W  D5, D3
000031A4  6000 01AE               4639m         BRA     COMPLETE_295 
000031A8                          4640m ADRABSOLUTEW_295:     
000031A8  361A                    4641m         MOVE.W  (A2)+, D3
000031AA                          4642mm         PRINTSIGN
000031AA  103C 0006               4643mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031AE  323C 0024               4644mm         MOVE.W  #36, D1     ; AN = SIGN
000031B2  4E4F                    4645mm         TRAP    #15         ; OUTPUT = SIGN
000031B4                          4646mm         ENDM
000031B4                          4647mm         PRINTSIGN
000031B4  103C 0006               4648mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031B8  323C 0024               4649mm         MOVE.W  #36, D1     ; AN = SIGN
000031BC  4E4F                    4650mm         TRAP    #15         ; OUTPUT = SIGN
000031BE                          4651mm         ENDM
000031BE                          4652mm         ADROUT
000031BE  3212                    4653mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031C0  E049                    4654mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031C2  E849                    4655mm         LSR.W   #4, D1      
000031C4                          4656mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031C4  0C01 0009               4657mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031C8  6E00 000A               4658mmm         BGT     ALPHA_344
000031CC  0601 0030               4659mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031D0  6000 0006               4660mmm         BRA     DONE_344
000031D4  0601 0037               4661mmm ALPHA_344: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031D8  4E71                    4662mmm DONE_344: NOP
000031DA                          4663mmm         ENDM
000031DA  4E4F                    4664mm         TRAP    #15         ; EXECUTE OUTPUT
000031DC                          4665mm         
000031DC  3212                    4666mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031DE  E949                    4667mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031E0  E049                    4668mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031E2  E849                    4669mm         LSR.W   #4, D1      
000031E4                          4670mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031E4  0C01 0009               4671mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031E8  6E00 000A               4672mmm         BGT     ALPHA_345
000031EC  0601 0030               4673mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031F0  6000 0006               4674mmm         BRA     DONE_345
000031F4  0601 0037               4675mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031F8  4E71                    4676mmm DONE_345: NOP
000031FA                          4677mmm         ENDM
000031FA  4E4F                    4678mm         TRAP    #15         ; EXECUTE OUTPUT
000031FC                          4679mm         
000031FC  3212                    4680mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031FE  E149                    4681mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003200  E049                    4682mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003202  E849                    4683mm         LSR.W   #4, D1      
00003204                          4684mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003204  0C01 0009               4685mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003208  6E00 000A               4686mmm         BGT     ALPHA_346
0000320C  0601 0030               4687mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003210  6000 0006               4688mmm         BRA     DONE_346
00003214  0601 0037               4689mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003218  4E71                    4690mmm DONE_346: NOP
0000321A                          4691mmm         ENDM
0000321A  4E4F                    4692mm         TRAP    #15         ; EXECUTE OUTPUT
0000321C                          4693mm         
0000321C  3212                    4694mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000321E  E149                    4695mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003220  E949                    4696mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003222  E049                    4697mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003224  E849                    4698mm         LSR.W   #4, D1      
00003226                          4699mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003226  0C01 0009               4700mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000322A  6E00 000A               4701mmm         BGT     ALPHA_347
0000322E  0601 0030               4702mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003232  6000 0006               4703mmm         BRA     DONE_347
00003236  0601 0037               4704mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000323A  4E71                    4705mmm DONE_347: NOP
0000323C                          4706mmm         ENDM
0000323C  4E4F                    4707mm         TRAP    #15         ; EXECUTE OUTPUT       
0000323E                          4708mm         ENDM 
0000323E  3605                    4709m         MOVE.W  D5, D3
00003240  6000 0112               4710m         BRA     COMPLETE_295  
00003244                          4711m ADRABSOLUTEL_295:  
00003244  361A                    4712m         MOVE.W  (A2)+, D3
00003246                          4713mm         PRINTSIGN
00003246  103C 0006               4714mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000324A  323C 0024               4715mm         MOVE.W  #36, D1     ; AN = SIGN
0000324E  4E4F                    4716mm         TRAP    #15         ; OUTPUT = SIGN
00003250                          4717mm         ENDM
00003250                          4718mm         ADROUT 
00003250  3212                    4719mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003252  E049                    4720mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003254  E849                    4721mm         LSR.W   #4, D1      
00003256                          4722mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003256  0C01 0009               4723mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000325A  6E00 000A               4724mmm         BGT     ALPHA_350
0000325E  0601 0030               4725mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003262  6000 0006               4726mmm         BRA     DONE_350
00003266  0601 0037               4727mmm ALPHA_350: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000326A  4E71                    4728mmm DONE_350: NOP
0000326C                          4729mmm         ENDM
0000326C  4E4F                    4730mm         TRAP    #15         ; EXECUTE OUTPUT
0000326E                          4731mm         
0000326E  3212                    4732mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003270  E949                    4733mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003272  E049                    4734mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003274  E849                    4735mm         LSR.W   #4, D1      
00003276                          4736mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003276  0C01 0009               4737mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000327A  6E00 000A               4738mmm         BGT     ALPHA_351
0000327E  0601 0030               4739mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003282  6000 0006               4740mmm         BRA     DONE_351
00003286  0601 0037               4741mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000328A  4E71                    4742mmm DONE_351: NOP
0000328C                          4743mmm         ENDM
0000328C  4E4F                    4744mm         TRAP    #15         ; EXECUTE OUTPUT
0000328E                          4745mm         
0000328E  3212                    4746mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003290  E149                    4747mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003292  E049                    4748mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003294  E849                    4749mm         LSR.W   #4, D1      
00003296                          4750mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003296  0C01 0009               4751mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000329A  6E00 000A               4752mmm         BGT     ALPHA_352
0000329E  0601 0030               4753mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032A2  6000 0006               4754mmm         BRA     DONE_352
000032A6  0601 0037               4755mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032AA  4E71                    4756mmm DONE_352: NOP
000032AC                          4757mmm         ENDM
000032AC  4E4F                    4758mm         TRAP    #15         ; EXECUTE OUTPUT
000032AE                          4759mm         
000032AE  3212                    4760mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032B0  E149                    4761mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032B2  E949                    4762mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000032B4  E049                    4763mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032B6  E849                    4764mm         LSR.W   #4, D1      
000032B8                          4765mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032B8  0C01 0009               4766mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032BC  6E00 000A               4767mmm         BGT     ALPHA_353
000032C0  0601 0030               4768mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032C4  6000 0006               4769mmm         BRA     DONE_353
000032C8  0601 0037               4770mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032CC  4E71                    4771mmm DONE_353: NOP
000032CE                          4772mmm         ENDM
000032CE  4E4F                    4773mm         TRAP    #15         ; EXECUTE OUTPUT       
000032D0                          4774mm         ENDM 
000032D0  361A                    4775m         MOVE.W  (A2)+, D3
000032D2                          4776mm         ADROUT
000032D2  3212                    4777mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032D4  E049                    4778mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032D6  E849                    4779mm         LSR.W   #4, D1      
000032D8                          4780mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032D8  0C01 0009               4781mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032DC  6E00 000A               4782mmm         BGT     ALPHA_355
000032E0  0601 0030               4783mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032E4  6000 0006               4784mmm         BRA     DONE_355
000032E8  0601 0037               4785mmm ALPHA_355: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032EC  4E71                    4786mmm DONE_355: NOP
000032EE                          4787mmm         ENDM
000032EE  4E4F                    4788mm         TRAP    #15         ; EXECUTE OUTPUT
000032F0                          4789mm         
000032F0  3212                    4790mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032F2  E949                    4791mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032F4  E049                    4792mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032F6  E849                    4793mm         LSR.W   #4, D1      
000032F8                          4794mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032F8  0C01 0009               4795mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032FC  6E00 000A               4796mmm         BGT     ALPHA_356
00003300  0601 0030               4797mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003304  6000 0006               4798mmm         BRA     DONE_356
00003308  0601 0037               4799mmm ALPHA_356: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000330C  4E71                    4800mmm DONE_356: NOP
0000330E                          4801mmm         ENDM
0000330E  4E4F                    4802mm         TRAP    #15         ; EXECUTE OUTPUT
00003310                          4803mm         
00003310  3212                    4804mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003312  E149                    4805mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003314  E049                    4806mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003316  E849                    4807mm         LSR.W   #4, D1      
00003318                          4808mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003318  0C01 0009               4809mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000331C  6E00 000A               4810mmm         BGT     ALPHA_357
00003320  0601 0030               4811mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003324  6000 0006               4812mmm         BRA     DONE_357
00003328  0601 0037               4813mmm ALPHA_357: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000332C  4E71                    4814mmm DONE_357: NOP
0000332E                          4815mmm         ENDM
0000332E  4E4F                    4816mm         TRAP    #15         ; EXECUTE OUTPUT
00003330                          4817mm         
00003330  3212                    4818mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003332  E149                    4819mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003334  E949                    4820mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003336  E049                    4821mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003338  E849                    4822mm         LSR.W   #4, D1      
0000333A                          4823mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000333A  0C01 0009               4824mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000333E  6E00 000A               4825mmm         BGT     ALPHA_358
00003342  0601 0030               4826mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003346  6000 0006               4827mmm         BRA     DONE_358
0000334A  0601 0037               4828mmm ALPHA_358: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000334E  4E71                    4829mmm DONE_358: NOP
00003350                          4830mmm         ENDM
00003350  4E4F                    4831mm         TRAP    #15         ; EXECUTE OUTPUT       
00003352                          4832mm         ENDM 
00003352  3605                    4833m         MOVE.W  D5, D3
00003354                          4834m 
00003354                          4835m COMPLETE_295:  ; OPCODE HAS BEEN VERIFIED
00003354                          4836m         ENDM
00003354  6000 05FE               4837          BRA     decodeSUBcomp
00003358                          4838  decodeSubDestOp:
00003358                          4839m         prepareAdrMode  #$1,(A2)
00003358  3C3C 0001               4840m         MOVE.W  #$1, D6      ; INPUT VALUE
0000335C  3212                    4841m         MOVE.W  (A2), D1
0000335E  BC3C 0001               4842m         CMP.B   #$01, D6
00003362  6700 000C               4843m         BEQ     ADRSOURCE_359    
00003366                          4844m ADRDEST_359:
00003366  EF49                    4845m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003368  E049                    4846m         LSR     #$08, D1
0000336A  EA49                    4847m         LSR     #$05, D1
0000336C  6000 000A               4848m         BRA     COMPLETE_359 
00003370                          4849m ADRSOURCE_359:                
00003370  E149                    4850m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003372  E549                    4851m         LSL     #$02, D1
00003374  E049                    4852m         LSR     #$08, D1
00003376  EA49                    4853m         LSR     #$05, D1
00003378                          4854m COMPLETE_359:  ; OPCODE HAS BEEN VERIFIED
00003378                          4855m         ENDM        
00003378                          4856m         decodeAdrMode   (A2), D1
00003378  3612                    4857m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000337A  3201                    4858m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000337C                          4859m 
0000337C  B23C 0001               4860m         CMP.B   #$01, D1
00003380  6700 0066               4861m         BEQ     ADRREGDIRECT_360    
00003384  B23C 0002               4862m         CMP.B   #$02, D1
00003388  6700 00A0               4863m         BEQ     ADRREGINDIRECT_360  
0000338C  B23C 0003               4864m         CMP.B   #$03, D1
00003390  6700 0102               4865m         BEQ     ADRREGPOSTINC_360  
00003394  B23C 0004               4866m         CMP.B   #$04, D1
00003398  6700 0178               4867m         BEQ     ADRREGPREDEC_360
0000339C  B23C 0007               4868m         CMP.B   #$07, D1
000033A0  6700 01EE               4869m         BEQ     ADRABSOLUTE_360    
000033A4                          4870m         
000033A4                          4871m DATAREGDIRECT_360: 
000033A4  BC3C 0001               4872m         CMP.B   #$01, D6
000033A8  6700 001E               4873m         BEQ     DATAREGDIRECTSRC_360   
000033AC                          4874m DATAREGDIRECTDEST_360: 
000033AC                          4875mm         PRINTDNDEST D3 
000033AC  3203                    4876mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000033AE  E949                    4877mm         LSL     #$04, D1
000033B0  E049                    4878mm         LSR     #$08, D1
000033B2  EA49                    4879mm         LSR     #$05, D1
000033B4  43F8 00C1               4880mm         LEA     ODN, A1     
000033B8  103C 000E               4881mm         MOVE.B  #14,D0          
000033BC  4E4F                    4882mm         TRAP    #15
000033BE  103C 0003               4883mm         MOVE.B  #3,D0          
000033C2  4E4F                    4884mm         TRAP    #15
000033C4                          4885mm         ENDM
000033C4  6000 056C               4886m         BRA     COMPLETE_360 
000033C8                          4887m DATAREGDIRECTSRC_360: 
000033C8                          4888mm         PRINTDNSRC D3 
000033C8  4281                    4889mm         CLR.L   D1
000033CA  3203                    4890mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033CC  E149                    4891mm         LSL     #$08, D1
000033CE  EB49                    4892mm         LSL     #$05, D1
000033D0  E049                    4893mm         LSR     #$08, D1
000033D2  EA49                    4894mm         LSR     #$05, D1
000033D4  43F8 00C1               4895mm         LEA     ODN, A1     
000033D8  103C 000E               4896mm         MOVE.B  #14,D0          
000033DC  4E4F                    4897mm         TRAP    #15
000033DE  103C 0003               4898mm         MOVE.B  #3,D0          
000033E2  4E4F                    4899mm         TRAP    #15
000033E4                          4900mm         ENDM
000033E4  6000 054C               4901m         BRA     COMPLETE_360   
000033E8                          4902m         
000033E8                          4903m ADRREGDIRECT_360: 
000033E8  BC3C 0001               4904m         CMP.B   #$01, D6
000033EC  6700 001E               4905m         BEQ     ADRREGDIRECTSRC_360   
000033F0                          4906m ADRREGDIRECTDEST_360:
000033F0                          4907mm         PRINTANDEST D3
000033F0  3203                    4908mm         MOVE.W  D3, D1
000033F2  E949                    4909mm         LSL     #$04, D1
000033F4  E049                    4910mm         LSR     #$08, D1
000033F6  EA49                    4911mm         LSR     #$05, D1
000033F8  43F8 00C3               4912mm         LEA     OAN, A1     
000033FC  103C 000E               4913mm         MOVE.B  #14,D0          
00003400  4E4F                    4914mm         TRAP    #15
00003402  103C 0003               4915mm         MOVE.B  #3,D0          
00003406  4E4F                    4916mm         TRAP    #15
00003408                          4917mm         ENDM
00003408  6000 0528               4918m         BRA     COMPLETE_360   
0000340C                          4919m ADRREGDIRECTSRC_360:
0000340C                          4920mm         PRINTANSRC D3
0000340C  3203                    4921mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000340E  E149                    4922mm         LSL     #$08, D1
00003410  EB49                    4923mm         LSL     #$05, D1
00003412  E049                    4924mm         LSR     #$08, D1
00003414  EA49                    4925mm         LSR     #$05, D1
00003416  43F8 00C3               4926mm         LEA     OAN, A1     
0000341A  103C 000E               4927mm         MOVE.B  #14,D0          
0000341E  4E4F                    4928mm         TRAP    #15
00003420  103C 0003               4929mm         MOVE.B  #3,D0          
00003424  4E4F                    4930mm         TRAP    #15
00003426                          4931mm         ENDM
00003426  6000 050A               4932m         BRA     COMPLETE_360   
0000342A                          4933m        
0000342A                          4934m ADRREGINDIRECT_360:   
0000342A  BC3C 0001               4935m         CMP.B   #$01, D6
0000342E  6700 0032               4936m         BEQ     ADRREGINDIRECTSRC_360   
00003432                          4937m ADRREGINDIRECTDEST_360:
00003432                          4938mm         PRINTLB
00003432  43F8 00C5               4939mm         LEA     OLB, A1     
00003436  103C 000E               4940mm         MOVE.B  #14,D0          
0000343A  4E4F                    4941mm         TRAP    #15
0000343C                          4942mm         ENDM
0000343C                          4943mm         PRINTANDEST D3  
0000343C  3203                    4944mm         MOVE.W  D3, D1
0000343E  E949                    4945mm         LSL     #$04, D1
00003440  E049                    4946mm         LSR     #$08, D1
00003442  EA49                    4947mm         LSR     #$05, D1
00003444  43F8 00C3               4948mm         LEA     OAN, A1     
00003448  103C 000E               4949mm         MOVE.B  #14,D0          
0000344C  4E4F                    4950mm         TRAP    #15
0000344E  103C 0003               4951mm         MOVE.B  #3,D0          
00003452  4E4F                    4952mm         TRAP    #15
00003454                          4953mm         ENDM
00003454                          4954mm         PRINTRB
00003454  43F8 00C7               4955mm         LEA     ORB, A1     
00003458  103C 000E               4956mm         MOVE.B  #14,D0          
0000345C  4E4F                    4957mm         TRAP    #15
0000345E                          4958mm         ENDM
0000345E  6000 04D2               4959m         BRA     COMPLETE_360     
00003462                          4960m ADRREGINDIRECTSRC_360:   
00003462                          4961mm         PRINTLB
00003462  43F8 00C5               4962mm         LEA     OLB, A1     
00003466  103C 000E               4963mm         MOVE.B  #14,D0          
0000346A  4E4F                    4964mm         TRAP    #15
0000346C                          4965mm         ENDM
0000346C                          4966mm         PRINTANSRC D3  
0000346C  3203                    4967mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000346E  E149                    4968mm         LSL     #$08, D1
00003470  EB49                    4969mm         LSL     #$05, D1
00003472  E049                    4970mm         LSR     #$08, D1
00003474  EA49                    4971mm         LSR     #$05, D1
00003476  43F8 00C3               4972mm         LEA     OAN, A1     
0000347A  103C 000E               4973mm         MOVE.B  #14,D0          
0000347E  4E4F                    4974mm         TRAP    #15
00003480  103C 0003               4975mm         MOVE.B  #3,D0          
00003484  4E4F                    4976mm         TRAP    #15
00003486                          4977mm         ENDM
00003486                          4978mm         PRINTRB
00003486  43F8 00C7               4979mm         LEA     ORB, A1     
0000348A  103C 000E               4980mm         MOVE.B  #14,D0          
0000348E  4E4F                    4981mm         TRAP    #15
00003490                          4982mm         ENDM
00003490  6000 04A0               4983m         BRA     COMPLETE_360   
00003494                          4984m         
00003494                          4985m ADRREGPOSTINC_360:   
00003494  BC3C 0001               4986m         CMP.B   #$01, D6
00003498  6700 003C               4987m         BEQ     ADRREGPOSTINCSRC_360   
0000349C                          4988m ADRREGPOSTINCDEST_360: 
0000349C                          4989mm         PRINTLB
0000349C  43F8 00C5               4990mm         LEA     OLB, A1     
000034A0  103C 000E               4991mm         MOVE.B  #14,D0          
000034A4  4E4F                    4992mm         TRAP    #15
000034A6                          4993mm         ENDM
000034A6                          4994mm         PRINTANDEST D3  
000034A6  3203                    4995mm         MOVE.W  D3, D1
000034A8  E949                    4996mm         LSL     #$04, D1
000034AA  E049                    4997mm         LSR     #$08, D1
000034AC  EA49                    4998mm         LSR     #$05, D1
000034AE  43F8 00C3               4999mm         LEA     OAN, A1     
000034B2  103C 000E               5000mm         MOVE.B  #14,D0          
000034B6  4E4F                    5001mm         TRAP    #15
000034B8  103C 0003               5002mm         MOVE.B  #3,D0          
000034BC  4E4F                    5003mm         TRAP    #15
000034BE                          5004mm         ENDM
000034BE                          5005mm         PRINTRB
000034BE  43F8 00C7               5006mm         LEA     ORB, A1     
000034C2  103C 000E               5007mm         MOVE.B  #14,D0          
000034C6  4E4F                    5008mm         TRAP    #15
000034C8                          5009mm         ENDM
000034C8                          5010mm         PRINTPI
000034C8  43F8 00CE               5011mm         LEA     OPSTINC, A1     
000034CC  103C 000E               5012mm         MOVE.B  #14,D0          
000034D0  4E4F                    5013mm         TRAP    #15
000034D2                          5014mm         ENDM
000034D2  6000 045E               5015m         BRA     COMPLETE_360  
000034D6                          5016m ADRREGPOSTINCSRC_360:           
000034D6                          5017mm         PRINTLB
000034D6  43F8 00C5               5018mm         LEA     OLB, A1     
000034DA  103C 000E               5019mm         MOVE.B  #14,D0          
000034DE  4E4F                    5020mm         TRAP    #15
000034E0                          5021mm         ENDM
000034E0                          5022mm         PRINTANSRC D3  
000034E0  3203                    5023mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034E2  E149                    5024mm         LSL     #$08, D1
000034E4  EB49                    5025mm         LSL     #$05, D1
000034E6  E049                    5026mm         LSR     #$08, D1
000034E8  EA49                    5027mm         LSR     #$05, D1
000034EA  43F8 00C3               5028mm         LEA     OAN, A1     
000034EE  103C 000E               5029mm         MOVE.B  #14,D0          
000034F2  4E4F                    5030mm         TRAP    #15
000034F4  103C 0003               5031mm         MOVE.B  #3,D0          
000034F8  4E4F                    5032mm         TRAP    #15
000034FA                          5033mm         ENDM
000034FA                          5034mm         PRINTRB
000034FA  43F8 00C7               5035mm         LEA     ORB, A1     
000034FE  103C 000E               5036mm         MOVE.B  #14,D0          
00003502  4E4F                    5037mm         TRAP    #15
00003504                          5038mm         ENDM
00003504                          5039mm         PRINTPI
00003504  43F8 00CE               5040mm         LEA     OPSTINC, A1     
00003508  103C 000E               5041mm         MOVE.B  #14,D0          
0000350C  4E4F                    5042mm         TRAP    #15
0000350E                          5043mm         ENDM
0000350E  6000 0422               5044m         BRA     COMPLETE_360  
00003512                          5045m         
00003512                          5046m ADRREGPREDEC_360: 
00003512  BC3C 0001               5047m         CMP.B   #$01, D6
00003516  6700 003C               5048m         BEQ     ADRREGPREDECSRC_360   
0000351A                          5049m ADRREGPREDECDEST_360:
0000351A                          5050mm         PRINTPD  
0000351A  43F8 00CC               5051mm         LEA     OPREDEC, A1     
0000351E  103C 000E               5052mm         MOVE.B  #14,D0          
00003522  4E4F                    5053mm         TRAP    #15
00003524                          5054mm         ENDM
00003524                          5055mm         PRINTLB
00003524  43F8 00C5               5056mm         LEA     OLB, A1     
00003528  103C 000E               5057mm         MOVE.B  #14,D0          
0000352C  4E4F                    5058mm         TRAP    #15
0000352E                          5059mm         ENDM
0000352E                          5060mm         PRINTANDEST D3  
0000352E  3203                    5061mm         MOVE.W  D3, D1
00003530  E949                    5062mm         LSL     #$04, D1
00003532  E049                    5063mm         LSR     #$08, D1
00003534  EA49                    5064mm         LSR     #$05, D1
00003536  43F8 00C3               5065mm         LEA     OAN, A1     
0000353A  103C 000E               5066mm         MOVE.B  #14,D0          
0000353E  4E4F                    5067mm         TRAP    #15
00003540  103C 0003               5068mm         MOVE.B  #3,D0          
00003544  4E4F                    5069mm         TRAP    #15
00003546                          5070mm         ENDM
00003546                          5071mm         PRINTRB
00003546  43F8 00C7               5072mm         LEA     ORB, A1     
0000354A  103C 000E               5073mm         MOVE.B  #14,D0          
0000354E  4E4F                    5074mm         TRAP    #15
00003550                          5075mm         ENDM
00003550  6000 03E0               5076m         BRA     COMPLETE_360   
00003554                          5077m ADRREGPREDECSRC_360: 
00003554                          5078mm         PRINTPD  
00003554  43F8 00CC               5079mm         LEA     OPREDEC, A1     
00003558  103C 000E               5080mm         MOVE.B  #14,D0          
0000355C  4E4F                    5081mm         TRAP    #15
0000355E                          5082mm         ENDM
0000355E                          5083mm         PRINTLB
0000355E  43F8 00C5               5084mm         LEA     OLB, A1     
00003562  103C 000E               5085mm         MOVE.B  #14,D0          
00003566  4E4F                    5086mm         TRAP    #15
00003568                          5087mm         ENDM
00003568                          5088mm         PRINTANSRC D3  
00003568  3203                    5089mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000356A  E149                    5090mm         LSL     #$08, D1
0000356C  EB49                    5091mm         LSL     #$05, D1
0000356E  E049                    5092mm         LSR     #$08, D1
00003570  EA49                    5093mm         LSR     #$05, D1
00003572  43F8 00C3               5094mm         LEA     OAN, A1     
00003576  103C 000E               5095mm         MOVE.B  #14,D0          
0000357A  4E4F                    5096mm         TRAP    #15
0000357C  103C 0003               5097mm         MOVE.B  #3,D0          
00003580  4E4F                    5098mm         TRAP    #15
00003582                          5099mm         ENDM
00003582                          5100mm         PRINTRB
00003582  43F8 00C7               5101mm         LEA     ORB, A1     
00003586  103C 000E               5102mm         MOVE.B  #14,D0          
0000358A  4E4F                    5103mm         TRAP    #15
0000358C                          5104mm         ENDM
0000358C  6000 03A4               5105m         BRA     COMPLETE_360
00003590                          5106m        
00003590                          5107m ADRABSOLUTE_360:
00003590  BC3C 0001               5108m         CMP.B   #$01, D6
00003594  6600 0018               5109m         BNE     ADRABSOLUTEDST_360 
00003598                          5110m         
00003598  3A03                    5111m         MOVE.W  D3, D5
0000359A  0803 0002               5112m         BTST    #2, D3
0000359E  6600 0024               5113m         BNE     ADRIMMEDIATE_360
000035A2  0803 0000               5114m         BTST    #0, D3
000035A6  6600 027A               5115m         BNE     ADRABSOLUTEL_360
000035AA  6000 01DA               5116m         BRA     ADRABSOLUTEW_360
000035AE                          5117m ADRABSOLUTEDST_360:
000035AE  3A03                    5118m         MOVE.W  D3, D5
000035B0  0803 000B               5119m         BTST    #$B, D3
000035B4  6600 000E               5120m         BNE     ADRIMMEDIATE_360
000035B8  0803 0009               5121m         BTST    #$09, D3
000035BC  6600 0264               5122m         BNE     ADRABSOLUTEL_360
000035C0  6000 01C4               5123m         BRA     ADRABSOLUTEW_360
000035C4                          5124m ADRIMMEDIATE_360:
000035C4  BE3C 0001               5125m         CMP.B   #1, D7
000035C8  6700 009E               5126m         BEQ     ADRIMMEDIATEL_360
000035CC                          5127m ADRIMMEDIATEW_360:
000035CC  361A                    5128m         MOVE.W  (A2)+, D3
000035CE                          5129mm         PRINTHASH
000035CE  103C 0006               5130mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035D2  323C 0023               5131mm         MOVE.W  #35, D1     ; AN = SIGN
000035D6  4E4F                    5132mm         TRAP    #15         ; OUTPUT = SIGN
000035D8                          5133mm         ENDM
000035D8                          5134mm         PRINTSIGN
000035D8  103C 0006               5135mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035DC  323C 0024               5136mm         MOVE.W  #36, D1     ; AN = SIGN
000035E0  4E4F                    5137mm         TRAP    #15         ; OUTPUT = SIGN
000035E2                          5138mm         ENDM
000035E2                          5139mm         ADROUT
000035E2  3212                    5140mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035E4  E049                    5141mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035E6  E849                    5142mm         LSR.W   #4, D1      
000035E8                          5143mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035E8  0C01 0009               5144mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035EC  6E00 000A               5145mmm         BGT     ALPHA_390
000035F0  0601 0030               5146mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035F4  6000 0006               5147mmm         BRA     DONE_390
000035F8  0601 0037               5148mmm ALPHA_390: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035FC  4E71                    5149mmm DONE_390: NOP
000035FE                          5150mmm         ENDM
000035FE  4E4F                    5151mm         TRAP    #15         ; EXECUTE OUTPUT
00003600                          5152mm         
00003600  3212                    5153mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003602  E949                    5154mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003604  E049                    5155mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003606  E849                    5156mm         LSR.W   #4, D1      
00003608                          5157mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003608  0C01 0009               5158mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000360C  6E00 000A               5159mmm         BGT     ALPHA_391
00003610  0601 0030               5160mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003614  6000 0006               5161mmm         BRA     DONE_391
00003618  0601 0037               5162mmm ALPHA_391: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000361C  4E71                    5163mmm DONE_391: NOP
0000361E                          5164mmm         ENDM
0000361E  4E4F                    5165mm         TRAP    #15         ; EXECUTE OUTPUT
00003620                          5166mm         
00003620  3212                    5167mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003622  E149                    5168mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003624  E049                    5169mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003626  E849                    5170mm         LSR.W   #4, D1      
00003628                          5171mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003628  0C01 0009               5172mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000362C  6E00 000A               5173mmm         BGT     ALPHA_392
00003630  0601 0030               5174mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003634  6000 0006               5175mmm         BRA     DONE_392
00003638  0601 0037               5176mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000363C  4E71                    5177mmm DONE_392: NOP
0000363E                          5178mmm         ENDM
0000363E  4E4F                    5179mm         TRAP    #15         ; EXECUTE OUTPUT
00003640                          5180mm         
00003640  3212                    5181mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003642  E149                    5182mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003644  E949                    5183mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003646  E049                    5184mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003648  E849                    5185mm         LSR.W   #4, D1      
0000364A                          5186mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000364A  0C01 0009               5187mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000364E  6E00 000A               5188mmm         BGT     ALPHA_393
00003652  0601 0030               5189mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003656  6000 0006               5190mmm         BRA     DONE_393
0000365A  0601 0037               5191mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000365E  4E71                    5192mmm DONE_393: NOP
00003660                          5193mmm         ENDM
00003660  4E4F                    5194mm         TRAP    #15         ; EXECUTE OUTPUT       
00003662                          5195mm         ENDM 
00003662  3605                    5196m         MOVE.W  D5, D3
00003664  6000 02CC               5197m         BRA     COMPLETE_360
00003668                          5198m ADRIMMEDIATEL_360:
00003668  361A                    5199m         MOVE.W  (A2)+, D3
0000366A                          5200mm         PRINTHASH
0000366A  103C 0006               5201mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000366E  323C 0023               5202mm         MOVE.W  #35, D1     ; AN = SIGN
00003672  4E4F                    5203mm         TRAP    #15         ; OUTPUT = SIGN
00003674                          5204mm         ENDM
00003674                          5205mm         PRINTSIGN
00003674  103C 0006               5206mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003678  323C 0024               5207mm         MOVE.W  #36, D1     ; AN = SIGN
0000367C  4E4F                    5208mm         TRAP    #15         ; OUTPUT = SIGN
0000367E                          5209mm         ENDM
0000367E                          5210mm         ADROUT 
0000367E  3212                    5211mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003680  E049                    5212mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003682  E849                    5213mm         LSR.W   #4, D1      
00003684                          5214mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003684  0C01 0009               5215mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003688  6E00 000A               5216mmm         BGT     ALPHA_397
0000368C  0601 0030               5217mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003690  6000 0006               5218mmm         BRA     DONE_397
00003694  0601 0037               5219mmm ALPHA_397: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003698  4E71                    5220mmm DONE_397: NOP
0000369A                          5221mmm         ENDM
0000369A  4E4F                    5222mm         TRAP    #15         ; EXECUTE OUTPUT
0000369C                          5223mm         
0000369C  3212                    5224mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000369E  E949                    5225mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000036A0  E049                    5226mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036A2  E849                    5227mm         LSR.W   #4, D1      
000036A4                          5228mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036A4  0C01 0009               5229mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036A8  6E00 000A               5230mmm         BGT     ALPHA_398
000036AC  0601 0030               5231mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036B0  6000 0006               5232mmm         BRA     DONE_398
000036B4  0601 0037               5233mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036B8  4E71                    5234mmm DONE_398: NOP
000036BA                          5235mmm         ENDM
000036BA  4E4F                    5236mm         TRAP    #15         ; EXECUTE OUTPUT
000036BC                          5237mm         
000036BC  3212                    5238mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036BE  E149                    5239mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036C0  E049                    5240mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036C2  E849                    5241mm         LSR.W   #4, D1      
000036C4                          5242mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036C4  0C01 0009               5243mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036C8  6E00 000A               5244mmm         BGT     ALPHA_399
000036CC  0601 0030               5245mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036D0  6000 0006               5246mmm         BRA     DONE_399
000036D4  0601 0037               5247mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036D8  4E71                    5248mmm DONE_399: NOP
000036DA                          5249mmm         ENDM
000036DA  4E4F                    5250mm         TRAP    #15         ; EXECUTE OUTPUT
000036DC                          5251mm         
000036DC  3212                    5252mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036DE  E149                    5253mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036E0  E949                    5254mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000036E2  E049                    5255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036E4  E849                    5256mm         LSR.W   #4, D1      
000036E6                          5257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036E6  0C01 0009               5258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036EA  6E00 000A               5259mmm         BGT     ALPHA_400
000036EE  0601 0030               5260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036F2  6000 0006               5261mmm         BRA     DONE_400
000036F6  0601 0037               5262mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036FA  4E71                    5263mmm DONE_400: NOP
000036FC                          5264mmm         ENDM
000036FC  4E4F                    5265mm         TRAP    #15         ; EXECUTE OUTPUT       
000036FE                          5266mm         ENDM 
000036FE  361A                    5267m         MOVE.W  (A2)+, D3
00003700                          5268mm         ADROUT
00003700  3212                    5269mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003702  E049                    5270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003704  E849                    5271mm         LSR.W   #4, D1      
00003706                          5272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003706  0C01 0009               5273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000370A  6E00 000A               5274mmm         BGT     ALPHA_402
0000370E  0601 0030               5275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003712  6000 0006               5276mmm         BRA     DONE_402
00003716  0601 0037               5277mmm ALPHA_402: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000371A  4E71                    5278mmm DONE_402: NOP
0000371C                          5279mmm         ENDM
0000371C  4E4F                    5280mm         TRAP    #15         ; EXECUTE OUTPUT
0000371E                          5281mm         
0000371E  3212                    5282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003720  E949                    5283mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003722  E049                    5284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003724  E849                    5285mm         LSR.W   #4, D1      
00003726                          5286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003726  0C01 0009               5287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000372A  6E00 000A               5288mmm         BGT     ALPHA_403
0000372E  0601 0030               5289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003732  6000 0006               5290mmm         BRA     DONE_403
00003736  0601 0037               5291mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000373A  4E71                    5292mmm DONE_403: NOP
0000373C                          5293mmm         ENDM
0000373C  4E4F                    5294mm         TRAP    #15         ; EXECUTE OUTPUT
0000373E                          5295mm         
0000373E  3212                    5296mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003740  E149                    5297mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003742  E049                    5298mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003744  E849                    5299mm         LSR.W   #4, D1      
00003746                          5300mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003746  0C01 0009               5301mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000374A  6E00 000A               5302mmm         BGT     ALPHA_404
0000374E  0601 0030               5303mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003752  6000 0006               5304mmm         BRA     DONE_404
00003756  0601 0037               5305mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000375A  4E71                    5306mmm DONE_404: NOP
0000375C                          5307mmm         ENDM
0000375C  4E4F                    5308mm         TRAP    #15         ; EXECUTE OUTPUT
0000375E                          5309mm         
0000375E  3212                    5310mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003760  E149                    5311mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003762  E949                    5312mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003764  E049                    5313mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003766  E849                    5314mm         LSR.W   #4, D1      
00003768                          5315mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003768  0C01 0009               5316mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000376C  6E00 000A               5317mmm         BGT     ALPHA_405
00003770  0601 0030               5318mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003774  6000 0006               5319mmm         BRA     DONE_405
00003778  0601 0037               5320mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000377C  4E71                    5321mmm DONE_405: NOP
0000377E                          5322mmm         ENDM
0000377E  4E4F                    5323mm         TRAP    #15         ; EXECUTE OUTPUT       
00003780                          5324mm         ENDM 
00003780  3605                    5325m         MOVE.W  D5, D3
00003782  6000 01AE               5326m         BRA     COMPLETE_360 
00003786                          5327m ADRABSOLUTEW_360:     
00003786  361A                    5328m         MOVE.W  (A2)+, D3
00003788                          5329mm         PRINTSIGN
00003788  103C 0006               5330mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000378C  323C 0024               5331mm         MOVE.W  #36, D1     ; AN = SIGN
00003790  4E4F                    5332mm         TRAP    #15         ; OUTPUT = SIGN
00003792                          5333mm         ENDM
00003792                          5334mm         PRINTSIGN
00003792  103C 0006               5335mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003796  323C 0024               5336mm         MOVE.W  #36, D1     ; AN = SIGN
0000379A  4E4F                    5337mm         TRAP    #15         ; OUTPUT = SIGN
0000379C                          5338mm         ENDM
0000379C                          5339mm         ADROUT
0000379C  3212                    5340mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000379E  E049                    5341mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037A0  E849                    5342mm         LSR.W   #4, D1      
000037A2                          5343mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037A2  0C01 0009               5344mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037A6  6E00 000A               5345mmm         BGT     ALPHA_409
000037AA  0601 0030               5346mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037AE  6000 0006               5347mmm         BRA     DONE_409
000037B2  0601 0037               5348mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037B6  4E71                    5349mmm DONE_409: NOP
000037B8                          5350mmm         ENDM
000037B8  4E4F                    5351mm         TRAP    #15         ; EXECUTE OUTPUT
000037BA                          5352mm         
000037BA  3212                    5353mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037BC  E949                    5354mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000037BE  E049                    5355mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037C0  E849                    5356mm         LSR.W   #4, D1      
000037C2                          5357mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037C2  0C01 0009               5358mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037C6  6E00 000A               5359mmm         BGT     ALPHA_410
000037CA  0601 0030               5360mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037CE  6000 0006               5361mmm         BRA     DONE_410
000037D2  0601 0037               5362mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037D6  4E71                    5363mmm DONE_410: NOP
000037D8                          5364mmm         ENDM
000037D8  4E4F                    5365mm         TRAP    #15         ; EXECUTE OUTPUT
000037DA                          5366mm         
000037DA  3212                    5367mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037DC  E149                    5368mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037DE  E049                    5369mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037E0  E849                    5370mm         LSR.W   #4, D1      
000037E2                          5371mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037E2  0C01 0009               5372mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037E6  6E00 000A               5373mmm         BGT     ALPHA_411
000037EA  0601 0030               5374mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037EE  6000 0006               5375mmm         BRA     DONE_411
000037F2  0601 0037               5376mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037F6  4E71                    5377mmm DONE_411: NOP
000037F8                          5378mmm         ENDM
000037F8  4E4F                    5379mm         TRAP    #15         ; EXECUTE OUTPUT
000037FA                          5380mm         
000037FA  3212                    5381mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037FC  E149                    5382mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037FE  E949                    5383mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003800  E049                    5384mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003802  E849                    5385mm         LSR.W   #4, D1      
00003804                          5386mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003804  0C01 0009               5387mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003808  6E00 000A               5388mmm         BGT     ALPHA_412
0000380C  0601 0030               5389mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003810  6000 0006               5390mmm         BRA     DONE_412
00003814  0601 0037               5391mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003818  4E71                    5392mmm DONE_412: NOP
0000381A                          5393mmm         ENDM
0000381A  4E4F                    5394mm         TRAP    #15         ; EXECUTE OUTPUT       
0000381C                          5395mm         ENDM 
0000381C  3605                    5396m         MOVE.W  D5, D3
0000381E  6000 0112               5397m         BRA     COMPLETE_360  
00003822                          5398m ADRABSOLUTEL_360:  
00003822  361A                    5399m         MOVE.W  (A2)+, D3
00003824                          5400mm         PRINTSIGN
00003824  103C 0006               5401mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003828  323C 0024               5402mm         MOVE.W  #36, D1     ; AN = SIGN
0000382C  4E4F                    5403mm         TRAP    #15         ; OUTPUT = SIGN
0000382E                          5404mm         ENDM
0000382E                          5405mm         ADROUT 
0000382E  3212                    5406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003830  E049                    5407mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003832  E849                    5408mm         LSR.W   #4, D1      
00003834                          5409mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003834  0C01 0009               5410mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003838  6E00 000A               5411mmm         BGT     ALPHA_415
0000383C  0601 0030               5412mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003840  6000 0006               5413mmm         BRA     DONE_415
00003844  0601 0037               5414mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003848  4E71                    5415mmm DONE_415: NOP
0000384A                          5416mmm         ENDM
0000384A  4E4F                    5417mm         TRAP    #15         ; EXECUTE OUTPUT
0000384C                          5418mm         
0000384C  3212                    5419mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000384E  E949                    5420mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003850  E049                    5421mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003852  E849                    5422mm         LSR.W   #4, D1      
00003854                          5423mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003854  0C01 0009               5424mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003858  6E00 000A               5425mmm         BGT     ALPHA_416
0000385C  0601 0030               5426mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003860  6000 0006               5427mmm         BRA     DONE_416
00003864  0601 0037               5428mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003868  4E71                    5429mmm DONE_416: NOP
0000386A                          5430mmm         ENDM
0000386A  4E4F                    5431mm         TRAP    #15         ; EXECUTE OUTPUT
0000386C                          5432mm         
0000386C  3212                    5433mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000386E  E149                    5434mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003870  E049                    5435mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003872  E849                    5436mm         LSR.W   #4, D1      
00003874                          5437mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003874  0C01 0009               5438mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003878  6E00 000A               5439mmm         BGT     ALPHA_417
0000387C  0601 0030               5440mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003880  6000 0006               5441mmm         BRA     DONE_417
00003884  0601 0037               5442mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003888  4E71                    5443mmm DONE_417: NOP
0000388A                          5444mmm         ENDM
0000388A  4E4F                    5445mm         TRAP    #15         ; EXECUTE OUTPUT
0000388C                          5446mm         
0000388C  3212                    5447mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000388E  E149                    5448mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003890  E949                    5449mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003892  E049                    5450mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003894  E849                    5451mm         LSR.W   #4, D1      
00003896                          5452mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003896  0C01 0009               5453mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000389A  6E00 000A               5454mmm         BGT     ALPHA_418
0000389E  0601 0030               5455mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038A2  6000 0006               5456mmm         BRA     DONE_418
000038A6  0601 0037               5457mmm ALPHA_418: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038AA  4E71                    5458mmm DONE_418: NOP
000038AC                          5459mmm         ENDM
000038AC  4E4F                    5460mm         TRAP    #15         ; EXECUTE OUTPUT       
000038AE                          5461mm         ENDM 
000038AE  361A                    5462m         MOVE.W  (A2)+, D3
000038B0                          5463mm         ADROUT
000038B0  3212                    5464mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038B2  E049                    5465mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038B4  E849                    5466mm         LSR.W   #4, D1      
000038B6                          5467mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038B6  0C01 0009               5468mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038BA  6E00 000A               5469mmm         BGT     ALPHA_420
000038BE  0601 0030               5470mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038C2  6000 0006               5471mmm         BRA     DONE_420
000038C6  0601 0037               5472mmm ALPHA_420: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038CA  4E71                    5473mmm DONE_420: NOP
000038CC                          5474mmm         ENDM
000038CC  4E4F                    5475mm         TRAP    #15         ; EXECUTE OUTPUT
000038CE                          5476mm         
000038CE  3212                    5477mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038D0  E949                    5478mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000038D2  E049                    5479mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038D4  E849                    5480mm         LSR.W   #4, D1      
000038D6                          5481mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038D6  0C01 0009               5482mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038DA  6E00 000A               5483mmm         BGT     ALPHA_421
000038DE  0601 0030               5484mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038E2  6000 0006               5485mmm         BRA     DONE_421
000038E6  0601 0037               5486mmm ALPHA_421: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038EA  4E71                    5487mmm DONE_421: NOP
000038EC                          5488mmm         ENDM
000038EC  4E4F                    5489mm         TRAP    #15         ; EXECUTE OUTPUT
000038EE                          5490mm         
000038EE  3212                    5491mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038F0  E149                    5492mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038F2  E049                    5493mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038F4  E849                    5494mm         LSR.W   #4, D1      
000038F6                          5495mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038F6  0C01 0009               5496mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038FA  6E00 000A               5497mmm         BGT     ALPHA_422
000038FE  0601 0030               5498mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003902  6000 0006               5499mmm         BRA     DONE_422
00003906  0601 0037               5500mmm ALPHA_422: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000390A  4E71                    5501mmm DONE_422: NOP
0000390C                          5502mmm         ENDM
0000390C  4E4F                    5503mm         TRAP    #15         ; EXECUTE OUTPUT
0000390E                          5504mm         
0000390E  3212                    5505mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003910  E149                    5506mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003912  E949                    5507mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003914  E049                    5508mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003916  E849                    5509mm         LSR.W   #4, D1      
00003918                          5510mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003918  0C01 0009               5511mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000391C  6E00 000A               5512mmm         BGT     ALPHA_423
00003920  0601 0030               5513mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003924  6000 0006               5514mmm         BRA     DONE_423
00003928  0601 0037               5515mmm ALPHA_423: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000392C  4E71                    5516mmm DONE_423: NOP
0000392E                          5517mmm         ENDM
0000392E  4E4F                    5518mm         TRAP    #15         ; EXECUTE OUTPUT       
00003930                          5519mm         ENDM 
00003930  3605                    5520m         MOVE.W  D5, D3
00003932                          5521m 
00003932                          5522m COMPLETE_360:  ; OPCODE HAS BEEN VERIFIED
00003932                          5523m         ENDM
00003932                          5524m         printComma
00003932  43F8 00C9               5525m         LEA     OCOMMA, A1     
00003936  103C 000E               5526m         MOVE.B  #14,D0          
0000393A  4E4F                    5527m         TRAP    #15
0000393C                          5528m         ENDM
0000393C                          5529m         printDnDest     D3
0000393C  3203                    5530m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000393E  E949                    5531m         LSL     #$04, D1
00003940  E049                    5532m         LSR     #$08, D1
00003942  EA49                    5533m         LSR     #$05, D1
00003944  43F8 00C1               5534m         LEA     ODN, A1     
00003948  103C 000E               5535m         MOVE.B  #14,D0          
0000394C  4E4F                    5536m         TRAP    #15
0000394E  103C 0003               5537m         MOVE.B  #3,D0          
00003952  4E4F                    5538m         TRAP    #15
00003954                          5539m         ENDM
00003954                          5540  decodeSUBcomp:
00003954  4E75                    5541          RTS                ; Return from decodeSUBcomp subroutine
00003956                          5542  
00003956                          5543  
00003956                          5544  ; ------------------------------------------------------------
00003956                          5545  ; 6. "decodeMULS" subroutine
00003956                          5546  ; AUTHOR
00003956                          5547  ;
00003956                          5548  ; TODO: DESCRIPTION MULS
00003956                          5549  ; ------------------------------------------------------------
00003956                          5550  decodeMULS:
00003956                          5551m         verifyOpcode    pMULS, (A2)
00003956  43F8 0129               5552m         LEA     PMULS, A1      ; INPUT PATTERN STRING
0000395A  3612                    5553m         MOVE.W  (A2), D3      ; INPUT VALUE
0000395C  123C 000F               5554m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003960                          5555m         
00003960                          5556m LOOP_426: 
00003960  0C11 0030               5557m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003964  6700 000E               5558m         BEQ     CHECKFOR0_426
00003968  0C11 0031               5559m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000396C  6700 0010               5560m         BEQ     CHECKFOR1_426
00003970  6000 0012               5561m         BRA     NEXT_426      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003974                          5562m         
00003974                          5563m CHECKFOR0_426: 
00003974  0303                    5564m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003976  6600 31D8               5565m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000397A  6000 0008               5566m         BRA     NEXT_426
0000397E                          5567m 
0000397E                          5568m CHECKFOR1_426:
0000397E  0303                    5569m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003980  6700 31CE               5570m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003984                          5571m 
00003984                          5572m NEXT_426: 
00003984  B23C 0000               5573m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003988  6700 0008               5574m         BEQ     COMPLETE_426  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000398C  5301                    5575m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000398E  1819                    5576m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003990  60CE                    5577m         BRA     LOOP_426      ; BEGIN LOOP AGAIN
00003992                          5578m 
00003992                          5579m COMPLETE_426:  ; OPCODE HAS BEEN VERIFIED
00003992                          5580m         ENDM
00003992  43F8 0077               5581          LEA     oMULS, A1     
00003996  103C 000E               5582          MOVE.B  #14,D0          
0000399A  4E4F                    5583          TRAP    #15
0000399C                          5584m         printSize       (A2)
0000399C  3612                    5585m         MOVE.W  (A2), D3      ; INPUT VALUE
0000399E  4247                    5586m         CLR     D7      
000039A0                          5587m CHECKFORB_427: 
000039A0  0803 000D               5588m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000039A4  6600 0010               5589m         BNE     CHECKFORW_427  ; IF NOT GO TO WORD SIZE
000039A8  43F8 00B5               5590m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000039AC  103C 000E               5591m         MOVE.B  #14,D0          
000039B0  4E4F                    5592m         TRAP    #15
000039B2  6000 0026               5593m         BRA     COMPLETE_427      
000039B6                          5594m CHECKFORW_427: 
000039B6  0803 000C               5595m         BTST    #12, D3      ; CHECK IF CONTAINS 1
000039BA  6700 0010               5596m         BEQ     CHECKFORL_427  ; IF NOT, SIZE CANNOT BE WORD
000039BE  43F8 00B9               5597m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
000039C2  103C 000E               5598m         MOVE.B  #14,D0          
000039C6  4E4F                    5599m         TRAP    #15
000039C8  6000 0010               5600m         BRA     COMPLETE_427  
000039CC                          5601m CHECKFORL_427:
000039CC  1E3C 0001               5602m         MOVE.B  #$1, D7
000039D0  43F8 00BD               5603m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000039D4  103C 000E               5604m         MOVE.B  #14,D0          
000039D8  4E4F                    5605m         TRAP    #15
000039DA                          5606m COMPLETE_427:  ; SIZE HAS BEEN PRINTED
000039DA                          5607m         ENDM
000039DA                          5608m         prepareAdrMode  #$1, (A2)
000039DA  3C3C 0001               5609m         MOVE.W  #$1, D6      ; INPUT VALUE
000039DE  3212                    5610m         MOVE.W  (A2), D1
000039E0  BC3C 0001               5611m         CMP.B   #$01, D6
000039E4  6700 000C               5612m         BEQ     ADRSOURCE_428    
000039E8                          5613m ADRDEST_428:
000039E8  EF49                    5614m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000039EA  E049                    5615m         LSR     #$08, D1
000039EC  EA49                    5616m         LSR     #$05, D1
000039EE  6000 000A               5617m         BRA     COMPLETE_428 
000039F2                          5618m ADRSOURCE_428:                
000039F2  E149                    5619m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000039F4  E549                    5620m         LSL     #$02, D1
000039F6  E049                    5621m         LSR     #$08, D1
000039F8  EA49                    5622m         LSR     #$05, D1
000039FA                          5623m COMPLETE_428:  ; OPCODE HAS BEEN VERIFIED
000039FA                          5624m         ENDM        
000039FA                          5625m         decodeAdrMode   (A2), D1
000039FA  3612                    5626m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000039FC  3201                    5627m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000039FE                          5628m 
000039FE  B23C 0001               5629m         CMP.B   #$01, D1
00003A02  6700 0066               5630m         BEQ     ADRREGDIRECT_429    
00003A06  B23C 0002               5631m         CMP.B   #$02, D1
00003A0A  6700 00A0               5632m         BEQ     ADRREGINDIRECT_429  
00003A0E  B23C 0003               5633m         CMP.B   #$03, D1
00003A12  6700 0102               5634m         BEQ     ADRREGPOSTINC_429  
00003A16  B23C 0004               5635m         CMP.B   #$04, D1
00003A1A  6700 0178               5636m         BEQ     ADRREGPREDEC_429
00003A1E  B23C 0007               5637m         CMP.B   #$07, D1
00003A22  6700 01EE               5638m         BEQ     ADRABSOLUTE_429    
00003A26                          5639m         
00003A26                          5640m DATAREGDIRECT_429: 
00003A26  BC3C 0001               5641m         CMP.B   #$01, D6
00003A2A  6700 001E               5642m         BEQ     DATAREGDIRECTSRC_429   
00003A2E                          5643m DATAREGDIRECTDEST_429: 
00003A2E                          5644mm         PRINTDNDEST D3 
00003A2E  3203                    5645mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003A30  E949                    5646mm         LSL     #$04, D1
00003A32  E049                    5647mm         LSR     #$08, D1
00003A34  EA49                    5648mm         LSR     #$05, D1
00003A36  43F8 00C1               5649mm         LEA     ODN, A1     
00003A3A  103C 000E               5650mm         MOVE.B  #14,D0          
00003A3E  4E4F                    5651mm         TRAP    #15
00003A40  103C 0003               5652mm         MOVE.B  #3,D0          
00003A44  4E4F                    5653mm         TRAP    #15
00003A46                          5654mm         ENDM
00003A46  6000 056C               5655m         BRA     COMPLETE_429 
00003A4A                          5656m DATAREGDIRECTSRC_429: 
00003A4A                          5657mm         PRINTDNSRC D3 
00003A4A  4281                    5658mm         CLR.L   D1
00003A4C  3203                    5659mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A4E  E149                    5660mm         LSL     #$08, D1
00003A50  EB49                    5661mm         LSL     #$05, D1
00003A52  E049                    5662mm         LSR     #$08, D1
00003A54  EA49                    5663mm         LSR     #$05, D1
00003A56  43F8 00C1               5664mm         LEA     ODN, A1     
00003A5A  103C 000E               5665mm         MOVE.B  #14,D0          
00003A5E  4E4F                    5666mm         TRAP    #15
00003A60  103C 0003               5667mm         MOVE.B  #3,D0          
00003A64  4E4F                    5668mm         TRAP    #15
00003A66                          5669mm         ENDM
00003A66  6000 054C               5670m         BRA     COMPLETE_429   
00003A6A                          5671m         
00003A6A                          5672m ADRREGDIRECT_429: 
00003A6A  BC3C 0001               5673m         CMP.B   #$01, D6
00003A6E  6700 001E               5674m         BEQ     ADRREGDIRECTSRC_429   
00003A72                          5675m ADRREGDIRECTDEST_429:
00003A72                          5676mm         PRINTANDEST D3
00003A72  3203                    5677mm         MOVE.W  D3, D1
00003A74  E949                    5678mm         LSL     #$04, D1
00003A76  E049                    5679mm         LSR     #$08, D1
00003A78  EA49                    5680mm         LSR     #$05, D1
00003A7A  43F8 00C3               5681mm         LEA     OAN, A1     
00003A7E  103C 000E               5682mm         MOVE.B  #14,D0          
00003A82  4E4F                    5683mm         TRAP    #15
00003A84  103C 0003               5684mm         MOVE.B  #3,D0          
00003A88  4E4F                    5685mm         TRAP    #15
00003A8A                          5686mm         ENDM
00003A8A  6000 0528               5687m         BRA     COMPLETE_429   
00003A8E                          5688m ADRREGDIRECTSRC_429:
00003A8E                          5689mm         PRINTANSRC D3
00003A8E  3203                    5690mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A90  E149                    5691mm         LSL     #$08, D1
00003A92  EB49                    5692mm         LSL     #$05, D1
00003A94  E049                    5693mm         LSR     #$08, D1
00003A96  EA49                    5694mm         LSR     #$05, D1
00003A98  43F8 00C3               5695mm         LEA     OAN, A1     
00003A9C  103C 000E               5696mm         MOVE.B  #14,D0          
00003AA0  4E4F                    5697mm         TRAP    #15
00003AA2  103C 0003               5698mm         MOVE.B  #3,D0          
00003AA6  4E4F                    5699mm         TRAP    #15
00003AA8                          5700mm         ENDM
00003AA8  6000 050A               5701m         BRA     COMPLETE_429   
00003AAC                          5702m        
00003AAC                          5703m ADRREGINDIRECT_429:   
00003AAC  BC3C 0001               5704m         CMP.B   #$01, D6
00003AB0  6700 0032               5705m         BEQ     ADRREGINDIRECTSRC_429   
00003AB4                          5706m ADRREGINDIRECTDEST_429:
00003AB4                          5707mm         PRINTLB
00003AB4  43F8 00C5               5708mm         LEA     OLB, A1     
00003AB8  103C 000E               5709mm         MOVE.B  #14,D0          
00003ABC  4E4F                    5710mm         TRAP    #15
00003ABE                          5711mm         ENDM
00003ABE                          5712mm         PRINTANDEST D3  
00003ABE  3203                    5713mm         MOVE.W  D3, D1
00003AC0  E949                    5714mm         LSL     #$04, D1
00003AC2  E049                    5715mm         LSR     #$08, D1
00003AC4  EA49                    5716mm         LSR     #$05, D1
00003AC6  43F8 00C3               5717mm         LEA     OAN, A1     
00003ACA  103C 000E               5718mm         MOVE.B  #14,D0          
00003ACE  4E4F                    5719mm         TRAP    #15
00003AD0  103C 0003               5720mm         MOVE.B  #3,D0          
00003AD4  4E4F                    5721mm         TRAP    #15
00003AD6                          5722mm         ENDM
00003AD6                          5723mm         PRINTRB
00003AD6  43F8 00C7               5724mm         LEA     ORB, A1     
00003ADA  103C 000E               5725mm         MOVE.B  #14,D0          
00003ADE  4E4F                    5726mm         TRAP    #15
00003AE0                          5727mm         ENDM
00003AE0  6000 04D2               5728m         BRA     COMPLETE_429     
00003AE4                          5729m ADRREGINDIRECTSRC_429:   
00003AE4                          5730mm         PRINTLB
00003AE4  43F8 00C5               5731mm         LEA     OLB, A1     
00003AE8  103C 000E               5732mm         MOVE.B  #14,D0          
00003AEC  4E4F                    5733mm         TRAP    #15
00003AEE                          5734mm         ENDM
00003AEE                          5735mm         PRINTANSRC D3  
00003AEE  3203                    5736mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003AF0  E149                    5737mm         LSL     #$08, D1
00003AF2  EB49                    5738mm         LSL     #$05, D1
00003AF4  E049                    5739mm         LSR     #$08, D1
00003AF6  EA49                    5740mm         LSR     #$05, D1
00003AF8  43F8 00C3               5741mm         LEA     OAN, A1     
00003AFC  103C 000E               5742mm         MOVE.B  #14,D0          
00003B00  4E4F                    5743mm         TRAP    #15
00003B02  103C 0003               5744mm         MOVE.B  #3,D0          
00003B06  4E4F                    5745mm         TRAP    #15
00003B08                          5746mm         ENDM
00003B08                          5747mm         PRINTRB
00003B08  43F8 00C7               5748mm         LEA     ORB, A1     
00003B0C  103C 000E               5749mm         MOVE.B  #14,D0          
00003B10  4E4F                    5750mm         TRAP    #15
00003B12                          5751mm         ENDM
00003B12  6000 04A0               5752m         BRA     COMPLETE_429   
00003B16                          5753m         
00003B16                          5754m ADRREGPOSTINC_429:   
00003B16  BC3C 0001               5755m         CMP.B   #$01, D6
00003B1A  6700 003C               5756m         BEQ     ADRREGPOSTINCSRC_429   
00003B1E                          5757m ADRREGPOSTINCDEST_429: 
00003B1E                          5758mm         PRINTLB
00003B1E  43F8 00C5               5759mm         LEA     OLB, A1     
00003B22  103C 000E               5760mm         MOVE.B  #14,D0          
00003B26  4E4F                    5761mm         TRAP    #15
00003B28                          5762mm         ENDM
00003B28                          5763mm         PRINTANDEST D3  
00003B28  3203                    5764mm         MOVE.W  D3, D1
00003B2A  E949                    5765mm         LSL     #$04, D1
00003B2C  E049                    5766mm         LSR     #$08, D1
00003B2E  EA49                    5767mm         LSR     #$05, D1
00003B30  43F8 00C3               5768mm         LEA     OAN, A1     
00003B34  103C 000E               5769mm         MOVE.B  #14,D0          
00003B38  4E4F                    5770mm         TRAP    #15
00003B3A  103C 0003               5771mm         MOVE.B  #3,D0          
00003B3E  4E4F                    5772mm         TRAP    #15
00003B40                          5773mm         ENDM
00003B40                          5774mm         PRINTRB
00003B40  43F8 00C7               5775mm         LEA     ORB, A1     
00003B44  103C 000E               5776mm         MOVE.B  #14,D0          
00003B48  4E4F                    5777mm         TRAP    #15
00003B4A                          5778mm         ENDM
00003B4A                          5779mm         PRINTPI
00003B4A  43F8 00CE               5780mm         LEA     OPSTINC, A1     
00003B4E  103C 000E               5781mm         MOVE.B  #14,D0          
00003B52  4E4F                    5782mm         TRAP    #15
00003B54                          5783mm         ENDM
00003B54  6000 045E               5784m         BRA     COMPLETE_429  
00003B58                          5785m ADRREGPOSTINCSRC_429:           
00003B58                          5786mm         PRINTLB
00003B58  43F8 00C5               5787mm         LEA     OLB, A1     
00003B5C  103C 000E               5788mm         MOVE.B  #14,D0          
00003B60  4E4F                    5789mm         TRAP    #15
00003B62                          5790mm         ENDM
00003B62                          5791mm         PRINTANSRC D3  
00003B62  3203                    5792mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B64  E149                    5793mm         LSL     #$08, D1
00003B66  EB49                    5794mm         LSL     #$05, D1
00003B68  E049                    5795mm         LSR     #$08, D1
00003B6A  EA49                    5796mm         LSR     #$05, D1
00003B6C  43F8 00C3               5797mm         LEA     OAN, A1     
00003B70  103C 000E               5798mm         MOVE.B  #14,D0          
00003B74  4E4F                    5799mm         TRAP    #15
00003B76  103C 0003               5800mm         MOVE.B  #3,D0          
00003B7A  4E4F                    5801mm         TRAP    #15
00003B7C                          5802mm         ENDM
00003B7C                          5803mm         PRINTRB
00003B7C  43F8 00C7               5804mm         LEA     ORB, A1     
00003B80  103C 000E               5805mm         MOVE.B  #14,D0          
00003B84  4E4F                    5806mm         TRAP    #15
00003B86                          5807mm         ENDM
00003B86                          5808mm         PRINTPI
00003B86  43F8 00CE               5809mm         LEA     OPSTINC, A1     
00003B8A  103C 000E               5810mm         MOVE.B  #14,D0          
00003B8E  4E4F                    5811mm         TRAP    #15
00003B90                          5812mm         ENDM
00003B90  6000 0422               5813m         BRA     COMPLETE_429  
00003B94                          5814m         
00003B94                          5815m ADRREGPREDEC_429: 
00003B94  BC3C 0001               5816m         CMP.B   #$01, D6
00003B98  6700 003C               5817m         BEQ     ADRREGPREDECSRC_429   
00003B9C                          5818m ADRREGPREDECDEST_429:
00003B9C                          5819mm         PRINTPD  
00003B9C  43F8 00CC               5820mm         LEA     OPREDEC, A1     
00003BA0  103C 000E               5821mm         MOVE.B  #14,D0          
00003BA4  4E4F                    5822mm         TRAP    #15
00003BA6                          5823mm         ENDM
00003BA6                          5824mm         PRINTLB
00003BA6  43F8 00C5               5825mm         LEA     OLB, A1     
00003BAA  103C 000E               5826mm         MOVE.B  #14,D0          
00003BAE  4E4F                    5827mm         TRAP    #15
00003BB0                          5828mm         ENDM
00003BB0                          5829mm         PRINTANDEST D3  
00003BB0  3203                    5830mm         MOVE.W  D3, D1
00003BB2  E949                    5831mm         LSL     #$04, D1
00003BB4  E049                    5832mm         LSR     #$08, D1
00003BB6  EA49                    5833mm         LSR     #$05, D1
00003BB8  43F8 00C3               5834mm         LEA     OAN, A1     
00003BBC  103C 000E               5835mm         MOVE.B  #14,D0          
00003BC0  4E4F                    5836mm         TRAP    #15
00003BC2  103C 0003               5837mm         MOVE.B  #3,D0          
00003BC6  4E4F                    5838mm         TRAP    #15
00003BC8                          5839mm         ENDM
00003BC8                          5840mm         PRINTRB
00003BC8  43F8 00C7               5841mm         LEA     ORB, A1     
00003BCC  103C 000E               5842mm         MOVE.B  #14,D0          
00003BD0  4E4F                    5843mm         TRAP    #15
00003BD2                          5844mm         ENDM
00003BD2  6000 03E0               5845m         BRA     COMPLETE_429   
00003BD6                          5846m ADRREGPREDECSRC_429: 
00003BD6                          5847mm         PRINTPD  
00003BD6  43F8 00CC               5848mm         LEA     OPREDEC, A1     
00003BDA  103C 000E               5849mm         MOVE.B  #14,D0          
00003BDE  4E4F                    5850mm         TRAP    #15
00003BE0                          5851mm         ENDM
00003BE0                          5852mm         PRINTLB
00003BE0  43F8 00C5               5853mm         LEA     OLB, A1     
00003BE4  103C 000E               5854mm         MOVE.B  #14,D0          
00003BE8  4E4F                    5855mm         TRAP    #15
00003BEA                          5856mm         ENDM
00003BEA                          5857mm         PRINTANSRC D3  
00003BEA  3203                    5858mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BEC  E149                    5859mm         LSL     #$08, D1
00003BEE  EB49                    5860mm         LSL     #$05, D1
00003BF0  E049                    5861mm         LSR     #$08, D1
00003BF2  EA49                    5862mm         LSR     #$05, D1
00003BF4  43F8 00C3               5863mm         LEA     OAN, A1     
00003BF8  103C 000E               5864mm         MOVE.B  #14,D0          
00003BFC  4E4F                    5865mm         TRAP    #15
00003BFE  103C 0003               5866mm         MOVE.B  #3,D0          
00003C02  4E4F                    5867mm         TRAP    #15
00003C04                          5868mm         ENDM
00003C04                          5869mm         PRINTRB
00003C04  43F8 00C7               5870mm         LEA     ORB, A1     
00003C08  103C 000E               5871mm         MOVE.B  #14,D0          
00003C0C  4E4F                    5872mm         TRAP    #15
00003C0E                          5873mm         ENDM
00003C0E  6000 03A4               5874m         BRA     COMPLETE_429
00003C12                          5875m        
00003C12                          5876m ADRABSOLUTE_429:
00003C12  BC3C 0001               5877m         CMP.B   #$01, D6
00003C16  6600 0018               5878m         BNE     ADRABSOLUTEDST_429 
00003C1A                          5879m         
00003C1A  3A03                    5880m         MOVE.W  D3, D5
00003C1C  0803 0002               5881m         BTST    #2, D3
00003C20  6600 0024               5882m         BNE     ADRIMMEDIATE_429
00003C24  0803 0000               5883m         BTST    #0, D3
00003C28  6600 027A               5884m         BNE     ADRABSOLUTEL_429
00003C2C  6000 01DA               5885m         BRA     ADRABSOLUTEW_429
00003C30                          5886m ADRABSOLUTEDST_429:
00003C30  3A03                    5887m         MOVE.W  D3, D5
00003C32  0803 000B               5888m         BTST    #$B, D3
00003C36  6600 000E               5889m         BNE     ADRIMMEDIATE_429
00003C3A  0803 0009               5890m         BTST    #$09, D3
00003C3E  6600 0264               5891m         BNE     ADRABSOLUTEL_429
00003C42  6000 01C4               5892m         BRA     ADRABSOLUTEW_429
00003C46                          5893m ADRIMMEDIATE_429:
00003C46  BE3C 0001               5894m         CMP.B   #1, D7
00003C4A  6700 009E               5895m         BEQ     ADRIMMEDIATEL_429
00003C4E                          5896m ADRIMMEDIATEW_429:
00003C4E  361A                    5897m         MOVE.W  (A2)+, D3
00003C50                          5898mm         PRINTHASH
00003C50  103C 0006               5899mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C54  323C 0023               5900mm         MOVE.W  #35, D1     ; AN = SIGN
00003C58  4E4F                    5901mm         TRAP    #15         ; OUTPUT = SIGN
00003C5A                          5902mm         ENDM
00003C5A                          5903mm         PRINTSIGN
00003C5A  103C 0006               5904mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C5E  323C 0024               5905mm         MOVE.W  #36, D1     ; AN = SIGN
00003C62  4E4F                    5906mm         TRAP    #15         ; OUTPUT = SIGN
00003C64                          5907mm         ENDM
00003C64                          5908mm         ADROUT
00003C64  3212                    5909mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C66  E049                    5910mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C68  E849                    5911mm         LSR.W   #4, D1      
00003C6A                          5912mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C6A  0C01 0009               5913mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C6E  6E00 000A               5914mmm         BGT     ALPHA_459
00003C72  0601 0030               5915mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C76  6000 0006               5916mmm         BRA     DONE_459
00003C7A  0601 0037               5917mmm ALPHA_459: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C7E  4E71                    5918mmm DONE_459: NOP
00003C80                          5919mmm         ENDM
00003C80  4E4F                    5920mm         TRAP    #15         ; EXECUTE OUTPUT
00003C82                          5921mm         
00003C82  3212                    5922mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C84  E949                    5923mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003C86  E049                    5924mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C88  E849                    5925mm         LSR.W   #4, D1      
00003C8A                          5926mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C8A  0C01 0009               5927mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C8E  6E00 000A               5928mmm         BGT     ALPHA_460
00003C92  0601 0030               5929mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C96  6000 0006               5930mmm         BRA     DONE_460
00003C9A  0601 0037               5931mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C9E  4E71                    5932mmm DONE_460: NOP
00003CA0                          5933mmm         ENDM
00003CA0  4E4F                    5934mm         TRAP    #15         ; EXECUTE OUTPUT
00003CA2                          5935mm         
00003CA2  3212                    5936mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CA4  E149                    5937mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003CA6  E049                    5938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CA8  E849                    5939mm         LSR.W   #4, D1      
00003CAA                          5940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CAA  0C01 0009               5941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CAE  6E00 000A               5942mmm         BGT     ALPHA_461
00003CB2  0601 0030               5943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CB6  6000 0006               5944mmm         BRA     DONE_461
00003CBA  0601 0037               5945mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CBE  4E71                    5946mmm DONE_461: NOP
00003CC0                          5947mmm         ENDM
00003CC0  4E4F                    5948mm         TRAP    #15         ; EXECUTE OUTPUT
00003CC2                          5949mm         
00003CC2  3212                    5950mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CC4  E149                    5951mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003CC6  E949                    5952mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003CC8  E049                    5953mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CCA  E849                    5954mm         LSR.W   #4, D1      
00003CCC                          5955mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CCC  0C01 0009               5956mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CD0  6E00 000A               5957mmm         BGT     ALPHA_462
00003CD4  0601 0030               5958mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CD8  6000 0006               5959mmm         BRA     DONE_462
00003CDC  0601 0037               5960mmm ALPHA_462: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CE0  4E71                    5961mmm DONE_462: NOP
00003CE2                          5962mmm         ENDM
00003CE2  4E4F                    5963mm         TRAP    #15         ; EXECUTE OUTPUT       
00003CE4                          5964mm         ENDM 
00003CE4  3605                    5965m         MOVE.W  D5, D3
00003CE6  6000 02CC               5966m         BRA     COMPLETE_429
00003CEA                          5967m ADRIMMEDIATEL_429:
00003CEA  361A                    5968m         MOVE.W  (A2)+, D3
00003CEC                          5969mm         PRINTHASH
00003CEC  103C 0006               5970mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CF0  323C 0023               5971mm         MOVE.W  #35, D1     ; AN = SIGN
00003CF4  4E4F                    5972mm         TRAP    #15         ; OUTPUT = SIGN
00003CF6                          5973mm         ENDM
00003CF6                          5974mm         PRINTSIGN
00003CF6  103C 0006               5975mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CFA  323C 0024               5976mm         MOVE.W  #36, D1     ; AN = SIGN
00003CFE  4E4F                    5977mm         TRAP    #15         ; OUTPUT = SIGN
00003D00                          5978mm         ENDM
00003D00                          5979mm         ADROUT 
00003D00  3212                    5980mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D02  E049                    5981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D04  E849                    5982mm         LSR.W   #4, D1      
00003D06                          5983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D06  0C01 0009               5984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D0A  6E00 000A               5985mmm         BGT     ALPHA_466
00003D0E  0601 0030               5986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D12  6000 0006               5987mmm         BRA     DONE_466
00003D16  0601 0037               5988mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D1A  4E71                    5989mmm DONE_466: NOP
00003D1C                          5990mmm         ENDM
00003D1C  4E4F                    5991mm         TRAP    #15         ; EXECUTE OUTPUT
00003D1E                          5992mm         
00003D1E  3212                    5993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D20  E949                    5994mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D22  E049                    5995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D24  E849                    5996mm         LSR.W   #4, D1      
00003D26                          5997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D26  0C01 0009               5998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D2A  6E00 000A               5999mmm         BGT     ALPHA_467
00003D2E  0601 0030               6000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D32  6000 0006               6001mmm         BRA     DONE_467
00003D36  0601 0037               6002mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D3A  4E71                    6003mmm DONE_467: NOP
00003D3C                          6004mmm         ENDM
00003D3C  4E4F                    6005mm         TRAP    #15         ; EXECUTE OUTPUT
00003D3E                          6006mm         
00003D3E  3212                    6007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D40  E149                    6008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D42  E049                    6009mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D44  E849                    6010mm         LSR.W   #4, D1      
00003D46                          6011mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D46  0C01 0009               6012mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D4A  6E00 000A               6013mmm         BGT     ALPHA_468
00003D4E  0601 0030               6014mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D52  6000 0006               6015mmm         BRA     DONE_468
00003D56  0601 0037               6016mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D5A  4E71                    6017mmm DONE_468: NOP
00003D5C                          6018mmm         ENDM
00003D5C  4E4F                    6019mm         TRAP    #15         ; EXECUTE OUTPUT
00003D5E                          6020mm         
00003D5E  3212                    6021mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D60  E149                    6022mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D62  E949                    6023mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003D64  E049                    6024mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D66  E849                    6025mm         LSR.W   #4, D1      
00003D68                          6026mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D68  0C01 0009               6027mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D6C  6E00 000A               6028mmm         BGT     ALPHA_469
00003D70  0601 0030               6029mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D74  6000 0006               6030mmm         BRA     DONE_469
00003D78  0601 0037               6031mmm ALPHA_469: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D7C  4E71                    6032mmm DONE_469: NOP
00003D7E                          6033mmm         ENDM
00003D7E  4E4F                    6034mm         TRAP    #15         ; EXECUTE OUTPUT       
00003D80                          6035mm         ENDM 
00003D80  361A                    6036m         MOVE.W  (A2)+, D3
00003D82                          6037mm         ADROUT
00003D82  3212                    6038mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D84  E049                    6039mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D86  E849                    6040mm         LSR.W   #4, D1      
00003D88                          6041mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D88  0C01 0009               6042mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D8C  6E00 000A               6043mmm         BGT     ALPHA_471
00003D90  0601 0030               6044mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D94  6000 0006               6045mmm         BRA     DONE_471
00003D98  0601 0037               6046mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D9C  4E71                    6047mmm DONE_471: NOP
00003D9E                          6048mmm         ENDM
00003D9E  4E4F                    6049mm         TRAP    #15         ; EXECUTE OUTPUT
00003DA0                          6050mm         
00003DA0  3212                    6051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DA2  E949                    6052mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003DA4  E049                    6053mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DA6  E849                    6054mm         LSR.W   #4, D1      
00003DA8                          6055mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DA8  0C01 0009               6056mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DAC  6E00 000A               6057mmm         BGT     ALPHA_472
00003DB0  0601 0030               6058mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DB4  6000 0006               6059mmm         BRA     DONE_472
00003DB8  0601 0037               6060mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DBC  4E71                    6061mmm DONE_472: NOP
00003DBE                          6062mmm         ENDM
00003DBE  4E4F                    6063mm         TRAP    #15         ; EXECUTE OUTPUT
00003DC0                          6064mm         
00003DC0  3212                    6065mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DC2  E149                    6066mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DC4  E049                    6067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DC6  E849                    6068mm         LSR.W   #4, D1      
00003DC8                          6069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DC8  0C01 0009               6070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DCC  6E00 000A               6071mmm         BGT     ALPHA_473
00003DD0  0601 0030               6072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DD4  6000 0006               6073mmm         BRA     DONE_473
00003DD8  0601 0037               6074mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DDC  4E71                    6075mmm DONE_473: NOP
00003DDE                          6076mmm         ENDM
00003DDE  4E4F                    6077mm         TRAP    #15         ; EXECUTE OUTPUT
00003DE0                          6078mm         
00003DE0  3212                    6079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DE2  E149                    6080mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DE4  E949                    6081mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DE6  E049                    6082mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DE8  E849                    6083mm         LSR.W   #4, D1      
00003DEA                          6084mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DEA  0C01 0009               6085mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DEE  6E00 000A               6086mmm         BGT     ALPHA_474
00003DF2  0601 0030               6087mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DF6  6000 0006               6088mmm         BRA     DONE_474
00003DFA  0601 0037               6089mmm ALPHA_474: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DFE  4E71                    6090mmm DONE_474: NOP
00003E00                          6091mmm         ENDM
00003E00  4E4F                    6092mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E02                          6093mm         ENDM 
00003E02  3605                    6094m         MOVE.W  D5, D3
00003E04  6000 01AE               6095m         BRA     COMPLETE_429 
00003E08                          6096m ADRABSOLUTEW_429:     
00003E08  361A                    6097m         MOVE.W  (A2)+, D3
00003E0A                          6098mm         PRINTSIGN
00003E0A  103C 0006               6099mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E0E  323C 0024               6100mm         MOVE.W  #36, D1     ; AN = SIGN
00003E12  4E4F                    6101mm         TRAP    #15         ; OUTPUT = SIGN
00003E14                          6102mm         ENDM
00003E14                          6103mm         PRINTSIGN
00003E14  103C 0006               6104mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E18  323C 0024               6105mm         MOVE.W  #36, D1     ; AN = SIGN
00003E1C  4E4F                    6106mm         TRAP    #15         ; OUTPUT = SIGN
00003E1E                          6107mm         ENDM
00003E1E                          6108mm         ADROUT
00003E1E  3212                    6109mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E20  E049                    6110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E22  E849                    6111mm         LSR.W   #4, D1      
00003E24                          6112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E24  0C01 0009               6113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E28  6E00 000A               6114mmm         BGT     ALPHA_478
00003E2C  0601 0030               6115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E30  6000 0006               6116mmm         BRA     DONE_478
00003E34  0601 0037               6117mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E38  4E71                    6118mmm DONE_478: NOP
00003E3A                          6119mmm         ENDM
00003E3A  4E4F                    6120mm         TRAP    #15         ; EXECUTE OUTPUT
00003E3C                          6121mm         
00003E3C  3212                    6122mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E3E  E949                    6123mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E40  E049                    6124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E42  E849                    6125mm         LSR.W   #4, D1      
00003E44                          6126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E44  0C01 0009               6127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E48  6E00 000A               6128mmm         BGT     ALPHA_479
00003E4C  0601 0030               6129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E50  6000 0006               6130mmm         BRA     DONE_479
00003E54  0601 0037               6131mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E58  4E71                    6132mmm DONE_479: NOP
00003E5A                          6133mmm         ENDM
00003E5A  4E4F                    6134mm         TRAP    #15         ; EXECUTE OUTPUT
00003E5C                          6135mm         
00003E5C  3212                    6136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E5E  E149                    6137mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E60  E049                    6138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E62  E849                    6139mm         LSR.W   #4, D1      
00003E64                          6140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E64  0C01 0009               6141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E68  6E00 000A               6142mmm         BGT     ALPHA_480
00003E6C  0601 0030               6143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E70  6000 0006               6144mmm         BRA     DONE_480
00003E74  0601 0037               6145mmm ALPHA_480: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E78  4E71                    6146mmm DONE_480: NOP
00003E7A                          6147mmm         ENDM
00003E7A  4E4F                    6148mm         TRAP    #15         ; EXECUTE OUTPUT
00003E7C                          6149mm         
00003E7C  3212                    6150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E7E  E149                    6151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E80  E949                    6152mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E82  E049                    6153mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E84  E849                    6154mm         LSR.W   #4, D1      
00003E86                          6155mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E86  0C01 0009               6156mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E8A  6E00 000A               6157mmm         BGT     ALPHA_481
00003E8E  0601 0030               6158mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E92  6000 0006               6159mmm         BRA     DONE_481
00003E96  0601 0037               6160mmm ALPHA_481: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E9A  4E71                    6161mmm DONE_481: NOP
00003E9C                          6162mmm         ENDM
00003E9C  4E4F                    6163mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E9E                          6164mm         ENDM 
00003E9E  3605                    6165m         MOVE.W  D5, D3
00003EA0  6000 0112               6166m         BRA     COMPLETE_429  
00003EA4                          6167m ADRABSOLUTEL_429:  
00003EA4  361A                    6168m         MOVE.W  (A2)+, D3
00003EA6                          6169mm         PRINTSIGN
00003EA6  103C 0006               6170mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003EAA  323C 0024               6171mm         MOVE.W  #36, D1     ; AN = SIGN
00003EAE  4E4F                    6172mm         TRAP    #15         ; OUTPUT = SIGN
00003EB0                          6173mm         ENDM
00003EB0                          6174mm         ADROUT 
00003EB0  3212                    6175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EB2  E049                    6176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EB4  E849                    6177mm         LSR.W   #4, D1      
00003EB6                          6178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EB6  0C01 0009               6179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EBA  6E00 000A               6180mmm         BGT     ALPHA_484
00003EBE  0601 0030               6181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EC2  6000 0006               6182mmm         BRA     DONE_484
00003EC6  0601 0037               6183mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ECA  4E71                    6184mmm DONE_484: NOP
00003ECC                          6185mmm         ENDM
00003ECC  4E4F                    6186mm         TRAP    #15         ; EXECUTE OUTPUT
00003ECE                          6187mm         
00003ECE  3212                    6188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003ED0  E949                    6189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003ED2  E049                    6190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ED4  E849                    6191mm         LSR.W   #4, D1      
00003ED6                          6192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003ED6  0C01 0009               6193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EDA  6E00 000A               6194mmm         BGT     ALPHA_485
00003EDE  0601 0030               6195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EE2  6000 0006               6196mmm         BRA     DONE_485
00003EE6  0601 0037               6197mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EEA  4E71                    6198mmm DONE_485: NOP
00003EEC                          6199mmm         ENDM
00003EEC  4E4F                    6200mm         TRAP    #15         ; EXECUTE OUTPUT
00003EEE                          6201mm         
00003EEE  3212                    6202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EF0  E149                    6203mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EF2  E049                    6204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EF4  E849                    6205mm         LSR.W   #4, D1      
00003EF6                          6206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EF6  0C01 0009               6207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EFA  6E00 000A               6208mmm         BGT     ALPHA_486
00003EFE  0601 0030               6209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F02  6000 0006               6210mmm         BRA     DONE_486
00003F06  0601 0037               6211mmm ALPHA_486: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F0A  4E71                    6212mmm DONE_486: NOP
00003F0C                          6213mmm         ENDM
00003F0C  4E4F                    6214mm         TRAP    #15         ; EXECUTE OUTPUT
00003F0E                          6215mm         
00003F0E  3212                    6216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F10  E149                    6217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F12  E949                    6218mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F14  E049                    6219mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F16  E849                    6220mm         LSR.W   #4, D1      
00003F18                          6221mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F18  0C01 0009               6222mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F1C  6E00 000A               6223mmm         BGT     ALPHA_487
00003F20  0601 0030               6224mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F24  6000 0006               6225mmm         BRA     DONE_487
00003F28  0601 0037               6226mmm ALPHA_487: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F2C  4E71                    6227mmm DONE_487: NOP
00003F2E                          6228mmm         ENDM
00003F2E  4E4F                    6229mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F30                          6230mm         ENDM 
00003F30  361A                    6231m         MOVE.W  (A2)+, D3
00003F32                          6232mm         ADROUT
00003F32  3212                    6233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F34  E049                    6234mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F36  E849                    6235mm         LSR.W   #4, D1      
00003F38                          6236mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F38  0C01 0009               6237mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F3C  6E00 000A               6238mmm         BGT     ALPHA_489
00003F40  0601 0030               6239mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F44  6000 0006               6240mmm         BRA     DONE_489
00003F48  0601 0037               6241mmm ALPHA_489: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F4C  4E71                    6242mmm DONE_489: NOP
00003F4E                          6243mmm         ENDM
00003F4E  4E4F                    6244mm         TRAP    #15         ; EXECUTE OUTPUT
00003F50                          6245mm         
00003F50  3212                    6246mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F52  E949                    6247mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F54  E049                    6248mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F56  E849                    6249mm         LSR.W   #4, D1      
00003F58                          6250mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F58  0C01 0009               6251mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F5C  6E00 000A               6252mmm         BGT     ALPHA_490
00003F60  0601 0030               6253mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F64  6000 0006               6254mmm         BRA     DONE_490
00003F68  0601 0037               6255mmm ALPHA_490: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F6C  4E71                    6256mmm DONE_490: NOP
00003F6E                          6257mmm         ENDM
00003F6E  4E4F                    6258mm         TRAP    #15         ; EXECUTE OUTPUT
00003F70                          6259mm         
00003F70  3212                    6260mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F72  E149                    6261mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F74  E049                    6262mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F76  E849                    6263mm         LSR.W   #4, D1      
00003F78                          6264mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F78  0C01 0009               6265mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F7C  6E00 000A               6266mmm         BGT     ALPHA_491
00003F80  0601 0030               6267mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F84  6000 0006               6268mmm         BRA     DONE_491
00003F88  0601 0037               6269mmm ALPHA_491: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F8C  4E71                    6270mmm DONE_491: NOP
00003F8E                          6271mmm         ENDM
00003F8E  4E4F                    6272mm         TRAP    #15         ; EXECUTE OUTPUT
00003F90                          6273mm         
00003F90  3212                    6274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F92  E149                    6275mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F94  E949                    6276mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F96  E049                    6277mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F98  E849                    6278mm         LSR.W   #4, D1      
00003F9A                          6279mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F9A  0C01 0009               6280mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F9E  6E00 000A               6281mmm         BGT     ALPHA_492
00003FA2  0601 0030               6282mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FA6  6000 0006               6283mmm         BRA     DONE_492
00003FAA  0601 0037               6284mmm ALPHA_492: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FAE  4E71                    6285mmm DONE_492: NOP
00003FB0                          6286mmm         ENDM
00003FB0  4E4F                    6287mm         TRAP    #15         ; EXECUTE OUTPUT       
00003FB2                          6288mm         ENDM 
00003FB2  3605                    6289m         MOVE.W  D5, D3
00003FB4                          6290m 
00003FB4                          6291m COMPLETE_429:  ; OPCODE HAS BEEN VERIFIED
00003FB4                          6292m         ENDM
00003FB4                          6293m         printComma
00003FB4  43F8 00C9               6294m         LEA     OCOMMA, A1     
00003FB8  103C 000E               6295m         MOVE.B  #14,D0          
00003FBC  4E4F                    6296m         TRAP    #15
00003FBE                          6297m         ENDM
00003FBE                          6298m         printDnDest     D3
00003FBE  3203                    6299m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003FC0  E949                    6300m         LSL     #$04, D1
00003FC2  E049                    6301m         LSR     #$08, D1
00003FC4  EA49                    6302m         LSR     #$05, D1
00003FC6  43F8 00C1               6303m         LEA     ODN, A1     
00003FCA  103C 000E               6304m         MOVE.B  #14,D0          
00003FCE  4E4F                    6305m         TRAP    #15
00003FD0  103C 0003               6306m         MOVE.B  #3,D0          
00003FD4  4E4F                    6307m         TRAP    #15
00003FD6                          6308m         ENDM
00003FD6  4E75                    6309          RTS                 ; Return from decodeMULS subroutine
00003FD8                          6310          
00003FD8                          6311  ; ------------------------------------------------------------
00003FD8                          6312  ; 7. "decodeDIVU" subroutine
00003FD8                          6313  ; AUTHOR
00003FD8                          6314  ;
00003FD8                          6315  ; TODO: DESCRIPTION DIVU
00003FD8                          6316  ; ------------------------------------------------------------
00003FD8                          6317  decodeDIVU:
00003FD8                          6318m         verifyOpcode    pDIVU, (A2)
00003FD8  43F8 013A               6319m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
00003FDC  3612                    6320m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FDE  123C 000F               6321m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003FE2                          6322m         
00003FE2                          6323m LOOP_495: 
00003FE2  0C11 0030               6324m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003FE6  6700 000E               6325m         BEQ     CHECKFOR0_495
00003FEA  0C11 0031               6326m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003FEE  6700 0010               6327m         BEQ     CHECKFOR1_495
00003FF2  6000 0012               6328m         BRA     NEXT_495      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003FF6                          6329m         
00003FF6                          6330m CHECKFOR0_495: 
00003FF6  0303                    6331m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003FF8  6600 2B56               6332m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003FFC  6000 0008               6333m         BRA     NEXT_495
00004000                          6334m 
00004000                          6335m CHECKFOR1_495:
00004000  0303                    6336m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004002  6700 2B4C               6337m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004006                          6338m 
00004006                          6339m NEXT_495: 
00004006  B23C 0000               6340m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000400A  6700 0008               6341m         BEQ     COMPLETE_495  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000400E  5301                    6342m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004010  1819                    6343m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004012  60CE                    6344m         BRA     LOOP_495      ; BEGIN LOOP AGAIN
00004014                          6345m 
00004014                          6346m COMPLETE_495:  ; OPCODE HAS BEEN VERIFIED
00004014                          6347m         ENDM
00004014  43F8 007C               6348          LEA     oDIVU, A1     
00004018  103C 000E               6349          MOVE.B  #14,D0          
0000401C  4E4F                    6350          TRAP    #15
0000401E                          6351m         printSize       (A2)
0000401E  3612                    6352m         MOVE.W  (A2), D3      ; INPUT VALUE
00004020  4247                    6353m         CLR     D7      
00004022                          6354m CHECKFORB_496: 
00004022  0803 000D               6355m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00004026  6600 0010               6356m         BNE     CHECKFORW_496  ; IF NOT GO TO WORD SIZE
0000402A  43F8 00B5               6357m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
0000402E  103C 000E               6358m         MOVE.B  #14,D0          
00004032  4E4F                    6359m         TRAP    #15
00004034  6000 0026               6360m         BRA     COMPLETE_496      
00004038                          6361m CHECKFORW_496: 
00004038  0803 000C               6362m         BTST    #12, D3      ; CHECK IF CONTAINS 1
0000403C  6700 0010               6363m         BEQ     CHECKFORL_496  ; IF NOT, SIZE CANNOT BE WORD
00004040  43F8 00B9               6364m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
00004044  103C 000E               6365m         MOVE.B  #14,D0          
00004048  4E4F                    6366m         TRAP    #15
0000404A  6000 0010               6367m         BRA     COMPLETE_496  
0000404E                          6368m CHECKFORL_496:
0000404E  1E3C 0001               6369m         MOVE.B  #$1, D7
00004052  43F8 00BD               6370m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
00004056  103C 000E               6371m         MOVE.B  #14,D0          
0000405A  4E4F                    6372m         TRAP    #15
0000405C                          6373m COMPLETE_496:  ; SIZE HAS BEEN PRINTED
0000405C                          6374m         ENDM
0000405C                          6375m         prepareAdrMode  #$1, (A2)
0000405C  3C3C 0001               6376m         MOVE.W  #$1, D6      ; INPUT VALUE
00004060  3212                    6377m         MOVE.W  (A2), D1
00004062  BC3C 0001               6378m         CMP.B   #$01, D6
00004066  6700 000C               6379m         BEQ     ADRSOURCE_497    
0000406A                          6380m ADRDEST_497:
0000406A  EF49                    6381m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000406C  E049                    6382m         LSR     #$08, D1
0000406E  EA49                    6383m         LSR     #$05, D1
00004070  6000 000A               6384m         BRA     COMPLETE_497 
00004074                          6385m ADRSOURCE_497:                
00004074  E149                    6386m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004076  E549                    6387m         LSL     #$02, D1
00004078  E049                    6388m         LSR     #$08, D1
0000407A  EA49                    6389m         LSR     #$05, D1
0000407C                          6390m COMPLETE_497:  ; OPCODE HAS BEEN VERIFIED
0000407C                          6391m         ENDM        
0000407C                          6392m         decodeAdrMode   (A2), D1
0000407C  3612                    6393m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000407E  3201                    6394m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004080                          6395m 
00004080  B23C 0001               6396m         CMP.B   #$01, D1
00004084  6700 0066               6397m         BEQ     ADRREGDIRECT_498    
00004088  B23C 0002               6398m         CMP.B   #$02, D1
0000408C  6700 00A0               6399m         BEQ     ADRREGINDIRECT_498  
00004090  B23C 0003               6400m         CMP.B   #$03, D1
00004094  6700 0102               6401m         BEQ     ADRREGPOSTINC_498  
00004098  B23C 0004               6402m         CMP.B   #$04, D1
0000409C  6700 0178               6403m         BEQ     ADRREGPREDEC_498
000040A0  B23C 0007               6404m         CMP.B   #$07, D1
000040A4  6700 01EE               6405m         BEQ     ADRABSOLUTE_498    
000040A8                          6406m         
000040A8                          6407m DATAREGDIRECT_498: 
000040A8  BC3C 0001               6408m         CMP.B   #$01, D6
000040AC  6700 001E               6409m         BEQ     DATAREGDIRECTSRC_498   
000040B0                          6410m DATAREGDIRECTDEST_498: 
000040B0                          6411mm         PRINTDNDEST D3 
000040B0  3203                    6412mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000040B2  E949                    6413mm         LSL     #$04, D1
000040B4  E049                    6414mm         LSR     #$08, D1
000040B6  EA49                    6415mm         LSR     #$05, D1
000040B8  43F8 00C1               6416mm         LEA     ODN, A1     
000040BC  103C 000E               6417mm         MOVE.B  #14,D0          
000040C0  4E4F                    6418mm         TRAP    #15
000040C2  103C 0003               6419mm         MOVE.B  #3,D0          
000040C6  4E4F                    6420mm         TRAP    #15
000040C8                          6421mm         ENDM
000040C8  6000 056C               6422m         BRA     COMPLETE_498 
000040CC                          6423m DATAREGDIRECTSRC_498: 
000040CC                          6424mm         PRINTDNSRC D3 
000040CC  4281                    6425mm         CLR.L   D1
000040CE  3203                    6426mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000040D0  E149                    6427mm         LSL     #$08, D1
000040D2  EB49                    6428mm         LSL     #$05, D1
000040D4  E049                    6429mm         LSR     #$08, D1
000040D6  EA49                    6430mm         LSR     #$05, D1
000040D8  43F8 00C1               6431mm         LEA     ODN, A1     
000040DC  103C 000E               6432mm         MOVE.B  #14,D0          
000040E0  4E4F                    6433mm         TRAP    #15
000040E2  103C 0003               6434mm         MOVE.B  #3,D0          
000040E6  4E4F                    6435mm         TRAP    #15
000040E8                          6436mm         ENDM
000040E8  6000 054C               6437m         BRA     COMPLETE_498   
000040EC                          6438m         
000040EC                          6439m ADRREGDIRECT_498: 
000040EC  BC3C 0001               6440m         CMP.B   #$01, D6
000040F0  6700 001E               6441m         BEQ     ADRREGDIRECTSRC_498   
000040F4                          6442m ADRREGDIRECTDEST_498:
000040F4                          6443mm         PRINTANDEST D3
000040F4  3203                    6444mm         MOVE.W  D3, D1
000040F6  E949                    6445mm         LSL     #$04, D1
000040F8  E049                    6446mm         LSR     #$08, D1
000040FA  EA49                    6447mm         LSR     #$05, D1
000040FC  43F8 00C3               6448mm         LEA     OAN, A1     
00004100  103C 000E               6449mm         MOVE.B  #14,D0          
00004104  4E4F                    6450mm         TRAP    #15
00004106  103C 0003               6451mm         MOVE.B  #3,D0          
0000410A  4E4F                    6452mm         TRAP    #15
0000410C                          6453mm         ENDM
0000410C  6000 0528               6454m         BRA     COMPLETE_498   
00004110                          6455m ADRREGDIRECTSRC_498:
00004110                          6456mm         PRINTANSRC D3
00004110  3203                    6457mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004112  E149                    6458mm         LSL     #$08, D1
00004114  EB49                    6459mm         LSL     #$05, D1
00004116  E049                    6460mm         LSR     #$08, D1
00004118  EA49                    6461mm         LSR     #$05, D1
0000411A  43F8 00C3               6462mm         LEA     OAN, A1     
0000411E  103C 000E               6463mm         MOVE.B  #14,D0          
00004122  4E4F                    6464mm         TRAP    #15
00004124  103C 0003               6465mm         MOVE.B  #3,D0          
00004128  4E4F                    6466mm         TRAP    #15
0000412A                          6467mm         ENDM
0000412A  6000 050A               6468m         BRA     COMPLETE_498   
0000412E                          6469m        
0000412E                          6470m ADRREGINDIRECT_498:   
0000412E  BC3C 0001               6471m         CMP.B   #$01, D6
00004132  6700 0032               6472m         BEQ     ADRREGINDIRECTSRC_498   
00004136                          6473m ADRREGINDIRECTDEST_498:
00004136                          6474mm         PRINTLB
00004136  43F8 00C5               6475mm         LEA     OLB, A1     
0000413A  103C 000E               6476mm         MOVE.B  #14,D0          
0000413E  4E4F                    6477mm         TRAP    #15
00004140                          6478mm         ENDM
00004140                          6479mm         PRINTANDEST D3  
00004140  3203                    6480mm         MOVE.W  D3, D1
00004142  E949                    6481mm         LSL     #$04, D1
00004144  E049                    6482mm         LSR     #$08, D1
00004146  EA49                    6483mm         LSR     #$05, D1
00004148  43F8 00C3               6484mm         LEA     OAN, A1     
0000414C  103C 000E               6485mm         MOVE.B  #14,D0          
00004150  4E4F                    6486mm         TRAP    #15
00004152  103C 0003               6487mm         MOVE.B  #3,D0          
00004156  4E4F                    6488mm         TRAP    #15
00004158                          6489mm         ENDM
00004158                          6490mm         PRINTRB
00004158  43F8 00C7               6491mm         LEA     ORB, A1     
0000415C  103C 000E               6492mm         MOVE.B  #14,D0          
00004160  4E4F                    6493mm         TRAP    #15
00004162                          6494mm         ENDM
00004162  6000 04D2               6495m         BRA     COMPLETE_498     
00004166                          6496m ADRREGINDIRECTSRC_498:   
00004166                          6497mm         PRINTLB
00004166  43F8 00C5               6498mm         LEA     OLB, A1     
0000416A  103C 000E               6499mm         MOVE.B  #14,D0          
0000416E  4E4F                    6500mm         TRAP    #15
00004170                          6501mm         ENDM
00004170                          6502mm         PRINTANSRC D3  
00004170  3203                    6503mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004172  E149                    6504mm         LSL     #$08, D1
00004174  EB49                    6505mm         LSL     #$05, D1
00004176  E049                    6506mm         LSR     #$08, D1
00004178  EA49                    6507mm         LSR     #$05, D1
0000417A  43F8 00C3               6508mm         LEA     OAN, A1     
0000417E  103C 000E               6509mm         MOVE.B  #14,D0          
00004182  4E4F                    6510mm         TRAP    #15
00004184  103C 0003               6511mm         MOVE.B  #3,D0          
00004188  4E4F                    6512mm         TRAP    #15
0000418A                          6513mm         ENDM
0000418A                          6514mm         PRINTRB
0000418A  43F8 00C7               6515mm         LEA     ORB, A1     
0000418E  103C 000E               6516mm         MOVE.B  #14,D0          
00004192  4E4F                    6517mm         TRAP    #15
00004194                          6518mm         ENDM
00004194  6000 04A0               6519m         BRA     COMPLETE_498   
00004198                          6520m         
00004198                          6521m ADRREGPOSTINC_498:   
00004198  BC3C 0001               6522m         CMP.B   #$01, D6
0000419C  6700 003C               6523m         BEQ     ADRREGPOSTINCSRC_498   
000041A0                          6524m ADRREGPOSTINCDEST_498: 
000041A0                          6525mm         PRINTLB
000041A0  43F8 00C5               6526mm         LEA     OLB, A1     
000041A4  103C 000E               6527mm         MOVE.B  #14,D0          
000041A8  4E4F                    6528mm         TRAP    #15
000041AA                          6529mm         ENDM
000041AA                          6530mm         PRINTANDEST D3  
000041AA  3203                    6531mm         MOVE.W  D3, D1
000041AC  E949                    6532mm         LSL     #$04, D1
000041AE  E049                    6533mm         LSR     #$08, D1
000041B0  EA49                    6534mm         LSR     #$05, D1
000041B2  43F8 00C3               6535mm         LEA     OAN, A1     
000041B6  103C 000E               6536mm         MOVE.B  #14,D0          
000041BA  4E4F                    6537mm         TRAP    #15
000041BC  103C 0003               6538mm         MOVE.B  #3,D0          
000041C0  4E4F                    6539mm         TRAP    #15
000041C2                          6540mm         ENDM
000041C2                          6541mm         PRINTRB
000041C2  43F8 00C7               6542mm         LEA     ORB, A1     
000041C6  103C 000E               6543mm         MOVE.B  #14,D0          
000041CA  4E4F                    6544mm         TRAP    #15
000041CC                          6545mm         ENDM
000041CC                          6546mm         PRINTPI
000041CC  43F8 00CE               6547mm         LEA     OPSTINC, A1     
000041D0  103C 000E               6548mm         MOVE.B  #14,D0          
000041D4  4E4F                    6549mm         TRAP    #15
000041D6                          6550mm         ENDM
000041D6  6000 045E               6551m         BRA     COMPLETE_498  
000041DA                          6552m ADRREGPOSTINCSRC_498:           
000041DA                          6553mm         PRINTLB
000041DA  43F8 00C5               6554mm         LEA     OLB, A1     
000041DE  103C 000E               6555mm         MOVE.B  #14,D0          
000041E2  4E4F                    6556mm         TRAP    #15
000041E4                          6557mm         ENDM
000041E4                          6558mm         PRINTANSRC D3  
000041E4  3203                    6559mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041E6  E149                    6560mm         LSL     #$08, D1
000041E8  EB49                    6561mm         LSL     #$05, D1
000041EA  E049                    6562mm         LSR     #$08, D1
000041EC  EA49                    6563mm         LSR     #$05, D1
000041EE  43F8 00C3               6564mm         LEA     OAN, A1     
000041F2  103C 000E               6565mm         MOVE.B  #14,D0          
000041F6  4E4F                    6566mm         TRAP    #15
000041F8  103C 0003               6567mm         MOVE.B  #3,D0          
000041FC  4E4F                    6568mm         TRAP    #15
000041FE                          6569mm         ENDM
000041FE                          6570mm         PRINTRB
000041FE  43F8 00C7               6571mm         LEA     ORB, A1     
00004202  103C 000E               6572mm         MOVE.B  #14,D0          
00004206  4E4F                    6573mm         TRAP    #15
00004208                          6574mm         ENDM
00004208                          6575mm         PRINTPI
00004208  43F8 00CE               6576mm         LEA     OPSTINC, A1     
0000420C  103C 000E               6577mm         MOVE.B  #14,D0          
00004210  4E4F                    6578mm         TRAP    #15
00004212                          6579mm         ENDM
00004212  6000 0422               6580m         BRA     COMPLETE_498  
00004216                          6581m         
00004216                          6582m ADRREGPREDEC_498: 
00004216  BC3C 0001               6583m         CMP.B   #$01, D6
0000421A  6700 003C               6584m         BEQ     ADRREGPREDECSRC_498   
0000421E                          6585m ADRREGPREDECDEST_498:
0000421E                          6586mm         PRINTPD  
0000421E  43F8 00CC               6587mm         LEA     OPREDEC, A1     
00004222  103C 000E               6588mm         MOVE.B  #14,D0          
00004226  4E4F                    6589mm         TRAP    #15
00004228                          6590mm         ENDM
00004228                          6591mm         PRINTLB
00004228  43F8 00C5               6592mm         LEA     OLB, A1     
0000422C  103C 000E               6593mm         MOVE.B  #14,D0          
00004230  4E4F                    6594mm         TRAP    #15
00004232                          6595mm         ENDM
00004232                          6596mm         PRINTANDEST D3  
00004232  3203                    6597mm         MOVE.W  D3, D1
00004234  E949                    6598mm         LSL     #$04, D1
00004236  E049                    6599mm         LSR     #$08, D1
00004238  EA49                    6600mm         LSR     #$05, D1
0000423A  43F8 00C3               6601mm         LEA     OAN, A1     
0000423E  103C 000E               6602mm         MOVE.B  #14,D0          
00004242  4E4F                    6603mm         TRAP    #15
00004244  103C 0003               6604mm         MOVE.B  #3,D0          
00004248  4E4F                    6605mm         TRAP    #15
0000424A                          6606mm         ENDM
0000424A                          6607mm         PRINTRB
0000424A  43F8 00C7               6608mm         LEA     ORB, A1     
0000424E  103C 000E               6609mm         MOVE.B  #14,D0          
00004252  4E4F                    6610mm         TRAP    #15
00004254                          6611mm         ENDM
00004254  6000 03E0               6612m         BRA     COMPLETE_498   
00004258                          6613m ADRREGPREDECSRC_498: 
00004258                          6614mm         PRINTPD  
00004258  43F8 00CC               6615mm         LEA     OPREDEC, A1     
0000425C  103C 000E               6616mm         MOVE.B  #14,D0          
00004260  4E4F                    6617mm         TRAP    #15
00004262                          6618mm         ENDM
00004262                          6619mm         PRINTLB
00004262  43F8 00C5               6620mm         LEA     OLB, A1     
00004266  103C 000E               6621mm         MOVE.B  #14,D0          
0000426A  4E4F                    6622mm         TRAP    #15
0000426C                          6623mm         ENDM
0000426C                          6624mm         PRINTANSRC D3  
0000426C  3203                    6625mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000426E  E149                    6626mm         LSL     #$08, D1
00004270  EB49                    6627mm         LSL     #$05, D1
00004272  E049                    6628mm         LSR     #$08, D1
00004274  EA49                    6629mm         LSR     #$05, D1
00004276  43F8 00C3               6630mm         LEA     OAN, A1     
0000427A  103C 000E               6631mm         MOVE.B  #14,D0          
0000427E  4E4F                    6632mm         TRAP    #15
00004280  103C 0003               6633mm         MOVE.B  #3,D0          
00004284  4E4F                    6634mm         TRAP    #15
00004286                          6635mm         ENDM
00004286                          6636mm         PRINTRB
00004286  43F8 00C7               6637mm         LEA     ORB, A1     
0000428A  103C 000E               6638mm         MOVE.B  #14,D0          
0000428E  4E4F                    6639mm         TRAP    #15
00004290                          6640mm         ENDM
00004290  6000 03A4               6641m         BRA     COMPLETE_498
00004294                          6642m        
00004294                          6643m ADRABSOLUTE_498:
00004294  BC3C 0001               6644m         CMP.B   #$01, D6
00004298  6600 0018               6645m         BNE     ADRABSOLUTEDST_498 
0000429C                          6646m         
0000429C  3A03                    6647m         MOVE.W  D3, D5
0000429E  0803 0002               6648m         BTST    #2, D3
000042A2  6600 0024               6649m         BNE     ADRIMMEDIATE_498
000042A6  0803 0000               6650m         BTST    #0, D3
000042AA  6600 027A               6651m         BNE     ADRABSOLUTEL_498
000042AE  6000 01DA               6652m         BRA     ADRABSOLUTEW_498
000042B2                          6653m ADRABSOLUTEDST_498:
000042B2  3A03                    6654m         MOVE.W  D3, D5
000042B4  0803 000B               6655m         BTST    #$B, D3
000042B8  6600 000E               6656m         BNE     ADRIMMEDIATE_498
000042BC  0803 0009               6657m         BTST    #$09, D3
000042C0  6600 0264               6658m         BNE     ADRABSOLUTEL_498
000042C4  6000 01C4               6659m         BRA     ADRABSOLUTEW_498
000042C8                          6660m ADRIMMEDIATE_498:
000042C8  BE3C 0001               6661m         CMP.B   #1, D7
000042CC  6700 009E               6662m         BEQ     ADRIMMEDIATEL_498
000042D0                          6663m ADRIMMEDIATEW_498:
000042D0  361A                    6664m         MOVE.W  (A2)+, D3
000042D2                          6665mm         PRINTHASH
000042D2  103C 0006               6666mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042D6  323C 0023               6667mm         MOVE.W  #35, D1     ; AN = SIGN
000042DA  4E4F                    6668mm         TRAP    #15         ; OUTPUT = SIGN
000042DC                          6669mm         ENDM
000042DC                          6670mm         PRINTSIGN
000042DC  103C 0006               6671mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042E0  323C 0024               6672mm         MOVE.W  #36, D1     ; AN = SIGN
000042E4  4E4F                    6673mm         TRAP    #15         ; OUTPUT = SIGN
000042E6                          6674mm         ENDM
000042E6                          6675mm         ADROUT
000042E6  3212                    6676mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042E8  E049                    6677mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042EA  E849                    6678mm         LSR.W   #4, D1      
000042EC                          6679mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042EC  0C01 0009               6680mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042F0  6E00 000A               6681mmm         BGT     ALPHA_528
000042F4  0601 0030               6682mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042F8  6000 0006               6683mmm         BRA     DONE_528
000042FC  0601 0037               6684mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004300  4E71                    6685mmm DONE_528: NOP
00004302                          6686mmm         ENDM
00004302  4E4F                    6687mm         TRAP    #15         ; EXECUTE OUTPUT
00004304                          6688mm         
00004304  3212                    6689mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004306  E949                    6690mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004308  E049                    6691mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000430A  E849                    6692mm         LSR.W   #4, D1      
0000430C                          6693mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000430C  0C01 0009               6694mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004310  6E00 000A               6695mmm         BGT     ALPHA_529
00004314  0601 0030               6696mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004318  6000 0006               6697mmm         BRA     DONE_529
0000431C  0601 0037               6698mmm ALPHA_529: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004320  4E71                    6699mmm DONE_529: NOP
00004322                          6700mmm         ENDM
00004322  4E4F                    6701mm         TRAP    #15         ; EXECUTE OUTPUT
00004324                          6702mm         
00004324  3212                    6703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004326  E149                    6704mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004328  E049                    6705mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000432A  E849                    6706mm         LSR.W   #4, D1      
0000432C                          6707mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000432C  0C01 0009               6708mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004330  6E00 000A               6709mmm         BGT     ALPHA_530
00004334  0601 0030               6710mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004338  6000 0006               6711mmm         BRA     DONE_530
0000433C  0601 0037               6712mmm ALPHA_530: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004340  4E71                    6713mmm DONE_530: NOP
00004342                          6714mmm         ENDM
00004342  4E4F                    6715mm         TRAP    #15         ; EXECUTE OUTPUT
00004344                          6716mm         
00004344  3212                    6717mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004346  E149                    6718mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004348  E949                    6719mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000434A  E049                    6720mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000434C  E849                    6721mm         LSR.W   #4, D1      
0000434E                          6722mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000434E  0C01 0009               6723mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004352  6E00 000A               6724mmm         BGT     ALPHA_531
00004356  0601 0030               6725mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000435A  6000 0006               6726mmm         BRA     DONE_531
0000435E  0601 0037               6727mmm ALPHA_531: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004362  4E71                    6728mmm DONE_531: NOP
00004364                          6729mmm         ENDM
00004364  4E4F                    6730mm         TRAP    #15         ; EXECUTE OUTPUT       
00004366                          6731mm         ENDM 
00004366  3605                    6732m         MOVE.W  D5, D3
00004368  6000 02CC               6733m         BRA     COMPLETE_498
0000436C                          6734m ADRIMMEDIATEL_498:
0000436C  361A                    6735m         MOVE.W  (A2)+, D3
0000436E                          6736mm         PRINTHASH
0000436E  103C 0006               6737mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004372  323C 0023               6738mm         MOVE.W  #35, D1     ; AN = SIGN
00004376  4E4F                    6739mm         TRAP    #15         ; OUTPUT = SIGN
00004378                          6740mm         ENDM
00004378                          6741mm         PRINTSIGN
00004378  103C 0006               6742mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000437C  323C 0024               6743mm         MOVE.W  #36, D1     ; AN = SIGN
00004380  4E4F                    6744mm         TRAP    #15         ; OUTPUT = SIGN
00004382                          6745mm         ENDM
00004382                          6746mm         ADROUT 
00004382  3212                    6747mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004384  E049                    6748mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004386  E849                    6749mm         LSR.W   #4, D1      
00004388                          6750mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004388  0C01 0009               6751mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000438C  6E00 000A               6752mmm         BGT     ALPHA_535
00004390  0601 0030               6753mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004394  6000 0006               6754mmm         BRA     DONE_535
00004398  0601 0037               6755mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000439C  4E71                    6756mmm DONE_535: NOP
0000439E                          6757mmm         ENDM
0000439E  4E4F                    6758mm         TRAP    #15         ; EXECUTE OUTPUT
000043A0                          6759mm         
000043A0  3212                    6760mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A2  E949                    6761mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043A4  E049                    6762mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043A6  E849                    6763mm         LSR.W   #4, D1      
000043A8                          6764mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043A8  0C01 0009               6765mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043AC  6E00 000A               6766mmm         BGT     ALPHA_536
000043B0  0601 0030               6767mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B4  6000 0006               6768mmm         BRA     DONE_536
000043B8  0601 0037               6769mmm ALPHA_536: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043BC  4E71                    6770mmm DONE_536: NOP
000043BE                          6771mmm         ENDM
000043BE  4E4F                    6772mm         TRAP    #15         ; EXECUTE OUTPUT
000043C0                          6773mm         
000043C0  3212                    6774mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043C2  E149                    6775mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043C4  E049                    6776mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043C6  E849                    6777mm         LSR.W   #4, D1      
000043C8                          6778mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043C8  0C01 0009               6779mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043CC  6E00 000A               6780mmm         BGT     ALPHA_537
000043D0  0601 0030               6781mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D4  6000 0006               6782mmm         BRA     DONE_537
000043D8  0601 0037               6783mmm ALPHA_537: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043DC  4E71                    6784mmm DONE_537: NOP
000043DE                          6785mmm         ENDM
000043DE  4E4F                    6786mm         TRAP    #15         ; EXECUTE OUTPUT
000043E0                          6787mm         
000043E0  3212                    6788mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043E2  E149                    6789mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043E4  E949                    6790mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043E6  E049                    6791mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043E8  E849                    6792mm         LSR.W   #4, D1      
000043EA                          6793mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043EA  0C01 0009               6794mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043EE  6E00 000A               6795mmm         BGT     ALPHA_538
000043F2  0601 0030               6796mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F6  6000 0006               6797mmm         BRA     DONE_538
000043FA  0601 0037               6798mmm ALPHA_538: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043FE  4E71                    6799mmm DONE_538: NOP
00004400                          6800mmm         ENDM
00004400  4E4F                    6801mm         TRAP    #15         ; EXECUTE OUTPUT       
00004402                          6802mm         ENDM 
00004402  361A                    6803m         MOVE.W  (A2)+, D3
00004404                          6804mm         ADROUT
00004404  3212                    6805mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004406  E049                    6806mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004408  E849                    6807mm         LSR.W   #4, D1      
0000440A                          6808mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000440A  0C01 0009               6809mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000440E  6E00 000A               6810mmm         BGT     ALPHA_540
00004412  0601 0030               6811mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004416  6000 0006               6812mmm         BRA     DONE_540
0000441A  0601 0037               6813mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000441E  4E71                    6814mmm DONE_540: NOP
00004420                          6815mmm         ENDM
00004420  4E4F                    6816mm         TRAP    #15         ; EXECUTE OUTPUT
00004422                          6817mm         
00004422  3212                    6818mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004424  E949                    6819mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004426  E049                    6820mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004428  E849                    6821mm         LSR.W   #4, D1      
0000442A                          6822mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000442A  0C01 0009               6823mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000442E  6E00 000A               6824mmm         BGT     ALPHA_541
00004432  0601 0030               6825mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004436  6000 0006               6826mmm         BRA     DONE_541
0000443A  0601 0037               6827mmm ALPHA_541: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000443E  4E71                    6828mmm DONE_541: NOP
00004440                          6829mmm         ENDM
00004440  4E4F                    6830mm         TRAP    #15         ; EXECUTE OUTPUT
00004442                          6831mm         
00004442  3212                    6832mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004444  E149                    6833mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004446  E049                    6834mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004448  E849                    6835mm         LSR.W   #4, D1      
0000444A                          6836mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000444A  0C01 0009               6837mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000444E  6E00 000A               6838mmm         BGT     ALPHA_542
00004452  0601 0030               6839mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004456  6000 0006               6840mmm         BRA     DONE_542
0000445A  0601 0037               6841mmm ALPHA_542: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000445E  4E71                    6842mmm DONE_542: NOP
00004460                          6843mmm         ENDM
00004460  4E4F                    6844mm         TRAP    #15         ; EXECUTE OUTPUT
00004462                          6845mm         
00004462  3212                    6846mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004464  E149                    6847mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004466  E949                    6848mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004468  E049                    6849mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000446A  E849                    6850mm         LSR.W   #4, D1      
0000446C                          6851mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000446C  0C01 0009               6852mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004470  6E00 000A               6853mmm         BGT     ALPHA_543
00004474  0601 0030               6854mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004478  6000 0006               6855mmm         BRA     DONE_543
0000447C  0601 0037               6856mmm ALPHA_543: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004480  4E71                    6857mmm DONE_543: NOP
00004482                          6858mmm         ENDM
00004482  4E4F                    6859mm         TRAP    #15         ; EXECUTE OUTPUT       
00004484                          6860mm         ENDM 
00004484  3605                    6861m         MOVE.W  D5, D3
00004486  6000 01AE               6862m         BRA     COMPLETE_498 
0000448A                          6863m ADRABSOLUTEW_498:     
0000448A  361A                    6864m         MOVE.W  (A2)+, D3
0000448C                          6865mm         PRINTSIGN
0000448C  103C 0006               6866mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004490  323C 0024               6867mm         MOVE.W  #36, D1     ; AN = SIGN
00004494  4E4F                    6868mm         TRAP    #15         ; OUTPUT = SIGN
00004496                          6869mm         ENDM
00004496                          6870mm         PRINTSIGN
00004496  103C 0006               6871mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000449A  323C 0024               6872mm         MOVE.W  #36, D1     ; AN = SIGN
0000449E  4E4F                    6873mm         TRAP    #15         ; OUTPUT = SIGN
000044A0                          6874mm         ENDM
000044A0                          6875mm         ADROUT
000044A0  3212                    6876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044A2  E049                    6877mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044A4  E849                    6878mm         LSR.W   #4, D1      
000044A6                          6879mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044A6  0C01 0009               6880mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044AA  6E00 000A               6881mmm         BGT     ALPHA_547
000044AE  0601 0030               6882mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044B2  6000 0006               6883mmm         BRA     DONE_547
000044B6  0601 0037               6884mmm ALPHA_547: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044BA  4E71                    6885mmm DONE_547: NOP
000044BC                          6886mmm         ENDM
000044BC  4E4F                    6887mm         TRAP    #15         ; EXECUTE OUTPUT
000044BE                          6888mm         
000044BE  3212                    6889mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044C0  E949                    6890mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000044C2  E049                    6891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044C4  E849                    6892mm         LSR.W   #4, D1      
000044C6                          6893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044C6  0C01 0009               6894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044CA  6E00 000A               6895mmm         BGT     ALPHA_548
000044CE  0601 0030               6896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044D2  6000 0006               6897mmm         BRA     DONE_548
000044D6  0601 0037               6898mmm ALPHA_548: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044DA  4E71                    6899mmm DONE_548: NOP
000044DC                          6900mmm         ENDM
000044DC  4E4F                    6901mm         TRAP    #15         ; EXECUTE OUTPUT
000044DE                          6902mm         
000044DE  3212                    6903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044E0  E149                    6904mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044E2  E049                    6905mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044E4  E849                    6906mm         LSR.W   #4, D1      
000044E6                          6907mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044E6  0C01 0009               6908mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044EA  6E00 000A               6909mmm         BGT     ALPHA_549
000044EE  0601 0030               6910mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044F2  6000 0006               6911mmm         BRA     DONE_549
000044F6  0601 0037               6912mmm ALPHA_549: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044FA  4E71                    6913mmm DONE_549: NOP
000044FC                          6914mmm         ENDM
000044FC  4E4F                    6915mm         TRAP    #15         ; EXECUTE OUTPUT
000044FE                          6916mm         
000044FE  3212                    6917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004500  E149                    6918mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004502  E949                    6919mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004504  E049                    6920mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004506  E849                    6921mm         LSR.W   #4, D1      
00004508                          6922mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004508  0C01 0009               6923mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000450C  6E00 000A               6924mmm         BGT     ALPHA_550
00004510  0601 0030               6925mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004514  6000 0006               6926mmm         BRA     DONE_550
00004518  0601 0037               6927mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000451C  4E71                    6928mmm DONE_550: NOP
0000451E                          6929mmm         ENDM
0000451E  4E4F                    6930mm         TRAP    #15         ; EXECUTE OUTPUT       
00004520                          6931mm         ENDM 
00004520  3605                    6932m         MOVE.W  D5, D3
00004522  6000 0112               6933m         BRA     COMPLETE_498  
00004526                          6934m ADRABSOLUTEL_498:  
00004526  361A                    6935m         MOVE.W  (A2)+, D3
00004528                          6936mm         PRINTSIGN
00004528  103C 0006               6937mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000452C  323C 0024               6938mm         MOVE.W  #36, D1     ; AN = SIGN
00004530  4E4F                    6939mm         TRAP    #15         ; OUTPUT = SIGN
00004532                          6940mm         ENDM
00004532                          6941mm         ADROUT 
00004532  3212                    6942mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004534  E049                    6943mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004536  E849                    6944mm         LSR.W   #4, D1      
00004538                          6945mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004538  0C01 0009               6946mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000453C  6E00 000A               6947mmm         BGT     ALPHA_553
00004540  0601 0030               6948mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004544  6000 0006               6949mmm         BRA     DONE_553
00004548  0601 0037               6950mmm ALPHA_553: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000454C  4E71                    6951mmm DONE_553: NOP
0000454E                          6952mmm         ENDM
0000454E  4E4F                    6953mm         TRAP    #15         ; EXECUTE OUTPUT
00004550                          6954mm         
00004550  3212                    6955mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004552  E949                    6956mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004554  E049                    6957mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004556  E849                    6958mm         LSR.W   #4, D1      
00004558                          6959mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004558  0C01 0009               6960mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000455C  6E00 000A               6961mmm         BGT     ALPHA_554
00004560  0601 0030               6962mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004564  6000 0006               6963mmm         BRA     DONE_554
00004568  0601 0037               6964mmm ALPHA_554: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000456C  4E71                    6965mmm DONE_554: NOP
0000456E                          6966mmm         ENDM
0000456E  4E4F                    6967mm         TRAP    #15         ; EXECUTE OUTPUT
00004570                          6968mm         
00004570  3212                    6969mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004572  E149                    6970mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004574  E049                    6971mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004576  E849                    6972mm         LSR.W   #4, D1      
00004578                          6973mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004578  0C01 0009               6974mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000457C  6E00 000A               6975mmm         BGT     ALPHA_555
00004580  0601 0030               6976mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004584  6000 0006               6977mmm         BRA     DONE_555
00004588  0601 0037               6978mmm ALPHA_555: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000458C  4E71                    6979mmm DONE_555: NOP
0000458E                          6980mmm         ENDM
0000458E  4E4F                    6981mm         TRAP    #15         ; EXECUTE OUTPUT
00004590                          6982mm         
00004590  3212                    6983mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004592  E149                    6984mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004594  E949                    6985mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004596  E049                    6986mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004598  E849                    6987mm         LSR.W   #4, D1      
0000459A                          6988mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000459A  0C01 0009               6989mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000459E  6E00 000A               6990mmm         BGT     ALPHA_556
000045A2  0601 0030               6991mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045A6  6000 0006               6992mmm         BRA     DONE_556
000045AA  0601 0037               6993mmm ALPHA_556: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045AE  4E71                    6994mmm DONE_556: NOP
000045B0                          6995mmm         ENDM
000045B0  4E4F                    6996mm         TRAP    #15         ; EXECUTE OUTPUT       
000045B2                          6997mm         ENDM 
000045B2  361A                    6998m         MOVE.W  (A2)+, D3
000045B4                          6999mm         ADROUT
000045B4  3212                    7000mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045B6  E049                    7001mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B8  E849                    7002mm         LSR.W   #4, D1      
000045BA                          7003mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045BA  0C01 0009               7004mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045BE  6E00 000A               7005mmm         BGT     ALPHA_558
000045C2  0601 0030               7006mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045C6  6000 0006               7007mmm         BRA     DONE_558
000045CA  0601 0037               7008mmm ALPHA_558: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045CE  4E71                    7009mmm DONE_558: NOP
000045D0                          7010mmm         ENDM
000045D0  4E4F                    7011mm         TRAP    #15         ; EXECUTE OUTPUT
000045D2                          7012mm         
000045D2  3212                    7013mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045D4  E949                    7014mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000045D6  E049                    7015mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D8  E849                    7016mm         LSR.W   #4, D1      
000045DA                          7017mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045DA  0C01 0009               7018mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045DE  6E00 000A               7019mmm         BGT     ALPHA_559
000045E2  0601 0030               7020mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045E6  6000 0006               7021mmm         BRA     DONE_559
000045EA  0601 0037               7022mmm ALPHA_559: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045EE  4E71                    7023mmm DONE_559: NOP
000045F0                          7024mmm         ENDM
000045F0  4E4F                    7025mm         TRAP    #15         ; EXECUTE OUTPUT
000045F2                          7026mm         
000045F2  3212                    7027mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045F4  E149                    7028mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045F6  E049                    7029mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045F8  E849                    7030mm         LSR.W   #4, D1      
000045FA                          7031mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045FA  0C01 0009               7032mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045FE  6E00 000A               7033mmm         BGT     ALPHA_560
00004602  0601 0030               7034mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004606  6000 0006               7035mmm         BRA     DONE_560
0000460A  0601 0037               7036mmm ALPHA_560: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000460E  4E71                    7037mmm DONE_560: NOP
00004610                          7038mmm         ENDM
00004610  4E4F                    7039mm         TRAP    #15         ; EXECUTE OUTPUT
00004612                          7040mm         
00004612  3212                    7041mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004614  E149                    7042mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004616  E949                    7043mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004618  E049                    7044mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000461A  E849                    7045mm         LSR.W   #4, D1      
0000461C                          7046mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000461C  0C01 0009               7047mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004620  6E00 000A               7048mmm         BGT     ALPHA_561
00004624  0601 0030               7049mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004628  6000 0006               7050mmm         BRA     DONE_561
0000462C  0601 0037               7051mmm ALPHA_561: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004630  4E71                    7052mmm DONE_561: NOP
00004632                          7053mmm         ENDM
00004632  4E4F                    7054mm         TRAP    #15         ; EXECUTE OUTPUT       
00004634                          7055mm         ENDM 
00004634  3605                    7056m         MOVE.W  D5, D3
00004636                          7057m 
00004636                          7058m COMPLETE_498:  ; OPCODE HAS BEEN VERIFIED
00004636                          7059m         ENDM
00004636                          7060m         printComma
00004636  43F8 00C9               7061m         LEA     OCOMMA, A1     
0000463A  103C 000E               7062m         MOVE.B  #14,D0          
0000463E  4E4F                    7063m         TRAP    #15
00004640                          7064m         ENDM
00004640                          7065m         printDnDest     D3
00004640  3203                    7066m         MOVE.W  D3, D1      ; BITS 9 TO 11
00004642  E949                    7067m         LSL     #$04, D1
00004644  E049                    7068m         LSR     #$08, D1
00004646  EA49                    7069m         LSR     #$05, D1
00004648  43F8 00C1               7070m         LEA     ODN, A1     
0000464C  103C 000E               7071m         MOVE.B  #14,D0          
00004650  4E4F                    7072m         TRAP    #15
00004652  103C 0003               7073m         MOVE.B  #3,D0          
00004656  4E4F                    7074m         TRAP    #15
00004658                          7075m         ENDM
00004658  4E75                    7076          RTS                 ; Return from decodeDIVU subroutine
0000465A                          7077  
0000465A                          7078  
0000465A                          7079  ; ------------------------------------------------------------
0000465A                          7080  ; 8. "decodeLEA" subroutine
0000465A                          7081  ; AUTHOR
0000465A                          7082  ;
0000465A                          7083  ; TODO: DESCRIPTION
0000465A                          7084  ; ------------------------------------------------------------
0000465A                          7085  decodeLEA:
0000465A                          7086m         verifyOpcode    pLEA, (A2)
0000465A  43F8 014B               7087m         LEA     PLEA, A1      ; INPUT PATTERN STRING
0000465E  3612                    7088m         MOVE.W  (A2), D3      ; INPUT VALUE
00004660  123C 000F               7089m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004664                          7090m         
00004664                          7091m LOOP_564: 
00004664  0C11 0030               7092m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004668  6700 000E               7093m         BEQ     CHECKFOR0_564
0000466C  0C11 0031               7094m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004670  6700 0010               7095m         BEQ     CHECKFOR1_564
00004674  6000 0012               7096m         BRA     NEXT_564      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004678                          7097m         
00004678                          7098m CHECKFOR0_564: 
00004678  0303                    7099m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000467A  6600 24D4               7100m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000467E  6000 0008               7101m         BRA     NEXT_564
00004682                          7102m 
00004682                          7103m CHECKFOR1_564:
00004682  0303                    7104m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004684  6700 24CA               7105m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004688                          7106m 
00004688                          7107m NEXT_564: 
00004688  B23C 0000               7108m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000468C  6700 0008               7109m         BEQ     COMPLETE_564  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004690  5301                    7110m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004692  1819                    7111m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004694  60CE                    7112m         BRA     LOOP_564      ; BEGIN LOOP AGAIN
00004696                          7113m 
00004696                          7114m COMPLETE_564:  ; OPCODE HAS BEEN VERIFIED
00004696                          7115m         ENDM
00004696  43F8 0081               7116          LEA     oLEA, A1     
0000469A  103C 000E               7117          MOVE.B  #14,D0          
0000469E  4E4F                    7118          TRAP    #15
000046A0                          7119          
000046A0  43F8 00D2               7120          LEA     oBlank, A1     
000046A4  103C 000E               7121          MOVE.B  #14,D0          
000046A8  4E4F                    7122          TRAP    #15
000046AA                          7123          
000046AA                          7124m         prepareAdrMode  #$1, (A2)
000046AA  3C3C 0001               7125m         MOVE.W  #$1, D6      ; INPUT VALUE
000046AE  3212                    7126m         MOVE.W  (A2), D1
000046B0  BC3C 0001               7127m         CMP.B   #$01, D6
000046B4  6700 000C               7128m         BEQ     ADRSOURCE_565    
000046B8                          7129m ADRDEST_565:
000046B8  EF49                    7130m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000046BA  E049                    7131m         LSR     #$08, D1
000046BC  EA49                    7132m         LSR     #$05, D1
000046BE  6000 000A               7133m         BRA     COMPLETE_565 
000046C2                          7134m ADRSOURCE_565:                
000046C2  E149                    7135m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000046C4  E549                    7136m         LSL     #$02, D1
000046C6  E049                    7137m         LSR     #$08, D1
000046C8  EA49                    7138m         LSR     #$05, D1
000046CA                          7139m COMPLETE_565:  ; OPCODE HAS BEEN VERIFIED
000046CA                          7140m         ENDM        
000046CA                          7141m         decodeAdrMode   (A2), D1
000046CA  3612                    7142m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000046CC  3201                    7143m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000046CE                          7144m 
000046CE  B23C 0001               7145m         CMP.B   #$01, D1
000046D2  6700 0066               7146m         BEQ     ADRREGDIRECT_566    
000046D6  B23C 0002               7147m         CMP.B   #$02, D1
000046DA  6700 00A0               7148m         BEQ     ADRREGINDIRECT_566  
000046DE  B23C 0003               7149m         CMP.B   #$03, D1
000046E2  6700 0102               7150m         BEQ     ADRREGPOSTINC_566  
000046E6  B23C 0004               7151m         CMP.B   #$04, D1
000046EA  6700 0178               7152m         BEQ     ADRREGPREDEC_566
000046EE  B23C 0007               7153m         CMP.B   #$07, D1
000046F2  6700 01EE               7154m         BEQ     ADRABSOLUTE_566    
000046F6                          7155m         
000046F6                          7156m DATAREGDIRECT_566: 
000046F6  BC3C 0001               7157m         CMP.B   #$01, D6
000046FA  6700 001E               7158m         BEQ     DATAREGDIRECTSRC_566   
000046FE                          7159m DATAREGDIRECTDEST_566: 
000046FE                          7160mm         PRINTDNDEST D3 
000046FE  3203                    7161mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004700  E949                    7162mm         LSL     #$04, D1
00004702  E049                    7163mm         LSR     #$08, D1
00004704  EA49                    7164mm         LSR     #$05, D1
00004706  43F8 00C1               7165mm         LEA     ODN, A1     
0000470A  103C 000E               7166mm         MOVE.B  #14,D0          
0000470E  4E4F                    7167mm         TRAP    #15
00004710  103C 0003               7168mm         MOVE.B  #3,D0          
00004714  4E4F                    7169mm         TRAP    #15
00004716                          7170mm         ENDM
00004716  6000 056C               7171m         BRA     COMPLETE_566 
0000471A                          7172m DATAREGDIRECTSRC_566: 
0000471A                          7173mm         PRINTDNSRC D3 
0000471A  4281                    7174mm         CLR.L   D1
0000471C  3203                    7175mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000471E  E149                    7176mm         LSL     #$08, D1
00004720  EB49                    7177mm         LSL     #$05, D1
00004722  E049                    7178mm         LSR     #$08, D1
00004724  EA49                    7179mm         LSR     #$05, D1
00004726  43F8 00C1               7180mm         LEA     ODN, A1     
0000472A  103C 000E               7181mm         MOVE.B  #14,D0          
0000472E  4E4F                    7182mm         TRAP    #15
00004730  103C 0003               7183mm         MOVE.B  #3,D0          
00004734  4E4F                    7184mm         TRAP    #15
00004736                          7185mm         ENDM
00004736  6000 054C               7186m         BRA     COMPLETE_566   
0000473A                          7187m         
0000473A                          7188m ADRREGDIRECT_566: 
0000473A  BC3C 0001               7189m         CMP.B   #$01, D6
0000473E  6700 001E               7190m         BEQ     ADRREGDIRECTSRC_566   
00004742                          7191m ADRREGDIRECTDEST_566:
00004742                          7192mm         PRINTANDEST D3
00004742  3203                    7193mm         MOVE.W  D3, D1
00004744  E949                    7194mm         LSL     #$04, D1
00004746  E049                    7195mm         LSR     #$08, D1
00004748  EA49                    7196mm         LSR     #$05, D1
0000474A  43F8 00C3               7197mm         LEA     OAN, A1     
0000474E  103C 000E               7198mm         MOVE.B  #14,D0          
00004752  4E4F                    7199mm         TRAP    #15
00004754  103C 0003               7200mm         MOVE.B  #3,D0          
00004758  4E4F                    7201mm         TRAP    #15
0000475A                          7202mm         ENDM
0000475A  6000 0528               7203m         BRA     COMPLETE_566   
0000475E                          7204m ADRREGDIRECTSRC_566:
0000475E                          7205mm         PRINTANSRC D3
0000475E  3203                    7206mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004760  E149                    7207mm         LSL     #$08, D1
00004762  EB49                    7208mm         LSL     #$05, D1
00004764  E049                    7209mm         LSR     #$08, D1
00004766  EA49                    7210mm         LSR     #$05, D1
00004768  43F8 00C3               7211mm         LEA     OAN, A1     
0000476C  103C 000E               7212mm         MOVE.B  #14,D0          
00004770  4E4F                    7213mm         TRAP    #15
00004772  103C 0003               7214mm         MOVE.B  #3,D0          
00004776  4E4F                    7215mm         TRAP    #15
00004778                          7216mm         ENDM
00004778  6000 050A               7217m         BRA     COMPLETE_566   
0000477C                          7218m        
0000477C                          7219m ADRREGINDIRECT_566:   
0000477C  BC3C 0001               7220m         CMP.B   #$01, D6
00004780  6700 0032               7221m         BEQ     ADRREGINDIRECTSRC_566   
00004784                          7222m ADRREGINDIRECTDEST_566:
00004784                          7223mm         PRINTLB
00004784  43F8 00C5               7224mm         LEA     OLB, A1     
00004788  103C 000E               7225mm         MOVE.B  #14,D0          
0000478C  4E4F                    7226mm         TRAP    #15
0000478E                          7227mm         ENDM
0000478E                          7228mm         PRINTANDEST D3  
0000478E  3203                    7229mm         MOVE.W  D3, D1
00004790  E949                    7230mm         LSL     #$04, D1
00004792  E049                    7231mm         LSR     #$08, D1
00004794  EA49                    7232mm         LSR     #$05, D1
00004796  43F8 00C3               7233mm         LEA     OAN, A1     
0000479A  103C 000E               7234mm         MOVE.B  #14,D0          
0000479E  4E4F                    7235mm         TRAP    #15
000047A0  103C 0003               7236mm         MOVE.B  #3,D0          
000047A4  4E4F                    7237mm         TRAP    #15
000047A6                          7238mm         ENDM
000047A6                          7239mm         PRINTRB
000047A6  43F8 00C7               7240mm         LEA     ORB, A1     
000047AA  103C 000E               7241mm         MOVE.B  #14,D0          
000047AE  4E4F                    7242mm         TRAP    #15
000047B0                          7243mm         ENDM
000047B0  6000 04D2               7244m         BRA     COMPLETE_566     
000047B4                          7245m ADRREGINDIRECTSRC_566:   
000047B4                          7246mm         PRINTLB
000047B4  43F8 00C5               7247mm         LEA     OLB, A1     
000047B8  103C 000E               7248mm         MOVE.B  #14,D0          
000047BC  4E4F                    7249mm         TRAP    #15
000047BE                          7250mm         ENDM
000047BE                          7251mm         PRINTANSRC D3  
000047BE  3203                    7252mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047C0  E149                    7253mm         LSL     #$08, D1
000047C2  EB49                    7254mm         LSL     #$05, D1
000047C4  E049                    7255mm         LSR     #$08, D1
000047C6  EA49                    7256mm         LSR     #$05, D1
000047C8  43F8 00C3               7257mm         LEA     OAN, A1     
000047CC  103C 000E               7258mm         MOVE.B  #14,D0          
000047D0  4E4F                    7259mm         TRAP    #15
000047D2  103C 0003               7260mm         MOVE.B  #3,D0          
000047D6  4E4F                    7261mm         TRAP    #15
000047D8                          7262mm         ENDM
000047D8                          7263mm         PRINTRB
000047D8  43F8 00C7               7264mm         LEA     ORB, A1     
000047DC  103C 000E               7265mm         MOVE.B  #14,D0          
000047E0  4E4F                    7266mm         TRAP    #15
000047E2                          7267mm         ENDM
000047E2  6000 04A0               7268m         BRA     COMPLETE_566   
000047E6                          7269m         
000047E6                          7270m ADRREGPOSTINC_566:   
000047E6  BC3C 0001               7271m         CMP.B   #$01, D6
000047EA  6700 003C               7272m         BEQ     ADRREGPOSTINCSRC_566   
000047EE                          7273m ADRREGPOSTINCDEST_566: 
000047EE                          7274mm         PRINTLB
000047EE  43F8 00C5               7275mm         LEA     OLB, A1     
000047F2  103C 000E               7276mm         MOVE.B  #14,D0          
000047F6  4E4F                    7277mm         TRAP    #15
000047F8                          7278mm         ENDM
000047F8                          7279mm         PRINTANDEST D3  
000047F8  3203                    7280mm         MOVE.W  D3, D1
000047FA  E949                    7281mm         LSL     #$04, D1
000047FC  E049                    7282mm         LSR     #$08, D1
000047FE  EA49                    7283mm         LSR     #$05, D1
00004800  43F8 00C3               7284mm         LEA     OAN, A1     
00004804  103C 000E               7285mm         MOVE.B  #14,D0          
00004808  4E4F                    7286mm         TRAP    #15
0000480A  103C 0003               7287mm         MOVE.B  #3,D0          
0000480E  4E4F                    7288mm         TRAP    #15
00004810                          7289mm         ENDM
00004810                          7290mm         PRINTRB
00004810  43F8 00C7               7291mm         LEA     ORB, A1     
00004814  103C 000E               7292mm         MOVE.B  #14,D0          
00004818  4E4F                    7293mm         TRAP    #15
0000481A                          7294mm         ENDM
0000481A                          7295mm         PRINTPI
0000481A  43F8 00CE               7296mm         LEA     OPSTINC, A1     
0000481E  103C 000E               7297mm         MOVE.B  #14,D0          
00004822  4E4F                    7298mm         TRAP    #15
00004824                          7299mm         ENDM
00004824  6000 045E               7300m         BRA     COMPLETE_566  
00004828                          7301m ADRREGPOSTINCSRC_566:           
00004828                          7302mm         PRINTLB
00004828  43F8 00C5               7303mm         LEA     OLB, A1     
0000482C  103C 000E               7304mm         MOVE.B  #14,D0          
00004830  4E4F                    7305mm         TRAP    #15
00004832                          7306mm         ENDM
00004832                          7307mm         PRINTANSRC D3  
00004832  3203                    7308mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004834  E149                    7309mm         LSL     #$08, D1
00004836  EB49                    7310mm         LSL     #$05, D1
00004838  E049                    7311mm         LSR     #$08, D1
0000483A  EA49                    7312mm         LSR     #$05, D1
0000483C  43F8 00C3               7313mm         LEA     OAN, A1     
00004840  103C 000E               7314mm         MOVE.B  #14,D0          
00004844  4E4F                    7315mm         TRAP    #15
00004846  103C 0003               7316mm         MOVE.B  #3,D0          
0000484A  4E4F                    7317mm         TRAP    #15
0000484C                          7318mm         ENDM
0000484C                          7319mm         PRINTRB
0000484C  43F8 00C7               7320mm         LEA     ORB, A1     
00004850  103C 000E               7321mm         MOVE.B  #14,D0          
00004854  4E4F                    7322mm         TRAP    #15
00004856                          7323mm         ENDM
00004856                          7324mm         PRINTPI
00004856  43F8 00CE               7325mm         LEA     OPSTINC, A1     
0000485A  103C 000E               7326mm         MOVE.B  #14,D0          
0000485E  4E4F                    7327mm         TRAP    #15
00004860                          7328mm         ENDM
00004860  6000 0422               7329m         BRA     COMPLETE_566  
00004864                          7330m         
00004864                          7331m ADRREGPREDEC_566: 
00004864  BC3C 0001               7332m         CMP.B   #$01, D6
00004868  6700 003C               7333m         BEQ     ADRREGPREDECSRC_566   
0000486C                          7334m ADRREGPREDECDEST_566:
0000486C                          7335mm         PRINTPD  
0000486C  43F8 00CC               7336mm         LEA     OPREDEC, A1     
00004870  103C 000E               7337mm         MOVE.B  #14,D0          
00004874  4E4F                    7338mm         TRAP    #15
00004876                          7339mm         ENDM
00004876                          7340mm         PRINTLB
00004876  43F8 00C5               7341mm         LEA     OLB, A1     
0000487A  103C 000E               7342mm         MOVE.B  #14,D0          
0000487E  4E4F                    7343mm         TRAP    #15
00004880                          7344mm         ENDM
00004880                          7345mm         PRINTANDEST D3  
00004880  3203                    7346mm         MOVE.W  D3, D1
00004882  E949                    7347mm         LSL     #$04, D1
00004884  E049                    7348mm         LSR     #$08, D1
00004886  EA49                    7349mm         LSR     #$05, D1
00004888  43F8 00C3               7350mm         LEA     OAN, A1     
0000488C  103C 000E               7351mm         MOVE.B  #14,D0          
00004890  4E4F                    7352mm         TRAP    #15
00004892  103C 0003               7353mm         MOVE.B  #3,D0          
00004896  4E4F                    7354mm         TRAP    #15
00004898                          7355mm         ENDM
00004898                          7356mm         PRINTRB
00004898  43F8 00C7               7357mm         LEA     ORB, A1     
0000489C  103C 000E               7358mm         MOVE.B  #14,D0          
000048A0  4E4F                    7359mm         TRAP    #15
000048A2                          7360mm         ENDM
000048A2  6000 03E0               7361m         BRA     COMPLETE_566   
000048A6                          7362m ADRREGPREDECSRC_566: 
000048A6                          7363mm         PRINTPD  
000048A6  43F8 00CC               7364mm         LEA     OPREDEC, A1     
000048AA  103C 000E               7365mm         MOVE.B  #14,D0          
000048AE  4E4F                    7366mm         TRAP    #15
000048B0                          7367mm         ENDM
000048B0                          7368mm         PRINTLB
000048B0  43F8 00C5               7369mm         LEA     OLB, A1     
000048B4  103C 000E               7370mm         MOVE.B  #14,D0          
000048B8  4E4F                    7371mm         TRAP    #15
000048BA                          7372mm         ENDM
000048BA                          7373mm         PRINTANSRC D3  
000048BA  3203                    7374mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000048BC  E149                    7375mm         LSL     #$08, D1
000048BE  EB49                    7376mm         LSL     #$05, D1
000048C0  E049                    7377mm         LSR     #$08, D1
000048C2  EA49                    7378mm         LSR     #$05, D1
000048C4  43F8 00C3               7379mm         LEA     OAN, A1     
000048C8  103C 000E               7380mm         MOVE.B  #14,D0          
000048CC  4E4F                    7381mm         TRAP    #15
000048CE  103C 0003               7382mm         MOVE.B  #3,D0          
000048D2  4E4F                    7383mm         TRAP    #15
000048D4                          7384mm         ENDM
000048D4                          7385mm         PRINTRB
000048D4  43F8 00C7               7386mm         LEA     ORB, A1     
000048D8  103C 000E               7387mm         MOVE.B  #14,D0          
000048DC  4E4F                    7388mm         TRAP    #15
000048DE                          7389mm         ENDM
000048DE  6000 03A4               7390m         BRA     COMPLETE_566
000048E2                          7391m        
000048E2                          7392m ADRABSOLUTE_566:
000048E2  BC3C 0001               7393m         CMP.B   #$01, D6
000048E6  6600 0018               7394m         BNE     ADRABSOLUTEDST_566 
000048EA                          7395m         
000048EA  3A03                    7396m         MOVE.W  D3, D5
000048EC  0803 0002               7397m         BTST    #2, D3
000048F0  6600 0024               7398m         BNE     ADRIMMEDIATE_566
000048F4  0803 0000               7399m         BTST    #0, D3
000048F8  6600 027A               7400m         BNE     ADRABSOLUTEL_566
000048FC  6000 01DA               7401m         BRA     ADRABSOLUTEW_566
00004900                          7402m ADRABSOLUTEDST_566:
00004900  3A03                    7403m         MOVE.W  D3, D5
00004902  0803 000B               7404m         BTST    #$B, D3
00004906  6600 000E               7405m         BNE     ADRIMMEDIATE_566
0000490A  0803 0009               7406m         BTST    #$09, D3
0000490E  6600 0264               7407m         BNE     ADRABSOLUTEL_566
00004912  6000 01C4               7408m         BRA     ADRABSOLUTEW_566
00004916                          7409m ADRIMMEDIATE_566:
00004916  BE3C 0001               7410m         CMP.B   #1, D7
0000491A  6700 009E               7411m         BEQ     ADRIMMEDIATEL_566
0000491E                          7412m ADRIMMEDIATEW_566:
0000491E  361A                    7413m         MOVE.W  (A2)+, D3
00004920                          7414mm         PRINTHASH
00004920  103C 0006               7415mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004924  323C 0023               7416mm         MOVE.W  #35, D1     ; AN = SIGN
00004928  4E4F                    7417mm         TRAP    #15         ; OUTPUT = SIGN
0000492A                          7418mm         ENDM
0000492A                          7419mm         PRINTSIGN
0000492A  103C 0006               7420mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000492E  323C 0024               7421mm         MOVE.W  #36, D1     ; AN = SIGN
00004932  4E4F                    7422mm         TRAP    #15         ; OUTPUT = SIGN
00004934                          7423mm         ENDM
00004934                          7424mm         ADROUT
00004934  3212                    7425mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004936  E049                    7426mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004938  E849                    7427mm         LSR.W   #4, D1      
0000493A                          7428mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000493A  0C01 0009               7429mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000493E  6E00 000A               7430mmm         BGT     ALPHA_596
00004942  0601 0030               7431mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004946  6000 0006               7432mmm         BRA     DONE_596
0000494A  0601 0037               7433mmm ALPHA_596: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000494E  4E71                    7434mmm DONE_596: NOP
00004950                          7435mmm         ENDM
00004950  4E4F                    7436mm         TRAP    #15         ; EXECUTE OUTPUT
00004952                          7437mm         
00004952  3212                    7438mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004954  E949                    7439mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004956  E049                    7440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004958  E849                    7441mm         LSR.W   #4, D1      
0000495A                          7442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000495A  0C01 0009               7443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000495E  6E00 000A               7444mmm         BGT     ALPHA_597
00004962  0601 0030               7445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004966  6000 0006               7446mmm         BRA     DONE_597
0000496A  0601 0037               7447mmm ALPHA_597: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000496E  4E71                    7448mmm DONE_597: NOP
00004970                          7449mmm         ENDM
00004970  4E4F                    7450mm         TRAP    #15         ; EXECUTE OUTPUT
00004972                          7451mm         
00004972  3212                    7452mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004974  E149                    7453mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004976  E049                    7454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004978  E849                    7455mm         LSR.W   #4, D1      
0000497A                          7456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000497A  0C01 0009               7457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000497E  6E00 000A               7458mmm         BGT     ALPHA_598
00004982  0601 0030               7459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004986  6000 0006               7460mmm         BRA     DONE_598
0000498A  0601 0037               7461mmm ALPHA_598: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000498E  4E71                    7462mmm DONE_598: NOP
00004990                          7463mmm         ENDM
00004990  4E4F                    7464mm         TRAP    #15         ; EXECUTE OUTPUT
00004992                          7465mm         
00004992  3212                    7466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004994  E149                    7467mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004996  E949                    7468mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004998  E049                    7469mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000499A  E849                    7470mm         LSR.W   #4, D1      
0000499C                          7471mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000499C  0C01 0009               7472mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049A0  6E00 000A               7473mmm         BGT     ALPHA_599
000049A4  0601 0030               7474mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049A8  6000 0006               7475mmm         BRA     DONE_599
000049AC  0601 0037               7476mmm ALPHA_599: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049B0  4E71                    7477mmm DONE_599: NOP
000049B2                          7478mmm         ENDM
000049B2  4E4F                    7479mm         TRAP    #15         ; EXECUTE OUTPUT       
000049B4                          7480mm         ENDM 
000049B4  3605                    7481m         MOVE.W  D5, D3
000049B6  6000 02CC               7482m         BRA     COMPLETE_566
000049BA                          7483m ADRIMMEDIATEL_566:
000049BA  361A                    7484m         MOVE.W  (A2)+, D3
000049BC                          7485mm         PRINTHASH
000049BC  103C 0006               7486mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049C0  323C 0023               7487mm         MOVE.W  #35, D1     ; AN = SIGN
000049C4  4E4F                    7488mm         TRAP    #15         ; OUTPUT = SIGN
000049C6                          7489mm         ENDM
000049C6                          7490mm         PRINTSIGN
000049C6  103C 0006               7491mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049CA  323C 0024               7492mm         MOVE.W  #36, D1     ; AN = SIGN
000049CE  4E4F                    7493mm         TRAP    #15         ; OUTPUT = SIGN
000049D0                          7494mm         ENDM
000049D0                          7495mm         ADROUT 
000049D0  3212                    7496mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049D2  E049                    7497mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049D4  E849                    7498mm         LSR.W   #4, D1      
000049D6                          7499mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049D6  0C01 0009               7500mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049DA  6E00 000A               7501mmm         BGT     ALPHA_603
000049DE  0601 0030               7502mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049E2  6000 0006               7503mmm         BRA     DONE_603
000049E6  0601 0037               7504mmm ALPHA_603: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049EA  4E71                    7505mmm DONE_603: NOP
000049EC                          7506mmm         ENDM
000049EC  4E4F                    7507mm         TRAP    #15         ; EXECUTE OUTPUT
000049EE                          7508mm         
000049EE  3212                    7509mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049F0  E949                    7510mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000049F2  E049                    7511mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049F4  E849                    7512mm         LSR.W   #4, D1      
000049F6                          7513mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F6  0C01 0009               7514mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049FA  6E00 000A               7515mmm         BGT     ALPHA_604
000049FE  0601 0030               7516mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A02  6000 0006               7517mmm         BRA     DONE_604
00004A06  0601 0037               7518mmm ALPHA_604: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A0A  4E71                    7519mmm DONE_604: NOP
00004A0C                          7520mmm         ENDM
00004A0C  4E4F                    7521mm         TRAP    #15         ; EXECUTE OUTPUT
00004A0E                          7522mm         
00004A0E  3212                    7523mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A10  E149                    7524mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A12  E049                    7525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A14  E849                    7526mm         LSR.W   #4, D1      
00004A16                          7527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A16  0C01 0009               7528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A1A  6E00 000A               7529mmm         BGT     ALPHA_605
00004A1E  0601 0030               7530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A22  6000 0006               7531mmm         BRA     DONE_605
00004A26  0601 0037               7532mmm ALPHA_605: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A2A  4E71                    7533mmm DONE_605: NOP
00004A2C                          7534mmm         ENDM
00004A2C  4E4F                    7535mm         TRAP    #15         ; EXECUTE OUTPUT
00004A2E                          7536mm         
00004A2E  3212                    7537mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A30  E149                    7538mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A32  E949                    7539mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A34  E049                    7540mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A36  E849                    7541mm         LSR.W   #4, D1      
00004A38                          7542mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A38  0C01 0009               7543mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A3C  6E00 000A               7544mmm         BGT     ALPHA_606
00004A40  0601 0030               7545mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A44  6000 0006               7546mmm         BRA     DONE_606
00004A48  0601 0037               7547mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A4C  4E71                    7548mmm DONE_606: NOP
00004A4E                          7549mmm         ENDM
00004A4E  4E4F                    7550mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A50                          7551mm         ENDM 
00004A50  361A                    7552m         MOVE.W  (A2)+, D3
00004A52                          7553mm         ADROUT
00004A52  3212                    7554mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A54  E049                    7555mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A56  E849                    7556mm         LSR.W   #4, D1      
00004A58                          7557mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A58  0C01 0009               7558mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A5C  6E00 000A               7559mmm         BGT     ALPHA_608
00004A60  0601 0030               7560mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A64  6000 0006               7561mmm         BRA     DONE_608
00004A68  0601 0037               7562mmm ALPHA_608: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A6C  4E71                    7563mmm DONE_608: NOP
00004A6E                          7564mmm         ENDM
00004A6E  4E4F                    7565mm         TRAP    #15         ; EXECUTE OUTPUT
00004A70                          7566mm         
00004A70  3212                    7567mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A72  E949                    7568mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A74  E049                    7569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A76  E849                    7570mm         LSR.W   #4, D1      
00004A78                          7571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A78  0C01 0009               7572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A7C  6E00 000A               7573mmm         BGT     ALPHA_609
00004A80  0601 0030               7574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A84  6000 0006               7575mmm         BRA     DONE_609
00004A88  0601 0037               7576mmm ALPHA_609: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A8C  4E71                    7577mmm DONE_609: NOP
00004A8E                          7578mmm         ENDM
00004A8E  4E4F                    7579mm         TRAP    #15         ; EXECUTE OUTPUT
00004A90                          7580mm         
00004A90  3212                    7581mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A92  E149                    7582mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A94  E049                    7583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A96  E849                    7584mm         LSR.W   #4, D1      
00004A98                          7585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A98  0C01 0009               7586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A9C  6E00 000A               7587mmm         BGT     ALPHA_610
00004AA0  0601 0030               7588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AA4  6000 0006               7589mmm         BRA     DONE_610
00004AA8  0601 0037               7590mmm ALPHA_610: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AAC  4E71                    7591mmm DONE_610: NOP
00004AAE                          7592mmm         ENDM
00004AAE  4E4F                    7593mm         TRAP    #15         ; EXECUTE OUTPUT
00004AB0                          7594mm         
00004AB0  3212                    7595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AB2  E149                    7596mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AB4  E949                    7597mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004AB6  E049                    7598mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AB8  E849                    7599mm         LSR.W   #4, D1      
00004ABA                          7600mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004ABA  0C01 0009               7601mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004ABE  6E00 000A               7602mmm         BGT     ALPHA_611
00004AC2  0601 0030               7603mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AC6  6000 0006               7604mmm         BRA     DONE_611
00004ACA  0601 0037               7605mmm ALPHA_611: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004ACE  4E71                    7606mmm DONE_611: NOP
00004AD0                          7607mmm         ENDM
00004AD0  4E4F                    7608mm         TRAP    #15         ; EXECUTE OUTPUT       
00004AD2                          7609mm         ENDM 
00004AD2  3605                    7610m         MOVE.W  D5, D3
00004AD4  6000 01AE               7611m         BRA     COMPLETE_566 
00004AD8                          7612m ADRABSOLUTEW_566:     
00004AD8  361A                    7613m         MOVE.W  (A2)+, D3
00004ADA                          7614mm         PRINTSIGN
00004ADA  103C 0006               7615mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004ADE  323C 0024               7616mm         MOVE.W  #36, D1     ; AN = SIGN
00004AE2  4E4F                    7617mm         TRAP    #15         ; OUTPUT = SIGN
00004AE4                          7618mm         ENDM
00004AE4                          7619mm         PRINTSIGN
00004AE4  103C 0006               7620mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004AE8  323C 0024               7621mm         MOVE.W  #36, D1     ; AN = SIGN
00004AEC  4E4F                    7622mm         TRAP    #15         ; OUTPUT = SIGN
00004AEE                          7623mm         ENDM
00004AEE                          7624mm         ADROUT
00004AEE  3212                    7625mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AF0  E049                    7626mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AF2  E849                    7627mm         LSR.W   #4, D1      
00004AF4                          7628mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AF4  0C01 0009               7629mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AF8  6E00 000A               7630mmm         BGT     ALPHA_615
00004AFC  0601 0030               7631mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B00  6000 0006               7632mmm         BRA     DONE_615
00004B04  0601 0037               7633mmm ALPHA_615: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B08  4E71                    7634mmm DONE_615: NOP
00004B0A                          7635mmm         ENDM
00004B0A  4E4F                    7636mm         TRAP    #15         ; EXECUTE OUTPUT
00004B0C                          7637mm         
00004B0C  3212                    7638mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B0E  E949                    7639mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B10  E049                    7640mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B12  E849                    7641mm         LSR.W   #4, D1      
00004B14                          7642mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B14  0C01 0009               7643mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B18  6E00 000A               7644mmm         BGT     ALPHA_616
00004B1C  0601 0030               7645mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B20  6000 0006               7646mmm         BRA     DONE_616
00004B24  0601 0037               7647mmm ALPHA_616: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B28  4E71                    7648mmm DONE_616: NOP
00004B2A                          7649mmm         ENDM
00004B2A  4E4F                    7650mm         TRAP    #15         ; EXECUTE OUTPUT
00004B2C                          7651mm         
00004B2C  3212                    7652mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B2E  E149                    7653mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B30  E049                    7654mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B32  E849                    7655mm         LSR.W   #4, D1      
00004B34                          7656mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B34  0C01 0009               7657mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B38  6E00 000A               7658mmm         BGT     ALPHA_617
00004B3C  0601 0030               7659mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B40  6000 0006               7660mmm         BRA     DONE_617
00004B44  0601 0037               7661mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B48  4E71                    7662mmm DONE_617: NOP
00004B4A                          7663mmm         ENDM
00004B4A  4E4F                    7664mm         TRAP    #15         ; EXECUTE OUTPUT
00004B4C                          7665mm         
00004B4C  3212                    7666mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B4E  E149                    7667mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B50  E949                    7668mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B52  E049                    7669mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B54  E849                    7670mm         LSR.W   #4, D1      
00004B56                          7671mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B56  0C01 0009               7672mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B5A  6E00 000A               7673mmm         BGT     ALPHA_618
00004B5E  0601 0030               7674mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B62  6000 0006               7675mmm         BRA     DONE_618
00004B66  0601 0037               7676mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B6A  4E71                    7677mmm DONE_618: NOP
00004B6C                          7678mmm         ENDM
00004B6C  4E4F                    7679mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B6E                          7680mm         ENDM 
00004B6E  3605                    7681m         MOVE.W  D5, D3
00004B70  6000 0112               7682m         BRA     COMPLETE_566  
00004B74                          7683m ADRABSOLUTEL_566:  
00004B74  361A                    7684m         MOVE.W  (A2)+, D3
00004B76                          7685mm         PRINTSIGN
00004B76  103C 0006               7686mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B7A  323C 0024               7687mm         MOVE.W  #36, D1     ; AN = SIGN
00004B7E  4E4F                    7688mm         TRAP    #15         ; OUTPUT = SIGN
00004B80                          7689mm         ENDM
00004B80                          7690mm         ADROUT 
00004B80  3212                    7691mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B82  E049                    7692mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B84  E849                    7693mm         LSR.W   #4, D1      
00004B86                          7694mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B86  0C01 0009               7695mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B8A  6E00 000A               7696mmm         BGT     ALPHA_621
00004B8E  0601 0030               7697mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B92  6000 0006               7698mmm         BRA     DONE_621
00004B96  0601 0037               7699mmm ALPHA_621: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B9A  4E71                    7700mmm DONE_621: NOP
00004B9C                          7701mmm         ENDM
00004B9C  4E4F                    7702mm         TRAP    #15         ; EXECUTE OUTPUT
00004B9E                          7703mm         
00004B9E  3212                    7704mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BA0  E949                    7705mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BA2  E049                    7706mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BA4  E849                    7707mm         LSR.W   #4, D1      
00004BA6                          7708mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BA6  0C01 0009               7709mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BAA  6E00 000A               7710mmm         BGT     ALPHA_622
00004BAE  0601 0030               7711mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BB2  6000 0006               7712mmm         BRA     DONE_622
00004BB6  0601 0037               7713mmm ALPHA_622: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BBA  4E71                    7714mmm DONE_622: NOP
00004BBC                          7715mmm         ENDM
00004BBC  4E4F                    7716mm         TRAP    #15         ; EXECUTE OUTPUT
00004BBE                          7717mm         
00004BBE  3212                    7718mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BC0  E149                    7719mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BC2  E049                    7720mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BC4  E849                    7721mm         LSR.W   #4, D1      
00004BC6                          7722mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BC6  0C01 0009               7723mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BCA  6E00 000A               7724mmm         BGT     ALPHA_623
00004BCE  0601 0030               7725mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BD2  6000 0006               7726mmm         BRA     DONE_623
00004BD6  0601 0037               7727mmm ALPHA_623: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BDA  4E71                    7728mmm DONE_623: NOP
00004BDC                          7729mmm         ENDM
00004BDC  4E4F                    7730mm         TRAP    #15         ; EXECUTE OUTPUT
00004BDE                          7731mm         
00004BDE  3212                    7732mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BE0  E149                    7733mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BE2  E949                    7734mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004BE4  E049                    7735mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BE6  E849                    7736mm         LSR.W   #4, D1      
00004BE8                          7737mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BE8  0C01 0009               7738mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BEC  6E00 000A               7739mmm         BGT     ALPHA_624
00004BF0  0601 0030               7740mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BF4  6000 0006               7741mmm         BRA     DONE_624
00004BF8  0601 0037               7742mmm ALPHA_624: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BFC  4E71                    7743mmm DONE_624: NOP
00004BFE                          7744mmm         ENDM
00004BFE  4E4F                    7745mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C00                          7746mm         ENDM 
00004C00  361A                    7747m         MOVE.W  (A2)+, D3
00004C02                          7748mm         ADROUT
00004C02  3212                    7749mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C04  E049                    7750mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C06  E849                    7751mm         LSR.W   #4, D1      
00004C08                          7752mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C08  0C01 0009               7753mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C0C  6E00 000A               7754mmm         BGT     ALPHA_626
00004C10  0601 0030               7755mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C14  6000 0006               7756mmm         BRA     DONE_626
00004C18  0601 0037               7757mmm ALPHA_626: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C1C  4E71                    7758mmm DONE_626: NOP
00004C1E                          7759mmm         ENDM
00004C1E  4E4F                    7760mm         TRAP    #15         ; EXECUTE OUTPUT
00004C20                          7761mm         
00004C20  3212                    7762mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C22  E949                    7763mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004C24  E049                    7764mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C26  E849                    7765mm         LSR.W   #4, D1      
00004C28                          7766mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C28  0C01 0009               7767mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C2C  6E00 000A               7768mmm         BGT     ALPHA_627
00004C30  0601 0030               7769mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C34  6000 0006               7770mmm         BRA     DONE_627
00004C38  0601 0037               7771mmm ALPHA_627: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C3C  4E71                    7772mmm DONE_627: NOP
00004C3E                          7773mmm         ENDM
00004C3E  4E4F                    7774mm         TRAP    #15         ; EXECUTE OUTPUT
00004C40                          7775mm         
00004C40  3212                    7776mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C42  E149                    7777mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C44  E049                    7778mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C46  E849                    7779mm         LSR.W   #4, D1      
00004C48                          7780mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C48  0C01 0009               7781mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C4C  6E00 000A               7782mmm         BGT     ALPHA_628
00004C50  0601 0030               7783mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C54  6000 0006               7784mmm         BRA     DONE_628
00004C58  0601 0037               7785mmm ALPHA_628: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C5C  4E71                    7786mmm DONE_628: NOP
00004C5E                          7787mmm         ENDM
00004C5E  4E4F                    7788mm         TRAP    #15         ; EXECUTE OUTPUT
00004C60                          7789mm         
00004C60  3212                    7790mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C62  E149                    7791mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C64  E949                    7792mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C66  E049                    7793mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C68  E849                    7794mm         LSR.W   #4, D1      
00004C6A                          7795mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C6A  0C01 0009               7796mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C6E  6E00 000A               7797mmm         BGT     ALPHA_629
00004C72  0601 0030               7798mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C76  6000 0006               7799mmm         BRA     DONE_629
00004C7A  0601 0037               7800mmm ALPHA_629: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C7E  4E71                    7801mmm DONE_629: NOP
00004C80                          7802mmm         ENDM
00004C80  4E4F                    7803mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C82                          7804mm         ENDM 
00004C82  3605                    7805m         MOVE.W  D5, D3
00004C84                          7806m 
00004C84                          7807m COMPLETE_566:  ; OPCODE HAS BEEN VERIFIED
00004C84                          7808m         ENDM
00004C84                          7809m         printComma
00004C84  43F8 00C9               7810m         LEA     OCOMMA, A1     
00004C88  103C 000E               7811m         MOVE.B  #14,D0          
00004C8C  4E4F                    7812m         TRAP    #15
00004C8E                          7813m         ENDM
00004C8E                          7814m         printAnDest     (A2)
00004C8E  3212                    7815m         MOVE.W  (A2), D1
00004C90  E949                    7816m         LSL     #$04, D1
00004C92  E049                    7817m         LSR     #$08, D1
00004C94  EA49                    7818m         LSR     #$05, D1
00004C96  43F8 00C3               7819m         LEA     OAN, A1     
00004C9A  103C 000E               7820m         MOVE.B  #14,D0          
00004C9E  4E4F                    7821m         TRAP    #15
00004CA0  103C 0003               7822m         MOVE.B  #3,D0          
00004CA4  4E4F                    7823m         TRAP    #15
00004CA6                          7824m         ENDM
00004CA6  4E75                    7825          RTS                 ; Return from decodeLEA subroutine
00004CA8                          7826  
00004CA8                          7827  
00004CA8                          7828  ; ------------------------------------------------------------
00004CA8                          7829  ; 9. "decodeAND" subroutine
00004CA8                          7830  ; AUTHOR
00004CA8                          7831  ;
00004CA8                          7832  ; TODO: DESCRIPTION
00004CA8                          7833  ; ------------------------------------------------------------
00004CA8                          7834  decodeAND:
00004CA8                          7835m         verifyOpcode    pAND, (A2)
00004CA8  43F8 015C               7836m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004CAC  3612                    7837m         MOVE.W  (A2), D3      ; INPUT VALUE
00004CAE  123C 000F               7838m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004CB2                          7839m         
00004CB2                          7840m LOOP_632: 
00004CB2  0C11 0030               7841m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004CB6  6700 000E               7842m         BEQ     CHECKFOR0_632
00004CBA  0C11 0031               7843m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004CBE  6700 0010               7844m         BEQ     CHECKFOR1_632
00004CC2  6000 0012               7845m         BRA     NEXT_632      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004CC6                          7846m         
00004CC6                          7847m CHECKFOR0_632: 
00004CC6  0303                    7848m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004CC8  6600 1E86               7849m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004CCC  6000 0008               7850m         BRA     NEXT_632
00004CD0                          7851m 
00004CD0                          7852m CHECKFOR1_632:
00004CD0  0303                    7853m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004CD2  6700 1E7C               7854m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004CD6                          7855m 
00004CD6                          7856m NEXT_632: 
00004CD6  B23C 0000               7857m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004CDA  6700 0008               7858m         BEQ     COMPLETE_632  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004CDE  5301                    7859m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004CE0  1819                    7860m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004CE2  60CE                    7861m         BRA     LOOP_632      ; BEGIN LOOP AGAIN
00004CE4                          7862m 
00004CE4                          7863m COMPLETE_632:  ; OPCODE HAS BEEN VERIFIED
00004CE4                          7864m         ENDM
00004CE4  43F8 0085               7865          LEA     oAND, A1     
00004CE8  103C 000E               7866          MOVE.B  #14,D0          
00004CEC  4E4F                    7867          TRAP    #15
00004CEE                          7868m         printOpMode     (A2)
00004CEE  3612                    7869m         MOVE.W  (A2), D3      
00004CF0  123C 0008               7870m         MOVE.B  #8, D1    
00004CF4  4246                    7871m         CLR     D6
00004CF6                          7872m CHECKFORDESTDN_633: 
00004CF6  0303                    7873m         BTST    D1, D3      
00004CF8  6600 0048               7874m         BNE     CHECKFORSRCDN_633
00004CFC  4EB9 00004DCC           7875m         JSR     NEXT_633
00004D02  1C3C 0001               7876m         MOVE.B  #$1, D6
00004D06  0303                    7877m         BTST    D1, D3      
00004D08  6700 0010               7878m         BEQ     DESTDNW_633
00004D0C                          7879m DESTDNL_633:        
00004D0C  43F8 00BD               7880m         LEA     OLSIZE, A1     
00004D10  103C 000E               7881m         MOVE.B  #14,D0          
00004D14  4E4F                    7882m         TRAP    #15
00004D16  6000 00B8               7883m         BRA     COMPLETE_633 
00004D1A                          7884m DESTDNW_633: 
00004D1A  4EB9 00004DCC           7885m         JSR     NEXT_633
00004D20  0303                    7886m         BTST    D1, D3      
00004D22  6700 0010               7887m         BEQ     DESTDNB_633
00004D26  43F8 00B9               7888m         LEA     OWSIZE, A1     
00004D2A  103C 000E               7889m         MOVE.B  #14,D0          
00004D2E  4E4F                    7890m         TRAP    #15
00004D30  6000 009E               7891m         BRA     COMPLETE_633 
00004D34                          7892m DESTDNB_633: 
00004D34  43F8 00B5               7893m         LEA     OBSIZE, A1     
00004D38  103C 000E               7894m         MOVE.B  #14,D0          
00004D3C  4E4F                    7895m         TRAP    #15
00004D3E  6000 0090               7896m         BRA     COMPLETE_633 
00004D42                          7897m CHECKFORSRCDN_633: 
00004D42  4EB9 00004DCC           7898m         JSR     NEXT_633
00004D48  0303                    7899m         BTST    D1, D3      
00004D4A  6700 0028               7900m         BEQ     SRCDNW_633
00004D4E                          7901m SRCDNL_633:        
00004D4E  43F8 00BD               7902m         LEA     OLSIZE, A1     
00004D52  103C 000E               7903m         MOVE.B  #14,D0          
00004D56  4E4F                    7904m         TRAP    #15
00004D58                          7905mm         PRINTDNDEST D3
00004D58  3203                    7906mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D5A  E949                    7907mm         LSL     #$04, D1
00004D5C  E049                    7908mm         LSR     #$08, D1
00004D5E  EA49                    7909mm         LSR     #$05, D1
00004D60  43F8 00C1               7910mm         LEA     ODN, A1     
00004D64  103C 000E               7911mm         MOVE.B  #14,D0          
00004D68  4E4F                    7912mm         TRAP    #15
00004D6A  103C 0003               7913mm         MOVE.B  #3,D0          
00004D6E  4E4F                    7914mm         TRAP    #15
00004D70                          7915mm         ENDM
00004D70  6000 005E               7916m         BRA     COMPLETE_633 
00004D74                          7917m SRCDNW_633:
00004D74  4EB9 00004DCC           7918m         JSR     NEXT_633
00004D7A  0303                    7919m         BTST    D1, D3     
00004D7C  6700 0028               7920m         BEQ     SRCDNB_633
00004D80  43F8 00B9               7921m         LEA     OWSIZE, A1     
00004D84  103C 000E               7922m         MOVE.B  #14,D0          
00004D88  4E4F                    7923m         TRAP    #15
00004D8A                          7924mm         PRINTDNDEST D3
00004D8A  3203                    7925mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D8C  E949                    7926mm         LSL     #$04, D1
00004D8E  E049                    7927mm         LSR     #$08, D1
00004D90  EA49                    7928mm         LSR     #$05, D1
00004D92  43F8 00C1               7929mm         LEA     ODN, A1     
00004D96  103C 000E               7930mm         MOVE.B  #14,D0          
00004D9A  4E4F                    7931mm         TRAP    #15
00004D9C  103C 0003               7932mm         MOVE.B  #3,D0          
00004DA0  4E4F                    7933mm         TRAP    #15
00004DA2                          7934mm         ENDM
00004DA2  6000 002C               7935m         BRA     COMPLETE_633 
00004DA6                          7936m SRCDNB_633: 
00004DA6  43F8 00B5               7937m         LEA     OBSIZE, A1     
00004DAA  103C 000E               7938m         MOVE.B  #14,D0          
00004DAE  4E4F                    7939m         TRAP    #15
00004DB0                          7940mm         PRINTDNDEST D3
00004DB0  3203                    7941mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004DB2  E949                    7942mm         LSL     #$04, D1
00004DB4  E049                    7943mm         LSR     #$08, D1
00004DB6  EA49                    7944mm         LSR     #$05, D1
00004DB8  43F8 00C1               7945mm         LEA     ODN, A1     
00004DBC  103C 000E               7946mm         MOVE.B  #14,D0          
00004DC0  4E4F                    7947mm         TRAP    #15
00004DC2  103C 0003               7948mm         MOVE.B  #3,D0          
00004DC6  4E4F                    7949mm         TRAP    #15
00004DC8                          7950mm         ENDM
00004DC8  6000 0006               7951m         BRA     COMPLETE_633 
00004DCC                          7952m 
00004DCC                          7953m NEXT_633:
00004DCC  5301                    7954m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004DCE  4E75                    7955m         RTS                
00004DD0                          7956m 
00004DD0                          7957m COMPLETE_633:  ; OPCODE HAS BEEN VERIFIED
00004DD0                          7958m         ENDM
00004DD0  BC3C 0001               7959          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004DD4  6700 05EA               7960          BEQ     decodeAndDestOp
00004DD8                          7961m         printComma
00004DD8  43F8 00C9               7962m         LEA     OCOMMA, A1     
00004DDC  103C 000E               7963m         MOVE.B  #14,D0          
00004DE0  4E4F                    7964m         TRAP    #15
00004DE2                          7965m         ENDM
00004DE2                          7966m         prepareAdrMode  #$1, (A2)
00004DE2  3C3C 0001               7967m         MOVE.W  #$1, D6      ; INPUT VALUE
00004DE6  3212                    7968m         MOVE.W  (A2), D1
00004DE8  BC3C 0001               7969m         CMP.B   #$01, D6
00004DEC  6700 000C               7970m         BEQ     ADRSOURCE_638    
00004DF0                          7971m ADRDEST_638:
00004DF0  EF49                    7972m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004DF2  E049                    7973m         LSR     #$08, D1
00004DF4  EA49                    7974m         LSR     #$05, D1
00004DF6  6000 000A               7975m         BRA     COMPLETE_638 
00004DFA                          7976m ADRSOURCE_638:                
00004DFA  E149                    7977m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004DFC  E549                    7978m         LSL     #$02, D1
00004DFE  E049                    7979m         LSR     #$08, D1
00004E00  EA49                    7980m         LSR     #$05, D1
00004E02                          7981m COMPLETE_638:  ; OPCODE HAS BEEN VERIFIED
00004E02                          7982m         ENDM        
00004E02                          7983m         decodeAdrMode   (A2), D1
00004E02  3612                    7984m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004E04  3201                    7985m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004E06                          7986m 
00004E06  B23C 0001               7987m         CMP.B   #$01, D1
00004E0A  6700 0066               7988m         BEQ     ADRREGDIRECT_639    
00004E0E  B23C 0002               7989m         CMP.B   #$02, D1
00004E12  6700 00A0               7990m         BEQ     ADRREGINDIRECT_639  
00004E16  B23C 0003               7991m         CMP.B   #$03, D1
00004E1A  6700 0102               7992m         BEQ     ADRREGPOSTINC_639  
00004E1E  B23C 0004               7993m         CMP.B   #$04, D1
00004E22  6700 0178               7994m         BEQ     ADRREGPREDEC_639
00004E26  B23C 0007               7995m         CMP.B   #$07, D1
00004E2A  6700 01EE               7996m         BEQ     ADRABSOLUTE_639    
00004E2E                          7997m         
00004E2E                          7998m DATAREGDIRECT_639: 
00004E2E  BC3C 0001               7999m         CMP.B   #$01, D6
00004E32  6700 001E               8000m         BEQ     DATAREGDIRECTSRC_639   
00004E36                          8001m DATAREGDIRECTDEST_639: 
00004E36                          8002mm         PRINTDNDEST D3 
00004E36  3203                    8003mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E38  E949                    8004mm         LSL     #$04, D1
00004E3A  E049                    8005mm         LSR     #$08, D1
00004E3C  EA49                    8006mm         LSR     #$05, D1
00004E3E  43F8 00C1               8007mm         LEA     ODN, A1     
00004E42  103C 000E               8008mm         MOVE.B  #14,D0          
00004E46  4E4F                    8009mm         TRAP    #15
00004E48  103C 0003               8010mm         MOVE.B  #3,D0          
00004E4C  4E4F                    8011mm         TRAP    #15
00004E4E                          8012mm         ENDM
00004E4E  6000 056C               8013m         BRA     COMPLETE_639 
00004E52                          8014m DATAREGDIRECTSRC_639: 
00004E52                          8015mm         PRINTDNSRC D3 
00004E52  4281                    8016mm         CLR.L   D1
00004E54  3203                    8017mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E56  E149                    8018mm         LSL     #$08, D1
00004E58  EB49                    8019mm         LSL     #$05, D1
00004E5A  E049                    8020mm         LSR     #$08, D1
00004E5C  EA49                    8021mm         LSR     #$05, D1
00004E5E  43F8 00C1               8022mm         LEA     ODN, A1     
00004E62  103C 000E               8023mm         MOVE.B  #14,D0          
00004E66  4E4F                    8024mm         TRAP    #15
00004E68  103C 0003               8025mm         MOVE.B  #3,D0          
00004E6C  4E4F                    8026mm         TRAP    #15
00004E6E                          8027mm         ENDM
00004E6E  6000 054C               8028m         BRA     COMPLETE_639   
00004E72                          8029m         
00004E72                          8030m ADRREGDIRECT_639: 
00004E72  BC3C 0001               8031m         CMP.B   #$01, D6
00004E76  6700 001E               8032m         BEQ     ADRREGDIRECTSRC_639   
00004E7A                          8033m ADRREGDIRECTDEST_639:
00004E7A                          8034mm         PRINTANDEST D3
00004E7A  3203                    8035mm         MOVE.W  D3, D1
00004E7C  E949                    8036mm         LSL     #$04, D1
00004E7E  E049                    8037mm         LSR     #$08, D1
00004E80  EA49                    8038mm         LSR     #$05, D1
00004E82  43F8 00C3               8039mm         LEA     OAN, A1     
00004E86  103C 000E               8040mm         MOVE.B  #14,D0          
00004E8A  4E4F                    8041mm         TRAP    #15
00004E8C  103C 0003               8042mm         MOVE.B  #3,D0          
00004E90  4E4F                    8043mm         TRAP    #15
00004E92                          8044mm         ENDM
00004E92  6000 0528               8045m         BRA     COMPLETE_639   
00004E96                          8046m ADRREGDIRECTSRC_639:
00004E96                          8047mm         PRINTANSRC D3
00004E96  3203                    8048mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E98  E149                    8049mm         LSL     #$08, D1
00004E9A  EB49                    8050mm         LSL     #$05, D1
00004E9C  E049                    8051mm         LSR     #$08, D1
00004E9E  EA49                    8052mm         LSR     #$05, D1
00004EA0  43F8 00C3               8053mm         LEA     OAN, A1     
00004EA4  103C 000E               8054mm         MOVE.B  #14,D0          
00004EA8  4E4F                    8055mm         TRAP    #15
00004EAA  103C 0003               8056mm         MOVE.B  #3,D0          
00004EAE  4E4F                    8057mm         TRAP    #15
00004EB0                          8058mm         ENDM
00004EB0  6000 050A               8059m         BRA     COMPLETE_639   
00004EB4                          8060m        
00004EB4                          8061m ADRREGINDIRECT_639:   
00004EB4  BC3C 0001               8062m         CMP.B   #$01, D6
00004EB8  6700 0032               8063m         BEQ     ADRREGINDIRECTSRC_639   
00004EBC                          8064m ADRREGINDIRECTDEST_639:
00004EBC                          8065mm         PRINTLB
00004EBC  43F8 00C5               8066mm         LEA     OLB, A1     
00004EC0  103C 000E               8067mm         MOVE.B  #14,D0          
00004EC4  4E4F                    8068mm         TRAP    #15
00004EC6                          8069mm         ENDM
00004EC6                          8070mm         PRINTANDEST D3  
00004EC6  3203                    8071mm         MOVE.W  D3, D1
00004EC8  E949                    8072mm         LSL     #$04, D1
00004ECA  E049                    8073mm         LSR     #$08, D1
00004ECC  EA49                    8074mm         LSR     #$05, D1
00004ECE  43F8 00C3               8075mm         LEA     OAN, A1     
00004ED2  103C 000E               8076mm         MOVE.B  #14,D0          
00004ED6  4E4F                    8077mm         TRAP    #15
00004ED8  103C 0003               8078mm         MOVE.B  #3,D0          
00004EDC  4E4F                    8079mm         TRAP    #15
00004EDE                          8080mm         ENDM
00004EDE                          8081mm         PRINTRB
00004EDE  43F8 00C7               8082mm         LEA     ORB, A1     
00004EE2  103C 000E               8083mm         MOVE.B  #14,D0          
00004EE6  4E4F                    8084mm         TRAP    #15
00004EE8                          8085mm         ENDM
00004EE8  6000 04D2               8086m         BRA     COMPLETE_639     
00004EEC                          8087m ADRREGINDIRECTSRC_639:   
00004EEC                          8088mm         PRINTLB
00004EEC  43F8 00C5               8089mm         LEA     OLB, A1     
00004EF0  103C 000E               8090mm         MOVE.B  #14,D0          
00004EF4  4E4F                    8091mm         TRAP    #15
00004EF6                          8092mm         ENDM
00004EF6                          8093mm         PRINTANSRC D3  
00004EF6  3203                    8094mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004EF8  E149                    8095mm         LSL     #$08, D1
00004EFA  EB49                    8096mm         LSL     #$05, D1
00004EFC  E049                    8097mm         LSR     #$08, D1
00004EFE  EA49                    8098mm         LSR     #$05, D1
00004F00  43F8 00C3               8099mm         LEA     OAN, A1     
00004F04  103C 000E               8100mm         MOVE.B  #14,D0          
00004F08  4E4F                    8101mm         TRAP    #15
00004F0A  103C 0003               8102mm         MOVE.B  #3,D0          
00004F0E  4E4F                    8103mm         TRAP    #15
00004F10                          8104mm         ENDM
00004F10                          8105mm         PRINTRB
00004F10  43F8 00C7               8106mm         LEA     ORB, A1     
00004F14  103C 000E               8107mm         MOVE.B  #14,D0          
00004F18  4E4F                    8108mm         TRAP    #15
00004F1A                          8109mm         ENDM
00004F1A  6000 04A0               8110m         BRA     COMPLETE_639   
00004F1E                          8111m         
00004F1E                          8112m ADRREGPOSTINC_639:   
00004F1E  BC3C 0001               8113m         CMP.B   #$01, D6
00004F22  6700 003C               8114m         BEQ     ADRREGPOSTINCSRC_639   
00004F26                          8115m ADRREGPOSTINCDEST_639: 
00004F26                          8116mm         PRINTLB
00004F26  43F8 00C5               8117mm         LEA     OLB, A1     
00004F2A  103C 000E               8118mm         MOVE.B  #14,D0          
00004F2E  4E4F                    8119mm         TRAP    #15
00004F30                          8120mm         ENDM
00004F30                          8121mm         PRINTANDEST D3  
00004F30  3203                    8122mm         MOVE.W  D3, D1
00004F32  E949                    8123mm         LSL     #$04, D1
00004F34  E049                    8124mm         LSR     #$08, D1
00004F36  EA49                    8125mm         LSR     #$05, D1
00004F38  43F8 00C3               8126mm         LEA     OAN, A1     
00004F3C  103C 000E               8127mm         MOVE.B  #14,D0          
00004F40  4E4F                    8128mm         TRAP    #15
00004F42  103C 0003               8129mm         MOVE.B  #3,D0          
00004F46  4E4F                    8130mm         TRAP    #15
00004F48                          8131mm         ENDM
00004F48                          8132mm         PRINTRB
00004F48  43F8 00C7               8133mm         LEA     ORB, A1     
00004F4C  103C 000E               8134mm         MOVE.B  #14,D0          
00004F50  4E4F                    8135mm         TRAP    #15
00004F52                          8136mm         ENDM
00004F52                          8137mm         PRINTPI
00004F52  43F8 00CE               8138mm         LEA     OPSTINC, A1     
00004F56  103C 000E               8139mm         MOVE.B  #14,D0          
00004F5A  4E4F                    8140mm         TRAP    #15
00004F5C                          8141mm         ENDM
00004F5C  6000 045E               8142m         BRA     COMPLETE_639  
00004F60                          8143m ADRREGPOSTINCSRC_639:           
00004F60                          8144mm         PRINTLB
00004F60  43F8 00C5               8145mm         LEA     OLB, A1     
00004F64  103C 000E               8146mm         MOVE.B  #14,D0          
00004F68  4E4F                    8147mm         TRAP    #15
00004F6A                          8148mm         ENDM
00004F6A                          8149mm         PRINTANSRC D3  
00004F6A  3203                    8150mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F6C  E149                    8151mm         LSL     #$08, D1
00004F6E  EB49                    8152mm         LSL     #$05, D1
00004F70  E049                    8153mm         LSR     #$08, D1
00004F72  EA49                    8154mm         LSR     #$05, D1
00004F74  43F8 00C3               8155mm         LEA     OAN, A1     
00004F78  103C 000E               8156mm         MOVE.B  #14,D0          
00004F7C  4E4F                    8157mm         TRAP    #15
00004F7E  103C 0003               8158mm         MOVE.B  #3,D0          
00004F82  4E4F                    8159mm         TRAP    #15
00004F84                          8160mm         ENDM
00004F84                          8161mm         PRINTRB
00004F84  43F8 00C7               8162mm         LEA     ORB, A1     
00004F88  103C 000E               8163mm         MOVE.B  #14,D0          
00004F8C  4E4F                    8164mm         TRAP    #15
00004F8E                          8165mm         ENDM
00004F8E                          8166mm         PRINTPI
00004F8E  43F8 00CE               8167mm         LEA     OPSTINC, A1     
00004F92  103C 000E               8168mm         MOVE.B  #14,D0          
00004F96  4E4F                    8169mm         TRAP    #15
00004F98                          8170mm         ENDM
00004F98  6000 0422               8171m         BRA     COMPLETE_639  
00004F9C                          8172m         
00004F9C                          8173m ADRREGPREDEC_639: 
00004F9C  BC3C 0001               8174m         CMP.B   #$01, D6
00004FA0  6700 003C               8175m         BEQ     ADRREGPREDECSRC_639   
00004FA4                          8176m ADRREGPREDECDEST_639:
00004FA4                          8177mm         PRINTPD  
00004FA4  43F8 00CC               8178mm         LEA     OPREDEC, A1     
00004FA8  103C 000E               8179mm         MOVE.B  #14,D0          
00004FAC  4E4F                    8180mm         TRAP    #15
00004FAE                          8181mm         ENDM
00004FAE                          8182mm         PRINTLB
00004FAE  43F8 00C5               8183mm         LEA     OLB, A1     
00004FB2  103C 000E               8184mm         MOVE.B  #14,D0          
00004FB6  4E4F                    8185mm         TRAP    #15
00004FB8                          8186mm         ENDM
00004FB8                          8187mm         PRINTANDEST D3  
00004FB8  3203                    8188mm         MOVE.W  D3, D1
00004FBA  E949                    8189mm         LSL     #$04, D1
00004FBC  E049                    8190mm         LSR     #$08, D1
00004FBE  EA49                    8191mm         LSR     #$05, D1
00004FC0  43F8 00C3               8192mm         LEA     OAN, A1     
00004FC4  103C 000E               8193mm         MOVE.B  #14,D0          
00004FC8  4E4F                    8194mm         TRAP    #15
00004FCA  103C 0003               8195mm         MOVE.B  #3,D0          
00004FCE  4E4F                    8196mm         TRAP    #15
00004FD0                          8197mm         ENDM
00004FD0                          8198mm         PRINTRB
00004FD0  43F8 00C7               8199mm         LEA     ORB, A1     
00004FD4  103C 000E               8200mm         MOVE.B  #14,D0          
00004FD8  4E4F                    8201mm         TRAP    #15
00004FDA                          8202mm         ENDM
00004FDA  6000 03E0               8203m         BRA     COMPLETE_639   
00004FDE                          8204m ADRREGPREDECSRC_639: 
00004FDE                          8205mm         PRINTPD  
00004FDE  43F8 00CC               8206mm         LEA     OPREDEC, A1     
00004FE2  103C 000E               8207mm         MOVE.B  #14,D0          
00004FE6  4E4F                    8208mm         TRAP    #15
00004FE8                          8209mm         ENDM
00004FE8                          8210mm         PRINTLB
00004FE8  43F8 00C5               8211mm         LEA     OLB, A1     
00004FEC  103C 000E               8212mm         MOVE.B  #14,D0          
00004FF0  4E4F                    8213mm         TRAP    #15
00004FF2                          8214mm         ENDM
00004FF2                          8215mm         PRINTANSRC D3  
00004FF2  3203                    8216mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FF4  E149                    8217mm         LSL     #$08, D1
00004FF6  EB49                    8218mm         LSL     #$05, D1
00004FF8  E049                    8219mm         LSR     #$08, D1
00004FFA  EA49                    8220mm         LSR     #$05, D1
00004FFC  43F8 00C3               8221mm         LEA     OAN, A1     
00005000  103C 000E               8222mm         MOVE.B  #14,D0          
00005004  4E4F                    8223mm         TRAP    #15
00005006  103C 0003               8224mm         MOVE.B  #3,D0          
0000500A  4E4F                    8225mm         TRAP    #15
0000500C                          8226mm         ENDM
0000500C                          8227mm         PRINTRB
0000500C  43F8 00C7               8228mm         LEA     ORB, A1     
00005010  103C 000E               8229mm         MOVE.B  #14,D0          
00005014  4E4F                    8230mm         TRAP    #15
00005016                          8231mm         ENDM
00005016  6000 03A4               8232m         BRA     COMPLETE_639
0000501A                          8233m        
0000501A                          8234m ADRABSOLUTE_639:
0000501A  BC3C 0001               8235m         CMP.B   #$01, D6
0000501E  6600 0018               8236m         BNE     ADRABSOLUTEDST_639 
00005022                          8237m         
00005022  3A03                    8238m         MOVE.W  D3, D5
00005024  0803 0002               8239m         BTST    #2, D3
00005028  6600 0024               8240m         BNE     ADRIMMEDIATE_639
0000502C  0803 0000               8241m         BTST    #0, D3
00005030  6600 027A               8242m         BNE     ADRABSOLUTEL_639
00005034  6000 01DA               8243m         BRA     ADRABSOLUTEW_639
00005038                          8244m ADRABSOLUTEDST_639:
00005038  3A03                    8245m         MOVE.W  D3, D5
0000503A  0803 000B               8246m         BTST    #$B, D3
0000503E  6600 000E               8247m         BNE     ADRIMMEDIATE_639
00005042  0803 0009               8248m         BTST    #$09, D3
00005046  6600 0264               8249m         BNE     ADRABSOLUTEL_639
0000504A  6000 01C4               8250m         BRA     ADRABSOLUTEW_639
0000504E                          8251m ADRIMMEDIATE_639:
0000504E  BE3C 0001               8252m         CMP.B   #1, D7
00005052  6700 009E               8253m         BEQ     ADRIMMEDIATEL_639
00005056                          8254m ADRIMMEDIATEW_639:
00005056  361A                    8255m         MOVE.W  (A2)+, D3
00005058                          8256mm         PRINTHASH
00005058  103C 0006               8257mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000505C  323C 0023               8258mm         MOVE.W  #35, D1     ; AN = SIGN
00005060  4E4F                    8259mm         TRAP    #15         ; OUTPUT = SIGN
00005062                          8260mm         ENDM
00005062                          8261mm         PRINTSIGN
00005062  103C 0006               8262mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005066  323C 0024               8263mm         MOVE.W  #36, D1     ; AN = SIGN
0000506A  4E4F                    8264mm         TRAP    #15         ; OUTPUT = SIGN
0000506C                          8265mm         ENDM
0000506C                          8266mm         ADROUT
0000506C  3212                    8267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000506E  E049                    8268mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005070  E849                    8269mm         LSR.W   #4, D1      
00005072                          8270mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005072  0C01 0009               8271mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005076  6E00 000A               8272mmm         BGT     ALPHA_669
0000507A  0601 0030               8273mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000507E  6000 0006               8274mmm         BRA     DONE_669
00005082  0601 0037               8275mmm ALPHA_669: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005086  4E71                    8276mmm DONE_669: NOP
00005088                          8277mmm         ENDM
00005088  4E4F                    8278mm         TRAP    #15         ; EXECUTE OUTPUT
0000508A                          8279mm         
0000508A  3212                    8280mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000508C  E949                    8281mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000508E  E049                    8282mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005090  E849                    8283mm         LSR.W   #4, D1      
00005092                          8284mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005092  0C01 0009               8285mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005096  6E00 000A               8286mmm         BGT     ALPHA_670
0000509A  0601 0030               8287mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000509E  6000 0006               8288mmm         BRA     DONE_670
000050A2  0601 0037               8289mmm ALPHA_670: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050A6  4E71                    8290mmm DONE_670: NOP
000050A8                          8291mmm         ENDM
000050A8  4E4F                    8292mm         TRAP    #15         ; EXECUTE OUTPUT
000050AA                          8293mm         
000050AA  3212                    8294mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050AC  E149                    8295mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050AE  E049                    8296mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050B0  E849                    8297mm         LSR.W   #4, D1      
000050B2                          8298mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050B2  0C01 0009               8299mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050B6  6E00 000A               8300mmm         BGT     ALPHA_671
000050BA  0601 0030               8301mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050BE  6000 0006               8302mmm         BRA     DONE_671
000050C2  0601 0037               8303mmm ALPHA_671: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050C6  4E71                    8304mmm DONE_671: NOP
000050C8                          8305mmm         ENDM
000050C8  4E4F                    8306mm         TRAP    #15         ; EXECUTE OUTPUT
000050CA                          8307mm         
000050CA  3212                    8308mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050CC  E149                    8309mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050CE  E949                    8310mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000050D0  E049                    8311mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050D2  E849                    8312mm         LSR.W   #4, D1      
000050D4                          8313mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050D4  0C01 0009               8314mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050D8  6E00 000A               8315mmm         BGT     ALPHA_672
000050DC  0601 0030               8316mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050E0  6000 0006               8317mmm         BRA     DONE_672
000050E4  0601 0037               8318mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050E8  4E71                    8319mmm DONE_672: NOP
000050EA                          8320mmm         ENDM
000050EA  4E4F                    8321mm         TRAP    #15         ; EXECUTE OUTPUT       
000050EC                          8322mm         ENDM 
000050EC  3605                    8323m         MOVE.W  D5, D3
000050EE  6000 02CC               8324m         BRA     COMPLETE_639
000050F2                          8325m ADRIMMEDIATEL_639:
000050F2  361A                    8326m         MOVE.W  (A2)+, D3
000050F4                          8327mm         PRINTHASH
000050F4  103C 0006               8328mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050F8  323C 0023               8329mm         MOVE.W  #35, D1     ; AN = SIGN
000050FC  4E4F                    8330mm         TRAP    #15         ; OUTPUT = SIGN
000050FE                          8331mm         ENDM
000050FE                          8332mm         PRINTSIGN
000050FE  103C 0006               8333mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005102  323C 0024               8334mm         MOVE.W  #36, D1     ; AN = SIGN
00005106  4E4F                    8335mm         TRAP    #15         ; OUTPUT = SIGN
00005108                          8336mm         ENDM
00005108                          8337mm         ADROUT 
00005108  3212                    8338mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000510A  E049                    8339mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000510C  E849                    8340mm         LSR.W   #4, D1      
0000510E                          8341mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000510E  0C01 0009               8342mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005112  6E00 000A               8343mmm         BGT     ALPHA_676
00005116  0601 0030               8344mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000511A  6000 0006               8345mmm         BRA     DONE_676
0000511E  0601 0037               8346mmm ALPHA_676: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005122  4E71                    8347mmm DONE_676: NOP
00005124                          8348mmm         ENDM
00005124  4E4F                    8349mm         TRAP    #15         ; EXECUTE OUTPUT
00005126                          8350mm         
00005126  3212                    8351mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005128  E949                    8352mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000512A  E049                    8353mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000512C  E849                    8354mm         LSR.W   #4, D1      
0000512E                          8355mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000512E  0C01 0009               8356mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005132  6E00 000A               8357mmm         BGT     ALPHA_677
00005136  0601 0030               8358mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000513A  6000 0006               8359mmm         BRA     DONE_677
0000513E  0601 0037               8360mmm ALPHA_677: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005142  4E71                    8361mmm DONE_677: NOP
00005144                          8362mmm         ENDM
00005144  4E4F                    8363mm         TRAP    #15         ; EXECUTE OUTPUT
00005146                          8364mm         
00005146  3212                    8365mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005148  E149                    8366mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000514A  E049                    8367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000514C  E849                    8368mm         LSR.W   #4, D1      
0000514E                          8369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000514E  0C01 0009               8370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005152  6E00 000A               8371mmm         BGT     ALPHA_678
00005156  0601 0030               8372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000515A  6000 0006               8373mmm         BRA     DONE_678
0000515E  0601 0037               8374mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005162  4E71                    8375mmm DONE_678: NOP
00005164                          8376mmm         ENDM
00005164  4E4F                    8377mm         TRAP    #15         ; EXECUTE OUTPUT
00005166                          8378mm         
00005166  3212                    8379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005168  E149                    8380mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000516A  E949                    8381mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000516C  E049                    8382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000516E  E849                    8383mm         LSR.W   #4, D1      
00005170                          8384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005170  0C01 0009               8385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005174  6E00 000A               8386mmm         BGT     ALPHA_679
00005178  0601 0030               8387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000517C  6000 0006               8388mmm         BRA     DONE_679
00005180  0601 0037               8389mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005184  4E71                    8390mmm DONE_679: NOP
00005186                          8391mmm         ENDM
00005186  4E4F                    8392mm         TRAP    #15         ; EXECUTE OUTPUT       
00005188                          8393mm         ENDM 
00005188  361A                    8394m         MOVE.W  (A2)+, D3
0000518A                          8395mm         ADROUT
0000518A  3212                    8396mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000518C  E049                    8397mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000518E  E849                    8398mm         LSR.W   #4, D1      
00005190                          8399mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005190  0C01 0009               8400mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005194  6E00 000A               8401mmm         BGT     ALPHA_681
00005198  0601 0030               8402mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000519C  6000 0006               8403mmm         BRA     DONE_681
000051A0  0601 0037               8404mmm ALPHA_681: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051A4  4E71                    8405mmm DONE_681: NOP
000051A6                          8406mmm         ENDM
000051A6  4E4F                    8407mm         TRAP    #15         ; EXECUTE OUTPUT
000051A8                          8408mm         
000051A8  3212                    8409mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051AA  E949                    8410mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000051AC  E049                    8411mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051AE  E849                    8412mm         LSR.W   #4, D1      
000051B0                          8413mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051B0  0C01 0009               8414mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051B4  6E00 000A               8415mmm         BGT     ALPHA_682
000051B8  0601 0030               8416mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051BC  6000 0006               8417mmm         BRA     DONE_682
000051C0  0601 0037               8418mmm ALPHA_682: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051C4  4E71                    8419mmm DONE_682: NOP
000051C6                          8420mmm         ENDM
000051C6  4E4F                    8421mm         TRAP    #15         ; EXECUTE OUTPUT
000051C8                          8422mm         
000051C8  3212                    8423mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051CA  E149                    8424mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051CC  E049                    8425mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051CE  E849                    8426mm         LSR.W   #4, D1      
000051D0                          8427mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051D0  0C01 0009               8428mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051D4  6E00 000A               8429mmm         BGT     ALPHA_683
000051D8  0601 0030               8430mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051DC  6000 0006               8431mmm         BRA     DONE_683
000051E0  0601 0037               8432mmm ALPHA_683: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051E4  4E71                    8433mmm DONE_683: NOP
000051E6                          8434mmm         ENDM
000051E6  4E4F                    8435mm         TRAP    #15         ; EXECUTE OUTPUT
000051E8                          8436mm         
000051E8  3212                    8437mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051EA  E149                    8438mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051EC  E949                    8439mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000051EE  E049                    8440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051F0  E849                    8441mm         LSR.W   #4, D1      
000051F2                          8442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051F2  0C01 0009               8443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F6  6E00 000A               8444mmm         BGT     ALPHA_684
000051FA  0601 0030               8445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051FE  6000 0006               8446mmm         BRA     DONE_684
00005202  0601 0037               8447mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005206  4E71                    8448mmm DONE_684: NOP
00005208                          8449mmm         ENDM
00005208  4E4F                    8450mm         TRAP    #15         ; EXECUTE OUTPUT       
0000520A                          8451mm         ENDM 
0000520A  3605                    8452m         MOVE.W  D5, D3
0000520C  6000 01AE               8453m         BRA     COMPLETE_639 
00005210                          8454m ADRABSOLUTEW_639:     
00005210  361A                    8455m         MOVE.W  (A2)+, D3
00005212                          8456mm         PRINTSIGN
00005212  103C 0006               8457mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005216  323C 0024               8458mm         MOVE.W  #36, D1     ; AN = SIGN
0000521A  4E4F                    8459mm         TRAP    #15         ; OUTPUT = SIGN
0000521C                          8460mm         ENDM
0000521C                          8461mm         PRINTSIGN
0000521C  103C 0006               8462mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005220  323C 0024               8463mm         MOVE.W  #36, D1     ; AN = SIGN
00005224  4E4F                    8464mm         TRAP    #15         ; OUTPUT = SIGN
00005226                          8465mm         ENDM
00005226                          8466mm         ADROUT
00005226  3212                    8467mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005228  E049                    8468mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000522A  E849                    8469mm         LSR.W   #4, D1      
0000522C                          8470mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000522C  0C01 0009               8471mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005230  6E00 000A               8472mmm         BGT     ALPHA_688
00005234  0601 0030               8473mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005238  6000 0006               8474mmm         BRA     DONE_688
0000523C  0601 0037               8475mmm ALPHA_688: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005240  4E71                    8476mmm DONE_688: NOP
00005242                          8477mmm         ENDM
00005242  4E4F                    8478mm         TRAP    #15         ; EXECUTE OUTPUT
00005244                          8479mm         
00005244  3212                    8480mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005246  E949                    8481mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005248  E049                    8482mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000524A  E849                    8483mm         LSR.W   #4, D1      
0000524C                          8484mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000524C  0C01 0009               8485mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005250  6E00 000A               8486mmm         BGT     ALPHA_689
00005254  0601 0030               8487mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005258  6000 0006               8488mmm         BRA     DONE_689
0000525C  0601 0037               8489mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005260  4E71                    8490mmm DONE_689: NOP
00005262                          8491mmm         ENDM
00005262  4E4F                    8492mm         TRAP    #15         ; EXECUTE OUTPUT
00005264                          8493mm         
00005264  3212                    8494mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005266  E149                    8495mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005268  E049                    8496mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000526A  E849                    8497mm         LSR.W   #4, D1      
0000526C                          8498mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000526C  0C01 0009               8499mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005270  6E00 000A               8500mmm         BGT     ALPHA_690
00005274  0601 0030               8501mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005278  6000 0006               8502mmm         BRA     DONE_690
0000527C  0601 0037               8503mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005280  4E71                    8504mmm DONE_690: NOP
00005282                          8505mmm         ENDM
00005282  4E4F                    8506mm         TRAP    #15         ; EXECUTE OUTPUT
00005284                          8507mm         
00005284  3212                    8508mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005286  E149                    8509mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005288  E949                    8510mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000528A  E049                    8511mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000528C  E849                    8512mm         LSR.W   #4, D1      
0000528E                          8513mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000528E  0C01 0009               8514mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005292  6E00 000A               8515mmm         BGT     ALPHA_691
00005296  0601 0030               8516mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000529A  6000 0006               8517mmm         BRA     DONE_691
0000529E  0601 0037               8518mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052A2  4E71                    8519mmm DONE_691: NOP
000052A4                          8520mmm         ENDM
000052A4  4E4F                    8521mm         TRAP    #15         ; EXECUTE OUTPUT       
000052A6                          8522mm         ENDM 
000052A6  3605                    8523m         MOVE.W  D5, D3
000052A8  6000 0112               8524m         BRA     COMPLETE_639  
000052AC                          8525m ADRABSOLUTEL_639:  
000052AC  361A                    8526m         MOVE.W  (A2)+, D3
000052AE                          8527mm         PRINTSIGN
000052AE  103C 0006               8528mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000052B2  323C 0024               8529mm         MOVE.W  #36, D1     ; AN = SIGN
000052B6  4E4F                    8530mm         TRAP    #15         ; OUTPUT = SIGN
000052B8                          8531mm         ENDM
000052B8                          8532mm         ADROUT 
000052B8  3212                    8533mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052BA  E049                    8534mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052BC  E849                    8535mm         LSR.W   #4, D1      
000052BE                          8536mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052BE  0C01 0009               8537mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052C2  6E00 000A               8538mmm         BGT     ALPHA_694
000052C6  0601 0030               8539mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052CA  6000 0006               8540mmm         BRA     DONE_694
000052CE  0601 0037               8541mmm ALPHA_694: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052D2  4E71                    8542mmm DONE_694: NOP
000052D4                          8543mmm         ENDM
000052D4  4E4F                    8544mm         TRAP    #15         ; EXECUTE OUTPUT
000052D6                          8545mm         
000052D6  3212                    8546mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052D8  E949                    8547mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000052DA  E049                    8548mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052DC  E849                    8549mm         LSR.W   #4, D1      
000052DE                          8550mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052DE  0C01 0009               8551mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052E2  6E00 000A               8552mmm         BGT     ALPHA_695
000052E6  0601 0030               8553mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052EA  6000 0006               8554mmm         BRA     DONE_695
000052EE  0601 0037               8555mmm ALPHA_695: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052F2  4E71                    8556mmm DONE_695: NOP
000052F4                          8557mmm         ENDM
000052F4  4E4F                    8558mm         TRAP    #15         ; EXECUTE OUTPUT
000052F6                          8559mm         
000052F6  3212                    8560mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052F8  E149                    8561mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052FA  E049                    8562mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052FC  E849                    8563mm         LSR.W   #4, D1      
000052FE                          8564mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052FE  0C01 0009               8565mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005302  6E00 000A               8566mmm         BGT     ALPHA_696
00005306  0601 0030               8567mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000530A  6000 0006               8568mmm         BRA     DONE_696
0000530E  0601 0037               8569mmm ALPHA_696: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005312  4E71                    8570mmm DONE_696: NOP
00005314                          8571mmm         ENDM
00005314  4E4F                    8572mm         TRAP    #15         ; EXECUTE OUTPUT
00005316                          8573mm         
00005316  3212                    8574mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005318  E149                    8575mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000531A  E949                    8576mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000531C  E049                    8577mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000531E  E849                    8578mm         LSR.W   #4, D1      
00005320                          8579mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005320  0C01 0009               8580mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005324  6E00 000A               8581mmm         BGT     ALPHA_697
00005328  0601 0030               8582mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000532C  6000 0006               8583mmm         BRA     DONE_697
00005330  0601 0037               8584mmm ALPHA_697: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005334  4E71                    8585mmm DONE_697: NOP
00005336                          8586mmm         ENDM
00005336  4E4F                    8587mm         TRAP    #15         ; EXECUTE OUTPUT       
00005338                          8588mm         ENDM 
00005338  361A                    8589m         MOVE.W  (A2)+, D3
0000533A                          8590mm         ADROUT
0000533A  3212                    8591mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000533C  E049                    8592mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000533E  E849                    8593mm         LSR.W   #4, D1      
00005340                          8594mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005340  0C01 0009               8595mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005344  6E00 000A               8596mmm         BGT     ALPHA_699
00005348  0601 0030               8597mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000534C  6000 0006               8598mmm         BRA     DONE_699
00005350  0601 0037               8599mmm ALPHA_699: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005354  4E71                    8600mmm DONE_699: NOP
00005356                          8601mmm         ENDM
00005356  4E4F                    8602mm         TRAP    #15         ; EXECUTE OUTPUT
00005358                          8603mm         
00005358  3212                    8604mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000535A  E949                    8605mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000535C  E049                    8606mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000535E  E849                    8607mm         LSR.W   #4, D1      
00005360                          8608mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005360  0C01 0009               8609mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005364  6E00 000A               8610mmm         BGT     ALPHA_700
00005368  0601 0030               8611mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000536C  6000 0006               8612mmm         BRA     DONE_700
00005370  0601 0037               8613mmm ALPHA_700: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005374  4E71                    8614mmm DONE_700: NOP
00005376                          8615mmm         ENDM
00005376  4E4F                    8616mm         TRAP    #15         ; EXECUTE OUTPUT
00005378                          8617mm         
00005378  3212                    8618mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000537A  E149                    8619mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000537C  E049                    8620mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000537E  E849                    8621mm         LSR.W   #4, D1      
00005380                          8622mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005380  0C01 0009               8623mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005384  6E00 000A               8624mmm         BGT     ALPHA_701
00005388  0601 0030               8625mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000538C  6000 0006               8626mmm         BRA     DONE_701
00005390  0601 0037               8627mmm ALPHA_701: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005394  4E71                    8628mmm DONE_701: NOP
00005396                          8629mmm         ENDM
00005396  4E4F                    8630mm         TRAP    #15         ; EXECUTE OUTPUT
00005398                          8631mm         
00005398  3212                    8632mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000539A  E149                    8633mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000539C  E949                    8634mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000539E  E049                    8635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053A0  E849                    8636mm         LSR.W   #4, D1      
000053A2                          8637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053A2  0C01 0009               8638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053A6  6E00 000A               8639mmm         BGT     ALPHA_702
000053AA  0601 0030               8640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053AE  6000 0006               8641mmm         BRA     DONE_702
000053B2  0601 0037               8642mmm ALPHA_702: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053B6  4E71                    8643mmm DONE_702: NOP
000053B8                          8644mmm         ENDM
000053B8  4E4F                    8645mm         TRAP    #15         ; EXECUTE OUTPUT       
000053BA                          8646mm         ENDM 
000053BA  3605                    8647m         MOVE.W  D5, D3
000053BC                          8648m 
000053BC                          8649m COMPLETE_639:  ; OPCODE HAS BEEN VERIFIED
000053BC                          8650m         ENDM
000053BC  6000 05FE               8651          BRA     decodeANDcomp
000053C0                          8652  decodeAndDestOp:
000053C0                          8653m         prepareAdrMode  #$1,(A2)
000053C0  3C3C 0001               8654m         MOVE.W  #$1, D6      ; INPUT VALUE
000053C4  3212                    8655m         MOVE.W  (A2), D1
000053C6  BC3C 0001               8656m         CMP.B   #$01, D6
000053CA  6700 000C               8657m         BEQ     ADRSOURCE_703    
000053CE                          8658m ADRDEST_703:
000053CE  EF49                    8659m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000053D0  E049                    8660m         LSR     #$08, D1
000053D2  EA49                    8661m         LSR     #$05, D1
000053D4  6000 000A               8662m         BRA     COMPLETE_703 
000053D8                          8663m ADRSOURCE_703:                
000053D8  E149                    8664m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000053DA  E549                    8665m         LSL     #$02, D1
000053DC  E049                    8666m         LSR     #$08, D1
000053DE  EA49                    8667m         LSR     #$05, D1
000053E0                          8668m COMPLETE_703:  ; OPCODE HAS BEEN VERIFIED
000053E0                          8669m         ENDM        
000053E0                          8670m         decodeAdrMode   (A2), D1
000053E0  3612                    8671m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000053E2  3201                    8672m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000053E4                          8673m 
000053E4  B23C 0001               8674m         CMP.B   #$01, D1
000053E8  6700 0066               8675m         BEQ     ADRREGDIRECT_704    
000053EC  B23C 0002               8676m         CMP.B   #$02, D1
000053F0  6700 00A0               8677m         BEQ     ADRREGINDIRECT_704  
000053F4  B23C 0003               8678m         CMP.B   #$03, D1
000053F8  6700 0102               8679m         BEQ     ADRREGPOSTINC_704  
000053FC  B23C 0004               8680m         CMP.B   #$04, D1
00005400  6700 0178               8681m         BEQ     ADRREGPREDEC_704
00005404  B23C 0007               8682m         CMP.B   #$07, D1
00005408  6700 01EE               8683m         BEQ     ADRABSOLUTE_704    
0000540C                          8684m         
0000540C                          8685m DATAREGDIRECT_704: 
0000540C  BC3C 0001               8686m         CMP.B   #$01, D6
00005410  6700 001E               8687m         BEQ     DATAREGDIRECTSRC_704   
00005414                          8688m DATAREGDIRECTDEST_704: 
00005414                          8689mm         PRINTDNDEST D3 
00005414  3203                    8690mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005416  E949                    8691mm         LSL     #$04, D1
00005418  E049                    8692mm         LSR     #$08, D1
0000541A  EA49                    8693mm         LSR     #$05, D1
0000541C  43F8 00C1               8694mm         LEA     ODN, A1     
00005420  103C 000E               8695mm         MOVE.B  #14,D0          
00005424  4E4F                    8696mm         TRAP    #15
00005426  103C 0003               8697mm         MOVE.B  #3,D0          
0000542A  4E4F                    8698mm         TRAP    #15
0000542C                          8699mm         ENDM
0000542C  6000 056C               8700m         BRA     COMPLETE_704 
00005430                          8701m DATAREGDIRECTSRC_704: 
00005430                          8702mm         PRINTDNSRC D3 
00005430  4281                    8703mm         CLR.L   D1
00005432  3203                    8704mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005434  E149                    8705mm         LSL     #$08, D1
00005436  EB49                    8706mm         LSL     #$05, D1
00005438  E049                    8707mm         LSR     #$08, D1
0000543A  EA49                    8708mm         LSR     #$05, D1
0000543C  43F8 00C1               8709mm         LEA     ODN, A1     
00005440  103C 000E               8710mm         MOVE.B  #14,D0          
00005444  4E4F                    8711mm         TRAP    #15
00005446  103C 0003               8712mm         MOVE.B  #3,D0          
0000544A  4E4F                    8713mm         TRAP    #15
0000544C                          8714mm         ENDM
0000544C  6000 054C               8715m         BRA     COMPLETE_704   
00005450                          8716m         
00005450                          8717m ADRREGDIRECT_704: 
00005450  BC3C 0001               8718m         CMP.B   #$01, D6
00005454  6700 001E               8719m         BEQ     ADRREGDIRECTSRC_704   
00005458                          8720m ADRREGDIRECTDEST_704:
00005458                          8721mm         PRINTANDEST D3
00005458  3203                    8722mm         MOVE.W  D3, D1
0000545A  E949                    8723mm         LSL     #$04, D1
0000545C  E049                    8724mm         LSR     #$08, D1
0000545E  EA49                    8725mm         LSR     #$05, D1
00005460  43F8 00C3               8726mm         LEA     OAN, A1     
00005464  103C 000E               8727mm         MOVE.B  #14,D0          
00005468  4E4F                    8728mm         TRAP    #15
0000546A  103C 0003               8729mm         MOVE.B  #3,D0          
0000546E  4E4F                    8730mm         TRAP    #15
00005470                          8731mm         ENDM
00005470  6000 0528               8732m         BRA     COMPLETE_704   
00005474                          8733m ADRREGDIRECTSRC_704:
00005474                          8734mm         PRINTANSRC D3
00005474  3203                    8735mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005476  E149                    8736mm         LSL     #$08, D1
00005478  EB49                    8737mm         LSL     #$05, D1
0000547A  E049                    8738mm         LSR     #$08, D1
0000547C  EA49                    8739mm         LSR     #$05, D1
0000547E  43F8 00C3               8740mm         LEA     OAN, A1     
00005482  103C 000E               8741mm         MOVE.B  #14,D0          
00005486  4E4F                    8742mm         TRAP    #15
00005488  103C 0003               8743mm         MOVE.B  #3,D0          
0000548C  4E4F                    8744mm         TRAP    #15
0000548E                          8745mm         ENDM
0000548E  6000 050A               8746m         BRA     COMPLETE_704   
00005492                          8747m        
00005492                          8748m ADRREGINDIRECT_704:   
00005492  BC3C 0001               8749m         CMP.B   #$01, D6
00005496  6700 0032               8750m         BEQ     ADRREGINDIRECTSRC_704   
0000549A                          8751m ADRREGINDIRECTDEST_704:
0000549A                          8752mm         PRINTLB
0000549A  43F8 00C5               8753mm         LEA     OLB, A1     
0000549E  103C 000E               8754mm         MOVE.B  #14,D0          
000054A2  4E4F                    8755mm         TRAP    #15
000054A4                          8756mm         ENDM
000054A4                          8757mm         PRINTANDEST D3  
000054A4  3203                    8758mm         MOVE.W  D3, D1
000054A6  E949                    8759mm         LSL     #$04, D1
000054A8  E049                    8760mm         LSR     #$08, D1
000054AA  EA49                    8761mm         LSR     #$05, D1
000054AC  43F8 00C3               8762mm         LEA     OAN, A1     
000054B0  103C 000E               8763mm         MOVE.B  #14,D0          
000054B4  4E4F                    8764mm         TRAP    #15
000054B6  103C 0003               8765mm         MOVE.B  #3,D0          
000054BA  4E4F                    8766mm         TRAP    #15
000054BC                          8767mm         ENDM
000054BC                          8768mm         PRINTRB
000054BC  43F8 00C7               8769mm         LEA     ORB, A1     
000054C0  103C 000E               8770mm         MOVE.B  #14,D0          
000054C4  4E4F                    8771mm         TRAP    #15
000054C6                          8772mm         ENDM
000054C6  6000 04D2               8773m         BRA     COMPLETE_704     
000054CA                          8774m ADRREGINDIRECTSRC_704:   
000054CA                          8775mm         PRINTLB
000054CA  43F8 00C5               8776mm         LEA     OLB, A1     
000054CE  103C 000E               8777mm         MOVE.B  #14,D0          
000054D2  4E4F                    8778mm         TRAP    #15
000054D4                          8779mm         ENDM
000054D4                          8780mm         PRINTANSRC D3  
000054D4  3203                    8781mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000054D6  E149                    8782mm         LSL     #$08, D1
000054D8  EB49                    8783mm         LSL     #$05, D1
000054DA  E049                    8784mm         LSR     #$08, D1
000054DC  EA49                    8785mm         LSR     #$05, D1
000054DE  43F8 00C3               8786mm         LEA     OAN, A1     
000054E2  103C 000E               8787mm         MOVE.B  #14,D0          
000054E6  4E4F                    8788mm         TRAP    #15
000054E8  103C 0003               8789mm         MOVE.B  #3,D0          
000054EC  4E4F                    8790mm         TRAP    #15
000054EE                          8791mm         ENDM
000054EE                          8792mm         PRINTRB
000054EE  43F8 00C7               8793mm         LEA     ORB, A1     
000054F2  103C 000E               8794mm         MOVE.B  #14,D0          
000054F6  4E4F                    8795mm         TRAP    #15
000054F8                          8796mm         ENDM
000054F8  6000 04A0               8797m         BRA     COMPLETE_704   
000054FC                          8798m         
000054FC                          8799m ADRREGPOSTINC_704:   
000054FC  BC3C 0001               8800m         CMP.B   #$01, D6
00005500  6700 003C               8801m         BEQ     ADRREGPOSTINCSRC_704   
00005504                          8802m ADRREGPOSTINCDEST_704: 
00005504                          8803mm         PRINTLB
00005504  43F8 00C5               8804mm         LEA     OLB, A1     
00005508  103C 000E               8805mm         MOVE.B  #14,D0          
0000550C  4E4F                    8806mm         TRAP    #15
0000550E                          8807mm         ENDM
0000550E                          8808mm         PRINTANDEST D3  
0000550E  3203                    8809mm         MOVE.W  D3, D1
00005510  E949                    8810mm         LSL     #$04, D1
00005512  E049                    8811mm         LSR     #$08, D1
00005514  EA49                    8812mm         LSR     #$05, D1
00005516  43F8 00C3               8813mm         LEA     OAN, A1     
0000551A  103C 000E               8814mm         MOVE.B  #14,D0          
0000551E  4E4F                    8815mm         TRAP    #15
00005520  103C 0003               8816mm         MOVE.B  #3,D0          
00005524  4E4F                    8817mm         TRAP    #15
00005526                          8818mm         ENDM
00005526                          8819mm         PRINTRB
00005526  43F8 00C7               8820mm         LEA     ORB, A1     
0000552A  103C 000E               8821mm         MOVE.B  #14,D0          
0000552E  4E4F                    8822mm         TRAP    #15
00005530                          8823mm         ENDM
00005530                          8824mm         PRINTPI
00005530  43F8 00CE               8825mm         LEA     OPSTINC, A1     
00005534  103C 000E               8826mm         MOVE.B  #14,D0          
00005538  4E4F                    8827mm         TRAP    #15
0000553A                          8828mm         ENDM
0000553A  6000 045E               8829m         BRA     COMPLETE_704  
0000553E                          8830m ADRREGPOSTINCSRC_704:           
0000553E                          8831mm         PRINTLB
0000553E  43F8 00C5               8832mm         LEA     OLB, A1     
00005542  103C 000E               8833mm         MOVE.B  #14,D0          
00005546  4E4F                    8834mm         TRAP    #15
00005548                          8835mm         ENDM
00005548                          8836mm         PRINTANSRC D3  
00005548  3203                    8837mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000554A  E149                    8838mm         LSL     #$08, D1
0000554C  EB49                    8839mm         LSL     #$05, D1
0000554E  E049                    8840mm         LSR     #$08, D1
00005550  EA49                    8841mm         LSR     #$05, D1
00005552  43F8 00C3               8842mm         LEA     OAN, A1     
00005556  103C 000E               8843mm         MOVE.B  #14,D0          
0000555A  4E4F                    8844mm         TRAP    #15
0000555C  103C 0003               8845mm         MOVE.B  #3,D0          
00005560  4E4F                    8846mm         TRAP    #15
00005562                          8847mm         ENDM
00005562                          8848mm         PRINTRB
00005562  43F8 00C7               8849mm         LEA     ORB, A1     
00005566  103C 000E               8850mm         MOVE.B  #14,D0          
0000556A  4E4F                    8851mm         TRAP    #15
0000556C                          8852mm         ENDM
0000556C                          8853mm         PRINTPI
0000556C  43F8 00CE               8854mm         LEA     OPSTINC, A1     
00005570  103C 000E               8855mm         MOVE.B  #14,D0          
00005574  4E4F                    8856mm         TRAP    #15
00005576                          8857mm         ENDM
00005576  6000 0422               8858m         BRA     COMPLETE_704  
0000557A                          8859m         
0000557A                          8860m ADRREGPREDEC_704: 
0000557A  BC3C 0001               8861m         CMP.B   #$01, D6
0000557E  6700 003C               8862m         BEQ     ADRREGPREDECSRC_704   
00005582                          8863m ADRREGPREDECDEST_704:
00005582                          8864mm         PRINTPD  
00005582  43F8 00CC               8865mm         LEA     OPREDEC, A1     
00005586  103C 000E               8866mm         MOVE.B  #14,D0          
0000558A  4E4F                    8867mm         TRAP    #15
0000558C                          8868mm         ENDM
0000558C                          8869mm         PRINTLB
0000558C  43F8 00C5               8870mm         LEA     OLB, A1     
00005590  103C 000E               8871mm         MOVE.B  #14,D0          
00005594  4E4F                    8872mm         TRAP    #15
00005596                          8873mm         ENDM
00005596                          8874mm         PRINTANDEST D3  
00005596  3203                    8875mm         MOVE.W  D3, D1
00005598  E949                    8876mm         LSL     #$04, D1
0000559A  E049                    8877mm         LSR     #$08, D1
0000559C  EA49                    8878mm         LSR     #$05, D1
0000559E  43F8 00C3               8879mm         LEA     OAN, A1     
000055A2  103C 000E               8880mm         MOVE.B  #14,D0          
000055A6  4E4F                    8881mm         TRAP    #15
000055A8  103C 0003               8882mm         MOVE.B  #3,D0          
000055AC  4E4F                    8883mm         TRAP    #15
000055AE                          8884mm         ENDM
000055AE                          8885mm         PRINTRB
000055AE  43F8 00C7               8886mm         LEA     ORB, A1     
000055B2  103C 000E               8887mm         MOVE.B  #14,D0          
000055B6  4E4F                    8888mm         TRAP    #15
000055B8                          8889mm         ENDM
000055B8  6000 03E0               8890m         BRA     COMPLETE_704   
000055BC                          8891m ADRREGPREDECSRC_704: 
000055BC                          8892mm         PRINTPD  
000055BC  43F8 00CC               8893mm         LEA     OPREDEC, A1     
000055C0  103C 000E               8894mm         MOVE.B  #14,D0          
000055C4  4E4F                    8895mm         TRAP    #15
000055C6                          8896mm         ENDM
000055C6                          8897mm         PRINTLB
000055C6  43F8 00C5               8898mm         LEA     OLB, A1     
000055CA  103C 000E               8899mm         MOVE.B  #14,D0          
000055CE  4E4F                    8900mm         TRAP    #15
000055D0                          8901mm         ENDM
000055D0                          8902mm         PRINTANSRC D3  
000055D0  3203                    8903mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000055D2  E149                    8904mm         LSL     #$08, D1
000055D4  EB49                    8905mm         LSL     #$05, D1
000055D6  E049                    8906mm         LSR     #$08, D1
000055D8  EA49                    8907mm         LSR     #$05, D1
000055DA  43F8 00C3               8908mm         LEA     OAN, A1     
000055DE  103C 000E               8909mm         MOVE.B  #14,D0          
000055E2  4E4F                    8910mm         TRAP    #15
000055E4  103C 0003               8911mm         MOVE.B  #3,D0          
000055E8  4E4F                    8912mm         TRAP    #15
000055EA                          8913mm         ENDM
000055EA                          8914mm         PRINTRB
000055EA  43F8 00C7               8915mm         LEA     ORB, A1     
000055EE  103C 000E               8916mm         MOVE.B  #14,D0          
000055F2  4E4F                    8917mm         TRAP    #15
000055F4                          8918mm         ENDM
000055F4  6000 03A4               8919m         BRA     COMPLETE_704
000055F8                          8920m        
000055F8                          8921m ADRABSOLUTE_704:
000055F8  BC3C 0001               8922m         CMP.B   #$01, D6
000055FC  6600 0018               8923m         BNE     ADRABSOLUTEDST_704 
00005600                          8924m         
00005600  3A03                    8925m         MOVE.W  D3, D5
00005602  0803 0002               8926m         BTST    #2, D3
00005606  6600 0024               8927m         BNE     ADRIMMEDIATE_704
0000560A  0803 0000               8928m         BTST    #0, D3
0000560E  6600 027A               8929m         BNE     ADRABSOLUTEL_704
00005612  6000 01DA               8930m         BRA     ADRABSOLUTEW_704
00005616                          8931m ADRABSOLUTEDST_704:
00005616  3A03                    8932m         MOVE.W  D3, D5
00005618  0803 000B               8933m         BTST    #$B, D3
0000561C  6600 000E               8934m         BNE     ADRIMMEDIATE_704
00005620  0803 0009               8935m         BTST    #$09, D3
00005624  6600 0264               8936m         BNE     ADRABSOLUTEL_704
00005628  6000 01C4               8937m         BRA     ADRABSOLUTEW_704
0000562C                          8938m ADRIMMEDIATE_704:
0000562C  BE3C 0001               8939m         CMP.B   #1, D7
00005630  6700 009E               8940m         BEQ     ADRIMMEDIATEL_704
00005634                          8941m ADRIMMEDIATEW_704:
00005634  361A                    8942m         MOVE.W  (A2)+, D3
00005636                          8943mm         PRINTHASH
00005636  103C 0006               8944mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000563A  323C 0023               8945mm         MOVE.W  #35, D1     ; AN = SIGN
0000563E  4E4F                    8946mm         TRAP    #15         ; OUTPUT = SIGN
00005640                          8947mm         ENDM
00005640                          8948mm         PRINTSIGN
00005640  103C 0006               8949mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005644  323C 0024               8950mm         MOVE.W  #36, D1     ; AN = SIGN
00005648  4E4F                    8951mm         TRAP    #15         ; OUTPUT = SIGN
0000564A                          8952mm         ENDM
0000564A                          8953mm         ADROUT
0000564A  3212                    8954mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000564C  E049                    8955mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000564E  E849                    8956mm         LSR.W   #4, D1      
00005650                          8957mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005650  0C01 0009               8958mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005654  6E00 000A               8959mmm         BGT     ALPHA_734
00005658  0601 0030               8960mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000565C  6000 0006               8961mmm         BRA     DONE_734
00005660  0601 0037               8962mmm ALPHA_734: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005664  4E71                    8963mmm DONE_734: NOP
00005666                          8964mmm         ENDM
00005666  4E4F                    8965mm         TRAP    #15         ; EXECUTE OUTPUT
00005668                          8966mm         
00005668  3212                    8967mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000566A  E949                    8968mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000566C  E049                    8969mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000566E  E849                    8970mm         LSR.W   #4, D1      
00005670                          8971mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005670  0C01 0009               8972mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005674  6E00 000A               8973mmm         BGT     ALPHA_735
00005678  0601 0030               8974mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000567C  6000 0006               8975mmm         BRA     DONE_735
00005680  0601 0037               8976mmm ALPHA_735: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005684  4E71                    8977mmm DONE_735: NOP
00005686                          8978mmm         ENDM
00005686  4E4F                    8979mm         TRAP    #15         ; EXECUTE OUTPUT
00005688                          8980mm         
00005688  3212                    8981mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000568A  E149                    8982mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000568C  E049                    8983mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000568E  E849                    8984mm         LSR.W   #4, D1      
00005690                          8985mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005690  0C01 0009               8986mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005694  6E00 000A               8987mmm         BGT     ALPHA_736
00005698  0601 0030               8988mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000569C  6000 0006               8989mmm         BRA     DONE_736
000056A0  0601 0037               8990mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056A4  4E71                    8991mmm DONE_736: NOP
000056A6                          8992mmm         ENDM
000056A6  4E4F                    8993mm         TRAP    #15         ; EXECUTE OUTPUT
000056A8                          8994mm         
000056A8  3212                    8995mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056AA  E149                    8996mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056AC  E949                    8997mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000056AE  E049                    8998mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056B0  E849                    8999mm         LSR.W   #4, D1      
000056B2                          9000mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056B2  0C01 0009               9001mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056B6  6E00 000A               9002mmm         BGT     ALPHA_737
000056BA  0601 0030               9003mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056BE  6000 0006               9004mmm         BRA     DONE_737
000056C2  0601 0037               9005mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056C6  4E71                    9006mmm DONE_737: NOP
000056C8                          9007mmm         ENDM
000056C8  4E4F                    9008mm         TRAP    #15         ; EXECUTE OUTPUT       
000056CA                          9009mm         ENDM 
000056CA  3605                    9010m         MOVE.W  D5, D3
000056CC  6000 02CC               9011m         BRA     COMPLETE_704
000056D0                          9012m ADRIMMEDIATEL_704:
000056D0  361A                    9013m         MOVE.W  (A2)+, D3
000056D2                          9014mm         PRINTHASH
000056D2  103C 0006               9015mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000056D6  323C 0023               9016mm         MOVE.W  #35, D1     ; AN = SIGN
000056DA  4E4F                    9017mm         TRAP    #15         ; OUTPUT = SIGN
000056DC                          9018mm         ENDM
000056DC                          9019mm         PRINTSIGN
000056DC  103C 0006               9020mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000056E0  323C 0024               9021mm         MOVE.W  #36, D1     ; AN = SIGN
000056E4  4E4F                    9022mm         TRAP    #15         ; OUTPUT = SIGN
000056E6                          9023mm         ENDM
000056E6                          9024mm         ADROUT 
000056E6  3212                    9025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056E8  E049                    9026mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056EA  E849                    9027mm         LSR.W   #4, D1      
000056EC                          9028mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056EC  0C01 0009               9029mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056F0  6E00 000A               9030mmm         BGT     ALPHA_741
000056F4  0601 0030               9031mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056F8  6000 0006               9032mmm         BRA     DONE_741
000056FC  0601 0037               9033mmm ALPHA_741: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005700  4E71                    9034mmm DONE_741: NOP
00005702                          9035mmm         ENDM
00005702  4E4F                    9036mm         TRAP    #15         ; EXECUTE OUTPUT
00005704                          9037mm         
00005704  3212                    9038mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005706  E949                    9039mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005708  E049                    9040mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000570A  E849                    9041mm         LSR.W   #4, D1      
0000570C                          9042mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000570C  0C01 0009               9043mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005710  6E00 000A               9044mmm         BGT     ALPHA_742
00005714  0601 0030               9045mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005718  6000 0006               9046mmm         BRA     DONE_742
0000571C  0601 0037               9047mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005720  4E71                    9048mmm DONE_742: NOP
00005722                          9049mmm         ENDM
00005722  4E4F                    9050mm         TRAP    #15         ; EXECUTE OUTPUT
00005724                          9051mm         
00005724  3212                    9052mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005726  E149                    9053mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005728  E049                    9054mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000572A  E849                    9055mm         LSR.W   #4, D1      
0000572C                          9056mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000572C  0C01 0009               9057mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005730  6E00 000A               9058mmm         BGT     ALPHA_743
00005734  0601 0030               9059mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005738  6000 0006               9060mmm         BRA     DONE_743
0000573C  0601 0037               9061mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005740  4E71                    9062mmm DONE_743: NOP
00005742                          9063mmm         ENDM
00005742  4E4F                    9064mm         TRAP    #15         ; EXECUTE OUTPUT
00005744                          9065mm         
00005744  3212                    9066mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005746  E149                    9067mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005748  E949                    9068mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000574A  E049                    9069mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000574C  E849                    9070mm         LSR.W   #4, D1      
0000574E                          9071mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000574E  0C01 0009               9072mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005752  6E00 000A               9073mmm         BGT     ALPHA_744
00005756  0601 0030               9074mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000575A  6000 0006               9075mmm         BRA     DONE_744
0000575E  0601 0037               9076mmm ALPHA_744: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005762  4E71                    9077mmm DONE_744: NOP
00005764                          9078mmm         ENDM
00005764  4E4F                    9079mm         TRAP    #15         ; EXECUTE OUTPUT       
00005766                          9080mm         ENDM 
00005766  361A                    9081m         MOVE.W  (A2)+, D3
00005768                          9082mm         ADROUT
00005768  3212                    9083mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000576A  E049                    9084mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000576C  E849                    9085mm         LSR.W   #4, D1      
0000576E                          9086mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000576E  0C01 0009               9087mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005772  6E00 000A               9088mmm         BGT     ALPHA_746
00005776  0601 0030               9089mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000577A  6000 0006               9090mmm         BRA     DONE_746
0000577E  0601 0037               9091mmm ALPHA_746: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005782  4E71                    9092mmm DONE_746: NOP
00005784                          9093mmm         ENDM
00005784  4E4F                    9094mm         TRAP    #15         ; EXECUTE OUTPUT
00005786                          9095mm         
00005786  3212                    9096mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005788  E949                    9097mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000578A  E049                    9098mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000578C  E849                    9099mm         LSR.W   #4, D1      
0000578E                          9100mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000578E  0C01 0009               9101mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005792  6E00 000A               9102mmm         BGT     ALPHA_747
00005796  0601 0030               9103mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000579A  6000 0006               9104mmm         BRA     DONE_747
0000579E  0601 0037               9105mmm ALPHA_747: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057A2  4E71                    9106mmm DONE_747: NOP
000057A4                          9107mmm         ENDM
000057A4  4E4F                    9108mm         TRAP    #15         ; EXECUTE OUTPUT
000057A6                          9109mm         
000057A6  3212                    9110mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057A8  E149                    9111mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057AA  E049                    9112mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057AC  E849                    9113mm         LSR.W   #4, D1      
000057AE                          9114mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057AE  0C01 0009               9115mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057B2  6E00 000A               9116mmm         BGT     ALPHA_748
000057B6  0601 0030               9117mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057BA  6000 0006               9118mmm         BRA     DONE_748
000057BE  0601 0037               9119mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057C2  4E71                    9120mmm DONE_748: NOP
000057C4                          9121mmm         ENDM
000057C4  4E4F                    9122mm         TRAP    #15         ; EXECUTE OUTPUT
000057C6                          9123mm         
000057C6  3212                    9124mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057C8  E149                    9125mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057CA  E949                    9126mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000057CC  E049                    9127mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057CE  E849                    9128mm         LSR.W   #4, D1      
000057D0                          9129mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057D0  0C01 0009               9130mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057D4  6E00 000A               9131mmm         BGT     ALPHA_749
000057D8  0601 0030               9132mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057DC  6000 0006               9133mmm         BRA     DONE_749
000057E0  0601 0037               9134mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057E4  4E71                    9135mmm DONE_749: NOP
000057E6                          9136mmm         ENDM
000057E6  4E4F                    9137mm         TRAP    #15         ; EXECUTE OUTPUT       
000057E8                          9138mm         ENDM 
000057E8  3605                    9139m         MOVE.W  D5, D3
000057EA  6000 01AE               9140m         BRA     COMPLETE_704 
000057EE                          9141m ADRABSOLUTEW_704:     
000057EE  361A                    9142m         MOVE.W  (A2)+, D3
000057F0                          9143mm         PRINTSIGN
000057F0  103C 0006               9144mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057F4  323C 0024               9145mm         MOVE.W  #36, D1     ; AN = SIGN
000057F8  4E4F                    9146mm         TRAP    #15         ; OUTPUT = SIGN
000057FA                          9147mm         ENDM
000057FA                          9148mm         PRINTSIGN
000057FA  103C 0006               9149mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057FE  323C 0024               9150mm         MOVE.W  #36, D1     ; AN = SIGN
00005802  4E4F                    9151mm         TRAP    #15         ; OUTPUT = SIGN
00005804                          9152mm         ENDM
00005804                          9153mm         ADROUT
00005804  3212                    9154mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005806  E049                    9155mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005808  E849                    9156mm         LSR.W   #4, D1      
0000580A                          9157mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000580A  0C01 0009               9158mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000580E  6E00 000A               9159mmm         BGT     ALPHA_753
00005812  0601 0030               9160mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005816  6000 0006               9161mmm         BRA     DONE_753
0000581A  0601 0037               9162mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000581E  4E71                    9163mmm DONE_753: NOP
00005820                          9164mmm         ENDM
00005820  4E4F                    9165mm         TRAP    #15         ; EXECUTE OUTPUT
00005822                          9166mm         
00005822  3212                    9167mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005824  E949                    9168mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005826  E049                    9169mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005828  E849                    9170mm         LSR.W   #4, D1      
0000582A                          9171mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000582A  0C01 0009               9172mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000582E  6E00 000A               9173mmm         BGT     ALPHA_754
00005832  0601 0030               9174mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005836  6000 0006               9175mmm         BRA     DONE_754
0000583A  0601 0037               9176mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000583E  4E71                    9177mmm DONE_754: NOP
00005840                          9178mmm         ENDM
00005840  4E4F                    9179mm         TRAP    #15         ; EXECUTE OUTPUT
00005842                          9180mm         
00005842  3212                    9181mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005844  E149                    9182mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005846  E049                    9183mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005848  E849                    9184mm         LSR.W   #4, D1      
0000584A                          9185mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000584A  0C01 0009               9186mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000584E  6E00 000A               9187mmm         BGT     ALPHA_755
00005852  0601 0030               9188mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005856  6000 0006               9189mmm         BRA     DONE_755
0000585A  0601 0037               9190mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000585E  4E71                    9191mmm DONE_755: NOP
00005860                          9192mmm         ENDM
00005860  4E4F                    9193mm         TRAP    #15         ; EXECUTE OUTPUT
00005862                          9194mm         
00005862  3212                    9195mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005864  E149                    9196mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005866  E949                    9197mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005868  E049                    9198mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000586A  E849                    9199mm         LSR.W   #4, D1      
0000586C                          9200mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000586C  0C01 0009               9201mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005870  6E00 000A               9202mmm         BGT     ALPHA_756
00005874  0601 0030               9203mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005878  6000 0006               9204mmm         BRA     DONE_756
0000587C  0601 0037               9205mmm ALPHA_756: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005880  4E71                    9206mmm DONE_756: NOP
00005882                          9207mmm         ENDM
00005882  4E4F                    9208mm         TRAP    #15         ; EXECUTE OUTPUT       
00005884                          9209mm         ENDM 
00005884  3605                    9210m         MOVE.W  D5, D3
00005886  6000 0112               9211m         BRA     COMPLETE_704  
0000588A                          9212m ADRABSOLUTEL_704:  
0000588A  361A                    9213m         MOVE.W  (A2)+, D3
0000588C                          9214mm         PRINTSIGN
0000588C  103C 0006               9215mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005890  323C 0024               9216mm         MOVE.W  #36, D1     ; AN = SIGN
00005894  4E4F                    9217mm         TRAP    #15         ; OUTPUT = SIGN
00005896                          9218mm         ENDM
00005896                          9219mm         ADROUT 
00005896  3212                    9220mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005898  E049                    9221mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000589A  E849                    9222mm         LSR.W   #4, D1      
0000589C                          9223mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000589C  0C01 0009               9224mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058A0  6E00 000A               9225mmm         BGT     ALPHA_759
000058A4  0601 0030               9226mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A8  6000 0006               9227mmm         BRA     DONE_759
000058AC  0601 0037               9228mmm ALPHA_759: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058B0  4E71                    9229mmm DONE_759: NOP
000058B2                          9230mmm         ENDM
000058B2  4E4F                    9231mm         TRAP    #15         ; EXECUTE OUTPUT
000058B4                          9232mm         
000058B4  3212                    9233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B6  E949                    9234mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000058B8  E049                    9235mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058BA  E849                    9236mm         LSR.W   #4, D1      
000058BC                          9237mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058BC  0C01 0009               9238mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058C0  6E00 000A               9239mmm         BGT     ALPHA_760
000058C4  0601 0030               9240mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C8  6000 0006               9241mmm         BRA     DONE_760
000058CC  0601 0037               9242mmm ALPHA_760: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058D0  4E71                    9243mmm DONE_760: NOP
000058D2                          9244mmm         ENDM
000058D2  4E4F                    9245mm         TRAP    #15         ; EXECUTE OUTPUT
000058D4                          9246mm         
000058D4  3212                    9247mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058D6  E149                    9248mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058D8  E049                    9249mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058DA  E849                    9250mm         LSR.W   #4, D1      
000058DC                          9251mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058DC  0C01 0009               9252mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058E0  6E00 000A               9253mmm         BGT     ALPHA_761
000058E4  0601 0030               9254mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058E8  6000 0006               9255mmm         BRA     DONE_761
000058EC  0601 0037               9256mmm ALPHA_761: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058F0  4E71                    9257mmm DONE_761: NOP
000058F2                          9258mmm         ENDM
000058F2  4E4F                    9259mm         TRAP    #15         ; EXECUTE OUTPUT
000058F4                          9260mm         
000058F4  3212                    9261mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058F6  E149                    9262mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058F8  E949                    9263mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000058FA  E049                    9264mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058FC  E849                    9265mm         LSR.W   #4, D1      
000058FE                          9266mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058FE  0C01 0009               9267mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005902  6E00 000A               9268mmm         BGT     ALPHA_762
00005906  0601 0030               9269mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000590A  6000 0006               9270mmm         BRA     DONE_762
0000590E  0601 0037               9271mmm ALPHA_762: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005912  4E71                    9272mmm DONE_762: NOP
00005914                          9273mmm         ENDM
00005914  4E4F                    9274mm         TRAP    #15         ; EXECUTE OUTPUT       
00005916                          9275mm         ENDM 
00005916  361A                    9276m         MOVE.W  (A2)+, D3
00005918                          9277mm         ADROUT
00005918  3212                    9278mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000591A  E049                    9279mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000591C  E849                    9280mm         LSR.W   #4, D1      
0000591E                          9281mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000591E  0C01 0009               9282mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005922  6E00 000A               9283mmm         BGT     ALPHA_764
00005926  0601 0030               9284mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000592A  6000 0006               9285mmm         BRA     DONE_764
0000592E  0601 0037               9286mmm ALPHA_764: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005932  4E71                    9287mmm DONE_764: NOP
00005934                          9288mmm         ENDM
00005934  4E4F                    9289mm         TRAP    #15         ; EXECUTE OUTPUT
00005936                          9290mm         
00005936  3212                    9291mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005938  E949                    9292mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000593A  E049                    9293mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000593C  E849                    9294mm         LSR.W   #4, D1      
0000593E                          9295mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000593E  0C01 0009               9296mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005942  6E00 000A               9297mmm         BGT     ALPHA_765
00005946  0601 0030               9298mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000594A  6000 0006               9299mmm         BRA     DONE_765
0000594E  0601 0037               9300mmm ALPHA_765: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005952  4E71                    9301mmm DONE_765: NOP
00005954                          9302mmm         ENDM
00005954  4E4F                    9303mm         TRAP    #15         ; EXECUTE OUTPUT
00005956                          9304mm         
00005956  3212                    9305mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005958  E149                    9306mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000595A  E049                    9307mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000595C  E849                    9308mm         LSR.W   #4, D1      
0000595E                          9309mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000595E  0C01 0009               9310mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005962  6E00 000A               9311mmm         BGT     ALPHA_766
00005966  0601 0030               9312mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000596A  6000 0006               9313mmm         BRA     DONE_766
0000596E  0601 0037               9314mmm ALPHA_766: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005972  4E71                    9315mmm DONE_766: NOP
00005974                          9316mmm         ENDM
00005974  4E4F                    9317mm         TRAP    #15         ; EXECUTE OUTPUT
00005976                          9318mm         
00005976  3212                    9319mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005978  E149                    9320mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000597A  E949                    9321mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000597C  E049                    9322mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000597E  E849                    9323mm         LSR.W   #4, D1      
00005980                          9324mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005980  0C01 0009               9325mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005984  6E00 000A               9326mmm         BGT     ALPHA_767
00005988  0601 0030               9327mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000598C  6000 0006               9328mmm         BRA     DONE_767
00005990  0601 0037               9329mmm ALPHA_767: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005994  4E71                    9330mmm DONE_767: NOP
00005996                          9331mmm         ENDM
00005996  4E4F                    9332mm         TRAP    #15         ; EXECUTE OUTPUT       
00005998                          9333mm         ENDM 
00005998  3605                    9334m         MOVE.W  D5, D3
0000599A                          9335m 
0000599A                          9336m COMPLETE_704:  ; OPCODE HAS BEEN VERIFIED
0000599A                          9337m         ENDM
0000599A                          9338m         printComma
0000599A  43F8 00C9               9339m         LEA     OCOMMA, A1     
0000599E  103C 000E               9340m         MOVE.B  #14,D0          
000059A2  4E4F                    9341m         TRAP    #15
000059A4                          9342m         ENDM
000059A4                          9343m         printDnDest     (A2)
000059A4  3212                    9344m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000059A6  E949                    9345m         LSL     #$04, D1
000059A8  E049                    9346m         LSR     #$08, D1
000059AA  EA49                    9347m         LSR     #$05, D1
000059AC  43F8 00C1               9348m         LEA     ODN, A1     
000059B0  103C 000E               9349m         MOVE.B  #14,D0          
000059B4  4E4F                    9350m         TRAP    #15
000059B6  103C 0003               9351m         MOVE.B  #3,D0          
000059BA  4E4F                    9352m         TRAP    #15
000059BC                          9353m         ENDM
000059BC                          9354  decodeANDcomp:
000059BC  4E75                    9355          RTS                ; Return from decodeANDcomp subroutine
000059BE                          9356  
000059BE                          9357  
000059BE                          9358  ; ------------------------------------------------------------
000059BE                          9359  ; 10. "decodeNOT" subroutine
000059BE                          9360  ; AUTHOR
000059BE                          9361  ;
000059BE                          9362  ; TODO: DESCRIPTION
000059BE                          9363  ; ------------------------------------------------------------
000059BE                          9364  decodeNOT:
000059BE                          9365m         verifyOpcode    pNOT, (A2)
000059BE  43F8 016D               9366m         LEA     PNOT, A1      ; INPUT PATTERN STRING
000059C2  3612                    9367m         MOVE.W  (A2), D3      ; INPUT VALUE
000059C4  123C 000F               9368m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000059C8                          9369m         
000059C8                          9370m LOOP_770: 
000059C8  0C11 0030               9371m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000059CC  6700 000E               9372m         BEQ     CHECKFOR0_770
000059D0  0C11 0031               9373m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000059D4  6700 0010               9374m         BEQ     CHECKFOR1_770
000059D8  6000 0012               9375m         BRA     NEXT_770      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000059DC                          9376m         
000059DC                          9377m CHECKFOR0_770: 
000059DC  0303                    9378m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000059DE  6600 1170               9379m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000059E2  6000 0008               9380m         BRA     NEXT_770
000059E6                          9381m 
000059E6                          9382m CHECKFOR1_770:
000059E6  0303                    9383m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000059E8  6700 1166               9384m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000059EC                          9385m 
000059EC                          9386m NEXT_770: 
000059EC  B23C 0000               9387m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000059F0  6700 0008               9388m         BEQ     COMPLETE_770  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000059F4  5301                    9389m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000059F6  1819                    9390m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000059F8  60CE                    9391m         BRA     LOOP_770      ; BEGIN LOOP AGAIN
000059FA                          9392m 
000059FA                          9393m COMPLETE_770:  ; OPCODE HAS BEEN VERIFIED
000059FA                          9394m         ENDM
000059FA  43F8 0089               9395          LEA     oNOT, A1     
000059FE  103C 000E               9396          MOVE.B  #14,D0          
00005A02  4E4F                    9397          TRAP    #15
00005A04                          9398m         printSizeLow       (A2)
00005A04  3612                    9399m         MOVE.W  (A2), D3      ; INPUT VALUE      
00005A06                          9400m CHECKFORB_771: 
00005A06  0803 0006               9401m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00005A0A  6600 0010               9402m         BNE     CHECKFORW_771  ; IF NOT GO TO WORD SIZE
00005A0E  43F8 00B5               9403m         LEA     OBSIZE, A1     
00005A12  103C 000E               9404m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005A16  4E4F                    9405m         TRAP    #15
00005A18  6000 0022               9406m         BRA     COMPLETE_771      
00005A1C                          9407m CHECKFORW_771: 
00005A1C  0803 0007               9408m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00005A20  6600 0010               9409m         BNE     CHECKFORL_771 ; IF NOT GO TO LONGWORD SIZE
00005A24  43F8 00B9               9410m         LEA     OWSIZE, A1     
00005A28  103C 000E               9411m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00005A2C  4E4F                    9412m         TRAP    #15
00005A2E  6000 000C               9413m         BRA     COMPLETE_771  
00005A32                          9414m CHECKFORL_771:
00005A32  43F8 00BD               9415m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00005A36  103C 000E               9416m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005A3A  4E4F                    9417m         TRAP    #15
00005A3C                          9418m COMPLETE_771:  ; SIZE HAS BEEN PRINTED
00005A3C                          9419m         ENDM
00005A3C                          9420m         prepareAdrMode  #$1, (A2)
00005A3C  3C3C 0001               9421m         MOVE.W  #$1, D6      ; INPUT VALUE
00005A40  3212                    9422m         MOVE.W  (A2), D1
00005A42  BC3C 0001               9423m         CMP.B   #$01, D6
00005A46  6700 000C               9424m         BEQ     ADRSOURCE_772    
00005A4A                          9425m ADRDEST_772:
00005A4A  EF49                    9426m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005A4C  E049                    9427m         LSR     #$08, D1
00005A4E  EA49                    9428m         LSR     #$05, D1
00005A50  6000 000A               9429m         BRA     COMPLETE_772 
00005A54                          9430m ADRSOURCE_772:                
00005A54  E149                    9431m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00005A56  E549                    9432m         LSL     #$02, D1
00005A58  E049                    9433m         LSR     #$08, D1
00005A5A  EA49                    9434m         LSR     #$05, D1
00005A5C                          9435m COMPLETE_772:  ; OPCODE HAS BEEN VERIFIED
00005A5C                          9436m         ENDM        
00005A5C                          9437m         decodeAdrMode   (A2), D1
00005A5C  3612                    9438m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005A5E  3201                    9439m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005A60                          9440m 
00005A60  B23C 0001               9441m         CMP.B   #$01, D1
00005A64  6700 0066               9442m         BEQ     ADRREGDIRECT_773    
00005A68  B23C 0002               9443m         CMP.B   #$02, D1
00005A6C  6700 00A0               9444m         BEQ     ADRREGINDIRECT_773  
00005A70  B23C 0003               9445m         CMP.B   #$03, D1
00005A74  6700 0102               9446m         BEQ     ADRREGPOSTINC_773  
00005A78  B23C 0004               9447m         CMP.B   #$04, D1
00005A7C  6700 0178               9448m         BEQ     ADRREGPREDEC_773
00005A80  B23C 0007               9449m         CMP.B   #$07, D1
00005A84  6700 01EE               9450m         BEQ     ADRABSOLUTE_773    
00005A88                          9451m         
00005A88                          9452m DATAREGDIRECT_773: 
00005A88  BC3C 0001               9453m         CMP.B   #$01, D6
00005A8C  6700 001E               9454m         BEQ     DATAREGDIRECTSRC_773   
00005A90                          9455m DATAREGDIRECTDEST_773: 
00005A90                          9456mm         PRINTDNDEST D3 
00005A90  3203                    9457mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005A92  E949                    9458mm         LSL     #$04, D1
00005A94  E049                    9459mm         LSR     #$08, D1
00005A96  EA49                    9460mm         LSR     #$05, D1
00005A98  43F8 00C1               9461mm         LEA     ODN, A1     
00005A9C  103C 000E               9462mm         MOVE.B  #14,D0          
00005AA0  4E4F                    9463mm         TRAP    #15
00005AA2  103C 0003               9464mm         MOVE.B  #3,D0          
00005AA6  4E4F                    9465mm         TRAP    #15
00005AA8                          9466mm         ENDM
00005AA8  6000 056C               9467m         BRA     COMPLETE_773 
00005AAC                          9468m DATAREGDIRECTSRC_773: 
00005AAC                          9469mm         PRINTDNSRC D3 
00005AAC  4281                    9470mm         CLR.L   D1
00005AAE  3203                    9471mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005AB0  E149                    9472mm         LSL     #$08, D1
00005AB2  EB49                    9473mm         LSL     #$05, D1
00005AB4  E049                    9474mm         LSR     #$08, D1
00005AB6  EA49                    9475mm         LSR     #$05, D1
00005AB8  43F8 00C1               9476mm         LEA     ODN, A1     
00005ABC  103C 000E               9477mm         MOVE.B  #14,D0          
00005AC0  4E4F                    9478mm         TRAP    #15
00005AC2  103C 0003               9479mm         MOVE.B  #3,D0          
00005AC6  4E4F                    9480mm         TRAP    #15
00005AC8                          9481mm         ENDM
00005AC8  6000 054C               9482m         BRA     COMPLETE_773   
00005ACC                          9483m         
00005ACC                          9484m ADRREGDIRECT_773: 
00005ACC  BC3C 0001               9485m         CMP.B   #$01, D6
00005AD0  6700 001E               9486m         BEQ     ADRREGDIRECTSRC_773   
00005AD4                          9487m ADRREGDIRECTDEST_773:
00005AD4                          9488mm         PRINTANDEST D3
00005AD4  3203                    9489mm         MOVE.W  D3, D1
00005AD6  E949                    9490mm         LSL     #$04, D1
00005AD8  E049                    9491mm         LSR     #$08, D1
00005ADA  EA49                    9492mm         LSR     #$05, D1
00005ADC  43F8 00C3               9493mm         LEA     OAN, A1     
00005AE0  103C 000E               9494mm         MOVE.B  #14,D0          
00005AE4  4E4F                    9495mm         TRAP    #15
00005AE6  103C 0003               9496mm         MOVE.B  #3,D0          
00005AEA  4E4F                    9497mm         TRAP    #15
00005AEC                          9498mm         ENDM
00005AEC  6000 0528               9499m         BRA     COMPLETE_773   
00005AF0                          9500m ADRREGDIRECTSRC_773:
00005AF0                          9501mm         PRINTANSRC D3
00005AF0  3203                    9502mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005AF2  E149                    9503mm         LSL     #$08, D1
00005AF4  EB49                    9504mm         LSL     #$05, D1
00005AF6  E049                    9505mm         LSR     #$08, D1
00005AF8  EA49                    9506mm         LSR     #$05, D1
00005AFA  43F8 00C3               9507mm         LEA     OAN, A1     
00005AFE  103C 000E               9508mm         MOVE.B  #14,D0          
00005B02  4E4F                    9509mm         TRAP    #15
00005B04  103C 0003               9510mm         MOVE.B  #3,D0          
00005B08  4E4F                    9511mm         TRAP    #15
00005B0A                          9512mm         ENDM
00005B0A  6000 050A               9513m         BRA     COMPLETE_773   
00005B0E                          9514m        
00005B0E                          9515m ADRREGINDIRECT_773:   
00005B0E  BC3C 0001               9516m         CMP.B   #$01, D6
00005B12  6700 0032               9517m         BEQ     ADRREGINDIRECTSRC_773   
00005B16                          9518m ADRREGINDIRECTDEST_773:
00005B16                          9519mm         PRINTLB
00005B16  43F8 00C5               9520mm         LEA     OLB, A1     
00005B1A  103C 000E               9521mm         MOVE.B  #14,D0          
00005B1E  4E4F                    9522mm         TRAP    #15
00005B20                          9523mm         ENDM
00005B20                          9524mm         PRINTANDEST D3  
00005B20  3203                    9525mm         MOVE.W  D3, D1
00005B22  E949                    9526mm         LSL     #$04, D1
00005B24  E049                    9527mm         LSR     #$08, D1
00005B26  EA49                    9528mm         LSR     #$05, D1
00005B28  43F8 00C3               9529mm         LEA     OAN, A1     
00005B2C  103C 000E               9530mm         MOVE.B  #14,D0          
00005B30  4E4F                    9531mm         TRAP    #15
00005B32  103C 0003               9532mm         MOVE.B  #3,D0          
00005B36  4E4F                    9533mm         TRAP    #15
00005B38                          9534mm         ENDM
00005B38                          9535mm         PRINTRB
00005B38  43F8 00C7               9536mm         LEA     ORB, A1     
00005B3C  103C 000E               9537mm         MOVE.B  #14,D0          
00005B40  4E4F                    9538mm         TRAP    #15
00005B42                          9539mm         ENDM
00005B42  6000 04D2               9540m         BRA     COMPLETE_773     
00005B46                          9541m ADRREGINDIRECTSRC_773:   
00005B46                          9542mm         PRINTLB
00005B46  43F8 00C5               9543mm         LEA     OLB, A1     
00005B4A  103C 000E               9544mm         MOVE.B  #14,D0          
00005B4E  4E4F                    9545mm         TRAP    #15
00005B50                          9546mm         ENDM
00005B50                          9547mm         PRINTANSRC D3  
00005B50  3203                    9548mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005B52  E149                    9549mm         LSL     #$08, D1
00005B54  EB49                    9550mm         LSL     #$05, D1
00005B56  E049                    9551mm         LSR     #$08, D1
00005B58  EA49                    9552mm         LSR     #$05, D1
00005B5A  43F8 00C3               9553mm         LEA     OAN, A1     
00005B5E  103C 000E               9554mm         MOVE.B  #14,D0          
00005B62  4E4F                    9555mm         TRAP    #15
00005B64  103C 0003               9556mm         MOVE.B  #3,D0          
00005B68  4E4F                    9557mm         TRAP    #15
00005B6A                          9558mm         ENDM
00005B6A                          9559mm         PRINTRB
00005B6A  43F8 00C7               9560mm         LEA     ORB, A1     
00005B6E  103C 000E               9561mm         MOVE.B  #14,D0          
00005B72  4E4F                    9562mm         TRAP    #15
00005B74                          9563mm         ENDM
00005B74  6000 04A0               9564m         BRA     COMPLETE_773   
00005B78                          9565m         
00005B78                          9566m ADRREGPOSTINC_773:   
00005B78  BC3C 0001               9567m         CMP.B   #$01, D6
00005B7C  6700 003C               9568m         BEQ     ADRREGPOSTINCSRC_773   
00005B80                          9569m ADRREGPOSTINCDEST_773: 
00005B80                          9570mm         PRINTLB
00005B80  43F8 00C5               9571mm         LEA     OLB, A1     
00005B84  103C 000E               9572mm         MOVE.B  #14,D0          
00005B88  4E4F                    9573mm         TRAP    #15
00005B8A                          9574mm         ENDM
00005B8A                          9575mm         PRINTANDEST D3  
00005B8A  3203                    9576mm         MOVE.W  D3, D1
00005B8C  E949                    9577mm         LSL     #$04, D1
00005B8E  E049                    9578mm         LSR     #$08, D1
00005B90  EA49                    9579mm         LSR     #$05, D1
00005B92  43F8 00C3               9580mm         LEA     OAN, A1     
00005B96  103C 000E               9581mm         MOVE.B  #14,D0          
00005B9A  4E4F                    9582mm         TRAP    #15
00005B9C  103C 0003               9583mm         MOVE.B  #3,D0          
00005BA0  4E4F                    9584mm         TRAP    #15
00005BA2                          9585mm         ENDM
00005BA2                          9586mm         PRINTRB
00005BA2  43F8 00C7               9587mm         LEA     ORB, A1     
00005BA6  103C 000E               9588mm         MOVE.B  #14,D0          
00005BAA  4E4F                    9589mm         TRAP    #15
00005BAC                          9590mm         ENDM
00005BAC                          9591mm         PRINTPI
00005BAC  43F8 00CE               9592mm         LEA     OPSTINC, A1     
00005BB0  103C 000E               9593mm         MOVE.B  #14,D0          
00005BB4  4E4F                    9594mm         TRAP    #15
00005BB6                          9595mm         ENDM
00005BB6  6000 045E               9596m         BRA     COMPLETE_773  
00005BBA                          9597m ADRREGPOSTINCSRC_773:           
00005BBA                          9598mm         PRINTLB
00005BBA  43F8 00C5               9599mm         LEA     OLB, A1     
00005BBE  103C 000E               9600mm         MOVE.B  #14,D0          
00005BC2  4E4F                    9601mm         TRAP    #15
00005BC4                          9602mm         ENDM
00005BC4                          9603mm         PRINTANSRC D3  
00005BC4  3203                    9604mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BC6  E149                    9605mm         LSL     #$08, D1
00005BC8  EB49                    9606mm         LSL     #$05, D1
00005BCA  E049                    9607mm         LSR     #$08, D1
00005BCC  EA49                    9608mm         LSR     #$05, D1
00005BCE  43F8 00C3               9609mm         LEA     OAN, A1     
00005BD2  103C 000E               9610mm         MOVE.B  #14,D0          
00005BD6  4E4F                    9611mm         TRAP    #15
00005BD8  103C 0003               9612mm         MOVE.B  #3,D0          
00005BDC  4E4F                    9613mm         TRAP    #15
00005BDE                          9614mm         ENDM
00005BDE                          9615mm         PRINTRB
00005BDE  43F8 00C7               9616mm         LEA     ORB, A1     
00005BE2  103C 000E               9617mm         MOVE.B  #14,D0          
00005BE6  4E4F                    9618mm         TRAP    #15
00005BE8                          9619mm         ENDM
00005BE8                          9620mm         PRINTPI
00005BE8  43F8 00CE               9621mm         LEA     OPSTINC, A1     
00005BEC  103C 000E               9622mm         MOVE.B  #14,D0          
00005BF0  4E4F                    9623mm         TRAP    #15
00005BF2                          9624mm         ENDM
00005BF2  6000 0422               9625m         BRA     COMPLETE_773  
00005BF6                          9626m         
00005BF6                          9627m ADRREGPREDEC_773: 
00005BF6  BC3C 0001               9628m         CMP.B   #$01, D6
00005BFA  6700 003C               9629m         BEQ     ADRREGPREDECSRC_773   
00005BFE                          9630m ADRREGPREDECDEST_773:
00005BFE                          9631mm         PRINTPD  
00005BFE  43F8 00CC               9632mm         LEA     OPREDEC, A1     
00005C02  103C 000E               9633mm         MOVE.B  #14,D0          
00005C06  4E4F                    9634mm         TRAP    #15
00005C08                          9635mm         ENDM
00005C08                          9636mm         PRINTLB
00005C08  43F8 00C5               9637mm         LEA     OLB, A1     
00005C0C  103C 000E               9638mm         MOVE.B  #14,D0          
00005C10  4E4F                    9639mm         TRAP    #15
00005C12                          9640mm         ENDM
00005C12                          9641mm         PRINTANDEST D3  
00005C12  3203                    9642mm         MOVE.W  D3, D1
00005C14  E949                    9643mm         LSL     #$04, D1
00005C16  E049                    9644mm         LSR     #$08, D1
00005C18  EA49                    9645mm         LSR     #$05, D1
00005C1A  43F8 00C3               9646mm         LEA     OAN, A1     
00005C1E  103C 000E               9647mm         MOVE.B  #14,D0          
00005C22  4E4F                    9648mm         TRAP    #15
00005C24  103C 0003               9649mm         MOVE.B  #3,D0          
00005C28  4E4F                    9650mm         TRAP    #15
00005C2A                          9651mm         ENDM
00005C2A                          9652mm         PRINTRB
00005C2A  43F8 00C7               9653mm         LEA     ORB, A1     
00005C2E  103C 000E               9654mm         MOVE.B  #14,D0          
00005C32  4E4F                    9655mm         TRAP    #15
00005C34                          9656mm         ENDM
00005C34  6000 03E0               9657m         BRA     COMPLETE_773   
00005C38                          9658m ADRREGPREDECSRC_773: 
00005C38                          9659mm         PRINTPD  
00005C38  43F8 00CC               9660mm         LEA     OPREDEC, A1     
00005C3C  103C 000E               9661mm         MOVE.B  #14,D0          
00005C40  4E4F                    9662mm         TRAP    #15
00005C42                          9663mm         ENDM
00005C42                          9664mm         PRINTLB
00005C42  43F8 00C5               9665mm         LEA     OLB, A1     
00005C46  103C 000E               9666mm         MOVE.B  #14,D0          
00005C4A  4E4F                    9667mm         TRAP    #15
00005C4C                          9668mm         ENDM
00005C4C                          9669mm         PRINTANSRC D3  
00005C4C  3203                    9670mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C4E  E149                    9671mm         LSL     #$08, D1
00005C50  EB49                    9672mm         LSL     #$05, D1
00005C52  E049                    9673mm         LSR     #$08, D1
00005C54  EA49                    9674mm         LSR     #$05, D1
00005C56  43F8 00C3               9675mm         LEA     OAN, A1     
00005C5A  103C 000E               9676mm         MOVE.B  #14,D0          
00005C5E  4E4F                    9677mm         TRAP    #15
00005C60  103C 0003               9678mm         MOVE.B  #3,D0          
00005C64  4E4F                    9679mm         TRAP    #15
00005C66                          9680mm         ENDM
00005C66                          9681mm         PRINTRB
00005C66  43F8 00C7               9682mm         LEA     ORB, A1     
00005C6A  103C 000E               9683mm         MOVE.B  #14,D0          
00005C6E  4E4F                    9684mm         TRAP    #15
00005C70                          9685mm         ENDM
00005C70  6000 03A4               9686m         BRA     COMPLETE_773
00005C74                          9687m        
00005C74                          9688m ADRABSOLUTE_773:
00005C74  BC3C 0001               9689m         CMP.B   #$01, D6
00005C78  6600 0018               9690m         BNE     ADRABSOLUTEDST_773 
00005C7C                          9691m         
00005C7C  3A03                    9692m         MOVE.W  D3, D5
00005C7E  0803 0002               9693m         BTST    #2, D3
00005C82  6600 0024               9694m         BNE     ADRIMMEDIATE_773
00005C86  0803 0000               9695m         BTST    #0, D3
00005C8A  6600 027A               9696m         BNE     ADRABSOLUTEL_773
00005C8E  6000 01DA               9697m         BRA     ADRABSOLUTEW_773
00005C92                          9698m ADRABSOLUTEDST_773:
00005C92  3A03                    9699m         MOVE.W  D3, D5
00005C94  0803 000B               9700m         BTST    #$B, D3
00005C98  6600 000E               9701m         BNE     ADRIMMEDIATE_773
00005C9C  0803 0009               9702m         BTST    #$09, D3
00005CA0  6600 0264               9703m         BNE     ADRABSOLUTEL_773
00005CA4  6000 01C4               9704m         BRA     ADRABSOLUTEW_773
00005CA8                          9705m ADRIMMEDIATE_773:
00005CA8  BE3C 0001               9706m         CMP.B   #1, D7
00005CAC  6700 009E               9707m         BEQ     ADRIMMEDIATEL_773
00005CB0                          9708m ADRIMMEDIATEW_773:
00005CB0  361A                    9709m         MOVE.W  (A2)+, D3
00005CB2                          9710mm         PRINTHASH
00005CB2  103C 0006               9711mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CB6  323C 0023               9712mm         MOVE.W  #35, D1     ; AN = SIGN
00005CBA  4E4F                    9713mm         TRAP    #15         ; OUTPUT = SIGN
00005CBC                          9714mm         ENDM
00005CBC                          9715mm         PRINTSIGN
00005CBC  103C 0006               9716mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CC0  323C 0024               9717mm         MOVE.W  #36, D1     ; AN = SIGN
00005CC4  4E4F                    9718mm         TRAP    #15         ; OUTPUT = SIGN
00005CC6                          9719mm         ENDM
00005CC6                          9720mm         ADROUT
00005CC6  3212                    9721mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CC8  E049                    9722mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CCA  E849                    9723mm         LSR.W   #4, D1      
00005CCC                          9724mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CCC  0C01 0009               9725mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CD0  6E00 000A               9726mmm         BGT     ALPHA_803
00005CD4  0601 0030               9727mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CD8  6000 0006               9728mmm         BRA     DONE_803
00005CDC  0601 0037               9729mmm ALPHA_803: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CE0  4E71                    9730mmm DONE_803: NOP
00005CE2                          9731mmm         ENDM
00005CE2  4E4F                    9732mm         TRAP    #15         ; EXECUTE OUTPUT
00005CE4                          9733mm         
00005CE4  3212                    9734mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CE6  E949                    9735mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005CE8  E049                    9736mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CEA  E849                    9737mm         LSR.W   #4, D1      
00005CEC                          9738mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CEC  0C01 0009               9739mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CF0  6E00 000A               9740mmm         BGT     ALPHA_804
00005CF4  0601 0030               9741mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CF8  6000 0006               9742mmm         BRA     DONE_804
00005CFC  0601 0037               9743mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D00  4E71                    9744mmm DONE_804: NOP
00005D02                          9745mmm         ENDM
00005D02  4E4F                    9746mm         TRAP    #15         ; EXECUTE OUTPUT
00005D04                          9747mm         
00005D04  3212                    9748mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D06  E149                    9749mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D08  E049                    9750mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D0A  E849                    9751mm         LSR.W   #4, D1      
00005D0C                          9752mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D0C  0C01 0009               9753mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D10  6E00 000A               9754mmm         BGT     ALPHA_805
00005D14  0601 0030               9755mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D18  6000 0006               9756mmm         BRA     DONE_805
00005D1C  0601 0037               9757mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D20  4E71                    9758mmm DONE_805: NOP
00005D22                          9759mmm         ENDM
00005D22  4E4F                    9760mm         TRAP    #15         ; EXECUTE OUTPUT
00005D24                          9761mm         
00005D24  3212                    9762mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D26  E149                    9763mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D28  E949                    9764mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005D2A  E049                    9765mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D2C  E849                    9766mm         LSR.W   #4, D1      
00005D2E                          9767mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D2E  0C01 0009               9768mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D32  6E00 000A               9769mmm         BGT     ALPHA_806
00005D36  0601 0030               9770mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D3A  6000 0006               9771mmm         BRA     DONE_806
00005D3E  0601 0037               9772mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D42  4E71                    9773mmm DONE_806: NOP
00005D44                          9774mmm         ENDM
00005D44  4E4F                    9775mm         TRAP    #15         ; EXECUTE OUTPUT       
00005D46                          9776mm         ENDM 
00005D46  3605                    9777m         MOVE.W  D5, D3
00005D48  6000 02CC               9778m         BRA     COMPLETE_773
00005D4C                          9779m ADRIMMEDIATEL_773:
00005D4C  361A                    9780m         MOVE.W  (A2)+, D3
00005D4E                          9781mm         PRINTHASH
00005D4E  103C 0006               9782mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005D52  323C 0023               9783mm         MOVE.W  #35, D1     ; AN = SIGN
00005D56  4E4F                    9784mm         TRAP    #15         ; OUTPUT = SIGN
00005D58                          9785mm         ENDM
00005D58                          9786mm         PRINTSIGN
00005D58  103C 0006               9787mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005D5C  323C 0024               9788mm         MOVE.W  #36, D1     ; AN = SIGN
00005D60  4E4F                    9789mm         TRAP    #15         ; OUTPUT = SIGN
00005D62                          9790mm         ENDM
00005D62                          9791mm         ADROUT 
00005D62  3212                    9792mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D64  E049                    9793mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D66  E849                    9794mm         LSR.W   #4, D1      
00005D68                          9795mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D68  0C01 0009               9796mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D6C  6E00 000A               9797mmm         BGT     ALPHA_810
00005D70  0601 0030               9798mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D74  6000 0006               9799mmm         BRA     DONE_810
00005D78  0601 0037               9800mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D7C  4E71                    9801mmm DONE_810: NOP
00005D7E                          9802mmm         ENDM
00005D7E  4E4F                    9803mm         TRAP    #15         ; EXECUTE OUTPUT
00005D80                          9804mm         
00005D80  3212                    9805mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D82  E949                    9806mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005D84  E049                    9807mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D86  E849                    9808mm         LSR.W   #4, D1      
00005D88                          9809mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D88  0C01 0009               9810mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D8C  6E00 000A               9811mmm         BGT     ALPHA_811
00005D90  0601 0030               9812mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D94  6000 0006               9813mmm         BRA     DONE_811
00005D98  0601 0037               9814mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D9C  4E71                    9815mmm DONE_811: NOP
00005D9E                          9816mmm         ENDM
00005D9E  4E4F                    9817mm         TRAP    #15         ; EXECUTE OUTPUT
00005DA0                          9818mm         
00005DA0  3212                    9819mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DA2  E149                    9820mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DA4  E049                    9821mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DA6  E849                    9822mm         LSR.W   #4, D1      
00005DA8                          9823mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DA8  0C01 0009               9824mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DAC  6E00 000A               9825mmm         BGT     ALPHA_812
00005DB0  0601 0030               9826mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DB4  6000 0006               9827mmm         BRA     DONE_812
00005DB8  0601 0037               9828mmm ALPHA_812: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DBC  4E71                    9829mmm DONE_812: NOP
00005DBE                          9830mmm         ENDM
00005DBE  4E4F                    9831mm         TRAP    #15         ; EXECUTE OUTPUT
00005DC0                          9832mm         
00005DC0  3212                    9833mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DC2  E149                    9834mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DC4  E949                    9835mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005DC6  E049                    9836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DC8  E849                    9837mm         LSR.W   #4, D1      
00005DCA                          9838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DCA  0C01 0009               9839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DCE  6E00 000A               9840mmm         BGT     ALPHA_813
00005DD2  0601 0030               9841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DD6  6000 0006               9842mmm         BRA     DONE_813
00005DDA  0601 0037               9843mmm ALPHA_813: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DDE  4E71                    9844mmm DONE_813: NOP
00005DE0                          9845mmm         ENDM
00005DE0  4E4F                    9846mm         TRAP    #15         ; EXECUTE OUTPUT       
00005DE2                          9847mm         ENDM 
00005DE2  361A                    9848m         MOVE.W  (A2)+, D3
00005DE4                          9849mm         ADROUT
00005DE4  3212                    9850mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DE6  E049                    9851mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DE8  E849                    9852mm         LSR.W   #4, D1      
00005DEA                          9853mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DEA  0C01 0009               9854mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DEE  6E00 000A               9855mmm         BGT     ALPHA_815
00005DF2  0601 0030               9856mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DF6  6000 0006               9857mmm         BRA     DONE_815
00005DFA  0601 0037               9858mmm ALPHA_815: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DFE  4E71                    9859mmm DONE_815: NOP
00005E00                          9860mmm         ENDM
00005E00  4E4F                    9861mm         TRAP    #15         ; EXECUTE OUTPUT
00005E02                          9862mm         
00005E02  3212                    9863mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E04  E949                    9864mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E06  E049                    9865mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E08  E849                    9866mm         LSR.W   #4, D1      
00005E0A                          9867mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E0A  0C01 0009               9868mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E0E  6E00 000A               9869mmm         BGT     ALPHA_816
00005E12  0601 0030               9870mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E16  6000 0006               9871mmm         BRA     DONE_816
00005E1A  0601 0037               9872mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E1E  4E71                    9873mmm DONE_816: NOP
00005E20                          9874mmm         ENDM
00005E20  4E4F                    9875mm         TRAP    #15         ; EXECUTE OUTPUT
00005E22                          9876mm         
00005E22  3212                    9877mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E24  E149                    9878mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E26  E049                    9879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E28  E849                    9880mm         LSR.W   #4, D1      
00005E2A                          9881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E2A  0C01 0009               9882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E2E  6E00 000A               9883mmm         BGT     ALPHA_817
00005E32  0601 0030               9884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E36  6000 0006               9885mmm         BRA     DONE_817
00005E3A  0601 0037               9886mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E3E  4E71                    9887mmm DONE_817: NOP
00005E40                          9888mmm         ENDM
00005E40  4E4F                    9889mm         TRAP    #15         ; EXECUTE OUTPUT
00005E42                          9890mm         
00005E42  3212                    9891mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E44  E149                    9892mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E46  E949                    9893mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E48  E049                    9894mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E4A  E849                    9895mm         LSR.W   #4, D1      
00005E4C                          9896mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E4C  0C01 0009               9897mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E50  6E00 000A               9898mmm         BGT     ALPHA_818
00005E54  0601 0030               9899mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E58  6000 0006               9900mmm         BRA     DONE_818
00005E5C  0601 0037               9901mmm ALPHA_818: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E60  4E71                    9902mmm DONE_818: NOP
00005E62                          9903mmm         ENDM
00005E62  4E4F                    9904mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E64                          9905mm         ENDM 
00005E64  3605                    9906m         MOVE.W  D5, D3
00005E66  6000 01AE               9907m         BRA     COMPLETE_773 
00005E6A                          9908m ADRABSOLUTEW_773:     
00005E6A  361A                    9909m         MOVE.W  (A2)+, D3
00005E6C                          9910mm         PRINTSIGN
00005E6C  103C 0006               9911mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E70  323C 0024               9912mm         MOVE.W  #36, D1     ; AN = SIGN
00005E74  4E4F                    9913mm         TRAP    #15         ; OUTPUT = SIGN
00005E76                          9914mm         ENDM
00005E76                          9915mm         PRINTSIGN
00005E76  103C 0006               9916mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E7A  323C 0024               9917mm         MOVE.W  #36, D1     ; AN = SIGN
00005E7E  4E4F                    9918mm         TRAP    #15         ; OUTPUT = SIGN
00005E80                          9919mm         ENDM
00005E80                          9920mm         ADROUT
00005E80  3212                    9921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E82  E049                    9922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E84  E849                    9923mm         LSR.W   #4, D1      
00005E86                          9924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E86  0C01 0009               9925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E8A  6E00 000A               9926mmm         BGT     ALPHA_822
00005E8E  0601 0030               9927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E92  6000 0006               9928mmm         BRA     DONE_822
00005E96  0601 0037               9929mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E9A  4E71                    9930mmm DONE_822: NOP
00005E9C                          9931mmm         ENDM
00005E9C  4E4F                    9932mm         TRAP    #15         ; EXECUTE OUTPUT
00005E9E                          9933mm         
00005E9E  3212                    9934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA0  E949                    9935mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005EA2  E049                    9936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA4  E849                    9937mm         LSR.W   #4, D1      
00005EA6                          9938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA6  0C01 0009               9939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EAA  6E00 000A               9940mmm         BGT     ALPHA_823
00005EAE  0601 0030               9941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB2  6000 0006               9942mmm         BRA     DONE_823
00005EB6  0601 0037               9943mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EBA  4E71                    9944mmm DONE_823: NOP
00005EBC                          9945mmm         ENDM
00005EBC  4E4F                    9946mm         TRAP    #15         ; EXECUTE OUTPUT
00005EBE                          9947mm         
00005EBE  3212                    9948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC0  E149                    9949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EC2  E049                    9950mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC4  E849                    9951mm         LSR.W   #4, D1      
00005EC6                          9952mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EC6  0C01 0009               9953mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECA  6E00 000A               9954mmm         BGT     ALPHA_824
00005ECE  0601 0030               9955mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED2  6000 0006               9956mmm         BRA     DONE_824
00005ED6  0601 0037               9957mmm ALPHA_824: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDA  4E71                    9958mmm DONE_824: NOP
00005EDC                          9959mmm         ENDM
00005EDC  4E4F                    9960mm         TRAP    #15         ; EXECUTE OUTPUT
00005EDE                          9961mm         
00005EDE  3212                    9962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EE0  E149                    9963mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EE2  E949                    9964mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005EE4  E049                    9965mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EE6  E849                    9966mm         LSR.W   #4, D1      
00005EE8                          9967mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EE8  0C01 0009               9968mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EEC  6E00 000A               9969mmm         BGT     ALPHA_825
00005EF0  0601 0030               9970mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EF4  6000 0006               9971mmm         BRA     DONE_825
00005EF8  0601 0037               9972mmm ALPHA_825: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EFC  4E71                    9973mmm DONE_825: NOP
00005EFE                          9974mmm         ENDM
00005EFE  4E4F                    9975mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F00                          9976mm         ENDM 
00005F00  3605                    9977m         MOVE.W  D5, D3
00005F02  6000 0112               9978m         BRA     COMPLETE_773  
00005F06                          9979m ADRABSOLUTEL_773:  
00005F06  361A                    9980m         MOVE.W  (A2)+, D3
00005F08                          9981mm         PRINTSIGN
00005F08  103C 0006               9982mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F0C  323C 0024               9983mm         MOVE.W  #36, D1     ; AN = SIGN
00005F10  4E4F                    9984mm         TRAP    #15         ; OUTPUT = SIGN
00005F12                          9985mm         ENDM
00005F12                          9986mm         ADROUT 
00005F12  3212                    9987mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F14  E049                    9988mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F16  E849                    9989mm         LSR.W   #4, D1      
00005F18                          9990mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F18  0C01 0009               9991mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F1C  6E00 000A               9992mmm         BGT     ALPHA_828
00005F20  0601 0030               9993mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F24  6000 0006               9994mmm         BRA     DONE_828
00005F28  0601 0037               9995mmm ALPHA_828: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F2C  4E71                    9996mmm DONE_828: NOP
00005F2E                          9997mmm         ENDM
00005F2E  4E4F                    9998mm         TRAP    #15         ; EXECUTE OUTPUT
00005F30                          9999mm         
00005F30  3212                   10000mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F32  E949                   10001mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F34  E049                   10002mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F36  E849                   10003mm         LSR.W   #4, D1      
00005F38                         10004mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F38  0C01 0009              10005mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F3C  6E00 000A              10006mmm         BGT     ALPHA_829
00005F40  0601 0030              10007mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F44  6000 0006              10008mmm         BRA     DONE_829
00005F48  0601 0037              10009mmm ALPHA_829: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F4C  4E71                   10010mmm DONE_829: NOP
00005F4E                         10011mmm         ENDM
00005F4E  4E4F                   10012mm         TRAP    #15         ; EXECUTE OUTPUT
00005F50                         10013mm         
00005F50  3212                   10014mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F52  E149                   10015mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F54  E049                   10016mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F56  E849                   10017mm         LSR.W   #4, D1      
00005F58                         10018mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F58  0C01 0009              10019mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F5C  6E00 000A              10020mmm         BGT     ALPHA_830
00005F60  0601 0030              10021mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F64  6000 0006              10022mmm         BRA     DONE_830
00005F68  0601 0037              10023mmm ALPHA_830: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F6C  4E71                   10024mmm DONE_830: NOP
00005F6E                         10025mmm         ENDM
00005F6E  4E4F                   10026mm         TRAP    #15         ; EXECUTE OUTPUT
00005F70                         10027mm         
00005F70  3212                   10028mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F72  E149                   10029mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F74  E949                   10030mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F76  E049                   10031mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F78  E849                   10032mm         LSR.W   #4, D1      
00005F7A                         10033mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F7A  0C01 0009              10034mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F7E  6E00 000A              10035mmm         BGT     ALPHA_831
00005F82  0601 0030              10036mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F86  6000 0006              10037mmm         BRA     DONE_831
00005F8A  0601 0037              10038mmm ALPHA_831: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F8E  4E71                   10039mmm DONE_831: NOP
00005F90                         10040mmm         ENDM
00005F90  4E4F                   10041mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F92                         10042mm         ENDM 
00005F92  361A                   10043m         MOVE.W  (A2)+, D3
00005F94                         10044mm         ADROUT
00005F94  3212                   10045mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F96  E049                   10046mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F98  E849                   10047mm         LSR.W   #4, D1      
00005F9A                         10048mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F9A  0C01 0009              10049mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F9E  6E00 000A              10050mmm         BGT     ALPHA_833
00005FA2  0601 0030              10051mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FA6  6000 0006              10052mmm         BRA     DONE_833
00005FAA  0601 0037              10053mmm ALPHA_833: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FAE  4E71                   10054mmm DONE_833: NOP
00005FB0                         10055mmm         ENDM
00005FB0  4E4F                   10056mm         TRAP    #15         ; EXECUTE OUTPUT
00005FB2                         10057mm         
00005FB2  3212                   10058mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FB4  E949                   10059mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005FB6  E049                   10060mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FB8  E849                   10061mm         LSR.W   #4, D1      
00005FBA                         10062mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FBA  0C01 0009              10063mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FBE  6E00 000A              10064mmm         BGT     ALPHA_834
00005FC2  0601 0030              10065mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FC6  6000 0006              10066mmm         BRA     DONE_834
00005FCA  0601 0037              10067mmm ALPHA_834: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FCE  4E71                   10068mmm DONE_834: NOP
00005FD0                         10069mmm         ENDM
00005FD0  4E4F                   10070mm         TRAP    #15         ; EXECUTE OUTPUT
00005FD2                         10071mm         
00005FD2  3212                   10072mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FD4  E149                   10073mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FD6  E049                   10074mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FD8  E849                   10075mm         LSR.W   #4, D1      
00005FDA                         10076mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FDA  0C01 0009              10077mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FDE  6E00 000A              10078mmm         BGT     ALPHA_835
00005FE2  0601 0030              10079mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FE6  6000 0006              10080mmm         BRA     DONE_835
00005FEA  0601 0037              10081mmm ALPHA_835: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FEE  4E71                   10082mmm DONE_835: NOP
00005FF0                         10083mmm         ENDM
00005FF0  4E4F                   10084mm         TRAP    #15         ; EXECUTE OUTPUT
00005FF2                         10085mm         
00005FF2  3212                   10086mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FF4  E149                   10087mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FF6  E949                   10088mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005FF8  E049                   10089mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FFA  E849                   10090mm         LSR.W   #4, D1      
00005FFC                         10091mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FFC  0C01 0009              10092mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006000  6E00 000A              10093mmm         BGT     ALPHA_836
00006004  0601 0030              10094mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006008  6000 0006              10095mmm         BRA     DONE_836
0000600C  0601 0037              10096mmm ALPHA_836: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006010  4E71                   10097mmm DONE_836: NOP
00006012                         10098mmm         ENDM
00006012  4E4F                   10099mm         TRAP    #15         ; EXECUTE OUTPUT       
00006014                         10100mm         ENDM 
00006014  3605                   10101m         MOVE.W  D5, D3
00006016                         10102m 
00006016                         10103m COMPLETE_773:  ; OPCODE HAS BEEN VERIFIED
00006016                         10104m         ENDM
00006016  4E75                   10105          RTS                 ; Return from decodeNOT subroutine
00006018                         10106  
00006018                         10107  ; ------------------------------------------------------------
00006018                         10108  ; 11a. "decodeLSx_M" subroutine
00006018                         10109  ; AUTHOR
00006018                         10110  ;
00006018                         10111  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
00006018                         10112  ; ------------------------------------------------------------
00006018                         10113  decodeLSx_M:
00006018                         10114m         verifyOpcode    pLSx_M, (A2)
00006018  43F8 017E              10115m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
0000601C  3612                   10116m         MOVE.W  (A2), D3      ; INPUT VALUE
0000601E  123C 000F              10117m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006022                         10118m         
00006022                         10119m LOOP_837: 
00006022  0C11 0030              10120m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006026  6700 000E              10121m         BEQ     CHECKFOR0_837
0000602A  0C11 0031              10122m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000602E  6700 0010              10123m         BEQ     CHECKFOR1_837
00006032  6000 0012              10124m         BRA     NEXT_837      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006036                         10125m         
00006036                         10126m CHECKFOR0_837: 
00006036  0303                   10127m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006038  6600 0B16              10128m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000603C  6000 0008              10129m         BRA     NEXT_837
00006040                         10130m 
00006040                         10131m CHECKFOR1_837:
00006040  0303                   10132m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006042  6700 0B0C              10133m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006046                         10134m 
00006046                         10135m NEXT_837: 
00006046  B23C 0000              10136m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000604A  6700 0008              10137m         BEQ     COMPLETE_837  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000604E  5301                   10138m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006050  1819                   10139m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006052  60CE                   10140m         BRA     LOOP_837      ; BEGIN LOOP AGAIN
00006054                         10141m 
00006054                         10142m COMPLETE_837:  ; OPCODE HAS BEEN VERIFIED
00006054                         10143m         ENDM
00006054  0803 0008              10144          BTST    #$08, D3     ; Check the 8th bit
00006058  6700 0010              10145          BEQ     LSR_M
0000605C  43F8 008D              10146  LSL_M:  LEA     oLSL, A1
00006060  103C 000E              10147          MOVE.B  #14,D0          
00006064  4E4F                   10148          TRAP    #15 
00006066  6000 000C              10149          BRA     reg_M        
0000606A                         10150    
0000606A  43F8 0091              10151  LSR_M:  LEA     oLSR, A1
0000606E  103C 000E              10152          MOVE.B  #14,D0          
00006072  4E4F                   10153          TRAP    #15      
00006074                         10154m reg_M:  printSizeLow       (A2) 
00006074  3612                   10155m         MOVE.W  (A2), D3      ; INPUT VALUE      
00006076                         10156m CHECKFORB_838: 
00006076  0803 0006              10157m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000607A  6600 0010              10158m         BNE     CHECKFORW_838  ; IF NOT GO TO WORD SIZE
0000607E  43F8 00B5              10159m         LEA     OBSIZE, A1     
00006082  103C 000E              10160m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006086  4E4F                   10161m         TRAP    #15
00006088  6000 0022              10162m         BRA     COMPLETE_838      
0000608C                         10163m CHECKFORW_838: 
0000608C  0803 0007              10164m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006090  6600 0010              10165m         BNE     CHECKFORL_838 ; IF NOT GO TO LONGWORD SIZE
00006094  43F8 00B9              10166m         LEA     OWSIZE, A1     
00006098  103C 000E              10167m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000609C  4E4F                   10168m         TRAP    #15
0000609E  6000 000C              10169m         BRA     COMPLETE_838  
000060A2                         10170m CHECKFORL_838:
000060A2  43F8 00BD              10171m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000060A6  103C 000E              10172m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000060AA  4E4F                   10173m         TRAP    #15
000060AC                         10174m COMPLETE_838:  ; SIZE HAS BEEN PRINTED
000060AC                         10175m         ENDM
000060AC                         10176m         printCount       (A2)
000060AC  3212                   10177m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000060AE  E949                   10178m         LSL     #$04, D1
000060B0  E049                   10179m         LSR     #$08, D1
000060B2  EA49                   10180m         LSR     #$05, D1
000060B4  43F8 00D0              10181m         LEA     OHASH, A1     
000060B8  103C 000E              10182m         MOVE.B  #14,D0          
000060BC  4E4F                   10183m         TRAP    #15
000060BE  103C 0003              10184m         MOVE.B  #3,D0          
000060C2  4E4F                   10185m         TRAP    #15
000060C4                         10186m         ENDM
000060C4                         10187m         printComma
000060C4  43F8 00C9              10188m         LEA     OCOMMA, A1     
000060C8  103C 000E              10189m         MOVE.B  #14,D0          
000060CC  4E4F                   10190m         TRAP    #15
000060CE                         10191m         ENDM
000060CE                         10192m         printDnSrc     (A2)        
000060CE  4281                   10193m         CLR.L   D1
000060D0  3212                   10194m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000060D2  E149                   10195m         LSL     #$08, D1
000060D4  EB49                   10196m         LSL     #$05, D1
000060D6  E049                   10197m         LSR     #$08, D1
000060D8  EA49                   10198m         LSR     #$05, D1
000060DA  43F8 00C1              10199m         LEA     ODN, A1     
000060DE  103C 000E              10200m         MOVE.B  #14,D0          
000060E2  4E4F                   10201m         TRAP    #15
000060E4  103C 0003              10202m         MOVE.B  #3,D0          
000060E8  4E4F                   10203m         TRAP    #15
000060EA                         10204m         ENDM
000060EA  4E75                   10205          RTS                 ; Return from decodeLSx_M subroutine
000060EC                         10206  
000060EC                         10207  
000060EC                         10208  ; ------------------------------------------------------------
000060EC                         10209  ; 11b. "decodeLSx_R" subroutine
000060EC                         10210  ; AUTHOR
000060EC                         10211  ;
000060EC                         10212  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000060EC                         10213  ; ------------------------------------------------------------
000060EC                         10214  decodeLSx_R:
000060EC                         10215m         verifyOpcode    pLSx_R, (A2)
000060EC  43F8 018F              10216m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
000060F0  3612                   10217m         MOVE.W  (A2), D3      ; INPUT VALUE
000060F2  123C 000F              10218m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000060F6                         10219m         
000060F6                         10220m LOOP_842: 
000060F6  0C11 0030              10221m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000060FA  6700 000E              10222m         BEQ     CHECKFOR0_842
000060FE  0C11 0031              10223m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006102  6700 0010              10224m         BEQ     CHECKFOR1_842
00006106  6000 0012              10225m         BRA     NEXT_842      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000610A                         10226m         
0000610A                         10227m CHECKFOR0_842: 
0000610A  0303                   10228m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000610C  6600 0A42              10229m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006110  6000 0008              10230m         BRA     NEXT_842
00006114                         10231m 
00006114                         10232m CHECKFOR1_842:
00006114  0303                   10233m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006116  6700 0A38              10234m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000611A                         10235m 
0000611A                         10236m NEXT_842: 
0000611A  B23C 0000              10237m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000611E  6700 0008              10238m         BEQ     COMPLETE_842  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006122  5301                   10239m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006124  1819                   10240m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006126  60CE                   10241m         BRA     LOOP_842      ; BEGIN LOOP AGAIN
00006128                         10242m 
00006128                         10243m COMPLETE_842:  ; OPCODE HAS BEEN VERIFIED
00006128                         10244m         ENDM
00006128  0803 0008              10245          BTST    #$08, D3     ; Check the 8th bit
0000612C  6700 0010              10246          BEQ     LSR_R
00006130  43F8 008D              10247  LSL_R:  LEA     oLSL, A1
00006134  103C 000E              10248          MOVE.B  #14,D0          
00006138  4E4F                   10249          TRAP    #15 
0000613A  6000 000C              10250          BRA     reg_R       
0000613E                         10251    
0000613E  43F8 0091              10252  LSR_R:  LEA     oLSR, A1
00006142  103C 000E              10253          MOVE.B  #14,D0          
00006146  4E4F                   10254          TRAP    #15      
00006148                         10255m reg_R:  printSizeLow       (A2)
00006148  3612                   10256m         MOVE.W  (A2), D3      ; INPUT VALUE      
0000614A                         10257m CHECKFORB_843: 
0000614A  0803 0006              10258m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000614E  6600 0010              10259m         BNE     CHECKFORW_843  ; IF NOT GO TO WORD SIZE
00006152  43F8 00B5              10260m         LEA     OBSIZE, A1     
00006156  103C 000E              10261m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000615A  4E4F                   10262m         TRAP    #15
0000615C  6000 0022              10263m         BRA     COMPLETE_843      
00006160                         10264m CHECKFORW_843: 
00006160  0803 0007              10265m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006164  6600 0010              10266m         BNE     CHECKFORL_843 ; IF NOT GO TO LONGWORD SIZE
00006168  43F8 00B9              10267m         LEA     OWSIZE, A1     
0000616C  103C 000E              10268m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006170  4E4F                   10269m         TRAP    #15
00006172  6000 000C              10270m         BRA     COMPLETE_843  
00006176                         10271m CHECKFORL_843:
00006176  43F8 00BD              10272m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000617A  103C 000E              10273m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000617E  4E4F                   10274m         TRAP    #15
00006180                         10275m COMPLETE_843:  ; SIZE HAS BEEN PRINTED
00006180                         10276m         ENDM
00006180                         10277m         printDnDest    (A2)
00006180  3212                   10278m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006182  E949                   10279m         LSL     #$04, D1
00006184  E049                   10280m         LSR     #$08, D1
00006186  EA49                   10281m         LSR     #$05, D1
00006188  43F8 00C1              10282m         LEA     ODN, A1     
0000618C  103C 000E              10283m         MOVE.B  #14,D0          
00006190  4E4F                   10284m         TRAP    #15
00006192  103C 0003              10285m         MOVE.B  #3,D0          
00006196  4E4F                   10286m         TRAP    #15
00006198                         10287m         ENDM
00006198                         10288m         printComma
00006198  43F8 00C9              10289m         LEA     OCOMMA, A1     
0000619C  103C 000E              10290m         MOVE.B  #14,D0          
000061A0  4E4F                   10291m         TRAP    #15
000061A2                         10292m         ENDM
000061A2                         10293m         printDnSrc     (A2)
000061A2  4281                   10294m         CLR.L   D1
000061A4  3212                   10295m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000061A6  E149                   10296m         LSL     #$08, D1
000061A8  EB49                   10297m         LSL     #$05, D1
000061AA  E049                   10298m         LSR     #$08, D1
000061AC  EA49                   10299m         LSR     #$05, D1
000061AE  43F8 00C1              10300m         LEA     ODN, A1     
000061B2  103C 000E              10301m         MOVE.B  #14,D0          
000061B6  4E4F                   10302m         TRAP    #15
000061B8  103C 0003              10303m         MOVE.B  #3,D0          
000061BC  4E4F                   10304m         TRAP    #15
000061BE                         10305m         ENDM
000061BE  4E75                   10306          RTS                 ; Return from ddecodeLSx_R subroutine
000061C0                         10307  
000061C0                         10308  ; ------------------------------------------------------------
000061C0                         10309  ; 11c. "decodeLSx_S" subroutine
000061C0                         10310  ; AUTHOR
000061C0                         10311  ;
000061C0                         10312  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000061C0                         10313  ; ------------------------------------------------------------
000061C0                         10314  decodeLSx_S:
000061C0                         10315m         verifyOpcode    pLSx_S, (A2)
000061C0  43F8 01A0              10316m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
000061C4  3612                   10317m         MOVE.W  (A2), D3      ; INPUT VALUE
000061C6  123C 000F              10318m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000061CA                         10319m         
000061CA                         10320m LOOP_847: 
000061CA  0C11 0030              10321m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000061CE  6700 000E              10322m         BEQ     CHECKFOR0_847
000061D2  0C11 0031              10323m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000061D6  6700 0010              10324m         BEQ     CHECKFOR1_847
000061DA  6000 0012              10325m         BRA     NEXT_847      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000061DE                         10326m         
000061DE                         10327m CHECKFOR0_847: 
000061DE  0303                   10328m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000061E0  6600 096E              10329m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000061E4  6000 0008              10330m         BRA     NEXT_847
000061E8                         10331m 
000061E8                         10332m CHECKFOR1_847:
000061E8  0303                   10333m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000061EA  6700 0964              10334m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000061EE                         10335m 
000061EE                         10336m NEXT_847: 
000061EE  B23C 0000              10337m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000061F2  6700 0008              10338m         BEQ     COMPLETE_847  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000061F6  5301                   10339m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000061F8  1819                   10340m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000061FA  60CE                   10341m         BRA     LOOP_847      ; BEGIN LOOP AGAIN
000061FC                         10342m 
000061FC                         10343m COMPLETE_847:  ; OPCODE HAS BEEN VERIFIED
000061FC                         10344m         ENDM
000061FC  4E75                   10345          RTS                 ; Return from ddecodeLSx_S subroutine
000061FE                         10346          
000061FE                         10347  ; ------------------------------------------------------------
000061FE                         10348  ; 12a. "decodeASx_M" subroutine
000061FE                         10349  ; AUTHOR
000061FE                         10350  ;
000061FE                         10351  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
000061FE                         10352  ; ------------------------------------------------------------
000061FE                         10353  decodeASx_M:
000061FE                         10354m         verifyOpcode    pASx_M, (A2)
000061FE  43F8 01B1              10355m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006202  3612                   10356m         MOVE.W  (A2), D3      ; INPUT VALUE
00006204  123C 000F              10357m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006208                         10358m         
00006208                         10359m LOOP_848: 
00006208  0C11 0030              10360m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000620C  6700 000E              10361m         BEQ     CHECKFOR0_848
00006210  0C11 0031              10362m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006214  6700 0010              10363m         BEQ     CHECKFOR1_848
00006218  6000 0012              10364m         BRA     NEXT_848      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000621C                         10365m         
0000621C                         10366m CHECKFOR0_848: 
0000621C  0303                   10367m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000621E  6600 0930              10368m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006222  6000 0008              10369m         BRA     NEXT_848
00006226                         10370m 
00006226                         10371m CHECKFOR1_848:
00006226  0303                   10372m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006228  6700 0926              10373m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000622C                         10374m 
0000622C                         10375m NEXT_848: 
0000622C  B23C 0000              10376m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006230  6700 0008              10377m         BEQ     COMPLETE_848  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006234  5301                   10378m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006236  1819                   10379m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006238  60CE                   10380m         BRA     LOOP_848      ; BEGIN LOOP AGAIN
0000623A                         10381m 
0000623A                         10382m COMPLETE_848:  ; OPCODE HAS BEEN VERIFIED
0000623A                         10383m         ENDM
0000623A  0803 0008              10384          BTST    #$08, D3     ; Check the 8th bit
0000623E  6700 0010              10385          BEQ     ASR_M
00006242  43F8 0095              10386  ASL_M:  LEA     oASL, A1
00006246  103C 000E              10387          MOVE.B  #14,D0          
0000624A  4E4F                   10388          TRAP    #15 
0000624C  6000 000C              10389          BRA     Areg_M        
00006250                         10390    
00006250  43F8 0099              10391  ASR_M:  LEA     oASR, A1
00006254  103C 000E              10392          MOVE.B  #14,D0          
00006258  4E4F                   10393          TRAP    #15      
0000625A                         10394m Areg_M: printSizeLow       (A2) 
0000625A  3612                   10395m         MOVE.W  (A2), D3      ; INPUT VALUE      
0000625C                         10396m CHECKFORB_849: 
0000625C  0803 0006              10397m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006260  6600 0010              10398m         BNE     CHECKFORW_849  ; IF NOT GO TO WORD SIZE
00006264  43F8 00B5              10399m         LEA     OBSIZE, A1     
00006268  103C 000E              10400m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000626C  4E4F                   10401m         TRAP    #15
0000626E  6000 0022              10402m         BRA     COMPLETE_849      
00006272                         10403m CHECKFORW_849: 
00006272  0803 0007              10404m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006276  6600 0010              10405m         BNE     CHECKFORL_849 ; IF NOT GO TO LONGWORD SIZE
0000627A  43F8 00B9              10406m         LEA     OWSIZE, A1     
0000627E  103C 000E              10407m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006282  4E4F                   10408m         TRAP    #15
00006284  6000 000C              10409m         BRA     COMPLETE_849  
00006288                         10410m CHECKFORL_849:
00006288  43F8 00BD              10411m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000628C  103C 000E              10412m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006290  4E4F                   10413m         TRAP    #15
00006292                         10414m COMPLETE_849:  ; SIZE HAS BEEN PRINTED
00006292                         10415m         ENDM
00006292                         10416m         printCount       (A2)
00006292  3212                   10417m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006294  E949                   10418m         LSL     #$04, D1
00006296  E049                   10419m         LSR     #$08, D1
00006298  EA49                   10420m         LSR     #$05, D1
0000629A  43F8 00D0              10421m         LEA     OHASH, A1     
0000629E  103C 000E              10422m         MOVE.B  #14,D0          
000062A2  4E4F                   10423m         TRAP    #15
000062A4  103C 0003              10424m         MOVE.B  #3,D0          
000062A8  4E4F                   10425m         TRAP    #15
000062AA                         10426m         ENDM
000062AA                         10427m         printComma
000062AA  43F8 00C9              10428m         LEA     OCOMMA, A1     
000062AE  103C 000E              10429m         MOVE.B  #14,D0          
000062B2  4E4F                   10430m         TRAP    #15
000062B4                         10431m         ENDM
000062B4                         10432m         printDnSrc     (A2)          
000062B4  4281                   10433m         CLR.L   D1
000062B6  3212                   10434m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000062B8  E149                   10435m         LSL     #$08, D1
000062BA  EB49                   10436m         LSL     #$05, D1
000062BC  E049                   10437m         LSR     #$08, D1
000062BE  EA49                   10438m         LSR     #$05, D1
000062C0  43F8 00C1              10439m         LEA     ODN, A1     
000062C4  103C 000E              10440m         MOVE.B  #14,D0          
000062C8  4E4F                   10441m         TRAP    #15
000062CA  103C 0003              10442m         MOVE.B  #3,D0          
000062CE  4E4F                   10443m         TRAP    #15
000062D0                         10444m         ENDM
000062D0  4E75                   10445          RTS                 ; Return from decodeASx_M subroutine
000062D2                         10446  
000062D2                         10447  
000062D2                         10448  ; ------------------------------------------------------------
000062D2                         10449  ; 12b. "decodeASx_R" subroutine
000062D2                         10450  ; AUTHOR
000062D2                         10451  ;
000062D2                         10452  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000062D2                         10453  ; ------------------------------------------------------------
000062D2                         10454  decodeASx_R:
000062D2                         10455m         verifyOpcode    pASx_R, (A2)
000062D2  43F8 01C2              10456m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
000062D6  3612                   10457m         MOVE.W  (A2), D3      ; INPUT VALUE
000062D8  123C 000F              10458m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000062DC                         10459m         
000062DC                         10460m LOOP_853: 
000062DC  0C11 0030              10461m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000062E0  6700 000E              10462m         BEQ     CHECKFOR0_853
000062E4  0C11 0031              10463m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000062E8  6700 0010              10464m         BEQ     CHECKFOR1_853
000062EC  6000 0012              10465m         BRA     NEXT_853      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000062F0                         10466m         
000062F0                         10467m CHECKFOR0_853: 
000062F0  0303                   10468m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000062F2  6600 085C              10469m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000062F6  6000 0008              10470m         BRA     NEXT_853
000062FA                         10471m 
000062FA                         10472m CHECKFOR1_853:
000062FA  0303                   10473m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000062FC  6700 0852              10474m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006300                         10475m 
00006300                         10476m NEXT_853: 
00006300  B23C 0000              10477m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006304  6700 0008              10478m         BEQ     COMPLETE_853  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006308  5301                   10479m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000630A  1819                   10480m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000630C  60CE                   10481m         BRA     LOOP_853      ; BEGIN LOOP AGAIN
0000630E                         10482m 
0000630E                         10483m COMPLETE_853:  ; OPCODE HAS BEEN VERIFIED
0000630E                         10484m         ENDM
0000630E  0803 0008              10485          BTST    #$08, D3     ; Check the 8th bit
00006312  6700 0010              10486          BEQ     ASR_R
00006316  43F8 0095              10487  ASL_R:  LEA     oASL, A1
0000631A  103C 000E              10488          MOVE.B  #14,D0          
0000631E  4E4F                   10489          TRAP    #15 
00006320  6000 000C              10490          BRA     Areg_R       
00006324                         10491    
00006324  43F8 0099              10492  ASR_R:  LEA     oASR, A1
00006328  103C 000E              10493          MOVE.B  #14,D0          
0000632C  4E4F                   10494          TRAP    #15      
0000632E                         10495m Areg_R: printSizeLow       (A2)
0000632E  3612                   10496m         MOVE.W  (A2), D3      ; INPUT VALUE      
00006330                         10497m CHECKFORB_854: 
00006330  0803 0006              10498m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006334  6600 0010              10499m         BNE     CHECKFORW_854  ; IF NOT GO TO WORD SIZE
00006338  43F8 00B5              10500m         LEA     OBSIZE, A1     
0000633C  103C 000E              10501m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006340  4E4F                   10502m         TRAP    #15
00006342  6000 0022              10503m         BRA     COMPLETE_854      
00006346                         10504m CHECKFORW_854: 
00006346  0803 0007              10505m         BTST    #7, D3      ; CHECK IF CONTAINS 0
0000634A  6600 0010              10506m         BNE     CHECKFORL_854 ; IF NOT GO TO LONGWORD SIZE
0000634E  43F8 00B9              10507m         LEA     OWSIZE, A1     
00006352  103C 000E              10508m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006356  4E4F                   10509m         TRAP    #15
00006358  6000 000C              10510m         BRA     COMPLETE_854  
0000635C                         10511m CHECKFORL_854:
0000635C  43F8 00BD              10512m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006360  103C 000E              10513m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006364  4E4F                   10514m         TRAP    #15
00006366                         10515m COMPLETE_854:  ; SIZE HAS BEEN PRINTED
00006366                         10516m         ENDM
00006366                         10517m         printDnDest    (A2)
00006366  3212                   10518m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006368  E949                   10519m         LSL     #$04, D1
0000636A  E049                   10520m         LSR     #$08, D1
0000636C  EA49                   10521m         LSR     #$05, D1
0000636E  43F8 00C1              10522m         LEA     ODN, A1     
00006372  103C 000E              10523m         MOVE.B  #14,D0          
00006376  4E4F                   10524m         TRAP    #15
00006378  103C 0003              10525m         MOVE.B  #3,D0          
0000637C  4E4F                   10526m         TRAP    #15
0000637E                         10527m         ENDM
0000637E                         10528m         printComma
0000637E  43F8 00C9              10529m         LEA     OCOMMA, A1     
00006382  103C 000E              10530m         MOVE.B  #14,D0          
00006386  4E4F                   10531m         TRAP    #15
00006388                         10532m         ENDM
00006388                         10533m         printDnSrc     (A2)
00006388  4281                   10534m         CLR.L   D1
0000638A  3212                   10535m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000638C  E149                   10536m         LSL     #$08, D1
0000638E  EB49                   10537m         LSL     #$05, D1
00006390  E049                   10538m         LSR     #$08, D1
00006392  EA49                   10539m         LSR     #$05, D1
00006394  43F8 00C1              10540m         LEA     ODN, A1     
00006398  103C 000E              10541m         MOVE.B  #14,D0          
0000639C  4E4F                   10542m         TRAP    #15
0000639E  103C 0003              10543m         MOVE.B  #3,D0          
000063A2  4E4F                   10544m         TRAP    #15
000063A4                         10545m         ENDM
000063A4  4E75                   10546          RTS                 ; Return from decodeASx_R subroutine
000063A6                         10547          
000063A6                         10548          ; ------------------------------------------------------------
000063A6                         10549  ; 12c. "decodeASx_S" subroutine
000063A6                         10550  ; AUTHOR
000063A6                         10551  ;
000063A6                         10552  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000063A6                         10553  ; ------------------------------------------------------------
000063A6                         10554  decodeASx_S:
000063A6                         10555m         verifyOpcode    pASx_S, (A2)
000063A6  43F8 01D3              10556m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
000063AA  3612                   10557m         MOVE.W  (A2), D3      ; INPUT VALUE
000063AC  123C 000F              10558m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063B0                         10559m         
000063B0                         10560m LOOP_858: 
000063B0  0C11 0030              10561m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063B4  6700 000E              10562m         BEQ     CHECKFOR0_858
000063B8  0C11 0031              10563m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063BC  6700 0010              10564m         BEQ     CHECKFOR1_858
000063C0  6000 0012              10565m         BRA     NEXT_858      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063C4                         10566m         
000063C4                         10567m CHECKFOR0_858: 
000063C4  0303                   10568m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063C6  6600 0788              10569m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063CA  6000 0008              10570m         BRA     NEXT_858
000063CE                         10571m 
000063CE                         10572m CHECKFOR1_858:
000063CE  0303                   10573m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000063D0  6700 077E              10574m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063D4                         10575m 
000063D4                         10576m NEXT_858: 
000063D4  B23C 0000              10577m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063D8  6700 0008              10578m         BEQ     COMPLETE_858  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063DC  5301                   10579m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063DE  1819                   10580m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063E0  60CE                   10581m         BRA     LOOP_858      ; BEGIN LOOP AGAIN
000063E2                         10582m 
000063E2                         10583m COMPLETE_858:  ; OPCODE HAS BEEN VERIFIED
000063E2                         10584m         ENDM
000063E2  4E75                   10585          RTS                 ; Return from decodeASx_S subroutine
000063E4                         10586  
000063E4                         10587  
000063E4                         10588  ; ------------------------------------------------------------
000063E4                         10589  ; 13a. "decodeBEQ" subroutine
000063E4                         10590  ; AUTHOR
000063E4                         10591  ;
000063E4                         10592  ; TODO: DESCRIPTION
000063E4                         10593  ; ------------------------------------------------------------
000063E4                         10594  decodeBEQ:
000063E4                         10595m         verifyOpcode    pBEQ, (A2)
000063E4  43F8 01E4              10596m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
000063E8  3612                   10597m         MOVE.W  (A2), D3      ; INPUT VALUE
000063EA  123C 000F              10598m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063EE                         10599m         
000063EE                         10600m LOOP_859: 
000063EE  0C11 0030              10601m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063F2  6700 000E              10602m         BEQ     CHECKFOR0_859
000063F6  0C11 0031              10603m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063FA  6700 0010              10604m         BEQ     CHECKFOR1_859
000063FE  6000 0012              10605m         BRA     NEXT_859      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006402                         10606m         
00006402                         10607m CHECKFOR0_859: 
00006402  0303                   10608m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006404  6600 074A              10609m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006408  6000 0008              10610m         BRA     NEXT_859
0000640C                         10611m 
0000640C                         10612m CHECKFOR1_859:
0000640C  0303                   10613m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000640E  6700 0740              10614m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006412                         10615m 
00006412                         10616m NEXT_859: 
00006412  B23C 0000              10617m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006416  6700 0008              10618m         BEQ     COMPLETE_859  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000641A  5301                   10619m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000641C  1819                   10620m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000641E  60CE                   10621m         BRA     LOOP_859      ; BEGIN LOOP AGAIN
00006420                         10622m 
00006420                         10623m COMPLETE_859:  ; OPCODE HAS BEEN VERIFIED
00006420                         10624m         ENDM
00006420                         10625          ; put code here
00006420  4E75                   10626          RTS                 ; Return from decodeBEQ subroutine
00006422                         10627  
00006422                         10628  
00006422                         10629  ; ------------------------------------------------------------
00006422                         10630  ; 13b. "decodeBGE" subroutine
00006422                         10631  ; AUTHOR
00006422                         10632  ;
00006422                         10633  ; TODO: DESCRIPTION
00006422                         10634  ; ------------------------------------------------------------
00006422                         10635  decodeBGE:
00006422                         10636m         verifyOpcode    pBGE, (A2)
00006422  43F8 01F5              10637m         LEA     PBGE, A1      ; INPUT PATTERN STRING
00006426  3612                   10638m         MOVE.W  (A2), D3      ; INPUT VALUE
00006428  123C 000F              10639m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000642C                         10640m         
0000642C                         10641m LOOP_860: 
0000642C  0C11 0030              10642m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006430  6700 000E              10643m         BEQ     CHECKFOR0_860
00006434  0C11 0031              10644m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006438  6700 0010              10645m         BEQ     CHECKFOR1_860
0000643C  6000 0012              10646m         BRA     NEXT_860      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006440                         10647m         
00006440                         10648m CHECKFOR0_860: 
00006440  0303                   10649m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006442  6600 070C              10650m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006446  6000 0008              10651m         BRA     NEXT_860
0000644A                         10652m 
0000644A                         10653m CHECKFOR1_860:
0000644A  0303                   10654m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000644C  6700 0702              10655m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006450                         10656m 
00006450                         10657m NEXT_860: 
00006450  B23C 0000              10658m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006454  6700 0008              10659m         BEQ     COMPLETE_860  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006458  5301                   10660m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000645A  1819                   10661m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000645C  60CE                   10662m         BRA     LOOP_860      ; BEGIN LOOP AGAIN
0000645E                         10663m 
0000645E                         10664m COMPLETE_860:  ; OPCODE HAS BEEN VERIFIED
0000645E                         10665m         ENDM
0000645E                         10666          ; put code here
0000645E  4E75                   10667          RTS                 ; Return from decodeBGE subroutine
00006460                         10668  
00006460                         10669  
00006460                         10670  ; ------------------------------------------------------------
00006460                         10671  ; 13c. "decodeBLT" subroutine
00006460                         10672  ; AUTHOR
00006460                         10673  ;
00006460                         10674  ; TODO: DESCRIPTION
00006460                         10675  ; ------------------------------------------------------------
00006460                         10676  decodeBLT:
00006460                         10677m         verifyOpcode    pBLT, (A2)
00006460  43F8 0206              10678m         LEA     PBLT, A1      ; INPUT PATTERN STRING
00006464  3612                   10679m         MOVE.W  (A2), D3      ; INPUT VALUE
00006466  123C 000F              10680m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000646A                         10681m         
0000646A                         10682m LOOP_861: 
0000646A  0C11 0030              10683m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000646E  6700 000E              10684m         BEQ     CHECKFOR0_861
00006472  0C11 0031              10685m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006476  6700 0010              10686m         BEQ     CHECKFOR1_861
0000647A  6000 0012              10687m         BRA     NEXT_861      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000647E                         10688m         
0000647E                         10689m CHECKFOR0_861: 
0000647E  0303                   10690m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006480  6600 06CE              10691m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006484  6000 0008              10692m         BRA     NEXT_861
00006488                         10693m 
00006488                         10694m CHECKFOR1_861:
00006488  0303                   10695m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000648A  6700 06C4              10696m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000648E                         10697m 
0000648E                         10698m NEXT_861: 
0000648E  B23C 0000              10699m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006492  6700 0008              10700m         BEQ     COMPLETE_861  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006496  5301                   10701m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006498  1819                   10702m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000649A  60CE                   10703m         BRA     LOOP_861      ; BEGIN LOOP AGAIN
0000649C                         10704m 
0000649C                         10705m COMPLETE_861:  ; OPCODE HAS BEEN VERIFIED
0000649C                         10706m         ENDM
0000649C                         10707          ; put code here
0000649C  4E75                   10708          RTS                 ; Return from decodeBLT subroutine
0000649E                         10709  
0000649E                         10710  
0000649E                         10711  ; ------------------------------------------------------------
0000649E                         10712  ; 14. "decodeJSR" subroutine
0000649E                         10713  ; AUTHOR
0000649E                         10714  ;
0000649E                         10715  ; TODO: DESCRIPTION
0000649E                         10716  ; ------------------------------------------------------------
0000649E                         10717  decodeJSR:
0000649E                         10718m         verifyOpcode    pJSR, (A2)
0000649E  43F8 0217              10719m         LEA     PJSR, A1      ; INPUT PATTERN STRING
000064A2  3612                   10720m         MOVE.W  (A2), D3      ; INPUT VALUE
000064A4  123C 000F              10721m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000064A8                         10722m         
000064A8                         10723m LOOP_862: 
000064A8  0C11 0030              10724m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000064AC  6700 000E              10725m         BEQ     CHECKFOR0_862
000064B0  0C11 0031              10726m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000064B4  6700 0010              10727m         BEQ     CHECKFOR1_862
000064B8  6000 0012              10728m         BRA     NEXT_862      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000064BC                         10729m         
000064BC                         10730m CHECKFOR0_862: 
000064BC  0303                   10731m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000064BE  6600 0690              10732m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000064C2  6000 0008              10733m         BRA     NEXT_862
000064C6                         10734m 
000064C6                         10735m CHECKFOR1_862:
000064C6  0303                   10736m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000064C8  6700 0686              10737m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000064CC                         10738m 
000064CC                         10739m NEXT_862: 
000064CC  B23C 0000              10740m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000064D0  6700 0008              10741m         BEQ     COMPLETE_862  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000064D4  5301                   10742m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000064D6  1819                   10743m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000064D8  60CE                   10744m         BRA     LOOP_862      ; BEGIN LOOP AGAIN
000064DA                         10745m 
000064DA                         10746m COMPLETE_862:  ; OPCODE HAS BEEN VERIFIED
000064DA                         10747m         ENDM
000064DA  43F8 00A9              10748          LEA     oJSR, A1     
000064DE  103C 000E              10749          MOVE.B  #14,D0          
000064E2  4E4F                   10750          TRAP    #15
000064E4                         10751          
000064E4  43F8 00D2              10752          LEA     oBlank, A1     
000064E8  103C 000E              10753          MOVE.B  #14,D0          
000064EC  4E4F                   10754          TRAP    #15
000064EE                         10755  
000064EE                         10756m         prepareAdrMode  #$1, (A2)
000064EE  3C3C 0001              10757m         MOVE.W  #$1, D6      ; INPUT VALUE
000064F2  3212                   10758m         MOVE.W  (A2), D1
000064F4  BC3C 0001              10759m         CMP.B   #$01, D6
000064F8  6700 000C              10760m         BEQ     ADRSOURCE_863    
000064FC                         10761m ADRDEST_863:
000064FC  EF49                   10762m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000064FE  E049                   10763m         LSR     #$08, D1
00006500  EA49                   10764m         LSR     #$05, D1
00006502  6000 000A              10765m         BRA     COMPLETE_863 
00006506                         10766m ADRSOURCE_863:                
00006506  E149                   10767m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006508  E549                   10768m         LSL     #$02, D1
0000650A  E049                   10769m         LSR     #$08, D1
0000650C  EA49                   10770m         LSR     #$05, D1
0000650E                         10771m COMPLETE_863:  ; OPCODE HAS BEEN VERIFIED
0000650E                         10772m         ENDM        
0000650E                         10773m         decodeAdrMode   (A2), D1        
0000650E  3612                   10774m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00006510  3201                   10775m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00006512                         10776m 
00006512  B23C 0001              10777m         CMP.B   #$01, D1
00006516  6700 0066              10778m         BEQ     ADRREGDIRECT_864    
0000651A  B23C 0002              10779m         CMP.B   #$02, D1
0000651E  6700 00A0              10780m         BEQ     ADRREGINDIRECT_864  
00006522  B23C 0003              10781m         CMP.B   #$03, D1
00006526  6700 0102              10782m         BEQ     ADRREGPOSTINC_864  
0000652A  B23C 0004              10783m         CMP.B   #$04, D1
0000652E  6700 0178              10784m         BEQ     ADRREGPREDEC_864
00006532  B23C 0007              10785m         CMP.B   #$07, D1
00006536  6700 01EE              10786m         BEQ     ADRABSOLUTE_864    
0000653A                         10787m         
0000653A                         10788m DATAREGDIRECT_864: 
0000653A  BC3C 0001              10789m         CMP.B   #$01, D6
0000653E  6700 001E              10790m         BEQ     DATAREGDIRECTSRC_864   
00006542                         10791m DATAREGDIRECTDEST_864: 
00006542                         10792mm         PRINTDNDEST D3 
00006542  3203                   10793mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00006544  E949                   10794mm         LSL     #$04, D1
00006546  E049                   10795mm         LSR     #$08, D1
00006548  EA49                   10796mm         LSR     #$05, D1
0000654A  43F8 00C1              10797mm         LEA     ODN, A1     
0000654E  103C 000E              10798mm         MOVE.B  #14,D0          
00006552  4E4F                   10799mm         TRAP    #15
00006554  103C 0003              10800mm         MOVE.B  #3,D0          
00006558  4E4F                   10801mm         TRAP    #15
0000655A                         10802mm         ENDM
0000655A  6000 056C              10803m         BRA     COMPLETE_864 
0000655E                         10804m DATAREGDIRECTSRC_864: 
0000655E                         10805mm         PRINTDNSRC D3 
0000655E  4281                   10806mm         CLR.L   D1
00006560  3203                   10807mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006562  E149                   10808mm         LSL     #$08, D1
00006564  EB49                   10809mm         LSL     #$05, D1
00006566  E049                   10810mm         LSR     #$08, D1
00006568  EA49                   10811mm         LSR     #$05, D1
0000656A  43F8 00C1              10812mm         LEA     ODN, A1     
0000656E  103C 000E              10813mm         MOVE.B  #14,D0          
00006572  4E4F                   10814mm         TRAP    #15
00006574  103C 0003              10815mm         MOVE.B  #3,D0          
00006578  4E4F                   10816mm         TRAP    #15
0000657A                         10817mm         ENDM
0000657A  6000 054C              10818m         BRA     COMPLETE_864   
0000657E                         10819m         
0000657E                         10820m ADRREGDIRECT_864: 
0000657E  BC3C 0001              10821m         CMP.B   #$01, D6
00006582  6700 001E              10822m         BEQ     ADRREGDIRECTSRC_864   
00006586                         10823m ADRREGDIRECTDEST_864:
00006586                         10824mm         PRINTANDEST D3
00006586  3203                   10825mm         MOVE.W  D3, D1
00006588  E949                   10826mm         LSL     #$04, D1
0000658A  E049                   10827mm         LSR     #$08, D1
0000658C  EA49                   10828mm         LSR     #$05, D1
0000658E  43F8 00C3              10829mm         LEA     OAN, A1     
00006592  103C 000E              10830mm         MOVE.B  #14,D0          
00006596  4E4F                   10831mm         TRAP    #15
00006598  103C 0003              10832mm         MOVE.B  #3,D0          
0000659C  4E4F                   10833mm         TRAP    #15
0000659E                         10834mm         ENDM
0000659E  6000 0528              10835m         BRA     COMPLETE_864   
000065A2                         10836m ADRREGDIRECTSRC_864:
000065A2                         10837mm         PRINTANSRC D3
000065A2  3203                   10838mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000065A4  E149                   10839mm         LSL     #$08, D1
000065A6  EB49                   10840mm         LSL     #$05, D1
000065A8  E049                   10841mm         LSR     #$08, D1
000065AA  EA49                   10842mm         LSR     #$05, D1
000065AC  43F8 00C3              10843mm         LEA     OAN, A1     
000065B0  103C 000E              10844mm         MOVE.B  #14,D0          
000065B4  4E4F                   10845mm         TRAP    #15
000065B6  103C 0003              10846mm         MOVE.B  #3,D0          
000065BA  4E4F                   10847mm         TRAP    #15
000065BC                         10848mm         ENDM
000065BC  6000 050A              10849m         BRA     COMPLETE_864   
000065C0                         10850m        
000065C0                         10851m ADRREGINDIRECT_864:   
000065C0  BC3C 0001              10852m         CMP.B   #$01, D6
000065C4  6700 0032              10853m         BEQ     ADRREGINDIRECTSRC_864   
000065C8                         10854m ADRREGINDIRECTDEST_864:
000065C8                         10855mm         PRINTLB
000065C8  43F8 00C5              10856mm         LEA     OLB, A1     
000065CC  103C 000E              10857mm         MOVE.B  #14,D0          
000065D0  4E4F                   10858mm         TRAP    #15
000065D2                         10859mm         ENDM
000065D2                         10860mm         PRINTANDEST D3  
000065D2  3203                   10861mm         MOVE.W  D3, D1
000065D4  E949                   10862mm         LSL     #$04, D1
000065D6  E049                   10863mm         LSR     #$08, D1
000065D8  EA49                   10864mm         LSR     #$05, D1
000065DA  43F8 00C3              10865mm         LEA     OAN, A1     
000065DE  103C 000E              10866mm         MOVE.B  #14,D0          
000065E2  4E4F                   10867mm         TRAP    #15
000065E4  103C 0003              10868mm         MOVE.B  #3,D0          
000065E8  4E4F                   10869mm         TRAP    #15
000065EA                         10870mm         ENDM
000065EA                         10871mm         PRINTRB
000065EA  43F8 00C7              10872mm         LEA     ORB, A1     
000065EE  103C 000E              10873mm         MOVE.B  #14,D0          
000065F2  4E4F                   10874mm         TRAP    #15
000065F4                         10875mm         ENDM
000065F4  6000 04D2              10876m         BRA     COMPLETE_864     
000065F8                         10877m ADRREGINDIRECTSRC_864:   
000065F8                         10878mm         PRINTLB
000065F8  43F8 00C5              10879mm         LEA     OLB, A1     
000065FC  103C 000E              10880mm         MOVE.B  #14,D0          
00006600  4E4F                   10881mm         TRAP    #15
00006602                         10882mm         ENDM
00006602                         10883mm         PRINTANSRC D3  
00006602  3203                   10884mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006604  E149                   10885mm         LSL     #$08, D1
00006606  EB49                   10886mm         LSL     #$05, D1
00006608  E049                   10887mm         LSR     #$08, D1
0000660A  EA49                   10888mm         LSR     #$05, D1
0000660C  43F8 00C3              10889mm         LEA     OAN, A1     
00006610  103C 000E              10890mm         MOVE.B  #14,D0          
00006614  4E4F                   10891mm         TRAP    #15
00006616  103C 0003              10892mm         MOVE.B  #3,D0          
0000661A  4E4F                   10893mm         TRAP    #15
0000661C                         10894mm         ENDM
0000661C                         10895mm         PRINTRB
0000661C  43F8 00C7              10896mm         LEA     ORB, A1     
00006620  103C 000E              10897mm         MOVE.B  #14,D0          
00006624  4E4F                   10898mm         TRAP    #15
00006626                         10899mm         ENDM
00006626  6000 04A0              10900m         BRA     COMPLETE_864   
0000662A                         10901m         
0000662A                         10902m ADRREGPOSTINC_864:   
0000662A  BC3C 0001              10903m         CMP.B   #$01, D6
0000662E  6700 003C              10904m         BEQ     ADRREGPOSTINCSRC_864   
00006632                         10905m ADRREGPOSTINCDEST_864: 
00006632                         10906mm         PRINTLB
00006632  43F8 00C5              10907mm         LEA     OLB, A1     
00006636  103C 000E              10908mm         MOVE.B  #14,D0          
0000663A  4E4F                   10909mm         TRAP    #15
0000663C                         10910mm         ENDM
0000663C                         10911mm         PRINTANDEST D3  
0000663C  3203                   10912mm         MOVE.W  D3, D1
0000663E  E949                   10913mm         LSL     #$04, D1
00006640  E049                   10914mm         LSR     #$08, D1
00006642  EA49                   10915mm         LSR     #$05, D1
00006644  43F8 00C3              10916mm         LEA     OAN, A1     
00006648  103C 000E              10917mm         MOVE.B  #14,D0          
0000664C  4E4F                   10918mm         TRAP    #15
0000664E  103C 0003              10919mm         MOVE.B  #3,D0          
00006652  4E4F                   10920mm         TRAP    #15
00006654                         10921mm         ENDM
00006654                         10922mm         PRINTRB
00006654  43F8 00C7              10923mm         LEA     ORB, A1     
00006658  103C 000E              10924mm         MOVE.B  #14,D0          
0000665C  4E4F                   10925mm         TRAP    #15
0000665E                         10926mm         ENDM
0000665E                         10927mm         PRINTPI
0000665E  43F8 00CE              10928mm         LEA     OPSTINC, A1     
00006662  103C 000E              10929mm         MOVE.B  #14,D0          
00006666  4E4F                   10930mm         TRAP    #15
00006668                         10931mm         ENDM
00006668  6000 045E              10932m         BRA     COMPLETE_864  
0000666C                         10933m ADRREGPOSTINCSRC_864:           
0000666C                         10934mm         PRINTLB
0000666C  43F8 00C5              10935mm         LEA     OLB, A1     
00006670  103C 000E              10936mm         MOVE.B  #14,D0          
00006674  4E4F                   10937mm         TRAP    #15
00006676                         10938mm         ENDM
00006676                         10939mm         PRINTANSRC D3  
00006676  3203                   10940mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006678  E149                   10941mm         LSL     #$08, D1
0000667A  EB49                   10942mm         LSL     #$05, D1
0000667C  E049                   10943mm         LSR     #$08, D1
0000667E  EA49                   10944mm         LSR     #$05, D1
00006680  43F8 00C3              10945mm         LEA     OAN, A1     
00006684  103C 000E              10946mm         MOVE.B  #14,D0          
00006688  4E4F                   10947mm         TRAP    #15
0000668A  103C 0003              10948mm         MOVE.B  #3,D0          
0000668E  4E4F                   10949mm         TRAP    #15
00006690                         10950mm         ENDM
00006690                         10951mm         PRINTRB
00006690  43F8 00C7              10952mm         LEA     ORB, A1     
00006694  103C 000E              10953mm         MOVE.B  #14,D0          
00006698  4E4F                   10954mm         TRAP    #15
0000669A                         10955mm         ENDM
0000669A                         10956mm         PRINTPI
0000669A  43F8 00CE              10957mm         LEA     OPSTINC, A1     
0000669E  103C 000E              10958mm         MOVE.B  #14,D0          
000066A2  4E4F                   10959mm         TRAP    #15
000066A4                         10960mm         ENDM
000066A4  6000 0422              10961m         BRA     COMPLETE_864  
000066A8                         10962m         
000066A8                         10963m ADRREGPREDEC_864: 
000066A8  BC3C 0001              10964m         CMP.B   #$01, D6
000066AC  6700 003C              10965m         BEQ     ADRREGPREDECSRC_864   
000066B0                         10966m ADRREGPREDECDEST_864:
000066B0                         10967mm         PRINTPD  
000066B0  43F8 00CC              10968mm         LEA     OPREDEC, A1     
000066B4  103C 000E              10969mm         MOVE.B  #14,D0          
000066B8  4E4F                   10970mm         TRAP    #15
000066BA                         10971mm         ENDM
000066BA                         10972mm         PRINTLB
000066BA  43F8 00C5              10973mm         LEA     OLB, A1     
000066BE  103C 000E              10974mm         MOVE.B  #14,D0          
000066C2  4E4F                   10975mm         TRAP    #15
000066C4                         10976mm         ENDM
000066C4                         10977mm         PRINTANDEST D3  
000066C4  3203                   10978mm         MOVE.W  D3, D1
000066C6  E949                   10979mm         LSL     #$04, D1
000066C8  E049                   10980mm         LSR     #$08, D1
000066CA  EA49                   10981mm         LSR     #$05, D1
000066CC  43F8 00C3              10982mm         LEA     OAN, A1     
000066D0  103C 000E              10983mm         MOVE.B  #14,D0          
000066D4  4E4F                   10984mm         TRAP    #15
000066D6  103C 0003              10985mm         MOVE.B  #3,D0          
000066DA  4E4F                   10986mm         TRAP    #15
000066DC                         10987mm         ENDM
000066DC                         10988mm         PRINTRB
000066DC  43F8 00C7              10989mm         LEA     ORB, A1     
000066E0  103C 000E              10990mm         MOVE.B  #14,D0          
000066E4  4E4F                   10991mm         TRAP    #15
000066E6                         10992mm         ENDM
000066E6  6000 03E0              10993m         BRA     COMPLETE_864   
000066EA                         10994m ADRREGPREDECSRC_864: 
000066EA                         10995mm         PRINTPD  
000066EA  43F8 00CC              10996mm         LEA     OPREDEC, A1     
000066EE  103C 000E              10997mm         MOVE.B  #14,D0          
000066F2  4E4F                   10998mm         TRAP    #15
000066F4                         10999mm         ENDM
000066F4                         11000mm         PRINTLB
000066F4  43F8 00C5              11001mm         LEA     OLB, A1     
000066F8  103C 000E              11002mm         MOVE.B  #14,D0          
000066FC  4E4F                   11003mm         TRAP    #15
000066FE                         11004mm         ENDM
000066FE                         11005mm         PRINTANSRC D3  
000066FE  3203                   11006mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006700  E149                   11007mm         LSL     #$08, D1
00006702  EB49                   11008mm         LSL     #$05, D1
00006704  E049                   11009mm         LSR     #$08, D1
00006706  EA49                   11010mm         LSR     #$05, D1
00006708  43F8 00C3              11011mm         LEA     OAN, A1     
0000670C  103C 000E              11012mm         MOVE.B  #14,D0          
00006710  4E4F                   11013mm         TRAP    #15
00006712  103C 0003              11014mm         MOVE.B  #3,D0          
00006716  4E4F                   11015mm         TRAP    #15
00006718                         11016mm         ENDM
00006718                         11017mm         PRINTRB
00006718  43F8 00C7              11018mm         LEA     ORB, A1     
0000671C  103C 000E              11019mm         MOVE.B  #14,D0          
00006720  4E4F                   11020mm         TRAP    #15
00006722                         11021mm         ENDM
00006722  6000 03A4              11022m         BRA     COMPLETE_864
00006726                         11023m        
00006726                         11024m ADRABSOLUTE_864:
00006726  BC3C 0001              11025m         CMP.B   #$01, D6
0000672A  6600 0018              11026m         BNE     ADRABSOLUTEDST_864 
0000672E                         11027m         
0000672E  3A03                   11028m         MOVE.W  D3, D5
00006730  0803 0002              11029m         BTST    #2, D3
00006734  6600 0024              11030m         BNE     ADRIMMEDIATE_864
00006738  0803 0000              11031m         BTST    #0, D3
0000673C  6600 027A              11032m         BNE     ADRABSOLUTEL_864
00006740  6000 01DA              11033m         BRA     ADRABSOLUTEW_864
00006744                         11034m ADRABSOLUTEDST_864:
00006744  3A03                   11035m         MOVE.W  D3, D5
00006746  0803 000B              11036m         BTST    #$B, D3
0000674A  6600 000E              11037m         BNE     ADRIMMEDIATE_864
0000674E  0803 0009              11038m         BTST    #$09, D3
00006752  6600 0264              11039m         BNE     ADRABSOLUTEL_864
00006756  6000 01C4              11040m         BRA     ADRABSOLUTEW_864
0000675A                         11041m ADRIMMEDIATE_864:
0000675A  BE3C 0001              11042m         CMP.B   #1, D7
0000675E  6700 009E              11043m         BEQ     ADRIMMEDIATEL_864
00006762                         11044m ADRIMMEDIATEW_864:
00006762  361A                   11045m         MOVE.W  (A2)+, D3
00006764                         11046mm         PRINTHASH
00006764  103C 0006              11047mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006768  323C 0023              11048mm         MOVE.W  #35, D1     ; AN = SIGN
0000676C  4E4F                   11049mm         TRAP    #15         ; OUTPUT = SIGN
0000676E                         11050mm         ENDM
0000676E                         11051mm         PRINTSIGN
0000676E  103C 0006              11052mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006772  323C 0024              11053mm         MOVE.W  #36, D1     ; AN = SIGN
00006776  4E4F                   11054mm         TRAP    #15         ; OUTPUT = SIGN
00006778                         11055mm         ENDM
00006778                         11056mm         ADROUT
00006778  3212                   11057mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000677A  E049                   11058mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000677C  E849                   11059mm         LSR.W   #4, D1      
0000677E                         11060mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000677E  0C01 0009              11061mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006782  6E00 000A              11062mmm         BGT     ALPHA_894
00006786  0601 0030              11063mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000678A  6000 0006              11064mmm         BRA     DONE_894
0000678E  0601 0037              11065mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006792  4E71                   11066mmm DONE_894: NOP
00006794                         11067mmm         ENDM
00006794  4E4F                   11068mm         TRAP    #15         ; EXECUTE OUTPUT
00006796                         11069mm         
00006796  3212                   11070mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006798  E949                   11071mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000679A  E049                   11072mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000679C  E849                   11073mm         LSR.W   #4, D1      
0000679E                         11074mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000679E  0C01 0009              11075mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067A2  6E00 000A              11076mmm         BGT     ALPHA_895
000067A6  0601 0030              11077mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067AA  6000 0006              11078mmm         BRA     DONE_895
000067AE  0601 0037              11079mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067B2  4E71                   11080mmm DONE_895: NOP
000067B4                         11081mmm         ENDM
000067B4  4E4F                   11082mm         TRAP    #15         ; EXECUTE OUTPUT
000067B6                         11083mm         
000067B6  3212                   11084mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067B8  E149                   11085mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067BA  E049                   11086mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067BC  E849                   11087mm         LSR.W   #4, D1      
000067BE                         11088mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067BE  0C01 0009              11089mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067C2  6E00 000A              11090mmm         BGT     ALPHA_896
000067C6  0601 0030              11091mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067CA  6000 0006              11092mmm         BRA     DONE_896
000067CE  0601 0037              11093mmm ALPHA_896: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067D2  4E71                   11094mmm DONE_896: NOP
000067D4                         11095mmm         ENDM
000067D4  4E4F                   11096mm         TRAP    #15         ; EXECUTE OUTPUT
000067D6                         11097mm         
000067D6  3212                   11098mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067D8  E149                   11099mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067DA  E949                   11100mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000067DC  E049                   11101mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067DE  E849                   11102mm         LSR.W   #4, D1      
000067E0                         11103mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067E0  0C01 0009              11104mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067E4  6E00 000A              11105mmm         BGT     ALPHA_897
000067E8  0601 0030              11106mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067EC  6000 0006              11107mmm         BRA     DONE_897
000067F0  0601 0037              11108mmm ALPHA_897: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067F4  4E71                   11109mmm DONE_897: NOP
000067F6                         11110mmm         ENDM
000067F6  4E4F                   11111mm         TRAP    #15         ; EXECUTE OUTPUT       
000067F8                         11112mm         ENDM 
000067F8  3605                   11113m         MOVE.W  D5, D3
000067FA  6000 02CC              11114m         BRA     COMPLETE_864
000067FE                         11115m ADRIMMEDIATEL_864:
000067FE  361A                   11116m         MOVE.W  (A2)+, D3
00006800                         11117mm         PRINTHASH
00006800  103C 0006              11118mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006804  323C 0023              11119mm         MOVE.W  #35, D1     ; AN = SIGN
00006808  4E4F                   11120mm         TRAP    #15         ; OUTPUT = SIGN
0000680A                         11121mm         ENDM
0000680A                         11122mm         PRINTSIGN
0000680A  103C 0006              11123mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000680E  323C 0024              11124mm         MOVE.W  #36, D1     ; AN = SIGN
00006812  4E4F                   11125mm         TRAP    #15         ; OUTPUT = SIGN
00006814                         11126mm         ENDM
00006814                         11127mm         ADROUT 
00006814  3212                   11128mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006816  E049                   11129mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006818  E849                   11130mm         LSR.W   #4, D1      
0000681A                         11131mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000681A  0C01 0009              11132mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000681E  6E00 000A              11133mmm         BGT     ALPHA_901
00006822  0601 0030              11134mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006826  6000 0006              11135mmm         BRA     DONE_901
0000682A  0601 0037              11136mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000682E  4E71                   11137mmm DONE_901: NOP
00006830                         11138mmm         ENDM
00006830  4E4F                   11139mm         TRAP    #15         ; EXECUTE OUTPUT
00006832                         11140mm         
00006832  3212                   11141mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006834  E949                   11142mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006836  E049                   11143mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006838  E849                   11144mm         LSR.W   #4, D1      
0000683A                         11145mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000683A  0C01 0009              11146mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000683E  6E00 000A              11147mmm         BGT     ALPHA_902
00006842  0601 0030              11148mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006846  6000 0006              11149mmm         BRA     DONE_902
0000684A  0601 0037              11150mmm ALPHA_902: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000684E  4E71                   11151mmm DONE_902: NOP
00006850                         11152mmm         ENDM
00006850  4E4F                   11153mm         TRAP    #15         ; EXECUTE OUTPUT
00006852                         11154mm         
00006852  3212                   11155mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006854  E149                   11156mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006856  E049                   11157mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006858  E849                   11158mm         LSR.W   #4, D1      
0000685A                         11159mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000685A  0C01 0009              11160mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000685E  6E00 000A              11161mmm         BGT     ALPHA_903
00006862  0601 0030              11162mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006866  6000 0006              11163mmm         BRA     DONE_903
0000686A  0601 0037              11164mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000686E  4E71                   11165mmm DONE_903: NOP
00006870                         11166mmm         ENDM
00006870  4E4F                   11167mm         TRAP    #15         ; EXECUTE OUTPUT
00006872                         11168mm         
00006872  3212                   11169mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006874  E149                   11170mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006876  E949                   11171mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006878  E049                   11172mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000687A  E849                   11173mm         LSR.W   #4, D1      
0000687C                         11174mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000687C  0C01 0009              11175mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006880  6E00 000A              11176mmm         BGT     ALPHA_904
00006884  0601 0030              11177mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006888  6000 0006              11178mmm         BRA     DONE_904
0000688C  0601 0037              11179mmm ALPHA_904: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006890  4E71                   11180mmm DONE_904: NOP
00006892                         11181mmm         ENDM
00006892  4E4F                   11182mm         TRAP    #15         ; EXECUTE OUTPUT       
00006894                         11183mm         ENDM 
00006894  361A                   11184m         MOVE.W  (A2)+, D3
00006896                         11185mm         ADROUT
00006896  3212                   11186mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006898  E049                   11187mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000689A  E849                   11188mm         LSR.W   #4, D1      
0000689C                         11189mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000689C  0C01 0009              11190mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068A0  6E00 000A              11191mmm         BGT     ALPHA_906
000068A4  0601 0030              11192mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068A8  6000 0006              11193mmm         BRA     DONE_906
000068AC  0601 0037              11194mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068B0  4E71                   11195mmm DONE_906: NOP
000068B2                         11196mmm         ENDM
000068B2  4E4F                   11197mm         TRAP    #15         ; EXECUTE OUTPUT
000068B4                         11198mm         
000068B4  3212                   11199mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068B6  E949                   11200mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000068B8  E049                   11201mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068BA  E849                   11202mm         LSR.W   #4, D1      
000068BC                         11203mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068BC  0C01 0009              11204mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068C0  6E00 000A              11205mmm         BGT     ALPHA_907
000068C4  0601 0030              11206mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068C8  6000 0006              11207mmm         BRA     DONE_907
000068CC  0601 0037              11208mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068D0  4E71                   11209mmm DONE_907: NOP
000068D2                         11210mmm         ENDM
000068D2  4E4F                   11211mm         TRAP    #15         ; EXECUTE OUTPUT
000068D4                         11212mm         
000068D4  3212                   11213mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068D6  E149                   11214mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068D8  E049                   11215mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068DA  E849                   11216mm         LSR.W   #4, D1      
000068DC                         11217mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068DC  0C01 0009              11218mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068E0  6E00 000A              11219mmm         BGT     ALPHA_908
000068E4  0601 0030              11220mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068E8  6000 0006              11221mmm         BRA     DONE_908
000068EC  0601 0037              11222mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068F0  4E71                   11223mmm DONE_908: NOP
000068F2                         11224mmm         ENDM
000068F2  4E4F                   11225mm         TRAP    #15         ; EXECUTE OUTPUT
000068F4                         11226mm         
000068F4  3212                   11227mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068F6  E149                   11228mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068F8  E949                   11229mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000068FA  E049                   11230mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068FC  E849                   11231mm         LSR.W   #4, D1      
000068FE                         11232mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068FE  0C01 0009              11233mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006902  6E00 000A              11234mmm         BGT     ALPHA_909
00006906  0601 0030              11235mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000690A  6000 0006              11236mmm         BRA     DONE_909
0000690E  0601 0037              11237mmm ALPHA_909: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006912  4E71                   11238mmm DONE_909: NOP
00006914                         11239mmm         ENDM
00006914  4E4F                   11240mm         TRAP    #15         ; EXECUTE OUTPUT       
00006916                         11241mm         ENDM 
00006916  3605                   11242m         MOVE.W  D5, D3
00006918  6000 01AE              11243m         BRA     COMPLETE_864 
0000691C                         11244m ADRABSOLUTEW_864:     
0000691C  361A                   11245m         MOVE.W  (A2)+, D3
0000691E                         11246mm         PRINTSIGN
0000691E  103C 0006              11247mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006922  323C 0024              11248mm         MOVE.W  #36, D1     ; AN = SIGN
00006926  4E4F                   11249mm         TRAP    #15         ; OUTPUT = SIGN
00006928                         11250mm         ENDM
00006928                         11251mm         PRINTSIGN
00006928  103C 0006              11252mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000692C  323C 0024              11253mm         MOVE.W  #36, D1     ; AN = SIGN
00006930  4E4F                   11254mm         TRAP    #15         ; OUTPUT = SIGN
00006932                         11255mm         ENDM
00006932                         11256mm         ADROUT
00006932  3212                   11257mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006934  E049                   11258mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006936  E849                   11259mm         LSR.W   #4, D1      
00006938                         11260mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006938  0C01 0009              11261mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000693C  6E00 000A              11262mmm         BGT     ALPHA_913
00006940  0601 0030              11263mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006944  6000 0006              11264mmm         BRA     DONE_913
00006948  0601 0037              11265mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000694C  4E71                   11266mmm DONE_913: NOP
0000694E                         11267mmm         ENDM
0000694E  4E4F                   11268mm         TRAP    #15         ; EXECUTE OUTPUT
00006950                         11269mm         
00006950  3212                   11270mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006952  E949                   11271mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006954  E049                   11272mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006956  E849                   11273mm         LSR.W   #4, D1      
00006958                         11274mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006958  0C01 0009              11275mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000695C  6E00 000A              11276mmm         BGT     ALPHA_914
00006960  0601 0030              11277mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006964  6000 0006              11278mmm         BRA     DONE_914
00006968  0601 0037              11279mmm ALPHA_914: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000696C  4E71                   11280mmm DONE_914: NOP
0000696E                         11281mmm         ENDM
0000696E  4E4F                   11282mm         TRAP    #15         ; EXECUTE OUTPUT
00006970                         11283mm         
00006970  3212                   11284mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006972  E149                   11285mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006974  E049                   11286mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006976  E849                   11287mm         LSR.W   #4, D1      
00006978                         11288mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006978  0C01 0009              11289mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000697C  6E00 000A              11290mmm         BGT     ALPHA_915
00006980  0601 0030              11291mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006984  6000 0006              11292mmm         BRA     DONE_915
00006988  0601 0037              11293mmm ALPHA_915: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000698C  4E71                   11294mmm DONE_915: NOP
0000698E                         11295mmm         ENDM
0000698E  4E4F                   11296mm         TRAP    #15         ; EXECUTE OUTPUT
00006990                         11297mm         
00006990  3212                   11298mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006992  E149                   11299mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006994  E949                   11300mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006996  E049                   11301mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006998  E849                   11302mm         LSR.W   #4, D1      
0000699A                         11303mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000699A  0C01 0009              11304mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000699E  6E00 000A              11305mmm         BGT     ALPHA_916
000069A2  0601 0030              11306mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069A6  6000 0006              11307mmm         BRA     DONE_916
000069AA  0601 0037              11308mmm ALPHA_916: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069AE  4E71                   11309mmm DONE_916: NOP
000069B0                         11310mmm         ENDM
000069B0  4E4F                   11311mm         TRAP    #15         ; EXECUTE OUTPUT       
000069B2                         11312mm         ENDM 
000069B2  3605                   11313m         MOVE.W  D5, D3
000069B4  6000 0112              11314m         BRA     COMPLETE_864  
000069B8                         11315m ADRABSOLUTEL_864:  
000069B8  361A                   11316m         MOVE.W  (A2)+, D3
000069BA                         11317mm         PRINTSIGN
000069BA  103C 0006              11318mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069BE  323C 0024              11319mm         MOVE.W  #36, D1     ; AN = SIGN
000069C2  4E4F                   11320mm         TRAP    #15         ; OUTPUT = SIGN
000069C4                         11321mm         ENDM
000069C4                         11322mm         ADROUT 
000069C4  3212                   11323mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069C6  E049                   11324mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069C8  E849                   11325mm         LSR.W   #4, D1      
000069CA                         11326mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069CA  0C01 0009              11327mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069CE  6E00 000A              11328mmm         BGT     ALPHA_919
000069D2  0601 0030              11329mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069D6  6000 0006              11330mmm         BRA     DONE_919
000069DA  0601 0037              11331mmm ALPHA_919: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069DE  4E71                   11332mmm DONE_919: NOP
000069E0                         11333mmm         ENDM
000069E0  4E4F                   11334mm         TRAP    #15         ; EXECUTE OUTPUT
000069E2                         11335mm         
000069E2  3212                   11336mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069E4  E949                   11337mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000069E6  E049                   11338mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069E8  E849                   11339mm         LSR.W   #4, D1      
000069EA                         11340mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069EA  0C01 0009              11341mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069EE  6E00 000A              11342mmm         BGT     ALPHA_920
000069F2  0601 0030              11343mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069F6  6000 0006              11344mmm         BRA     DONE_920
000069FA  0601 0037              11345mmm ALPHA_920: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069FE  4E71                   11346mmm DONE_920: NOP
00006A00                         11347mmm         ENDM
00006A00  4E4F                   11348mm         TRAP    #15         ; EXECUTE OUTPUT
00006A02                         11349mm         
00006A02  3212                   11350mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A04  E149                   11351mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A06  E049                   11352mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A08  E849                   11353mm         LSR.W   #4, D1      
00006A0A                         11354mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A0A  0C01 0009              11355mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A0E  6E00 000A              11356mmm         BGT     ALPHA_921
00006A12  0601 0030              11357mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A16  6000 0006              11358mmm         BRA     DONE_921
00006A1A  0601 0037              11359mmm ALPHA_921: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A1E  4E71                   11360mmm DONE_921: NOP
00006A20                         11361mmm         ENDM
00006A20  4E4F                   11362mm         TRAP    #15         ; EXECUTE OUTPUT
00006A22                         11363mm         
00006A22  3212                   11364mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A24  E149                   11365mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A26  E949                   11366mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A28  E049                   11367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A2A  E849                   11368mm         LSR.W   #4, D1      
00006A2C                         11369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A2C  0C01 0009              11370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A30  6E00 000A              11371mmm         BGT     ALPHA_922
00006A34  0601 0030              11372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A38  6000 0006              11373mmm         BRA     DONE_922
00006A3C  0601 0037              11374mmm ALPHA_922: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A40  4E71                   11375mmm DONE_922: NOP
00006A42                         11376mmm         ENDM
00006A42  4E4F                   11377mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A44                         11378mm         ENDM 
00006A44  361A                   11379m         MOVE.W  (A2)+, D3
00006A46                         11380mm         ADROUT
00006A46  3212                   11381mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A48  E049                   11382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A4A  E849                   11383mm         LSR.W   #4, D1      
00006A4C                         11384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A4C  0C01 0009              11385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A50  6E00 000A              11386mmm         BGT     ALPHA_924
00006A54  0601 0030              11387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A58  6000 0006              11388mmm         BRA     DONE_924
00006A5C  0601 0037              11389mmm ALPHA_924: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A60  4E71                   11390mmm DONE_924: NOP
00006A62                         11391mmm         ENDM
00006A62  4E4F                   11392mm         TRAP    #15         ; EXECUTE OUTPUT
00006A64                         11393mm         
00006A64  3212                   11394mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A66  E949                   11395mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A68  E049                   11396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A6A  E849                   11397mm         LSR.W   #4, D1      
00006A6C                         11398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A6C  0C01 0009              11399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A70  6E00 000A              11400mmm         BGT     ALPHA_925
00006A74  0601 0030              11401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A78  6000 0006              11402mmm         BRA     DONE_925
00006A7C  0601 0037              11403mmm ALPHA_925: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A80  4E71                   11404mmm DONE_925: NOP
00006A82                         11405mmm         ENDM
00006A82  4E4F                   11406mm         TRAP    #15         ; EXECUTE OUTPUT
00006A84                         11407mm         
00006A84  3212                   11408mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A86  E149                   11409mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A88  E049                   11410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A8A  E849                   11411mm         LSR.W   #4, D1      
00006A8C                         11412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A8C  0C01 0009              11413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A90  6E00 000A              11414mmm         BGT     ALPHA_926
00006A94  0601 0030              11415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A98  6000 0006              11416mmm         BRA     DONE_926
00006A9C  0601 0037              11417mmm ALPHA_926: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AA0  4E71                   11418mmm DONE_926: NOP
00006AA2                         11419mmm         ENDM
00006AA2  4E4F                   11420mm         TRAP    #15         ; EXECUTE OUTPUT
00006AA4                         11421mm         
00006AA4  3212                   11422mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AA6  E149                   11423mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AA8  E949                   11424mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006AAA  E049                   11425mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AAC  E849                   11426mm         LSR.W   #4, D1      
00006AAE                         11427mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AAE  0C01 0009              11428mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AB2  6E00 000A              11429mmm         BGT     ALPHA_927
00006AB6  0601 0030              11430mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ABA  6000 0006              11431mmm         BRA     DONE_927
00006ABE  0601 0037              11432mmm ALPHA_927: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AC2  4E71                   11433mmm DONE_927: NOP
00006AC4                         11434mmm         ENDM
00006AC4  4E4F                   11435mm         TRAP    #15         ; EXECUTE OUTPUT       
00006AC6                         11436mm         ENDM 
00006AC6  3605                   11437m         MOVE.W  D5, D3
00006AC8                         11438m 
00006AC8                         11439m COMPLETE_864:  ; OPCODE HAS BEEN VERIFIED
00006AC8                         11440m         ENDM
00006AC8  4E75                   11441          RTS                 ; Return from decodeJSR subroutine
00006ACA                         11442  
00006ACA                         11443  
00006ACA                         11444  ; ------------------------------------------------------------
00006ACA                         11445  ; 15. "decodeRTS" subroutine
00006ACA                         11446  ; AUTHOR
00006ACA                         11447  ;
00006ACA                         11448  ; TODO: DESCRIPTION
00006ACA                         11449  ; ------------------------------------------------------------
00006ACA                         11450  decodeRTS:
00006ACA                         11451m         verifyOpcode    pRTS, (A2)
00006ACA  43F8 0228              11452m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006ACE  3612                   11453m         MOVE.W  (A2), D3      ; INPUT VALUE
00006AD0  123C 000F              11454m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006AD4                         11455m         
00006AD4                         11456m LOOP_928: 
00006AD4  0C11 0030              11457m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006AD8  6700 000E              11458m         BEQ     CHECKFOR0_928
00006ADC  0C11 0031              11459m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006AE0  6700 0010              11460m         BEQ     CHECKFOR1_928
00006AE4  6000 0012              11461m         BRA     NEXT_928      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006AE8                         11462m         
00006AE8                         11463m CHECKFOR0_928: 
00006AE8  0303                   11464m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006AEA  6600 0064              11465m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006AEE  6000 0008              11466m         BRA     NEXT_928
00006AF2                         11467m 
00006AF2                         11468m CHECKFOR1_928:
00006AF2  0303                   11469m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006AF4  6700 005A              11470m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006AF8                         11471m 
00006AF8                         11472m NEXT_928: 
00006AF8  B23C 0000              11473m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006AFC  6700 0008              11474m         BEQ     COMPLETE_928  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B00  5301                   11475m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B02  1819                   11476m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B04  60CE                   11477m         BRA     LOOP_928      ; BEGIN LOOP AGAIN
00006B06                         11478m 
00006B06                         11479m COMPLETE_928:  ; OPCODE HAS BEEN VERIFIED
00006B06                         11480m         ENDM
00006B06  43F8 00AD              11481          LEA     oRTS, A1     
00006B0A  103C 000E              11482          MOVE.B  #14,D0          
00006B0E  4E4F                   11483          TRAP    #15
00006B10  4E75                   11484          RTS                 ; Return from decodeRTS subroutine
00006B12                         11485  
00006B12                         11486  
00006B12                         11487  ; ------------------------------------------------------------
00006B12                         11488  ; 16. "decodeBRA" subroutine
00006B12                         11489  ; AUTHOR
00006B12                         11490  ;
00006B12                         11491  ; TODO: DESCRIPTION
00006B12                         11492  ; ------------------------------------------------------------
00006B12                         11493  decodeBRA:
00006B12                         11494m         verifyOpcode    pBRA, (A2)
00006B12  43F8 0239              11495m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006B16  3612                   11496m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B18  123C 000F              11497m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B1C                         11498m         
00006B1C                         11499m LOOP_929: 
00006B1C  0C11 0030              11500m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B20  6700 000E              11501m         BEQ     CHECKFOR0_929
00006B24  0C11 0031              11502m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B28  6700 0010              11503m         BEQ     CHECKFOR1_929
00006B2C  6000 0012              11504m         BRA     NEXT_929      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B30                         11505m         
00006B30                         11506m CHECKFOR0_929: 
00006B30  0303                   11507m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B32  6600 001C              11508m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B36  6000 0008              11509m         BRA     NEXT_929
00006B3A                         11510m 
00006B3A                         11511m CHECKFOR1_929:
00006B3A  0303                   11512m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006B3C  6700 0012              11513m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006B40                         11514m 
00006B40                         11515m NEXT_929: 
00006B40  B23C 0000              11516m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006B44  6700 0008              11517m         BEQ     COMPLETE_929  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B48  5301                   11518m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B4A  1819                   11519m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B4C  60CE                   11520m         BRA     LOOP_929      ; BEGIN LOOP AGAIN
00006B4E                         11521m 
00006B4E                         11522m COMPLETE_929:  ; OPCODE HAS BEEN VERIFIED
00006B4E                         11523m         ENDM
00006B4E                         11524          ; put code here
00006B4E  4E75                   11525          RTS                 ; Return from decodeBRA subroutine
00006B50                         11526  
00006B50                         11527  
00006B50                         11528  
00006B50                         11529  
00006B50                         11530  ; ========================================================================
00006B50                         11531  ; Generic Helper Functions
00006B50                         11532  ; 
00006B50                         11533  ; Set of subroutines which do various tasks which are repeated frequently.
00006B50                         11534  ; Each helper function should be commented with required input and output.
00006B50                         11535  ; 
00006B50                         11536  ; If input is required, request through D0, D1, etc
00006B50                         11537  ; Return using D0
00006B50                         11538  ; ========================================================================
00006B50                         11539  
00006B50                         11540  ; ------------------------------------------------------------
00006B50                         11541  ; outputData
00006B50                         11542  ; Jonathan
00006B50                         11543  ;
00006B50                         11544  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00006B50                         11545  ; ------------------------------------------------------------
00006B50                         11546  outputData:
00006B50  103C 0006              11547          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00006B54  323C 003D              11548          MOVE.W  #61, D1     ; An = sign
00006B58  4E4F                   11549          TRAP    #15         ; Output = sign
00006B5A                         11550          
00006B5A  3212                   11551          MOVE.W  (A2), D1    ; Move A2 into D1
00006B5C  E049                   11552          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B5E  E849                   11553          LSR.W   #4, D1      
00006B60                         11554m         ConvertHtoA D1      ; Convert D1 to a character
00006B60  0C01 0009              11555m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B64  6E00 000A              11556m         BGT     ALPHA_930
00006B68  0601 0030              11557m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B6C  6000 0006              11558m         BRA     DONE_930
00006B70  0601 0037              11559m ALPHA_930: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B74  4E71                   11560m DONE_930: NOP
00006B76                         11561m         ENDM
00006B76  4E4F                   11562          TRAP    #15         ; Execute output
00006B78                         11563          
00006B78  3212                   11564          MOVE.W  (A2), D1    ; Move A2 into D1
00006B7A  E949                   11565          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00006B7C  E049                   11566          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B7E  E849                   11567          LSR.W   #4, D1      
00006B80                         11568m         ConvertHtoA D1      ; Convert D1 to a character
00006B80  0C01 0009              11569m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B84  6E00 000A              11570m         BGT     ALPHA_931
00006B88  0601 0030              11571m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B8C  6000 0006              11572m         BRA     DONE_931
00006B90  0601 0037              11573m ALPHA_931: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B94  4E71                   11574m DONE_931: NOP
00006B96                         11575m         ENDM
00006B96  4E4F                   11576          TRAP    #15         ; Execute output
00006B98                         11577          
00006B98  3212                   11578          MOVE.W  (A2), D1    ; Move A2 into D1
00006B9A  E149                   11579          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006B9C  E049                   11580          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B9E  E849                   11581          LSR.W   #4, D1      
00006BA0                         11582m         ConvertHtoA D1      ; Convert D1 to a character
00006BA0  0C01 0009              11583m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BA4  6E00 000A              11584m         BGT     ALPHA_932
00006BA8  0601 0030              11585m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BAC  6000 0006              11586m         BRA     DONE_932
00006BB0  0601 0037              11587m ALPHA_932: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BB4  4E71                   11588m DONE_932: NOP
00006BB6                         11589m         ENDM
00006BB6  4E4F                   11590          TRAP    #15         ; Execute output
00006BB8                         11591          
00006BB8  3212                   11592          MOVE.W  (A2), D1    ; Move A2 into D1
00006BBA  E149                   11593          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006BBC  E949                   11594          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00006BBE  E049                   11595          LSR.W   #8, D1      ; Get the first hex digit of D1
00006BC0  E849                   11596          LSR.W   #4, D1      
00006BC2                         11597m         ConvertHtoA D1      ; Convert D1 to a character
00006BC2  0C01 0009              11598m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BC6  6E00 000A              11599m         BGT     ALPHA_933
00006BCA  0601 0030              11600m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BCE  6000 0006              11601m         BRA     DONE_933
00006BD2  0601 0037              11602m ALPHA_933: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BD6  4E71                   11603m DONE_933: NOP
00006BD8                         11604m         ENDM
00006BD8  4E4F                   11605          TRAP    #15         ; Execute output
00006BDA  4E75                   11606          RTS
00006BDC                         11607  
00006BDC                         11608  
00006BDC                         11609  
00006BDC                         11610  
00006BDC                         11611  
00006BDC                         11612  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00006BDC                         11613                              ; End of Code
00006BDC                         11614          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_157  22BA
ADRABSOLUTEDST_19   1582
ADRABSOLUTEDST_222  2898
ADRABSOLUTEDST_295  2FD0
ADRABSOLUTEDST_360  35AE
ADRABSOLUTEDST_429  3C30
ADRABSOLUTEDST_498  42B2
ADRABSOLUTEDST_566  4900
ADRABSOLUTEDST_639  5038
ADRABSOLUTEDST_704  5616
ADRABSOLUTEDST_773  5C92
ADRABSOLUTEDST_85   1B66
ADRABSOLUTEDST_864  6744
ADRABSOLUTEL_157    252E
ADRABSOLUTEL_19     17F6
ADRABSOLUTEL_222    2B0C
ADRABSOLUTEL_295    3244
ADRABSOLUTEL_360    3822
ADRABSOLUTEL_429    3EA4
ADRABSOLUTEL_498    4526
ADRABSOLUTEL_566    4B74
ADRABSOLUTEL_639    52AC
ADRABSOLUTEL_704    588A
ADRABSOLUTEL_773    5F06
ADRABSOLUTEL_85     1DDA
ADRABSOLUTEL_864    69B8
ADRABSOLUTEW_157    2492
ADRABSOLUTEW_19     175A
ADRABSOLUTEW_222    2A70
ADRABSOLUTEW_295    31A8
ADRABSOLUTEW_360    3786
ADRABSOLUTEW_429    3E08
ADRABSOLUTEW_498    448A
ADRABSOLUTEW_566    4AD8
ADRABSOLUTEW_639    5210
ADRABSOLUTEW_704    57EE
ADRABSOLUTEW_773    5E6A
ADRABSOLUTEW_85     1D3E
ADRABSOLUTEW_864    691C
ADRABSOLUTE_157     229C
ADRABSOLUTE_19      1564
ADRABSOLUTE_222     287A
ADRABSOLUTE_295     2FB2
ADRABSOLUTE_360     3590
ADRABSOLUTE_429     3C12
ADRABSOLUTE_498     4294
ADRABSOLUTE_566     48E2
ADRABSOLUTE_639     501A
ADRABSOLUTE_704     55F8
ADRABSOLUTE_773     5C74
ADRABSOLUTE_85      1B48
ADRABSOLUTE_864     6726
ADRDEST_156         2072
ADRDEST_18          133A
ADRDEST_221         2650
ADRDEST_294         2D88
ADRDEST_359         3366
ADRDEST_428         39E8
ADRDEST_497         406A
ADRDEST_565         46B8
ADRDEST_638         4DF0
ADRDEST_703         53CE
ADRDEST_772         5A4A
ADRDEST_84          191E
ADRDEST_863         64FC
ADRIMMEDIATEL_157   2374
ADRIMMEDIATEL_19    163C
ADRIMMEDIATEL_222   2952
ADRIMMEDIATEL_295   308A
ADRIMMEDIATEL_360   3668
ADRIMMEDIATEL_429   3CEA
ADRIMMEDIATEL_498   436C
ADRIMMEDIATEL_566   49BA
ADRIMMEDIATEL_639   50F2
ADRIMMEDIATEL_704   56D0
ADRIMMEDIATEL_773   5D4C
ADRIMMEDIATEL_85    1C20
ADRIMMEDIATEL_864   67FE
ADRIMMEDIATEW_157   22D8
ADRIMMEDIATEW_19    15A0
ADRIMMEDIATEW_222   28B6
ADRIMMEDIATEW_295   2FEE
ADRIMMEDIATEW_360   35CC
ADRIMMEDIATEW_429   3C4E
ADRIMMEDIATEW_498   42D0
ADRIMMEDIATEW_566   491E
ADRIMMEDIATEW_639   5056
ADRIMMEDIATEW_704   5634
ADRIMMEDIATEW_773   5CB0
ADRIMMEDIATEW_85    1B84
ADRIMMEDIATEW_864   6762
ADRIMMEDIATE_157    22D0
ADRIMMEDIATE_19     1598
ADRIMMEDIATE_222    28AE
ADRIMMEDIATE_295    2FE6
ADRIMMEDIATE_360    35C4
ADRIMMEDIATE_429    3C46
ADRIMMEDIATE_498    42C8
ADRIMMEDIATE_566    4916
ADRIMMEDIATE_639    504E
ADRIMMEDIATE_704    562C
ADRIMMEDIATE_773    5CA8
ADRIMMEDIATE_85     1B7C
ADRIMMEDIATE_864    675A
ADROUT              580
ADRREGDIRECTDEST_157  20FC
ADRREGDIRECTDEST_19  13C4
ADRREGDIRECTDEST_222  26DA
ADRREGDIRECTDEST_295  2E12
ADRREGDIRECTDEST_360  33F0
ADRREGDIRECTDEST_429  3A72
ADRREGDIRECTDEST_498  40F4
ADRREGDIRECTDEST_566  4742
ADRREGDIRECTDEST_639  4E7A
ADRREGDIRECTDEST_704  5458
ADRREGDIRECTDEST_773  5AD4
ADRREGDIRECTDEST_85  19A8
ADRREGDIRECTDEST_864  6586
ADRREGDIRECTSRC_157  2118
ADRREGDIRECTSRC_19  13E0
ADRREGDIRECTSRC_222  26F6
ADRREGDIRECTSRC_295  2E2E
ADRREGDIRECTSRC_360  340C
ADRREGDIRECTSRC_429  3A8E
ADRREGDIRECTSRC_498  4110
ADRREGDIRECTSRC_566  475E
ADRREGDIRECTSRC_639  4E96
ADRREGDIRECTSRC_704  5474
ADRREGDIRECTSRC_773  5AF0
ADRREGDIRECTSRC_85  19C4
ADRREGDIRECTSRC_864  65A2
ADRREGDIRECT_157    20F4
ADRREGDIRECT_19     13BC
ADRREGDIRECT_222    26D2
ADRREGDIRECT_295    2E0A
ADRREGDIRECT_360    33E8
ADRREGDIRECT_429    3A6A
ADRREGDIRECT_498    40EC
ADRREGDIRECT_566    473A
ADRREGDIRECT_639    4E72
ADRREGDIRECT_704    5450
ADRREGDIRECT_773    5ACC
ADRREGDIRECT_85     19A0
ADRREGDIRECT_864    657E
ADRREGINDIRECTDEST_157  213E
ADRREGINDIRECTDEST_19  1406
ADRREGINDIRECTDEST_222  271C
ADRREGINDIRECTDEST_295  2E54
ADRREGINDIRECTDEST_360  3432
ADRREGINDIRECTDEST_429  3AB4
ADRREGINDIRECTDEST_498  4136
ADRREGINDIRECTDEST_566  4784
ADRREGINDIRECTDEST_639  4EBC
ADRREGINDIRECTDEST_704  549A
ADRREGINDIRECTDEST_773  5B16
ADRREGINDIRECTDEST_85  19EA
ADRREGINDIRECTDEST_864  65C8
ADRREGINDIRECTSRC_157  216E
ADRREGINDIRECTSRC_19  1436
ADRREGINDIRECTSRC_222  274C
ADRREGINDIRECTSRC_295  2E84
ADRREGINDIRECTSRC_360  3462
ADRREGINDIRECTSRC_429  3AE4
ADRREGINDIRECTSRC_498  4166
ADRREGINDIRECTSRC_566  47B4
ADRREGINDIRECTSRC_639  4EEC
ADRREGINDIRECTSRC_704  54CA
ADRREGINDIRECTSRC_773  5B46
ADRREGINDIRECTSRC_85  1A1A
ADRREGINDIRECTSRC_864  65F8
ADRREGINDIRECT_157  2136
ADRREGINDIRECT_19   13FE
ADRREGINDIRECT_222  2714
ADRREGINDIRECT_295  2E4C
ADRREGINDIRECT_360  342A
ADRREGINDIRECT_429  3AAC
ADRREGINDIRECT_498  412E
ADRREGINDIRECT_566  477C
ADRREGINDIRECT_639  4EB4
ADRREGINDIRECT_704  5492
ADRREGINDIRECT_773  5B0E
ADRREGINDIRECT_85   19E2
ADRREGINDIRECT_864  65C0
ADRREGPOSTINCDEST_157  21A8
ADRREGPOSTINCDEST_19  1470
ADRREGPOSTINCDEST_222  2786
ADRREGPOSTINCDEST_295  2EBE
ADRREGPOSTINCDEST_360  349C
ADRREGPOSTINCDEST_429  3B1E
ADRREGPOSTINCDEST_498  41A0
ADRREGPOSTINCDEST_566  47EE
ADRREGPOSTINCDEST_639  4F26
ADRREGPOSTINCDEST_704  5504
ADRREGPOSTINCDEST_773  5B80
ADRREGPOSTINCDEST_85  1A54
ADRREGPOSTINCDEST_864  6632
ADRREGPOSTINCSRC_157  21E2
ADRREGPOSTINCSRC_19  14AA
ADRREGPOSTINCSRC_222  27C0
ADRREGPOSTINCSRC_295  2EF8
ADRREGPOSTINCSRC_360  34D6
ADRREGPOSTINCSRC_429  3B58
ADRREGPOSTINCSRC_498  41DA
ADRREGPOSTINCSRC_566  4828
ADRREGPOSTINCSRC_639  4F60
ADRREGPOSTINCSRC_704  553E
ADRREGPOSTINCSRC_773  5BBA
ADRREGPOSTINCSRC_85  1A8E
ADRREGPOSTINCSRC_864  666C
ADRREGPOSTINC_157   21A0
ADRREGPOSTINC_19    1468
ADRREGPOSTINC_222   277E
ADRREGPOSTINC_295   2EB6
ADRREGPOSTINC_360   3494
ADRREGPOSTINC_429   3B16
ADRREGPOSTINC_498   4198
ADRREGPOSTINC_566   47E6
ADRREGPOSTINC_639   4F1E
ADRREGPOSTINC_704   54FC
ADRREGPOSTINC_773   5B78
ADRREGPOSTINC_85    1A4C
ADRREGPOSTINC_864   662A
ADRREGPREDECDEST_157  2226
ADRREGPREDECDEST_19  14EE
ADRREGPREDECDEST_222  2804
ADRREGPREDECDEST_295  2F3C
ADRREGPREDECDEST_360  351A
ADRREGPREDECDEST_429  3B9C
ADRREGPREDECDEST_498  421E
ADRREGPREDECDEST_566  486C
ADRREGPREDECDEST_639  4FA4
ADRREGPREDECDEST_704  5582
ADRREGPREDECDEST_773  5BFE
ADRREGPREDECDEST_85  1AD2
ADRREGPREDECDEST_864  66B0
ADRREGPREDECSRC_157  2260
ADRREGPREDECSRC_19  1528
ADRREGPREDECSRC_222  283E
ADRREGPREDECSRC_295  2F76
ADRREGPREDECSRC_360  3554
ADRREGPREDECSRC_429  3BD6
ADRREGPREDECSRC_498  4258
ADRREGPREDECSRC_566  48A6
ADRREGPREDECSRC_639  4FDE
ADRREGPREDECSRC_704  55BC
ADRREGPREDECSRC_773  5C38
ADRREGPREDECSRC_85  1B0C
ADRREGPREDECSRC_864  66EA
ADRREGPREDEC_157    221E
ADRREGPREDEC_19     14E6
ADRREGPREDEC_222    27FC
ADRREGPREDEC_295    2F34
ADRREGPREDEC_360    3512
ADRREGPREDEC_429    3B94
ADRREGPREDEC_498    4216
ADRREGPREDEC_566    4864
ADRREGPREDEC_639    4F9C
ADRREGPREDEC_704    557A
ADRREGPREDEC_773    5BF6
ADRREGPREDEC_85     1ACA
ADRREGPREDEC_864    66A8
ADRSOURCE_156       207C
ADRSOURCE_18        1344
ADRSOURCE_221       265A
ADRSOURCE_294       2D92
ADRSOURCE_359       3370
ADRSOURCE_428       39F2
ADRSOURCE_497       4074
ADRSOURCE_565       46C2
ADRSOURCE_638       4DFA
ADRSOURCE_703       53D8
ADRSOURCE_772       5A54
ADRSOURCE_84        1928
ADRSOURCE_863       6506
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_115           1BB0
ALPHA_116           1BD0
ALPHA_117           1BF0
ALPHA_118           1C12
ALPHA_122           1C4C
ALPHA_123           1C6C
ALPHA_124           1C8C
ALPHA_125           1CAE
ALPHA_127           1CCE
ALPHA_128           1CEE
ALPHA_129           1D0E
ALPHA_130           1D30
ALPHA_134           1D6A
ALPHA_135           1D8A
ALPHA_136           1DAA
ALPHA_137           1DCC
ALPHA_140           1DFC
ALPHA_141           1E1C
ALPHA_142           1E3C
ALPHA_143           1E5E
ALPHA_145           1E7E
ALPHA_146           1E9E
ALPHA_147           1EBE
ALPHA_148           1EE0
ALPHA_187           2304
ALPHA_188           2324
ALPHA_189           2344
ALPHA_190           2366
ALPHA_194           23A0
ALPHA_195           23C0
ALPHA_196           23E0
ALPHA_197           2402
ALPHA_199           2422
ALPHA_2             1020
ALPHA_200           2442
ALPHA_201           2462
ALPHA_202           2484
ALPHA_206           24BE
ALPHA_207           24DE
ALPHA_208           24FE
ALPHA_209           2520
ALPHA_212           2550
ALPHA_213           2570
ALPHA_214           2590
ALPHA_215           25B2
ALPHA_217           25D2
ALPHA_218           25F2
ALPHA_219           2612
ALPHA_220           2634
ALPHA_252           28E2
ALPHA_253           2902
ALPHA_254           2922
ALPHA_255           2944
ALPHA_259           297E
ALPHA_260           299E
ALPHA_261           29BE
ALPHA_262           29E0
ALPHA_264           2A00
ALPHA_265           2A20
ALPHA_266           2A40
ALPHA_267           2A62
ALPHA_271           2A9C
ALPHA_272           2ABC
ALPHA_273           2ADC
ALPHA_274           2AFE
ALPHA_277           2B2E
ALPHA_278           2B4E
ALPHA_279           2B6E
ALPHA_280           2B90
ALPHA_282           2BB0
ALPHA_283           2BD0
ALPHA_284           2BF0
ALPHA_285           2C12
ALPHA_3             1042
ALPHA_325           301A
ALPHA_326           303A
ALPHA_327           305A
ALPHA_328           307C
ALPHA_332           30B6
ALPHA_333           30D6
ALPHA_334           30F6
ALPHA_335           3118
ALPHA_337           3138
ALPHA_338           3158
ALPHA_339           3178
ALPHA_340           319A
ALPHA_344           31D4
ALPHA_345           31F4
ALPHA_346           3214
ALPHA_347           3236
ALPHA_350           3266
ALPHA_351           3286
ALPHA_352           32A6
ALPHA_353           32C8
ALPHA_355           32E8
ALPHA_356           3308
ALPHA_357           3328
ALPHA_358           334A
ALPHA_390           35F8
ALPHA_391           3618
ALPHA_392           3638
ALPHA_393           365A
ALPHA_397           3694
ALPHA_398           36B4
ALPHA_399           36D4
ALPHA_4             1062
ALPHA_400           36F6
ALPHA_402           3716
ALPHA_403           3736
ALPHA_404           3756
ALPHA_405           3778
ALPHA_409           37B2
ALPHA_410           37D2
ALPHA_411           37F2
ALPHA_412           3814
ALPHA_415           3844
ALPHA_416           3864
ALPHA_417           3884
ALPHA_418           38A6
ALPHA_420           38C6
ALPHA_421           38E6
ALPHA_422           3906
ALPHA_423           3928
ALPHA_459           3C7A
ALPHA_460           3C9A
ALPHA_461           3CBA
ALPHA_462           3CDC
ALPHA_466           3D16
ALPHA_467           3D36
ALPHA_468           3D56
ALPHA_469           3D78
ALPHA_471           3D98
ALPHA_472           3DB8
ALPHA_473           3DD8
ALPHA_474           3DFA
ALPHA_478           3E34
ALPHA_479           3E54
ALPHA_480           3E74
ALPHA_481           3E96
ALPHA_484           3EC6
ALPHA_485           3EE6
ALPHA_486           3F06
ALPHA_487           3F28
ALPHA_489           3F48
ALPHA_49            15CC
ALPHA_490           3F68
ALPHA_491           3F88
ALPHA_492           3FAA
ALPHA_5             1082
ALPHA_50            15EC
ALPHA_51            160C
ALPHA_52            162E
ALPHA_528           42FC
ALPHA_529           431C
ALPHA_530           433C
ALPHA_531           435E
ALPHA_535           4398
ALPHA_536           43B8
ALPHA_537           43D8
ALPHA_538           43FA
ALPHA_540           441A
ALPHA_541           443A
ALPHA_542           445A
ALPHA_543           447C
ALPHA_547           44B6
ALPHA_548           44D6
ALPHA_549           44F6
ALPHA_550           4518
ALPHA_553           4548
ALPHA_554           4568
ALPHA_555           4588
ALPHA_556           45AA
ALPHA_558           45CA
ALPHA_559           45EA
ALPHA_56            1668
ALPHA_560           460A
ALPHA_561           462C
ALPHA_57            1688
ALPHA_58            16A8
ALPHA_59            16CA
ALPHA_596           494A
ALPHA_597           496A
ALPHA_598           498A
ALPHA_599           49AC
ALPHA_603           49E6
ALPHA_604           4A06
ALPHA_605           4A26
ALPHA_606           4A48
ALPHA_608           4A68
ALPHA_609           4A88
ALPHA_61            16EA
ALPHA_610           4AA8
ALPHA_611           4ACA
ALPHA_615           4B04
ALPHA_616           4B24
ALPHA_617           4B44
ALPHA_618           4B66
ALPHA_62            170A
ALPHA_621           4B96
ALPHA_622           4BB6
ALPHA_623           4BD6
ALPHA_624           4BF8
ALPHA_626           4C18
ALPHA_627           4C38
ALPHA_628           4C58
ALPHA_629           4C7A
ALPHA_63            172A
ALPHA_64            174C
ALPHA_669           5082
ALPHA_670           50A2
ALPHA_671           50C2
ALPHA_672           50E4
ALPHA_676           511E
ALPHA_677           513E
ALPHA_678           515E
ALPHA_679           5180
ALPHA_68            1786
ALPHA_681           51A0
ALPHA_682           51C0
ALPHA_683           51E0
ALPHA_684           5202
ALPHA_688           523C
ALPHA_689           525C
ALPHA_69            17A6
ALPHA_690           527C
ALPHA_691           529E
ALPHA_694           52CE
ALPHA_695           52EE
ALPHA_696           530E
ALPHA_697           5330
ALPHA_699           5350
ALPHA_70            17C6
ALPHA_700           5370
ALPHA_701           5390
ALPHA_702           53B2
ALPHA_71            17E8
ALPHA_734           5660
ALPHA_735           5680
ALPHA_736           56A0
ALPHA_737           56C2
ALPHA_74            1818
ALPHA_741           56FC
ALPHA_742           571C
ALPHA_743           573C
ALPHA_744           575E
ALPHA_746           577E
ALPHA_747           579E
ALPHA_748           57BE
ALPHA_749           57E0
ALPHA_75            1838
ALPHA_753           581A
ALPHA_754           583A
ALPHA_755           585A
ALPHA_756           587C
ALPHA_759           58AC
ALPHA_76            1858
ALPHA_760           58CC
ALPHA_761           58EC
ALPHA_762           590E
ALPHA_764           592E
ALPHA_765           594E
ALPHA_766           596E
ALPHA_767           5990
ALPHA_77            187A
ALPHA_79            189A
ALPHA_8             10B8
ALPHA_80            18BA
ALPHA_803           5CDC
ALPHA_804           5CFC
ALPHA_805           5D1C
ALPHA_806           5D3E
ALPHA_81            18DA
ALPHA_810           5D78
ALPHA_811           5D98
ALPHA_812           5DB8
ALPHA_813           5DDA
ALPHA_815           5DFA
ALPHA_816           5E1A
ALPHA_817           5E3A
ALPHA_818           5E5C
ALPHA_82            18FC
ALPHA_822           5E96
ALPHA_823           5EB6
ALPHA_824           5ED6
ALPHA_825           5EF8
ALPHA_828           5F28
ALPHA_829           5F48
ALPHA_830           5F68
ALPHA_831           5F8A
ALPHA_833           5FAA
ALPHA_834           5FCA
ALPHA_835           5FEA
ALPHA_836           600C
ALPHA_894           678E
ALPHA_895           67AE
ALPHA_896           67CE
ALPHA_897           67F0
ALPHA_9             10DA
ALPHA_901           682A
ALPHA_902           684A
ALPHA_903           686A
ALPHA_904           688C
ALPHA_906           68AC
ALPHA_907           68CC
ALPHA_908           68EC
ALPHA_909           690E
ALPHA_913           6948
ALPHA_914           6968
ALPHA_915           6988
ALPHA_916           69AA
ALPHA_919           69DA
ALPHA_920           69FA
ALPHA_921           6A1A
ALPHA_922           6A3C
ALPHA_924           6A5C
ALPHA_925           6A7C
ALPHA_926           6A9C
ALPHA_927           6ABE
ALPHA_930           6B70
ALPHA_931           6B90
ALPHA_932           6BB0
ALPHA_933           6BD2
AREG_M              625A
AREG_R              632E
ARIREG              125C
ARISHIFT            1250
ASL_M               6242
ASL_R               6316
ASR_M               6250
ASR_R               6324
CHECKFOR0_149       1F0A
CHECKFOR0_15        127E
CHECKFOR0_150       1F48
CHECKFOR0_16        12C6
CHECKFOR0_288       2C5E
CHECKFOR0_426       3974
CHECKFOR0_495       3FF6
CHECKFOR0_564       4678
CHECKFOR0_632       4CC6
CHECKFOR0_770       59DC
CHECKFOR0_837       6036
CHECKFOR0_842       610A
CHECKFOR0_847       61DE
CHECKFOR0_848       621C
CHECKFOR0_853       62F0
CHECKFOR0_858       63C4
CHECKFOR0_859       6402
CHECKFOR0_860       6440
CHECKFOR0_861       647E
CHECKFOR0_862       64BC
CHECKFOR0_928       6AE8
CHECKFOR0_929       6B30
CHECKFOR1_149       1F14
CHECKFOR1_15        1288
CHECKFOR1_150       1F52
CHECKFOR1_16        12D0
CHECKFOR1_288       2C68
CHECKFOR1_426       397E
CHECKFOR1_495       4000
CHECKFOR1_564       4682
CHECKFOR1_632       4CD0
CHECKFOR1_770       59E6
CHECKFOR1_837       6040
CHECKFOR1_842       6114
CHECKFOR1_847       61E8
CHECKFOR1_848       6226
CHECKFOR1_853       62FA
CHECKFOR1_858       63CE
CHECKFOR1_859       640C
CHECKFOR1_860       644A
CHECKFOR1_861       6488
CHECKFOR1_862       64C6
CHECKFOR1_928       6AF2
CHECKFOR1_929       6B3A
CHECKFORB_17        12F2
CHECKFORB_427       39A0
CHECKFORB_496       4022
CHECKFORB_771       5A06
CHECKFORB_838       6076
CHECKFORB_843       614A
CHECKFORB_849       625C
CHECKFORB_854       6330
CHECKFORDESTDN_151  1F78
CHECKFORDESTDN_289  2C8E
CHECKFORDESTDN_633  4CF6
CHECKFORL_17        131E
CHECKFORL_427       39CC
CHECKFORL_496       404E
CHECKFORL_771       5A32
CHECKFORL_838       60A2
CHECKFORL_843       6176
CHECKFORL_849       6288
CHECKFORL_854       635C
CHECKFORSRCDN_151   1FC4
CHECKFORSRCDN_289   2CDA
CHECKFORSRCDN_633   4D42
CHECKFORW_17        1308
CHECKFORW_427       39B6
CHECKFORW_496       4038
CHECKFORW_771       5A1C
CHECKFORW_838       608C
CHECKFORW_843       6160
CHECKFORW_849       6272
CHECKFORW_854       6346
COMPLETE_149        1F28
COMPLETE_15         129C
COMPLETE_150        1F66
COMPLETE_151        2052
COMPLETE_156        2084
COMPLETE_157        263E
COMPLETE_16         12E4
COMPLETE_17         132C
COMPLETE_18         134C
COMPLETE_19         1906
COMPLETE_221        2662
COMPLETE_222        2C1C
COMPLETE_288        2C7C
COMPLETE_289        2D68
COMPLETE_294        2D9A
COMPLETE_295        3354
COMPLETE_359        3378
COMPLETE_360        3932
COMPLETE_426        3992
COMPLETE_427        39DA
COMPLETE_428        39FA
COMPLETE_429        3FB4
COMPLETE_495        4014
COMPLETE_496        405C
COMPLETE_497        407C
COMPLETE_498        4636
COMPLETE_564        4696
COMPLETE_565        46CA
COMPLETE_566        4C84
COMPLETE_632        4CE4
COMPLETE_633        4DD0
COMPLETE_638        4E02
COMPLETE_639        53BC
COMPLETE_703        53E0
COMPLETE_704        599A
COMPLETE_770        59FA
COMPLETE_771        5A3C
COMPLETE_772        5A5C
COMPLETE_773        6016
COMPLETE_837        6054
COMPLETE_838        60AC
COMPLETE_84         1930
COMPLETE_842        6128
COMPLETE_843        6180
COMPLETE_847        61FC
COMPLETE_848        623A
COMPLETE_849        6292
COMPLETE_85         1EEA
COMPLETE_853        630E
COMPLETE_854        6366
COMPLETE_858        63E2
COMPLETE_859        6420
COMPLETE_860        645E
COMPLETE_861        649C
COMPLETE_862        64DA
COMPLETE_863        650E
COMPLETE_864        6AC8
COMPLETE_928        6B06
COMPLETE_929        6B4E
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_157  20B8
DATAREGDIRECTDEST_19  1380
DATAREGDIRECTDEST_222  2696
DATAREGDIRECTDEST_295  2DCE
DATAREGDIRECTDEST_360  33AC
DATAREGDIRECTDEST_429  3A2E
DATAREGDIRECTDEST_498  40B0
DATAREGDIRECTDEST_566  46FE
DATAREGDIRECTDEST_639  4E36
DATAREGDIRECTDEST_704  5414
DATAREGDIRECTDEST_773  5A90
DATAREGDIRECTDEST_85  1964
DATAREGDIRECTDEST_864  6542
DATAREGDIRECTSRC_157  20D4
DATAREGDIRECTSRC_19  139C
DATAREGDIRECTSRC_222  26B2
DATAREGDIRECTSRC_295  2DEA
DATAREGDIRECTSRC_360  33C8
DATAREGDIRECTSRC_429  3A4A
DATAREGDIRECTSRC_498  40CC
DATAREGDIRECTSRC_566  471A
DATAREGDIRECTSRC_639  4E52
DATAREGDIRECTSRC_704  5430
DATAREGDIRECTSRC_773  5AAC
DATAREGDIRECTSRC_85  1980
DATAREGDIRECTSRC_864  655E
DATAREGDIRECT_157   20B0
DATAREGDIRECT_19    1378
DATAREGDIRECT_222   268E
DATAREGDIRECT_295   2DC6
DATAREGDIRECT_360   33A4
DATAREGDIRECT_429   3A26
DATAREGDIRECT_498   40A8
DATAREGDIRECT_566   46F6
DATAREGDIRECT_639   4E2E
DATAREGDIRECT_704   540C
DATAREGDIRECT_773   5A88
DATAREGDIRECT_85    195C
DATAREGDIRECT_864   653A
DECODEADD           1F2A
DECODEADDCOMP       2C3E
DECODEADDDESTOP     2642
DECODEADRMODE       1DCA
DECODEAND           4CA8
DECODEANDCOMP       59BC
DECODEANDDESTOP     53C0
DECODEASX_M         61FE
DECODEASX_R         62D2
DECODEASX_S         63A6
DECODEBEQ           63E4
DECODEBGE           6422
DECODEBLT           6460
DECODEBRA           6B12
DECODEDIVU          3FD8
DECODEJSR           649E
DECODELEA           465A
DECODELSX_M         6018
DECODELSX_R         60EC
DECODELSX_S         61C0
DECODEMOVE          12A8
DECODEMOVEM         1EEC
DECODEMULS          3956
DECODENOP           1260
DECODENOT           59BE
DECODERTS           6ACA
DECODESUB           2C40
DECODESUBCOMP       3954
DECODESUBDESTOP     3358
DESTDNB_151         1FB6
DESTDNB_289         2CCC
DESTDNB_633         4D34
DESTDNL_151         1F8E
DESTDNL_289         2CA4
DESTDNL_633         4D0C
DESTDNW_151         1F9C
DESTDNW_289         2CB2
DESTDNW_633         4D1A
DONE_10             10FE
DONE_11             111E
DONE_115            1BB4
DONE_116            1BD4
DONE_117            1BF4
DONE_118            1C16
DONE_122            1C50
DONE_123            1C70
DONE_124            1C90
DONE_125            1CB2
DONE_127            1CD2
DONE_128            1CF2
DONE_129            1D12
DONE_130            1D34
DONE_134            1D6E
DONE_135            1D8E
DONE_136            1DAE
DONE_137            1DD0
DONE_140            1E00
DONE_141            1E20
DONE_142            1E40
DONE_143            1E62
DONE_145            1E82
DONE_146            1EA2
DONE_147            1EC2
DONE_148            1EE4
DONE_187            2308
DONE_188            2328
DONE_189            2348
DONE_190            236A
DONE_194            23A4
DONE_195            23C4
DONE_196            23E4
DONE_197            2406
DONE_199            2426
DONE_2              1024
DONE_200            2446
DONE_201            2466
DONE_202            2488
DONE_206            24C2
DONE_207            24E2
DONE_208            2502
DONE_209            2524
DONE_212            2554
DONE_213            2574
DONE_214            2594
DONE_215            25B6
DONE_217            25D6
DONE_218            25F6
DONE_219            2616
DONE_220            2638
DONE_252            28E6
DONE_253            2906
DONE_254            2926
DONE_255            2948
DONE_259            2982
DONE_260            29A2
DONE_261            29C2
DONE_262            29E4
DONE_264            2A04
DONE_265            2A24
DONE_266            2A44
DONE_267            2A66
DONE_271            2AA0
DONE_272            2AC0
DONE_273            2AE0
DONE_274            2B02
DONE_277            2B32
DONE_278            2B52
DONE_279            2B72
DONE_280            2B94
DONE_282            2BB4
DONE_283            2BD4
DONE_284            2BF4
DONE_285            2C16
DONE_3              1046
DONE_325            301E
DONE_326            303E
DONE_327            305E
DONE_328            3080
DONE_332            30BA
DONE_333            30DA
DONE_334            30FA
DONE_335            311C
DONE_337            313C
DONE_338            315C
DONE_339            317C
DONE_340            319E
DONE_344            31D8
DONE_345            31F8
DONE_346            3218
DONE_347            323A
DONE_350            326A
DONE_351            328A
DONE_352            32AA
DONE_353            32CC
DONE_355            32EC
DONE_356            330C
DONE_357            332C
DONE_358            334E
DONE_390            35FC
DONE_391            361C
DONE_392            363C
DONE_393            365E
DONE_397            3698
DONE_398            36B8
DONE_399            36D8
DONE_4              1066
DONE_400            36FA
DONE_402            371A
DONE_403            373A
DONE_404            375A
DONE_405            377C
DONE_409            37B6
DONE_410            37D6
DONE_411            37F6
DONE_412            3818
DONE_415            3848
DONE_416            3868
DONE_417            3888
DONE_418            38AA
DONE_420            38CA
DONE_421            38EA
DONE_422            390A
DONE_423            392C
DONE_459            3C7E
DONE_460            3C9E
DONE_461            3CBE
DONE_462            3CE0
DONE_466            3D1A
DONE_467            3D3A
DONE_468            3D5A
DONE_469            3D7C
DONE_471            3D9C
DONE_472            3DBC
DONE_473            3DDC
DONE_474            3DFE
DONE_478            3E38
DONE_479            3E58
DONE_480            3E78
DONE_481            3E9A
DONE_484            3ECA
DONE_485            3EEA
DONE_486            3F0A
DONE_487            3F2C
DONE_489            3F4C
DONE_49             15D0
DONE_490            3F6C
DONE_491            3F8C
DONE_492            3FAE
DONE_5              1086
DONE_50             15F0
DONE_51             1610
DONE_52             1632
DONE_528            4300
DONE_529            4320
DONE_530            4340
DONE_531            4362
DONE_535            439C
DONE_536            43BC
DONE_537            43DC
DONE_538            43FE
DONE_540            441E
DONE_541            443E
DONE_542            445E
DONE_543            4480
DONE_547            44BA
DONE_548            44DA
DONE_549            44FA
DONE_550            451C
DONE_553            454C
DONE_554            456C
DONE_555            458C
DONE_556            45AE
DONE_558            45CE
DONE_559            45EE
DONE_56             166C
DONE_560            460E
DONE_561            4630
DONE_57             168C
DONE_58             16AC
DONE_59             16CE
DONE_596            494E
DONE_597            496E
DONE_598            498E
DONE_599            49B0
DONE_603            49EA
DONE_604            4A0A
DONE_605            4A2A
DONE_606            4A4C
DONE_608            4A6C
DONE_609            4A8C
DONE_61             16EE
DONE_610            4AAC
DONE_611            4ACE
DONE_615            4B08
DONE_616            4B28
DONE_617            4B48
DONE_618            4B6A
DONE_62             170E
DONE_621            4B9A
DONE_622            4BBA
DONE_623            4BDA
DONE_624            4BFC
DONE_626            4C1C
DONE_627            4C3C
DONE_628            4C5C
DONE_629            4C7E
DONE_63             172E
DONE_64             1750
DONE_669            5086
DONE_670            50A6
DONE_671            50C6
DONE_672            50E8
DONE_676            5122
DONE_677            5142
DONE_678            5162
DONE_679            5184
DONE_68             178A
DONE_681            51A4
DONE_682            51C4
DONE_683            51E4
DONE_684            5206
DONE_688            5240
DONE_689            5260
DONE_69             17AA
DONE_690            5280
DONE_691            52A2
DONE_694            52D2
DONE_695            52F2
DONE_696            5312
DONE_697            5334
DONE_699            5354
DONE_70             17CA
DONE_700            5374
DONE_701            5394
DONE_702            53B6
DONE_71             17EC
DONE_734            5664
DONE_735            5684
DONE_736            56A4
DONE_737            56C6
DONE_74             181C
DONE_741            5700
DONE_742            5720
DONE_743            5740
DONE_744            5762
DONE_746            5782
DONE_747            57A2
DONE_748            57C2
DONE_749            57E4
DONE_75             183C
DONE_753            581E
DONE_754            583E
DONE_755            585E
DONE_756            5880
DONE_759            58B0
DONE_76             185C
DONE_760            58D0
DONE_761            58F0
DONE_762            5912
DONE_764            5932
DONE_765            5952
DONE_766            5972
DONE_767            5994
DONE_77             187E
DONE_79             189E
DONE_8              10BC
DONE_80             18BE
DONE_803            5CE0
DONE_804            5D00
DONE_805            5D20
DONE_806            5D42
DONE_81             18DE
DONE_810            5D7C
DONE_811            5D9C
DONE_812            5DBC
DONE_813            5DDE
DONE_815            5DFE
DONE_816            5E1E
DONE_817            5E3E
DONE_818            5E60
DONE_82             1900
DONE_822            5E9A
DONE_823            5EBA
DONE_824            5EDA
DONE_825            5EFC
DONE_828            5F2C
DONE_829            5F4C
DONE_830            5F6C
DONE_831            5F8E
DONE_833            5FAE
DONE_834            5FCE
DONE_835            5FEE
DONE_836            6010
DONE_894            6792
DONE_895            67B2
DONE_896            67D2
DONE_897            67F4
DONE_9              10DE
DONE_901            682E
DONE_902            684E
DONE_903            686E
DONE_904            6890
DONE_906            68B0
DONE_907            68D0
DONE_908            68F0
DONE_909            6912
DONE_913            694C
DONE_914            696C
DONE_915            698C
DONE_916            69AE
DONE_919            69DE
DONE_920            69FE
DONE_921            6A1E
DONE_922            6A40
DONE_924            6A60
DONE_925            6A80
DONE_926            6AA0
DONE_927            6AC2
DONE_930            6B74
DONE_931            6B94
DONE_932            6BB4
DONE_933            6BD6
ENDSIM              115E
GOLOOP              113C
IDENTIFYOPCODE      1162
LOGREG              124C
LOOP_149            1EF6
LOOP_15             126A
LOOP_150            1F34
LOOP_16             12B2
LOOP_288            2C4A
LOOP_426            3960
LOOP_495            3FE2
LOOP_564            4664
LOOP_632            4CB2
LOOP_770            59C8
LOOP_837            6022
LOOP_842            60F6
LOOP_847            61CA
LOOP_848            6208
LOOP_853            62DC
LOOP_858            63B0
LOOP_859            63EE
LOOP_860            642C
LOOP_861            646A
LOOP_862            64A8
LOOP_928            6AD4
LOOP_929            6B1C
LSL_M               605C
LSL_R               6130
LSR_M               606A
LSR_R               613E
MAIN                1000
NEWLINE             3380
NEXT_149            1F1A
NEXT_15             128E
NEXT_150            1F58
NEXT_151            204E
NEXT_16             12D6
NEXT_288            2C6E
NEXT_289            2D64
NEXT_426            3984
NEXT_495            4006
NEXT_564            4688
NEXT_632            4CD6
NEXT_633            4DCC
NEXT_770            59EC
NEXT_837            6046
NEXT_842            611A
NEXT_847            61EE
NEXT_848            622C
NEXT_853            6300
NEXT_858            63D4
NEXT_859            6412
NEXT_860            6450
NEXT_861            648E
NEXT_862            64CC
NEXT_928            6AF8
NEXT_929            6B40
OADD                6F
OAN                 C3
OAND                85
OASL                95
OASR                99
OBEQ                9D
OBGE                A1
OBLANK              D2
OBLT                A5
OBRA                B1
OBSIZE              B5
OCOMMA              C9
ODIVU               7C
ODN                 C1
OHASH               D0
OJSR                A9
OLB                 C5
OLEA                81
OLSIZE              BD
OLSL                8D
OLSR                91
OMOVE               64
OMOVEM              69
OMULS               77
ONOP                60
ONOT                89
OPREDEC             CC
OPSTINC             CE
ORB                 C7
ORTS                AD
OSUB                73
OUTPUTDATA          6B50
OWSIZE              B9
PADD                107
PAND                15C
PASX_M              1B1
PASX_R              1C2
PASX_S              1D3
PBEQ                1E4
PBGE                1F5
PBLT                206
PBRA                239
PDIVU               13A
PJSR                217
PLEA                14B
PLSX_M              17E
PLSX_R              18F
PLSX_S              1A0
PMOVE               E5
PMOVEM              F6
PMULS               129
PNOP                D4
PNOT                16D
PREPAREADRMODE      1BBD
PRINTANDEST         2D95
PRINTANSRC          2E94
PRINTCOMMA          2FBD
PRINTCOUNT          2A30
PRINTDNDEST         2B45
PRINTDNSRC          2C58
PRINTHASH           326B
PRINTLB             30F1
PRINTOPMODE         15A8
PRINTPD             308A
PRINTPI             3023
PRINTRB             3154
PRINTSIGN           31B7
PRINTSIZE           F0E
PRINTSIZELOW        127F
PRTS                228
PSUB                118
READINPUT           F4
REG_M               6074
REG_R               6148
REND                31
RSTART              0
SPACE               331F
SPLIT0              1170
SPLIT000            117C
SPLIT01             1190
SPLIT0100           119C
SPLIT0100111        11B8
SPLIT0110           11CC
SPLIT01100          11D8
SPLIT01101          11E4
SPLIT1              11F0
SPLIT10             11FC
SPLIT11             1208
SPLIT110            1214
SPLIT111            1238
SRCDNB_151          2028
SRCDNB_289          2D3E
SRCDNB_633          4DA6
SRCDNL_151          1FD0
SRCDNL_289          2CE6
SRCDNL_633          4D4E
SRCDNW_151          1FF6
SRCDNW_289          2D0C
SRCDNW_633          4D74
VERIFYOPCODE        A9B
