00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/2/2021 1:15:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 53 55 42 00              102  oSUB:   DC.B    'SUB',0
00000077= 4D 55 4C 53 00           103  oMULS:  DC.B    'MULS',0
0000007C= 44 49 56 55 00           104  oDIVU:  DC.B    'DIVU',0
00000081= 4C 45 41 00              105  oLEA:   DC.B    'LEA',0
00000085= 41 4E 44 00              106  oAND:   DC.B    'AND',0
00000089= 4E 4F 54 00              107  oNOT:   DC.B    'NOT',0
0000008D= 4C 53 4C 00              108  oLSL:   DC.B    'LSL',0
00000091= 4C 53 52 00              109  oLSR:   DC.B    'LSR',0
00000095= 41 53 4C 00              110  oASL:   DC.B    'ASL',0
00000099= 41 53 52 00              111  oASR:   DC.B    'ASR',0
0000009D= 42 45 51 00              112  oBEQ:   DC.B    'BEQ',0
000000A1= 42 47 45 00              113  oBGE:   DC.B    'BGE',0
000000A5= 42 4C 54 00              114  oBLT:   DC.B    'BLT',0
000000A9= 4A 53 52 00              115  oJSR:   DC.B    'JSR',0
000000AD= 52 54 53 00              116  oRTS:   DC.B    'RTS',0
000000B1= 42 52 41 00              117  oBRA:   DC.B    'BRA',0
000000B5= 2E 42 20 00              118  oBSize  DC.B    '.B ',0
000000B9= 2E 57 20 00              119  oWSize  DC.B    '.W ',0
000000BD= 2E 4C 20 00              120  oLSize  DC.B    '.L ',0
000000C1= 44 00                    121  oDn     DC.B    'D',0
000000C3= 41 00                    122  oAn     DC.B    'A',0
000000C5= 28 00                    123  oLB     DC.B    '(',0
000000C7= 29 00                    124  oRB     DC.B    ')',0
000000C9= 2C 20 00                 125  oComma  DC.B    ', ',0
000000CC= 2D 00                    126  oPreDec DC.B    '-',0
000000CE= 2B 00                    127  oPstInc DC.B    '+',0
000000D0= 23 00                    128  oHash   DC.B    '#',0
000000D2= 20 00                    129  oBlank  DC.B    ' ',0
000000D4                           130  ; ------------------------------------------------------------
000000D4                           131  ; "Pattern" Variables
000000D4                           132  ; Jonathan
000000D4                           133  ; 
000000D4                           134  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000D4                           135  ; and the opcode isn't actually data
000000D4                           136  ; ------------------------------------------------------------
000000D4= 30 31 30 30 31 31 ...    137  pNOP:   DC.B    '0100111001110001',0
000000E5= 30 30 2E 2E 2E 2E ...    138  pMOVE:  DC.B    '00..............',0
000000F6= 30 31 30 30 31 2E ...    139  pMOVEM: DC.B    '01001.001.......',0
00000107= 31 31 30 31 2E 2E ...    140  pADD:   DC.B    '1101............',0
00000118= 31 30 30 31 2E 2E ...    141  pSUB:   DC.B    '1001............',0
00000129= 31 31 30 30 2E 2E ...    142  pMULS:  DC.B    '1100...111......',0
0000013A= 31 30 30 30 2E 2E ...    143  pDIVU:  DC.B    '1000...011......',0
0000014B= 30 31 30 30 2E 2E ...    144  pLEA:   DC.B    '0100...111......',0
0000015C= 31 31 30 30 2E 2E ...    145  pAND:   DC.B    '1100............',0
0000016D= 30 31 30 30 30 31 ...    146  pNOT:   DC.B    '01000110........',0
0000017E= 31 31 31 30 2E 2E ...    147  pLSx_M: DC.B    '1110......001...',0
0000018F= 31 31 31 30 2E 2E ...    148  pLSx_R: DC.B    '1110......101...',0
000001A0= 31 31 31 30 2E 2E ...    149  pLSx_S: DC.B    '1110......100...',0
000001B1= 31 31 31 30 2E 2E ...    150  pASx_M: DC.B    '1110......000...',0
000001C2= 31 31 31 30 2E 2E ...    151  pASx_R: DC.B    '1110......100...',0
000001D3= 31 31 31 30 2E 2E ...    152  pASx_S: DC.B    '1110......100...',0
000001E4= 30 31 31 30 30 31 ...    153  pBEQ:   DC.B    '01100111........',0
000001F5= 30 31 31 30 31 31 ...    154  pBGE:   DC.B    '01101100........',0
00000206= 30 31 31 30 31 31 ...    155  pBLT:   DC.B    '01101101........',0
00000217= 30 31 30 30 31 31 ...    156  pJSR:   DC.B    '0100111010......',0
00000228= 30 31 30 30 31 31 ...    157  pRTS:   DC.B    '0100111001110101',0
00000239= 30 31 31 30 30 30 ...    158  pBRA:   DC.B    '01100000........',0
0000024A                           159  
0000024A                           160  
0000024A                           161  ; ========================================================================
0000024A                           162  ; Macros
0000024A                           163  ; ========================================================================
0000024A                           164  ; ------------------------------------------------------------
0000024A                           165  ; "convertHtoA" Helper
0000024A                           166  ; Jonathan
0000024A                           167  ;
0000024A                           168  ; 1st argument is a data register containing a single digit of a hex number.
0000024A                           169  ;
0000024A                           170  ; Converts the argument from a hex digit to an ascii character
0000024A                           171  ; ------------------------------------------------------------
0000024A                           172  convertHtoA:    MACRO
0000024A                           173          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
0000024A                           174          BGT     alpha\@
0000024A                           175          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
0000024A                           176          BRA     done\@
0000024A                           177  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
0000024A                           178  done\@: NOP
0000024A                           179          ENDM
0000024A                           180  ; ------------------------------------------------------------
0000024A                           181  ; adrOut
0000024A                           182  ; Gary
0000024A                           183  ;
0000024A                           184  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000024A                           185  ; ------------------------------------------------------------
0000024A                           186  adrOut:         MACRO
0000024A                           187          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           188          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           189          LSR.W   #4, D1      
0000024A                           190          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           191          TRAP    #15         ; Execute output
0000024A                           192          
0000024A                           193          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           194          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000024A                           195          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           196          LSR.W   #4, D1      
0000024A                           197          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           198          TRAP    #15         ; Execute output
0000024A                           199          
0000024A                           200          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           201          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           202          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           203          LSR.W   #4, D1      
0000024A                           204          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           205          TRAP    #15         ; Execute output
0000024A                           206          
0000024A                           207          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           208          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           209          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000024A                           210          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           211          LSR.W   #4, D1      
0000024A                           212          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           213          TRAP    #15         ; Execute output       
0000024A                           214          ENDM 
0000024A                           215  ; ------------------------------------------------------------
0000024A                           216  ; "verifyOpcode" Helper
0000024A                           217  ; Jonathan
0000024A                           218  ;
0000024A                           219  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
0000024A                           220  ; 2nd argument is a data register to check against the template
0000024A                           221  ;
0000024A                           222  ; Verifies that the opcode passed through \2 matches the pattern of \1
0000024A                           223  ; If they do not match, branches to outputData
0000024A                           224  ; ------------------------------------------------------------
0000024A                           225  verifyOpcode:  MACRO
0000024A                           226          LEA     \1, A1      ; Input pattern string
0000024A                           227          MOVE.W  \2, D3      ; input value
0000024A                           228          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
0000024A                           229          
0000024A                           230  loop\@: 
0000024A                           231          CMP.B   #$30, (A1)  ; Check if the template wants a 0
0000024A                           232          BEQ     checkFor0\@
0000024A                           233          CMP.B   #$31, (A1)  ; Check if the template wants a 1
0000024A                           234          BEQ     checkFor1\@
0000024A                           235          BRA     next\@      ; Template has a wildcard, go to next iteration
0000024A                           236          
0000024A                           237  checkFor0\@: 
0000024A                           238          BTST    D1, D3      ; Check if contains 0
0000024A                           239          BNE     outputData  ; Missing a 0 -> Not a valid opcode
0000024A                           240          BRA     next\@
0000024A                           241  
0000024A                           242  checkFor1\@:
0000024A                           243          BTST    D1, D3      ; Check if contains 1
0000024A                           244          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
0000024A                           245  
0000024A                           246  next\@: 
0000024A                           247          CMP.B   #0, D1      ; Compare bit counter to 0
0000024A                           248          BEQ     complete\@  ; Branch to complete if bit counter reached 0
0000024A                           249          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           250          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
0000024A                           251          BRA     loop\@      ; Begin loop again
0000024A                           252  
0000024A                           253  complete\@:  ; Opcode has been verified
0000024A                           254          ENDM
0000024A                           255          
0000024A                           256  ; ------------------------------------------------------------
0000024A                           257  ; "printSize" Helper
0000024A                           258  ; Gary
0000024A                           259  ;
0000024A                           260  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           261  ;
0000024A                           262  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
0000024A                           263  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
0000024A                           264  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
0000024A                           265  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
0000024A                           266  ; ------------------------------------------------------------
0000024A                           267  printSize:  MACRO
0000024A                           268          MOVE.W  \1, D3      ; input value
0000024A                           269          CLR     D7      
0000024A                           270  checkForB\@: 
0000024A                           271          BTST    #13, D3      ; Check if contains 0
0000024A                           272          BNE     checkForW\@  ; If not go to word size
0000024A                           273          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
0000024A                           274          MOVE.B  #14,D0          
0000024A                           275          TRAP    #15
0000024A                           276          BRA     complete\@      
0000024A                           277  checkForW\@: 
0000024A                           278          BTST    #12, D3      ; Check if contains 1
0000024A                           279          BEQ     checkForL\@  ; If not, size cannot be word
0000024A                           280          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
0000024A                           281          MOVE.B  #14,D0          
0000024A                           282          TRAP    #15
0000024A                           283          BRA     complete\@  
0000024A                           284  checkForL\@:
0000024A                           285          MOVE.B  #$1, D7
0000024A                           286          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
0000024A                           287          MOVE.B  #14,D0          
0000024A                           288          TRAP    #15
0000024A                           289  complete\@:  ; Size has been printed
0000024A                           290          ENDM
0000024A                           291          
0000024A                           292          ; ------------------------------------------------------------
0000024A                           293  ; "printSizeLow" Helper
0000024A                           294  ; Gary
0000024A                           295  ;
0000024A                           296  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           297  ;
0000024A                           298  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
0000024A                           299  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
0000024A                           300  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
0000024A                           301  ; Once matched, size is printed and appended to already printed opcode, macro exits.
0000024A                           302  ; ------------------------------------------------------------
0000024A                           303  printSizeLow:  MACRO
0000024A                           304          MOVE.W  \1, D3      ; input value      
0000024A                           305  checkForB\@: 
0000024A                           306          BTST    #6,  D3      ; Check if contains 0
0000024A                           307          BNE     checkForW\@  ; If not go to word size
0000024A                           308          LEA     oBSize, A1     
0000024A                           309          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           310          TRAP    #15
0000024A                           311          BRA     complete\@      
0000024A                           312  checkForW\@: 
0000024A                           313          BTST    #7, D3      ; Check if contains 0
0000024A                           314          BNE     checkForL\@ ; If not go to longword size
0000024A                           315          LEA     oWSize, A1     
0000024A                           316          MOVE.B  #14,D0       ; Print and end macro       
0000024A                           317          TRAP    #15
0000024A                           318          BRA     complete\@  
0000024A                           319  checkForL\@:
0000024A                           320          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
0000024A                           321          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           322          TRAP    #15
0000024A                           323  complete\@:  ; Size has been printed
0000024A                           324          ENDM
0000024A                           325  ; ------------------------------------------------------------
0000024A                           326  ; "printBranch" Helper
0000024A                           327  ; Gary
0000024A                           328  ; 
0000024A                           329  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           330  ; bits. 
0000024A                           331  ; ------------------------------------------------------------
0000024A                           332  printBranch:  MACRO
0000024A                           333          MOVE.W \1, D3
0000024A                           334          CLR     D1
0000024A                           335          ADD.B   D3, D1
0000024A                           336          convertAtoH D1
0000024A                           337          MOVE.B  #3,D0       ; Print and end macro  
0000024A                           338          TRAP    #15
0000024A                           339          ENDM        
0000024A                           340          
0000024A                           341  ; ------------------------------------------------------------
0000024A                           342  ; "printOpMode" Helper
0000024A                           343  ; Gary
0000024A                           344  ;
0000024A                           345  ; 1st argument holds opcode whose opmode is being decoded
0000024A                           346  ;
0000024A                           347  ; With the opcode in D3, D1 is designated as the bit tracker. Split
0000024A                           348  ; into two sorting mechanisms: first, the macro determines whether
0000024A                           349  ; the register is a source or a destination. Then, the macro determines
0000024A                           350  ; the size and appends it to printed opcode in a similar manner to printSize.
0000024A                           351  ; ------------------------------------------------------------
0000024A                           352  printOpMode:  MACRO
0000024A                           353          MOVE.W  \1, D3      
0000024A                           354          MOVE.B  #8, D1    
0000024A                           355          CLR     D6
0000024A                           356  checkForDestDn\@: 
0000024A                           357          BTST    D1, D3      
0000024A                           358          BNE     checkForSrcDn\@
0000024A                           359          JSR     next\@
0000024A                           360          MOVE.B  #$1, D6
0000024A                           361          BTST    D1, D3      
0000024A                           362          BEQ     DestDnW\@
0000024A                           363  DestDnL\@:        
0000024A                           364          LEA     oLSize, A1     
0000024A                           365          MOVE.B  #14,D0          
0000024A                           366          TRAP    #15
0000024A                           367          BRA     complete\@ 
0000024A                           368  DestDnW\@: 
0000024A                           369          JSR     next\@
0000024A                           370          BTST    D1, D3      
0000024A                           371          BEQ     DestDnB\@
0000024A                           372          LEA     oWSize, A1     
0000024A                           373          MOVE.B  #14,D0          
0000024A                           374          TRAP    #15
0000024A                           375          BRA     complete\@ 
0000024A                           376  DestDnB\@: 
0000024A                           377          LEA     oBSize, A1     
0000024A                           378          MOVE.B  #14,D0          
0000024A                           379          TRAP    #15
0000024A                           380          BRA     complete\@ 
0000024A                           381  checkForSrcDn\@: 
0000024A                           382          JSR     next\@
0000024A                           383          BTST    D1, D3      
0000024A                           384          BEQ     SrcDnW\@
0000024A                           385  SrcDnL\@:        
0000024A                           386          LEA     oLSize, A1     
0000024A                           387          MOVE.B  #14,D0          
0000024A                           388          TRAP    #15
0000024A                           389          printDnDest D3
0000024A                           390          BRA     complete\@ 
0000024A                           391  SrcDnW\@:
0000024A                           392          JSR     next\@
0000024A                           393          BTST    D1, D3     
0000024A                           394          BEQ     SrcDnB\@
0000024A                           395          LEA     oWSize, A1     
0000024A                           396          MOVE.B  #14,D0          
0000024A                           397          TRAP    #15
0000024A                           398          printDnDest D3
0000024A                           399          BRA     complete\@ 
0000024A                           400  SrcDnB\@: 
0000024A                           401          LEA     oBSize, A1     
0000024A                           402          MOVE.B  #14,D0          
0000024A                           403          TRAP    #15
0000024A                           404          printDnDest D3
0000024A                           405          BRA     complete\@ 
0000024A                           406  
0000024A                           407  next\@:
0000024A                           408          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           409          RTS                
0000024A                           410  
0000024A                           411  complete\@:  ; Opcode has been verified
0000024A                           412          ENDM
0000024A                           413  ; ------------------------------------------------------------
0000024A                           414  ; "prepareAdrMode" Helper
0000024A                           415  ; Gary
0000024A                           416  ; 
0000024A                           417  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
0000024A                           418  ; ------------------------------------------------------------
0000024A                           419  prepareAdrMode: MACRO
0000024A                           420          MOVE.W  \1, D6      ; input value
0000024A                           421          MOVE.W  \2, D1
0000024A                           422          CMP.B   #$01, D6
0000024A                           423          BEQ     AdrSource\@    
0000024A                           424  AdrDest\@:
0000024A                           425          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
0000024A                           426          LSR     #$08, D1
0000024A                           427          LSR     #$05, D1
0000024A                           428          BRA     complete\@ 
0000024A                           429  AdrSource\@:                
0000024A                           430          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
0000024A                           431          LSL     #$02, D1
0000024A                           432          LSR     #$08, D1
0000024A                           433          LSR     #$05, D1
0000024A                           434  complete\@:  ; Opcode has been verified
0000024A                           435          ENDM        
0000024A                           436          
0000024A                           437  ; ------------------------------------------------------------
0000024A                           438  ; "decodeAdrMode" Helper
0000024A                           439  ; Gary
0000024A                           440  ; 
0000024A                           441  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           442  ; bits. 
0000024A                           443  ; ------------------------------------------------------------
0000024A                           444  decodeAdrMode:  MACRO
0000024A                           445          MOVE.W  \1, D3      ; holds full opcode
0000024A                           446          MOVE.W  \2, D1      ; holds just opmode
0000024A                           447  
0000024A                           448          CMP.B   #$01, D1
0000024A                           449          BEQ     AdrRegDirect\@    
0000024A                           450          CMP.B   #$02, D1
0000024A                           451          BEQ     AdrRegInDirect\@  
0000024A                           452          CMP.B   #$03, D1
0000024A                           453          BEQ     AdrRegPostInc\@  
0000024A                           454          CMP.B   #$04, D1
0000024A                           455          BEQ     AdrRegPreDec\@
0000024A                           456          CMP.B   #$07, D1
0000024A                           457          BEQ     AdrAbsolute\@    
0000024A                           458          
0000024A                           459  dataRegDirect\@: 
0000024A                           460          CMP.B   #$01, D6
0000024A                           461          BEQ     dataRegDirectSrc\@   
0000024A                           462  dataRegDirectDest\@: 
0000024A                           463          printDnDest D3 
0000024A                           464          BRA     complete\@ 
0000024A                           465  dataRegDirectSrc\@: 
0000024A                           466          printDnSrc D3 
0000024A                           467          BRA     complete\@   
0000024A                           468          
0000024A                           469  AdrRegDirect\@: 
0000024A                           470          CMP.B   #$01, D6
0000024A                           471          BEQ     AdrRegDirectSrc\@   
0000024A                           472  AdrRegDirectDest\@:
0000024A                           473          printAnDest D3
0000024A                           474          BRA     complete\@   
0000024A                           475  AdrRegDirectSrc\@:
0000024A                           476          printAnSrc D3
0000024A                           477          BRA     complete\@   
0000024A                           478         
0000024A                           479  AdrRegInDirect\@:   
0000024A                           480          CMP.B   #$01, D6
0000024A                           481          BEQ     AdrRegInDirectSrc\@   
0000024A                           482  AdrRegInDirectDest\@:
0000024A                           483          printLB
0000024A                           484          printAnDest D3  
0000024A                           485          printRB
0000024A                           486          BRA     complete\@     
0000024A                           487  AdrRegInDirectSrc\@:   
0000024A                           488          printLB
0000024A                           489          printAnSrc D3  
0000024A                           490          printRB
0000024A                           491          BRA     complete\@   
0000024A                           492          
0000024A                           493  AdrRegPostInc\@:   
0000024A                           494          CMP.B   #$01, D6
0000024A                           495          BEQ     AdrRegPostIncSrc\@   
0000024A                           496  AdrRegPostIncDest\@: 
0000024A                           497          printLB
0000024A                           498          printAnDest D3  
0000024A                           499          printRB
0000024A                           500          printPI
0000024A                           501          BRA     complete\@  
0000024A                           502  AdrRegPostIncSrc\@:           
0000024A                           503          printLB
0000024A                           504          printAnSrc D3  
0000024A                           505          printRB
0000024A                           506          printPI
0000024A                           507          BRA     complete\@  
0000024A                           508  AdrRegPreDec\@: 
0000024A                           509          CMP.B   #$01, D6
0000024A                           510          BEQ     AdrRegPreDecSrc\@   
0000024A                           511  AdrRegPreDecDest\@:
0000024A                           512          printPD  
0000024A                           513          printLB
0000024A                           514          printAnDest D3  
0000024A                           515          printRB
0000024A                           516          BRA     complete\@   
0000024A                           517  AdrRegPreDecSrc\@: 
0000024A                           518          printPD  
0000024A                           519          printLB
0000024A                           520          printAnSrc D3  
0000024A                           521          printRB
0000024A                           522          BRA     complete\@
0000024A                           523         
0000024A                           524  AdrAbsolute\@:
0000024A                           525          CMP.B   #$01, D6
0000024A                           526          BNE     AdrAbsoluteDst\@ 
0000024A                           527          
0000024A                           528          MOVE.W  D3, D5
0000024A                           529          BTST    #2, D3
0000024A                           530          BNE     AdrImmediate\@
0000024A                           531          BTST    #0, D3
0000024A                           532          BNE     AdrAbsoluteL\@
0000024A                           533          BRA     AdrAbsoluteW\@
0000024A                           534  AdrAbsoluteDst\@:
0000024A                           535          MOVE.W  D3, D5
0000024A                           536          BTST    #$B, D3
0000024A                           537          BNE     AdrImmediate\@
0000024A                           538          BTST    #$09, D3
0000024A                           539          BNE     AdrAbsoluteL\@
0000024A                           540          BRA     AdrAbsoluteW\@
0000024A                           541  AdrImmediate\@:
0000024A                           542          CMP.B   #1, D7
0000024A                           543          BEQ     AdrImmediateL\@
0000024A                           544  AdrImmediateW\@:
0000024A                           545          MOVE.W  (A2)+, D3
0000024A                           546          printHash
0000024A                           547          printSign
0000024A                           548          adrOut
0000024A                           549          MOVE.W  D5, D3
0000024A                           550          BRA     complete\@
0000024A                           551  AdrImmediateL\@:
0000024A                           552          MOVE.W  (A2)+, D3
0000024A                           553          printHash
0000024A                           554          printSign
0000024A                           555          adrOut 
0000024A                           556          MOVE.W  (A2)+, D3
0000024A                           557          adrOut
0000024A                           558          MOVE.W  D5, D3
0000024A                           559          BRA     complete\@ 
0000024A                           560  AdrAbsoluteW\@:     
0000024A                           561          MOVE.W  (A2)+, D3
0000024A                           562          printSign
0000024A                           563          adrOut
0000024A                           564          MOVE.W  D5, D3
0000024A                           565          BRA     complete\@  
0000024A                           566  AdrAbsoluteL\@:  
0000024A                           567          MOVE.W  (A2)+, D3
0000024A                           568          printSign
0000024A                           569          adrOut 
0000024A                           570          MOVE.W  (A2)+, D3
0000024A                           571          adrOut
0000024A                           572          MOVE.W  D5, D3
0000024A                           573  
0000024A                           574  complete\@:  ; Opcode has been verified
0000024A                           575          ENDM
0000024A                           576  
0000024A                           577  printCount:     MACRO
0000024A                           578          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           579          LSL     #$04, D1
0000024A                           580          LSR     #$08, D1
0000024A                           581          LSR     #$05, D1
0000024A                           582          LEA     oHash, A1     
0000024A                           583          MOVE.B  #14,D0          
0000024A                           584          TRAP    #15
0000024A                           585          MOVE.B  #3,D0          
0000024A                           586          TRAP    #15
0000024A                           587          ENDM
0000024A                           588  
0000024A                           589  printDnDest:    MACRO 
0000024A                           590          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           591          LSL     #$04, D1
0000024A                           592          LSR     #$08, D1
0000024A                           593          LSR     #$05, D1
0000024A                           594          LEA     oDn, A1     
0000024A                           595          MOVE.B  #14,D0          
0000024A                           596          TRAP    #15
0000024A                           597          MOVE.B  #3,D0          
0000024A                           598          TRAP    #15
0000024A                           599          ENDM
0000024A                           600  printDnSrc:    MACRO   
0000024A                           601          CLR.L   D1
0000024A                           602          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           603          LSL     #$08, D1
0000024A                           604          LSL     #$05, D1
0000024A                           605          LSR     #$08, D1
0000024A                           606          LSR     #$05, D1
0000024A                           607          LEA     oDn, A1     
0000024A                           608          MOVE.B  #14,D0          
0000024A                           609          TRAP    #15
0000024A                           610          MOVE.B  #3,D0          
0000024A                           611          TRAP    #15
0000024A                           612          ENDM
0000024A                           613  printAnDest:    MACRO
0000024A                           614          MOVE.W  \1, D1
0000024A                           615          LSL     #$04, D1
0000024A                           616          LSR     #$08, D1
0000024A                           617          LSR     #$05, D1
0000024A                           618          LEA     oAn, A1     
0000024A                           619          MOVE.B  #14,D0          
0000024A                           620          TRAP    #15
0000024A                           621          MOVE.B  #3,D0          
0000024A                           622          TRAP    #15
0000024A                           623          ENDM
0000024A                           624  printAnSrc:    MACRO   
0000024A                           625          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           626          LSL     #$08, D1
0000024A                           627          LSL     #$05, D1
0000024A                           628          LSR     #$08, D1
0000024A                           629          LSR     #$05, D1
0000024A                           630          LEA     oAn, A1     
0000024A                           631          MOVE.B  #14,D0          
0000024A                           632          TRAP    #15
0000024A                           633          MOVE.B  #3,D0          
0000024A                           634          TRAP    #15
0000024A                           635          ENDM
0000024A                           636  printComma:    MACRO
0000024A                           637          LEA     oComma, A1     
0000024A                           638          MOVE.B  #14,D0          
0000024A                           639          TRAP    #15
0000024A                           640          ENDM
0000024A                           641  printPI:    MACRO
0000024A                           642          LEA     oPstInc, A1     
0000024A                           643          MOVE.B  #14,D0          
0000024A                           644          TRAP    #15
0000024A                           645          ENDM
0000024A                           646  printPD:    MACRO
0000024A                           647          LEA     oPreDec, A1     
0000024A                           648          MOVE.B  #14,D0          
0000024A                           649          TRAP    #15
0000024A                           650          ENDM
0000024A                           651  
0000024A                           652  printLB:    MACRO
0000024A                           653          LEA     oLB, A1     
0000024A                           654          MOVE.B  #14,D0          
0000024A                           655          TRAP    #15
0000024A                           656          ENDM
0000024A                           657  printRB:    MACRO
0000024A                           658          LEA     oRB, A1     
0000024A                           659          MOVE.B  #14,D0          
0000024A                           660          TRAP    #15
0000024A                           661          ENDM
0000024A                           662  printSign:  MACRO
0000024A                           663          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           664          MOVE.W  #36, D1     ; An = sign
0000024A                           665          TRAP    #15         ; Output = sign
0000024A                           666          ENDM
0000024A                           667  printHash:  MACRO
0000024A                           668          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           669          MOVE.W  #35, D1     ; An = sign
0000024A                           670          TRAP    #15         ; Output = sign
0000024A                           671          ENDM
0000024A                           672          
0000024A                           673  space:      MACRO
0000024A                           674          LEA     oBlank, A1
0000024A                           675          MOVE.B  #14,D0          
0000024A                           676          TRAP    #15
0000024A                           677          ENDM
0000024A                           678  newLine:    MACRO
0000024A                           679          LEA     oBlank, A1
0000024A                           680          MOVE.B  #13,D0          
0000024A                           681          TRAP    #15
0000024A                           682          ENDM
0000024A                           683  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000024A                           684  ; "main" routine
0000024A                           685  ; Dylan, Gary
0000024A                           686  ; 
0000024A                           687  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
0000024A                           688  ; ========================================================================
00001000                           689          ORG     $1000
00001000                           690          OPT     MEX
00001000                           691          
00001000  43F8 0000                692  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                693          MOVE.B  #13, D0
00001008  4E4F                     694          TRAP    #15
0000100A                           695m         readInput   D2      ; Read 4 digit hex input
0000100A                           696m         ; READ USER's input
0000100A  103C 0005                697m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     698m         TRAP    #15
00001010                           699mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                700mm         CMPI.B  #$39, D1
00001014  6E00 000A                701mm         BGT     ALPHA_2
00001018  0401 0030                702mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                703mm         BRA     DONE_2
00001020  0401 0037                704mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     705mm DONE_2: NOP
00001026                           706mm         ENDM
00001026  E149                     707m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     708m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     709m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           710m         
0000102C  323C 0000                711m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     712m         TRAP    #15         ; READ SECOND DIGIT
00001032                           713mm         CONVERTATOH D1
00001032  0C01 0039                714mm         CMPI.B  #$39, D1
00001036  6E00 000A                715mm         BGT     ALPHA_3
0000103A  0401 0030                716mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                717mm         BRA     DONE_3
00001042  0401 0037                718mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     719mm DONE_3: NOP
00001048                           720mm         ENDM
00001048  E149                     721m         LSL.W   #8, D1      
0000104A  D441                     722m         ADD.W   D1, D2
0000104C                           723m         
0000104C  323C 0000                724m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     725m         TRAP    #15         ; READ THIRD DIGIT
00001052                           726mm         CONVERTATOH D1
00001052  0C01 0039                727mm         CMPI.B  #$39, D1
00001056  6E00 000A                728mm         BGT     ALPHA_4
0000105A  0401 0030                729mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                730mm         BRA     DONE_4
00001062  0401 0037                731mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     732mm DONE_4: NOP
00001068                           733mm         ENDM
00001068  E949                     734m         LSL.W   #4, D1      
0000106A  D441                     735m         ADD.W   D1, D2
0000106C                           736m         
0000106C  323C 0000                737m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     738m         TRAP    #15         ; READ FINAL DIGIT
00001072                           739mm         CONVERTATOH D1     
00001072  0C01 0039                740mm         CMPI.B  #$39, D1
00001076  6E00 000A                741mm         BGT     ALPHA_5
0000107A  0401 0030                742mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                743mm         BRA     DONE_5
00001082  0401 0037                744mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     745mm DONE_5: NOP
00001088                           746mm         ENDM
00001088  D441                     747m         ADD.W   D1, D2
0000108A  3402                     748m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           749m         ENDM
0000108C  3442                     750          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           751m         newline
0000108E  43F8 00D2                752m         LEA     OBLANK, A1
00001092  103C 000D                753m         MOVE.B  #13,D0          
00001096  4E4F                     754m         TRAP    #15
00001098                           755m         ENDM
00001098                           756          
00001098  43F8 0031                757          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                758          MOVE.B  #13, D0
000010A0  4E4F                     759          TRAP    #15
000010A2                           760m         readInput   D2      ; Read 4 digit hex input
000010A2                           761m         ; READ USER's input
000010A2  103C 0005                762m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     763m         TRAP    #15
000010A8                           764mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                765mm         CMPI.B  #$39, D1
000010AC  6E00 000A                766mm         BGT     ALPHA_8
000010B0  0401 0030                767mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                768mm         BRA     DONE_8
000010B8  0401 0037                769mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     770mm DONE_8: NOP
000010BE                           771mm         ENDM
000010BE  E149                     772m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     773m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     774m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           775m         
000010C4  323C 0000                776m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     777m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           778mm         CONVERTATOH D1
000010CA  0C01 0039                779mm         CMPI.B  #$39, D1
000010CE  6E00 000A                780mm         BGT     ALPHA_9
000010D2  0401 0030                781mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                782mm         BRA     DONE_9
000010DA  0401 0037                783mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     784mm DONE_9: NOP
000010E0                           785mm         ENDM
000010E0  E149                     786m         LSL.W   #8, D1      
000010E2  D441                     787m         ADD.W   D1, D2
000010E4                           788m         
000010E4  323C 0000                789m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     790m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           791mm         CONVERTATOH D1
000010EA  0C01 0039                792mm         CMPI.B  #$39, D1
000010EE  6E00 000A                793mm         BGT     ALPHA_10
000010F2  0401 0030                794mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                795mm         BRA     DONE_10
000010FA  0401 0037                796mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     797mm DONE_10: NOP
00001100                           798mm         ENDM
00001100  E949                     799m         LSL.W   #4, D1      
00001102  D441                     800m         ADD.W   D1, D2
00001104                           801m         
00001104  323C 0000                802m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     803m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           804mm         CONVERTATOH D1     
0000110A  0C01 0039                805mm         CMPI.B  #$39, D1
0000110E  6E00 000A                806mm         BGT     ALPHA_11
00001112  0401 0030                807mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                808mm         BRA     DONE_11
0000111A  0401 0037                809mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     810mm DONE_11: NOP
00001120                           811mm         ENDM
00001120  D441                     812m         ADD.W   D1, D2
00001122  3402                     813m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           814m         ENDM
00001124  31C2 0500                815          MOVE.W  D2, ($500)  ; Store at mem location $500
00001128                           816m         newline
00001128  43F8 00D2                817m         LEA     OBLANK, A1
0000112C  103C 000D                818m         MOVE.B  #13,D0          
00001130  4E4F                     819m         TRAP    #15
00001132                           820m         ENDM
00001132                           821m         newline
00001132  43F8 00D2                822m         LEA     OBLANK, A1
00001136  103C 000D                823m         MOVE.B  #13,D0          
0000113A  4E4F                     824m         TRAP    #15
0000113C                           825m         ENDM
0000113C                           826          
0000113C  7200                     827  goLoop: MOVE.L  #0, D1
0000113E  3238 0500                828          MOVE.W  ($500), D1
00001142  240A                     829          MOVE.L  A2, D2
00001144  B282                     830          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 0016                831          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A  4EB9 00001162            832          JSR     identifyOpcode  ; Decode what is at A2
00001150  381A                     833          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
00001152                           834m         newline
00001152  43F8 00D2                835m         LEA     OBLANK, A1
00001156  103C 000D                836m         MOVE.B  #13,D0          
0000115A  4E4F                     837m         TRAP    #15
0000115C                           838m         ENDM
0000115C  60DE                     839          BRA     goLoop
0000115E                           840          
0000115E                           841          
0000115E                           842          
0000115E  FFFF FFFF                843  endSim: SIMHALT             ; halt simulator
00001162                           844          
00001162                           845          
00001162                           846  ; ========================================================================
00001162                           847  ; "identifyOpcode" subroutine
00001162                           848  ; Jonathan
00001162                           849  ; 
00001162                           850  ; Reads the Word at A2 and determines which opcode it represents.
00001162                           851  ; When the opcode is identified, the appropriate "decodeX" subroutine
00001162                           852  ; is invoked.
00001162                           853  ;
00001162                           854  ; Uses a generated Trie structure to determine where to split on which bits
00001162                           855  ; in order to efficiently identify the exact opcode
00001162                           856  ; ========================================================================
00001162                           857  identifyOpcode:
00001162  3612                     858          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001164  0803 000F                859          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001168  6700 0006                860          BEQ     split0      ; Split based on the first bit
0000116C  6000 0082                861          BRA     split1
00001170                           862  
00001170                           863  split0: 
00001170  0803 000E                864          BTST    #$E, D3     ; Check the 2nd bit
00001174  6700 0006                865          BEQ     split000    ; MOVE follows 00+        
00001178  6000 0016                866          BRA     split01
0000117C                           867          
0000117C                           868  split000:        
0000117C  0803 000D                869          BTST    #$D, D3     ; Check the 3rd bit
00001180  6600 012E                870          BNE     decodeMOVE
00001184  0803 000C                871          BTST    #$C, D3     ; Check the 3rd bit
00001188  6600 0126                872          BNE     decodeMOVE
0000118C  6000 5A48                873          BRA     outputData
00001190                           874  split01:
00001190  0803 000D                875          BTST    #$D, D3     ; Check the 3rd bit
00001194  6700 0006                876          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001198  6000 0032                877          BRA     split0110   ; Code is 011, but all subcodes are 0110        
0000119C                           878  
0000119C                           879  split0100:
0000119C  0803 0008                880          BTST    #$8, D3     ; Check the 8th bit for LEA
000011A0  6600 3470                881          BNE     decodeLEA   ; LEA follows 0100XXX1+
000011A4  0803 000B                882          BTST    #$B, D3     ; Check the 5th bit for NOT
000011A8  6700 47AE                883          BEQ     decodeNOT   ; NOT follows 01000+
000011AC  0803 0009                884          BTST    #$9, D3     ; Check the 7th bit
000011B0  6700 0D2E                885          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
000011B4  6000 0002                886          BRA     split0100111
000011B8                           887  
000011B8                           888  split0100111:
000011B8  0803 0007                889          BTST    #$7, D3     ; Check the 9th bit for JSR
000011BC  6600 5330                890          BNE     decodeJSR   ; JSR follows 010011101+
000011C0  0803 0002                891          BTST    #$2, D3     ; Check the 14th bit
000011C4  6700 00A2                892          BEQ     decodeNOP   ; NOP follows 01001110011100+
000011C8  6000 5946                893          BRA     decodeRTS   ; RTS follows 01001110011101+
000011CC                           894  
000011CC                           895  split0110:
000011CC  0803 000B                896          BTST    #$B, D3     ; Check the 5th bit
000011D0  6700 0006                897          BEQ     split01100
000011D4  6000 000E                898          BRA     split01101
000011D8                           899  
000011D8                           900  split01100:
000011D8  0803 000A                901          BTST    #$A, D3     ; Check the 6th bit
000011DC  6700 597A                902          BEQ     decodeBRA   ; BRA starts with 011000
000011E0  6000 5192                903          BRA     decodeBEQ   ; BEQ starts with 011001
000011E4                           904          
000011E4                           905  split01101:
000011E4  0803 0008                906          BTST    #$8, D3     ; Check the 8th bit
000011E8  6700 5208                907          BEQ     decodeBGE   ; BGE starts with 01101100
000011EC  6000 5282                908          BRA     decodeBLT   ; BLT starts with 01101101
000011F0                           909          
000011F0                           910  split1: 
000011F0  0803 000E                911          BTST    #$E, D3     ; Check the 2nd bit
000011F4  6700 0006                912          BEQ     split10
000011F8  6000 000E                913          BRA     split11
000011FC                           914  
000011FC                           915  split10:
000011FC  0803 000C                916          BTST    #$C, D3     ; Check the 4th bit
00001200  6700 2D98                917          BEQ     decodeDIVU  ; DIVU follows 1000+
00001204  6000 1A1A                918          BRA     decodeSUB   ; SUB follows 1001+
00001208                           919  
00001208                           920  split11:
00001208  0803 000D                921          BTST    #$D, D3     ; Check the 3rd bit
0000120C  6700 0006                922          BEQ     split110
00001210  6000 0026                923          BRA     split111
00001214                           924  
00001214                           925  split110:
00001214  0803 000C                926          BTST    #$C, D3     ; Check the 4th bit for ADD
00001218  6600 0D04                927          BNE     decodeADD   ; ADD follows 1101+
0000121C  0803 0008                928          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
00001220  6700 3A34                929          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
00001224  0803 0007                930          BTST    #$7, D3
00001228  6700 3A2C                931          BEQ     decodeAND
0000122C  0803 0006                932          BTST    #$6, D3
00001230  6700 3A24                933          BEQ     decodeAND
00001234  6000 26EC                934          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
00001238                           935  
00001238                           936  split111: 
00001238  0803 0003                937          BTST    #$3, D3     ; Check 13th bit
0000123C  6700 001A                938          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
00001240                           939     
00001240  0803 0005                940          BTST    #$5, D3     
00001244  6600 0006                941          BNE     logReg     
00001248  6000 4D5E                942          BRA     decodeLSx_M
0000124C  0803 000C                943  logReg: BTST    #12, D3         
00001250  6700 4E2A                944          BEQ     decodeLSx_R
00001254  6000 5980                945          BRA     outputData
00001258                           946  
00001258                           947  ariShift: ; Special split specifically for Arithmetic Shift
00001258  0803 0005                948          BTST    #$5, D3     
0000125C  6600 0006                949          BNE     ariReg
00001260  6000 4F2C                950          BRA     decodeASx_M    
00001264  6000 4FFC                951  ariReg: BRA     decodeASx_R
00001268                           952              
00001268                           953  
00001268                           954  ; ========================================================================
00001268                           955  ; "decodeX" subroutines
00001268                           956  ; Gary, Dylan
00001268                           957  ; 
00001268                           958  ; Set of subroutines which are invoked by identifyOpcode.
00001268                           959  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
00001268                           960  ; the instruction.
00001268                           961  ;
00001268                           962  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
00001268                           963  ; opcode) to record the parameters (such as destination register). If the
00001268                           964  ; opcode indicates that the next word represents a destination address, then
00001268                           965  ; decodeLEA will advance A2 to the next word and decode that.
00001268                           966  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
00001268                           967  ; ========================================================================
00001268                           968  
00001268                           969  ; ------------------------------------------------------------
00001268                           970  ; 1. "decodeNOP" subroutine
00001268                           971  ; AUTHOR
00001268                           972  ;
00001268                           973  ; TODO: DESCRIPTION
00001268                           974  ; ------------------------------------------------------------
00001268                           975  decodeNOP:
00001268                           976m         verifyOpcode    pNOP, (A2)
00001268  43F8 00D4                977m         LEA     PNOP, A1      ; INPUT PATTERN STRING
0000126C  3612                     978m         MOVE.W  (A2), D3      ; INPUT VALUE
0000126E  123C 000F                979m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001272                           980m         
00001272                           981m LOOP_15: 
00001272  0C11 0030                982m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001276  6700 000E                983m         BEQ     CHECKFOR0_15
0000127A  0C11 0031                984m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000127E  6700 0010                985m         BEQ     CHECKFOR1_15
00001282  6000 0012                986m         BRA     NEXT_15      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001286                           987m         
00001286                           988m CHECKFOR0_15: 
00001286  0303                     989m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001288  6600 594C                990m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000128C  6000 0008                991m         BRA     NEXT_15
00001290                           992m 
00001290                           993m CHECKFOR1_15:
00001290  0303                     994m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001292  6700 5942                995m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001296                           996m 
00001296                           997m NEXT_15: 
00001296  B23C 0000                998m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000129A  6700 0008                999m         BEQ     COMPLETE_15  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000129E  5301                    1000m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012A0  1819                    1001m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012A2  60CE                    1002m         BRA     LOOP_15      ; BEGIN LOOP AGAIN
000012A4                          1003m 
000012A4                          1004m COMPLETE_15:  ; OPCODE HAS BEEN VERIFIED
000012A4                          1005m         ENDM
000012A4  43F8 0060               1006          LEA     oNOP, A1     ; Loads byteVAR
000012A8  103C 000E               1007          MOVE.B  #14,D0          
000012AC  4E4F                    1008          TRAP    #15
000012AE  4E75                    1009          RTS                 ; Return from decodeNOP subroutine
000012B0                          1010  
000012B0                          1011  
000012B0                          1012  ; ------------------------------------------------------------
000012B0                          1013  ; 2. "decodeMOVE" subroutine
000012B0                          1014  ; AUTHOR
000012B0                          1015  ;
000012B0                          1016  ; TODO: DESCRIPTION
000012B0                          1017  ; ------------------------------------------------------------
000012B0                          1018  decodeMOVE:
000012B0                          1019m         verifyOpcode    pMOVE, (A2)
000012B0  43F8 00E5               1020m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
000012B4  3612                    1021m         MOVE.W  (A2), D3      ; INPUT VALUE
000012B6  123C 000F               1022m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000012BA                          1023m         
000012BA                          1024m LOOP_16: 
000012BA  0C11 0030               1025m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000012BE  6700 000E               1026m         BEQ     CHECKFOR0_16
000012C2  0C11 0031               1027m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000012C6  6700 0010               1028m         BEQ     CHECKFOR1_16
000012CA  6000 0012               1029m         BRA     NEXT_16      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000012CE                          1030m         
000012CE                          1031m CHECKFOR0_16: 
000012CE  0303                    1032m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000012D0  6600 5904               1033m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000012D4  6000 0008               1034m         BRA     NEXT_16
000012D8                          1035m 
000012D8                          1036m CHECKFOR1_16:
000012D8  0303                    1037m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000012DA  6700 58FA               1038m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000012DE                          1039m 
000012DE                          1040m NEXT_16: 
000012DE  B23C 0000               1041m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000012E2  6700 0008               1042m         BEQ     COMPLETE_16  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000012E6  5301                    1043m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012E8  1819                    1044m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012EA  60CE                    1045m         BRA     LOOP_16      ; BEGIN LOOP AGAIN
000012EC                          1046m 
000012EC                          1047m COMPLETE_16:  ; OPCODE HAS BEEN VERIFIED
000012EC                          1048m         ENDM
000012EC  43F8 0064               1049          LEA     oMOVE, A1     
000012F0  103C 000E               1050          MOVE.B  #14,D0          
000012F4  4E4F                    1051          TRAP    #15
000012F6                          1052m         printSize       (A2)
000012F6  3612                    1053m         MOVE.W  (A2), D3      ; INPUT VALUE
000012F8  4247                    1054m         CLR     D7      
000012FA                          1055m CHECKFORB_17: 
000012FA  0803 000D               1056m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000012FE  6600 0010               1057m         BNE     CHECKFORW_17  ; IF NOT GO TO WORD SIZE
00001302  43F8 00B5               1058m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00001306  103C 000E               1059m         MOVE.B  #14,D0          
0000130A  4E4F                    1060m         TRAP    #15
0000130C  6000 0026               1061m         BRA     COMPLETE_17      
00001310                          1062m CHECKFORW_17: 
00001310  0803 000C               1063m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00001314  6700 0010               1064m         BEQ     CHECKFORL_17  ; IF NOT, SIZE CANNOT BE WORD
00001318  43F8 00B9               1065m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000131C  103C 000E               1066m         MOVE.B  #14,D0          
00001320  4E4F                    1067m         TRAP    #15
00001322  6000 0010               1068m         BRA     COMPLETE_17  
00001326                          1069m CHECKFORL_17:
00001326  1E3C 0001               1070m         MOVE.B  #$1, D7
0000132A  43F8 00BD               1071m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
0000132E  103C 000E               1072m         MOVE.B  #14,D0          
00001332  4E4F                    1073m         TRAP    #15
00001334                          1074m COMPLETE_17:  ; SIZE HAS BEEN PRINTED
00001334                          1075m         ENDM
00001334                          1076m         prepareAdrMode  #$1, (A2)
00001334  3C3C 0001               1077m         MOVE.W  #$1, D6      ; INPUT VALUE
00001338  3212                    1078m         MOVE.W  (A2), D1
0000133A  BC3C 0001               1079m         CMP.B   #$01, D6
0000133E  6700 000C               1080m         BEQ     ADRSOURCE_18    
00001342                          1081m ADRDEST_18:
00001342  EF49                    1082m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00001344  E049                    1083m         LSR     #$08, D1
00001346  EA49                    1084m         LSR     #$05, D1
00001348  6000 000A               1085m         BRA     COMPLETE_18 
0000134C                          1086m ADRSOURCE_18:                
0000134C  E149                    1087m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000134E  E549                    1088m         LSL     #$02, D1
00001350  E049                    1089m         LSR     #$08, D1
00001352  EA49                    1090m         LSR     #$05, D1
00001354                          1091m COMPLETE_18:  ; OPCODE HAS BEEN VERIFIED
00001354                          1092m         ENDM        
00001354                          1093m         decodeAdrMode   (A2), D1
00001354  3612                    1094m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00001356  3201                    1095m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001358                          1096m 
00001358  B23C 0001               1097m         CMP.B   #$01, D1
0000135C  6700 0066               1098m         BEQ     ADRREGDIRECT_19    
00001360  B23C 0002               1099m         CMP.B   #$02, D1
00001364  6700 00A0               1100m         BEQ     ADRREGINDIRECT_19  
00001368  B23C 0003               1101m         CMP.B   #$03, D1
0000136C  6700 0102               1102m         BEQ     ADRREGPOSTINC_19  
00001370  B23C 0004               1103m         CMP.B   #$04, D1
00001374  6700 0178               1104m         BEQ     ADRREGPREDEC_19
00001378  B23C 0007               1105m         CMP.B   #$07, D1
0000137C  6700 01EE               1106m         BEQ     ADRABSOLUTE_19    
00001380                          1107m         
00001380                          1108m DATAREGDIRECT_19: 
00001380  BC3C 0001               1109m         CMP.B   #$01, D6
00001384  6700 001E               1110m         BEQ     DATAREGDIRECTSRC_19   
00001388                          1111m DATAREGDIRECTDEST_19: 
00001388                          1112mm         PRINTDNDEST D3 
00001388  3203                    1113mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000138A  E949                    1114mm         LSL     #$04, D1
0000138C  E049                    1115mm         LSR     #$08, D1
0000138E  EA49                    1116mm         LSR     #$05, D1
00001390  43F8 00C1               1117mm         LEA     ODN, A1     
00001394  103C 000E               1118mm         MOVE.B  #14,D0          
00001398  4E4F                    1119mm         TRAP    #15
0000139A  103C 0003               1120mm         MOVE.B  #3,D0          
0000139E  4E4F                    1121mm         TRAP    #15
000013A0                          1122mm         ENDM
000013A0  6000 0562               1123m         BRA     COMPLETE_19 
000013A4                          1124m DATAREGDIRECTSRC_19: 
000013A4                          1125mm         PRINTDNSRC D3 
000013A4  4281                    1126mm         CLR.L   D1
000013A6  3203                    1127mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013A8  E149                    1128mm         LSL     #$08, D1
000013AA  EB49                    1129mm         LSL     #$05, D1
000013AC  E049                    1130mm         LSR     #$08, D1
000013AE  EA49                    1131mm         LSR     #$05, D1
000013B0  43F8 00C1               1132mm         LEA     ODN, A1     
000013B4  103C 000E               1133mm         MOVE.B  #14,D0          
000013B8  4E4F                    1134mm         TRAP    #15
000013BA  103C 0003               1135mm         MOVE.B  #3,D0          
000013BE  4E4F                    1136mm         TRAP    #15
000013C0                          1137mm         ENDM
000013C0  6000 0542               1138m         BRA     COMPLETE_19   
000013C4                          1139m         
000013C4                          1140m ADRREGDIRECT_19: 
000013C4  BC3C 0001               1141m         CMP.B   #$01, D6
000013C8  6700 001E               1142m         BEQ     ADRREGDIRECTSRC_19   
000013CC                          1143m ADRREGDIRECTDEST_19:
000013CC                          1144mm         PRINTANDEST D3
000013CC  3203                    1145mm         MOVE.W  D3, D1
000013CE  E949                    1146mm         LSL     #$04, D1
000013D0  E049                    1147mm         LSR     #$08, D1
000013D2  EA49                    1148mm         LSR     #$05, D1
000013D4  43F8 00C3               1149mm         LEA     OAN, A1     
000013D8  103C 000E               1150mm         MOVE.B  #14,D0          
000013DC  4E4F                    1151mm         TRAP    #15
000013DE  103C 0003               1152mm         MOVE.B  #3,D0          
000013E2  4E4F                    1153mm         TRAP    #15
000013E4                          1154mm         ENDM
000013E4  6000 051E               1155m         BRA     COMPLETE_19   
000013E8                          1156m ADRREGDIRECTSRC_19:
000013E8                          1157mm         PRINTANSRC D3
000013E8  3203                    1158mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013EA  E149                    1159mm         LSL     #$08, D1
000013EC  EB49                    1160mm         LSL     #$05, D1
000013EE  E049                    1161mm         LSR     #$08, D1
000013F0  EA49                    1162mm         LSR     #$05, D1
000013F2  43F8 00C3               1163mm         LEA     OAN, A1     
000013F6  103C 000E               1164mm         MOVE.B  #14,D0          
000013FA  4E4F                    1165mm         TRAP    #15
000013FC  103C 0003               1166mm         MOVE.B  #3,D0          
00001400  4E4F                    1167mm         TRAP    #15
00001402                          1168mm         ENDM
00001402  6000 0500               1169m         BRA     COMPLETE_19   
00001406                          1170m        
00001406                          1171m ADRREGINDIRECT_19:   
00001406  BC3C 0001               1172m         CMP.B   #$01, D6
0000140A  6700 0032               1173m         BEQ     ADRREGINDIRECTSRC_19   
0000140E                          1174m ADRREGINDIRECTDEST_19:
0000140E                          1175mm         PRINTLB
0000140E  43F8 00C5               1176mm         LEA     OLB, A1     
00001412  103C 000E               1177mm         MOVE.B  #14,D0          
00001416  4E4F                    1178mm         TRAP    #15
00001418                          1179mm         ENDM
00001418                          1180mm         PRINTANDEST D3  
00001418  3203                    1181mm         MOVE.W  D3, D1
0000141A  E949                    1182mm         LSL     #$04, D1
0000141C  E049                    1183mm         LSR     #$08, D1
0000141E  EA49                    1184mm         LSR     #$05, D1
00001420  43F8 00C3               1185mm         LEA     OAN, A1     
00001424  103C 000E               1186mm         MOVE.B  #14,D0          
00001428  4E4F                    1187mm         TRAP    #15
0000142A  103C 0003               1188mm         MOVE.B  #3,D0          
0000142E  4E4F                    1189mm         TRAP    #15
00001430                          1190mm         ENDM
00001430                          1191mm         PRINTRB
00001430  43F8 00C7               1192mm         LEA     ORB, A1     
00001434  103C 000E               1193mm         MOVE.B  #14,D0          
00001438  4E4F                    1194mm         TRAP    #15
0000143A                          1195mm         ENDM
0000143A  6000 04C8               1196m         BRA     COMPLETE_19     
0000143E                          1197m ADRREGINDIRECTSRC_19:   
0000143E                          1198mm         PRINTLB
0000143E  43F8 00C5               1199mm         LEA     OLB, A1     
00001442  103C 000E               1200mm         MOVE.B  #14,D0          
00001446  4E4F                    1201mm         TRAP    #15
00001448                          1202mm         ENDM
00001448                          1203mm         PRINTANSRC D3  
00001448  3203                    1204mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144A  E149                    1205mm         LSL     #$08, D1
0000144C  EB49                    1206mm         LSL     #$05, D1
0000144E  E049                    1207mm         LSR     #$08, D1
00001450  EA49                    1208mm         LSR     #$05, D1
00001452  43F8 00C3               1209mm         LEA     OAN, A1     
00001456  103C 000E               1210mm         MOVE.B  #14,D0          
0000145A  4E4F                    1211mm         TRAP    #15
0000145C  103C 0003               1212mm         MOVE.B  #3,D0          
00001460  4E4F                    1213mm         TRAP    #15
00001462                          1214mm         ENDM
00001462                          1215mm         PRINTRB
00001462  43F8 00C7               1216mm         LEA     ORB, A1     
00001466  103C 000E               1217mm         MOVE.B  #14,D0          
0000146A  4E4F                    1218mm         TRAP    #15
0000146C                          1219mm         ENDM
0000146C  6000 0496               1220m         BRA     COMPLETE_19   
00001470                          1221m         
00001470                          1222m ADRREGPOSTINC_19:   
00001470  BC3C 0001               1223m         CMP.B   #$01, D6
00001474  6700 003C               1224m         BEQ     ADRREGPOSTINCSRC_19   
00001478                          1225m ADRREGPOSTINCDEST_19: 
00001478                          1226mm         PRINTLB
00001478  43F8 00C5               1227mm         LEA     OLB, A1     
0000147C  103C 000E               1228mm         MOVE.B  #14,D0          
00001480  4E4F                    1229mm         TRAP    #15
00001482                          1230mm         ENDM
00001482                          1231mm         PRINTANDEST D3  
00001482  3203                    1232mm         MOVE.W  D3, D1
00001484  E949                    1233mm         LSL     #$04, D1
00001486  E049                    1234mm         LSR     #$08, D1
00001488  EA49                    1235mm         LSR     #$05, D1
0000148A  43F8 00C3               1236mm         LEA     OAN, A1     
0000148E  103C 000E               1237mm         MOVE.B  #14,D0          
00001492  4E4F                    1238mm         TRAP    #15
00001494  103C 0003               1239mm         MOVE.B  #3,D0          
00001498  4E4F                    1240mm         TRAP    #15
0000149A                          1241mm         ENDM
0000149A                          1242mm         PRINTRB
0000149A  43F8 00C7               1243mm         LEA     ORB, A1     
0000149E  103C 000E               1244mm         MOVE.B  #14,D0          
000014A2  4E4F                    1245mm         TRAP    #15
000014A4                          1246mm         ENDM
000014A4                          1247mm         PRINTPI
000014A4  43F8 00CE               1248mm         LEA     OPSTINC, A1     
000014A8  103C 000E               1249mm         MOVE.B  #14,D0          
000014AC  4E4F                    1250mm         TRAP    #15
000014AE                          1251mm         ENDM
000014AE  6000 0454               1252m         BRA     COMPLETE_19  
000014B2                          1253m ADRREGPOSTINCSRC_19:           
000014B2                          1254mm         PRINTLB
000014B2  43F8 00C5               1255mm         LEA     OLB, A1     
000014B6  103C 000E               1256mm         MOVE.B  #14,D0          
000014BA  4E4F                    1257mm         TRAP    #15
000014BC                          1258mm         ENDM
000014BC                          1259mm         PRINTANSRC D3  
000014BC  3203                    1260mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014BE  E149                    1261mm         LSL     #$08, D1
000014C0  EB49                    1262mm         LSL     #$05, D1
000014C2  E049                    1263mm         LSR     #$08, D1
000014C4  EA49                    1264mm         LSR     #$05, D1
000014C6  43F8 00C3               1265mm         LEA     OAN, A1     
000014CA  103C 000E               1266mm         MOVE.B  #14,D0          
000014CE  4E4F                    1267mm         TRAP    #15
000014D0  103C 0003               1268mm         MOVE.B  #3,D0          
000014D4  4E4F                    1269mm         TRAP    #15
000014D6                          1270mm         ENDM
000014D6                          1271mm         PRINTRB
000014D6  43F8 00C7               1272mm         LEA     ORB, A1     
000014DA  103C 000E               1273mm         MOVE.B  #14,D0          
000014DE  4E4F                    1274mm         TRAP    #15
000014E0                          1275mm         ENDM
000014E0                          1276mm         PRINTPI
000014E0  43F8 00CE               1277mm         LEA     OPSTINC, A1     
000014E4  103C 000E               1278mm         MOVE.B  #14,D0          
000014E8  4E4F                    1279mm         TRAP    #15
000014EA                          1280mm         ENDM
000014EA  6000 0418               1281m         BRA     COMPLETE_19  
000014EE                          1282m ADRREGPREDEC_19: 
000014EE  BC3C 0001               1283m         CMP.B   #$01, D6
000014F2  6700 003C               1284m         BEQ     ADRREGPREDECSRC_19   
000014F6                          1285m ADRREGPREDECDEST_19:
000014F6                          1286mm         PRINTPD  
000014F6  43F8 00CC               1287mm         LEA     OPREDEC, A1     
000014FA  103C 000E               1288mm         MOVE.B  #14,D0          
000014FE  4E4F                    1289mm         TRAP    #15
00001500                          1290mm         ENDM
00001500                          1291mm         PRINTLB
00001500  43F8 00C5               1292mm         LEA     OLB, A1     
00001504  103C 000E               1293mm         MOVE.B  #14,D0          
00001508  4E4F                    1294mm         TRAP    #15
0000150A                          1295mm         ENDM
0000150A                          1296mm         PRINTANDEST D3  
0000150A  3203                    1297mm         MOVE.W  D3, D1
0000150C  E949                    1298mm         LSL     #$04, D1
0000150E  E049                    1299mm         LSR     #$08, D1
00001510  EA49                    1300mm         LSR     #$05, D1
00001512  43F8 00C3               1301mm         LEA     OAN, A1     
00001516  103C 000E               1302mm         MOVE.B  #14,D0          
0000151A  4E4F                    1303mm         TRAP    #15
0000151C  103C 0003               1304mm         MOVE.B  #3,D0          
00001520  4E4F                    1305mm         TRAP    #15
00001522                          1306mm         ENDM
00001522                          1307mm         PRINTRB
00001522  43F8 00C7               1308mm         LEA     ORB, A1     
00001526  103C 000E               1309mm         MOVE.B  #14,D0          
0000152A  4E4F                    1310mm         TRAP    #15
0000152C                          1311mm         ENDM
0000152C  6000 03D6               1312m         BRA     COMPLETE_19   
00001530                          1313m ADRREGPREDECSRC_19: 
00001530                          1314mm         PRINTPD  
00001530  43F8 00CC               1315mm         LEA     OPREDEC, A1     
00001534  103C 000E               1316mm         MOVE.B  #14,D0          
00001538  4E4F                    1317mm         TRAP    #15
0000153A                          1318mm         ENDM
0000153A                          1319mm         PRINTLB
0000153A  43F8 00C5               1320mm         LEA     OLB, A1     
0000153E  103C 000E               1321mm         MOVE.B  #14,D0          
00001542  4E4F                    1322mm         TRAP    #15
00001544                          1323mm         ENDM
00001544                          1324mm         PRINTANSRC D3  
00001544  3203                    1325mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001546  E149                    1326mm         LSL     #$08, D1
00001548  EB49                    1327mm         LSL     #$05, D1
0000154A  E049                    1328mm         LSR     #$08, D1
0000154C  EA49                    1329mm         LSR     #$05, D1
0000154E  43F8 00C3               1330mm         LEA     OAN, A1     
00001552  103C 000E               1331mm         MOVE.B  #14,D0          
00001556  4E4F                    1332mm         TRAP    #15
00001558  103C 0003               1333mm         MOVE.B  #3,D0          
0000155C  4E4F                    1334mm         TRAP    #15
0000155E                          1335mm         ENDM
0000155E                          1336mm         PRINTRB
0000155E  43F8 00C7               1337mm         LEA     ORB, A1     
00001562  103C 000E               1338mm         MOVE.B  #14,D0          
00001566  4E4F                    1339mm         TRAP    #15
00001568                          1340mm         ENDM
00001568  6000 039A               1341m         BRA     COMPLETE_19
0000156C                          1342m        
0000156C                          1343m ADRABSOLUTE_19:
0000156C  BC3C 0001               1344m         CMP.B   #$01, D6
00001570  6600 0018               1345m         BNE     ADRABSOLUTEDST_19 
00001574                          1346m         
00001574  3A03                    1347m         MOVE.W  D3, D5
00001576  0803 0002               1348m         BTST    #2, D3
0000157A  6600 0024               1349m         BNE     ADRIMMEDIATE_19
0000157E  0803 0000               1350m         BTST    #0, D3
00001582  6600 0270               1351m         BNE     ADRABSOLUTEL_19
00001586  6000 01DA               1352m         BRA     ADRABSOLUTEW_19
0000158A                          1353m ADRABSOLUTEDST_19:
0000158A  3A03                    1354m         MOVE.W  D3, D5
0000158C  0803 000B               1355m         BTST    #$B, D3
00001590  6600 000E               1356m         BNE     ADRIMMEDIATE_19
00001594  0803 0009               1357m         BTST    #$09, D3
00001598  6600 025A               1358m         BNE     ADRABSOLUTEL_19
0000159C  6000 01C4               1359m         BRA     ADRABSOLUTEW_19
000015A0                          1360m ADRIMMEDIATE_19:
000015A0  BE3C 0001               1361m         CMP.B   #1, D7
000015A4  6700 009E               1362m         BEQ     ADRIMMEDIATEL_19
000015A8                          1363m ADRIMMEDIATEW_19:
000015A8  361A                    1364m         MOVE.W  (A2)+, D3
000015AA                          1365mm         PRINTHASH
000015AA  103C 0006               1366mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015AE  323C 0023               1367mm         MOVE.W  #35, D1     ; AN = SIGN
000015B2  4E4F                    1368mm         TRAP    #15         ; OUTPUT = SIGN
000015B4                          1369mm         ENDM
000015B4                          1370mm         PRINTSIGN
000015B4  103C 0006               1371mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015B8  323C 0024               1372mm         MOVE.W  #36, D1     ; AN = SIGN
000015BC  4E4F                    1373mm         TRAP    #15         ; OUTPUT = SIGN
000015BE                          1374mm         ENDM
000015BE                          1375mm         ADROUT
000015BE  3212                    1376mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015C0  E049                    1377mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015C2  E849                    1378mm         LSR.W   #4, D1      
000015C4                          1379mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015C4  0C01 0009               1380mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015C8  6E00 000A               1381mmm         BGT     ALPHA_49
000015CC  0601 0030               1382mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015D0  6000 0006               1383mmm         BRA     DONE_49
000015D4  0601 0037               1384mmm ALPHA_49: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015D8  4E71                    1385mmm DONE_49: NOP
000015DA                          1386mmm         ENDM
000015DA  4E4F                    1387mm         TRAP    #15         ; EXECUTE OUTPUT
000015DC                          1388mm         
000015DC  3212                    1389mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015DE  E949                    1390mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000015E0  E049                    1391mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015E2  E849                    1392mm         LSR.W   #4, D1      
000015E4                          1393mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015E4  0C01 0009               1394mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015E8  6E00 000A               1395mmm         BGT     ALPHA_50
000015EC  0601 0030               1396mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015F0  6000 0006               1397mmm         BRA     DONE_50
000015F4  0601 0037               1398mmm ALPHA_50: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015F8  4E71                    1399mmm DONE_50: NOP
000015FA                          1400mmm         ENDM
000015FA  4E4F                    1401mm         TRAP    #15         ; EXECUTE OUTPUT
000015FC                          1402mm         
000015FC  3212                    1403mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015FE  E149                    1404mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001600  E049                    1405mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001602  E849                    1406mm         LSR.W   #4, D1      
00001604                          1407mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001604  0C01 0009               1408mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001608  6E00 000A               1409mmm         BGT     ALPHA_51
0000160C  0601 0030               1410mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001610  6000 0006               1411mmm         BRA     DONE_51
00001614  0601 0037               1412mmm ALPHA_51: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001618  4E71                    1413mmm DONE_51: NOP
0000161A                          1414mmm         ENDM
0000161A  4E4F                    1415mm         TRAP    #15         ; EXECUTE OUTPUT
0000161C                          1416mm         
0000161C  3212                    1417mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000161E  E149                    1418mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001620  E949                    1419mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001622  E049                    1420mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001624  E849                    1421mm         LSR.W   #4, D1      
00001626                          1422mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001626  0C01 0009               1423mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000162A  6E00 000A               1424mmm         BGT     ALPHA_52
0000162E  0601 0030               1425mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001632  6000 0006               1426mmm         BRA     DONE_52
00001636  0601 0037               1427mmm ALPHA_52: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000163A  4E71                    1428mmm DONE_52: NOP
0000163C                          1429mmm         ENDM
0000163C  4E4F                    1430mm         TRAP    #15         ; EXECUTE OUTPUT       
0000163E                          1431mm         ENDM 
0000163E  3605                    1432m         MOVE.W  D5, D3
00001640  6000 02C2               1433m         BRA     COMPLETE_19
00001644                          1434m ADRIMMEDIATEL_19:
00001644  361A                    1435m         MOVE.W  (A2)+, D3
00001646                          1436mm         PRINTHASH
00001646  103C 0006               1437mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000164A  323C 0023               1438mm         MOVE.W  #35, D1     ; AN = SIGN
0000164E  4E4F                    1439mm         TRAP    #15         ; OUTPUT = SIGN
00001650                          1440mm         ENDM
00001650                          1441mm         PRINTSIGN
00001650  103C 0006               1442mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001654  323C 0024               1443mm         MOVE.W  #36, D1     ; AN = SIGN
00001658  4E4F                    1444mm         TRAP    #15         ; OUTPUT = SIGN
0000165A                          1445mm         ENDM
0000165A                          1446mm         ADROUT 
0000165A  3212                    1447mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000165C  E049                    1448mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000165E  E849                    1449mm         LSR.W   #4, D1      
00001660                          1450mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001660  0C01 0009               1451mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001664  6E00 000A               1452mmm         BGT     ALPHA_56
00001668  0601 0030               1453mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000166C  6000 0006               1454mmm         BRA     DONE_56
00001670  0601 0037               1455mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001674  4E71                    1456mmm DONE_56: NOP
00001676                          1457mmm         ENDM
00001676  4E4F                    1458mm         TRAP    #15         ; EXECUTE OUTPUT
00001678                          1459mm         
00001678  3212                    1460mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000167A  E949                    1461mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000167C  E049                    1462mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000167E  E849                    1463mm         LSR.W   #4, D1      
00001680                          1464mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001680  0C01 0009               1465mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001684  6E00 000A               1466mmm         BGT     ALPHA_57
00001688  0601 0030               1467mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000168C  6000 0006               1468mmm         BRA     DONE_57
00001690  0601 0037               1469mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001694  4E71                    1470mmm DONE_57: NOP
00001696                          1471mmm         ENDM
00001696  4E4F                    1472mm         TRAP    #15         ; EXECUTE OUTPUT
00001698                          1473mm         
00001698  3212                    1474mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000169A  E149                    1475mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000169C  E049                    1476mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000169E  E849                    1477mm         LSR.W   #4, D1      
000016A0                          1478mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016A0  0C01 0009               1479mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016A4  6E00 000A               1480mmm         BGT     ALPHA_58
000016A8  0601 0030               1481mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016AC  6000 0006               1482mmm         BRA     DONE_58
000016B0  0601 0037               1483mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016B4  4E71                    1484mmm DONE_58: NOP
000016B6                          1485mmm         ENDM
000016B6  4E4F                    1486mm         TRAP    #15         ; EXECUTE OUTPUT
000016B8                          1487mm         
000016B8  3212                    1488mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016BA  E149                    1489mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016BC  E949                    1490mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016BE  E049                    1491mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016C0  E849                    1492mm         LSR.W   #4, D1      
000016C2                          1493mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016C2  0C01 0009               1494mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016C6  6E00 000A               1495mmm         BGT     ALPHA_59
000016CA  0601 0030               1496mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016CE  6000 0006               1497mmm         BRA     DONE_59
000016D2  0601 0037               1498mmm ALPHA_59: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016D6  4E71                    1499mmm DONE_59: NOP
000016D8                          1500mmm         ENDM
000016D8  4E4F                    1501mm         TRAP    #15         ; EXECUTE OUTPUT       
000016DA                          1502mm         ENDM 
000016DA  361A                    1503m         MOVE.W  (A2)+, D3
000016DC                          1504mm         ADROUT
000016DC  3212                    1505mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016DE  E049                    1506mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016E0  E849                    1507mm         LSR.W   #4, D1      
000016E2                          1508mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016E2  0C01 0009               1509mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016E6  6E00 000A               1510mmm         BGT     ALPHA_61
000016EA  0601 0030               1511mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016EE  6000 0006               1512mmm         BRA     DONE_61
000016F2  0601 0037               1513mmm ALPHA_61: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016F6  4E71                    1514mmm DONE_61: NOP
000016F8                          1515mmm         ENDM
000016F8  4E4F                    1516mm         TRAP    #15         ; EXECUTE OUTPUT
000016FA                          1517mm         
000016FA  3212                    1518mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016FC  E949                    1519mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000016FE  E049                    1520mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001700  E849                    1521mm         LSR.W   #4, D1      
00001702                          1522mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001702  0C01 0009               1523mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001706  6E00 000A               1524mmm         BGT     ALPHA_62
0000170A  0601 0030               1525mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000170E  6000 0006               1526mmm         BRA     DONE_62
00001712  0601 0037               1527mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001716  4E71                    1528mmm DONE_62: NOP
00001718                          1529mmm         ENDM
00001718  4E4F                    1530mm         TRAP    #15         ; EXECUTE OUTPUT
0000171A                          1531mm         
0000171A  3212                    1532mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000171C  E149                    1533mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000171E  E049                    1534mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001720  E849                    1535mm         LSR.W   #4, D1      
00001722                          1536mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001722  0C01 0009               1537mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001726  6E00 000A               1538mmm         BGT     ALPHA_63
0000172A  0601 0030               1539mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000172E  6000 0006               1540mmm         BRA     DONE_63
00001732  0601 0037               1541mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001736  4E71                    1542mmm DONE_63: NOP
00001738                          1543mmm         ENDM
00001738  4E4F                    1544mm         TRAP    #15         ; EXECUTE OUTPUT
0000173A                          1545mm         
0000173A  3212                    1546mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000173C  E149                    1547mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000173E  E949                    1548mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001740  E049                    1549mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001742  E849                    1550mm         LSR.W   #4, D1      
00001744                          1551mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001744  0C01 0009               1552mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001748  6E00 000A               1553mmm         BGT     ALPHA_64
0000174C  0601 0030               1554mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001750  6000 0006               1555mmm         BRA     DONE_64
00001754  0601 0037               1556mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001758  4E71                    1557mmm DONE_64: NOP
0000175A                          1558mmm         ENDM
0000175A  4E4F                    1559mm         TRAP    #15         ; EXECUTE OUTPUT       
0000175C                          1560mm         ENDM 
0000175C  3605                    1561m         MOVE.W  D5, D3
0000175E  6000 01A4               1562m         BRA     COMPLETE_19 
00001762                          1563m ADRABSOLUTEW_19:     
00001762  361A                    1564m         MOVE.W  (A2)+, D3
00001764                          1565mm         PRINTSIGN
00001764  103C 0006               1566mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001768  323C 0024               1567mm         MOVE.W  #36, D1     ; AN = SIGN
0000176C  4E4F                    1568mm         TRAP    #15         ; OUTPUT = SIGN
0000176E                          1569mm         ENDM
0000176E                          1570mm         ADROUT
0000176E  3212                    1571mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001770  E049                    1572mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001772  E849                    1573mm         LSR.W   #4, D1      
00001774                          1574mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001774  0C01 0009               1575mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001778  6E00 000A               1576mmm         BGT     ALPHA_67
0000177C  0601 0030               1577mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001780  6000 0006               1578mmm         BRA     DONE_67
00001784  0601 0037               1579mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001788  4E71                    1580mmm DONE_67: NOP
0000178A                          1581mmm         ENDM
0000178A  4E4F                    1582mm         TRAP    #15         ; EXECUTE OUTPUT
0000178C                          1583mm         
0000178C  3212                    1584mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000178E  E949                    1585mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001790  E049                    1586mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001792  E849                    1587mm         LSR.W   #4, D1      
00001794                          1588mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001794  0C01 0009               1589mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001798  6E00 000A               1590mmm         BGT     ALPHA_68
0000179C  0601 0030               1591mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017A0  6000 0006               1592mmm         BRA     DONE_68
000017A4  0601 0037               1593mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017A8  4E71                    1594mmm DONE_68: NOP
000017AA                          1595mmm         ENDM
000017AA  4E4F                    1596mm         TRAP    #15         ; EXECUTE OUTPUT
000017AC                          1597mm         
000017AC  3212                    1598mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AE  E149                    1599mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017B0  E049                    1600mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B2  E849                    1601mm         LSR.W   #4, D1      
000017B4                          1602mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B4  0C01 0009               1603mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B8  6E00 000A               1604mmm         BGT     ALPHA_69
000017BC  0601 0030               1605mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017C0  6000 0006               1606mmm         BRA     DONE_69
000017C4  0601 0037               1607mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C8  4E71                    1608mmm DONE_69: NOP
000017CA                          1609mmm         ENDM
000017CA  4E4F                    1610mm         TRAP    #15         ; EXECUTE OUTPUT
000017CC                          1611mm         
000017CC  3212                    1612mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017CE  E149                    1613mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017D0  E949                    1614mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017D2  E049                    1615mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D4  E849                    1616mm         LSR.W   #4, D1      
000017D6                          1617mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D6  0C01 0009               1618mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017DA  6E00 000A               1619mmm         BGT     ALPHA_70
000017DE  0601 0030               1620mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017E2  6000 0006               1621mmm         BRA     DONE_70
000017E6  0601 0037               1622mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017EA  4E71                    1623mmm DONE_70: NOP
000017EC                          1624mmm         ENDM
000017EC  4E4F                    1625mm         TRAP    #15         ; EXECUTE OUTPUT       
000017EE                          1626mm         ENDM 
000017EE  3605                    1627m         MOVE.W  D5, D3
000017F0  6000 0112               1628m         BRA     COMPLETE_19  
000017F4                          1629m ADRABSOLUTEL_19:  
000017F4  361A                    1630m         MOVE.W  (A2)+, D3
000017F6                          1631mm         PRINTSIGN
000017F6  103C 0006               1632mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000017FA  323C 0024               1633mm         MOVE.W  #36, D1     ; AN = SIGN
000017FE  4E4F                    1634mm         TRAP    #15         ; OUTPUT = SIGN
00001800                          1635mm         ENDM
00001800                          1636mm         ADROUT 
00001800  3212                    1637mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001802  E049                    1638mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001804  E849                    1639mm         LSR.W   #4, D1      
00001806                          1640mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001806  0C01 0009               1641mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000180A  6E00 000A               1642mmm         BGT     ALPHA_73
0000180E  0601 0030               1643mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001812  6000 0006               1644mmm         BRA     DONE_73
00001816  0601 0037               1645mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000181A  4E71                    1646mmm DONE_73: NOP
0000181C                          1647mmm         ENDM
0000181C  4E4F                    1648mm         TRAP    #15         ; EXECUTE OUTPUT
0000181E                          1649mm         
0000181E  3212                    1650mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001820  E949                    1651mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001822  E049                    1652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001824  E849                    1653mm         LSR.W   #4, D1      
00001826                          1654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001826  0C01 0009               1655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182A  6E00 000A               1656mmm         BGT     ALPHA_74
0000182E  0601 0030               1657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001832  6000 0006               1658mmm         BRA     DONE_74
00001836  0601 0037               1659mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183A  4E71                    1660mmm DONE_74: NOP
0000183C                          1661mmm         ENDM
0000183C  4E4F                    1662mm         TRAP    #15         ; EXECUTE OUTPUT
0000183E                          1663mm         
0000183E  3212                    1664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001840  E149                    1665mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001842  E049                    1666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001844  E849                    1667mm         LSR.W   #4, D1      
00001846                          1668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001846  0C01 0009               1669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184A  6E00 000A               1670mmm         BGT     ALPHA_75
0000184E  0601 0030               1671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001852  6000 0006               1672mmm         BRA     DONE_75
00001856  0601 0037               1673mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185A  4E71                    1674mmm DONE_75: NOP
0000185C                          1675mmm         ENDM
0000185C  4E4F                    1676mm         TRAP    #15         ; EXECUTE OUTPUT
0000185E                          1677mm         
0000185E  3212                    1678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001860  E149                    1679mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001862  E949                    1680mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001864  E049                    1681mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001866  E849                    1682mm         LSR.W   #4, D1      
00001868                          1683mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001868  0C01 0009               1684mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186C  6E00 000A               1685mmm         BGT     ALPHA_76
00001870  0601 0030               1686mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001874  6000 0006               1687mmm         BRA     DONE_76
00001878  0601 0037               1688mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187C  4E71                    1689mmm DONE_76: NOP
0000187E                          1690mmm         ENDM
0000187E  4E4F                    1691mm         TRAP    #15         ; EXECUTE OUTPUT       
00001880                          1692mm         ENDM 
00001880  361A                    1693m         MOVE.W  (A2)+, D3
00001882                          1694mm         ADROUT
00001882  3212                    1695mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001884  E049                    1696mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001886  E849                    1697mm         LSR.W   #4, D1      
00001888                          1698mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001888  0C01 0009               1699mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188C  6E00 000A               1700mmm         BGT     ALPHA_78
00001890  0601 0030               1701mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001894  6000 0006               1702mmm         BRA     DONE_78
00001898  0601 0037               1703mmm ALPHA_78: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189C  4E71                    1704mmm DONE_78: NOP
0000189E                          1705mmm         ENDM
0000189E  4E4F                    1706mm         TRAP    #15         ; EXECUTE OUTPUT
000018A0                          1707mm         
000018A0  3212                    1708mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018A2  E949                    1709mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018A4  E049                    1710mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A6  E849                    1711mm         LSR.W   #4, D1      
000018A8                          1712mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018A8  0C01 0009               1713mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AC  6E00 000A               1714mmm         BGT     ALPHA_79
000018B0  0601 0030               1715mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B4  6000 0006               1716mmm         BRA     DONE_79
000018B8  0601 0037               1717mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BC  4E71                    1718mmm DONE_79: NOP
000018BE                          1719mmm         ENDM
000018BE  4E4F                    1720mm         TRAP    #15         ; EXECUTE OUTPUT
000018C0                          1721mm         
000018C0  3212                    1722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018C2  E149                    1723mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018C4  E049                    1724mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018C6  E849                    1725mm         LSR.W   #4, D1      
000018C8                          1726mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018C8  0C01 0009               1727mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018CC  6E00 000A               1728mmm         BGT     ALPHA_80
000018D0  0601 0030               1729mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018D4  6000 0006               1730mmm         BRA     DONE_80
000018D8  0601 0037               1731mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018DC  4E71                    1732mmm DONE_80: NOP
000018DE                          1733mmm         ENDM
000018DE  4E4F                    1734mm         TRAP    #15         ; EXECUTE OUTPUT
000018E0                          1735mm         
000018E0  3212                    1736mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018E2  E149                    1737mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018E4  E949                    1738mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000018E6  E049                    1739mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018E8  E849                    1740mm         LSR.W   #4, D1      
000018EA                          1741mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018EA  0C01 0009               1742mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018EE  6E00 000A               1743mmm         BGT     ALPHA_81
000018F2  0601 0030               1744mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018F6  6000 0006               1745mmm         BRA     DONE_81
000018FA  0601 0037               1746mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018FE  4E71                    1747mmm DONE_81: NOP
00001900                          1748mmm         ENDM
00001900  4E4F                    1749mm         TRAP    #15         ; EXECUTE OUTPUT       
00001902                          1750mm         ENDM 
00001902  3605                    1751m         MOVE.W  D5, D3
00001904                          1752m 
00001904                          1753m COMPLETE_19:  ; OPCODE HAS BEEN VERIFIED
00001904                          1754m         ENDM
00001904                          1755m         printComma
00001904  43F8 00C9               1756m         LEA     OCOMMA, A1     
00001908  103C 000E               1757m         MOVE.B  #14,D0          
0000190C  4E4F                    1758m         TRAP    #15
0000190E                          1759m         ENDM
0000190E                          1760m         prepareAdrMode  #$0,  D3
0000190E  3C3C 0000               1761m         MOVE.W  #$0, D6      ; INPUT VALUE
00001912  3203                    1762m         MOVE.W  D3, D1
00001914  BC3C 0001               1763m         CMP.B   #$01, D6
00001918  6700 000C               1764m         BEQ     ADRSOURCE_83    
0000191C                          1765m ADRDEST_83:
0000191C  EF49                    1766m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000191E  E049                    1767m         LSR     #$08, D1
00001920  EA49                    1768m         LSR     #$05, D1
00001922  6000 000A               1769m         BRA     COMPLETE_83 
00001926                          1770m ADRSOURCE_83:                
00001926  E149                    1771m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00001928  E549                    1772m         LSL     #$02, D1
0000192A  E049                    1773m         LSR     #$08, D1
0000192C  EA49                    1774m         LSR     #$05, D1
0000192E                          1775m COMPLETE_83:  ; OPCODE HAS BEEN VERIFIED
0000192E                          1776m         ENDM        
0000192E                          1777m         decodeAdrMode   D3, D1
0000192E  3603                    1778m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
00001930  3201                    1779m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001932                          1780m 
00001932  B23C 0001               1781m         CMP.B   #$01, D1
00001936  6700 0066               1782m         BEQ     ADRREGDIRECT_84    
0000193A  B23C 0002               1783m         CMP.B   #$02, D1
0000193E  6700 00A0               1784m         BEQ     ADRREGINDIRECT_84  
00001942  B23C 0003               1785m         CMP.B   #$03, D1
00001946  6700 0102               1786m         BEQ     ADRREGPOSTINC_84  
0000194A  B23C 0004               1787m         CMP.B   #$04, D1
0000194E  6700 0178               1788m         BEQ     ADRREGPREDEC_84
00001952  B23C 0007               1789m         CMP.B   #$07, D1
00001956  6700 01EE               1790m         BEQ     ADRABSOLUTE_84    
0000195A                          1791m         
0000195A                          1792m DATAREGDIRECT_84: 
0000195A  BC3C 0001               1793m         CMP.B   #$01, D6
0000195E  6700 001E               1794m         BEQ     DATAREGDIRECTSRC_84   
00001962                          1795m DATAREGDIRECTDEST_84: 
00001962                          1796mm         PRINTDNDEST D3 
00001962  3203                    1797mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001964  E949                    1798mm         LSL     #$04, D1
00001966  E049                    1799mm         LSR     #$08, D1
00001968  EA49                    1800mm         LSR     #$05, D1
0000196A  43F8 00C1               1801mm         LEA     ODN, A1     
0000196E  103C 000E               1802mm         MOVE.B  #14,D0          
00001972  4E4F                    1803mm         TRAP    #15
00001974  103C 0003               1804mm         MOVE.B  #3,D0          
00001978  4E4F                    1805mm         TRAP    #15
0000197A                          1806mm         ENDM
0000197A  6000 0562               1807m         BRA     COMPLETE_84 
0000197E                          1808m DATAREGDIRECTSRC_84: 
0000197E                          1809mm         PRINTDNSRC D3 
0000197E  4281                    1810mm         CLR.L   D1
00001980  3203                    1811mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001982  E149                    1812mm         LSL     #$08, D1
00001984  EB49                    1813mm         LSL     #$05, D1
00001986  E049                    1814mm         LSR     #$08, D1
00001988  EA49                    1815mm         LSR     #$05, D1
0000198A  43F8 00C1               1816mm         LEA     ODN, A1     
0000198E  103C 000E               1817mm         MOVE.B  #14,D0          
00001992  4E4F                    1818mm         TRAP    #15
00001994  103C 0003               1819mm         MOVE.B  #3,D0          
00001998  4E4F                    1820mm         TRAP    #15
0000199A                          1821mm         ENDM
0000199A  6000 0542               1822m         BRA     COMPLETE_84   
0000199E                          1823m         
0000199E                          1824m ADRREGDIRECT_84: 
0000199E  BC3C 0001               1825m         CMP.B   #$01, D6
000019A2  6700 001E               1826m         BEQ     ADRREGDIRECTSRC_84   
000019A6                          1827m ADRREGDIRECTDEST_84:
000019A6                          1828mm         PRINTANDEST D3
000019A6  3203                    1829mm         MOVE.W  D3, D1
000019A8  E949                    1830mm         LSL     #$04, D1
000019AA  E049                    1831mm         LSR     #$08, D1
000019AC  EA49                    1832mm         LSR     #$05, D1
000019AE  43F8 00C3               1833mm         LEA     OAN, A1     
000019B2  103C 000E               1834mm         MOVE.B  #14,D0          
000019B6  4E4F                    1835mm         TRAP    #15
000019B8  103C 0003               1836mm         MOVE.B  #3,D0          
000019BC  4E4F                    1837mm         TRAP    #15
000019BE                          1838mm         ENDM
000019BE  6000 051E               1839m         BRA     COMPLETE_84   
000019C2                          1840m ADRREGDIRECTSRC_84:
000019C2                          1841mm         PRINTANSRC D3
000019C2  3203                    1842mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000019C4  E149                    1843mm         LSL     #$08, D1
000019C6  EB49                    1844mm         LSL     #$05, D1
000019C8  E049                    1845mm         LSR     #$08, D1
000019CA  EA49                    1846mm         LSR     #$05, D1
000019CC  43F8 00C3               1847mm         LEA     OAN, A1     
000019D0  103C 000E               1848mm         MOVE.B  #14,D0          
000019D4  4E4F                    1849mm         TRAP    #15
000019D6  103C 0003               1850mm         MOVE.B  #3,D0          
000019DA  4E4F                    1851mm         TRAP    #15
000019DC                          1852mm         ENDM
000019DC  6000 0500               1853m         BRA     COMPLETE_84   
000019E0                          1854m        
000019E0                          1855m ADRREGINDIRECT_84:   
000019E0  BC3C 0001               1856m         CMP.B   #$01, D6
000019E4  6700 0032               1857m         BEQ     ADRREGINDIRECTSRC_84   
000019E8                          1858m ADRREGINDIRECTDEST_84:
000019E8                          1859mm         PRINTLB
000019E8  43F8 00C5               1860mm         LEA     OLB, A1     
000019EC  103C 000E               1861mm         MOVE.B  #14,D0          
000019F0  4E4F                    1862mm         TRAP    #15
000019F2                          1863mm         ENDM
000019F2                          1864mm         PRINTANDEST D3  
000019F2  3203                    1865mm         MOVE.W  D3, D1
000019F4  E949                    1866mm         LSL     #$04, D1
000019F6  E049                    1867mm         LSR     #$08, D1
000019F8  EA49                    1868mm         LSR     #$05, D1
000019FA  43F8 00C3               1869mm         LEA     OAN, A1     
000019FE  103C 000E               1870mm         MOVE.B  #14,D0          
00001A02  4E4F                    1871mm         TRAP    #15
00001A04  103C 0003               1872mm         MOVE.B  #3,D0          
00001A08  4E4F                    1873mm         TRAP    #15
00001A0A                          1874mm         ENDM
00001A0A                          1875mm         PRINTRB
00001A0A  43F8 00C7               1876mm         LEA     ORB, A1     
00001A0E  103C 000E               1877mm         MOVE.B  #14,D0          
00001A12  4E4F                    1878mm         TRAP    #15
00001A14                          1879mm         ENDM
00001A14  6000 04C8               1880m         BRA     COMPLETE_84     
00001A18                          1881m ADRREGINDIRECTSRC_84:   
00001A18                          1882mm         PRINTLB
00001A18  43F8 00C5               1883mm         LEA     OLB, A1     
00001A1C  103C 000E               1884mm         MOVE.B  #14,D0          
00001A20  4E4F                    1885mm         TRAP    #15
00001A22                          1886mm         ENDM
00001A22                          1887mm         PRINTANSRC D3  
00001A22  3203                    1888mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A24  E149                    1889mm         LSL     #$08, D1
00001A26  EB49                    1890mm         LSL     #$05, D1
00001A28  E049                    1891mm         LSR     #$08, D1
00001A2A  EA49                    1892mm         LSR     #$05, D1
00001A2C  43F8 00C3               1893mm         LEA     OAN, A1     
00001A30  103C 000E               1894mm         MOVE.B  #14,D0          
00001A34  4E4F                    1895mm         TRAP    #15
00001A36  103C 0003               1896mm         MOVE.B  #3,D0          
00001A3A  4E4F                    1897mm         TRAP    #15
00001A3C                          1898mm         ENDM
00001A3C                          1899mm         PRINTRB
00001A3C  43F8 00C7               1900mm         LEA     ORB, A1     
00001A40  103C 000E               1901mm         MOVE.B  #14,D0          
00001A44  4E4F                    1902mm         TRAP    #15
00001A46                          1903mm         ENDM
00001A46  6000 0496               1904m         BRA     COMPLETE_84   
00001A4A                          1905m         
00001A4A                          1906m ADRREGPOSTINC_84:   
00001A4A  BC3C 0001               1907m         CMP.B   #$01, D6
00001A4E  6700 003C               1908m         BEQ     ADRREGPOSTINCSRC_84   
00001A52                          1909m ADRREGPOSTINCDEST_84: 
00001A52                          1910mm         PRINTLB
00001A52  43F8 00C5               1911mm         LEA     OLB, A1     
00001A56  103C 000E               1912mm         MOVE.B  #14,D0          
00001A5A  4E4F                    1913mm         TRAP    #15
00001A5C                          1914mm         ENDM
00001A5C                          1915mm         PRINTANDEST D3  
00001A5C  3203                    1916mm         MOVE.W  D3, D1
00001A5E  E949                    1917mm         LSL     #$04, D1
00001A60  E049                    1918mm         LSR     #$08, D1
00001A62  EA49                    1919mm         LSR     #$05, D1
00001A64  43F8 00C3               1920mm         LEA     OAN, A1     
00001A68  103C 000E               1921mm         MOVE.B  #14,D0          
00001A6C  4E4F                    1922mm         TRAP    #15
00001A6E  103C 0003               1923mm         MOVE.B  #3,D0          
00001A72  4E4F                    1924mm         TRAP    #15
00001A74                          1925mm         ENDM
00001A74                          1926mm         PRINTRB
00001A74  43F8 00C7               1927mm         LEA     ORB, A1     
00001A78  103C 000E               1928mm         MOVE.B  #14,D0          
00001A7C  4E4F                    1929mm         TRAP    #15
00001A7E                          1930mm         ENDM
00001A7E                          1931mm         PRINTPI
00001A7E  43F8 00CE               1932mm         LEA     OPSTINC, A1     
00001A82  103C 000E               1933mm         MOVE.B  #14,D0          
00001A86  4E4F                    1934mm         TRAP    #15
00001A88                          1935mm         ENDM
00001A88  6000 0454               1936m         BRA     COMPLETE_84  
00001A8C                          1937m ADRREGPOSTINCSRC_84:           
00001A8C                          1938mm         PRINTLB
00001A8C  43F8 00C5               1939mm         LEA     OLB, A1     
00001A90  103C 000E               1940mm         MOVE.B  #14,D0          
00001A94  4E4F                    1941mm         TRAP    #15
00001A96                          1942mm         ENDM
00001A96                          1943mm         PRINTANSRC D3  
00001A96  3203                    1944mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A98  E149                    1945mm         LSL     #$08, D1
00001A9A  EB49                    1946mm         LSL     #$05, D1
00001A9C  E049                    1947mm         LSR     #$08, D1
00001A9E  EA49                    1948mm         LSR     #$05, D1
00001AA0  43F8 00C3               1949mm         LEA     OAN, A1     
00001AA4  103C 000E               1950mm         MOVE.B  #14,D0          
00001AA8  4E4F                    1951mm         TRAP    #15
00001AAA  103C 0003               1952mm         MOVE.B  #3,D0          
00001AAE  4E4F                    1953mm         TRAP    #15
00001AB0                          1954mm         ENDM
00001AB0                          1955mm         PRINTRB
00001AB0  43F8 00C7               1956mm         LEA     ORB, A1     
00001AB4  103C 000E               1957mm         MOVE.B  #14,D0          
00001AB8  4E4F                    1958mm         TRAP    #15
00001ABA                          1959mm         ENDM
00001ABA                          1960mm         PRINTPI
00001ABA  43F8 00CE               1961mm         LEA     OPSTINC, A1     
00001ABE  103C 000E               1962mm         MOVE.B  #14,D0          
00001AC2  4E4F                    1963mm         TRAP    #15
00001AC4                          1964mm         ENDM
00001AC4  6000 0418               1965m         BRA     COMPLETE_84  
00001AC8                          1966m ADRREGPREDEC_84: 
00001AC8  BC3C 0001               1967m         CMP.B   #$01, D6
00001ACC  6700 003C               1968m         BEQ     ADRREGPREDECSRC_84   
00001AD0                          1969m ADRREGPREDECDEST_84:
00001AD0                          1970mm         PRINTPD  
00001AD0  43F8 00CC               1971mm         LEA     OPREDEC, A1     
00001AD4  103C 000E               1972mm         MOVE.B  #14,D0          
00001AD8  4E4F                    1973mm         TRAP    #15
00001ADA                          1974mm         ENDM
00001ADA                          1975mm         PRINTLB
00001ADA  43F8 00C5               1976mm         LEA     OLB, A1     
00001ADE  103C 000E               1977mm         MOVE.B  #14,D0          
00001AE2  4E4F                    1978mm         TRAP    #15
00001AE4                          1979mm         ENDM
00001AE4                          1980mm         PRINTANDEST D3  
00001AE4  3203                    1981mm         MOVE.W  D3, D1
00001AE6  E949                    1982mm         LSL     #$04, D1
00001AE8  E049                    1983mm         LSR     #$08, D1
00001AEA  EA49                    1984mm         LSR     #$05, D1
00001AEC  43F8 00C3               1985mm         LEA     OAN, A1     
00001AF0  103C 000E               1986mm         MOVE.B  #14,D0          
00001AF4  4E4F                    1987mm         TRAP    #15
00001AF6  103C 0003               1988mm         MOVE.B  #3,D0          
00001AFA  4E4F                    1989mm         TRAP    #15
00001AFC                          1990mm         ENDM
00001AFC                          1991mm         PRINTRB
00001AFC  43F8 00C7               1992mm         LEA     ORB, A1     
00001B00  103C 000E               1993mm         MOVE.B  #14,D0          
00001B04  4E4F                    1994mm         TRAP    #15
00001B06                          1995mm         ENDM
00001B06  6000 03D6               1996m         BRA     COMPLETE_84   
00001B0A                          1997m ADRREGPREDECSRC_84: 
00001B0A                          1998mm         PRINTPD  
00001B0A  43F8 00CC               1999mm         LEA     OPREDEC, A1     
00001B0E  103C 000E               2000mm         MOVE.B  #14,D0          
00001B12  4E4F                    2001mm         TRAP    #15
00001B14                          2002mm         ENDM
00001B14                          2003mm         PRINTLB
00001B14  43F8 00C5               2004mm         LEA     OLB, A1     
00001B18  103C 000E               2005mm         MOVE.B  #14,D0          
00001B1C  4E4F                    2006mm         TRAP    #15
00001B1E                          2007mm         ENDM
00001B1E                          2008mm         PRINTANSRC D3  
00001B1E  3203                    2009mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B20  E149                    2010mm         LSL     #$08, D1
00001B22  EB49                    2011mm         LSL     #$05, D1
00001B24  E049                    2012mm         LSR     #$08, D1
00001B26  EA49                    2013mm         LSR     #$05, D1
00001B28  43F8 00C3               2014mm         LEA     OAN, A1     
00001B2C  103C 000E               2015mm         MOVE.B  #14,D0          
00001B30  4E4F                    2016mm         TRAP    #15
00001B32  103C 0003               2017mm         MOVE.B  #3,D0          
00001B36  4E4F                    2018mm         TRAP    #15
00001B38                          2019mm         ENDM
00001B38                          2020mm         PRINTRB
00001B38  43F8 00C7               2021mm         LEA     ORB, A1     
00001B3C  103C 000E               2022mm         MOVE.B  #14,D0          
00001B40  4E4F                    2023mm         TRAP    #15
00001B42                          2024mm         ENDM
00001B42  6000 039A               2025m         BRA     COMPLETE_84
00001B46                          2026m        
00001B46                          2027m ADRABSOLUTE_84:
00001B46  BC3C 0001               2028m         CMP.B   #$01, D6
00001B4A  6600 0018               2029m         BNE     ADRABSOLUTEDST_84 
00001B4E                          2030m         
00001B4E  3A03                    2031m         MOVE.W  D3, D5
00001B50  0803 0002               2032m         BTST    #2, D3
00001B54  6600 0024               2033m         BNE     ADRIMMEDIATE_84
00001B58  0803 0000               2034m         BTST    #0, D3
00001B5C  6600 0270               2035m         BNE     ADRABSOLUTEL_84
00001B60  6000 01DA               2036m         BRA     ADRABSOLUTEW_84
00001B64                          2037m ADRABSOLUTEDST_84:
00001B64  3A03                    2038m         MOVE.W  D3, D5
00001B66  0803 000B               2039m         BTST    #$B, D3
00001B6A  6600 000E               2040m         BNE     ADRIMMEDIATE_84
00001B6E  0803 0009               2041m         BTST    #$09, D3
00001B72  6600 025A               2042m         BNE     ADRABSOLUTEL_84
00001B76  6000 01C4               2043m         BRA     ADRABSOLUTEW_84
00001B7A                          2044m ADRIMMEDIATE_84:
00001B7A  BE3C 0001               2045m         CMP.B   #1, D7
00001B7E  6700 009E               2046m         BEQ     ADRIMMEDIATEL_84
00001B82                          2047m ADRIMMEDIATEW_84:
00001B82  361A                    2048m         MOVE.W  (A2)+, D3
00001B84                          2049mm         PRINTHASH
00001B84  103C 0006               2050mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B88  323C 0023               2051mm         MOVE.W  #35, D1     ; AN = SIGN
00001B8C  4E4F                    2052mm         TRAP    #15         ; OUTPUT = SIGN
00001B8E                          2053mm         ENDM
00001B8E                          2054mm         PRINTSIGN
00001B8E  103C 0006               2055mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B92  323C 0024               2056mm         MOVE.W  #36, D1     ; AN = SIGN
00001B96  4E4F                    2057mm         TRAP    #15         ; OUTPUT = SIGN
00001B98                          2058mm         ENDM
00001B98                          2059mm         ADROUT
00001B98  3212                    2060mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001B9A  E049                    2061mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001B9C  E849                    2062mm         LSR.W   #4, D1      
00001B9E                          2063mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001B9E  0C01 0009               2064mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BA2  6E00 000A               2065mmm         BGT     ALPHA_114
00001BA6  0601 0030               2066mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BAA  6000 0006               2067mmm         BRA     DONE_114
00001BAE  0601 0037               2068mmm ALPHA_114: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BB2  4E71                    2069mmm DONE_114: NOP
00001BB4                          2070mmm         ENDM
00001BB4  4E4F                    2071mm         TRAP    #15         ; EXECUTE OUTPUT
00001BB6                          2072mm         
00001BB6  3212                    2073mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BB8  E949                    2074mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001BBA  E049                    2075mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BBC  E849                    2076mm         LSR.W   #4, D1      
00001BBE                          2077mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BBE  0C01 0009               2078mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BC2  6E00 000A               2079mmm         BGT     ALPHA_115
00001BC6  0601 0030               2080mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BCA  6000 0006               2081mmm         BRA     DONE_115
00001BCE  0601 0037               2082mmm ALPHA_115: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BD2  4E71                    2083mmm DONE_115: NOP
00001BD4                          2084mmm         ENDM
00001BD4  4E4F                    2085mm         TRAP    #15         ; EXECUTE OUTPUT
00001BD6                          2086mm         
00001BD6  3212                    2087mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BD8  E149                    2088mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BDA  E049                    2089mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BDC  E849                    2090mm         LSR.W   #4, D1      
00001BDE                          2091mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BDE  0C01 0009               2092mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BE2  6E00 000A               2093mmm         BGT     ALPHA_116
00001BE6  0601 0030               2094mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BEA  6000 0006               2095mmm         BRA     DONE_116
00001BEE  0601 0037               2096mmm ALPHA_116: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BF2  4E71                    2097mmm DONE_116: NOP
00001BF4                          2098mmm         ENDM
00001BF4  4E4F                    2099mm         TRAP    #15         ; EXECUTE OUTPUT
00001BF6                          2100mm         
00001BF6  3212                    2101mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BF8  E149                    2102mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BFA  E949                    2103mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001BFC  E049                    2104mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BFE  E849                    2105mm         LSR.W   #4, D1      
00001C00                          2106mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C00  0C01 0009               2107mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C04  6E00 000A               2108mmm         BGT     ALPHA_117
00001C08  0601 0030               2109mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C0C  6000 0006               2110mmm         BRA     DONE_117
00001C10  0601 0037               2111mmm ALPHA_117: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C14  4E71                    2112mmm DONE_117: NOP
00001C16                          2113mmm         ENDM
00001C16  4E4F                    2114mm         TRAP    #15         ; EXECUTE OUTPUT       
00001C18                          2115mm         ENDM 
00001C18  3605                    2116m         MOVE.W  D5, D3
00001C1A  6000 02C2               2117m         BRA     COMPLETE_84
00001C1E                          2118m ADRIMMEDIATEL_84:
00001C1E  361A                    2119m         MOVE.W  (A2)+, D3
00001C20                          2120mm         PRINTHASH
00001C20  103C 0006               2121mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C24  323C 0023               2122mm         MOVE.W  #35, D1     ; AN = SIGN
00001C28  4E4F                    2123mm         TRAP    #15         ; OUTPUT = SIGN
00001C2A                          2124mm         ENDM
00001C2A                          2125mm         PRINTSIGN
00001C2A  103C 0006               2126mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C2E  323C 0024               2127mm         MOVE.W  #36, D1     ; AN = SIGN
00001C32  4E4F                    2128mm         TRAP    #15         ; OUTPUT = SIGN
00001C34                          2129mm         ENDM
00001C34                          2130mm         ADROUT 
00001C34  3212                    2131mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C36  E049                    2132mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C38  E849                    2133mm         LSR.W   #4, D1      
00001C3A                          2134mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C3A  0C01 0009               2135mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C3E  6E00 000A               2136mmm         BGT     ALPHA_121
00001C42  0601 0030               2137mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C46  6000 0006               2138mmm         BRA     DONE_121
00001C4A  0601 0037               2139mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C4E  4E71                    2140mmm DONE_121: NOP
00001C50                          2141mmm         ENDM
00001C50  4E4F                    2142mm         TRAP    #15         ; EXECUTE OUTPUT
00001C52                          2143mm         
00001C52  3212                    2144mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C54  E949                    2145mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C56  E049                    2146mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C58  E849                    2147mm         LSR.W   #4, D1      
00001C5A                          2148mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5A  0C01 0009               2149mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C5E  6E00 000A               2150mmm         BGT     ALPHA_122
00001C62  0601 0030               2151mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C66  6000 0006               2152mmm         BRA     DONE_122
00001C6A  0601 0037               2153mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C6E  4E71                    2154mmm DONE_122: NOP
00001C70                          2155mmm         ENDM
00001C70  4E4F                    2156mm         TRAP    #15         ; EXECUTE OUTPUT
00001C72                          2157mm         
00001C72  3212                    2158mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C74  E149                    2159mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C76  E049                    2160mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C78  E849                    2161mm         LSR.W   #4, D1      
00001C7A                          2162mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7A  0C01 0009               2163mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C7E  6E00 000A               2164mmm         BGT     ALPHA_123
00001C82  0601 0030               2165mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C86  6000 0006               2166mmm         BRA     DONE_123
00001C8A  0601 0037               2167mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C8E  4E71                    2168mmm DONE_123: NOP
00001C90                          2169mmm         ENDM
00001C90  4E4F                    2170mm         TRAP    #15         ; EXECUTE OUTPUT
00001C92                          2171mm         
00001C92  3212                    2172mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C94  E149                    2173mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C96  E949                    2174mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001C98  E049                    2175mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9A  E849                    2176mm         LSR.W   #4, D1      
00001C9C                          2177mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9C  0C01 0009               2178mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA0  6E00 000A               2179mmm         BGT     ALPHA_124
00001CA4  0601 0030               2180mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CA8  6000 0006               2181mmm         BRA     DONE_124
00001CAC  0601 0037               2182mmm ALPHA_124: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB0  4E71                    2183mmm DONE_124: NOP
00001CB2                          2184mmm         ENDM
00001CB2  4E4F                    2185mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CB4                          2186mm         ENDM 
00001CB4  361A                    2187m         MOVE.W  (A2)+, D3
00001CB6                          2188mm         ADROUT
00001CB6  3212                    2189mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB8  E049                    2190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBA  E849                    2191mm         LSR.W   #4, D1      
00001CBC                          2192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CBC  0C01 0009               2193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC0  6E00 000A               2194mmm         BGT     ALPHA_126
00001CC4  0601 0030               2195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CC8  6000 0006               2196mmm         BRA     DONE_126
00001CCC  0601 0037               2197mmm ALPHA_126: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD0  4E71                    2198mmm DONE_126: NOP
00001CD2                          2199mmm         ENDM
00001CD2  4E4F                    2200mm         TRAP    #15         ; EXECUTE OUTPUT
00001CD4                          2201mm         
00001CD4  3212                    2202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CD6  E949                    2203mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001CD8  E049                    2204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDA  E849                    2205mm         LSR.W   #4, D1      
00001CDC                          2206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDC  0C01 0009               2207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE0  6E00 000A               2208mmm         BGT     ALPHA_127
00001CE4  0601 0030               2209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CE8  6000 0006               2210mmm         BRA     DONE_127
00001CEC  0601 0037               2211mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF0  4E71                    2212mmm DONE_127: NOP
00001CF2                          2213mmm         ENDM
00001CF2  4E4F                    2214mm         TRAP    #15         ; EXECUTE OUTPUT
00001CF4                          2215mm         
00001CF4  3212                    2216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CF6  E149                    2217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CF8  E049                    2218mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFA  E849                    2219mm         LSR.W   #4, D1      
00001CFC                          2220mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFC  0C01 0009               2221mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D00  6E00 000A               2222mmm         BGT     ALPHA_128
00001D04  0601 0030               2223mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D08  6000 0006               2224mmm         BRA     DONE_128
00001D0C  0601 0037               2225mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D10  4E71                    2226mmm DONE_128: NOP
00001D12                          2227mmm         ENDM
00001D12  4E4F                    2228mm         TRAP    #15         ; EXECUTE OUTPUT
00001D14                          2229mm         
00001D14  3212                    2230mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D16  E149                    2231mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D18  E949                    2232mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D1A  E049                    2233mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2234mm         LSR.W   #4, D1      
00001D1E                          2235mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2236mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2237mmm         BGT     ALPHA_129
00001D26  0601 0030               2238mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2239mmm         BRA     DONE_129
00001D2E  0601 0037               2240mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2241mmm DONE_129: NOP
00001D34                          2242mmm         ENDM
00001D34  4E4F                    2243mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D36                          2244mm         ENDM 
00001D36  3605                    2245m         MOVE.W  D5, D3
00001D38  6000 01A4               2246m         BRA     COMPLETE_84 
00001D3C                          2247m ADRABSOLUTEW_84:     
00001D3C  361A                    2248m         MOVE.W  (A2)+, D3
00001D3E                          2249mm         PRINTSIGN
00001D3E  103C 0006               2250mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D42  323C 0024               2251mm         MOVE.W  #36, D1     ; AN = SIGN
00001D46  4E4F                    2252mm         TRAP    #15         ; OUTPUT = SIGN
00001D48                          2253mm         ENDM
00001D48                          2254mm         ADROUT
00001D48  3212                    2255mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D4A  E049                    2256mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D4C  E849                    2257mm         LSR.W   #4, D1      
00001D4E                          2258mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D4E  0C01 0009               2259mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D52  6E00 000A               2260mmm         BGT     ALPHA_132
00001D56  0601 0030               2261mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D5A  6000 0006               2262mmm         BRA     DONE_132
00001D5E  0601 0037               2263mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D62  4E71                    2264mmm DONE_132: NOP
00001D64                          2265mmm         ENDM
00001D64  4E4F                    2266mm         TRAP    #15         ; EXECUTE OUTPUT
00001D66                          2267mm         
00001D66  3212                    2268mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D68  E949                    2269mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D6A  E049                    2270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D6C  E849                    2271mm         LSR.W   #4, D1      
00001D6E                          2272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D6E  0C01 0009               2273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D72  6E00 000A               2274mmm         BGT     ALPHA_133
00001D76  0601 0030               2275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D7A  6000 0006               2276mmm         BRA     DONE_133
00001D7E  0601 0037               2277mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D82  4E71                    2278mmm DONE_133: NOP
00001D84                          2279mmm         ENDM
00001D84  4E4F                    2280mm         TRAP    #15         ; EXECUTE OUTPUT
00001D86                          2281mm         
00001D86  3212                    2282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D88  E149                    2283mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D8A  E049                    2284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D8C  E849                    2285mm         LSR.W   #4, D1      
00001D8E                          2286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D8E  0C01 0009               2287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D92  6E00 000A               2288mmm         BGT     ALPHA_134
00001D96  0601 0030               2289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D9A  6000 0006               2290mmm         BRA     DONE_134
00001D9E  0601 0037               2291mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DA2  4E71                    2292mmm DONE_134: NOP
00001DA4                          2293mmm         ENDM
00001DA4  4E4F                    2294mm         TRAP    #15         ; EXECUTE OUTPUT
00001DA6                          2295mm         
00001DA6  3212                    2296mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DA8  E149                    2297mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DAA  E949                    2298mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DAC  E049                    2299mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DAE  E849                    2300mm         LSR.W   #4, D1      
00001DB0                          2301mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DB0  0C01 0009               2302mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DB4  6E00 000A               2303mmm         BGT     ALPHA_135
00001DB8  0601 0030               2304mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DBC  6000 0006               2305mmm         BRA     DONE_135
00001DC0  0601 0037               2306mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DC4  4E71                    2307mmm DONE_135: NOP
00001DC6                          2308mmm         ENDM
00001DC6  4E4F                    2309mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DC8                          2310mm         ENDM 
00001DC8  3605                    2311m         MOVE.W  D5, D3
00001DCA  6000 0112               2312m         BRA     COMPLETE_84  
00001DCE                          2313m ADRABSOLUTEL_84:  
00001DCE  361A                    2314m         MOVE.W  (A2)+, D3
00001DD0                          2315mm         PRINTSIGN
00001DD0  103C 0006               2316mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001DD4  323C 0024               2317mm         MOVE.W  #36, D1     ; AN = SIGN
00001DD8  4E4F                    2318mm         TRAP    #15         ; OUTPUT = SIGN
00001DDA                          2319mm         ENDM
00001DDA                          2320mm         ADROUT 
00001DDA  3212                    2321mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDC  E049                    2322mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DDE  E849                    2323mm         LSR.W   #4, D1      
00001DE0                          2324mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE0  0C01 0009               2325mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DE4  6E00 000A               2326mmm         BGT     ALPHA_138
00001DE8  0601 0030               2327mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DEC  6000 0006               2328mmm         BRA     DONE_138
00001DF0  0601 0037               2329mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DF4  4E71                    2330mmm DONE_138: NOP
00001DF6                          2331mmm         ENDM
00001DF6  4E4F                    2332mm         TRAP    #15         ; EXECUTE OUTPUT
00001DF8                          2333mm         
00001DF8  3212                    2334mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DFA  E949                    2335mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DFC  E049                    2336mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DFE  E849                    2337mm         LSR.W   #4, D1      
00001E00                          2338mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E00  0C01 0009               2339mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E04  6E00 000A               2340mmm         BGT     ALPHA_139
00001E08  0601 0030               2341mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E0C  6000 0006               2342mmm         BRA     DONE_139
00001E10  0601 0037               2343mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E14  4E71                    2344mmm DONE_139: NOP
00001E16                          2345mmm         ENDM
00001E16  4E4F                    2346mm         TRAP    #15         ; EXECUTE OUTPUT
00001E18                          2347mm         
00001E18  3212                    2348mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E1A  E149                    2349mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E1C  E049                    2350mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E1E  E849                    2351mm         LSR.W   #4, D1      
00001E20                          2352mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E20  0C01 0009               2353mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E24  6E00 000A               2354mmm         BGT     ALPHA_140
00001E28  0601 0030               2355mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E2C  6000 0006               2356mmm         BRA     DONE_140
00001E30  0601 0037               2357mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E34  4E71                    2358mmm DONE_140: NOP
00001E36                          2359mmm         ENDM
00001E36  4E4F                    2360mm         TRAP    #15         ; EXECUTE OUTPUT
00001E38                          2361mm         
00001E38  3212                    2362mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E3A  E149                    2363mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E3C  E949                    2364mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E3E  E049                    2365mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E40  E849                    2366mm         LSR.W   #4, D1      
00001E42                          2367mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E42  0C01 0009               2368mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E46  6E00 000A               2369mmm         BGT     ALPHA_141
00001E4A  0601 0030               2370mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E4E  6000 0006               2371mmm         BRA     DONE_141
00001E52  0601 0037               2372mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E56  4E71                    2373mmm DONE_141: NOP
00001E58                          2374mmm         ENDM
00001E58  4E4F                    2375mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E5A                          2376mm         ENDM 
00001E5A  361A                    2377m         MOVE.W  (A2)+, D3
00001E5C                          2378mm         ADROUT
00001E5C  3212                    2379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E5E  E049                    2380mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E60  E849                    2381mm         LSR.W   #4, D1      
00001E62                          2382mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E62  0C01 0009               2383mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E66  6E00 000A               2384mmm         BGT     ALPHA_143
00001E6A  0601 0030               2385mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E6E  6000 0006               2386mmm         BRA     DONE_143
00001E72  0601 0037               2387mmm ALPHA_143: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E76  4E71                    2388mmm DONE_143: NOP
00001E78                          2389mmm         ENDM
00001E78  4E4F                    2390mm         TRAP    #15         ; EXECUTE OUTPUT
00001E7A                          2391mm         
00001E7A  3212                    2392mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E7C  E949                    2393mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E7E  E049                    2394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E80  E849                    2395mm         LSR.W   #4, D1      
00001E82                          2396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E82  0C01 0009               2397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E86  6E00 000A               2398mmm         BGT     ALPHA_144
00001E8A  0601 0030               2399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E8E  6000 0006               2400mmm         BRA     DONE_144
00001E92  0601 0037               2401mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E96  4E71                    2402mmm DONE_144: NOP
00001E98                          2403mmm         ENDM
00001E98  4E4F                    2404mm         TRAP    #15         ; EXECUTE OUTPUT
00001E9A                          2405mm         
00001E9A  3212                    2406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E9C  E149                    2407mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E9E  E049                    2408mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EA0  E849                    2409mm         LSR.W   #4, D1      
00001EA2                          2410mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EA2  0C01 0009               2411mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EA6  6E00 000A               2412mmm         BGT     ALPHA_145
00001EAA  0601 0030               2413mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EAE  6000 0006               2414mmm         BRA     DONE_145
00001EB2  0601 0037               2415mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EB6  4E71                    2416mmm DONE_145: NOP
00001EB8                          2417mmm         ENDM
00001EB8  4E4F                    2418mm         TRAP    #15         ; EXECUTE OUTPUT
00001EBA                          2419mm         
00001EBA  3212                    2420mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EBC  E149                    2421mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EBE  E949                    2422mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001EC0  E049                    2423mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EC2  E849                    2424mm         LSR.W   #4, D1      
00001EC4                          2425mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EC4  0C01 0009               2426mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EC8  6E00 000A               2427mmm         BGT     ALPHA_146
00001ECC  0601 0030               2428mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001ED0  6000 0006               2429mmm         BRA     DONE_146
00001ED4  0601 0037               2430mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001ED8  4E71                    2431mmm DONE_146: NOP
00001EDA                          2432mmm         ENDM
00001EDA  4E4F                    2433mm         TRAP    #15         ; EXECUTE OUTPUT       
00001EDC                          2434mm         ENDM 
00001EDC  3605                    2435m         MOVE.W  D5, D3
00001EDE                          2436m 
00001EDE                          2437m COMPLETE_84:  ; OPCODE HAS BEEN VERIFIED
00001EDE                          2438m         ENDM
00001EDE  4E75                    2439          RTS                 ; Return from decodeMOVE subroutine
00001EE0                          2440  
00001EE0                          2441  
00001EE0                          2442  ; ------------------------------------------------------------
00001EE0                          2443  ; 3. "decodeMOVEM" subroutine
00001EE0                          2444  ; AUTHOR
00001EE0                          2445  ;
00001EE0                          2446  ; TODO: DESCRIPTION
00001EE0                          2447  ; ------------------------------------------------------------
00001EE0                          2448  decodeMOVEM:
00001EE0                          2449m         verifyOpcode    pMOVEM, (A2)
00001EE0  43F8 00F6               2450m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001EE4  3612                    2451m         MOVE.W  (A2), D3      ; INPUT VALUE
00001EE6  123C 000F               2452m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001EEA                          2453m         
00001EEA                          2454m LOOP_147: 
00001EEA  0C11 0030               2455m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001EEE  6700 000E               2456m         BEQ     CHECKFOR0_147
00001EF2  0C11 0031               2457m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001EF6  6700 0010               2458m         BEQ     CHECKFOR1_147
00001EFA  6000 0012               2459m         BRA     NEXT_147      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001EFE                          2460m         
00001EFE                          2461m CHECKFOR0_147: 
00001EFE  0303                    2462m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F00  6600 4CD4               2463m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F04  6000 0008               2464m         BRA     NEXT_147
00001F08                          2465m 
00001F08                          2466m CHECKFOR1_147:
00001F08  0303                    2467m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F0A  6700 4CCA               2468m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F0E                          2469m 
00001F0E                          2470m NEXT_147: 
00001F0E  B23C 0000               2471m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F12  6700 0008               2472m         BEQ     COMPLETE_147  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F16  5301                    2473m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F18  1819                    2474m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F1A  60CE                    2475m         BRA     LOOP_147      ; BEGIN LOOP AGAIN
00001F1C                          2476m 
00001F1C                          2477m COMPLETE_147:  ; OPCODE HAS BEEN VERIFIED
00001F1C                          2478m         ENDM
00001F1C                          2479          ; put code here
00001F1C  4E75                    2480          RTS                 ; Return from decodeMOVEM subroutine
00001F1E                          2481  
00001F1E                          2482  
00001F1E                          2483  ; ------------------------------------------------------------
00001F1E                          2484  ; 4. "decodeADD" subroutine
00001F1E                          2485  ; AUTHOR
00001F1E                          2486  ;
00001F1E                          2487  ; TODO: DESCRIPTION
00001F1E                          2488  ; ------------------------------------------------------------
00001F1E                          2489  decodeADD:
00001F1E                          2490m         verifyOpcode    pADD, (A2)
00001F1E  43F8 0107               2491m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001F22  3612                    2492m         MOVE.W  (A2), D3      ; INPUT VALUE
00001F24  123C 000F               2493m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001F28                          2494m         
00001F28                          2495m LOOP_148: 
00001F28  0C11 0030               2496m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001F2C  6700 000E               2497m         BEQ     CHECKFOR0_148
00001F30  0C11 0031               2498m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F34  6700 0010               2499m         BEQ     CHECKFOR1_148
00001F38  6000 0012               2500m         BRA     NEXT_148      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001F3C                          2501m         
00001F3C                          2502m CHECKFOR0_148: 
00001F3C  0303                    2503m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F3E  6600 4C96               2504m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F42  6000 0008               2505m         BRA     NEXT_148
00001F46                          2506m 
00001F46                          2507m CHECKFOR1_148:
00001F46  0303                    2508m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F48  6700 4C8C               2509m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F4C                          2510m 
00001F4C                          2511m NEXT_148: 
00001F4C  B23C 0000               2512m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F50  6700 0008               2513m         BEQ     COMPLETE_148  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F54  5301                    2514m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F56  1819                    2515m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F58  60CE                    2516m         BRA     LOOP_148      ; BEGIN LOOP AGAIN
00001F5A                          2517m 
00001F5A                          2518m COMPLETE_148:  ; OPCODE HAS BEEN VERIFIED
00001F5A                          2519m         ENDM
00001F5A  43F8 006F               2520          LEA     oADD, A1     
00001F5E  103C 000E               2521          MOVE.B  #14,D0          
00001F62  4E4F                    2522          TRAP    #15
00001F64                          2523m         printOpMode     (A2)
00001F64  3612                    2524m         MOVE.W  (A2), D3      
00001F66  123C 0008               2525m         MOVE.B  #8, D1    
00001F6A  4246                    2526m         CLR     D6
00001F6C                          2527m CHECKFORDESTDN_149: 
00001F6C  0303                    2528m         BTST    D1, D3      
00001F6E  6600 0048               2529m         BNE     CHECKFORSRCDN_149
00001F72  4EB9 00002042           2530m         JSR     NEXT_149
00001F78  1C3C 0001               2531m         MOVE.B  #$1, D6
00001F7C  0303                    2532m         BTST    D1, D3      
00001F7E  6700 0010               2533m         BEQ     DESTDNW_149
00001F82                          2534m DESTDNL_149:        
00001F82  43F8 00BD               2535m         LEA     OLSIZE, A1     
00001F86  103C 000E               2536m         MOVE.B  #14,D0          
00001F8A  4E4F                    2537m         TRAP    #15
00001F8C  6000 00B8               2538m         BRA     COMPLETE_149 
00001F90                          2539m DESTDNW_149: 
00001F90  4EB9 00002042           2540m         JSR     NEXT_149
00001F96  0303                    2541m         BTST    D1, D3      
00001F98  6700 0010               2542m         BEQ     DESTDNB_149
00001F9C  43F8 00B9               2543m         LEA     OWSIZE, A1     
00001FA0  103C 000E               2544m         MOVE.B  #14,D0          
00001FA4  4E4F                    2545m         TRAP    #15
00001FA6  6000 009E               2546m         BRA     COMPLETE_149 
00001FAA                          2547m DESTDNB_149: 
00001FAA  43F8 00B5               2548m         LEA     OBSIZE, A1     
00001FAE  103C 000E               2549m         MOVE.B  #14,D0          
00001FB2  4E4F                    2550m         TRAP    #15
00001FB4  6000 0090               2551m         BRA     COMPLETE_149 
00001FB8                          2552m CHECKFORSRCDN_149: 
00001FB8  4EB9 00002042           2553m         JSR     NEXT_149
00001FBE  0303                    2554m         BTST    D1, D3      
00001FC0  6700 0028               2555m         BEQ     SRCDNW_149
00001FC4                          2556m SRCDNL_149:        
00001FC4  43F8 00BD               2557m         LEA     OLSIZE, A1     
00001FC8  103C 000E               2558m         MOVE.B  #14,D0          
00001FCC  4E4F                    2559m         TRAP    #15
00001FCE                          2560mm         PRINTDNDEST D3
00001FCE  3203                    2561mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001FD0  E949                    2562mm         LSL     #$04, D1
00001FD2  E049                    2563mm         LSR     #$08, D1
00001FD4  EA49                    2564mm         LSR     #$05, D1
00001FD6  43F8 00C1               2565mm         LEA     ODN, A1     
00001FDA  103C 000E               2566mm         MOVE.B  #14,D0          
00001FDE  4E4F                    2567mm         TRAP    #15
00001FE0  103C 0003               2568mm         MOVE.B  #3,D0          
00001FE4  4E4F                    2569mm         TRAP    #15
00001FE6                          2570mm         ENDM
00001FE6  6000 005E               2571m         BRA     COMPLETE_149 
00001FEA                          2572m SRCDNW_149:
00001FEA  4EB9 00002042           2573m         JSR     NEXT_149
00001FF0  0303                    2574m         BTST    D1, D3     
00001FF2  6700 0028               2575m         BEQ     SRCDNB_149
00001FF6  43F8 00B9               2576m         LEA     OWSIZE, A1     
00001FFA  103C 000E               2577m         MOVE.B  #14,D0          
00001FFE  4E4F                    2578m         TRAP    #15
00002000                          2579mm         PRINTDNDEST D3
00002000  3203                    2580mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002002  E949                    2581mm         LSL     #$04, D1
00002004  E049                    2582mm         LSR     #$08, D1
00002006  EA49                    2583mm         LSR     #$05, D1
00002008  43F8 00C1               2584mm         LEA     ODN, A1     
0000200C  103C 000E               2585mm         MOVE.B  #14,D0          
00002010  4E4F                    2586mm         TRAP    #15
00002012  103C 0003               2587mm         MOVE.B  #3,D0          
00002016  4E4F                    2588mm         TRAP    #15
00002018                          2589mm         ENDM
00002018  6000 002C               2590m         BRA     COMPLETE_149 
0000201C                          2591m SRCDNB_149: 
0000201C  43F8 00B5               2592m         LEA     OBSIZE, A1     
00002020  103C 000E               2593m         MOVE.B  #14,D0          
00002024  4E4F                    2594m         TRAP    #15
00002026                          2595mm         PRINTDNDEST D3
00002026  3203                    2596mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002028  E949                    2597mm         LSL     #$04, D1
0000202A  E049                    2598mm         LSR     #$08, D1
0000202C  EA49                    2599mm         LSR     #$05, D1
0000202E  43F8 00C1               2600mm         LEA     ODN, A1     
00002032  103C 000E               2601mm         MOVE.B  #14,D0          
00002036  4E4F                    2602mm         TRAP    #15
00002038  103C 0003               2603mm         MOVE.B  #3,D0          
0000203C  4E4F                    2604mm         TRAP    #15
0000203E                          2605mm         ENDM
0000203E  6000 0006               2606m         BRA     COMPLETE_149 
00002042                          2607m 
00002042                          2608m NEXT_149:
00002042  5301                    2609m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002044  4E75                    2610m         RTS                
00002046                          2611m 
00002046                          2612m COMPLETE_149:  ; OPCODE HAS BEEN VERIFIED
00002046                          2613m         ENDM
00002046  BC3C 0001               2614          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
0000204A  6700 05E0               2615          BEQ     decodeAddDestOp
0000204E                          2616m         printComma
0000204E  43F8 00C9               2617m         LEA     OCOMMA, A1     
00002052  103C 000E               2618m         MOVE.B  #14,D0          
00002056  4E4F                    2619m         TRAP    #15
00002058                          2620m         ENDM
00002058                          2621m         prepareAdrMode  #$0, (A2)
00002058  3C3C 0000               2622m         MOVE.W  #$0, D6      ; INPUT VALUE
0000205C  3212                    2623m         MOVE.W  (A2), D1
0000205E  BC3C 0001               2624m         CMP.B   #$01, D6
00002062  6700 000C               2625m         BEQ     ADRSOURCE_154    
00002066                          2626m ADRDEST_154:
00002066  EF49                    2627m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002068  E049                    2628m         LSR     #$08, D1
0000206A  EA49                    2629m         LSR     #$05, D1
0000206C  6000 000A               2630m         BRA     COMPLETE_154 
00002070                          2631m ADRSOURCE_154:                
00002070  E149                    2632m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002072  E549                    2633m         LSL     #$02, D1
00002074  E049                    2634m         LSR     #$08, D1
00002076  EA49                    2635m         LSR     #$05, D1
00002078                          2636m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
00002078                          2637m         ENDM        
00002078                          2638m         decodeAdrMode   (A2), D1
00002078  3612                    2639m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000207A  3201                    2640m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000207C                          2641m 
0000207C  B23C 0001               2642m         CMP.B   #$01, D1
00002080  6700 0066               2643m         BEQ     ADRREGDIRECT_155    
00002084  B23C 0002               2644m         CMP.B   #$02, D1
00002088  6700 00A0               2645m         BEQ     ADRREGINDIRECT_155  
0000208C  B23C 0003               2646m         CMP.B   #$03, D1
00002090  6700 0102               2647m         BEQ     ADRREGPOSTINC_155  
00002094  B23C 0004               2648m         CMP.B   #$04, D1
00002098  6700 0178               2649m         BEQ     ADRREGPREDEC_155
0000209C  B23C 0007               2650m         CMP.B   #$07, D1
000020A0  6700 01EE               2651m         BEQ     ADRABSOLUTE_155    
000020A4                          2652m         
000020A4                          2653m DATAREGDIRECT_155: 
000020A4  BC3C 0001               2654m         CMP.B   #$01, D6
000020A8  6700 001E               2655m         BEQ     DATAREGDIRECTSRC_155   
000020AC                          2656m DATAREGDIRECTDEST_155: 
000020AC                          2657mm         PRINTDNDEST D3 
000020AC  3203                    2658mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020AE  E949                    2659mm         LSL     #$04, D1
000020B0  E049                    2660mm         LSR     #$08, D1
000020B2  EA49                    2661mm         LSR     #$05, D1
000020B4  43F8 00C1               2662mm         LEA     ODN, A1     
000020B8  103C 000E               2663mm         MOVE.B  #14,D0          
000020BC  4E4F                    2664mm         TRAP    #15
000020BE  103C 0003               2665mm         MOVE.B  #3,D0          
000020C2  4E4F                    2666mm         TRAP    #15
000020C4                          2667mm         ENDM
000020C4  6000 0562               2668m         BRA     COMPLETE_155 
000020C8                          2669m DATAREGDIRECTSRC_155: 
000020C8                          2670mm         PRINTDNSRC D3 
000020C8  4281                    2671mm         CLR.L   D1
000020CA  3203                    2672mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000020CC  E149                    2673mm         LSL     #$08, D1
000020CE  EB49                    2674mm         LSL     #$05, D1
000020D0  E049                    2675mm         LSR     #$08, D1
000020D2  EA49                    2676mm         LSR     #$05, D1
000020D4  43F8 00C1               2677mm         LEA     ODN, A1     
000020D8  103C 000E               2678mm         MOVE.B  #14,D0          
000020DC  4E4F                    2679mm         TRAP    #15
000020DE  103C 0003               2680mm         MOVE.B  #3,D0          
000020E2  4E4F                    2681mm         TRAP    #15
000020E4                          2682mm         ENDM
000020E4  6000 0542               2683m         BRA     COMPLETE_155   
000020E8                          2684m         
000020E8                          2685m ADRREGDIRECT_155: 
000020E8  BC3C 0001               2686m         CMP.B   #$01, D6
000020EC  6700 001E               2687m         BEQ     ADRREGDIRECTSRC_155   
000020F0                          2688m ADRREGDIRECTDEST_155:
000020F0                          2689mm         PRINTANDEST D3
000020F0  3203                    2690mm         MOVE.W  D3, D1
000020F2  E949                    2691mm         LSL     #$04, D1
000020F4  E049                    2692mm         LSR     #$08, D1
000020F6  EA49                    2693mm         LSR     #$05, D1
000020F8  43F8 00C3               2694mm         LEA     OAN, A1     
000020FC  103C 000E               2695mm         MOVE.B  #14,D0          
00002100  4E4F                    2696mm         TRAP    #15
00002102  103C 0003               2697mm         MOVE.B  #3,D0          
00002106  4E4F                    2698mm         TRAP    #15
00002108                          2699mm         ENDM
00002108  6000 051E               2700m         BRA     COMPLETE_155   
0000210C                          2701m ADRREGDIRECTSRC_155:
0000210C                          2702mm         PRINTANSRC D3
0000210C  3203                    2703mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000210E  E149                    2704mm         LSL     #$08, D1
00002110  EB49                    2705mm         LSL     #$05, D1
00002112  E049                    2706mm         LSR     #$08, D1
00002114  EA49                    2707mm         LSR     #$05, D1
00002116  43F8 00C3               2708mm         LEA     OAN, A1     
0000211A  103C 000E               2709mm         MOVE.B  #14,D0          
0000211E  4E4F                    2710mm         TRAP    #15
00002120  103C 0003               2711mm         MOVE.B  #3,D0          
00002124  4E4F                    2712mm         TRAP    #15
00002126                          2713mm         ENDM
00002126  6000 0500               2714m         BRA     COMPLETE_155   
0000212A                          2715m        
0000212A                          2716m ADRREGINDIRECT_155:   
0000212A  BC3C 0001               2717m         CMP.B   #$01, D6
0000212E  6700 0032               2718m         BEQ     ADRREGINDIRECTSRC_155   
00002132                          2719m ADRREGINDIRECTDEST_155:
00002132                          2720mm         PRINTLB
00002132  43F8 00C5               2721mm         LEA     OLB, A1     
00002136  103C 000E               2722mm         MOVE.B  #14,D0          
0000213A  4E4F                    2723mm         TRAP    #15
0000213C                          2724mm         ENDM
0000213C                          2725mm         PRINTANDEST D3  
0000213C  3203                    2726mm         MOVE.W  D3, D1
0000213E  E949                    2727mm         LSL     #$04, D1
00002140  E049                    2728mm         LSR     #$08, D1
00002142  EA49                    2729mm         LSR     #$05, D1
00002144  43F8 00C3               2730mm         LEA     OAN, A1     
00002148  103C 000E               2731mm         MOVE.B  #14,D0          
0000214C  4E4F                    2732mm         TRAP    #15
0000214E  103C 0003               2733mm         MOVE.B  #3,D0          
00002152  4E4F                    2734mm         TRAP    #15
00002154                          2735mm         ENDM
00002154                          2736mm         PRINTRB
00002154  43F8 00C7               2737mm         LEA     ORB, A1     
00002158  103C 000E               2738mm         MOVE.B  #14,D0          
0000215C  4E4F                    2739mm         TRAP    #15
0000215E                          2740mm         ENDM
0000215E  6000 04C8               2741m         BRA     COMPLETE_155     
00002162                          2742m ADRREGINDIRECTSRC_155:   
00002162                          2743mm         PRINTLB
00002162  43F8 00C5               2744mm         LEA     OLB, A1     
00002166  103C 000E               2745mm         MOVE.B  #14,D0          
0000216A  4E4F                    2746mm         TRAP    #15
0000216C                          2747mm         ENDM
0000216C                          2748mm         PRINTANSRC D3  
0000216C  3203                    2749mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000216E  E149                    2750mm         LSL     #$08, D1
00002170  EB49                    2751mm         LSL     #$05, D1
00002172  E049                    2752mm         LSR     #$08, D1
00002174  EA49                    2753mm         LSR     #$05, D1
00002176  43F8 00C3               2754mm         LEA     OAN, A1     
0000217A  103C 000E               2755mm         MOVE.B  #14,D0          
0000217E  4E4F                    2756mm         TRAP    #15
00002180  103C 0003               2757mm         MOVE.B  #3,D0          
00002184  4E4F                    2758mm         TRAP    #15
00002186                          2759mm         ENDM
00002186                          2760mm         PRINTRB
00002186  43F8 00C7               2761mm         LEA     ORB, A1     
0000218A  103C 000E               2762mm         MOVE.B  #14,D0          
0000218E  4E4F                    2763mm         TRAP    #15
00002190                          2764mm         ENDM
00002190  6000 0496               2765m         BRA     COMPLETE_155   
00002194                          2766m         
00002194                          2767m ADRREGPOSTINC_155:   
00002194  BC3C 0001               2768m         CMP.B   #$01, D6
00002198  6700 003C               2769m         BEQ     ADRREGPOSTINCSRC_155   
0000219C                          2770m ADRREGPOSTINCDEST_155: 
0000219C                          2771mm         PRINTLB
0000219C  43F8 00C5               2772mm         LEA     OLB, A1     
000021A0  103C 000E               2773mm         MOVE.B  #14,D0          
000021A4  4E4F                    2774mm         TRAP    #15
000021A6                          2775mm         ENDM
000021A6                          2776mm         PRINTANDEST D3  
000021A6  3203                    2777mm         MOVE.W  D3, D1
000021A8  E949                    2778mm         LSL     #$04, D1
000021AA  E049                    2779mm         LSR     #$08, D1
000021AC  EA49                    2780mm         LSR     #$05, D1
000021AE  43F8 00C3               2781mm         LEA     OAN, A1     
000021B2  103C 000E               2782mm         MOVE.B  #14,D0          
000021B6  4E4F                    2783mm         TRAP    #15
000021B8  103C 0003               2784mm         MOVE.B  #3,D0          
000021BC  4E4F                    2785mm         TRAP    #15
000021BE                          2786mm         ENDM
000021BE                          2787mm         PRINTRB
000021BE  43F8 00C7               2788mm         LEA     ORB, A1     
000021C2  103C 000E               2789mm         MOVE.B  #14,D0          
000021C6  4E4F                    2790mm         TRAP    #15
000021C8                          2791mm         ENDM
000021C8                          2792mm         PRINTPI
000021C8  43F8 00CE               2793mm         LEA     OPSTINC, A1     
000021CC  103C 000E               2794mm         MOVE.B  #14,D0          
000021D0  4E4F                    2795mm         TRAP    #15
000021D2                          2796mm         ENDM
000021D2  6000 0454               2797m         BRA     COMPLETE_155  
000021D6                          2798m ADRREGPOSTINCSRC_155:           
000021D6                          2799mm         PRINTLB
000021D6  43F8 00C5               2800mm         LEA     OLB, A1     
000021DA  103C 000E               2801mm         MOVE.B  #14,D0          
000021DE  4E4F                    2802mm         TRAP    #15
000021E0                          2803mm         ENDM
000021E0                          2804mm         PRINTANSRC D3  
000021E0  3203                    2805mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021E2  E149                    2806mm         LSL     #$08, D1
000021E4  EB49                    2807mm         LSL     #$05, D1
000021E6  E049                    2808mm         LSR     #$08, D1
000021E8  EA49                    2809mm         LSR     #$05, D1
000021EA  43F8 00C3               2810mm         LEA     OAN, A1     
000021EE  103C 000E               2811mm         MOVE.B  #14,D0          
000021F2  4E4F                    2812mm         TRAP    #15
000021F4  103C 0003               2813mm         MOVE.B  #3,D0          
000021F8  4E4F                    2814mm         TRAP    #15
000021FA                          2815mm         ENDM
000021FA                          2816mm         PRINTRB
000021FA  43F8 00C7               2817mm         LEA     ORB, A1     
000021FE  103C 000E               2818mm         MOVE.B  #14,D0          
00002202  4E4F                    2819mm         TRAP    #15
00002204                          2820mm         ENDM
00002204                          2821mm         PRINTPI
00002204  43F8 00CE               2822mm         LEA     OPSTINC, A1     
00002208  103C 000E               2823mm         MOVE.B  #14,D0          
0000220C  4E4F                    2824mm         TRAP    #15
0000220E                          2825mm         ENDM
0000220E  6000 0418               2826m         BRA     COMPLETE_155  
00002212                          2827m ADRREGPREDEC_155: 
00002212  BC3C 0001               2828m         CMP.B   #$01, D6
00002216  6700 003C               2829m         BEQ     ADRREGPREDECSRC_155   
0000221A                          2830m ADRREGPREDECDEST_155:
0000221A                          2831mm         PRINTPD  
0000221A  43F8 00CC               2832mm         LEA     OPREDEC, A1     
0000221E  103C 000E               2833mm         MOVE.B  #14,D0          
00002222  4E4F                    2834mm         TRAP    #15
00002224                          2835mm         ENDM
00002224                          2836mm         PRINTLB
00002224  43F8 00C5               2837mm         LEA     OLB, A1     
00002228  103C 000E               2838mm         MOVE.B  #14,D0          
0000222C  4E4F                    2839mm         TRAP    #15
0000222E                          2840mm         ENDM
0000222E                          2841mm         PRINTANDEST D3  
0000222E  3203                    2842mm         MOVE.W  D3, D1
00002230  E949                    2843mm         LSL     #$04, D1
00002232  E049                    2844mm         LSR     #$08, D1
00002234  EA49                    2845mm         LSR     #$05, D1
00002236  43F8 00C3               2846mm         LEA     OAN, A1     
0000223A  103C 000E               2847mm         MOVE.B  #14,D0          
0000223E  4E4F                    2848mm         TRAP    #15
00002240  103C 0003               2849mm         MOVE.B  #3,D0          
00002244  4E4F                    2850mm         TRAP    #15
00002246                          2851mm         ENDM
00002246                          2852mm         PRINTRB
00002246  43F8 00C7               2853mm         LEA     ORB, A1     
0000224A  103C 000E               2854mm         MOVE.B  #14,D0          
0000224E  4E4F                    2855mm         TRAP    #15
00002250                          2856mm         ENDM
00002250  6000 03D6               2857m         BRA     COMPLETE_155   
00002254                          2858m ADRREGPREDECSRC_155: 
00002254                          2859mm         PRINTPD  
00002254  43F8 00CC               2860mm         LEA     OPREDEC, A1     
00002258  103C 000E               2861mm         MOVE.B  #14,D0          
0000225C  4E4F                    2862mm         TRAP    #15
0000225E                          2863mm         ENDM
0000225E                          2864mm         PRINTLB
0000225E  43F8 00C5               2865mm         LEA     OLB, A1     
00002262  103C 000E               2866mm         MOVE.B  #14,D0          
00002266  4E4F                    2867mm         TRAP    #15
00002268                          2868mm         ENDM
00002268                          2869mm         PRINTANSRC D3  
00002268  3203                    2870mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000226A  E149                    2871mm         LSL     #$08, D1
0000226C  EB49                    2872mm         LSL     #$05, D1
0000226E  E049                    2873mm         LSR     #$08, D1
00002270  EA49                    2874mm         LSR     #$05, D1
00002272  43F8 00C3               2875mm         LEA     OAN, A1     
00002276  103C 000E               2876mm         MOVE.B  #14,D0          
0000227A  4E4F                    2877mm         TRAP    #15
0000227C  103C 0003               2878mm         MOVE.B  #3,D0          
00002280  4E4F                    2879mm         TRAP    #15
00002282                          2880mm         ENDM
00002282                          2881mm         PRINTRB
00002282  43F8 00C7               2882mm         LEA     ORB, A1     
00002286  103C 000E               2883mm         MOVE.B  #14,D0          
0000228A  4E4F                    2884mm         TRAP    #15
0000228C                          2885mm         ENDM
0000228C  6000 039A               2886m         BRA     COMPLETE_155
00002290                          2887m        
00002290                          2888m ADRABSOLUTE_155:
00002290  BC3C 0001               2889m         CMP.B   #$01, D6
00002294  6600 0018               2890m         BNE     ADRABSOLUTEDST_155 
00002298                          2891m         
00002298  3A03                    2892m         MOVE.W  D3, D5
0000229A  0803 0002               2893m         BTST    #2, D3
0000229E  6600 0024               2894m         BNE     ADRIMMEDIATE_155
000022A2  0803 0000               2895m         BTST    #0, D3
000022A6  6600 0270               2896m         BNE     ADRABSOLUTEL_155
000022AA  6000 01DA               2897m         BRA     ADRABSOLUTEW_155
000022AE                          2898m ADRABSOLUTEDST_155:
000022AE  3A03                    2899m         MOVE.W  D3, D5
000022B0  0803 000B               2900m         BTST    #$B, D3
000022B4  6600 000E               2901m         BNE     ADRIMMEDIATE_155
000022B8  0803 0009               2902m         BTST    #$09, D3
000022BC  6600 025A               2903m         BNE     ADRABSOLUTEL_155
000022C0  6000 01C4               2904m         BRA     ADRABSOLUTEW_155
000022C4                          2905m ADRIMMEDIATE_155:
000022C4  BE3C 0001               2906m         CMP.B   #1, D7
000022C8  6700 009E               2907m         BEQ     ADRIMMEDIATEL_155
000022CC                          2908m ADRIMMEDIATEW_155:
000022CC  361A                    2909m         MOVE.W  (A2)+, D3
000022CE                          2910mm         PRINTHASH
000022CE  103C 0006               2911mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022D2  323C 0023               2912mm         MOVE.W  #35, D1     ; AN = SIGN
000022D6  4E4F                    2913mm         TRAP    #15         ; OUTPUT = SIGN
000022D8                          2914mm         ENDM
000022D8                          2915mm         PRINTSIGN
000022D8  103C 0006               2916mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022DC  323C 0024               2917mm         MOVE.W  #36, D1     ; AN = SIGN
000022E0  4E4F                    2918mm         TRAP    #15         ; OUTPUT = SIGN
000022E2                          2919mm         ENDM
000022E2                          2920mm         ADROUT
000022E2  3212                    2921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000022E4  E049                    2922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000022E6  E849                    2923mm         LSR.W   #4, D1      
000022E8                          2924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000022E8  0C01 0009               2925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000022EC  6E00 000A               2926mmm         BGT     ALPHA_185
000022F0  0601 0030               2927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000022F4  6000 0006               2928mmm         BRA     DONE_185
000022F8  0601 0037               2929mmm ALPHA_185: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000022FC  4E71                    2930mmm DONE_185: NOP
000022FE                          2931mmm         ENDM
000022FE  4E4F                    2932mm         TRAP    #15         ; EXECUTE OUTPUT
00002300                          2933mm         
00002300  3212                    2934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002302  E949                    2935mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002304  E049                    2936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002306  E849                    2937mm         LSR.W   #4, D1      
00002308                          2938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002308  0C01 0009               2939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000230C  6E00 000A               2940mmm         BGT     ALPHA_186
00002310  0601 0030               2941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002314  6000 0006               2942mmm         BRA     DONE_186
00002318  0601 0037               2943mmm ALPHA_186: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000231C  4E71                    2944mmm DONE_186: NOP
0000231E                          2945mmm         ENDM
0000231E  4E4F                    2946mm         TRAP    #15         ; EXECUTE OUTPUT
00002320                          2947mm         
00002320  3212                    2948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002322  E149                    2949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002324  E049                    2950mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002326  E849                    2951mm         LSR.W   #4, D1      
00002328                          2952mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002328  0C01 0009               2953mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000232C  6E00 000A               2954mmm         BGT     ALPHA_187
00002330  0601 0030               2955mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002334  6000 0006               2956mmm         BRA     DONE_187
00002338  0601 0037               2957mmm ALPHA_187: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000233C  4E71                    2958mmm DONE_187: NOP
0000233E                          2959mmm         ENDM
0000233E  4E4F                    2960mm         TRAP    #15         ; EXECUTE OUTPUT
00002340                          2961mm         
00002340  3212                    2962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002342  E149                    2963mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002344  E949                    2964mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002346  E049                    2965mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002348  E849                    2966mm         LSR.W   #4, D1      
0000234A                          2967mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000234A  0C01 0009               2968mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000234E  6E00 000A               2969mmm         BGT     ALPHA_188
00002352  0601 0030               2970mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002356  6000 0006               2971mmm         BRA     DONE_188
0000235A  0601 0037               2972mmm ALPHA_188: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000235E  4E71                    2973mmm DONE_188: NOP
00002360                          2974mmm         ENDM
00002360  4E4F                    2975mm         TRAP    #15         ; EXECUTE OUTPUT       
00002362                          2976mm         ENDM 
00002362  3605                    2977m         MOVE.W  D5, D3
00002364  6000 02C2               2978m         BRA     COMPLETE_155
00002368                          2979m ADRIMMEDIATEL_155:
00002368  361A                    2980m         MOVE.W  (A2)+, D3
0000236A                          2981mm         PRINTHASH
0000236A  103C 0006               2982mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000236E  323C 0023               2983mm         MOVE.W  #35, D1     ; AN = SIGN
00002372  4E4F                    2984mm         TRAP    #15         ; OUTPUT = SIGN
00002374                          2985mm         ENDM
00002374                          2986mm         PRINTSIGN
00002374  103C 0006               2987mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002378  323C 0024               2988mm         MOVE.W  #36, D1     ; AN = SIGN
0000237C  4E4F                    2989mm         TRAP    #15         ; OUTPUT = SIGN
0000237E                          2990mm         ENDM
0000237E                          2991mm         ADROUT 
0000237E  3212                    2992mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002380  E049                    2993mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002382  E849                    2994mm         LSR.W   #4, D1      
00002384                          2995mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002384  0C01 0009               2996mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002388  6E00 000A               2997mmm         BGT     ALPHA_192
0000238C  0601 0030               2998mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002390  6000 0006               2999mmm         BRA     DONE_192
00002394  0601 0037               3000mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002398  4E71                    3001mmm DONE_192: NOP
0000239A                          3002mmm         ENDM
0000239A  4E4F                    3003mm         TRAP    #15         ; EXECUTE OUTPUT
0000239C                          3004mm         
0000239C  3212                    3005mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000239E  E949                    3006mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023A0  E049                    3007mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023A2  E849                    3008mm         LSR.W   #4, D1      
000023A4                          3009mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023A4  0C01 0009               3010mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023A8  6E00 000A               3011mmm         BGT     ALPHA_193
000023AC  0601 0030               3012mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023B0  6000 0006               3013mmm         BRA     DONE_193
000023B4  0601 0037               3014mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023B8  4E71                    3015mmm DONE_193: NOP
000023BA                          3016mmm         ENDM
000023BA  4E4F                    3017mm         TRAP    #15         ; EXECUTE OUTPUT
000023BC                          3018mm         
000023BC  3212                    3019mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023BE  E149                    3020mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023C0  E049                    3021mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023C2  E849                    3022mm         LSR.W   #4, D1      
000023C4                          3023mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023C4  0C01 0009               3024mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023C8  6E00 000A               3025mmm         BGT     ALPHA_194
000023CC  0601 0030               3026mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023D0  6000 0006               3027mmm         BRA     DONE_194
000023D4  0601 0037               3028mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023D8  4E71                    3029mmm DONE_194: NOP
000023DA                          3030mmm         ENDM
000023DA  4E4F                    3031mm         TRAP    #15         ; EXECUTE OUTPUT
000023DC                          3032mm         
000023DC  3212                    3033mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023DE  E149                    3034mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023E0  E949                    3035mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000023E2  E049                    3036mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023E4  E849                    3037mm         LSR.W   #4, D1      
000023E6                          3038mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023E6  0C01 0009               3039mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023EA  6E00 000A               3040mmm         BGT     ALPHA_195
000023EE  0601 0030               3041mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023F2  6000 0006               3042mmm         BRA     DONE_195
000023F6  0601 0037               3043mmm ALPHA_195: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023FA  4E71                    3044mmm DONE_195: NOP
000023FC                          3045mmm         ENDM
000023FC  4E4F                    3046mm         TRAP    #15         ; EXECUTE OUTPUT       
000023FE                          3047mm         ENDM 
000023FE  361A                    3048m         MOVE.W  (A2)+, D3
00002400                          3049mm         ADROUT
00002400  3212                    3050mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002402  E049                    3051mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002404  E849                    3052mm         LSR.W   #4, D1      
00002406                          3053mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002406  0C01 0009               3054mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000240A  6E00 000A               3055mmm         BGT     ALPHA_197
0000240E  0601 0030               3056mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002412  6000 0006               3057mmm         BRA     DONE_197
00002416  0601 0037               3058mmm ALPHA_197: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000241A  4E71                    3059mmm DONE_197: NOP
0000241C                          3060mmm         ENDM
0000241C  4E4F                    3061mm         TRAP    #15         ; EXECUTE OUTPUT
0000241E                          3062mm         
0000241E  3212                    3063mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002420  E949                    3064mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002422  E049                    3065mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002424  E849                    3066mm         LSR.W   #4, D1      
00002426                          3067mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002426  0C01 0009               3068mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000242A  6E00 000A               3069mmm         BGT     ALPHA_198
0000242E  0601 0030               3070mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002432  6000 0006               3071mmm         BRA     DONE_198
00002436  0601 0037               3072mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000243A  4E71                    3073mmm DONE_198: NOP
0000243C                          3074mmm         ENDM
0000243C  4E4F                    3075mm         TRAP    #15         ; EXECUTE OUTPUT
0000243E                          3076mm         
0000243E  3212                    3077mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002440  E149                    3078mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002442  E049                    3079mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002444  E849                    3080mm         LSR.W   #4, D1      
00002446                          3081mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002446  0C01 0009               3082mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000244A  6E00 000A               3083mmm         BGT     ALPHA_199
0000244E  0601 0030               3084mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002452  6000 0006               3085mmm         BRA     DONE_199
00002456  0601 0037               3086mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000245A  4E71                    3087mmm DONE_199: NOP
0000245C                          3088mmm         ENDM
0000245C  4E4F                    3089mm         TRAP    #15         ; EXECUTE OUTPUT
0000245E                          3090mm         
0000245E  3212                    3091mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002460  E149                    3092mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002462  E949                    3093mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002464  E049                    3094mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002466  E849                    3095mm         LSR.W   #4, D1      
00002468                          3096mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002468  0C01 0009               3097mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000246C  6E00 000A               3098mmm         BGT     ALPHA_200
00002470  0601 0030               3099mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002474  6000 0006               3100mmm         BRA     DONE_200
00002478  0601 0037               3101mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000247C  4E71                    3102mmm DONE_200: NOP
0000247E                          3103mmm         ENDM
0000247E  4E4F                    3104mm         TRAP    #15         ; EXECUTE OUTPUT       
00002480                          3105mm         ENDM 
00002480  3605                    3106m         MOVE.W  D5, D3
00002482  6000 01A4               3107m         BRA     COMPLETE_155 
00002486                          3108m ADRABSOLUTEW_155:     
00002486  361A                    3109m         MOVE.W  (A2)+, D3
00002488                          3110mm         PRINTSIGN
00002488  103C 0006               3111mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000248C  323C 0024               3112mm         MOVE.W  #36, D1     ; AN = SIGN
00002490  4E4F                    3113mm         TRAP    #15         ; OUTPUT = SIGN
00002492                          3114mm         ENDM
00002492                          3115mm         ADROUT
00002492  3212                    3116mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002494  E049                    3117mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002496  E849                    3118mm         LSR.W   #4, D1      
00002498                          3119mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002498  0C01 0009               3120mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000249C  6E00 000A               3121mmm         BGT     ALPHA_203
000024A0  0601 0030               3122mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024A4  6000 0006               3123mmm         BRA     DONE_203
000024A8  0601 0037               3124mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024AC  4E71                    3125mmm DONE_203: NOP
000024AE                          3126mmm         ENDM
000024AE  4E4F                    3127mm         TRAP    #15         ; EXECUTE OUTPUT
000024B0                          3128mm         
000024B0  3212                    3129mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024B2  E949                    3130mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024B4  E049                    3131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024B6  E849                    3132mm         LSR.W   #4, D1      
000024B8                          3133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024B8  0C01 0009               3134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024BC  6E00 000A               3135mmm         BGT     ALPHA_204
000024C0  0601 0030               3136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024C4  6000 0006               3137mmm         BRA     DONE_204
000024C8  0601 0037               3138mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024CC  4E71                    3139mmm DONE_204: NOP
000024CE                          3140mmm         ENDM
000024CE  4E4F                    3141mm         TRAP    #15         ; EXECUTE OUTPUT
000024D0                          3142mm         
000024D0  3212                    3143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024D2  E149                    3144mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024D4  E049                    3145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024D6  E849                    3146mm         LSR.W   #4, D1      
000024D8                          3147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024D8  0C01 0009               3148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024DC  6E00 000A               3149mmm         BGT     ALPHA_205
000024E0  0601 0030               3150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024E4  6000 0006               3151mmm         BRA     DONE_205
000024E8  0601 0037               3152mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024EC  4E71                    3153mmm DONE_205: NOP
000024EE                          3154mmm         ENDM
000024EE  4E4F                    3155mm         TRAP    #15         ; EXECUTE OUTPUT
000024F0                          3156mm         
000024F0  3212                    3157mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024F2  E149                    3158mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024F4  E949                    3159mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024F6  E049                    3160mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024F8  E849                    3161mm         LSR.W   #4, D1      
000024FA                          3162mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024FA  0C01 0009               3163mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024FE  6E00 000A               3164mmm         BGT     ALPHA_206
00002502  0601 0030               3165mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002506  6000 0006               3166mmm         BRA     DONE_206
0000250A  0601 0037               3167mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000250E  4E71                    3168mmm DONE_206: NOP
00002510                          3169mmm         ENDM
00002510  4E4F                    3170mm         TRAP    #15         ; EXECUTE OUTPUT       
00002512                          3171mm         ENDM 
00002512  3605                    3172m         MOVE.W  D5, D3
00002514  6000 0112               3173m         BRA     COMPLETE_155  
00002518                          3174m ADRABSOLUTEL_155:  
00002518  361A                    3175m         MOVE.W  (A2)+, D3
0000251A                          3176mm         PRINTSIGN
0000251A  103C 0006               3177mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000251E  323C 0024               3178mm         MOVE.W  #36, D1     ; AN = SIGN
00002522  4E4F                    3179mm         TRAP    #15         ; OUTPUT = SIGN
00002524                          3180mm         ENDM
00002524                          3181mm         ADROUT 
00002524  3212                    3182mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002526  E049                    3183mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002528  E849                    3184mm         LSR.W   #4, D1      
0000252A                          3185mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000252A  0C01 0009               3186mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000252E  6E00 000A               3187mmm         BGT     ALPHA_209
00002532  0601 0030               3188mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002536  6000 0006               3189mmm         BRA     DONE_209
0000253A  0601 0037               3190mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000253E  4E71                    3191mmm DONE_209: NOP
00002540                          3192mmm         ENDM
00002540  4E4F                    3193mm         TRAP    #15         ; EXECUTE OUTPUT
00002542                          3194mm         
00002542  3212                    3195mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002544  E949                    3196mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002546  E049                    3197mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002548  E849                    3198mm         LSR.W   #4, D1      
0000254A                          3199mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000254A  0C01 0009               3200mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000254E  6E00 000A               3201mmm         BGT     ALPHA_210
00002552  0601 0030               3202mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002556  6000 0006               3203mmm         BRA     DONE_210
0000255A  0601 0037               3204mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000255E  4E71                    3205mmm DONE_210: NOP
00002560                          3206mmm         ENDM
00002560  4E4F                    3207mm         TRAP    #15         ; EXECUTE OUTPUT
00002562                          3208mm         
00002562  3212                    3209mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002564  E149                    3210mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002566  E049                    3211mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002568  E849                    3212mm         LSR.W   #4, D1      
0000256A                          3213mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000256A  0C01 0009               3214mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000256E  6E00 000A               3215mmm         BGT     ALPHA_211
00002572  0601 0030               3216mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002576  6000 0006               3217mmm         BRA     DONE_211
0000257A  0601 0037               3218mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000257E  4E71                    3219mmm DONE_211: NOP
00002580                          3220mmm         ENDM
00002580  4E4F                    3221mm         TRAP    #15         ; EXECUTE OUTPUT
00002582                          3222mm         
00002582  3212                    3223mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002584  E149                    3224mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002586  E949                    3225mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002588  E049                    3226mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000258A  E849                    3227mm         LSR.W   #4, D1      
0000258C                          3228mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000258C  0C01 0009               3229mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002590  6E00 000A               3230mmm         BGT     ALPHA_212
00002594  0601 0030               3231mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002598  6000 0006               3232mmm         BRA     DONE_212
0000259C  0601 0037               3233mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025A0  4E71                    3234mmm DONE_212: NOP
000025A2                          3235mmm         ENDM
000025A2  4E4F                    3236mm         TRAP    #15         ; EXECUTE OUTPUT       
000025A4                          3237mm         ENDM 
000025A4  361A                    3238m         MOVE.W  (A2)+, D3
000025A6                          3239mm         ADROUT
000025A6  3212                    3240mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A8  E049                    3241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025AA  E849                    3242mm         LSR.W   #4, D1      
000025AC                          3243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025AC  0C01 0009               3244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025B0  6E00 000A               3245mmm         BGT     ALPHA_214
000025B4  0601 0030               3246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B8  6000 0006               3247mmm         BRA     DONE_214
000025BC  0601 0037               3248mmm ALPHA_214: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025C0  4E71                    3249mmm DONE_214: NOP
000025C2                          3250mmm         ENDM
000025C2  4E4F                    3251mm         TRAP    #15         ; EXECUTE OUTPUT
000025C4                          3252mm         
000025C4  3212                    3253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025C6  E949                    3254mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025C8  E049                    3255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025CA  E849                    3256mm         LSR.W   #4, D1      
000025CC                          3257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025CC  0C01 0009               3258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025D0  6E00 000A               3259mmm         BGT     ALPHA_215
000025D4  0601 0030               3260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025D8  6000 0006               3261mmm         BRA     DONE_215
000025DC  0601 0037               3262mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025E0  4E71                    3263mmm DONE_215: NOP
000025E2                          3264mmm         ENDM
000025E2  4E4F                    3265mm         TRAP    #15         ; EXECUTE OUTPUT
000025E4                          3266mm         
000025E4  3212                    3267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025E6  E149                    3268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025E8  E049                    3269mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025EA  E849                    3270mm         LSR.W   #4, D1      
000025EC                          3271mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025EC  0C01 0009               3272mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025F0  6E00 000A               3273mmm         BGT     ALPHA_216
000025F4  0601 0030               3274mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025F8  6000 0006               3275mmm         BRA     DONE_216
000025FC  0601 0037               3276mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002600  4E71                    3277mmm DONE_216: NOP
00002602                          3278mmm         ENDM
00002602  4E4F                    3279mm         TRAP    #15         ; EXECUTE OUTPUT
00002604                          3280mm         
00002604  3212                    3281mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002606  E149                    3282mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002608  E949                    3283mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000260A  E049                    3284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000260C  E849                    3285mm         LSR.W   #4, D1      
0000260E                          3286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000260E  0C01 0009               3287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002612  6E00 000A               3288mmm         BGT     ALPHA_217
00002616  0601 0030               3289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000261A  6000 0006               3290mmm         BRA     DONE_217
0000261E  0601 0037               3291mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002622  4E71                    3292mmm DONE_217: NOP
00002624                          3293mmm         ENDM
00002624  4E4F                    3294mm         TRAP    #15         ; EXECUTE OUTPUT       
00002626                          3295mm         ENDM 
00002626  3605                    3296m         MOVE.W  D5, D3
00002628                          3297m 
00002628                          3298m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
00002628                          3299m         ENDM
00002628  6000 05F4               3300          BRA     decodeADDcomp
0000262C                          3301  decodeAddDestOp:
0000262C                          3302m         prepareAdrMode  #$1,(A2)
0000262C  3C3C 0001               3303m         MOVE.W  #$1, D6      ; INPUT VALUE
00002630  3212                    3304m         MOVE.W  (A2), D1
00002632  BC3C 0001               3305m         CMP.B   #$01, D6
00002636  6700 000C               3306m         BEQ     ADRSOURCE_218    
0000263A                          3307m ADRDEST_218:
0000263A  EF49                    3308m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000263C  E049                    3309m         LSR     #$08, D1
0000263E  EA49                    3310m         LSR     #$05, D1
00002640  6000 000A               3311m         BRA     COMPLETE_218 
00002644                          3312m ADRSOURCE_218:                
00002644  E149                    3313m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002646  E549                    3314m         LSL     #$02, D1
00002648  E049                    3315m         LSR     #$08, D1
0000264A  EA49                    3316m         LSR     #$05, D1
0000264C                          3317m COMPLETE_218:  ; OPCODE HAS BEEN VERIFIED
0000264C                          3318m         ENDM        
0000264C                          3319m         decodeAdrMode   (A2), D1
0000264C  3612                    3320m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000264E  3201                    3321m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002650                          3322m 
00002650  B23C 0001               3323m         CMP.B   #$01, D1
00002654  6700 0066               3324m         BEQ     ADRREGDIRECT_219    
00002658  B23C 0002               3325m         CMP.B   #$02, D1
0000265C  6700 00A0               3326m         BEQ     ADRREGINDIRECT_219  
00002660  B23C 0003               3327m         CMP.B   #$03, D1
00002664  6700 0102               3328m         BEQ     ADRREGPOSTINC_219  
00002668  B23C 0004               3329m         CMP.B   #$04, D1
0000266C  6700 0178               3330m         BEQ     ADRREGPREDEC_219
00002670  B23C 0007               3331m         CMP.B   #$07, D1
00002674  6700 01EE               3332m         BEQ     ADRABSOLUTE_219    
00002678                          3333m         
00002678                          3334m DATAREGDIRECT_219: 
00002678  BC3C 0001               3335m         CMP.B   #$01, D6
0000267C  6700 001E               3336m         BEQ     DATAREGDIRECTSRC_219   
00002680                          3337m DATAREGDIRECTDEST_219: 
00002680                          3338mm         PRINTDNDEST D3 
00002680  3203                    3339mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002682  E949                    3340mm         LSL     #$04, D1
00002684  E049                    3341mm         LSR     #$08, D1
00002686  EA49                    3342mm         LSR     #$05, D1
00002688  43F8 00C1               3343mm         LEA     ODN, A1     
0000268C  103C 000E               3344mm         MOVE.B  #14,D0          
00002690  4E4F                    3345mm         TRAP    #15
00002692  103C 0003               3346mm         MOVE.B  #3,D0          
00002696  4E4F                    3347mm         TRAP    #15
00002698                          3348mm         ENDM
00002698  6000 0562               3349m         BRA     COMPLETE_219 
0000269C                          3350m DATAREGDIRECTSRC_219: 
0000269C                          3351mm         PRINTDNSRC D3 
0000269C  4281                    3352mm         CLR.L   D1
0000269E  3203                    3353mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026A0  E149                    3354mm         LSL     #$08, D1
000026A2  EB49                    3355mm         LSL     #$05, D1
000026A4  E049                    3356mm         LSR     #$08, D1
000026A6  EA49                    3357mm         LSR     #$05, D1
000026A8  43F8 00C1               3358mm         LEA     ODN, A1     
000026AC  103C 000E               3359mm         MOVE.B  #14,D0          
000026B0  4E4F                    3360mm         TRAP    #15
000026B2  103C 0003               3361mm         MOVE.B  #3,D0          
000026B6  4E4F                    3362mm         TRAP    #15
000026B8                          3363mm         ENDM
000026B8  6000 0542               3364m         BRA     COMPLETE_219   
000026BC                          3365m         
000026BC                          3366m ADRREGDIRECT_219: 
000026BC  BC3C 0001               3367m         CMP.B   #$01, D6
000026C0  6700 001E               3368m         BEQ     ADRREGDIRECTSRC_219   
000026C4                          3369m ADRREGDIRECTDEST_219:
000026C4                          3370mm         PRINTANDEST D3
000026C4  3203                    3371mm         MOVE.W  D3, D1
000026C6  E949                    3372mm         LSL     #$04, D1
000026C8  E049                    3373mm         LSR     #$08, D1
000026CA  EA49                    3374mm         LSR     #$05, D1
000026CC  43F8 00C3               3375mm         LEA     OAN, A1     
000026D0  103C 000E               3376mm         MOVE.B  #14,D0          
000026D4  4E4F                    3377mm         TRAP    #15
000026D6  103C 0003               3378mm         MOVE.B  #3,D0          
000026DA  4E4F                    3379mm         TRAP    #15
000026DC                          3380mm         ENDM
000026DC  6000 051E               3381m         BRA     COMPLETE_219   
000026E0                          3382m ADRREGDIRECTSRC_219:
000026E0                          3383mm         PRINTANSRC D3
000026E0  3203                    3384mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026E2  E149                    3385mm         LSL     #$08, D1
000026E4  EB49                    3386mm         LSL     #$05, D1
000026E6  E049                    3387mm         LSR     #$08, D1
000026E8  EA49                    3388mm         LSR     #$05, D1
000026EA  43F8 00C3               3389mm         LEA     OAN, A1     
000026EE  103C 000E               3390mm         MOVE.B  #14,D0          
000026F2  4E4F                    3391mm         TRAP    #15
000026F4  103C 0003               3392mm         MOVE.B  #3,D0          
000026F8  4E4F                    3393mm         TRAP    #15
000026FA                          3394mm         ENDM
000026FA  6000 0500               3395m         BRA     COMPLETE_219   
000026FE                          3396m        
000026FE                          3397m ADRREGINDIRECT_219:   
000026FE  BC3C 0001               3398m         CMP.B   #$01, D6
00002702  6700 0032               3399m         BEQ     ADRREGINDIRECTSRC_219   
00002706                          3400m ADRREGINDIRECTDEST_219:
00002706                          3401mm         PRINTLB
00002706  43F8 00C5               3402mm         LEA     OLB, A1     
0000270A  103C 000E               3403mm         MOVE.B  #14,D0          
0000270E  4E4F                    3404mm         TRAP    #15
00002710                          3405mm         ENDM
00002710                          3406mm         PRINTANDEST D3  
00002710  3203                    3407mm         MOVE.W  D3, D1
00002712  E949                    3408mm         LSL     #$04, D1
00002714  E049                    3409mm         LSR     #$08, D1
00002716  EA49                    3410mm         LSR     #$05, D1
00002718  43F8 00C3               3411mm         LEA     OAN, A1     
0000271C  103C 000E               3412mm         MOVE.B  #14,D0          
00002720  4E4F                    3413mm         TRAP    #15
00002722  103C 0003               3414mm         MOVE.B  #3,D0          
00002726  4E4F                    3415mm         TRAP    #15
00002728                          3416mm         ENDM
00002728                          3417mm         PRINTRB
00002728  43F8 00C7               3418mm         LEA     ORB, A1     
0000272C  103C 000E               3419mm         MOVE.B  #14,D0          
00002730  4E4F                    3420mm         TRAP    #15
00002732                          3421mm         ENDM
00002732  6000 04C8               3422m         BRA     COMPLETE_219     
00002736                          3423m ADRREGINDIRECTSRC_219:   
00002736                          3424mm         PRINTLB
00002736  43F8 00C5               3425mm         LEA     OLB, A1     
0000273A  103C 000E               3426mm         MOVE.B  #14,D0          
0000273E  4E4F                    3427mm         TRAP    #15
00002740                          3428mm         ENDM
00002740                          3429mm         PRINTANSRC D3  
00002740  3203                    3430mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002742  E149                    3431mm         LSL     #$08, D1
00002744  EB49                    3432mm         LSL     #$05, D1
00002746  E049                    3433mm         LSR     #$08, D1
00002748  EA49                    3434mm         LSR     #$05, D1
0000274A  43F8 00C3               3435mm         LEA     OAN, A1     
0000274E  103C 000E               3436mm         MOVE.B  #14,D0          
00002752  4E4F                    3437mm         TRAP    #15
00002754  103C 0003               3438mm         MOVE.B  #3,D0          
00002758  4E4F                    3439mm         TRAP    #15
0000275A                          3440mm         ENDM
0000275A                          3441mm         PRINTRB
0000275A  43F8 00C7               3442mm         LEA     ORB, A1     
0000275E  103C 000E               3443mm         MOVE.B  #14,D0          
00002762  4E4F                    3444mm         TRAP    #15
00002764                          3445mm         ENDM
00002764  6000 0496               3446m         BRA     COMPLETE_219   
00002768                          3447m         
00002768                          3448m ADRREGPOSTINC_219:   
00002768  BC3C 0001               3449m         CMP.B   #$01, D6
0000276C  6700 003C               3450m         BEQ     ADRREGPOSTINCSRC_219   
00002770                          3451m ADRREGPOSTINCDEST_219: 
00002770                          3452mm         PRINTLB
00002770  43F8 00C5               3453mm         LEA     OLB, A1     
00002774  103C 000E               3454mm         MOVE.B  #14,D0          
00002778  4E4F                    3455mm         TRAP    #15
0000277A                          3456mm         ENDM
0000277A                          3457mm         PRINTANDEST D3  
0000277A  3203                    3458mm         MOVE.W  D3, D1
0000277C  E949                    3459mm         LSL     #$04, D1
0000277E  E049                    3460mm         LSR     #$08, D1
00002780  EA49                    3461mm         LSR     #$05, D1
00002782  43F8 00C3               3462mm         LEA     OAN, A1     
00002786  103C 000E               3463mm         MOVE.B  #14,D0          
0000278A  4E4F                    3464mm         TRAP    #15
0000278C  103C 0003               3465mm         MOVE.B  #3,D0          
00002790  4E4F                    3466mm         TRAP    #15
00002792                          3467mm         ENDM
00002792                          3468mm         PRINTRB
00002792  43F8 00C7               3469mm         LEA     ORB, A1     
00002796  103C 000E               3470mm         MOVE.B  #14,D0          
0000279A  4E4F                    3471mm         TRAP    #15
0000279C                          3472mm         ENDM
0000279C                          3473mm         PRINTPI
0000279C  43F8 00CE               3474mm         LEA     OPSTINC, A1     
000027A0  103C 000E               3475mm         MOVE.B  #14,D0          
000027A4  4E4F                    3476mm         TRAP    #15
000027A6                          3477mm         ENDM
000027A6  6000 0454               3478m         BRA     COMPLETE_219  
000027AA                          3479m ADRREGPOSTINCSRC_219:           
000027AA                          3480mm         PRINTLB
000027AA  43F8 00C5               3481mm         LEA     OLB, A1     
000027AE  103C 000E               3482mm         MOVE.B  #14,D0          
000027B2  4E4F                    3483mm         TRAP    #15
000027B4                          3484mm         ENDM
000027B4                          3485mm         PRINTANSRC D3  
000027B4  3203                    3486mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027B6  E149                    3487mm         LSL     #$08, D1
000027B8  EB49                    3488mm         LSL     #$05, D1
000027BA  E049                    3489mm         LSR     #$08, D1
000027BC  EA49                    3490mm         LSR     #$05, D1
000027BE  43F8 00C3               3491mm         LEA     OAN, A1     
000027C2  103C 000E               3492mm         MOVE.B  #14,D0          
000027C6  4E4F                    3493mm         TRAP    #15
000027C8  103C 0003               3494mm         MOVE.B  #3,D0          
000027CC  4E4F                    3495mm         TRAP    #15
000027CE                          3496mm         ENDM
000027CE                          3497mm         PRINTRB
000027CE  43F8 00C7               3498mm         LEA     ORB, A1     
000027D2  103C 000E               3499mm         MOVE.B  #14,D0          
000027D6  4E4F                    3500mm         TRAP    #15
000027D8                          3501mm         ENDM
000027D8                          3502mm         PRINTPI
000027D8  43F8 00CE               3503mm         LEA     OPSTINC, A1     
000027DC  103C 000E               3504mm         MOVE.B  #14,D0          
000027E0  4E4F                    3505mm         TRAP    #15
000027E2                          3506mm         ENDM
000027E2  6000 0418               3507m         BRA     COMPLETE_219  
000027E6                          3508m ADRREGPREDEC_219: 
000027E6  BC3C 0001               3509m         CMP.B   #$01, D6
000027EA  6700 003C               3510m         BEQ     ADRREGPREDECSRC_219   
000027EE                          3511m ADRREGPREDECDEST_219:
000027EE                          3512mm         PRINTPD  
000027EE  43F8 00CC               3513mm         LEA     OPREDEC, A1     
000027F2  103C 000E               3514mm         MOVE.B  #14,D0          
000027F6  4E4F                    3515mm         TRAP    #15
000027F8                          3516mm         ENDM
000027F8                          3517mm         PRINTLB
000027F8  43F8 00C5               3518mm         LEA     OLB, A1     
000027FC  103C 000E               3519mm         MOVE.B  #14,D0          
00002800  4E4F                    3520mm         TRAP    #15
00002802                          3521mm         ENDM
00002802                          3522mm         PRINTANDEST D3  
00002802  3203                    3523mm         MOVE.W  D3, D1
00002804  E949                    3524mm         LSL     #$04, D1
00002806  E049                    3525mm         LSR     #$08, D1
00002808  EA49                    3526mm         LSR     #$05, D1
0000280A  43F8 00C3               3527mm         LEA     OAN, A1     
0000280E  103C 000E               3528mm         MOVE.B  #14,D0          
00002812  4E4F                    3529mm         TRAP    #15
00002814  103C 0003               3530mm         MOVE.B  #3,D0          
00002818  4E4F                    3531mm         TRAP    #15
0000281A                          3532mm         ENDM
0000281A                          3533mm         PRINTRB
0000281A  43F8 00C7               3534mm         LEA     ORB, A1     
0000281E  103C 000E               3535mm         MOVE.B  #14,D0          
00002822  4E4F                    3536mm         TRAP    #15
00002824                          3537mm         ENDM
00002824  6000 03D6               3538m         BRA     COMPLETE_219   
00002828                          3539m ADRREGPREDECSRC_219: 
00002828                          3540mm         PRINTPD  
00002828  43F8 00CC               3541mm         LEA     OPREDEC, A1     
0000282C  103C 000E               3542mm         MOVE.B  #14,D0          
00002830  4E4F                    3543mm         TRAP    #15
00002832                          3544mm         ENDM
00002832                          3545mm         PRINTLB
00002832  43F8 00C5               3546mm         LEA     OLB, A1     
00002836  103C 000E               3547mm         MOVE.B  #14,D0          
0000283A  4E4F                    3548mm         TRAP    #15
0000283C                          3549mm         ENDM
0000283C                          3550mm         PRINTANSRC D3  
0000283C  3203                    3551mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000283E  E149                    3552mm         LSL     #$08, D1
00002840  EB49                    3553mm         LSL     #$05, D1
00002842  E049                    3554mm         LSR     #$08, D1
00002844  EA49                    3555mm         LSR     #$05, D1
00002846  43F8 00C3               3556mm         LEA     OAN, A1     
0000284A  103C 000E               3557mm         MOVE.B  #14,D0          
0000284E  4E4F                    3558mm         TRAP    #15
00002850  103C 0003               3559mm         MOVE.B  #3,D0          
00002854  4E4F                    3560mm         TRAP    #15
00002856                          3561mm         ENDM
00002856                          3562mm         PRINTRB
00002856  43F8 00C7               3563mm         LEA     ORB, A1     
0000285A  103C 000E               3564mm         MOVE.B  #14,D0          
0000285E  4E4F                    3565mm         TRAP    #15
00002860                          3566mm         ENDM
00002860  6000 039A               3567m         BRA     COMPLETE_219
00002864                          3568m        
00002864                          3569m ADRABSOLUTE_219:
00002864  BC3C 0001               3570m         CMP.B   #$01, D6
00002868  6600 0018               3571m         BNE     ADRABSOLUTEDST_219 
0000286C                          3572m         
0000286C  3A03                    3573m         MOVE.W  D3, D5
0000286E  0803 0002               3574m         BTST    #2, D3
00002872  6600 0024               3575m         BNE     ADRIMMEDIATE_219
00002876  0803 0000               3576m         BTST    #0, D3
0000287A  6600 0270               3577m         BNE     ADRABSOLUTEL_219
0000287E  6000 01DA               3578m         BRA     ADRABSOLUTEW_219
00002882                          3579m ADRABSOLUTEDST_219:
00002882  3A03                    3580m         MOVE.W  D3, D5
00002884  0803 000B               3581m         BTST    #$B, D3
00002888  6600 000E               3582m         BNE     ADRIMMEDIATE_219
0000288C  0803 0009               3583m         BTST    #$09, D3
00002890  6600 025A               3584m         BNE     ADRABSOLUTEL_219
00002894  6000 01C4               3585m         BRA     ADRABSOLUTEW_219
00002898                          3586m ADRIMMEDIATE_219:
00002898  BE3C 0001               3587m         CMP.B   #1, D7
0000289C  6700 009E               3588m         BEQ     ADRIMMEDIATEL_219
000028A0                          3589m ADRIMMEDIATEW_219:
000028A0  361A                    3590m         MOVE.W  (A2)+, D3
000028A2                          3591mm         PRINTHASH
000028A2  103C 0006               3592mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028A6  323C 0023               3593mm         MOVE.W  #35, D1     ; AN = SIGN
000028AA  4E4F                    3594mm         TRAP    #15         ; OUTPUT = SIGN
000028AC                          3595mm         ENDM
000028AC                          3596mm         PRINTSIGN
000028AC  103C 0006               3597mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028B0  323C 0024               3598mm         MOVE.W  #36, D1     ; AN = SIGN
000028B4  4E4F                    3599mm         TRAP    #15         ; OUTPUT = SIGN
000028B6                          3600mm         ENDM
000028B6                          3601mm         ADROUT
000028B6  3212                    3602mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028B8  E049                    3603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028BA  E849                    3604mm         LSR.W   #4, D1      
000028BC                          3605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028BC  0C01 0009               3606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028C0  6E00 000A               3607mmm         BGT     ALPHA_249
000028C4  0601 0030               3608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028C8  6000 0006               3609mmm         BRA     DONE_249
000028CC  0601 0037               3610mmm ALPHA_249: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028D0  4E71                    3611mmm DONE_249: NOP
000028D2                          3612mmm         ENDM
000028D2  4E4F                    3613mm         TRAP    #15         ; EXECUTE OUTPUT
000028D4                          3614mm         
000028D4  3212                    3615mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028D6  E949                    3616mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000028D8  E049                    3617mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028DA  E849                    3618mm         LSR.W   #4, D1      
000028DC                          3619mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028DC  0C01 0009               3620mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028E0  6E00 000A               3621mmm         BGT     ALPHA_250
000028E4  0601 0030               3622mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028E8  6000 0006               3623mmm         BRA     DONE_250
000028EC  0601 0037               3624mmm ALPHA_250: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028F0  4E71                    3625mmm DONE_250: NOP
000028F2                          3626mmm         ENDM
000028F2  4E4F                    3627mm         TRAP    #15         ; EXECUTE OUTPUT
000028F4                          3628mm         
000028F4  3212                    3629mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028F6  E149                    3630mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000028F8  E049                    3631mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028FA  E849                    3632mm         LSR.W   #4, D1      
000028FC                          3633mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028FC  0C01 0009               3634mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002900  6E00 000A               3635mmm         BGT     ALPHA_251
00002904  0601 0030               3636mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002908  6000 0006               3637mmm         BRA     DONE_251
0000290C  0601 0037               3638mmm ALPHA_251: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002910  4E71                    3639mmm DONE_251: NOP
00002912                          3640mmm         ENDM
00002912  4E4F                    3641mm         TRAP    #15         ; EXECUTE OUTPUT
00002914                          3642mm         
00002914  3212                    3643mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002916  E149                    3644mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002918  E949                    3645mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000291A  E049                    3646mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000291C  E849                    3647mm         LSR.W   #4, D1      
0000291E                          3648mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000291E  0C01 0009               3649mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002922  6E00 000A               3650mmm         BGT     ALPHA_252
00002926  0601 0030               3651mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000292A  6000 0006               3652mmm         BRA     DONE_252
0000292E  0601 0037               3653mmm ALPHA_252: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002932  4E71                    3654mmm DONE_252: NOP
00002934                          3655mmm         ENDM
00002934  4E4F                    3656mm         TRAP    #15         ; EXECUTE OUTPUT       
00002936                          3657mm         ENDM 
00002936  3605                    3658m         MOVE.W  D5, D3
00002938  6000 02C2               3659m         BRA     COMPLETE_219
0000293C                          3660m ADRIMMEDIATEL_219:
0000293C  361A                    3661m         MOVE.W  (A2)+, D3
0000293E                          3662mm         PRINTHASH
0000293E  103C 0006               3663mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002942  323C 0023               3664mm         MOVE.W  #35, D1     ; AN = SIGN
00002946  4E4F                    3665mm         TRAP    #15         ; OUTPUT = SIGN
00002948                          3666mm         ENDM
00002948                          3667mm         PRINTSIGN
00002948  103C 0006               3668mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000294C  323C 0024               3669mm         MOVE.W  #36, D1     ; AN = SIGN
00002950  4E4F                    3670mm         TRAP    #15         ; OUTPUT = SIGN
00002952                          3671mm         ENDM
00002952                          3672mm         ADROUT 
00002952  3212                    3673mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002954  E049                    3674mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002956  E849                    3675mm         LSR.W   #4, D1      
00002958                          3676mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002958  0C01 0009               3677mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000295C  6E00 000A               3678mmm         BGT     ALPHA_256
00002960  0601 0030               3679mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002964  6000 0006               3680mmm         BRA     DONE_256
00002968  0601 0037               3681mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000296C  4E71                    3682mmm DONE_256: NOP
0000296E                          3683mmm         ENDM
0000296E  4E4F                    3684mm         TRAP    #15         ; EXECUTE OUTPUT
00002970                          3685mm         
00002970  3212                    3686mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002972  E949                    3687mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002974  E049                    3688mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002976  E849                    3689mm         LSR.W   #4, D1      
00002978                          3690mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002978  0C01 0009               3691mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000297C  6E00 000A               3692mmm         BGT     ALPHA_257
00002980  0601 0030               3693mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002984  6000 0006               3694mmm         BRA     DONE_257
00002988  0601 0037               3695mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000298C  4E71                    3696mmm DONE_257: NOP
0000298E                          3697mmm         ENDM
0000298E  4E4F                    3698mm         TRAP    #15         ; EXECUTE OUTPUT
00002990                          3699mm         
00002990  3212                    3700mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002992  E149                    3701mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002994  E049                    3702mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002996  E849                    3703mm         LSR.W   #4, D1      
00002998                          3704mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002998  0C01 0009               3705mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000299C  6E00 000A               3706mmm         BGT     ALPHA_258
000029A0  0601 0030               3707mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029A4  6000 0006               3708mmm         BRA     DONE_258
000029A8  0601 0037               3709mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029AC  4E71                    3710mmm DONE_258: NOP
000029AE                          3711mmm         ENDM
000029AE  4E4F                    3712mm         TRAP    #15         ; EXECUTE OUTPUT
000029B0                          3713mm         
000029B0  3212                    3714mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029B2  E149                    3715mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029B4  E949                    3716mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000029B6  E049                    3717mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029B8  E849                    3718mm         LSR.W   #4, D1      
000029BA                          3719mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029BA  0C01 0009               3720mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029BE  6E00 000A               3721mmm         BGT     ALPHA_259
000029C2  0601 0030               3722mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029C6  6000 0006               3723mmm         BRA     DONE_259
000029CA  0601 0037               3724mmm ALPHA_259: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029CE  4E71                    3725mmm DONE_259: NOP
000029D0                          3726mmm         ENDM
000029D0  4E4F                    3727mm         TRAP    #15         ; EXECUTE OUTPUT       
000029D2                          3728mm         ENDM 
000029D2  361A                    3729m         MOVE.W  (A2)+, D3
000029D4                          3730mm         ADROUT
000029D4  3212                    3731mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029D6  E049                    3732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029D8  E849                    3733mm         LSR.W   #4, D1      
000029DA                          3734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029DA  0C01 0009               3735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029DE  6E00 000A               3736mmm         BGT     ALPHA_261
000029E2  0601 0030               3737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029E6  6000 0006               3738mmm         BRA     DONE_261
000029EA  0601 0037               3739mmm ALPHA_261: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029EE  4E71                    3740mmm DONE_261: NOP
000029F0                          3741mmm         ENDM
000029F0  4E4F                    3742mm         TRAP    #15         ; EXECUTE OUTPUT
000029F2                          3743mm         
000029F2  3212                    3744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029F4  E949                    3745mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029F6  E049                    3746mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029F8  E849                    3747mm         LSR.W   #4, D1      
000029FA                          3748mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029FA  0C01 0009               3749mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029FE  6E00 000A               3750mmm         BGT     ALPHA_262
00002A02  0601 0030               3751mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A06  6000 0006               3752mmm         BRA     DONE_262
00002A0A  0601 0037               3753mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A0E  4E71                    3754mmm DONE_262: NOP
00002A10                          3755mmm         ENDM
00002A10  4E4F                    3756mm         TRAP    #15         ; EXECUTE OUTPUT
00002A12                          3757mm         
00002A12  3212                    3758mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A14  E149                    3759mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A16  E049                    3760mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A18  E849                    3761mm         LSR.W   #4, D1      
00002A1A                          3762mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A1A  0C01 0009               3763mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A1E  6E00 000A               3764mmm         BGT     ALPHA_263
00002A22  0601 0030               3765mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A26  6000 0006               3766mmm         BRA     DONE_263
00002A2A  0601 0037               3767mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A2E  4E71                    3768mmm DONE_263: NOP
00002A30                          3769mmm         ENDM
00002A30  4E4F                    3770mm         TRAP    #15         ; EXECUTE OUTPUT
00002A32                          3771mm         
00002A32  3212                    3772mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A34  E149                    3773mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A36  E949                    3774mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A38  E049                    3775mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A3A  E849                    3776mm         LSR.W   #4, D1      
00002A3C                          3777mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A3C  0C01 0009               3778mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A40  6E00 000A               3779mmm         BGT     ALPHA_264
00002A44  0601 0030               3780mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A48  6000 0006               3781mmm         BRA     DONE_264
00002A4C  0601 0037               3782mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A50  4E71                    3783mmm DONE_264: NOP
00002A52                          3784mmm         ENDM
00002A52  4E4F                    3785mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A54                          3786mm         ENDM 
00002A54  3605                    3787m         MOVE.W  D5, D3
00002A56  6000 01A4               3788m         BRA     COMPLETE_219 
00002A5A                          3789m ADRABSOLUTEW_219:     
00002A5A  361A                    3790m         MOVE.W  (A2)+, D3
00002A5C                          3791mm         PRINTSIGN
00002A5C  103C 0006               3792mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A60  323C 0024               3793mm         MOVE.W  #36, D1     ; AN = SIGN
00002A64  4E4F                    3794mm         TRAP    #15         ; OUTPUT = SIGN
00002A66                          3795mm         ENDM
00002A66                          3796mm         ADROUT
00002A66  3212                    3797mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A68  E049                    3798mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A6A  E849                    3799mm         LSR.W   #4, D1      
00002A6C                          3800mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A6C  0C01 0009               3801mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A70  6E00 000A               3802mmm         BGT     ALPHA_267
00002A74  0601 0030               3803mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A78  6000 0006               3804mmm         BRA     DONE_267
00002A7C  0601 0037               3805mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A80  4E71                    3806mmm DONE_267: NOP
00002A82                          3807mmm         ENDM
00002A82  4E4F                    3808mm         TRAP    #15         ; EXECUTE OUTPUT
00002A84                          3809mm         
00002A84  3212                    3810mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A86  E949                    3811mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A88  E049                    3812mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A8A  E849                    3813mm         LSR.W   #4, D1      
00002A8C                          3814mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A8C  0C01 0009               3815mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A90  6E00 000A               3816mmm         BGT     ALPHA_268
00002A94  0601 0030               3817mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A98  6000 0006               3818mmm         BRA     DONE_268
00002A9C  0601 0037               3819mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AA0  4E71                    3820mmm DONE_268: NOP
00002AA2                          3821mmm         ENDM
00002AA2  4E4F                    3822mm         TRAP    #15         ; EXECUTE OUTPUT
00002AA4                          3823mm         
00002AA4  3212                    3824mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AA6  E149                    3825mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AA8  E049                    3826mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AAA  E849                    3827mm         LSR.W   #4, D1      
00002AAC                          3828mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AAC  0C01 0009               3829mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AB0  6E00 000A               3830mmm         BGT     ALPHA_269
00002AB4  0601 0030               3831mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AB8  6000 0006               3832mmm         BRA     DONE_269
00002ABC  0601 0037               3833mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AC0  4E71                    3834mmm DONE_269: NOP
00002AC2                          3835mmm         ENDM
00002AC2  4E4F                    3836mm         TRAP    #15         ; EXECUTE OUTPUT
00002AC4                          3837mm         
00002AC4  3212                    3838mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AC6  E149                    3839mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AC8  E949                    3840mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002ACA  E049                    3841mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002ACC  E849                    3842mm         LSR.W   #4, D1      
00002ACE                          3843mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ACE  0C01 0009               3844mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AD2  6E00 000A               3845mmm         BGT     ALPHA_270
00002AD6  0601 0030               3846mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002ADA  6000 0006               3847mmm         BRA     DONE_270
00002ADE  0601 0037               3848mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AE2  4E71                    3849mmm DONE_270: NOP
00002AE4                          3850mmm         ENDM
00002AE4  4E4F                    3851mm         TRAP    #15         ; EXECUTE OUTPUT       
00002AE6                          3852mm         ENDM 
00002AE6  3605                    3853m         MOVE.W  D5, D3
00002AE8  6000 0112               3854m         BRA     COMPLETE_219  
00002AEC                          3855m ADRABSOLUTEL_219:  
00002AEC  361A                    3856m         MOVE.W  (A2)+, D3
00002AEE                          3857mm         PRINTSIGN
00002AEE  103C 0006               3858mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AF2  323C 0024               3859mm         MOVE.W  #36, D1     ; AN = SIGN
00002AF6  4E4F                    3860mm         TRAP    #15         ; OUTPUT = SIGN
00002AF8                          3861mm         ENDM
00002AF8                          3862mm         ADROUT 
00002AF8  3212                    3863mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AFA  E049                    3864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AFC  E849                    3865mm         LSR.W   #4, D1      
00002AFE                          3866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AFE  0C01 0009               3867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B02  6E00 000A               3868mmm         BGT     ALPHA_273
00002B06  0601 0030               3869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B0A  6000 0006               3870mmm         BRA     DONE_273
00002B0E  0601 0037               3871mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B12  4E71                    3872mmm DONE_273: NOP
00002B14                          3873mmm         ENDM
00002B14  4E4F                    3874mm         TRAP    #15         ; EXECUTE OUTPUT
00002B16                          3875mm         
00002B16  3212                    3876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B18  E949                    3877mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B1A  E049                    3878mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1C  E849                    3879mm         LSR.W   #4, D1      
00002B1E                          3880mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1E  0C01 0009               3881mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B22  6E00 000A               3882mmm         BGT     ALPHA_274
00002B26  0601 0030               3883mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B2A  6000 0006               3884mmm         BRA     DONE_274
00002B2E  0601 0037               3885mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B32  4E71                    3886mmm DONE_274: NOP
00002B34                          3887mmm         ENDM
00002B34  4E4F                    3888mm         TRAP    #15         ; EXECUTE OUTPUT
00002B36                          3889mm         
00002B36  3212                    3890mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B38  E149                    3891mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B3A  E049                    3892mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    3893mm         LSR.W   #4, D1      
00002B3E                          3894mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               3895mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               3896mmm         BGT     ALPHA_275
00002B46  0601 0030               3897mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               3898mmm         BRA     DONE_275
00002B4E  0601 0037               3899mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    3900mmm DONE_275: NOP
00002B54                          3901mmm         ENDM
00002B54  4E4F                    3902mm         TRAP    #15         ; EXECUTE OUTPUT
00002B56                          3903mm         
00002B56  3212                    3904mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B58  E149                    3905mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B5A  E949                    3906mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B5C  E049                    3907mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B5E  E849                    3908mm         LSR.W   #4, D1      
00002B60                          3909mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B60  0C01 0009               3910mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B64  6E00 000A               3911mmm         BGT     ALPHA_276
00002B68  0601 0030               3912mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B6C  6000 0006               3913mmm         BRA     DONE_276
00002B70  0601 0037               3914mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B74  4E71                    3915mmm DONE_276: NOP
00002B76                          3916mmm         ENDM
00002B76  4E4F                    3917mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B78                          3918mm         ENDM 
00002B78  361A                    3919m         MOVE.W  (A2)+, D3
00002B7A                          3920mm         ADROUT
00002B7A  3212                    3921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B7C  E049                    3922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7E  E849                    3923mm         LSR.W   #4, D1      
00002B80                          3924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B80  0C01 0009               3925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B84  6E00 000A               3926mmm         BGT     ALPHA_278
00002B88  0601 0030               3927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B8C  6000 0006               3928mmm         BRA     DONE_278
00002B90  0601 0037               3929mmm ALPHA_278: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B94  4E71                    3930mmm DONE_278: NOP
00002B96                          3931mmm         ENDM
00002B96  4E4F                    3932mm         TRAP    #15         ; EXECUTE OUTPUT
00002B98                          3933mm         
00002B98  3212                    3934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B9A  E949                    3935mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B9C  E049                    3936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B9E  E849                    3937mm         LSR.W   #4, D1      
00002BA0                          3938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BA0  0C01 0009               3939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BA4  6E00 000A               3940mmm         BGT     ALPHA_279
00002BA8  0601 0030               3941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BAC  6000 0006               3942mmm         BRA     DONE_279
00002BB0  0601 0037               3943mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BB4  4E71                    3944mmm DONE_279: NOP
00002BB6                          3945mmm         ENDM
00002BB6  4E4F                    3946mm         TRAP    #15         ; EXECUTE OUTPUT
00002BB8                          3947mm         
00002BB8  3212                    3948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BBA  E149                    3949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BBC  E049                    3950mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BBE  E849                    3951mm         LSR.W   #4, D1      
00002BC0                          3952mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BC0  0C01 0009               3953mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BC4  6E00 000A               3954mmm         BGT     ALPHA_280
00002BC8  0601 0030               3955mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BCC  6000 0006               3956mmm         BRA     DONE_280
00002BD0  0601 0037               3957mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BD4  4E71                    3958mmm DONE_280: NOP
00002BD6                          3959mmm         ENDM
00002BD6  4E4F                    3960mm         TRAP    #15         ; EXECUTE OUTPUT
00002BD8                          3961mm         
00002BD8  3212                    3962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BDA  E149                    3963mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BDC  E949                    3964mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BDE  E049                    3965mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BE0  E849                    3966mm         LSR.W   #4, D1      
00002BE2                          3967mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BE2  0C01 0009               3968mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BE6  6E00 000A               3969mmm         BGT     ALPHA_281
00002BEA  0601 0030               3970mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BEE  6000 0006               3971mmm         BRA     DONE_281
00002BF2  0601 0037               3972mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BF6  4E71                    3973mmm DONE_281: NOP
00002BF8                          3974mmm         ENDM
00002BF8  4E4F                    3975mm         TRAP    #15         ; EXECUTE OUTPUT       
00002BFA                          3976mm         ENDM 
00002BFA  3605                    3977m         MOVE.W  D5, D3
00002BFC                          3978m 
00002BFC                          3979m COMPLETE_219:  ; OPCODE HAS BEEN VERIFIED
00002BFC                          3980m         ENDM
00002BFC                          3981m         printComma
00002BFC  43F8 00C9               3982m         LEA     OCOMMA, A1     
00002C00  103C 000E               3983m         MOVE.B  #14,D0          
00002C04  4E4F                    3984m         TRAP    #15
00002C06                          3985m         ENDM
00002C06                          3986m         printDnDest     D3
00002C06  3203                    3987m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002C08  E949                    3988m         LSL     #$04, D1
00002C0A  E049                    3989m         LSR     #$08, D1
00002C0C  EA49                    3990m         LSR     #$05, D1
00002C0E  43F8 00C1               3991m         LEA     ODN, A1     
00002C12  103C 000E               3992m         MOVE.B  #14,D0          
00002C16  4E4F                    3993m         TRAP    #15
00002C18  103C 0003               3994m         MOVE.B  #3,D0          
00002C1C  4E4F                    3995m         TRAP    #15
00002C1E                          3996m         ENDM
00002C1E                          3997  decodeADDcomp:
00002C1E  4E75                    3998          RTS                ; Return from decodeADD subroutine
00002C20                          3999  
00002C20                          4000  
00002C20                          4001  ; ------------------------------------------------------------
00002C20                          4002  ; 5. "decodeSUB" subroutine
00002C20                          4003  ; AUTHOR
00002C20                          4004  ;
00002C20                          4005  ; TODO: DESCRIPTION
00002C20                          4006  ; ------------------------------------------------------------
00002C20                          4007  decodeSUB:
00002C20                          4008m         verifyOpcode    pSUB, (A2)
00002C20  43F8 0118               4009m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002C24  3612                    4010m         MOVE.W  (A2), D3      ; INPUT VALUE
00002C26  123C 000F               4011m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002C2A                          4012m         
00002C2A                          4013m LOOP_284: 
00002C2A  0C11 0030               4014m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002C2E  6700 000E               4015m         BEQ     CHECKFOR0_284
00002C32  0C11 0031               4016m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002C36  6700 0010               4017m         BEQ     CHECKFOR1_284
00002C3A  6000 0012               4018m         BRA     NEXT_284      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002C3E                          4019m         
00002C3E                          4020m CHECKFOR0_284: 
00002C3E  0303                    4021m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002C40  6600 3F94               4022m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002C44  6000 0008               4023m         BRA     NEXT_284
00002C48                          4024m 
00002C48                          4025m CHECKFOR1_284:
00002C48  0303                    4026m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002C4A  6700 3F8A               4027m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002C4E                          4028m 
00002C4E                          4029m NEXT_284: 
00002C4E  B23C 0000               4030m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002C52  6700 0008               4031m         BEQ     COMPLETE_284  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002C56  5301                    4032m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002C58  1819                    4033m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002C5A  60CE                    4034m         BRA     LOOP_284      ; BEGIN LOOP AGAIN
00002C5C                          4035m 
00002C5C                          4036m COMPLETE_284:  ; OPCODE HAS BEEN VERIFIED
00002C5C                          4037m         ENDM
00002C5C  43F8 0073               4038          LEA     oSUB, A1     
00002C60  103C 000E               4039          MOVE.B  #14,D0          
00002C64  4E4F                    4040          TRAP    #15
00002C66                          4041m         printOpMode     (A2)
00002C66  3612                    4042m         MOVE.W  (A2), D3      
00002C68  123C 0008               4043m         MOVE.B  #8, D1    
00002C6C  4246                    4044m         CLR     D6
00002C6E                          4045m CHECKFORDESTDN_285: 
00002C6E  0303                    4046m         BTST    D1, D3      
00002C70  6600 0048               4047m         BNE     CHECKFORSRCDN_285
00002C74  4EB9 00002D44           4048m         JSR     NEXT_285
00002C7A  1C3C 0001               4049m         MOVE.B  #$1, D6
00002C7E  0303                    4050m         BTST    D1, D3      
00002C80  6700 0010               4051m         BEQ     DESTDNW_285
00002C84                          4052m DESTDNL_285:        
00002C84  43F8 00BD               4053m         LEA     OLSIZE, A1     
00002C88  103C 000E               4054m         MOVE.B  #14,D0          
00002C8C  4E4F                    4055m         TRAP    #15
00002C8E  6000 00B8               4056m         BRA     COMPLETE_285 
00002C92                          4057m DESTDNW_285: 
00002C92  4EB9 00002D44           4058m         JSR     NEXT_285
00002C98  0303                    4059m         BTST    D1, D3      
00002C9A  6700 0010               4060m         BEQ     DESTDNB_285
00002C9E  43F8 00B9               4061m         LEA     OWSIZE, A1     
00002CA2  103C 000E               4062m         MOVE.B  #14,D0          
00002CA6  4E4F                    4063m         TRAP    #15
00002CA8  6000 009E               4064m         BRA     COMPLETE_285 
00002CAC                          4065m DESTDNB_285: 
00002CAC  43F8 00B5               4066m         LEA     OBSIZE, A1     
00002CB0  103C 000E               4067m         MOVE.B  #14,D0          
00002CB4  4E4F                    4068m         TRAP    #15
00002CB6  6000 0090               4069m         BRA     COMPLETE_285 
00002CBA                          4070m CHECKFORSRCDN_285: 
00002CBA  4EB9 00002D44           4071m         JSR     NEXT_285
00002CC0  0303                    4072m         BTST    D1, D3      
00002CC2  6700 0028               4073m         BEQ     SRCDNW_285
00002CC6                          4074m SRCDNL_285:        
00002CC6  43F8 00BD               4075m         LEA     OLSIZE, A1     
00002CCA  103C 000E               4076m         MOVE.B  #14,D0          
00002CCE  4E4F                    4077m         TRAP    #15
00002CD0                          4078mm         PRINTDNDEST D3
00002CD0  3203                    4079mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002CD2  E949                    4080mm         LSL     #$04, D1
00002CD4  E049                    4081mm         LSR     #$08, D1
00002CD6  EA49                    4082mm         LSR     #$05, D1
00002CD8  43F8 00C1               4083mm         LEA     ODN, A1     
00002CDC  103C 000E               4084mm         MOVE.B  #14,D0          
00002CE0  4E4F                    4085mm         TRAP    #15
00002CE2  103C 0003               4086mm         MOVE.B  #3,D0          
00002CE6  4E4F                    4087mm         TRAP    #15
00002CE8                          4088mm         ENDM
00002CE8  6000 005E               4089m         BRA     COMPLETE_285 
00002CEC                          4090m SRCDNW_285:
00002CEC  4EB9 00002D44           4091m         JSR     NEXT_285
00002CF2  0303                    4092m         BTST    D1, D3     
00002CF4  6700 0028               4093m         BEQ     SRCDNB_285
00002CF8  43F8 00B9               4094m         LEA     OWSIZE, A1     
00002CFC  103C 000E               4095m         MOVE.B  #14,D0          
00002D00  4E4F                    4096m         TRAP    #15
00002D02                          4097mm         PRINTDNDEST D3
00002D02  3203                    4098mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D04  E949                    4099mm         LSL     #$04, D1
00002D06  E049                    4100mm         LSR     #$08, D1
00002D08  EA49                    4101mm         LSR     #$05, D1
00002D0A  43F8 00C1               4102mm         LEA     ODN, A1     
00002D0E  103C 000E               4103mm         MOVE.B  #14,D0          
00002D12  4E4F                    4104mm         TRAP    #15
00002D14  103C 0003               4105mm         MOVE.B  #3,D0          
00002D18  4E4F                    4106mm         TRAP    #15
00002D1A                          4107mm         ENDM
00002D1A  6000 002C               4108m         BRA     COMPLETE_285 
00002D1E                          4109m SRCDNB_285: 
00002D1E  43F8 00B5               4110m         LEA     OBSIZE, A1     
00002D22  103C 000E               4111m         MOVE.B  #14,D0          
00002D26  4E4F                    4112m         TRAP    #15
00002D28                          4113mm         PRINTDNDEST D3
00002D28  3203                    4114mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D2A  E949                    4115mm         LSL     #$04, D1
00002D2C  E049                    4116mm         LSR     #$08, D1
00002D2E  EA49                    4117mm         LSR     #$05, D1
00002D30  43F8 00C1               4118mm         LEA     ODN, A1     
00002D34  103C 000E               4119mm         MOVE.B  #14,D0          
00002D38  4E4F                    4120mm         TRAP    #15
00002D3A  103C 0003               4121mm         MOVE.B  #3,D0          
00002D3E  4E4F                    4122mm         TRAP    #15
00002D40                          4123mm         ENDM
00002D40  6000 0006               4124m         BRA     COMPLETE_285 
00002D44                          4125m 
00002D44                          4126m NEXT_285:
00002D44  5301                    4127m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D46  4E75                    4128m         RTS                
00002D48                          4129m 
00002D48                          4130m COMPLETE_285:  ; OPCODE HAS BEEN VERIFIED
00002D48                          4131m         ENDM
00002D48  BC3C 0001               4132          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002D4C  6700 05E0               4133          BEQ     decodeSubDestOp
00002D50                          4134m         printComma
00002D50  43F8 00C9               4135m         LEA     OCOMMA, A1     
00002D54  103C 000E               4136m         MOVE.B  #14,D0          
00002D58  4E4F                    4137m         TRAP    #15
00002D5A                          4138m         ENDM
00002D5A                          4139m         prepareAdrMode  #$0, (A2)
00002D5A  3C3C 0000               4140m         MOVE.W  #$0, D6      ; INPUT VALUE
00002D5E  3212                    4141m         MOVE.W  (A2), D1
00002D60  BC3C 0001               4142m         CMP.B   #$01, D6
00002D64  6700 000C               4143m         BEQ     ADRSOURCE_290    
00002D68                          4144m ADRDEST_290:
00002D68  EF49                    4145m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002D6A  E049                    4146m         LSR     #$08, D1
00002D6C  EA49                    4147m         LSR     #$05, D1
00002D6E  6000 000A               4148m         BRA     COMPLETE_290 
00002D72                          4149m ADRSOURCE_290:                
00002D72  E149                    4150m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002D74  E549                    4151m         LSL     #$02, D1
00002D76  E049                    4152m         LSR     #$08, D1
00002D78  EA49                    4153m         LSR     #$05, D1
00002D7A                          4154m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D7A                          4155m         ENDM        
00002D7A                          4156m         decodeAdrMode   (A2), D1
00002D7A  3612                    4157m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002D7C  3201                    4158m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002D7E                          4159m 
00002D7E  B23C 0001               4160m         CMP.B   #$01, D1
00002D82  6700 0066               4161m         BEQ     ADRREGDIRECT_291    
00002D86  B23C 0002               4162m         CMP.B   #$02, D1
00002D8A  6700 00A0               4163m         BEQ     ADRREGINDIRECT_291  
00002D8E  B23C 0003               4164m         CMP.B   #$03, D1
00002D92  6700 0102               4165m         BEQ     ADRREGPOSTINC_291  
00002D96  B23C 0004               4166m         CMP.B   #$04, D1
00002D9A  6700 0178               4167m         BEQ     ADRREGPREDEC_291
00002D9E  B23C 0007               4168m         CMP.B   #$07, D1
00002DA2  6700 01EE               4169m         BEQ     ADRABSOLUTE_291    
00002DA6                          4170m         
00002DA6                          4171m DATAREGDIRECT_291: 
00002DA6  BC3C 0001               4172m         CMP.B   #$01, D6
00002DAA  6700 001E               4173m         BEQ     DATAREGDIRECTSRC_291   
00002DAE                          4174m DATAREGDIRECTDEST_291: 
00002DAE                          4175mm         PRINTDNDEST D3 
00002DAE  3203                    4176mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DB0  E949                    4177mm         LSL     #$04, D1
00002DB2  E049                    4178mm         LSR     #$08, D1
00002DB4  EA49                    4179mm         LSR     #$05, D1
00002DB6  43F8 00C1               4180mm         LEA     ODN, A1     
00002DBA  103C 000E               4181mm         MOVE.B  #14,D0          
00002DBE  4E4F                    4182mm         TRAP    #15
00002DC0  103C 0003               4183mm         MOVE.B  #3,D0          
00002DC4  4E4F                    4184mm         TRAP    #15
00002DC6                          4185mm         ENDM
00002DC6  6000 0562               4186m         BRA     COMPLETE_291 
00002DCA                          4187m DATAREGDIRECTSRC_291: 
00002DCA                          4188mm         PRINTDNSRC D3 
00002DCA  4281                    4189mm         CLR.L   D1
00002DCC  3203                    4190mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002DCE  E149                    4191mm         LSL     #$08, D1
00002DD0  EB49                    4192mm         LSL     #$05, D1
00002DD2  E049                    4193mm         LSR     #$08, D1
00002DD4  EA49                    4194mm         LSR     #$05, D1
00002DD6  43F8 00C1               4195mm         LEA     ODN, A1     
00002DDA  103C 000E               4196mm         MOVE.B  #14,D0          
00002DDE  4E4F                    4197mm         TRAP    #15
00002DE0  103C 0003               4198mm         MOVE.B  #3,D0          
00002DE4  4E4F                    4199mm         TRAP    #15
00002DE6                          4200mm         ENDM
00002DE6  6000 0542               4201m         BRA     COMPLETE_291   
00002DEA                          4202m         
00002DEA                          4203m ADRREGDIRECT_291: 
00002DEA  BC3C 0001               4204m         CMP.B   #$01, D6
00002DEE  6700 001E               4205m         BEQ     ADRREGDIRECTSRC_291   
00002DF2                          4206m ADRREGDIRECTDEST_291:
00002DF2                          4207mm         PRINTANDEST D3
00002DF2  3203                    4208mm         MOVE.W  D3, D1
00002DF4  E949                    4209mm         LSL     #$04, D1
00002DF6  E049                    4210mm         LSR     #$08, D1
00002DF8  EA49                    4211mm         LSR     #$05, D1
00002DFA  43F8 00C3               4212mm         LEA     OAN, A1     
00002DFE  103C 000E               4213mm         MOVE.B  #14,D0          
00002E02  4E4F                    4214mm         TRAP    #15
00002E04  103C 0003               4215mm         MOVE.B  #3,D0          
00002E08  4E4F                    4216mm         TRAP    #15
00002E0A                          4217mm         ENDM
00002E0A  6000 051E               4218m         BRA     COMPLETE_291   
00002E0E                          4219m ADRREGDIRECTSRC_291:
00002E0E                          4220mm         PRINTANSRC D3
00002E0E  3203                    4221mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E10  E149                    4222mm         LSL     #$08, D1
00002E12  EB49                    4223mm         LSL     #$05, D1
00002E14  E049                    4224mm         LSR     #$08, D1
00002E16  EA49                    4225mm         LSR     #$05, D1
00002E18  43F8 00C3               4226mm         LEA     OAN, A1     
00002E1C  103C 000E               4227mm         MOVE.B  #14,D0          
00002E20  4E4F                    4228mm         TRAP    #15
00002E22  103C 0003               4229mm         MOVE.B  #3,D0          
00002E26  4E4F                    4230mm         TRAP    #15
00002E28                          4231mm         ENDM
00002E28  6000 0500               4232m         BRA     COMPLETE_291   
00002E2C                          4233m        
00002E2C                          4234m ADRREGINDIRECT_291:   
00002E2C  BC3C 0001               4235m         CMP.B   #$01, D6
00002E30  6700 0032               4236m         BEQ     ADRREGINDIRECTSRC_291   
00002E34                          4237m ADRREGINDIRECTDEST_291:
00002E34                          4238mm         PRINTLB
00002E34  43F8 00C5               4239mm         LEA     OLB, A1     
00002E38  103C 000E               4240mm         MOVE.B  #14,D0          
00002E3C  4E4F                    4241mm         TRAP    #15
00002E3E                          4242mm         ENDM
00002E3E                          4243mm         PRINTANDEST D3  
00002E3E  3203                    4244mm         MOVE.W  D3, D1
00002E40  E949                    4245mm         LSL     #$04, D1
00002E42  E049                    4246mm         LSR     #$08, D1
00002E44  EA49                    4247mm         LSR     #$05, D1
00002E46  43F8 00C3               4248mm         LEA     OAN, A1     
00002E4A  103C 000E               4249mm         MOVE.B  #14,D0          
00002E4E  4E4F                    4250mm         TRAP    #15
00002E50  103C 0003               4251mm         MOVE.B  #3,D0          
00002E54  4E4F                    4252mm         TRAP    #15
00002E56                          4253mm         ENDM
00002E56                          4254mm         PRINTRB
00002E56  43F8 00C7               4255mm         LEA     ORB, A1     
00002E5A  103C 000E               4256mm         MOVE.B  #14,D0          
00002E5E  4E4F                    4257mm         TRAP    #15
00002E60                          4258mm         ENDM
00002E60  6000 04C8               4259m         BRA     COMPLETE_291     
00002E64                          4260m ADRREGINDIRECTSRC_291:   
00002E64                          4261mm         PRINTLB
00002E64  43F8 00C5               4262mm         LEA     OLB, A1     
00002E68  103C 000E               4263mm         MOVE.B  #14,D0          
00002E6C  4E4F                    4264mm         TRAP    #15
00002E6E                          4265mm         ENDM
00002E6E                          4266mm         PRINTANSRC D3  
00002E6E  3203                    4267mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E70  E149                    4268mm         LSL     #$08, D1
00002E72  EB49                    4269mm         LSL     #$05, D1
00002E74  E049                    4270mm         LSR     #$08, D1
00002E76  EA49                    4271mm         LSR     #$05, D1
00002E78  43F8 00C3               4272mm         LEA     OAN, A1     
00002E7C  103C 000E               4273mm         MOVE.B  #14,D0          
00002E80  4E4F                    4274mm         TRAP    #15
00002E82  103C 0003               4275mm         MOVE.B  #3,D0          
00002E86  4E4F                    4276mm         TRAP    #15
00002E88                          4277mm         ENDM
00002E88                          4278mm         PRINTRB
00002E88  43F8 00C7               4279mm         LEA     ORB, A1     
00002E8C  103C 000E               4280mm         MOVE.B  #14,D0          
00002E90  4E4F                    4281mm         TRAP    #15
00002E92                          4282mm         ENDM
00002E92  6000 0496               4283m         BRA     COMPLETE_291   
00002E96                          4284m         
00002E96                          4285m ADRREGPOSTINC_291:   
00002E96  BC3C 0001               4286m         CMP.B   #$01, D6
00002E9A  6700 003C               4287m         BEQ     ADRREGPOSTINCSRC_291   
00002E9E                          4288m ADRREGPOSTINCDEST_291: 
00002E9E                          4289mm         PRINTLB
00002E9E  43F8 00C5               4290mm         LEA     OLB, A1     
00002EA2  103C 000E               4291mm         MOVE.B  #14,D0          
00002EA6  4E4F                    4292mm         TRAP    #15
00002EA8                          4293mm         ENDM
00002EA8                          4294mm         PRINTANDEST D3  
00002EA8  3203                    4295mm         MOVE.W  D3, D1
00002EAA  E949                    4296mm         LSL     #$04, D1
00002EAC  E049                    4297mm         LSR     #$08, D1
00002EAE  EA49                    4298mm         LSR     #$05, D1
00002EB0  43F8 00C3               4299mm         LEA     OAN, A1     
00002EB4  103C 000E               4300mm         MOVE.B  #14,D0          
00002EB8  4E4F                    4301mm         TRAP    #15
00002EBA  103C 0003               4302mm         MOVE.B  #3,D0          
00002EBE  4E4F                    4303mm         TRAP    #15
00002EC0                          4304mm         ENDM
00002EC0                          4305mm         PRINTRB
00002EC0  43F8 00C7               4306mm         LEA     ORB, A1     
00002EC4  103C 000E               4307mm         MOVE.B  #14,D0          
00002EC8  4E4F                    4308mm         TRAP    #15
00002ECA                          4309mm         ENDM
00002ECA                          4310mm         PRINTPI
00002ECA  43F8 00CE               4311mm         LEA     OPSTINC, A1     
00002ECE  103C 000E               4312mm         MOVE.B  #14,D0          
00002ED2  4E4F                    4313mm         TRAP    #15
00002ED4                          4314mm         ENDM
00002ED4  6000 0454               4315m         BRA     COMPLETE_291  
00002ED8                          4316m ADRREGPOSTINCSRC_291:           
00002ED8                          4317mm         PRINTLB
00002ED8  43F8 00C5               4318mm         LEA     OLB, A1     
00002EDC  103C 000E               4319mm         MOVE.B  #14,D0          
00002EE0  4E4F                    4320mm         TRAP    #15
00002EE2                          4321mm         ENDM
00002EE2                          4322mm         PRINTANSRC D3  
00002EE2  3203                    4323mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EE4  E149                    4324mm         LSL     #$08, D1
00002EE6  EB49                    4325mm         LSL     #$05, D1
00002EE8  E049                    4326mm         LSR     #$08, D1
00002EEA  EA49                    4327mm         LSR     #$05, D1
00002EEC  43F8 00C3               4328mm         LEA     OAN, A1     
00002EF0  103C 000E               4329mm         MOVE.B  #14,D0          
00002EF4  4E4F                    4330mm         TRAP    #15
00002EF6  103C 0003               4331mm         MOVE.B  #3,D0          
00002EFA  4E4F                    4332mm         TRAP    #15
00002EFC                          4333mm         ENDM
00002EFC                          4334mm         PRINTRB
00002EFC  43F8 00C7               4335mm         LEA     ORB, A1     
00002F00  103C 000E               4336mm         MOVE.B  #14,D0          
00002F04  4E4F                    4337mm         TRAP    #15
00002F06                          4338mm         ENDM
00002F06                          4339mm         PRINTPI
00002F06  43F8 00CE               4340mm         LEA     OPSTINC, A1     
00002F0A  103C 000E               4341mm         MOVE.B  #14,D0          
00002F0E  4E4F                    4342mm         TRAP    #15
00002F10                          4343mm         ENDM
00002F10  6000 0418               4344m         BRA     COMPLETE_291  
00002F14                          4345m ADRREGPREDEC_291: 
00002F14  BC3C 0001               4346m         CMP.B   #$01, D6
00002F18  6700 003C               4347m         BEQ     ADRREGPREDECSRC_291   
00002F1C                          4348m ADRREGPREDECDEST_291:
00002F1C                          4349mm         PRINTPD  
00002F1C  43F8 00CC               4350mm         LEA     OPREDEC, A1     
00002F20  103C 000E               4351mm         MOVE.B  #14,D0          
00002F24  4E4F                    4352mm         TRAP    #15
00002F26                          4353mm         ENDM
00002F26                          4354mm         PRINTLB
00002F26  43F8 00C5               4355mm         LEA     OLB, A1     
00002F2A  103C 000E               4356mm         MOVE.B  #14,D0          
00002F2E  4E4F                    4357mm         TRAP    #15
00002F30                          4358mm         ENDM
00002F30                          4359mm         PRINTANDEST D3  
00002F30  3203                    4360mm         MOVE.W  D3, D1
00002F32  E949                    4361mm         LSL     #$04, D1
00002F34  E049                    4362mm         LSR     #$08, D1
00002F36  EA49                    4363mm         LSR     #$05, D1
00002F38  43F8 00C3               4364mm         LEA     OAN, A1     
00002F3C  103C 000E               4365mm         MOVE.B  #14,D0          
00002F40  4E4F                    4366mm         TRAP    #15
00002F42  103C 0003               4367mm         MOVE.B  #3,D0          
00002F46  4E4F                    4368mm         TRAP    #15
00002F48                          4369mm         ENDM
00002F48                          4370mm         PRINTRB
00002F48  43F8 00C7               4371mm         LEA     ORB, A1     
00002F4C  103C 000E               4372mm         MOVE.B  #14,D0          
00002F50  4E4F                    4373mm         TRAP    #15
00002F52                          4374mm         ENDM
00002F52  6000 03D6               4375m         BRA     COMPLETE_291   
00002F56                          4376m ADRREGPREDECSRC_291: 
00002F56                          4377mm         PRINTPD  
00002F56  43F8 00CC               4378mm         LEA     OPREDEC, A1     
00002F5A  103C 000E               4379mm         MOVE.B  #14,D0          
00002F5E  4E4F                    4380mm         TRAP    #15
00002F60                          4381mm         ENDM
00002F60                          4382mm         PRINTLB
00002F60  43F8 00C5               4383mm         LEA     OLB, A1     
00002F64  103C 000E               4384mm         MOVE.B  #14,D0          
00002F68  4E4F                    4385mm         TRAP    #15
00002F6A                          4386mm         ENDM
00002F6A                          4387mm         PRINTANSRC D3  
00002F6A  3203                    4388mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F6C  E149                    4389mm         LSL     #$08, D1
00002F6E  EB49                    4390mm         LSL     #$05, D1
00002F70  E049                    4391mm         LSR     #$08, D1
00002F72  EA49                    4392mm         LSR     #$05, D1
00002F74  43F8 00C3               4393mm         LEA     OAN, A1     
00002F78  103C 000E               4394mm         MOVE.B  #14,D0          
00002F7C  4E4F                    4395mm         TRAP    #15
00002F7E  103C 0003               4396mm         MOVE.B  #3,D0          
00002F82  4E4F                    4397mm         TRAP    #15
00002F84                          4398mm         ENDM
00002F84                          4399mm         PRINTRB
00002F84  43F8 00C7               4400mm         LEA     ORB, A1     
00002F88  103C 000E               4401mm         MOVE.B  #14,D0          
00002F8C  4E4F                    4402mm         TRAP    #15
00002F8E                          4403mm         ENDM
00002F8E  6000 039A               4404m         BRA     COMPLETE_291
00002F92                          4405m        
00002F92                          4406m ADRABSOLUTE_291:
00002F92  BC3C 0001               4407m         CMP.B   #$01, D6
00002F96  6600 0018               4408m         BNE     ADRABSOLUTEDST_291 
00002F9A                          4409m         
00002F9A  3A03                    4410m         MOVE.W  D3, D5
00002F9C  0803 0002               4411m         BTST    #2, D3
00002FA0  6600 0024               4412m         BNE     ADRIMMEDIATE_291
00002FA4  0803 0000               4413m         BTST    #0, D3
00002FA8  6600 0270               4414m         BNE     ADRABSOLUTEL_291
00002FAC  6000 01DA               4415m         BRA     ADRABSOLUTEW_291
00002FB0                          4416m ADRABSOLUTEDST_291:
00002FB0  3A03                    4417m         MOVE.W  D3, D5
00002FB2  0803 000B               4418m         BTST    #$B, D3
00002FB6  6600 000E               4419m         BNE     ADRIMMEDIATE_291
00002FBA  0803 0009               4420m         BTST    #$09, D3
00002FBE  6600 025A               4421m         BNE     ADRABSOLUTEL_291
00002FC2  6000 01C4               4422m         BRA     ADRABSOLUTEW_291
00002FC6                          4423m ADRIMMEDIATE_291:
00002FC6  BE3C 0001               4424m         CMP.B   #1, D7
00002FCA  6700 009E               4425m         BEQ     ADRIMMEDIATEL_291
00002FCE                          4426m ADRIMMEDIATEW_291:
00002FCE  361A                    4427m         MOVE.W  (A2)+, D3
00002FD0                          4428mm         PRINTHASH
00002FD0  103C 0006               4429mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FD4  323C 0023               4430mm         MOVE.W  #35, D1     ; AN = SIGN
00002FD8  4E4F                    4431mm         TRAP    #15         ; OUTPUT = SIGN
00002FDA                          4432mm         ENDM
00002FDA                          4433mm         PRINTSIGN
00002FDA  103C 0006               4434mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FDE  323C 0024               4435mm         MOVE.W  #36, D1     ; AN = SIGN
00002FE2  4E4F                    4436mm         TRAP    #15         ; OUTPUT = SIGN
00002FE4                          4437mm         ENDM
00002FE4                          4438mm         ADROUT
00002FE4  3212                    4439mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002FE6  E049                    4440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002FE8  E849                    4441mm         LSR.W   #4, D1      
00002FEA                          4442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002FEA  0C01 0009               4443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002FEE  6E00 000A               4444mmm         BGT     ALPHA_321
00002FF2  0601 0030               4445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002FF6  6000 0006               4446mmm         BRA     DONE_321
00002FFA  0601 0037               4447mmm ALPHA_321: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002FFE  4E71                    4448mmm DONE_321: NOP
00003000                          4449mmm         ENDM
00003000  4E4F                    4450mm         TRAP    #15         ; EXECUTE OUTPUT
00003002                          4451mm         
00003002  3212                    4452mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003004  E949                    4453mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003006  E049                    4454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003008  E849                    4455mm         LSR.W   #4, D1      
0000300A                          4456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000300A  0C01 0009               4457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000300E  6E00 000A               4458mmm         BGT     ALPHA_322
00003012  0601 0030               4459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003016  6000 0006               4460mmm         BRA     DONE_322
0000301A  0601 0037               4461mmm ALPHA_322: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000301E  4E71                    4462mmm DONE_322: NOP
00003020                          4463mmm         ENDM
00003020  4E4F                    4464mm         TRAP    #15         ; EXECUTE OUTPUT
00003022                          4465mm         
00003022  3212                    4466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003024  E149                    4467mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003026  E049                    4468mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003028  E849                    4469mm         LSR.W   #4, D1      
0000302A                          4470mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000302A  0C01 0009               4471mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000302E  6E00 000A               4472mmm         BGT     ALPHA_323
00003032  0601 0030               4473mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003036  6000 0006               4474mmm         BRA     DONE_323
0000303A  0601 0037               4475mmm ALPHA_323: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000303E  4E71                    4476mmm DONE_323: NOP
00003040                          4477mmm         ENDM
00003040  4E4F                    4478mm         TRAP    #15         ; EXECUTE OUTPUT
00003042                          4479mm         
00003042  3212                    4480mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003044  E149                    4481mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003046  E949                    4482mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003048  E049                    4483mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000304A  E849                    4484mm         LSR.W   #4, D1      
0000304C                          4485mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000304C  0C01 0009               4486mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003050  6E00 000A               4487mmm         BGT     ALPHA_324
00003054  0601 0030               4488mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003058  6000 0006               4489mmm         BRA     DONE_324
0000305C  0601 0037               4490mmm ALPHA_324: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003060  4E71                    4491mmm DONE_324: NOP
00003062                          4492mmm         ENDM
00003062  4E4F                    4493mm         TRAP    #15         ; EXECUTE OUTPUT       
00003064                          4494mm         ENDM 
00003064  3605                    4495m         MOVE.W  D5, D3
00003066  6000 02C2               4496m         BRA     COMPLETE_291
0000306A                          4497m ADRIMMEDIATEL_291:
0000306A  361A                    4498m         MOVE.W  (A2)+, D3
0000306C                          4499mm         PRINTHASH
0000306C  103C 0006               4500mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003070  323C 0023               4501mm         MOVE.W  #35, D1     ; AN = SIGN
00003074  4E4F                    4502mm         TRAP    #15         ; OUTPUT = SIGN
00003076                          4503mm         ENDM
00003076                          4504mm         PRINTSIGN
00003076  103C 0006               4505mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000307A  323C 0024               4506mm         MOVE.W  #36, D1     ; AN = SIGN
0000307E  4E4F                    4507mm         TRAP    #15         ; OUTPUT = SIGN
00003080                          4508mm         ENDM
00003080                          4509mm         ADROUT 
00003080  3212                    4510mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003082  E049                    4511mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003084  E849                    4512mm         LSR.W   #4, D1      
00003086                          4513mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003086  0C01 0009               4514mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000308A  6E00 000A               4515mmm         BGT     ALPHA_328
0000308E  0601 0030               4516mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003092  6000 0006               4517mmm         BRA     DONE_328
00003096  0601 0037               4518mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000309A  4E71                    4519mmm DONE_328: NOP
0000309C                          4520mmm         ENDM
0000309C  4E4F                    4521mm         TRAP    #15         ; EXECUTE OUTPUT
0000309E                          4522mm         
0000309E  3212                    4523mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030A0  E949                    4524mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000030A2  E049                    4525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030A4  E849                    4526mm         LSR.W   #4, D1      
000030A6                          4527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030A6  0C01 0009               4528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030AA  6E00 000A               4529mmm         BGT     ALPHA_329
000030AE  0601 0030               4530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030B2  6000 0006               4531mmm         BRA     DONE_329
000030B6  0601 0037               4532mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030BA  4E71                    4533mmm DONE_329: NOP
000030BC                          4534mmm         ENDM
000030BC  4E4F                    4535mm         TRAP    #15         ; EXECUTE OUTPUT
000030BE                          4536mm         
000030BE  3212                    4537mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030C0  E149                    4538mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030C2  E049                    4539mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030C4  E849                    4540mm         LSR.W   #4, D1      
000030C6                          4541mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030C6  0C01 0009               4542mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030CA  6E00 000A               4543mmm         BGT     ALPHA_330
000030CE  0601 0030               4544mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030D2  6000 0006               4545mmm         BRA     DONE_330
000030D6  0601 0037               4546mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030DA  4E71                    4547mmm DONE_330: NOP
000030DC                          4548mmm         ENDM
000030DC  4E4F                    4549mm         TRAP    #15         ; EXECUTE OUTPUT
000030DE                          4550mm         
000030DE  3212                    4551mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030E0  E149                    4552mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030E2  E949                    4553mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000030E4  E049                    4554mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030E6  E849                    4555mm         LSR.W   #4, D1      
000030E8                          4556mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030E8  0C01 0009               4557mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030EC  6E00 000A               4558mmm         BGT     ALPHA_331
000030F0  0601 0030               4559mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030F4  6000 0006               4560mmm         BRA     DONE_331
000030F8  0601 0037               4561mmm ALPHA_331: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030FC  4E71                    4562mmm DONE_331: NOP
000030FE                          4563mmm         ENDM
000030FE  4E4F                    4564mm         TRAP    #15         ; EXECUTE OUTPUT       
00003100                          4565mm         ENDM 
00003100  361A                    4566m         MOVE.W  (A2)+, D3
00003102                          4567mm         ADROUT
00003102  3212                    4568mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003104  E049                    4569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003106  E849                    4570mm         LSR.W   #4, D1      
00003108                          4571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003108  0C01 0009               4572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000310C  6E00 000A               4573mmm         BGT     ALPHA_333
00003110  0601 0030               4574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003114  6000 0006               4575mmm         BRA     DONE_333
00003118  0601 0037               4576mmm ALPHA_333: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000311C  4E71                    4577mmm DONE_333: NOP
0000311E                          4578mmm         ENDM
0000311E  4E4F                    4579mm         TRAP    #15         ; EXECUTE OUTPUT
00003120                          4580mm         
00003120  3212                    4581mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003122  E949                    4582mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003124  E049                    4583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003126  E849                    4584mm         LSR.W   #4, D1      
00003128                          4585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003128  0C01 0009               4586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312C  6E00 000A               4587mmm         BGT     ALPHA_334
00003130  0601 0030               4588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003134  6000 0006               4589mmm         BRA     DONE_334
00003138  0601 0037               4590mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313C  4E71                    4591mmm DONE_334: NOP
0000313E                          4592mmm         ENDM
0000313E  4E4F                    4593mm         TRAP    #15         ; EXECUTE OUTPUT
00003140                          4594mm         
00003140  3212                    4595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003142  E149                    4596mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003144  E049                    4597mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003146  E849                    4598mm         LSR.W   #4, D1      
00003148                          4599mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003148  0C01 0009               4600mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314C  6E00 000A               4601mmm         BGT     ALPHA_335
00003150  0601 0030               4602mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003154  6000 0006               4603mmm         BRA     DONE_335
00003158  0601 0037               4604mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315C  4E71                    4605mmm DONE_335: NOP
0000315E                          4606mmm         ENDM
0000315E  4E4F                    4607mm         TRAP    #15         ; EXECUTE OUTPUT
00003160                          4608mm         
00003160  3212                    4609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003162  E149                    4610mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003164  E949                    4611mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003166  E049                    4612mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003168  E849                    4613mm         LSR.W   #4, D1      
0000316A                          4614mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000316A  0C01 0009               4615mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316E  6E00 000A               4616mmm         BGT     ALPHA_336
00003172  0601 0030               4617mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003176  6000 0006               4618mmm         BRA     DONE_336
0000317A  0601 0037               4619mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317E  4E71                    4620mmm DONE_336: NOP
00003180                          4621mmm         ENDM
00003180  4E4F                    4622mm         TRAP    #15         ; EXECUTE OUTPUT       
00003182                          4623mm         ENDM 
00003182  3605                    4624m         MOVE.W  D5, D3
00003184  6000 01A4               4625m         BRA     COMPLETE_291 
00003188                          4626m ADRABSOLUTEW_291:     
00003188  361A                    4627m         MOVE.W  (A2)+, D3
0000318A                          4628mm         PRINTSIGN
0000318A  103C 0006               4629mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000318E  323C 0024               4630mm         MOVE.W  #36, D1     ; AN = SIGN
00003192  4E4F                    4631mm         TRAP    #15         ; OUTPUT = SIGN
00003194                          4632mm         ENDM
00003194                          4633mm         ADROUT
00003194  3212                    4634mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003196  E049                    4635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003198  E849                    4636mm         LSR.W   #4, D1      
0000319A                          4637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000319A  0C01 0009               4638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000319E  6E00 000A               4639mmm         BGT     ALPHA_339
000031A2  0601 0030               4640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031A6  6000 0006               4641mmm         BRA     DONE_339
000031AA  0601 0037               4642mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031AE  4E71                    4643mmm DONE_339: NOP
000031B0                          4644mmm         ENDM
000031B0  4E4F                    4645mm         TRAP    #15         ; EXECUTE OUTPUT
000031B2                          4646mm         
000031B2  3212                    4647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031B4  E949                    4648mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031B6  E049                    4649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031B8  E849                    4650mm         LSR.W   #4, D1      
000031BA                          4651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031BA  0C01 0009               4652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031BE  6E00 000A               4653mmm         BGT     ALPHA_340
000031C2  0601 0030               4654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031C6  6000 0006               4655mmm         BRA     DONE_340
000031CA  0601 0037               4656mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031CE  4E71                    4657mmm DONE_340: NOP
000031D0                          4658mmm         ENDM
000031D0  4E4F                    4659mm         TRAP    #15         ; EXECUTE OUTPUT
000031D2                          4660mm         
000031D2  3212                    4661mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031D4  E149                    4662mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031D6  E049                    4663mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031D8  E849                    4664mm         LSR.W   #4, D1      
000031DA                          4665mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031DA  0C01 0009               4666mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031DE  6E00 000A               4667mmm         BGT     ALPHA_341
000031E2  0601 0030               4668mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031E6  6000 0006               4669mmm         BRA     DONE_341
000031EA  0601 0037               4670mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031EE  4E71                    4671mmm DONE_341: NOP
000031F0                          4672mmm         ENDM
000031F0  4E4F                    4673mm         TRAP    #15         ; EXECUTE OUTPUT
000031F2                          4674mm         
000031F2  3212                    4675mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031F4  E149                    4676mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031F6  E949                    4677mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000031F8  E049                    4678mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031FA  E849                    4679mm         LSR.W   #4, D1      
000031FC                          4680mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031FC  0C01 0009               4681mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003200  6E00 000A               4682mmm         BGT     ALPHA_342
00003204  0601 0030               4683mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003208  6000 0006               4684mmm         BRA     DONE_342
0000320C  0601 0037               4685mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003210  4E71                    4686mmm DONE_342: NOP
00003212                          4687mmm         ENDM
00003212  4E4F                    4688mm         TRAP    #15         ; EXECUTE OUTPUT       
00003214                          4689mm         ENDM 
00003214  3605                    4690m         MOVE.W  D5, D3
00003216  6000 0112               4691m         BRA     COMPLETE_291  
0000321A                          4692m ADRABSOLUTEL_291:  
0000321A  361A                    4693m         MOVE.W  (A2)+, D3
0000321C                          4694mm         PRINTSIGN
0000321C  103C 0006               4695mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003220  323C 0024               4696mm         MOVE.W  #36, D1     ; AN = SIGN
00003224  4E4F                    4697mm         TRAP    #15         ; OUTPUT = SIGN
00003226                          4698mm         ENDM
00003226                          4699mm         ADROUT 
00003226  3212                    4700mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003228  E049                    4701mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000322A  E849                    4702mm         LSR.W   #4, D1      
0000322C                          4703mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000322C  0C01 0009               4704mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003230  6E00 000A               4705mmm         BGT     ALPHA_345
00003234  0601 0030               4706mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003238  6000 0006               4707mmm         BRA     DONE_345
0000323C  0601 0037               4708mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003240  4E71                    4709mmm DONE_345: NOP
00003242                          4710mmm         ENDM
00003242  4E4F                    4711mm         TRAP    #15         ; EXECUTE OUTPUT
00003244                          4712mm         
00003244  3212                    4713mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003246  E949                    4714mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003248  E049                    4715mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000324A  E849                    4716mm         LSR.W   #4, D1      
0000324C                          4717mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000324C  0C01 0009               4718mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003250  6E00 000A               4719mmm         BGT     ALPHA_346
00003254  0601 0030               4720mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003258  6000 0006               4721mmm         BRA     DONE_346
0000325C  0601 0037               4722mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003260  4E71                    4723mmm DONE_346: NOP
00003262                          4724mmm         ENDM
00003262  4E4F                    4725mm         TRAP    #15         ; EXECUTE OUTPUT
00003264                          4726mm         
00003264  3212                    4727mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003266  E149                    4728mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003268  E049                    4729mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000326A  E849                    4730mm         LSR.W   #4, D1      
0000326C                          4731mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000326C  0C01 0009               4732mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003270  6E00 000A               4733mmm         BGT     ALPHA_347
00003274  0601 0030               4734mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003278  6000 0006               4735mmm         BRA     DONE_347
0000327C  0601 0037               4736mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003280  4E71                    4737mmm DONE_347: NOP
00003282                          4738mmm         ENDM
00003282  4E4F                    4739mm         TRAP    #15         ; EXECUTE OUTPUT
00003284                          4740mm         
00003284  3212                    4741mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003286  E149                    4742mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003288  E949                    4743mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000328A  E049                    4744mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000328C  E849                    4745mm         LSR.W   #4, D1      
0000328E                          4746mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000328E  0C01 0009               4747mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003292  6E00 000A               4748mmm         BGT     ALPHA_348
00003296  0601 0030               4749mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329A  6000 0006               4750mmm         BRA     DONE_348
0000329E  0601 0037               4751mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A2  4E71                    4752mmm DONE_348: NOP
000032A4                          4753mmm         ENDM
000032A4  4E4F                    4754mm         TRAP    #15         ; EXECUTE OUTPUT       
000032A6                          4755mm         ENDM 
000032A6  361A                    4756m         MOVE.W  (A2)+, D3
000032A8                          4757mm         ADROUT
000032A8  3212                    4758mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032AA  E049                    4759mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032AC  E849                    4760mm         LSR.W   #4, D1      
000032AE                          4761mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032AE  0C01 0009               4762mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032B2  6E00 000A               4763mmm         BGT     ALPHA_350
000032B6  0601 0030               4764mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032BA  6000 0006               4765mmm         BRA     DONE_350
000032BE  0601 0037               4766mmm ALPHA_350: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032C2  4E71                    4767mmm DONE_350: NOP
000032C4                          4768mmm         ENDM
000032C4  4E4F                    4769mm         TRAP    #15         ; EXECUTE OUTPUT
000032C6                          4770mm         
000032C6  3212                    4771mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032C8  E949                    4772mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032CA  E049                    4773mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032CC  E849                    4774mm         LSR.W   #4, D1      
000032CE                          4775mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032CE  0C01 0009               4776mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032D2  6E00 000A               4777mmm         BGT     ALPHA_351
000032D6  0601 0030               4778mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032DA  6000 0006               4779mmm         BRA     DONE_351
000032DE  0601 0037               4780mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032E2  4E71                    4781mmm DONE_351: NOP
000032E4                          4782mmm         ENDM
000032E4  4E4F                    4783mm         TRAP    #15         ; EXECUTE OUTPUT
000032E6                          4784mm         
000032E6  3212                    4785mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E8  E149                    4786mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032EA  E049                    4787mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032EC  E849                    4788mm         LSR.W   #4, D1      
000032EE                          4789mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032EE  0C01 0009               4790mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032F2  6E00 000A               4791mmm         BGT     ALPHA_352
000032F6  0601 0030               4792mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032FA  6000 0006               4793mmm         BRA     DONE_352
000032FE  0601 0037               4794mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003302  4E71                    4795mmm DONE_352: NOP
00003304                          4796mmm         ENDM
00003304  4E4F                    4797mm         TRAP    #15         ; EXECUTE OUTPUT
00003306                          4798mm         
00003306  3212                    4799mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003308  E149                    4800mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000330A  E949                    4801mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000330C  E049                    4802mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000330E  E849                    4803mm         LSR.W   #4, D1      
00003310                          4804mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003310  0C01 0009               4805mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003314  6E00 000A               4806mmm         BGT     ALPHA_353
00003318  0601 0030               4807mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000331C  6000 0006               4808mmm         BRA     DONE_353
00003320  0601 0037               4809mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003324  4E71                    4810mmm DONE_353: NOP
00003326                          4811mmm         ENDM
00003326  4E4F                    4812mm         TRAP    #15         ; EXECUTE OUTPUT       
00003328                          4813mm         ENDM 
00003328  3605                    4814m         MOVE.W  D5, D3
0000332A                          4815m 
0000332A                          4816m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
0000332A                          4817m         ENDM
0000332A  6000 05F4               4818          BRA     decodeSUBcomp
0000332E                          4819  decodeSubDestOp:
0000332E                          4820m         prepareAdrMode  #$1,(A2)
0000332E  3C3C 0001               4821m         MOVE.W  #$1, D6      ; INPUT VALUE
00003332  3212                    4822m         MOVE.W  (A2), D1
00003334  BC3C 0001               4823m         CMP.B   #$01, D6
00003338  6700 000C               4824m         BEQ     ADRSOURCE_354    
0000333C                          4825m ADRDEST_354:
0000333C  EF49                    4826m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000333E  E049                    4827m         LSR     #$08, D1
00003340  EA49                    4828m         LSR     #$05, D1
00003342  6000 000A               4829m         BRA     COMPLETE_354 
00003346                          4830m ADRSOURCE_354:                
00003346  E149                    4831m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003348  E549                    4832m         LSL     #$02, D1
0000334A  E049                    4833m         LSR     #$08, D1
0000334C  EA49                    4834m         LSR     #$05, D1
0000334E                          4835m COMPLETE_354:  ; OPCODE HAS BEEN VERIFIED
0000334E                          4836m         ENDM        
0000334E                          4837m         decodeAdrMode   (A2), D1
0000334E  3612                    4838m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003350  3201                    4839m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003352                          4840m 
00003352  B23C 0001               4841m         CMP.B   #$01, D1
00003356  6700 0066               4842m         BEQ     ADRREGDIRECT_355    
0000335A  B23C 0002               4843m         CMP.B   #$02, D1
0000335E  6700 00A0               4844m         BEQ     ADRREGINDIRECT_355  
00003362  B23C 0003               4845m         CMP.B   #$03, D1
00003366  6700 0102               4846m         BEQ     ADRREGPOSTINC_355  
0000336A  B23C 0004               4847m         CMP.B   #$04, D1
0000336E  6700 0178               4848m         BEQ     ADRREGPREDEC_355
00003372  B23C 0007               4849m         CMP.B   #$07, D1
00003376  6700 01EE               4850m         BEQ     ADRABSOLUTE_355    
0000337A                          4851m         
0000337A                          4852m DATAREGDIRECT_355: 
0000337A  BC3C 0001               4853m         CMP.B   #$01, D6
0000337E  6700 001E               4854m         BEQ     DATAREGDIRECTSRC_355   
00003382                          4855m DATAREGDIRECTDEST_355: 
00003382                          4856mm         PRINTDNDEST D3 
00003382  3203                    4857mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003384  E949                    4858mm         LSL     #$04, D1
00003386  E049                    4859mm         LSR     #$08, D1
00003388  EA49                    4860mm         LSR     #$05, D1
0000338A  43F8 00C1               4861mm         LEA     ODN, A1     
0000338E  103C 000E               4862mm         MOVE.B  #14,D0          
00003392  4E4F                    4863mm         TRAP    #15
00003394  103C 0003               4864mm         MOVE.B  #3,D0          
00003398  4E4F                    4865mm         TRAP    #15
0000339A                          4866mm         ENDM
0000339A  6000 0562               4867m         BRA     COMPLETE_355 
0000339E                          4868m DATAREGDIRECTSRC_355: 
0000339E                          4869mm         PRINTDNSRC D3 
0000339E  4281                    4870mm         CLR.L   D1
000033A0  3203                    4871mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033A2  E149                    4872mm         LSL     #$08, D1
000033A4  EB49                    4873mm         LSL     #$05, D1
000033A6  E049                    4874mm         LSR     #$08, D1
000033A8  EA49                    4875mm         LSR     #$05, D1
000033AA  43F8 00C1               4876mm         LEA     ODN, A1     
000033AE  103C 000E               4877mm         MOVE.B  #14,D0          
000033B2  4E4F                    4878mm         TRAP    #15
000033B4  103C 0003               4879mm         MOVE.B  #3,D0          
000033B8  4E4F                    4880mm         TRAP    #15
000033BA                          4881mm         ENDM
000033BA  6000 0542               4882m         BRA     COMPLETE_355   
000033BE                          4883m         
000033BE                          4884m ADRREGDIRECT_355: 
000033BE  BC3C 0001               4885m         CMP.B   #$01, D6
000033C2  6700 001E               4886m         BEQ     ADRREGDIRECTSRC_355   
000033C6                          4887m ADRREGDIRECTDEST_355:
000033C6                          4888mm         PRINTANDEST D3
000033C6  3203                    4889mm         MOVE.W  D3, D1
000033C8  E949                    4890mm         LSL     #$04, D1
000033CA  E049                    4891mm         LSR     #$08, D1
000033CC  EA49                    4892mm         LSR     #$05, D1
000033CE  43F8 00C3               4893mm         LEA     OAN, A1     
000033D2  103C 000E               4894mm         MOVE.B  #14,D0          
000033D6  4E4F                    4895mm         TRAP    #15
000033D8  103C 0003               4896mm         MOVE.B  #3,D0          
000033DC  4E4F                    4897mm         TRAP    #15
000033DE                          4898mm         ENDM
000033DE  6000 051E               4899m         BRA     COMPLETE_355   
000033E2                          4900m ADRREGDIRECTSRC_355:
000033E2                          4901mm         PRINTANSRC D3
000033E2  3203                    4902mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033E4  E149                    4903mm         LSL     #$08, D1
000033E6  EB49                    4904mm         LSL     #$05, D1
000033E8  E049                    4905mm         LSR     #$08, D1
000033EA  EA49                    4906mm         LSR     #$05, D1
000033EC  43F8 00C3               4907mm         LEA     OAN, A1     
000033F0  103C 000E               4908mm         MOVE.B  #14,D0          
000033F4  4E4F                    4909mm         TRAP    #15
000033F6  103C 0003               4910mm         MOVE.B  #3,D0          
000033FA  4E4F                    4911mm         TRAP    #15
000033FC                          4912mm         ENDM
000033FC  6000 0500               4913m         BRA     COMPLETE_355   
00003400                          4914m        
00003400                          4915m ADRREGINDIRECT_355:   
00003400  BC3C 0001               4916m         CMP.B   #$01, D6
00003404  6700 0032               4917m         BEQ     ADRREGINDIRECTSRC_355   
00003408                          4918m ADRREGINDIRECTDEST_355:
00003408                          4919mm         PRINTLB
00003408  43F8 00C5               4920mm         LEA     OLB, A1     
0000340C  103C 000E               4921mm         MOVE.B  #14,D0          
00003410  4E4F                    4922mm         TRAP    #15
00003412                          4923mm         ENDM
00003412                          4924mm         PRINTANDEST D3  
00003412  3203                    4925mm         MOVE.W  D3, D1
00003414  E949                    4926mm         LSL     #$04, D1
00003416  E049                    4927mm         LSR     #$08, D1
00003418  EA49                    4928mm         LSR     #$05, D1
0000341A  43F8 00C3               4929mm         LEA     OAN, A1     
0000341E  103C 000E               4930mm         MOVE.B  #14,D0          
00003422  4E4F                    4931mm         TRAP    #15
00003424  103C 0003               4932mm         MOVE.B  #3,D0          
00003428  4E4F                    4933mm         TRAP    #15
0000342A                          4934mm         ENDM
0000342A                          4935mm         PRINTRB
0000342A  43F8 00C7               4936mm         LEA     ORB, A1     
0000342E  103C 000E               4937mm         MOVE.B  #14,D0          
00003432  4E4F                    4938mm         TRAP    #15
00003434                          4939mm         ENDM
00003434  6000 04C8               4940m         BRA     COMPLETE_355     
00003438                          4941m ADRREGINDIRECTSRC_355:   
00003438                          4942mm         PRINTLB
00003438  43F8 00C5               4943mm         LEA     OLB, A1     
0000343C  103C 000E               4944mm         MOVE.B  #14,D0          
00003440  4E4F                    4945mm         TRAP    #15
00003442                          4946mm         ENDM
00003442                          4947mm         PRINTANSRC D3  
00003442  3203                    4948mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003444  E149                    4949mm         LSL     #$08, D1
00003446  EB49                    4950mm         LSL     #$05, D1
00003448  E049                    4951mm         LSR     #$08, D1
0000344A  EA49                    4952mm         LSR     #$05, D1
0000344C  43F8 00C3               4953mm         LEA     OAN, A1     
00003450  103C 000E               4954mm         MOVE.B  #14,D0          
00003454  4E4F                    4955mm         TRAP    #15
00003456  103C 0003               4956mm         MOVE.B  #3,D0          
0000345A  4E4F                    4957mm         TRAP    #15
0000345C                          4958mm         ENDM
0000345C                          4959mm         PRINTRB
0000345C  43F8 00C7               4960mm         LEA     ORB, A1     
00003460  103C 000E               4961mm         MOVE.B  #14,D0          
00003464  4E4F                    4962mm         TRAP    #15
00003466                          4963mm         ENDM
00003466  6000 0496               4964m         BRA     COMPLETE_355   
0000346A                          4965m         
0000346A                          4966m ADRREGPOSTINC_355:   
0000346A  BC3C 0001               4967m         CMP.B   #$01, D6
0000346E  6700 003C               4968m         BEQ     ADRREGPOSTINCSRC_355   
00003472                          4969m ADRREGPOSTINCDEST_355: 
00003472                          4970mm         PRINTLB
00003472  43F8 00C5               4971mm         LEA     OLB, A1     
00003476  103C 000E               4972mm         MOVE.B  #14,D0          
0000347A  4E4F                    4973mm         TRAP    #15
0000347C                          4974mm         ENDM
0000347C                          4975mm         PRINTANDEST D3  
0000347C  3203                    4976mm         MOVE.W  D3, D1
0000347E  E949                    4977mm         LSL     #$04, D1
00003480  E049                    4978mm         LSR     #$08, D1
00003482  EA49                    4979mm         LSR     #$05, D1
00003484  43F8 00C3               4980mm         LEA     OAN, A1     
00003488  103C 000E               4981mm         MOVE.B  #14,D0          
0000348C  4E4F                    4982mm         TRAP    #15
0000348E  103C 0003               4983mm         MOVE.B  #3,D0          
00003492  4E4F                    4984mm         TRAP    #15
00003494                          4985mm         ENDM
00003494                          4986mm         PRINTRB
00003494  43F8 00C7               4987mm         LEA     ORB, A1     
00003498  103C 000E               4988mm         MOVE.B  #14,D0          
0000349C  4E4F                    4989mm         TRAP    #15
0000349E                          4990mm         ENDM
0000349E                          4991mm         PRINTPI
0000349E  43F8 00CE               4992mm         LEA     OPSTINC, A1     
000034A2  103C 000E               4993mm         MOVE.B  #14,D0          
000034A6  4E4F                    4994mm         TRAP    #15
000034A8                          4995mm         ENDM
000034A8  6000 0454               4996m         BRA     COMPLETE_355  
000034AC                          4997m ADRREGPOSTINCSRC_355:           
000034AC                          4998mm         PRINTLB
000034AC  43F8 00C5               4999mm         LEA     OLB, A1     
000034B0  103C 000E               5000mm         MOVE.B  #14,D0          
000034B4  4E4F                    5001mm         TRAP    #15
000034B6                          5002mm         ENDM
000034B6                          5003mm         PRINTANSRC D3  
000034B6  3203                    5004mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034B8  E149                    5005mm         LSL     #$08, D1
000034BA  EB49                    5006mm         LSL     #$05, D1
000034BC  E049                    5007mm         LSR     #$08, D1
000034BE  EA49                    5008mm         LSR     #$05, D1
000034C0  43F8 00C3               5009mm         LEA     OAN, A1     
000034C4  103C 000E               5010mm         MOVE.B  #14,D0          
000034C8  4E4F                    5011mm         TRAP    #15
000034CA  103C 0003               5012mm         MOVE.B  #3,D0          
000034CE  4E4F                    5013mm         TRAP    #15
000034D0                          5014mm         ENDM
000034D0                          5015mm         PRINTRB
000034D0  43F8 00C7               5016mm         LEA     ORB, A1     
000034D4  103C 000E               5017mm         MOVE.B  #14,D0          
000034D8  4E4F                    5018mm         TRAP    #15
000034DA                          5019mm         ENDM
000034DA                          5020mm         PRINTPI
000034DA  43F8 00CE               5021mm         LEA     OPSTINC, A1     
000034DE  103C 000E               5022mm         MOVE.B  #14,D0          
000034E2  4E4F                    5023mm         TRAP    #15
000034E4                          5024mm         ENDM
000034E4  6000 0418               5025m         BRA     COMPLETE_355  
000034E8                          5026m ADRREGPREDEC_355: 
000034E8  BC3C 0001               5027m         CMP.B   #$01, D6
000034EC  6700 003C               5028m         BEQ     ADRREGPREDECSRC_355   
000034F0                          5029m ADRREGPREDECDEST_355:
000034F0                          5030mm         PRINTPD  
000034F0  43F8 00CC               5031mm         LEA     OPREDEC, A1     
000034F4  103C 000E               5032mm         MOVE.B  #14,D0          
000034F8  4E4F                    5033mm         TRAP    #15
000034FA                          5034mm         ENDM
000034FA                          5035mm         PRINTLB
000034FA  43F8 00C5               5036mm         LEA     OLB, A1     
000034FE  103C 000E               5037mm         MOVE.B  #14,D0          
00003502  4E4F                    5038mm         TRAP    #15
00003504                          5039mm         ENDM
00003504                          5040mm         PRINTANDEST D3  
00003504  3203                    5041mm         MOVE.W  D3, D1
00003506  E949                    5042mm         LSL     #$04, D1
00003508  E049                    5043mm         LSR     #$08, D1
0000350A  EA49                    5044mm         LSR     #$05, D1
0000350C  43F8 00C3               5045mm         LEA     OAN, A1     
00003510  103C 000E               5046mm         MOVE.B  #14,D0          
00003514  4E4F                    5047mm         TRAP    #15
00003516  103C 0003               5048mm         MOVE.B  #3,D0          
0000351A  4E4F                    5049mm         TRAP    #15
0000351C                          5050mm         ENDM
0000351C                          5051mm         PRINTRB
0000351C  43F8 00C7               5052mm         LEA     ORB, A1     
00003520  103C 000E               5053mm         MOVE.B  #14,D0          
00003524  4E4F                    5054mm         TRAP    #15
00003526                          5055mm         ENDM
00003526  6000 03D6               5056m         BRA     COMPLETE_355   
0000352A                          5057m ADRREGPREDECSRC_355: 
0000352A                          5058mm         PRINTPD  
0000352A  43F8 00CC               5059mm         LEA     OPREDEC, A1     
0000352E  103C 000E               5060mm         MOVE.B  #14,D0          
00003532  4E4F                    5061mm         TRAP    #15
00003534                          5062mm         ENDM
00003534                          5063mm         PRINTLB
00003534  43F8 00C5               5064mm         LEA     OLB, A1     
00003538  103C 000E               5065mm         MOVE.B  #14,D0          
0000353C  4E4F                    5066mm         TRAP    #15
0000353E                          5067mm         ENDM
0000353E                          5068mm         PRINTANSRC D3  
0000353E  3203                    5069mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003540  E149                    5070mm         LSL     #$08, D1
00003542  EB49                    5071mm         LSL     #$05, D1
00003544  E049                    5072mm         LSR     #$08, D1
00003546  EA49                    5073mm         LSR     #$05, D1
00003548  43F8 00C3               5074mm         LEA     OAN, A1     
0000354C  103C 000E               5075mm         MOVE.B  #14,D0          
00003550  4E4F                    5076mm         TRAP    #15
00003552  103C 0003               5077mm         MOVE.B  #3,D0          
00003556  4E4F                    5078mm         TRAP    #15
00003558                          5079mm         ENDM
00003558                          5080mm         PRINTRB
00003558  43F8 00C7               5081mm         LEA     ORB, A1     
0000355C  103C 000E               5082mm         MOVE.B  #14,D0          
00003560  4E4F                    5083mm         TRAP    #15
00003562                          5084mm         ENDM
00003562  6000 039A               5085m         BRA     COMPLETE_355
00003566                          5086m        
00003566                          5087m ADRABSOLUTE_355:
00003566  BC3C 0001               5088m         CMP.B   #$01, D6
0000356A  6600 0018               5089m         BNE     ADRABSOLUTEDST_355 
0000356E                          5090m         
0000356E  3A03                    5091m         MOVE.W  D3, D5
00003570  0803 0002               5092m         BTST    #2, D3
00003574  6600 0024               5093m         BNE     ADRIMMEDIATE_355
00003578  0803 0000               5094m         BTST    #0, D3
0000357C  6600 0270               5095m         BNE     ADRABSOLUTEL_355
00003580  6000 01DA               5096m         BRA     ADRABSOLUTEW_355
00003584                          5097m ADRABSOLUTEDST_355:
00003584  3A03                    5098m         MOVE.W  D3, D5
00003586  0803 000B               5099m         BTST    #$B, D3
0000358A  6600 000E               5100m         BNE     ADRIMMEDIATE_355
0000358E  0803 0009               5101m         BTST    #$09, D3
00003592  6600 025A               5102m         BNE     ADRABSOLUTEL_355
00003596  6000 01C4               5103m         BRA     ADRABSOLUTEW_355
0000359A                          5104m ADRIMMEDIATE_355:
0000359A  BE3C 0001               5105m         CMP.B   #1, D7
0000359E  6700 009E               5106m         BEQ     ADRIMMEDIATEL_355
000035A2                          5107m ADRIMMEDIATEW_355:
000035A2  361A                    5108m         MOVE.W  (A2)+, D3
000035A4                          5109mm         PRINTHASH
000035A4  103C 0006               5110mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035A8  323C 0023               5111mm         MOVE.W  #35, D1     ; AN = SIGN
000035AC  4E4F                    5112mm         TRAP    #15         ; OUTPUT = SIGN
000035AE                          5113mm         ENDM
000035AE                          5114mm         PRINTSIGN
000035AE  103C 0006               5115mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035B2  323C 0024               5116mm         MOVE.W  #36, D1     ; AN = SIGN
000035B6  4E4F                    5117mm         TRAP    #15         ; OUTPUT = SIGN
000035B8                          5118mm         ENDM
000035B8                          5119mm         ADROUT
000035B8  3212                    5120mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035BA  E049                    5121mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035BC  E849                    5122mm         LSR.W   #4, D1      
000035BE                          5123mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035BE  0C01 0009               5124mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035C2  6E00 000A               5125mmm         BGT     ALPHA_385
000035C6  0601 0030               5126mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035CA  6000 0006               5127mmm         BRA     DONE_385
000035CE  0601 0037               5128mmm ALPHA_385: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035D2  4E71                    5129mmm DONE_385: NOP
000035D4                          5130mmm         ENDM
000035D4  4E4F                    5131mm         TRAP    #15         ; EXECUTE OUTPUT
000035D6                          5132mm         
000035D6  3212                    5133mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035D8  E949                    5134mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000035DA  E049                    5135mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035DC  E849                    5136mm         LSR.W   #4, D1      
000035DE                          5137mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035DE  0C01 0009               5138mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035E2  6E00 000A               5139mmm         BGT     ALPHA_386
000035E6  0601 0030               5140mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035EA  6000 0006               5141mmm         BRA     DONE_386
000035EE  0601 0037               5142mmm ALPHA_386: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035F2  4E71                    5143mmm DONE_386: NOP
000035F4                          5144mmm         ENDM
000035F4  4E4F                    5145mm         TRAP    #15         ; EXECUTE OUTPUT
000035F6                          5146mm         
000035F6  3212                    5147mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035F8  E149                    5148mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000035FA  E049                    5149mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035FC  E849                    5150mm         LSR.W   #4, D1      
000035FE                          5151mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035FE  0C01 0009               5152mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003602  6E00 000A               5153mmm         BGT     ALPHA_387
00003606  0601 0030               5154mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000360A  6000 0006               5155mmm         BRA     DONE_387
0000360E  0601 0037               5156mmm ALPHA_387: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003612  4E71                    5157mmm DONE_387: NOP
00003614                          5158mmm         ENDM
00003614  4E4F                    5159mm         TRAP    #15         ; EXECUTE OUTPUT
00003616                          5160mm         
00003616  3212                    5161mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003618  E149                    5162mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000361A  E949                    5163mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000361C  E049                    5164mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000361E  E849                    5165mm         LSR.W   #4, D1      
00003620                          5166mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003620  0C01 0009               5167mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003624  6E00 000A               5168mmm         BGT     ALPHA_388
00003628  0601 0030               5169mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000362C  6000 0006               5170mmm         BRA     DONE_388
00003630  0601 0037               5171mmm ALPHA_388: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003634  4E71                    5172mmm DONE_388: NOP
00003636                          5173mmm         ENDM
00003636  4E4F                    5174mm         TRAP    #15         ; EXECUTE OUTPUT       
00003638                          5175mm         ENDM 
00003638  3605                    5176m         MOVE.W  D5, D3
0000363A  6000 02C2               5177m         BRA     COMPLETE_355
0000363E                          5178m ADRIMMEDIATEL_355:
0000363E  361A                    5179m         MOVE.W  (A2)+, D3
00003640                          5180mm         PRINTHASH
00003640  103C 0006               5181mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003644  323C 0023               5182mm         MOVE.W  #35, D1     ; AN = SIGN
00003648  4E4F                    5183mm         TRAP    #15         ; OUTPUT = SIGN
0000364A                          5184mm         ENDM
0000364A                          5185mm         PRINTSIGN
0000364A  103C 0006               5186mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000364E  323C 0024               5187mm         MOVE.W  #36, D1     ; AN = SIGN
00003652  4E4F                    5188mm         TRAP    #15         ; OUTPUT = SIGN
00003654                          5189mm         ENDM
00003654                          5190mm         ADROUT 
00003654  3212                    5191mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003656  E049                    5192mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003658  E849                    5193mm         LSR.W   #4, D1      
0000365A                          5194mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000365A  0C01 0009               5195mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000365E  6E00 000A               5196mmm         BGT     ALPHA_392
00003662  0601 0030               5197mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003666  6000 0006               5198mmm         BRA     DONE_392
0000366A  0601 0037               5199mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000366E  4E71                    5200mmm DONE_392: NOP
00003670                          5201mmm         ENDM
00003670  4E4F                    5202mm         TRAP    #15         ; EXECUTE OUTPUT
00003672                          5203mm         
00003672  3212                    5204mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003674  E949                    5205mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003676  E049                    5206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003678  E849                    5207mm         LSR.W   #4, D1      
0000367A                          5208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000367A  0C01 0009               5209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000367E  6E00 000A               5210mmm         BGT     ALPHA_393
00003682  0601 0030               5211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003686  6000 0006               5212mmm         BRA     DONE_393
0000368A  0601 0037               5213mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000368E  4E71                    5214mmm DONE_393: NOP
00003690                          5215mmm         ENDM
00003690  4E4F                    5216mm         TRAP    #15         ; EXECUTE OUTPUT
00003692                          5217mm         
00003692  3212                    5218mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003694  E149                    5219mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003696  E049                    5220mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003698  E849                    5221mm         LSR.W   #4, D1      
0000369A                          5222mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000369A  0C01 0009               5223mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000369E  6E00 000A               5224mmm         BGT     ALPHA_394
000036A2  0601 0030               5225mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036A6  6000 0006               5226mmm         BRA     DONE_394
000036AA  0601 0037               5227mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036AE  4E71                    5228mmm DONE_394: NOP
000036B0                          5229mmm         ENDM
000036B0  4E4F                    5230mm         TRAP    #15         ; EXECUTE OUTPUT
000036B2                          5231mm         
000036B2  3212                    5232mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036B4  E149                    5233mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036B6  E949                    5234mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000036B8  E049                    5235mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036BA  E849                    5236mm         LSR.W   #4, D1      
000036BC                          5237mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036BC  0C01 0009               5238mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036C0  6E00 000A               5239mmm         BGT     ALPHA_395
000036C4  0601 0030               5240mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036C8  6000 0006               5241mmm         BRA     DONE_395
000036CC  0601 0037               5242mmm ALPHA_395: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036D0  4E71                    5243mmm DONE_395: NOP
000036D2                          5244mmm         ENDM
000036D2  4E4F                    5245mm         TRAP    #15         ; EXECUTE OUTPUT       
000036D4                          5246mm         ENDM 
000036D4  361A                    5247m         MOVE.W  (A2)+, D3
000036D6                          5248mm         ADROUT
000036D6  3212                    5249mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036D8  E049                    5250mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036DA  E849                    5251mm         LSR.W   #4, D1      
000036DC                          5252mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036DC  0C01 0009               5253mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036E0  6E00 000A               5254mmm         BGT     ALPHA_397
000036E4  0601 0030               5255mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036E8  6000 0006               5256mmm         BRA     DONE_397
000036EC  0601 0037               5257mmm ALPHA_397: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036F0  4E71                    5258mmm DONE_397: NOP
000036F2                          5259mmm         ENDM
000036F2  4E4F                    5260mm         TRAP    #15         ; EXECUTE OUTPUT
000036F4                          5261mm         
000036F4  3212                    5262mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036F6  E949                    5263mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000036F8  E049                    5264mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036FA  E849                    5265mm         LSR.W   #4, D1      
000036FC                          5266mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036FC  0C01 0009               5267mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003700  6E00 000A               5268mmm         BGT     ALPHA_398
00003704  0601 0030               5269mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003708  6000 0006               5270mmm         BRA     DONE_398
0000370C  0601 0037               5271mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003710  4E71                    5272mmm DONE_398: NOP
00003712                          5273mmm         ENDM
00003712  4E4F                    5274mm         TRAP    #15         ; EXECUTE OUTPUT
00003714                          5275mm         
00003714  3212                    5276mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003716  E149                    5277mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003718  E049                    5278mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000371A  E849                    5279mm         LSR.W   #4, D1      
0000371C                          5280mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000371C  0C01 0009               5281mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003720  6E00 000A               5282mmm         BGT     ALPHA_399
00003724  0601 0030               5283mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003728  6000 0006               5284mmm         BRA     DONE_399
0000372C  0601 0037               5285mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003730  4E71                    5286mmm DONE_399: NOP
00003732                          5287mmm         ENDM
00003732  4E4F                    5288mm         TRAP    #15         ; EXECUTE OUTPUT
00003734                          5289mm         
00003734  3212                    5290mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003736  E149                    5291mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003738  E949                    5292mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000373A  E049                    5293mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000373C  E849                    5294mm         LSR.W   #4, D1      
0000373E                          5295mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000373E  0C01 0009               5296mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003742  6E00 000A               5297mmm         BGT     ALPHA_400
00003746  0601 0030               5298mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000374A  6000 0006               5299mmm         BRA     DONE_400
0000374E  0601 0037               5300mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003752  4E71                    5301mmm DONE_400: NOP
00003754                          5302mmm         ENDM
00003754  4E4F                    5303mm         TRAP    #15         ; EXECUTE OUTPUT       
00003756                          5304mm         ENDM 
00003756  3605                    5305m         MOVE.W  D5, D3
00003758  6000 01A4               5306m         BRA     COMPLETE_355 
0000375C                          5307m ADRABSOLUTEW_355:     
0000375C  361A                    5308m         MOVE.W  (A2)+, D3
0000375E                          5309mm         PRINTSIGN
0000375E  103C 0006               5310mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003762  323C 0024               5311mm         MOVE.W  #36, D1     ; AN = SIGN
00003766  4E4F                    5312mm         TRAP    #15         ; OUTPUT = SIGN
00003768                          5313mm         ENDM
00003768                          5314mm         ADROUT
00003768  3212                    5315mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000376A  E049                    5316mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000376C  E849                    5317mm         LSR.W   #4, D1      
0000376E                          5318mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000376E  0C01 0009               5319mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003772  6E00 000A               5320mmm         BGT     ALPHA_403
00003776  0601 0030               5321mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000377A  6000 0006               5322mmm         BRA     DONE_403
0000377E  0601 0037               5323mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003782  4E71                    5324mmm DONE_403: NOP
00003784                          5325mmm         ENDM
00003784  4E4F                    5326mm         TRAP    #15         ; EXECUTE OUTPUT
00003786                          5327mm         
00003786  3212                    5328mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003788  E949                    5329mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000378A  E049                    5330mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000378C  E849                    5331mm         LSR.W   #4, D1      
0000378E                          5332mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000378E  0C01 0009               5333mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003792  6E00 000A               5334mmm         BGT     ALPHA_404
00003796  0601 0030               5335mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000379A  6000 0006               5336mmm         BRA     DONE_404
0000379E  0601 0037               5337mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037A2  4E71                    5338mmm DONE_404: NOP
000037A4                          5339mmm         ENDM
000037A4  4E4F                    5340mm         TRAP    #15         ; EXECUTE OUTPUT
000037A6                          5341mm         
000037A6  3212                    5342mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037A8  E149                    5343mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037AA  E049                    5344mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037AC  E849                    5345mm         LSR.W   #4, D1      
000037AE                          5346mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037AE  0C01 0009               5347mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B2  6E00 000A               5348mmm         BGT     ALPHA_405
000037B6  0601 0030               5349mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037BA  6000 0006               5350mmm         BRA     DONE_405
000037BE  0601 0037               5351mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C2  4E71                    5352mmm DONE_405: NOP
000037C4                          5353mmm         ENDM
000037C4  4E4F                    5354mm         TRAP    #15         ; EXECUTE OUTPUT
000037C6                          5355mm         
000037C6  3212                    5356mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037C8  E149                    5357mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037CA  E949                    5358mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037CC  E049                    5359mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037CE  E849                    5360mm         LSR.W   #4, D1      
000037D0                          5361mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D0  0C01 0009               5362mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D4  6E00 000A               5363mmm         BGT     ALPHA_406
000037D8  0601 0030               5364mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037DC  6000 0006               5365mmm         BRA     DONE_406
000037E0  0601 0037               5366mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E4  4E71                    5367mmm DONE_406: NOP
000037E6                          5368mmm         ENDM
000037E6  4E4F                    5369mm         TRAP    #15         ; EXECUTE OUTPUT       
000037E8                          5370mm         ENDM 
000037E8  3605                    5371m         MOVE.W  D5, D3
000037EA  6000 0112               5372m         BRA     COMPLETE_355  
000037EE                          5373m ADRABSOLUTEL_355:  
000037EE  361A                    5374m         MOVE.W  (A2)+, D3
000037F0                          5375mm         PRINTSIGN
000037F0  103C 0006               5376mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000037F4  323C 0024               5377mm         MOVE.W  #36, D1     ; AN = SIGN
000037F8  4E4F                    5378mm         TRAP    #15         ; OUTPUT = SIGN
000037FA                          5379mm         ENDM
000037FA                          5380mm         ADROUT 
000037FA  3212                    5381mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037FC  E049                    5382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037FE  E849                    5383mm         LSR.W   #4, D1      
00003800                          5384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003800  0C01 0009               5385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003804  6E00 000A               5386mmm         BGT     ALPHA_409
00003808  0601 0030               5387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000380C  6000 0006               5388mmm         BRA     DONE_409
00003810  0601 0037               5389mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003814  4E71                    5390mmm DONE_409: NOP
00003816                          5391mmm         ENDM
00003816  4E4F                    5392mm         TRAP    #15         ; EXECUTE OUTPUT
00003818                          5393mm         
00003818  3212                    5394mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000381A  E949                    5395mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000381C  E049                    5396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000381E  E849                    5397mm         LSR.W   #4, D1      
00003820                          5398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003820  0C01 0009               5399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003824  6E00 000A               5400mmm         BGT     ALPHA_410
00003828  0601 0030               5401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000382C  6000 0006               5402mmm         BRA     DONE_410
00003830  0601 0037               5403mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003834  4E71                    5404mmm DONE_410: NOP
00003836                          5405mmm         ENDM
00003836  4E4F                    5406mm         TRAP    #15         ; EXECUTE OUTPUT
00003838                          5407mm         
00003838  3212                    5408mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000383A  E149                    5409mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000383C  E049                    5410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000383E  E849                    5411mm         LSR.W   #4, D1      
00003840                          5412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003840  0C01 0009               5413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003844  6E00 000A               5414mmm         BGT     ALPHA_411
00003848  0601 0030               5415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000384C  6000 0006               5416mmm         BRA     DONE_411
00003850  0601 0037               5417mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003854  4E71                    5418mmm DONE_411: NOP
00003856                          5419mmm         ENDM
00003856  4E4F                    5420mm         TRAP    #15         ; EXECUTE OUTPUT
00003858                          5421mm         
00003858  3212                    5422mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000385A  E149                    5423mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000385C  E949                    5424mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000385E  E049                    5425mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003860  E849                    5426mm         LSR.W   #4, D1      
00003862                          5427mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003862  0C01 0009               5428mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003866  6E00 000A               5429mmm         BGT     ALPHA_412
0000386A  0601 0030               5430mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000386E  6000 0006               5431mmm         BRA     DONE_412
00003872  0601 0037               5432mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003876  4E71                    5433mmm DONE_412: NOP
00003878                          5434mmm         ENDM
00003878  4E4F                    5435mm         TRAP    #15         ; EXECUTE OUTPUT       
0000387A                          5436mm         ENDM 
0000387A  361A                    5437m         MOVE.W  (A2)+, D3
0000387C                          5438mm         ADROUT
0000387C  3212                    5439mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000387E  E049                    5440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003880  E849                    5441mm         LSR.W   #4, D1      
00003882                          5442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003882  0C01 0009               5443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003886  6E00 000A               5444mmm         BGT     ALPHA_414
0000388A  0601 0030               5445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000388E  6000 0006               5446mmm         BRA     DONE_414
00003892  0601 0037               5447mmm ALPHA_414: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003896  4E71                    5448mmm DONE_414: NOP
00003898                          5449mmm         ENDM
00003898  4E4F                    5450mm         TRAP    #15         ; EXECUTE OUTPUT
0000389A                          5451mm         
0000389A  3212                    5452mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000389C  E949                    5453mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000389E  E049                    5454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038A0  E849                    5455mm         LSR.W   #4, D1      
000038A2                          5456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038A2  0C01 0009               5457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038A6  6E00 000A               5458mmm         BGT     ALPHA_415
000038AA  0601 0030               5459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038AE  6000 0006               5460mmm         BRA     DONE_415
000038B2  0601 0037               5461mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038B6  4E71                    5462mmm DONE_415: NOP
000038B8                          5463mmm         ENDM
000038B8  4E4F                    5464mm         TRAP    #15         ; EXECUTE OUTPUT
000038BA                          5465mm         
000038BA  3212                    5466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038BC  E149                    5467mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038BE  E049                    5468mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038C0  E849                    5469mm         LSR.W   #4, D1      
000038C2                          5470mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038C2  0C01 0009               5471mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038C6  6E00 000A               5472mmm         BGT     ALPHA_416
000038CA  0601 0030               5473mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038CE  6000 0006               5474mmm         BRA     DONE_416
000038D2  0601 0037               5475mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038D6  4E71                    5476mmm DONE_416: NOP
000038D8                          5477mmm         ENDM
000038D8  4E4F                    5478mm         TRAP    #15         ; EXECUTE OUTPUT
000038DA                          5479mm         
000038DA  3212                    5480mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038DC  E149                    5481mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038DE  E949                    5482mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000038E0  E049                    5483mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038E2  E849                    5484mm         LSR.W   #4, D1      
000038E4                          5485mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038E4  0C01 0009               5486mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038E8  6E00 000A               5487mmm         BGT     ALPHA_417
000038EC  0601 0030               5488mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038F0  6000 0006               5489mmm         BRA     DONE_417
000038F4  0601 0037               5490mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038F8  4E71                    5491mmm DONE_417: NOP
000038FA                          5492mmm         ENDM
000038FA  4E4F                    5493mm         TRAP    #15         ; EXECUTE OUTPUT       
000038FC                          5494mm         ENDM 
000038FC  3605                    5495m         MOVE.W  D5, D3
000038FE                          5496m 
000038FE                          5497m COMPLETE_355:  ; OPCODE HAS BEEN VERIFIED
000038FE                          5498m         ENDM
000038FE                          5499m         printComma
000038FE  43F8 00C9               5500m         LEA     OCOMMA, A1     
00003902  103C 000E               5501m         MOVE.B  #14,D0          
00003906  4E4F                    5502m         TRAP    #15
00003908                          5503m         ENDM
00003908                          5504m         printDnDest     D3
00003908  3203                    5505m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000390A  E949                    5506m         LSL     #$04, D1
0000390C  E049                    5507m         LSR     #$08, D1
0000390E  EA49                    5508m         LSR     #$05, D1
00003910  43F8 00C1               5509m         LEA     ODN, A1     
00003914  103C 000E               5510m         MOVE.B  #14,D0          
00003918  4E4F                    5511m         TRAP    #15
0000391A  103C 0003               5512m         MOVE.B  #3,D0          
0000391E  4E4F                    5513m         TRAP    #15
00003920                          5514m         ENDM
00003920                          5515  decodeSUBcomp:
00003920  4E75                    5516          RTS                ; Return from decodeSUBcomp subroutine
00003922                          5517  
00003922                          5518  
00003922                          5519  ; ------------------------------------------------------------
00003922                          5520  ; 6. "decodeMULS" subroutine
00003922                          5521  ; AUTHOR
00003922                          5522  ;
00003922                          5523  ; TODO: DESCRIPTION MULS
00003922                          5524  ; ------------------------------------------------------------
00003922                          5525  decodeMULS:
00003922                          5526m         verifyOpcode    pMULS, (A2)
00003922  43F8 0129               5527m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003926  3612                    5528m         MOVE.W  (A2), D3      ; INPUT VALUE
00003928  123C 000F               5529m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000392C                          5530m         
0000392C                          5531m LOOP_420: 
0000392C  0C11 0030               5532m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003930  6700 000E               5533m         BEQ     CHECKFOR0_420
00003934  0C11 0031               5534m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003938  6700 0010               5535m         BEQ     CHECKFOR1_420
0000393C  6000 0012               5536m         BRA     NEXT_420      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003940                          5537m         
00003940                          5538m CHECKFOR0_420: 
00003940  0303                    5539m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003942  6600 3292               5540m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003946  6000 0008               5541m         BRA     NEXT_420
0000394A                          5542m 
0000394A                          5543m CHECKFOR1_420:
0000394A  0303                    5544m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000394C  6700 3288               5545m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003950                          5546m 
00003950                          5547m NEXT_420: 
00003950  B23C 0000               5548m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003954  6700 0008               5549m         BEQ     COMPLETE_420  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003958  5301                    5550m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000395A  1819                    5551m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000395C  60CE                    5552m         BRA     LOOP_420      ; BEGIN LOOP AGAIN
0000395E                          5553m 
0000395E                          5554m COMPLETE_420:  ; OPCODE HAS BEEN VERIFIED
0000395E                          5555m         ENDM
0000395E  43F8 0077               5556          LEA     oMULS, A1     
00003962  103C 000E               5557          MOVE.B  #14,D0          
00003966  4E4F                    5558          TRAP    #15
00003968                          5559m         printSize       (A2)
00003968  3612                    5560m         MOVE.W  (A2), D3      ; INPUT VALUE
0000396A  4247                    5561m         CLR     D7      
0000396C                          5562m CHECKFORB_421: 
0000396C  0803 000D               5563m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003970  6600 0010               5564m         BNE     CHECKFORW_421  ; IF NOT GO TO WORD SIZE
00003974  43F8 00B5               5565m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003978  103C 000E               5566m         MOVE.B  #14,D0          
0000397C  4E4F                    5567m         TRAP    #15
0000397E  6000 0026               5568m         BRA     COMPLETE_421      
00003982                          5569m CHECKFORW_421: 
00003982  0803 000C               5570m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003986  6700 0010               5571m         BEQ     CHECKFORL_421  ; IF NOT, SIZE CANNOT BE WORD
0000398A  43F8 00B9               5572m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000398E  103C 000E               5573m         MOVE.B  #14,D0          
00003992  4E4F                    5574m         TRAP    #15
00003994  6000 0010               5575m         BRA     COMPLETE_421  
00003998                          5576m CHECKFORL_421:
00003998  1E3C 0001               5577m         MOVE.B  #$1, D7
0000399C  43F8 00BD               5578m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000039A0  103C 000E               5579m         MOVE.B  #14,D0          
000039A4  4E4F                    5580m         TRAP    #15
000039A6                          5581m COMPLETE_421:  ; SIZE HAS BEEN PRINTED
000039A6                          5582m         ENDM
000039A6                          5583m         prepareAdrMode  #$1, (A2)
000039A6  3C3C 0001               5584m         MOVE.W  #$1, D6      ; INPUT VALUE
000039AA  3212                    5585m         MOVE.W  (A2), D1
000039AC  BC3C 0001               5586m         CMP.B   #$01, D6
000039B0  6700 000C               5587m         BEQ     ADRSOURCE_422    
000039B4                          5588m ADRDEST_422:
000039B4  EF49                    5589m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000039B6  E049                    5590m         LSR     #$08, D1
000039B8  EA49                    5591m         LSR     #$05, D1
000039BA  6000 000A               5592m         BRA     COMPLETE_422 
000039BE                          5593m ADRSOURCE_422:                
000039BE  E149                    5594m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000039C0  E549                    5595m         LSL     #$02, D1
000039C2  E049                    5596m         LSR     #$08, D1
000039C4  EA49                    5597m         LSR     #$05, D1
000039C6                          5598m COMPLETE_422:  ; OPCODE HAS BEEN VERIFIED
000039C6                          5599m         ENDM        
000039C6                          5600m         decodeAdrMode   (A2), D1
000039C6  3612                    5601m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000039C8  3201                    5602m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000039CA                          5603m 
000039CA  B23C 0001               5604m         CMP.B   #$01, D1
000039CE  6700 0066               5605m         BEQ     ADRREGDIRECT_423    
000039D2  B23C 0002               5606m         CMP.B   #$02, D1
000039D6  6700 00A0               5607m         BEQ     ADRREGINDIRECT_423  
000039DA  B23C 0003               5608m         CMP.B   #$03, D1
000039DE  6700 0102               5609m         BEQ     ADRREGPOSTINC_423  
000039E2  B23C 0004               5610m         CMP.B   #$04, D1
000039E6  6700 0178               5611m         BEQ     ADRREGPREDEC_423
000039EA  B23C 0007               5612m         CMP.B   #$07, D1
000039EE  6700 01EE               5613m         BEQ     ADRABSOLUTE_423    
000039F2                          5614m         
000039F2                          5615m DATAREGDIRECT_423: 
000039F2  BC3C 0001               5616m         CMP.B   #$01, D6
000039F6  6700 001E               5617m         BEQ     DATAREGDIRECTSRC_423   
000039FA                          5618m DATAREGDIRECTDEST_423: 
000039FA                          5619mm         PRINTDNDEST D3 
000039FA  3203                    5620mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000039FC  E949                    5621mm         LSL     #$04, D1
000039FE  E049                    5622mm         LSR     #$08, D1
00003A00  EA49                    5623mm         LSR     #$05, D1
00003A02  43F8 00C1               5624mm         LEA     ODN, A1     
00003A06  103C 000E               5625mm         MOVE.B  #14,D0          
00003A0A  4E4F                    5626mm         TRAP    #15
00003A0C  103C 0003               5627mm         MOVE.B  #3,D0          
00003A10  4E4F                    5628mm         TRAP    #15
00003A12                          5629mm         ENDM
00003A12  6000 0562               5630m         BRA     COMPLETE_423 
00003A16                          5631m DATAREGDIRECTSRC_423: 
00003A16                          5632mm         PRINTDNSRC D3 
00003A16  4281                    5633mm         CLR.L   D1
00003A18  3203                    5634mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A1A  E149                    5635mm         LSL     #$08, D1
00003A1C  EB49                    5636mm         LSL     #$05, D1
00003A1E  E049                    5637mm         LSR     #$08, D1
00003A20  EA49                    5638mm         LSR     #$05, D1
00003A22  43F8 00C1               5639mm         LEA     ODN, A1     
00003A26  103C 000E               5640mm         MOVE.B  #14,D0          
00003A2A  4E4F                    5641mm         TRAP    #15
00003A2C  103C 0003               5642mm         MOVE.B  #3,D0          
00003A30  4E4F                    5643mm         TRAP    #15
00003A32                          5644mm         ENDM
00003A32  6000 0542               5645m         BRA     COMPLETE_423   
00003A36                          5646m         
00003A36                          5647m ADRREGDIRECT_423: 
00003A36  BC3C 0001               5648m         CMP.B   #$01, D6
00003A3A  6700 001E               5649m         BEQ     ADRREGDIRECTSRC_423   
00003A3E                          5650m ADRREGDIRECTDEST_423:
00003A3E                          5651mm         PRINTANDEST D3
00003A3E  3203                    5652mm         MOVE.W  D3, D1
00003A40  E949                    5653mm         LSL     #$04, D1
00003A42  E049                    5654mm         LSR     #$08, D1
00003A44  EA49                    5655mm         LSR     #$05, D1
00003A46  43F8 00C3               5656mm         LEA     OAN, A1     
00003A4A  103C 000E               5657mm         MOVE.B  #14,D0          
00003A4E  4E4F                    5658mm         TRAP    #15
00003A50  103C 0003               5659mm         MOVE.B  #3,D0          
00003A54  4E4F                    5660mm         TRAP    #15
00003A56                          5661mm         ENDM
00003A56  6000 051E               5662m         BRA     COMPLETE_423   
00003A5A                          5663m ADRREGDIRECTSRC_423:
00003A5A                          5664mm         PRINTANSRC D3
00003A5A  3203                    5665mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A5C  E149                    5666mm         LSL     #$08, D1
00003A5E  EB49                    5667mm         LSL     #$05, D1
00003A60  E049                    5668mm         LSR     #$08, D1
00003A62  EA49                    5669mm         LSR     #$05, D1
00003A64  43F8 00C3               5670mm         LEA     OAN, A1     
00003A68  103C 000E               5671mm         MOVE.B  #14,D0          
00003A6C  4E4F                    5672mm         TRAP    #15
00003A6E  103C 0003               5673mm         MOVE.B  #3,D0          
00003A72  4E4F                    5674mm         TRAP    #15
00003A74                          5675mm         ENDM
00003A74  6000 0500               5676m         BRA     COMPLETE_423   
00003A78                          5677m        
00003A78                          5678m ADRREGINDIRECT_423:   
00003A78  BC3C 0001               5679m         CMP.B   #$01, D6
00003A7C  6700 0032               5680m         BEQ     ADRREGINDIRECTSRC_423   
00003A80                          5681m ADRREGINDIRECTDEST_423:
00003A80                          5682mm         PRINTLB
00003A80  43F8 00C5               5683mm         LEA     OLB, A1     
00003A84  103C 000E               5684mm         MOVE.B  #14,D0          
00003A88  4E4F                    5685mm         TRAP    #15
00003A8A                          5686mm         ENDM
00003A8A                          5687mm         PRINTANDEST D3  
00003A8A  3203                    5688mm         MOVE.W  D3, D1
00003A8C  E949                    5689mm         LSL     #$04, D1
00003A8E  E049                    5690mm         LSR     #$08, D1
00003A90  EA49                    5691mm         LSR     #$05, D1
00003A92  43F8 00C3               5692mm         LEA     OAN, A1     
00003A96  103C 000E               5693mm         MOVE.B  #14,D0          
00003A9A  4E4F                    5694mm         TRAP    #15
00003A9C  103C 0003               5695mm         MOVE.B  #3,D0          
00003AA0  4E4F                    5696mm         TRAP    #15
00003AA2                          5697mm         ENDM
00003AA2                          5698mm         PRINTRB
00003AA2  43F8 00C7               5699mm         LEA     ORB, A1     
00003AA6  103C 000E               5700mm         MOVE.B  #14,D0          
00003AAA  4E4F                    5701mm         TRAP    #15
00003AAC                          5702mm         ENDM
00003AAC  6000 04C8               5703m         BRA     COMPLETE_423     
00003AB0                          5704m ADRREGINDIRECTSRC_423:   
00003AB0                          5705mm         PRINTLB
00003AB0  43F8 00C5               5706mm         LEA     OLB, A1     
00003AB4  103C 000E               5707mm         MOVE.B  #14,D0          
00003AB8  4E4F                    5708mm         TRAP    #15
00003ABA                          5709mm         ENDM
00003ABA                          5710mm         PRINTANSRC D3  
00003ABA  3203                    5711mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003ABC  E149                    5712mm         LSL     #$08, D1
00003ABE  EB49                    5713mm         LSL     #$05, D1
00003AC0  E049                    5714mm         LSR     #$08, D1
00003AC2  EA49                    5715mm         LSR     #$05, D1
00003AC4  43F8 00C3               5716mm         LEA     OAN, A1     
00003AC8  103C 000E               5717mm         MOVE.B  #14,D0          
00003ACC  4E4F                    5718mm         TRAP    #15
00003ACE  103C 0003               5719mm         MOVE.B  #3,D0          
00003AD2  4E4F                    5720mm         TRAP    #15
00003AD4                          5721mm         ENDM
00003AD4                          5722mm         PRINTRB
00003AD4  43F8 00C7               5723mm         LEA     ORB, A1     
00003AD8  103C 000E               5724mm         MOVE.B  #14,D0          
00003ADC  4E4F                    5725mm         TRAP    #15
00003ADE                          5726mm         ENDM
00003ADE  6000 0496               5727m         BRA     COMPLETE_423   
00003AE2                          5728m         
00003AE2                          5729m ADRREGPOSTINC_423:   
00003AE2  BC3C 0001               5730m         CMP.B   #$01, D6
00003AE6  6700 003C               5731m         BEQ     ADRREGPOSTINCSRC_423   
00003AEA                          5732m ADRREGPOSTINCDEST_423: 
00003AEA                          5733mm         PRINTLB
00003AEA  43F8 00C5               5734mm         LEA     OLB, A1     
00003AEE  103C 000E               5735mm         MOVE.B  #14,D0          
00003AF2  4E4F                    5736mm         TRAP    #15
00003AF4                          5737mm         ENDM
00003AF4                          5738mm         PRINTANDEST D3  
00003AF4  3203                    5739mm         MOVE.W  D3, D1
00003AF6  E949                    5740mm         LSL     #$04, D1
00003AF8  E049                    5741mm         LSR     #$08, D1
00003AFA  EA49                    5742mm         LSR     #$05, D1
00003AFC  43F8 00C3               5743mm         LEA     OAN, A1     
00003B00  103C 000E               5744mm         MOVE.B  #14,D0          
00003B04  4E4F                    5745mm         TRAP    #15
00003B06  103C 0003               5746mm         MOVE.B  #3,D0          
00003B0A  4E4F                    5747mm         TRAP    #15
00003B0C                          5748mm         ENDM
00003B0C                          5749mm         PRINTRB
00003B0C  43F8 00C7               5750mm         LEA     ORB, A1     
00003B10  103C 000E               5751mm         MOVE.B  #14,D0          
00003B14  4E4F                    5752mm         TRAP    #15
00003B16                          5753mm         ENDM
00003B16                          5754mm         PRINTPI
00003B16  43F8 00CE               5755mm         LEA     OPSTINC, A1     
00003B1A  103C 000E               5756mm         MOVE.B  #14,D0          
00003B1E  4E4F                    5757mm         TRAP    #15
00003B20                          5758mm         ENDM
00003B20  6000 0454               5759m         BRA     COMPLETE_423  
00003B24                          5760m ADRREGPOSTINCSRC_423:           
00003B24                          5761mm         PRINTLB
00003B24  43F8 00C5               5762mm         LEA     OLB, A1     
00003B28  103C 000E               5763mm         MOVE.B  #14,D0          
00003B2C  4E4F                    5764mm         TRAP    #15
00003B2E                          5765mm         ENDM
00003B2E                          5766mm         PRINTANSRC D3  
00003B2E  3203                    5767mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B30  E149                    5768mm         LSL     #$08, D1
00003B32  EB49                    5769mm         LSL     #$05, D1
00003B34  E049                    5770mm         LSR     #$08, D1
00003B36  EA49                    5771mm         LSR     #$05, D1
00003B38  43F8 00C3               5772mm         LEA     OAN, A1     
00003B3C  103C 000E               5773mm         MOVE.B  #14,D0          
00003B40  4E4F                    5774mm         TRAP    #15
00003B42  103C 0003               5775mm         MOVE.B  #3,D0          
00003B46  4E4F                    5776mm         TRAP    #15
00003B48                          5777mm         ENDM
00003B48                          5778mm         PRINTRB
00003B48  43F8 00C7               5779mm         LEA     ORB, A1     
00003B4C  103C 000E               5780mm         MOVE.B  #14,D0          
00003B50  4E4F                    5781mm         TRAP    #15
00003B52                          5782mm         ENDM
00003B52                          5783mm         PRINTPI
00003B52  43F8 00CE               5784mm         LEA     OPSTINC, A1     
00003B56  103C 000E               5785mm         MOVE.B  #14,D0          
00003B5A  4E4F                    5786mm         TRAP    #15
00003B5C                          5787mm         ENDM
00003B5C  6000 0418               5788m         BRA     COMPLETE_423  
00003B60                          5789m ADRREGPREDEC_423: 
00003B60  BC3C 0001               5790m         CMP.B   #$01, D6
00003B64  6700 003C               5791m         BEQ     ADRREGPREDECSRC_423   
00003B68                          5792m ADRREGPREDECDEST_423:
00003B68                          5793mm         PRINTPD  
00003B68  43F8 00CC               5794mm         LEA     OPREDEC, A1     
00003B6C  103C 000E               5795mm         MOVE.B  #14,D0          
00003B70  4E4F                    5796mm         TRAP    #15
00003B72                          5797mm         ENDM
00003B72                          5798mm         PRINTLB
00003B72  43F8 00C5               5799mm         LEA     OLB, A1     
00003B76  103C 000E               5800mm         MOVE.B  #14,D0          
00003B7A  4E4F                    5801mm         TRAP    #15
00003B7C                          5802mm         ENDM
00003B7C                          5803mm         PRINTANDEST D3  
00003B7C  3203                    5804mm         MOVE.W  D3, D1
00003B7E  E949                    5805mm         LSL     #$04, D1
00003B80  E049                    5806mm         LSR     #$08, D1
00003B82  EA49                    5807mm         LSR     #$05, D1
00003B84  43F8 00C3               5808mm         LEA     OAN, A1     
00003B88  103C 000E               5809mm         MOVE.B  #14,D0          
00003B8C  4E4F                    5810mm         TRAP    #15
00003B8E  103C 0003               5811mm         MOVE.B  #3,D0          
00003B92  4E4F                    5812mm         TRAP    #15
00003B94                          5813mm         ENDM
00003B94                          5814mm         PRINTRB
00003B94  43F8 00C7               5815mm         LEA     ORB, A1     
00003B98  103C 000E               5816mm         MOVE.B  #14,D0          
00003B9C  4E4F                    5817mm         TRAP    #15
00003B9E                          5818mm         ENDM
00003B9E  6000 03D6               5819m         BRA     COMPLETE_423   
00003BA2                          5820m ADRREGPREDECSRC_423: 
00003BA2                          5821mm         PRINTPD  
00003BA2  43F8 00CC               5822mm         LEA     OPREDEC, A1     
00003BA6  103C 000E               5823mm         MOVE.B  #14,D0          
00003BAA  4E4F                    5824mm         TRAP    #15
00003BAC                          5825mm         ENDM
00003BAC                          5826mm         PRINTLB
00003BAC  43F8 00C5               5827mm         LEA     OLB, A1     
00003BB0  103C 000E               5828mm         MOVE.B  #14,D0          
00003BB4  4E4F                    5829mm         TRAP    #15
00003BB6                          5830mm         ENDM
00003BB6                          5831mm         PRINTANSRC D3  
00003BB6  3203                    5832mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BB8  E149                    5833mm         LSL     #$08, D1
00003BBA  EB49                    5834mm         LSL     #$05, D1
00003BBC  E049                    5835mm         LSR     #$08, D1
00003BBE  EA49                    5836mm         LSR     #$05, D1
00003BC0  43F8 00C3               5837mm         LEA     OAN, A1     
00003BC4  103C 000E               5838mm         MOVE.B  #14,D0          
00003BC8  4E4F                    5839mm         TRAP    #15
00003BCA  103C 0003               5840mm         MOVE.B  #3,D0          
00003BCE  4E4F                    5841mm         TRAP    #15
00003BD0                          5842mm         ENDM
00003BD0                          5843mm         PRINTRB
00003BD0  43F8 00C7               5844mm         LEA     ORB, A1     
00003BD4  103C 000E               5845mm         MOVE.B  #14,D0          
00003BD8  4E4F                    5846mm         TRAP    #15
00003BDA                          5847mm         ENDM
00003BDA  6000 039A               5848m         BRA     COMPLETE_423
00003BDE                          5849m        
00003BDE                          5850m ADRABSOLUTE_423:
00003BDE  BC3C 0001               5851m         CMP.B   #$01, D6
00003BE2  6600 0018               5852m         BNE     ADRABSOLUTEDST_423 
00003BE6                          5853m         
00003BE6  3A03                    5854m         MOVE.W  D3, D5
00003BE8  0803 0002               5855m         BTST    #2, D3
00003BEC  6600 0024               5856m         BNE     ADRIMMEDIATE_423
00003BF0  0803 0000               5857m         BTST    #0, D3
00003BF4  6600 0270               5858m         BNE     ADRABSOLUTEL_423
00003BF8  6000 01DA               5859m         BRA     ADRABSOLUTEW_423
00003BFC                          5860m ADRABSOLUTEDST_423:
00003BFC  3A03                    5861m         MOVE.W  D3, D5
00003BFE  0803 000B               5862m         BTST    #$B, D3
00003C02  6600 000E               5863m         BNE     ADRIMMEDIATE_423
00003C06  0803 0009               5864m         BTST    #$09, D3
00003C0A  6600 025A               5865m         BNE     ADRABSOLUTEL_423
00003C0E  6000 01C4               5866m         BRA     ADRABSOLUTEW_423
00003C12                          5867m ADRIMMEDIATE_423:
00003C12  BE3C 0001               5868m         CMP.B   #1, D7
00003C16  6700 009E               5869m         BEQ     ADRIMMEDIATEL_423
00003C1A                          5870m ADRIMMEDIATEW_423:
00003C1A  361A                    5871m         MOVE.W  (A2)+, D3
00003C1C                          5872mm         PRINTHASH
00003C1C  103C 0006               5873mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C20  323C 0023               5874mm         MOVE.W  #35, D1     ; AN = SIGN
00003C24  4E4F                    5875mm         TRAP    #15         ; OUTPUT = SIGN
00003C26                          5876mm         ENDM
00003C26                          5877mm         PRINTSIGN
00003C26  103C 0006               5878mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C2A  323C 0024               5879mm         MOVE.W  #36, D1     ; AN = SIGN
00003C2E  4E4F                    5880mm         TRAP    #15         ; OUTPUT = SIGN
00003C30                          5881mm         ENDM
00003C30                          5882mm         ADROUT
00003C30  3212                    5883mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C32  E049                    5884mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C34  E849                    5885mm         LSR.W   #4, D1      
00003C36                          5886mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C36  0C01 0009               5887mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C3A  6E00 000A               5888mmm         BGT     ALPHA_453
00003C3E  0601 0030               5889mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C42  6000 0006               5890mmm         BRA     DONE_453
00003C46  0601 0037               5891mmm ALPHA_453: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C4A  4E71                    5892mmm DONE_453: NOP
00003C4C                          5893mmm         ENDM
00003C4C  4E4F                    5894mm         TRAP    #15         ; EXECUTE OUTPUT
00003C4E                          5895mm         
00003C4E  3212                    5896mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C50  E949                    5897mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003C52  E049                    5898mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C54  E849                    5899mm         LSR.W   #4, D1      
00003C56                          5900mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C56  0C01 0009               5901mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C5A  6E00 000A               5902mmm         BGT     ALPHA_454
00003C5E  0601 0030               5903mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C62  6000 0006               5904mmm         BRA     DONE_454
00003C66  0601 0037               5905mmm ALPHA_454: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C6A  4E71                    5906mmm DONE_454: NOP
00003C6C                          5907mmm         ENDM
00003C6C  4E4F                    5908mm         TRAP    #15         ; EXECUTE OUTPUT
00003C6E                          5909mm         
00003C6E  3212                    5910mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C70  E149                    5911mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C72  E049                    5912mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C74  E849                    5913mm         LSR.W   #4, D1      
00003C76                          5914mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C76  0C01 0009               5915mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C7A  6E00 000A               5916mmm         BGT     ALPHA_455
00003C7E  0601 0030               5917mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C82  6000 0006               5918mmm         BRA     DONE_455
00003C86  0601 0037               5919mmm ALPHA_455: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C8A  4E71                    5920mmm DONE_455: NOP
00003C8C                          5921mmm         ENDM
00003C8C  4E4F                    5922mm         TRAP    #15         ; EXECUTE OUTPUT
00003C8E                          5923mm         
00003C8E  3212                    5924mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C90  E149                    5925mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C92  E949                    5926mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003C94  E049                    5927mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C96  E849                    5928mm         LSR.W   #4, D1      
00003C98                          5929mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C98  0C01 0009               5930mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C9C  6E00 000A               5931mmm         BGT     ALPHA_456
00003CA0  0601 0030               5932mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CA4  6000 0006               5933mmm         BRA     DONE_456
00003CA8  0601 0037               5934mmm ALPHA_456: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CAC  4E71                    5935mmm DONE_456: NOP
00003CAE                          5936mmm         ENDM
00003CAE  4E4F                    5937mm         TRAP    #15         ; EXECUTE OUTPUT       
00003CB0                          5938mm         ENDM 
00003CB0  3605                    5939m         MOVE.W  D5, D3
00003CB2  6000 02C2               5940m         BRA     COMPLETE_423
00003CB6                          5941m ADRIMMEDIATEL_423:
00003CB6  361A                    5942m         MOVE.W  (A2)+, D3
00003CB8                          5943mm         PRINTHASH
00003CB8  103C 0006               5944mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CBC  323C 0023               5945mm         MOVE.W  #35, D1     ; AN = SIGN
00003CC0  4E4F                    5946mm         TRAP    #15         ; OUTPUT = SIGN
00003CC2                          5947mm         ENDM
00003CC2                          5948mm         PRINTSIGN
00003CC2  103C 0006               5949mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CC6  323C 0024               5950mm         MOVE.W  #36, D1     ; AN = SIGN
00003CCA  4E4F                    5951mm         TRAP    #15         ; OUTPUT = SIGN
00003CCC                          5952mm         ENDM
00003CCC                          5953mm         ADROUT 
00003CCC  3212                    5954mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CCE  E049                    5955mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CD0  E849                    5956mm         LSR.W   #4, D1      
00003CD2                          5957mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CD2  0C01 0009               5958mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CD6  6E00 000A               5959mmm         BGT     ALPHA_460
00003CDA  0601 0030               5960mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CDE  6000 0006               5961mmm         BRA     DONE_460
00003CE2  0601 0037               5962mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CE6  4E71                    5963mmm DONE_460: NOP
00003CE8                          5964mmm         ENDM
00003CE8  4E4F                    5965mm         TRAP    #15         ; EXECUTE OUTPUT
00003CEA                          5966mm         
00003CEA  3212                    5967mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CEC  E949                    5968mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003CEE  E049                    5969mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CF0  E849                    5970mm         LSR.W   #4, D1      
00003CF2                          5971mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CF2  0C01 0009               5972mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CF6  6E00 000A               5973mmm         BGT     ALPHA_461
00003CFA  0601 0030               5974mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CFE  6000 0006               5975mmm         BRA     DONE_461
00003D02  0601 0037               5976mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D06  4E71                    5977mmm DONE_461: NOP
00003D08                          5978mmm         ENDM
00003D08  4E4F                    5979mm         TRAP    #15         ; EXECUTE OUTPUT
00003D0A                          5980mm         
00003D0A  3212                    5981mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D0C  E149                    5982mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D0E  E049                    5983mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D10  E849                    5984mm         LSR.W   #4, D1      
00003D12                          5985mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D12  0C01 0009               5986mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D16  6E00 000A               5987mmm         BGT     ALPHA_462
00003D1A  0601 0030               5988mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D1E  6000 0006               5989mmm         BRA     DONE_462
00003D22  0601 0037               5990mmm ALPHA_462: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D26  4E71                    5991mmm DONE_462: NOP
00003D28                          5992mmm         ENDM
00003D28  4E4F                    5993mm         TRAP    #15         ; EXECUTE OUTPUT
00003D2A                          5994mm         
00003D2A  3212                    5995mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D2C  E149                    5996mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D2E  E949                    5997mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003D30  E049                    5998mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D32  E849                    5999mm         LSR.W   #4, D1      
00003D34                          6000mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D34  0C01 0009               6001mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D38  6E00 000A               6002mmm         BGT     ALPHA_463
00003D3C  0601 0030               6003mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D40  6000 0006               6004mmm         BRA     DONE_463
00003D44  0601 0037               6005mmm ALPHA_463: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D48  4E71                    6006mmm DONE_463: NOP
00003D4A                          6007mmm         ENDM
00003D4A  4E4F                    6008mm         TRAP    #15         ; EXECUTE OUTPUT       
00003D4C                          6009mm         ENDM 
00003D4C  361A                    6010m         MOVE.W  (A2)+, D3
00003D4E                          6011mm         ADROUT
00003D4E  3212                    6012mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D50  E049                    6013mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D52  E849                    6014mm         LSR.W   #4, D1      
00003D54                          6015mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D54  0C01 0009               6016mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D58  6E00 000A               6017mmm         BGT     ALPHA_465
00003D5C  0601 0030               6018mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D60  6000 0006               6019mmm         BRA     DONE_465
00003D64  0601 0037               6020mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D68  4E71                    6021mmm DONE_465: NOP
00003D6A                          6022mmm         ENDM
00003D6A  4E4F                    6023mm         TRAP    #15         ; EXECUTE OUTPUT
00003D6C                          6024mm         
00003D6C  3212                    6025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D6E  E949                    6026mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D70  E049                    6027mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D72  E849                    6028mm         LSR.W   #4, D1      
00003D74                          6029mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D74  0C01 0009               6030mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D78  6E00 000A               6031mmm         BGT     ALPHA_466
00003D7C  0601 0030               6032mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D80  6000 0006               6033mmm         BRA     DONE_466
00003D84  0601 0037               6034mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D88  4E71                    6035mmm DONE_466: NOP
00003D8A                          6036mmm         ENDM
00003D8A  4E4F                    6037mm         TRAP    #15         ; EXECUTE OUTPUT
00003D8C                          6038mm         
00003D8C  3212                    6039mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D8E  E149                    6040mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D90  E049                    6041mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D92  E849                    6042mm         LSR.W   #4, D1      
00003D94                          6043mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D94  0C01 0009               6044mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D98  6E00 000A               6045mmm         BGT     ALPHA_467
00003D9C  0601 0030               6046mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DA0  6000 0006               6047mmm         BRA     DONE_467
00003DA4  0601 0037               6048mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DA8  4E71                    6049mmm DONE_467: NOP
00003DAA                          6050mmm         ENDM
00003DAA  4E4F                    6051mm         TRAP    #15         ; EXECUTE OUTPUT
00003DAC                          6052mm         
00003DAC  3212                    6053mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DAE  E149                    6054mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DB0  E949                    6055mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DB2  E049                    6056mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DB4  E849                    6057mm         LSR.W   #4, D1      
00003DB6                          6058mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DB6  0C01 0009               6059mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DBA  6E00 000A               6060mmm         BGT     ALPHA_468
00003DBE  0601 0030               6061mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DC2  6000 0006               6062mmm         BRA     DONE_468
00003DC6  0601 0037               6063mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DCA  4E71                    6064mmm DONE_468: NOP
00003DCC                          6065mmm         ENDM
00003DCC  4E4F                    6066mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DCE                          6067mm         ENDM 
00003DCE  3605                    6068m         MOVE.W  D5, D3
00003DD0  6000 01A4               6069m         BRA     COMPLETE_423 
00003DD4                          6070m ADRABSOLUTEW_423:     
00003DD4  361A                    6071m         MOVE.W  (A2)+, D3
00003DD6                          6072mm         PRINTSIGN
00003DD6  103C 0006               6073mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DDA  323C 0024               6074mm         MOVE.W  #36, D1     ; AN = SIGN
00003DDE  4E4F                    6075mm         TRAP    #15         ; OUTPUT = SIGN
00003DE0                          6076mm         ENDM
00003DE0                          6077mm         ADROUT
00003DE0  3212                    6078mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DE2  E049                    6079mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DE4  E849                    6080mm         LSR.W   #4, D1      
00003DE6                          6081mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DE6  0C01 0009               6082mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DEA  6E00 000A               6083mmm         BGT     ALPHA_471
00003DEE  0601 0030               6084mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DF2  6000 0006               6085mmm         BRA     DONE_471
00003DF6  0601 0037               6086mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DFA  4E71                    6087mmm DONE_471: NOP
00003DFC                          6088mmm         ENDM
00003DFC  4E4F                    6089mm         TRAP    #15         ; EXECUTE OUTPUT
00003DFE                          6090mm         
00003DFE  3212                    6091mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E00  E949                    6092mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E02  E049                    6093mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E04  E849                    6094mm         LSR.W   #4, D1      
00003E06                          6095mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E06  0C01 0009               6096mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E0A  6E00 000A               6097mmm         BGT     ALPHA_472
00003E0E  0601 0030               6098mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E12  6000 0006               6099mmm         BRA     DONE_472
00003E16  0601 0037               6100mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E1A  4E71                    6101mmm DONE_472: NOP
00003E1C                          6102mmm         ENDM
00003E1C  4E4F                    6103mm         TRAP    #15         ; EXECUTE OUTPUT
00003E1E                          6104mm         
00003E1E  3212                    6105mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E20  E149                    6106mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E22  E049                    6107mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E24  E849                    6108mm         LSR.W   #4, D1      
00003E26                          6109mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E26  0C01 0009               6110mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E2A  6E00 000A               6111mmm         BGT     ALPHA_473
00003E2E  0601 0030               6112mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E32  6000 0006               6113mmm         BRA     DONE_473
00003E36  0601 0037               6114mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E3A  4E71                    6115mmm DONE_473: NOP
00003E3C                          6116mmm         ENDM
00003E3C  4E4F                    6117mm         TRAP    #15         ; EXECUTE OUTPUT
00003E3E                          6118mm         
00003E3E  3212                    6119mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E40  E149                    6120mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E42  E949                    6121mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E44  E049                    6122mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E46  E849                    6123mm         LSR.W   #4, D1      
00003E48                          6124mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E48  0C01 0009               6125mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E4C  6E00 000A               6126mmm         BGT     ALPHA_474
00003E50  0601 0030               6127mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E54  6000 0006               6128mmm         BRA     DONE_474
00003E58  0601 0037               6129mmm ALPHA_474: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E5C  4E71                    6130mmm DONE_474: NOP
00003E5E                          6131mmm         ENDM
00003E5E  4E4F                    6132mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E60                          6133mm         ENDM 
00003E60  3605                    6134m         MOVE.W  D5, D3
00003E62  6000 0112               6135m         BRA     COMPLETE_423  
00003E66                          6136m ADRABSOLUTEL_423:  
00003E66  361A                    6137m         MOVE.W  (A2)+, D3
00003E68                          6138mm         PRINTSIGN
00003E68  103C 0006               6139mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E6C  323C 0024               6140mm         MOVE.W  #36, D1     ; AN = SIGN
00003E70  4E4F                    6141mm         TRAP    #15         ; OUTPUT = SIGN
00003E72                          6142mm         ENDM
00003E72                          6143mm         ADROUT 
00003E72  3212                    6144mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E74  E049                    6145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E76  E849                    6146mm         LSR.W   #4, D1      
00003E78                          6147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E78  0C01 0009               6148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E7C  6E00 000A               6149mmm         BGT     ALPHA_477
00003E80  0601 0030               6150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E84  6000 0006               6151mmm         BRA     DONE_477
00003E88  0601 0037               6152mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E8C  4E71                    6153mmm DONE_477: NOP
00003E8E                          6154mmm         ENDM
00003E8E  4E4F                    6155mm         TRAP    #15         ; EXECUTE OUTPUT
00003E90                          6156mm         
00003E90  3212                    6157mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E92  E949                    6158mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E94  E049                    6159mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E96  E849                    6160mm         LSR.W   #4, D1      
00003E98                          6161mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E98  0C01 0009               6162mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E9C  6E00 000A               6163mmm         BGT     ALPHA_478
00003EA0  0601 0030               6164mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EA4  6000 0006               6165mmm         BRA     DONE_478
00003EA8  0601 0037               6166mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EAC  4E71                    6167mmm DONE_478: NOP
00003EAE                          6168mmm         ENDM
00003EAE  4E4F                    6169mm         TRAP    #15         ; EXECUTE OUTPUT
00003EB0                          6170mm         
00003EB0  3212                    6171mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EB2  E149                    6172mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EB4  E049                    6173mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EB6  E849                    6174mm         LSR.W   #4, D1      
00003EB8                          6175mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EB8  0C01 0009               6176mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EBC  6E00 000A               6177mmm         BGT     ALPHA_479
00003EC0  0601 0030               6178mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EC4  6000 0006               6179mmm         BRA     DONE_479
00003EC8  0601 0037               6180mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ECC  4E71                    6181mmm DONE_479: NOP
00003ECE                          6182mmm         ENDM
00003ECE  4E4F                    6183mm         TRAP    #15         ; EXECUTE OUTPUT
00003ED0                          6184mm         
00003ED0  3212                    6185mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003ED2  E149                    6186mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003ED4  E949                    6187mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003ED6  E049                    6188mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ED8  E849                    6189mm         LSR.W   #4, D1      
00003EDA                          6190mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EDA  0C01 0009               6191mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EDE  6E00 000A               6192mmm         BGT     ALPHA_480
00003EE2  0601 0030               6193mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EE6  6000 0006               6194mmm         BRA     DONE_480
00003EEA  0601 0037               6195mmm ALPHA_480: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EEE  4E71                    6196mmm DONE_480: NOP
00003EF0                          6197mmm         ENDM
00003EF0  4E4F                    6198mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EF2                          6199mm         ENDM 
00003EF2  361A                    6200m         MOVE.W  (A2)+, D3
00003EF4                          6201mm         ADROUT
00003EF4  3212                    6202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EF6  E049                    6203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EF8  E849                    6204mm         LSR.W   #4, D1      
00003EFA                          6205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EFA  0C01 0009               6206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EFE  6E00 000A               6207mmm         BGT     ALPHA_482
00003F02  0601 0030               6208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F06  6000 0006               6209mmm         BRA     DONE_482
00003F0A  0601 0037               6210mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F0E  4E71                    6211mmm DONE_482: NOP
00003F10                          6212mmm         ENDM
00003F10  4E4F                    6213mm         TRAP    #15         ; EXECUTE OUTPUT
00003F12                          6214mm         
00003F12  3212                    6215mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F14  E949                    6216mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F16  E049                    6217mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F18  E849                    6218mm         LSR.W   #4, D1      
00003F1A                          6219mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F1A  0C01 0009               6220mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F1E  6E00 000A               6221mmm         BGT     ALPHA_483
00003F22  0601 0030               6222mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F26  6000 0006               6223mmm         BRA     DONE_483
00003F2A  0601 0037               6224mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F2E  4E71                    6225mmm DONE_483: NOP
00003F30                          6226mmm         ENDM
00003F30  4E4F                    6227mm         TRAP    #15         ; EXECUTE OUTPUT
00003F32                          6228mm         
00003F32  3212                    6229mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F34  E149                    6230mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F36  E049                    6231mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F38  E849                    6232mm         LSR.W   #4, D1      
00003F3A                          6233mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F3A  0C01 0009               6234mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F3E  6E00 000A               6235mmm         BGT     ALPHA_484
00003F42  0601 0030               6236mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F46  6000 0006               6237mmm         BRA     DONE_484
00003F4A  0601 0037               6238mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F4E  4E71                    6239mmm DONE_484: NOP
00003F50                          6240mmm         ENDM
00003F50  4E4F                    6241mm         TRAP    #15         ; EXECUTE OUTPUT
00003F52                          6242mm         
00003F52  3212                    6243mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F54  E149                    6244mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F56  E949                    6245mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F58  E049                    6246mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F5A  E849                    6247mm         LSR.W   #4, D1      
00003F5C                          6248mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F5C  0C01 0009               6249mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F60  6E00 000A               6250mmm         BGT     ALPHA_485
00003F64  0601 0030               6251mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F68  6000 0006               6252mmm         BRA     DONE_485
00003F6C  0601 0037               6253mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F70  4E71                    6254mmm DONE_485: NOP
00003F72                          6255mmm         ENDM
00003F72  4E4F                    6256mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F74                          6257mm         ENDM 
00003F74  3605                    6258m         MOVE.W  D5, D3
00003F76                          6259m 
00003F76                          6260m COMPLETE_423:  ; OPCODE HAS BEEN VERIFIED
00003F76                          6261m         ENDM
00003F76                          6262m         printComma
00003F76  43F8 00C9               6263m         LEA     OCOMMA, A1     
00003F7A  103C 000E               6264m         MOVE.B  #14,D0          
00003F7E  4E4F                    6265m         TRAP    #15
00003F80                          6266m         ENDM
00003F80                          6267m         printDnDest     D3
00003F80  3203                    6268m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003F82  E949                    6269m         LSL     #$04, D1
00003F84  E049                    6270m         LSR     #$08, D1
00003F86  EA49                    6271m         LSR     #$05, D1
00003F88  43F8 00C1               6272m         LEA     ODN, A1     
00003F8C  103C 000E               6273m         MOVE.B  #14,D0          
00003F90  4E4F                    6274m         TRAP    #15
00003F92  103C 0003               6275m         MOVE.B  #3,D0          
00003F96  4E4F                    6276m         TRAP    #15
00003F98                          6277m         ENDM
00003F98  4E75                    6278          RTS                 ; Return from decodeMULS subroutine
00003F9A                          6279          
00003F9A                          6280  ; ------------------------------------------------------------
00003F9A                          6281  ; 7. "decodeDIVU" subroutine
00003F9A                          6282  ; AUTHOR
00003F9A                          6283  ;
00003F9A                          6284  ; TODO: DESCRIPTION DIVU
00003F9A                          6285  ; ------------------------------------------------------------
00003F9A                          6286  decodeDIVU:
00003F9A                          6287m         verifyOpcode    pDIVU, (A2)
00003F9A  43F8 013A               6288m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
00003F9E  3612                    6289m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FA0  123C 000F               6290m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003FA4                          6291m         
00003FA4                          6292m LOOP_488: 
00003FA4  0C11 0030               6293m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003FA8  6700 000E               6294m         BEQ     CHECKFOR0_488
00003FAC  0C11 0031               6295m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003FB0  6700 0010               6296m         BEQ     CHECKFOR1_488
00003FB4  6000 0012               6297m         BRA     NEXT_488      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003FB8                          6298m         
00003FB8                          6299m CHECKFOR0_488: 
00003FB8  0303                    6300m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003FBA  6600 2C1A               6301m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003FBE  6000 0008               6302m         BRA     NEXT_488
00003FC2                          6303m 
00003FC2                          6304m CHECKFOR1_488:
00003FC2  0303                    6305m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003FC4  6700 2C10               6306m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003FC8                          6307m 
00003FC8                          6308m NEXT_488: 
00003FC8  B23C 0000               6309m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003FCC  6700 0008               6310m         BEQ     COMPLETE_488  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003FD0  5301                    6311m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003FD2  1819                    6312m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003FD4  60CE                    6313m         BRA     LOOP_488      ; BEGIN LOOP AGAIN
00003FD6                          6314m 
00003FD6                          6315m COMPLETE_488:  ; OPCODE HAS BEEN VERIFIED
00003FD6                          6316m         ENDM
00003FD6  43F8 007C               6317          LEA     oDIVU, A1     
00003FDA  103C 000E               6318          MOVE.B  #14,D0          
00003FDE  4E4F                    6319          TRAP    #15
00003FE0                          6320m         printSize       (A2)
00003FE0  3612                    6321m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FE2  4247                    6322m         CLR     D7      
00003FE4                          6323m CHECKFORB_489: 
00003FE4  0803 000D               6324m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003FE8  6600 0010               6325m         BNE     CHECKFORW_489  ; IF NOT GO TO WORD SIZE
00003FEC  43F8 00B5               6326m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003FF0  103C 000E               6327m         MOVE.B  #14,D0          
00003FF4  4E4F                    6328m         TRAP    #15
00003FF6  6000 0026               6329m         BRA     COMPLETE_489      
00003FFA                          6330m CHECKFORW_489: 
00003FFA  0803 000C               6331m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003FFE  6700 0010               6332m         BEQ     CHECKFORL_489  ; IF NOT, SIZE CANNOT BE WORD
00004002  43F8 00B9               6333m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
00004006  103C 000E               6334m         MOVE.B  #14,D0          
0000400A  4E4F                    6335m         TRAP    #15
0000400C  6000 0010               6336m         BRA     COMPLETE_489  
00004010                          6337m CHECKFORL_489:
00004010  1E3C 0001               6338m         MOVE.B  #$1, D7
00004014  43F8 00BD               6339m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
00004018  103C 000E               6340m         MOVE.B  #14,D0          
0000401C  4E4F                    6341m         TRAP    #15
0000401E                          6342m COMPLETE_489:  ; SIZE HAS BEEN PRINTED
0000401E                          6343m         ENDM
0000401E                          6344m         prepareAdrMode  #$1, (A2)
0000401E  3C3C 0001               6345m         MOVE.W  #$1, D6      ; INPUT VALUE
00004022  3212                    6346m         MOVE.W  (A2), D1
00004024  BC3C 0001               6347m         CMP.B   #$01, D6
00004028  6700 000C               6348m         BEQ     ADRSOURCE_490    
0000402C                          6349m ADRDEST_490:
0000402C  EF49                    6350m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000402E  E049                    6351m         LSR     #$08, D1
00004030  EA49                    6352m         LSR     #$05, D1
00004032  6000 000A               6353m         BRA     COMPLETE_490 
00004036                          6354m ADRSOURCE_490:                
00004036  E149                    6355m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004038  E549                    6356m         LSL     #$02, D1
0000403A  E049                    6357m         LSR     #$08, D1
0000403C  EA49                    6358m         LSR     #$05, D1
0000403E                          6359m COMPLETE_490:  ; OPCODE HAS BEEN VERIFIED
0000403E                          6360m         ENDM        
0000403E                          6361m         decodeAdrMode   (A2), D1
0000403E  3612                    6362m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004040  3201                    6363m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004042                          6364m 
00004042  B23C 0001               6365m         CMP.B   #$01, D1
00004046  6700 0066               6366m         BEQ     ADRREGDIRECT_491    
0000404A  B23C 0002               6367m         CMP.B   #$02, D1
0000404E  6700 00A0               6368m         BEQ     ADRREGINDIRECT_491  
00004052  B23C 0003               6369m         CMP.B   #$03, D1
00004056  6700 0102               6370m         BEQ     ADRREGPOSTINC_491  
0000405A  B23C 0004               6371m         CMP.B   #$04, D1
0000405E  6700 0178               6372m         BEQ     ADRREGPREDEC_491
00004062  B23C 0007               6373m         CMP.B   #$07, D1
00004066  6700 01EE               6374m         BEQ     ADRABSOLUTE_491    
0000406A                          6375m         
0000406A                          6376m DATAREGDIRECT_491: 
0000406A  BC3C 0001               6377m         CMP.B   #$01, D6
0000406E  6700 001E               6378m         BEQ     DATAREGDIRECTSRC_491   
00004072                          6379m DATAREGDIRECTDEST_491: 
00004072                          6380mm         PRINTDNDEST D3 
00004072  3203                    6381mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004074  E949                    6382mm         LSL     #$04, D1
00004076  E049                    6383mm         LSR     #$08, D1
00004078  EA49                    6384mm         LSR     #$05, D1
0000407A  43F8 00C1               6385mm         LEA     ODN, A1     
0000407E  103C 000E               6386mm         MOVE.B  #14,D0          
00004082  4E4F                    6387mm         TRAP    #15
00004084  103C 0003               6388mm         MOVE.B  #3,D0          
00004088  4E4F                    6389mm         TRAP    #15
0000408A                          6390mm         ENDM
0000408A  6000 0562               6391m         BRA     COMPLETE_491 
0000408E                          6392m DATAREGDIRECTSRC_491: 
0000408E                          6393mm         PRINTDNSRC D3 
0000408E  4281                    6394mm         CLR.L   D1
00004090  3203                    6395mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004092  E149                    6396mm         LSL     #$08, D1
00004094  EB49                    6397mm         LSL     #$05, D1
00004096  E049                    6398mm         LSR     #$08, D1
00004098  EA49                    6399mm         LSR     #$05, D1
0000409A  43F8 00C1               6400mm         LEA     ODN, A1     
0000409E  103C 000E               6401mm         MOVE.B  #14,D0          
000040A2  4E4F                    6402mm         TRAP    #15
000040A4  103C 0003               6403mm         MOVE.B  #3,D0          
000040A8  4E4F                    6404mm         TRAP    #15
000040AA                          6405mm         ENDM
000040AA  6000 0542               6406m         BRA     COMPLETE_491   
000040AE                          6407m         
000040AE                          6408m ADRREGDIRECT_491: 
000040AE  BC3C 0001               6409m         CMP.B   #$01, D6
000040B2  6700 001E               6410m         BEQ     ADRREGDIRECTSRC_491   
000040B6                          6411m ADRREGDIRECTDEST_491:
000040B6                          6412mm         PRINTANDEST D3
000040B6  3203                    6413mm         MOVE.W  D3, D1
000040B8  E949                    6414mm         LSL     #$04, D1
000040BA  E049                    6415mm         LSR     #$08, D1
000040BC  EA49                    6416mm         LSR     #$05, D1
000040BE  43F8 00C3               6417mm         LEA     OAN, A1     
000040C2  103C 000E               6418mm         MOVE.B  #14,D0          
000040C6  4E4F                    6419mm         TRAP    #15
000040C8  103C 0003               6420mm         MOVE.B  #3,D0          
000040CC  4E4F                    6421mm         TRAP    #15
000040CE                          6422mm         ENDM
000040CE  6000 051E               6423m         BRA     COMPLETE_491   
000040D2                          6424m ADRREGDIRECTSRC_491:
000040D2                          6425mm         PRINTANSRC D3
000040D2  3203                    6426mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000040D4  E149                    6427mm         LSL     #$08, D1
000040D6  EB49                    6428mm         LSL     #$05, D1
000040D8  E049                    6429mm         LSR     #$08, D1
000040DA  EA49                    6430mm         LSR     #$05, D1
000040DC  43F8 00C3               6431mm         LEA     OAN, A1     
000040E0  103C 000E               6432mm         MOVE.B  #14,D0          
000040E4  4E4F                    6433mm         TRAP    #15
000040E6  103C 0003               6434mm         MOVE.B  #3,D0          
000040EA  4E4F                    6435mm         TRAP    #15
000040EC                          6436mm         ENDM
000040EC  6000 0500               6437m         BRA     COMPLETE_491   
000040F0                          6438m        
000040F0                          6439m ADRREGINDIRECT_491:   
000040F0  BC3C 0001               6440m         CMP.B   #$01, D6
000040F4  6700 0032               6441m         BEQ     ADRREGINDIRECTSRC_491   
000040F8                          6442m ADRREGINDIRECTDEST_491:
000040F8                          6443mm         PRINTLB
000040F8  43F8 00C5               6444mm         LEA     OLB, A1     
000040FC  103C 000E               6445mm         MOVE.B  #14,D0          
00004100  4E4F                    6446mm         TRAP    #15
00004102                          6447mm         ENDM
00004102                          6448mm         PRINTANDEST D3  
00004102  3203                    6449mm         MOVE.W  D3, D1
00004104  E949                    6450mm         LSL     #$04, D1
00004106  E049                    6451mm         LSR     #$08, D1
00004108  EA49                    6452mm         LSR     #$05, D1
0000410A  43F8 00C3               6453mm         LEA     OAN, A1     
0000410E  103C 000E               6454mm         MOVE.B  #14,D0          
00004112  4E4F                    6455mm         TRAP    #15
00004114  103C 0003               6456mm         MOVE.B  #3,D0          
00004118  4E4F                    6457mm         TRAP    #15
0000411A                          6458mm         ENDM
0000411A                          6459mm         PRINTRB
0000411A  43F8 00C7               6460mm         LEA     ORB, A1     
0000411E  103C 000E               6461mm         MOVE.B  #14,D0          
00004122  4E4F                    6462mm         TRAP    #15
00004124                          6463mm         ENDM
00004124  6000 04C8               6464m         BRA     COMPLETE_491     
00004128                          6465m ADRREGINDIRECTSRC_491:   
00004128                          6466mm         PRINTLB
00004128  43F8 00C5               6467mm         LEA     OLB, A1     
0000412C  103C 000E               6468mm         MOVE.B  #14,D0          
00004130  4E4F                    6469mm         TRAP    #15
00004132                          6470mm         ENDM
00004132                          6471mm         PRINTANSRC D3  
00004132  3203                    6472mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004134  E149                    6473mm         LSL     #$08, D1
00004136  EB49                    6474mm         LSL     #$05, D1
00004138  E049                    6475mm         LSR     #$08, D1
0000413A  EA49                    6476mm         LSR     #$05, D1
0000413C  43F8 00C3               6477mm         LEA     OAN, A1     
00004140  103C 000E               6478mm         MOVE.B  #14,D0          
00004144  4E4F                    6479mm         TRAP    #15
00004146  103C 0003               6480mm         MOVE.B  #3,D0          
0000414A  4E4F                    6481mm         TRAP    #15
0000414C                          6482mm         ENDM
0000414C                          6483mm         PRINTRB
0000414C  43F8 00C7               6484mm         LEA     ORB, A1     
00004150  103C 000E               6485mm         MOVE.B  #14,D0          
00004154  4E4F                    6486mm         TRAP    #15
00004156                          6487mm         ENDM
00004156  6000 0496               6488m         BRA     COMPLETE_491   
0000415A                          6489m         
0000415A                          6490m ADRREGPOSTINC_491:   
0000415A  BC3C 0001               6491m         CMP.B   #$01, D6
0000415E  6700 003C               6492m         BEQ     ADRREGPOSTINCSRC_491   
00004162                          6493m ADRREGPOSTINCDEST_491: 
00004162                          6494mm         PRINTLB
00004162  43F8 00C5               6495mm         LEA     OLB, A1     
00004166  103C 000E               6496mm         MOVE.B  #14,D0          
0000416A  4E4F                    6497mm         TRAP    #15
0000416C                          6498mm         ENDM
0000416C                          6499mm         PRINTANDEST D3  
0000416C  3203                    6500mm         MOVE.W  D3, D1
0000416E  E949                    6501mm         LSL     #$04, D1
00004170  E049                    6502mm         LSR     #$08, D1
00004172  EA49                    6503mm         LSR     #$05, D1
00004174  43F8 00C3               6504mm         LEA     OAN, A1     
00004178  103C 000E               6505mm         MOVE.B  #14,D0          
0000417C  4E4F                    6506mm         TRAP    #15
0000417E  103C 0003               6507mm         MOVE.B  #3,D0          
00004182  4E4F                    6508mm         TRAP    #15
00004184                          6509mm         ENDM
00004184                          6510mm         PRINTRB
00004184  43F8 00C7               6511mm         LEA     ORB, A1     
00004188  103C 000E               6512mm         MOVE.B  #14,D0          
0000418C  4E4F                    6513mm         TRAP    #15
0000418E                          6514mm         ENDM
0000418E                          6515mm         PRINTPI
0000418E  43F8 00CE               6516mm         LEA     OPSTINC, A1     
00004192  103C 000E               6517mm         MOVE.B  #14,D0          
00004196  4E4F                    6518mm         TRAP    #15
00004198                          6519mm         ENDM
00004198  6000 0454               6520m         BRA     COMPLETE_491  
0000419C                          6521m ADRREGPOSTINCSRC_491:           
0000419C                          6522mm         PRINTLB
0000419C  43F8 00C5               6523mm         LEA     OLB, A1     
000041A0  103C 000E               6524mm         MOVE.B  #14,D0          
000041A4  4E4F                    6525mm         TRAP    #15
000041A6                          6526mm         ENDM
000041A6                          6527mm         PRINTANSRC D3  
000041A6  3203                    6528mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041A8  E149                    6529mm         LSL     #$08, D1
000041AA  EB49                    6530mm         LSL     #$05, D1
000041AC  E049                    6531mm         LSR     #$08, D1
000041AE  EA49                    6532mm         LSR     #$05, D1
000041B0  43F8 00C3               6533mm         LEA     OAN, A1     
000041B4  103C 000E               6534mm         MOVE.B  #14,D0          
000041B8  4E4F                    6535mm         TRAP    #15
000041BA  103C 0003               6536mm         MOVE.B  #3,D0          
000041BE  4E4F                    6537mm         TRAP    #15
000041C0                          6538mm         ENDM
000041C0                          6539mm         PRINTRB
000041C0  43F8 00C7               6540mm         LEA     ORB, A1     
000041C4  103C 000E               6541mm         MOVE.B  #14,D0          
000041C8  4E4F                    6542mm         TRAP    #15
000041CA                          6543mm         ENDM
000041CA                          6544mm         PRINTPI
000041CA  43F8 00CE               6545mm         LEA     OPSTINC, A1     
000041CE  103C 000E               6546mm         MOVE.B  #14,D0          
000041D2  4E4F                    6547mm         TRAP    #15
000041D4                          6548mm         ENDM
000041D4  6000 0418               6549m         BRA     COMPLETE_491  
000041D8                          6550m ADRREGPREDEC_491: 
000041D8  BC3C 0001               6551m         CMP.B   #$01, D6
000041DC  6700 003C               6552m         BEQ     ADRREGPREDECSRC_491   
000041E0                          6553m ADRREGPREDECDEST_491:
000041E0                          6554mm         PRINTPD  
000041E0  43F8 00CC               6555mm         LEA     OPREDEC, A1     
000041E4  103C 000E               6556mm         MOVE.B  #14,D0          
000041E8  4E4F                    6557mm         TRAP    #15
000041EA                          6558mm         ENDM
000041EA                          6559mm         PRINTLB
000041EA  43F8 00C5               6560mm         LEA     OLB, A1     
000041EE  103C 000E               6561mm         MOVE.B  #14,D0          
000041F2  4E4F                    6562mm         TRAP    #15
000041F4                          6563mm         ENDM
000041F4                          6564mm         PRINTANDEST D3  
000041F4  3203                    6565mm         MOVE.W  D3, D1
000041F6  E949                    6566mm         LSL     #$04, D1
000041F8  E049                    6567mm         LSR     #$08, D1
000041FA  EA49                    6568mm         LSR     #$05, D1
000041FC  43F8 00C3               6569mm         LEA     OAN, A1     
00004200  103C 000E               6570mm         MOVE.B  #14,D0          
00004204  4E4F                    6571mm         TRAP    #15
00004206  103C 0003               6572mm         MOVE.B  #3,D0          
0000420A  4E4F                    6573mm         TRAP    #15
0000420C                          6574mm         ENDM
0000420C                          6575mm         PRINTRB
0000420C  43F8 00C7               6576mm         LEA     ORB, A1     
00004210  103C 000E               6577mm         MOVE.B  #14,D0          
00004214  4E4F                    6578mm         TRAP    #15
00004216                          6579mm         ENDM
00004216  6000 03D6               6580m         BRA     COMPLETE_491   
0000421A                          6581m ADRREGPREDECSRC_491: 
0000421A                          6582mm         PRINTPD  
0000421A  43F8 00CC               6583mm         LEA     OPREDEC, A1     
0000421E  103C 000E               6584mm         MOVE.B  #14,D0          
00004222  4E4F                    6585mm         TRAP    #15
00004224                          6586mm         ENDM
00004224                          6587mm         PRINTLB
00004224  43F8 00C5               6588mm         LEA     OLB, A1     
00004228  103C 000E               6589mm         MOVE.B  #14,D0          
0000422C  4E4F                    6590mm         TRAP    #15
0000422E                          6591mm         ENDM
0000422E                          6592mm         PRINTANSRC D3  
0000422E  3203                    6593mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004230  E149                    6594mm         LSL     #$08, D1
00004232  EB49                    6595mm         LSL     #$05, D1
00004234  E049                    6596mm         LSR     #$08, D1
00004236  EA49                    6597mm         LSR     #$05, D1
00004238  43F8 00C3               6598mm         LEA     OAN, A1     
0000423C  103C 000E               6599mm         MOVE.B  #14,D0          
00004240  4E4F                    6600mm         TRAP    #15
00004242  103C 0003               6601mm         MOVE.B  #3,D0          
00004246  4E4F                    6602mm         TRAP    #15
00004248                          6603mm         ENDM
00004248                          6604mm         PRINTRB
00004248  43F8 00C7               6605mm         LEA     ORB, A1     
0000424C  103C 000E               6606mm         MOVE.B  #14,D0          
00004250  4E4F                    6607mm         TRAP    #15
00004252                          6608mm         ENDM
00004252  6000 039A               6609m         BRA     COMPLETE_491
00004256                          6610m        
00004256                          6611m ADRABSOLUTE_491:
00004256  BC3C 0001               6612m         CMP.B   #$01, D6
0000425A  6600 0018               6613m         BNE     ADRABSOLUTEDST_491 
0000425E                          6614m         
0000425E  3A03                    6615m         MOVE.W  D3, D5
00004260  0803 0002               6616m         BTST    #2, D3
00004264  6600 0024               6617m         BNE     ADRIMMEDIATE_491
00004268  0803 0000               6618m         BTST    #0, D3
0000426C  6600 0270               6619m         BNE     ADRABSOLUTEL_491
00004270  6000 01DA               6620m         BRA     ADRABSOLUTEW_491
00004274                          6621m ADRABSOLUTEDST_491:
00004274  3A03                    6622m         MOVE.W  D3, D5
00004276  0803 000B               6623m         BTST    #$B, D3
0000427A  6600 000E               6624m         BNE     ADRIMMEDIATE_491
0000427E  0803 0009               6625m         BTST    #$09, D3
00004282  6600 025A               6626m         BNE     ADRABSOLUTEL_491
00004286  6000 01C4               6627m         BRA     ADRABSOLUTEW_491
0000428A                          6628m ADRIMMEDIATE_491:
0000428A  BE3C 0001               6629m         CMP.B   #1, D7
0000428E  6700 009E               6630m         BEQ     ADRIMMEDIATEL_491
00004292                          6631m ADRIMMEDIATEW_491:
00004292  361A                    6632m         MOVE.W  (A2)+, D3
00004294                          6633mm         PRINTHASH
00004294  103C 0006               6634mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004298  323C 0023               6635mm         MOVE.W  #35, D1     ; AN = SIGN
0000429C  4E4F                    6636mm         TRAP    #15         ; OUTPUT = SIGN
0000429E                          6637mm         ENDM
0000429E                          6638mm         PRINTSIGN
0000429E  103C 0006               6639mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042A2  323C 0024               6640mm         MOVE.W  #36, D1     ; AN = SIGN
000042A6  4E4F                    6641mm         TRAP    #15         ; OUTPUT = SIGN
000042A8                          6642mm         ENDM
000042A8                          6643mm         ADROUT
000042A8  3212                    6644mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042AA  E049                    6645mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042AC  E849                    6646mm         LSR.W   #4, D1      
000042AE                          6647mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042AE  0C01 0009               6648mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042B2  6E00 000A               6649mmm         BGT     ALPHA_521
000042B6  0601 0030               6650mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042BA  6000 0006               6651mmm         BRA     DONE_521
000042BE  0601 0037               6652mmm ALPHA_521: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042C2  4E71                    6653mmm DONE_521: NOP
000042C4                          6654mmm         ENDM
000042C4  4E4F                    6655mm         TRAP    #15         ; EXECUTE OUTPUT
000042C6                          6656mm         
000042C6  3212                    6657mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042C8  E949                    6658mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000042CA  E049                    6659mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042CC  E849                    6660mm         LSR.W   #4, D1      
000042CE                          6661mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042CE  0C01 0009               6662mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042D2  6E00 000A               6663mmm         BGT     ALPHA_522
000042D6  0601 0030               6664mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042DA  6000 0006               6665mmm         BRA     DONE_522
000042DE  0601 0037               6666mmm ALPHA_522: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042E2  4E71                    6667mmm DONE_522: NOP
000042E4                          6668mmm         ENDM
000042E4  4E4F                    6669mm         TRAP    #15         ; EXECUTE OUTPUT
000042E6                          6670mm         
000042E6  3212                    6671mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042E8  E149                    6672mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000042EA  E049                    6673mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042EC  E849                    6674mm         LSR.W   #4, D1      
000042EE                          6675mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042EE  0C01 0009               6676mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042F2  6E00 000A               6677mmm         BGT     ALPHA_523
000042F6  0601 0030               6678mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042FA  6000 0006               6679mmm         BRA     DONE_523
000042FE  0601 0037               6680mmm ALPHA_523: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004302  4E71                    6681mmm DONE_523: NOP
00004304                          6682mmm         ENDM
00004304  4E4F                    6683mm         TRAP    #15         ; EXECUTE OUTPUT
00004306                          6684mm         
00004306  3212                    6685mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004308  E149                    6686mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000430A  E949                    6687mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000430C  E049                    6688mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000430E  E849                    6689mm         LSR.W   #4, D1      
00004310                          6690mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004310  0C01 0009               6691mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004314  6E00 000A               6692mmm         BGT     ALPHA_524
00004318  0601 0030               6693mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000431C  6000 0006               6694mmm         BRA     DONE_524
00004320  0601 0037               6695mmm ALPHA_524: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004324  4E71                    6696mmm DONE_524: NOP
00004326                          6697mmm         ENDM
00004326  4E4F                    6698mm         TRAP    #15         ; EXECUTE OUTPUT       
00004328                          6699mm         ENDM 
00004328  3605                    6700m         MOVE.W  D5, D3
0000432A  6000 02C2               6701m         BRA     COMPLETE_491
0000432E                          6702m ADRIMMEDIATEL_491:
0000432E  361A                    6703m         MOVE.W  (A2)+, D3
00004330                          6704mm         PRINTHASH
00004330  103C 0006               6705mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004334  323C 0023               6706mm         MOVE.W  #35, D1     ; AN = SIGN
00004338  4E4F                    6707mm         TRAP    #15         ; OUTPUT = SIGN
0000433A                          6708mm         ENDM
0000433A                          6709mm         PRINTSIGN
0000433A  103C 0006               6710mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000433E  323C 0024               6711mm         MOVE.W  #36, D1     ; AN = SIGN
00004342  4E4F                    6712mm         TRAP    #15         ; OUTPUT = SIGN
00004344                          6713mm         ENDM
00004344                          6714mm         ADROUT 
00004344  3212                    6715mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004346  E049                    6716mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004348  E849                    6717mm         LSR.W   #4, D1      
0000434A                          6718mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000434A  0C01 0009               6719mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000434E  6E00 000A               6720mmm         BGT     ALPHA_528
00004352  0601 0030               6721mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004356  6000 0006               6722mmm         BRA     DONE_528
0000435A  0601 0037               6723mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000435E  4E71                    6724mmm DONE_528: NOP
00004360                          6725mmm         ENDM
00004360  4E4F                    6726mm         TRAP    #15         ; EXECUTE OUTPUT
00004362                          6727mm         
00004362  3212                    6728mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004364  E949                    6729mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004366  E049                    6730mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004368  E849                    6731mm         LSR.W   #4, D1      
0000436A                          6732mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000436A  0C01 0009               6733mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000436E  6E00 000A               6734mmm         BGT     ALPHA_529
00004372  0601 0030               6735mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004376  6000 0006               6736mmm         BRA     DONE_529
0000437A  0601 0037               6737mmm ALPHA_529: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000437E  4E71                    6738mmm DONE_529: NOP
00004380                          6739mmm         ENDM
00004380  4E4F                    6740mm         TRAP    #15         ; EXECUTE OUTPUT
00004382                          6741mm         
00004382  3212                    6742mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004384  E149                    6743mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004386  E049                    6744mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004388  E849                    6745mm         LSR.W   #4, D1      
0000438A                          6746mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000438A  0C01 0009               6747mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000438E  6E00 000A               6748mmm         BGT     ALPHA_530
00004392  0601 0030               6749mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004396  6000 0006               6750mmm         BRA     DONE_530
0000439A  0601 0037               6751mmm ALPHA_530: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000439E  4E71                    6752mmm DONE_530: NOP
000043A0                          6753mmm         ENDM
000043A0  4E4F                    6754mm         TRAP    #15         ; EXECUTE OUTPUT
000043A2                          6755mm         
000043A2  3212                    6756mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A4  E149                    6757mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043A6  E949                    6758mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043A8  E049                    6759mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043AA  E849                    6760mm         LSR.W   #4, D1      
000043AC                          6761mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043AC  0C01 0009               6762mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043B0  6E00 000A               6763mmm         BGT     ALPHA_531
000043B4  0601 0030               6764mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B8  6000 0006               6765mmm         BRA     DONE_531
000043BC  0601 0037               6766mmm ALPHA_531: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043C0  4E71                    6767mmm DONE_531: NOP
000043C2                          6768mmm         ENDM
000043C2  4E4F                    6769mm         TRAP    #15         ; EXECUTE OUTPUT       
000043C4                          6770mm         ENDM 
000043C4  361A                    6771m         MOVE.W  (A2)+, D3
000043C6                          6772mm         ADROUT
000043C6  3212                    6773mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043C8  E049                    6774mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043CA  E849                    6775mm         LSR.W   #4, D1      
000043CC                          6776mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043CC  0C01 0009               6777mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043D0  6E00 000A               6778mmm         BGT     ALPHA_533
000043D4  0601 0030               6779mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D8  6000 0006               6780mmm         BRA     DONE_533
000043DC  0601 0037               6781mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043E0  4E71                    6782mmm DONE_533: NOP
000043E2                          6783mmm         ENDM
000043E2  4E4F                    6784mm         TRAP    #15         ; EXECUTE OUTPUT
000043E4                          6785mm         
000043E4  3212                    6786mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043E6  E949                    6787mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043E8  E049                    6788mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043EA  E849                    6789mm         LSR.W   #4, D1      
000043EC                          6790mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043EC  0C01 0009               6791mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043F0  6E00 000A               6792mmm         BGT     ALPHA_534
000043F4  0601 0030               6793mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F8  6000 0006               6794mmm         BRA     DONE_534
000043FC  0601 0037               6795mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004400  4E71                    6796mmm DONE_534: NOP
00004402                          6797mmm         ENDM
00004402  4E4F                    6798mm         TRAP    #15         ; EXECUTE OUTPUT
00004404                          6799mm         
00004404  3212                    6800mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004406  E149                    6801mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004408  E049                    6802mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000440A  E849                    6803mm         LSR.W   #4, D1      
0000440C                          6804mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000440C  0C01 0009               6805mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004410  6E00 000A               6806mmm         BGT     ALPHA_535
00004414  0601 0030               6807mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004418  6000 0006               6808mmm         BRA     DONE_535
0000441C  0601 0037               6809mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004420  4E71                    6810mmm DONE_535: NOP
00004422                          6811mmm         ENDM
00004422  4E4F                    6812mm         TRAP    #15         ; EXECUTE OUTPUT
00004424                          6813mm         
00004424  3212                    6814mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004426  E149                    6815mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004428  E949                    6816mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000442A  E049                    6817mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000442C  E849                    6818mm         LSR.W   #4, D1      
0000442E                          6819mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000442E  0C01 0009               6820mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004432  6E00 000A               6821mmm         BGT     ALPHA_536
00004436  0601 0030               6822mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000443A  6000 0006               6823mmm         BRA     DONE_536
0000443E  0601 0037               6824mmm ALPHA_536: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004442  4E71                    6825mmm DONE_536: NOP
00004444                          6826mmm         ENDM
00004444  4E4F                    6827mm         TRAP    #15         ; EXECUTE OUTPUT       
00004446                          6828mm         ENDM 
00004446  3605                    6829m         MOVE.W  D5, D3
00004448  6000 01A4               6830m         BRA     COMPLETE_491 
0000444C                          6831m ADRABSOLUTEW_491:     
0000444C  361A                    6832m         MOVE.W  (A2)+, D3
0000444E                          6833mm         PRINTSIGN
0000444E  103C 0006               6834mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004452  323C 0024               6835mm         MOVE.W  #36, D1     ; AN = SIGN
00004456  4E4F                    6836mm         TRAP    #15         ; OUTPUT = SIGN
00004458                          6837mm         ENDM
00004458                          6838mm         ADROUT
00004458  3212                    6839mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000445A  E049                    6840mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000445C  E849                    6841mm         LSR.W   #4, D1      
0000445E                          6842mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000445E  0C01 0009               6843mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004462  6E00 000A               6844mmm         BGT     ALPHA_539
00004466  0601 0030               6845mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000446A  6000 0006               6846mmm         BRA     DONE_539
0000446E  0601 0037               6847mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004472  4E71                    6848mmm DONE_539: NOP
00004474                          6849mmm         ENDM
00004474  4E4F                    6850mm         TRAP    #15         ; EXECUTE OUTPUT
00004476                          6851mm         
00004476  3212                    6852mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004478  E949                    6853mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000447A  E049                    6854mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000447C  E849                    6855mm         LSR.W   #4, D1      
0000447E                          6856mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000447E  0C01 0009               6857mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004482  6E00 000A               6858mmm         BGT     ALPHA_540
00004486  0601 0030               6859mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000448A  6000 0006               6860mmm         BRA     DONE_540
0000448E  0601 0037               6861mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004492  4E71                    6862mmm DONE_540: NOP
00004494                          6863mmm         ENDM
00004494  4E4F                    6864mm         TRAP    #15         ; EXECUTE OUTPUT
00004496                          6865mm         
00004496  3212                    6866mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004498  E149                    6867mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000449A  E049                    6868mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449C  E849                    6869mm         LSR.W   #4, D1      
0000449E                          6870mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449E  0C01 0009               6871mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A2  6E00 000A               6872mmm         BGT     ALPHA_541
000044A6  0601 0030               6873mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044AA  6000 0006               6874mmm         BRA     DONE_541
000044AE  0601 0037               6875mmm ALPHA_541: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B2  4E71                    6876mmm DONE_541: NOP
000044B4                          6877mmm         ENDM
000044B4  4E4F                    6878mm         TRAP    #15         ; EXECUTE OUTPUT
000044B6                          6879mm         
000044B6  3212                    6880mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044B8  E149                    6881mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044BA  E949                    6882mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044BC  E049                    6883mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BE  E849                    6884mm         LSR.W   #4, D1      
000044C0                          6885mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044C0  0C01 0009               6886mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C4  6E00 000A               6887mmm         BGT     ALPHA_542
000044C8  0601 0030               6888mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CC  6000 0006               6889mmm         BRA     DONE_542
000044D0  0601 0037               6890mmm ALPHA_542: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D4  4E71                    6891mmm DONE_542: NOP
000044D6                          6892mmm         ENDM
000044D6  4E4F                    6893mm         TRAP    #15         ; EXECUTE OUTPUT       
000044D8                          6894mm         ENDM 
000044D8  3605                    6895m         MOVE.W  D5, D3
000044DA  6000 0112               6896m         BRA     COMPLETE_491  
000044DE                          6897m ADRABSOLUTEL_491:  
000044DE  361A                    6898m         MOVE.W  (A2)+, D3
000044E0                          6899mm         PRINTSIGN
000044E0  103C 0006               6900mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044E4  323C 0024               6901mm         MOVE.W  #36, D1     ; AN = SIGN
000044E8  4E4F                    6902mm         TRAP    #15         ; OUTPUT = SIGN
000044EA                          6903mm         ENDM
000044EA                          6904mm         ADROUT 
000044EA  3212                    6905mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044EC  E049                    6906mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044EE  E849                    6907mm         LSR.W   #4, D1      
000044F0                          6908mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044F0  0C01 0009               6909mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044F4  6E00 000A               6910mmm         BGT     ALPHA_545
000044F8  0601 0030               6911mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044FC  6000 0006               6912mmm         BRA     DONE_545
00004500  0601 0037               6913mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004504  4E71                    6914mmm DONE_545: NOP
00004506                          6915mmm         ENDM
00004506  4E4F                    6916mm         TRAP    #15         ; EXECUTE OUTPUT
00004508                          6917mm         
00004508  3212                    6918mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000450A  E949                    6919mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000450C  E049                    6920mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000450E  E849                    6921mm         LSR.W   #4, D1      
00004510                          6922mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004510  0C01 0009               6923mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004514  6E00 000A               6924mmm         BGT     ALPHA_546
00004518  0601 0030               6925mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000451C  6000 0006               6926mmm         BRA     DONE_546
00004520  0601 0037               6927mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004524  4E71                    6928mmm DONE_546: NOP
00004526                          6929mmm         ENDM
00004526  4E4F                    6930mm         TRAP    #15         ; EXECUTE OUTPUT
00004528                          6931mm         
00004528  3212                    6932mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000452A  E149                    6933mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000452C  E049                    6934mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000452E  E849                    6935mm         LSR.W   #4, D1      
00004530                          6936mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004530  0C01 0009               6937mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004534  6E00 000A               6938mmm         BGT     ALPHA_547
00004538  0601 0030               6939mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000453C  6000 0006               6940mmm         BRA     DONE_547
00004540  0601 0037               6941mmm ALPHA_547: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004544  4E71                    6942mmm DONE_547: NOP
00004546                          6943mmm         ENDM
00004546  4E4F                    6944mm         TRAP    #15         ; EXECUTE OUTPUT
00004548                          6945mm         
00004548  3212                    6946mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000454A  E149                    6947mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000454C  E949                    6948mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000454E  E049                    6949mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004550  E849                    6950mm         LSR.W   #4, D1      
00004552                          6951mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004552  0C01 0009               6952mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004556  6E00 000A               6953mmm         BGT     ALPHA_548
0000455A  0601 0030               6954mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000455E  6000 0006               6955mmm         BRA     DONE_548
00004562  0601 0037               6956mmm ALPHA_548: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004566  4E71                    6957mmm DONE_548: NOP
00004568                          6958mmm         ENDM
00004568  4E4F                    6959mm         TRAP    #15         ; EXECUTE OUTPUT       
0000456A                          6960mm         ENDM 
0000456A  361A                    6961m         MOVE.W  (A2)+, D3
0000456C                          6962mm         ADROUT
0000456C  3212                    6963mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000456E  E049                    6964mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004570  E849                    6965mm         LSR.W   #4, D1      
00004572                          6966mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004572  0C01 0009               6967mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004576  6E00 000A               6968mmm         BGT     ALPHA_550
0000457A  0601 0030               6969mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000457E  6000 0006               6970mmm         BRA     DONE_550
00004582  0601 0037               6971mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004586  4E71                    6972mmm DONE_550: NOP
00004588                          6973mmm         ENDM
00004588  4E4F                    6974mm         TRAP    #15         ; EXECUTE OUTPUT
0000458A                          6975mm         
0000458A  3212                    6976mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000458C  E949                    6977mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000458E  E049                    6978mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004590  E849                    6979mm         LSR.W   #4, D1      
00004592                          6980mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004592  0C01 0009               6981mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004596  6E00 000A               6982mmm         BGT     ALPHA_551
0000459A  0601 0030               6983mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000459E  6000 0006               6984mmm         BRA     DONE_551
000045A2  0601 0037               6985mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045A6  4E71                    6986mmm DONE_551: NOP
000045A8                          6987mmm         ENDM
000045A8  4E4F                    6988mm         TRAP    #15         ; EXECUTE OUTPUT
000045AA                          6989mm         
000045AA  3212                    6990mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045AC  E149                    6991mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045AE  E049                    6992mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B0  E849                    6993mm         LSR.W   #4, D1      
000045B2                          6994mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B2  0C01 0009               6995mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045B6  6E00 000A               6996mmm         BGT     ALPHA_552
000045BA  0601 0030               6997mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045BE  6000 0006               6998mmm         BRA     DONE_552
000045C2  0601 0037               6999mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045C6  4E71                    7000mmm DONE_552: NOP
000045C8                          7001mmm         ENDM
000045C8  4E4F                    7002mm         TRAP    #15         ; EXECUTE OUTPUT
000045CA                          7003mm         
000045CA  3212                    7004mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045CC  E149                    7005mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045CE  E949                    7006mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045D0  E049                    7007mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D2  E849                    7008mm         LSR.W   #4, D1      
000045D4                          7009mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045D4  0C01 0009               7010mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045D8  6E00 000A               7011mmm         BGT     ALPHA_553
000045DC  0601 0030               7012mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045E0  6000 0006               7013mmm         BRA     DONE_553
000045E4  0601 0037               7014mmm ALPHA_553: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045E8  4E71                    7015mmm DONE_553: NOP
000045EA                          7016mmm         ENDM
000045EA  4E4F                    7017mm         TRAP    #15         ; EXECUTE OUTPUT       
000045EC                          7018mm         ENDM 
000045EC  3605                    7019m         MOVE.W  D5, D3
000045EE                          7020m 
000045EE                          7021m COMPLETE_491:  ; OPCODE HAS BEEN VERIFIED
000045EE                          7022m         ENDM
000045EE                          7023m         printComma
000045EE  43F8 00C9               7024m         LEA     OCOMMA, A1     
000045F2  103C 000E               7025m         MOVE.B  #14,D0          
000045F6  4E4F                    7026m         TRAP    #15
000045F8                          7027m         ENDM
000045F8                          7028m         printDnDest     D3
000045F8  3203                    7029m         MOVE.W  D3, D1      ; BITS 9 TO 11
000045FA  E949                    7030m         LSL     #$04, D1
000045FC  E049                    7031m         LSR     #$08, D1
000045FE  EA49                    7032m         LSR     #$05, D1
00004600  43F8 00C1               7033m         LEA     ODN, A1     
00004604  103C 000E               7034m         MOVE.B  #14,D0          
00004608  4E4F                    7035m         TRAP    #15
0000460A  103C 0003               7036m         MOVE.B  #3,D0          
0000460E  4E4F                    7037m         TRAP    #15
00004610                          7038m         ENDM
00004610  4E75                    7039          RTS                 ; Return from decodeDIVU subroutine
00004612                          7040  
00004612                          7041  
00004612                          7042  ; ------------------------------------------------------------
00004612                          7043  ; 8. "decodeLEA" subroutine
00004612                          7044  ; AUTHOR
00004612                          7045  ;
00004612                          7046  ; TODO: DESCRIPTION
00004612                          7047  ; ------------------------------------------------------------
00004612                          7048  decodeLEA:
00004612                          7049m         verifyOpcode    pLEA, (A2)
00004612  43F8 014B               7050m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004616  3612                    7051m         MOVE.W  (A2), D3      ; INPUT VALUE
00004618  123C 000F               7052m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000461C                          7053m         
0000461C                          7054m LOOP_556: 
0000461C  0C11 0030               7055m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004620  6700 000E               7056m         BEQ     CHECKFOR0_556
00004624  0C11 0031               7057m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004628  6700 0010               7058m         BEQ     CHECKFOR1_556
0000462C  6000 0012               7059m         BRA     NEXT_556      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004630                          7060m         
00004630                          7061m CHECKFOR0_556: 
00004630  0303                    7062m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004632  6600 25A2               7063m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004636  6000 0008               7064m         BRA     NEXT_556
0000463A                          7065m 
0000463A                          7066m CHECKFOR1_556:
0000463A  0303                    7067m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000463C  6700 2598               7068m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004640                          7069m 
00004640                          7070m NEXT_556: 
00004640  B23C 0000               7071m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004644  6700 0008               7072m         BEQ     COMPLETE_556  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004648  5301                    7073m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000464A  1819                    7074m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000464C  60CE                    7075m         BRA     LOOP_556      ; BEGIN LOOP AGAIN
0000464E                          7076m 
0000464E                          7077m COMPLETE_556:  ; OPCODE HAS BEEN VERIFIED
0000464E                          7078m         ENDM
0000464E  43F8 0081               7079          LEA     oLEA, A1     
00004652  103C 000E               7080          MOVE.B  #14,D0          
00004656  4E4F                    7081          TRAP    #15
00004658                          7082          
00004658  43F8 00D2               7083          LEA     oBlank, A1     
0000465C  103C 000E               7084          MOVE.B  #14,D0          
00004660  4E4F                    7085          TRAP    #15
00004662                          7086          
00004662                          7087m         prepareAdrMode  #$1, (A2)
00004662  3C3C 0001               7088m         MOVE.W  #$1, D6      ; INPUT VALUE
00004666  3212                    7089m         MOVE.W  (A2), D1
00004668  BC3C 0001               7090m         CMP.B   #$01, D6
0000466C  6700 000C               7091m         BEQ     ADRSOURCE_557    
00004670                          7092m ADRDEST_557:
00004670  EF49                    7093m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004672  E049                    7094m         LSR     #$08, D1
00004674  EA49                    7095m         LSR     #$05, D1
00004676  6000 000A               7096m         BRA     COMPLETE_557 
0000467A                          7097m ADRSOURCE_557:                
0000467A  E149                    7098m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000467C  E549                    7099m         LSL     #$02, D1
0000467E  E049                    7100m         LSR     #$08, D1
00004680  EA49                    7101m         LSR     #$05, D1
00004682                          7102m COMPLETE_557:  ; OPCODE HAS BEEN VERIFIED
00004682                          7103m         ENDM        
00004682                          7104m         decodeAdrMode   (A2), D1
00004682  3612                    7105m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004684  3201                    7106m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004686                          7107m 
00004686  B23C 0001               7108m         CMP.B   #$01, D1
0000468A  6700 0066               7109m         BEQ     ADRREGDIRECT_558    
0000468E  B23C 0002               7110m         CMP.B   #$02, D1
00004692  6700 00A0               7111m         BEQ     ADRREGINDIRECT_558  
00004696  B23C 0003               7112m         CMP.B   #$03, D1
0000469A  6700 0102               7113m         BEQ     ADRREGPOSTINC_558  
0000469E  B23C 0004               7114m         CMP.B   #$04, D1
000046A2  6700 0178               7115m         BEQ     ADRREGPREDEC_558
000046A6  B23C 0007               7116m         CMP.B   #$07, D1
000046AA  6700 01EE               7117m         BEQ     ADRABSOLUTE_558    
000046AE                          7118m         
000046AE                          7119m DATAREGDIRECT_558: 
000046AE  BC3C 0001               7120m         CMP.B   #$01, D6
000046B2  6700 001E               7121m         BEQ     DATAREGDIRECTSRC_558   
000046B6                          7122m DATAREGDIRECTDEST_558: 
000046B6                          7123mm         PRINTDNDEST D3 
000046B6  3203                    7124mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000046B8  E949                    7125mm         LSL     #$04, D1
000046BA  E049                    7126mm         LSR     #$08, D1
000046BC  EA49                    7127mm         LSR     #$05, D1
000046BE  43F8 00C1               7128mm         LEA     ODN, A1     
000046C2  103C 000E               7129mm         MOVE.B  #14,D0          
000046C6  4E4F                    7130mm         TRAP    #15
000046C8  103C 0003               7131mm         MOVE.B  #3,D0          
000046CC  4E4F                    7132mm         TRAP    #15
000046CE                          7133mm         ENDM
000046CE  6000 0562               7134m         BRA     COMPLETE_558 
000046D2                          7135m DATAREGDIRECTSRC_558: 
000046D2                          7136mm         PRINTDNSRC D3 
000046D2  4281                    7137mm         CLR.L   D1
000046D4  3203                    7138mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000046D6  E149                    7139mm         LSL     #$08, D1
000046D8  EB49                    7140mm         LSL     #$05, D1
000046DA  E049                    7141mm         LSR     #$08, D1
000046DC  EA49                    7142mm         LSR     #$05, D1
000046DE  43F8 00C1               7143mm         LEA     ODN, A1     
000046E2  103C 000E               7144mm         MOVE.B  #14,D0          
000046E6  4E4F                    7145mm         TRAP    #15
000046E8  103C 0003               7146mm         MOVE.B  #3,D0          
000046EC  4E4F                    7147mm         TRAP    #15
000046EE                          7148mm         ENDM
000046EE  6000 0542               7149m         BRA     COMPLETE_558   
000046F2                          7150m         
000046F2                          7151m ADRREGDIRECT_558: 
000046F2  BC3C 0001               7152m         CMP.B   #$01, D6
000046F6  6700 001E               7153m         BEQ     ADRREGDIRECTSRC_558   
000046FA                          7154m ADRREGDIRECTDEST_558:
000046FA                          7155mm         PRINTANDEST D3
000046FA  3203                    7156mm         MOVE.W  D3, D1
000046FC  E949                    7157mm         LSL     #$04, D1
000046FE  E049                    7158mm         LSR     #$08, D1
00004700  EA49                    7159mm         LSR     #$05, D1
00004702  43F8 00C3               7160mm         LEA     OAN, A1     
00004706  103C 000E               7161mm         MOVE.B  #14,D0          
0000470A  4E4F                    7162mm         TRAP    #15
0000470C  103C 0003               7163mm         MOVE.B  #3,D0          
00004710  4E4F                    7164mm         TRAP    #15
00004712                          7165mm         ENDM
00004712  6000 051E               7166m         BRA     COMPLETE_558   
00004716                          7167m ADRREGDIRECTSRC_558:
00004716                          7168mm         PRINTANSRC D3
00004716  3203                    7169mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004718  E149                    7170mm         LSL     #$08, D1
0000471A  EB49                    7171mm         LSL     #$05, D1
0000471C  E049                    7172mm         LSR     #$08, D1
0000471E  EA49                    7173mm         LSR     #$05, D1
00004720  43F8 00C3               7174mm         LEA     OAN, A1     
00004724  103C 000E               7175mm         MOVE.B  #14,D0          
00004728  4E4F                    7176mm         TRAP    #15
0000472A  103C 0003               7177mm         MOVE.B  #3,D0          
0000472E  4E4F                    7178mm         TRAP    #15
00004730                          7179mm         ENDM
00004730  6000 0500               7180m         BRA     COMPLETE_558   
00004734                          7181m        
00004734                          7182m ADRREGINDIRECT_558:   
00004734  BC3C 0001               7183m         CMP.B   #$01, D6
00004738  6700 0032               7184m         BEQ     ADRREGINDIRECTSRC_558   
0000473C                          7185m ADRREGINDIRECTDEST_558:
0000473C                          7186mm         PRINTLB
0000473C  43F8 00C5               7187mm         LEA     OLB, A1     
00004740  103C 000E               7188mm         MOVE.B  #14,D0          
00004744  4E4F                    7189mm         TRAP    #15
00004746                          7190mm         ENDM
00004746                          7191mm         PRINTANDEST D3  
00004746  3203                    7192mm         MOVE.W  D3, D1
00004748  E949                    7193mm         LSL     #$04, D1
0000474A  E049                    7194mm         LSR     #$08, D1
0000474C  EA49                    7195mm         LSR     #$05, D1
0000474E  43F8 00C3               7196mm         LEA     OAN, A1     
00004752  103C 000E               7197mm         MOVE.B  #14,D0          
00004756  4E4F                    7198mm         TRAP    #15
00004758  103C 0003               7199mm         MOVE.B  #3,D0          
0000475C  4E4F                    7200mm         TRAP    #15
0000475E                          7201mm         ENDM
0000475E                          7202mm         PRINTRB
0000475E  43F8 00C7               7203mm         LEA     ORB, A1     
00004762  103C 000E               7204mm         MOVE.B  #14,D0          
00004766  4E4F                    7205mm         TRAP    #15
00004768                          7206mm         ENDM
00004768  6000 04C8               7207m         BRA     COMPLETE_558     
0000476C                          7208m ADRREGINDIRECTSRC_558:   
0000476C                          7209mm         PRINTLB
0000476C  43F8 00C5               7210mm         LEA     OLB, A1     
00004770  103C 000E               7211mm         MOVE.B  #14,D0          
00004774  4E4F                    7212mm         TRAP    #15
00004776                          7213mm         ENDM
00004776                          7214mm         PRINTANSRC D3  
00004776  3203                    7215mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004778  E149                    7216mm         LSL     #$08, D1
0000477A  EB49                    7217mm         LSL     #$05, D1
0000477C  E049                    7218mm         LSR     #$08, D1
0000477E  EA49                    7219mm         LSR     #$05, D1
00004780  43F8 00C3               7220mm         LEA     OAN, A1     
00004784  103C 000E               7221mm         MOVE.B  #14,D0          
00004788  4E4F                    7222mm         TRAP    #15
0000478A  103C 0003               7223mm         MOVE.B  #3,D0          
0000478E  4E4F                    7224mm         TRAP    #15
00004790                          7225mm         ENDM
00004790                          7226mm         PRINTRB
00004790  43F8 00C7               7227mm         LEA     ORB, A1     
00004794  103C 000E               7228mm         MOVE.B  #14,D0          
00004798  4E4F                    7229mm         TRAP    #15
0000479A                          7230mm         ENDM
0000479A  6000 0496               7231m         BRA     COMPLETE_558   
0000479E                          7232m         
0000479E                          7233m ADRREGPOSTINC_558:   
0000479E  BC3C 0001               7234m         CMP.B   #$01, D6
000047A2  6700 003C               7235m         BEQ     ADRREGPOSTINCSRC_558   
000047A6                          7236m ADRREGPOSTINCDEST_558: 
000047A6                          7237mm         PRINTLB
000047A6  43F8 00C5               7238mm         LEA     OLB, A1     
000047AA  103C 000E               7239mm         MOVE.B  #14,D0          
000047AE  4E4F                    7240mm         TRAP    #15
000047B0                          7241mm         ENDM
000047B0                          7242mm         PRINTANDEST D3  
000047B0  3203                    7243mm         MOVE.W  D3, D1
000047B2  E949                    7244mm         LSL     #$04, D1
000047B4  E049                    7245mm         LSR     #$08, D1
000047B6  EA49                    7246mm         LSR     #$05, D1
000047B8  43F8 00C3               7247mm         LEA     OAN, A1     
000047BC  103C 000E               7248mm         MOVE.B  #14,D0          
000047C0  4E4F                    7249mm         TRAP    #15
000047C2  103C 0003               7250mm         MOVE.B  #3,D0          
000047C6  4E4F                    7251mm         TRAP    #15
000047C8                          7252mm         ENDM
000047C8                          7253mm         PRINTRB
000047C8  43F8 00C7               7254mm         LEA     ORB, A1     
000047CC  103C 000E               7255mm         MOVE.B  #14,D0          
000047D0  4E4F                    7256mm         TRAP    #15
000047D2                          7257mm         ENDM
000047D2                          7258mm         PRINTPI
000047D2  43F8 00CE               7259mm         LEA     OPSTINC, A1     
000047D6  103C 000E               7260mm         MOVE.B  #14,D0          
000047DA  4E4F                    7261mm         TRAP    #15
000047DC                          7262mm         ENDM
000047DC  6000 0454               7263m         BRA     COMPLETE_558  
000047E0                          7264m ADRREGPOSTINCSRC_558:           
000047E0                          7265mm         PRINTLB
000047E0  43F8 00C5               7266mm         LEA     OLB, A1     
000047E4  103C 000E               7267mm         MOVE.B  #14,D0          
000047E8  4E4F                    7268mm         TRAP    #15
000047EA                          7269mm         ENDM
000047EA                          7270mm         PRINTANSRC D3  
000047EA  3203                    7271mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047EC  E149                    7272mm         LSL     #$08, D1
000047EE  EB49                    7273mm         LSL     #$05, D1
000047F0  E049                    7274mm         LSR     #$08, D1
000047F2  EA49                    7275mm         LSR     #$05, D1
000047F4  43F8 00C3               7276mm         LEA     OAN, A1     
000047F8  103C 000E               7277mm         MOVE.B  #14,D0          
000047FC  4E4F                    7278mm         TRAP    #15
000047FE  103C 0003               7279mm         MOVE.B  #3,D0          
00004802  4E4F                    7280mm         TRAP    #15
00004804                          7281mm         ENDM
00004804                          7282mm         PRINTRB
00004804  43F8 00C7               7283mm         LEA     ORB, A1     
00004808  103C 000E               7284mm         MOVE.B  #14,D0          
0000480C  4E4F                    7285mm         TRAP    #15
0000480E                          7286mm         ENDM
0000480E                          7287mm         PRINTPI
0000480E  43F8 00CE               7288mm         LEA     OPSTINC, A1     
00004812  103C 000E               7289mm         MOVE.B  #14,D0          
00004816  4E4F                    7290mm         TRAP    #15
00004818                          7291mm         ENDM
00004818  6000 0418               7292m         BRA     COMPLETE_558  
0000481C                          7293m ADRREGPREDEC_558: 
0000481C  BC3C 0001               7294m         CMP.B   #$01, D6
00004820  6700 003C               7295m         BEQ     ADRREGPREDECSRC_558   
00004824                          7296m ADRREGPREDECDEST_558:
00004824                          7297mm         PRINTPD  
00004824  43F8 00CC               7298mm         LEA     OPREDEC, A1     
00004828  103C 000E               7299mm         MOVE.B  #14,D0          
0000482C  4E4F                    7300mm         TRAP    #15
0000482E                          7301mm         ENDM
0000482E                          7302mm         PRINTLB
0000482E  43F8 00C5               7303mm         LEA     OLB, A1     
00004832  103C 000E               7304mm         MOVE.B  #14,D0          
00004836  4E4F                    7305mm         TRAP    #15
00004838                          7306mm         ENDM
00004838                          7307mm         PRINTANDEST D3  
00004838  3203                    7308mm         MOVE.W  D3, D1
0000483A  E949                    7309mm         LSL     #$04, D1
0000483C  E049                    7310mm         LSR     #$08, D1
0000483E  EA49                    7311mm         LSR     #$05, D1
00004840  43F8 00C3               7312mm         LEA     OAN, A1     
00004844  103C 000E               7313mm         MOVE.B  #14,D0          
00004848  4E4F                    7314mm         TRAP    #15
0000484A  103C 0003               7315mm         MOVE.B  #3,D0          
0000484E  4E4F                    7316mm         TRAP    #15
00004850                          7317mm         ENDM
00004850                          7318mm         PRINTRB
00004850  43F8 00C7               7319mm         LEA     ORB, A1     
00004854  103C 000E               7320mm         MOVE.B  #14,D0          
00004858  4E4F                    7321mm         TRAP    #15
0000485A                          7322mm         ENDM
0000485A  6000 03D6               7323m         BRA     COMPLETE_558   
0000485E                          7324m ADRREGPREDECSRC_558: 
0000485E                          7325mm         PRINTPD  
0000485E  43F8 00CC               7326mm         LEA     OPREDEC, A1     
00004862  103C 000E               7327mm         MOVE.B  #14,D0          
00004866  4E4F                    7328mm         TRAP    #15
00004868                          7329mm         ENDM
00004868                          7330mm         PRINTLB
00004868  43F8 00C5               7331mm         LEA     OLB, A1     
0000486C  103C 000E               7332mm         MOVE.B  #14,D0          
00004870  4E4F                    7333mm         TRAP    #15
00004872                          7334mm         ENDM
00004872                          7335mm         PRINTANSRC D3  
00004872  3203                    7336mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004874  E149                    7337mm         LSL     #$08, D1
00004876  EB49                    7338mm         LSL     #$05, D1
00004878  E049                    7339mm         LSR     #$08, D1
0000487A  EA49                    7340mm         LSR     #$05, D1
0000487C  43F8 00C3               7341mm         LEA     OAN, A1     
00004880  103C 000E               7342mm         MOVE.B  #14,D0          
00004884  4E4F                    7343mm         TRAP    #15
00004886  103C 0003               7344mm         MOVE.B  #3,D0          
0000488A  4E4F                    7345mm         TRAP    #15
0000488C                          7346mm         ENDM
0000488C                          7347mm         PRINTRB
0000488C  43F8 00C7               7348mm         LEA     ORB, A1     
00004890  103C 000E               7349mm         MOVE.B  #14,D0          
00004894  4E4F                    7350mm         TRAP    #15
00004896                          7351mm         ENDM
00004896  6000 039A               7352m         BRA     COMPLETE_558
0000489A                          7353m        
0000489A                          7354m ADRABSOLUTE_558:
0000489A  BC3C 0001               7355m         CMP.B   #$01, D6
0000489E  6600 0018               7356m         BNE     ADRABSOLUTEDST_558 
000048A2                          7357m         
000048A2  3A03                    7358m         MOVE.W  D3, D5
000048A4  0803 0002               7359m         BTST    #2, D3
000048A8  6600 0024               7360m         BNE     ADRIMMEDIATE_558
000048AC  0803 0000               7361m         BTST    #0, D3
000048B0  6600 0270               7362m         BNE     ADRABSOLUTEL_558
000048B4  6000 01DA               7363m         BRA     ADRABSOLUTEW_558
000048B8                          7364m ADRABSOLUTEDST_558:
000048B8  3A03                    7365m         MOVE.W  D3, D5
000048BA  0803 000B               7366m         BTST    #$B, D3
000048BE  6600 000E               7367m         BNE     ADRIMMEDIATE_558
000048C2  0803 0009               7368m         BTST    #$09, D3
000048C6  6600 025A               7369m         BNE     ADRABSOLUTEL_558
000048CA  6000 01C4               7370m         BRA     ADRABSOLUTEW_558
000048CE                          7371m ADRIMMEDIATE_558:
000048CE  BE3C 0001               7372m         CMP.B   #1, D7
000048D2  6700 009E               7373m         BEQ     ADRIMMEDIATEL_558
000048D6                          7374m ADRIMMEDIATEW_558:
000048D6  361A                    7375m         MOVE.W  (A2)+, D3
000048D8                          7376mm         PRINTHASH
000048D8  103C 0006               7377mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048DC  323C 0023               7378mm         MOVE.W  #35, D1     ; AN = SIGN
000048E0  4E4F                    7379mm         TRAP    #15         ; OUTPUT = SIGN
000048E2                          7380mm         ENDM
000048E2                          7381mm         PRINTSIGN
000048E2  103C 0006               7382mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048E6  323C 0024               7383mm         MOVE.W  #36, D1     ; AN = SIGN
000048EA  4E4F                    7384mm         TRAP    #15         ; OUTPUT = SIGN
000048EC                          7385mm         ENDM
000048EC                          7386mm         ADROUT
000048EC  3212                    7387mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000048EE  E049                    7388mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000048F0  E849                    7389mm         LSR.W   #4, D1      
000048F2                          7390mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000048F2  0C01 0009               7391mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000048F6  6E00 000A               7392mmm         BGT     ALPHA_588
000048FA  0601 0030               7393mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000048FE  6000 0006               7394mmm         BRA     DONE_588
00004902  0601 0037               7395mmm ALPHA_588: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004906  4E71                    7396mmm DONE_588: NOP
00004908                          7397mmm         ENDM
00004908  4E4F                    7398mm         TRAP    #15         ; EXECUTE OUTPUT
0000490A                          7399mm         
0000490A  3212                    7400mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000490C  E949                    7401mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000490E  E049                    7402mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004910  E849                    7403mm         LSR.W   #4, D1      
00004912                          7404mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004912  0C01 0009               7405mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004916  6E00 000A               7406mmm         BGT     ALPHA_589
0000491A  0601 0030               7407mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000491E  6000 0006               7408mmm         BRA     DONE_589
00004922  0601 0037               7409mmm ALPHA_589: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004926  4E71                    7410mmm DONE_589: NOP
00004928                          7411mmm         ENDM
00004928  4E4F                    7412mm         TRAP    #15         ; EXECUTE OUTPUT
0000492A                          7413mm         
0000492A  3212                    7414mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000492C  E149                    7415mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000492E  E049                    7416mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004930  E849                    7417mm         LSR.W   #4, D1      
00004932                          7418mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004932  0C01 0009               7419mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004936  6E00 000A               7420mmm         BGT     ALPHA_590
0000493A  0601 0030               7421mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000493E  6000 0006               7422mmm         BRA     DONE_590
00004942  0601 0037               7423mmm ALPHA_590: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004946  4E71                    7424mmm DONE_590: NOP
00004948                          7425mmm         ENDM
00004948  4E4F                    7426mm         TRAP    #15         ; EXECUTE OUTPUT
0000494A                          7427mm         
0000494A  3212                    7428mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000494C  E149                    7429mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000494E  E949                    7430mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004950  E049                    7431mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004952  E849                    7432mm         LSR.W   #4, D1      
00004954                          7433mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004954  0C01 0009               7434mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004958  6E00 000A               7435mmm         BGT     ALPHA_591
0000495C  0601 0030               7436mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004960  6000 0006               7437mmm         BRA     DONE_591
00004964  0601 0037               7438mmm ALPHA_591: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004968  4E71                    7439mmm DONE_591: NOP
0000496A                          7440mmm         ENDM
0000496A  4E4F                    7441mm         TRAP    #15         ; EXECUTE OUTPUT       
0000496C                          7442mm         ENDM 
0000496C  3605                    7443m         MOVE.W  D5, D3
0000496E  6000 02C2               7444m         BRA     COMPLETE_558
00004972                          7445m ADRIMMEDIATEL_558:
00004972  361A                    7446m         MOVE.W  (A2)+, D3
00004974                          7447mm         PRINTHASH
00004974  103C 0006               7448mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004978  323C 0023               7449mm         MOVE.W  #35, D1     ; AN = SIGN
0000497C  4E4F                    7450mm         TRAP    #15         ; OUTPUT = SIGN
0000497E                          7451mm         ENDM
0000497E                          7452mm         PRINTSIGN
0000497E  103C 0006               7453mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004982  323C 0024               7454mm         MOVE.W  #36, D1     ; AN = SIGN
00004986  4E4F                    7455mm         TRAP    #15         ; OUTPUT = SIGN
00004988                          7456mm         ENDM
00004988                          7457mm         ADROUT 
00004988  3212                    7458mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000498A  E049                    7459mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000498C  E849                    7460mm         LSR.W   #4, D1      
0000498E                          7461mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000498E  0C01 0009               7462mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004992  6E00 000A               7463mmm         BGT     ALPHA_595
00004996  0601 0030               7464mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000499A  6000 0006               7465mmm         BRA     DONE_595
0000499E  0601 0037               7466mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049A2  4E71                    7467mmm DONE_595: NOP
000049A4                          7468mmm         ENDM
000049A4  4E4F                    7469mm         TRAP    #15         ; EXECUTE OUTPUT
000049A6                          7470mm         
000049A6  3212                    7471mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049A8  E949                    7472mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000049AA  E049                    7473mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049AC  E849                    7474mm         LSR.W   #4, D1      
000049AE                          7475mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049AE  0C01 0009               7476mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049B2  6E00 000A               7477mmm         BGT     ALPHA_596
000049B6  0601 0030               7478mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049BA  6000 0006               7479mmm         BRA     DONE_596
000049BE  0601 0037               7480mmm ALPHA_596: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049C2  4E71                    7481mmm DONE_596: NOP
000049C4                          7482mmm         ENDM
000049C4  4E4F                    7483mm         TRAP    #15         ; EXECUTE OUTPUT
000049C6                          7484mm         
000049C6  3212                    7485mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049C8  E149                    7486mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049CA  E049                    7487mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049CC  E849                    7488mm         LSR.W   #4, D1      
000049CE                          7489mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049CE  0C01 0009               7490mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049D2  6E00 000A               7491mmm         BGT     ALPHA_597
000049D6  0601 0030               7492mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049DA  6000 0006               7493mmm         BRA     DONE_597
000049DE  0601 0037               7494mmm ALPHA_597: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049E2  4E71                    7495mmm DONE_597: NOP
000049E4                          7496mmm         ENDM
000049E4  4E4F                    7497mm         TRAP    #15         ; EXECUTE OUTPUT
000049E6                          7498mm         
000049E6  3212                    7499mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049E8  E149                    7500mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049EA  E949                    7501mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000049EC  E049                    7502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049EE  E849                    7503mm         LSR.W   #4, D1      
000049F0                          7504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F0  0C01 0009               7505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049F4  6E00 000A               7506mmm         BGT     ALPHA_598
000049F8  0601 0030               7507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049FC  6000 0006               7508mmm         BRA     DONE_598
00004A00  0601 0037               7509mmm ALPHA_598: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A04  4E71                    7510mmm DONE_598: NOP
00004A06                          7511mmm         ENDM
00004A06  4E4F                    7512mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A08                          7513mm         ENDM 
00004A08  361A                    7514m         MOVE.W  (A2)+, D3
00004A0A                          7515mm         ADROUT
00004A0A  3212                    7516mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A0C  E049                    7517mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A0E  E849                    7518mm         LSR.W   #4, D1      
00004A10                          7519mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A10  0C01 0009               7520mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A14  6E00 000A               7521mmm         BGT     ALPHA_600
00004A18  0601 0030               7522mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A1C  6000 0006               7523mmm         BRA     DONE_600
00004A20  0601 0037               7524mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A24  4E71                    7525mmm DONE_600: NOP
00004A26                          7526mmm         ENDM
00004A26  4E4F                    7527mm         TRAP    #15         ; EXECUTE OUTPUT
00004A28                          7528mm         
00004A28  3212                    7529mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A2A  E949                    7530mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A2C  E049                    7531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A2E  E849                    7532mm         LSR.W   #4, D1      
00004A30                          7533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A30  0C01 0009               7534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A34  6E00 000A               7535mmm         BGT     ALPHA_601
00004A38  0601 0030               7536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A3C  6000 0006               7537mmm         BRA     DONE_601
00004A40  0601 0037               7538mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A44  4E71                    7539mmm DONE_601: NOP
00004A46                          7540mmm         ENDM
00004A46  4E4F                    7541mm         TRAP    #15         ; EXECUTE OUTPUT
00004A48                          7542mm         
00004A48  3212                    7543mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A4A  E149                    7544mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A4C  E049                    7545mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A4E  E849                    7546mm         LSR.W   #4, D1      
00004A50                          7547mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A50  0C01 0009               7548mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A54  6E00 000A               7549mmm         BGT     ALPHA_602
00004A58  0601 0030               7550mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A5C  6000 0006               7551mmm         BRA     DONE_602
00004A60  0601 0037               7552mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A64  4E71                    7553mmm DONE_602: NOP
00004A66                          7554mmm         ENDM
00004A66  4E4F                    7555mm         TRAP    #15         ; EXECUTE OUTPUT
00004A68                          7556mm         
00004A68  3212                    7557mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A6A  E149                    7558mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A6C  E949                    7559mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A6E  E049                    7560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A70  E849                    7561mm         LSR.W   #4, D1      
00004A72                          7562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A72  0C01 0009               7563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A76  6E00 000A               7564mmm         BGT     ALPHA_603
00004A7A  0601 0030               7565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A7E  6000 0006               7566mmm         BRA     DONE_603
00004A82  0601 0037               7567mmm ALPHA_603: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A86  4E71                    7568mmm DONE_603: NOP
00004A88                          7569mmm         ENDM
00004A88  4E4F                    7570mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A8A                          7571mm         ENDM 
00004A8A  3605                    7572m         MOVE.W  D5, D3
00004A8C  6000 01A4               7573m         BRA     COMPLETE_558 
00004A90                          7574m ADRABSOLUTEW_558:     
00004A90  361A                    7575m         MOVE.W  (A2)+, D3
00004A92                          7576mm         PRINTSIGN
00004A92  103C 0006               7577mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A96  323C 0024               7578mm         MOVE.W  #36, D1     ; AN = SIGN
00004A9A  4E4F                    7579mm         TRAP    #15         ; OUTPUT = SIGN
00004A9C                          7580mm         ENDM
00004A9C                          7581mm         ADROUT
00004A9C  3212                    7582mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A9E  E049                    7583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AA0  E849                    7584mm         LSR.W   #4, D1      
00004AA2                          7585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AA2  0C01 0009               7586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AA6  6E00 000A               7587mmm         BGT     ALPHA_606
00004AAA  0601 0030               7588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AAE  6000 0006               7589mmm         BRA     DONE_606
00004AB2  0601 0037               7590mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AB6  4E71                    7591mmm DONE_606: NOP
00004AB8                          7592mmm         ENDM
00004AB8  4E4F                    7593mm         TRAP    #15         ; EXECUTE OUTPUT
00004ABA                          7594mm         
00004ABA  3212                    7595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ABC  E949                    7596mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004ABE  E049                    7597mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AC0  E849                    7598mm         LSR.W   #4, D1      
00004AC2                          7599mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AC2  0C01 0009               7600mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AC6  6E00 000A               7601mmm         BGT     ALPHA_607
00004ACA  0601 0030               7602mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004ACE  6000 0006               7603mmm         BRA     DONE_607
00004AD2  0601 0037               7604mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AD6  4E71                    7605mmm DONE_607: NOP
00004AD8                          7606mmm         ENDM
00004AD8  4E4F                    7607mm         TRAP    #15         ; EXECUTE OUTPUT
00004ADA                          7608mm         
00004ADA  3212                    7609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ADC  E149                    7610mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004ADE  E049                    7611mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AE0  E849                    7612mm         LSR.W   #4, D1      
00004AE2                          7613mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AE2  0C01 0009               7614mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AE6  6E00 000A               7615mmm         BGT     ALPHA_608
00004AEA  0601 0030               7616mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AEE  6000 0006               7617mmm         BRA     DONE_608
00004AF2  0601 0037               7618mmm ALPHA_608: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AF6  4E71                    7619mmm DONE_608: NOP
00004AF8                          7620mmm         ENDM
00004AF8  4E4F                    7621mm         TRAP    #15         ; EXECUTE OUTPUT
00004AFA                          7622mm         
00004AFA  3212                    7623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AFC  E149                    7624mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AFE  E949                    7625mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B00  E049                    7626mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B02  E849                    7627mm         LSR.W   #4, D1      
00004B04                          7628mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B04  0C01 0009               7629mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B08  6E00 000A               7630mmm         BGT     ALPHA_609
00004B0C  0601 0030               7631mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B10  6000 0006               7632mmm         BRA     DONE_609
00004B14  0601 0037               7633mmm ALPHA_609: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B18  4E71                    7634mmm DONE_609: NOP
00004B1A                          7635mmm         ENDM
00004B1A  4E4F                    7636mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B1C                          7637mm         ENDM 
00004B1C  3605                    7638m         MOVE.W  D5, D3
00004B1E  6000 0112               7639m         BRA     COMPLETE_558  
00004B22                          7640m ADRABSOLUTEL_558:  
00004B22  361A                    7641m         MOVE.W  (A2)+, D3
00004B24                          7642mm         PRINTSIGN
00004B24  103C 0006               7643mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B28  323C 0024               7644mm         MOVE.W  #36, D1     ; AN = SIGN
00004B2C  4E4F                    7645mm         TRAP    #15         ; OUTPUT = SIGN
00004B2E                          7646mm         ENDM
00004B2E                          7647mm         ADROUT 
00004B2E  3212                    7648mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B30  E049                    7649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B32  E849                    7650mm         LSR.W   #4, D1      
00004B34                          7651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B34  0C01 0009               7652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B38  6E00 000A               7653mmm         BGT     ALPHA_612
00004B3C  0601 0030               7654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B40  6000 0006               7655mmm         BRA     DONE_612
00004B44  0601 0037               7656mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B48  4E71                    7657mmm DONE_612: NOP
00004B4A                          7658mmm         ENDM
00004B4A  4E4F                    7659mm         TRAP    #15         ; EXECUTE OUTPUT
00004B4C                          7660mm         
00004B4C  3212                    7661mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B4E  E949                    7662mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B50  E049                    7663mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B52  E849                    7664mm         LSR.W   #4, D1      
00004B54                          7665mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B54  0C01 0009               7666mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B58  6E00 000A               7667mmm         BGT     ALPHA_613
00004B5C  0601 0030               7668mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B60  6000 0006               7669mmm         BRA     DONE_613
00004B64  0601 0037               7670mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B68  4E71                    7671mmm DONE_613: NOP
00004B6A                          7672mmm         ENDM
00004B6A  4E4F                    7673mm         TRAP    #15         ; EXECUTE OUTPUT
00004B6C                          7674mm         
00004B6C  3212                    7675mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B6E  E149                    7676mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B70  E049                    7677mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B72  E849                    7678mm         LSR.W   #4, D1      
00004B74                          7679mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B74  0C01 0009               7680mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B78  6E00 000A               7681mmm         BGT     ALPHA_614
00004B7C  0601 0030               7682mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B80  6000 0006               7683mmm         BRA     DONE_614
00004B84  0601 0037               7684mmm ALPHA_614: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B88  4E71                    7685mmm DONE_614: NOP
00004B8A                          7686mmm         ENDM
00004B8A  4E4F                    7687mm         TRAP    #15         ; EXECUTE OUTPUT
00004B8C                          7688mm         
00004B8C  3212                    7689mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B8E  E149                    7690mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B90  E949                    7691mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B92  E049                    7692mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B94  E849                    7693mm         LSR.W   #4, D1      
00004B96                          7694mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B96  0C01 0009               7695mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B9A  6E00 000A               7696mmm         BGT     ALPHA_615
00004B9E  0601 0030               7697mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BA2  6000 0006               7698mmm         BRA     DONE_615
00004BA6  0601 0037               7699mmm ALPHA_615: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BAA  4E71                    7700mmm DONE_615: NOP
00004BAC                          7701mmm         ENDM
00004BAC  4E4F                    7702mm         TRAP    #15         ; EXECUTE OUTPUT       
00004BAE                          7703mm         ENDM 
00004BAE  361A                    7704m         MOVE.W  (A2)+, D3
00004BB0                          7705mm         ADROUT
00004BB0  3212                    7706mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BB2  E049                    7707mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BB4  E849                    7708mm         LSR.W   #4, D1      
00004BB6                          7709mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BB6  0C01 0009               7710mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BBA  6E00 000A               7711mmm         BGT     ALPHA_617
00004BBE  0601 0030               7712mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BC2  6000 0006               7713mmm         BRA     DONE_617
00004BC6  0601 0037               7714mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BCA  4E71                    7715mmm DONE_617: NOP
00004BCC                          7716mmm         ENDM
00004BCC  4E4F                    7717mm         TRAP    #15         ; EXECUTE OUTPUT
00004BCE                          7718mm         
00004BCE  3212                    7719mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD0  E949                    7720mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BD2  E049                    7721mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD4  E849                    7722mm         LSR.W   #4, D1      
00004BD6                          7723mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD6  0C01 0009               7724mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BDA  6E00 000A               7725mmm         BGT     ALPHA_618
00004BDE  0601 0030               7726mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE2  6000 0006               7727mmm         BRA     DONE_618
00004BE6  0601 0037               7728mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BEA  4E71                    7729mmm DONE_618: NOP
00004BEC                          7730mmm         ENDM
00004BEC  4E4F                    7731mm         TRAP    #15         ; EXECUTE OUTPUT
00004BEE                          7732mm         
00004BEE  3212                    7733mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF0  E149                    7734mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BF2  E049                    7735mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF4  E849                    7736mm         LSR.W   #4, D1      
00004BF6                          7737mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF6  0C01 0009               7738mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BFA  6E00 000A               7739mmm         BGT     ALPHA_619
00004BFE  0601 0030               7740mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C02  6000 0006               7741mmm         BRA     DONE_619
00004C06  0601 0037               7742mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C0A  4E71                    7743mmm DONE_619: NOP
00004C0C                          7744mmm         ENDM
00004C0C  4E4F                    7745mm         TRAP    #15         ; EXECUTE OUTPUT
00004C0E                          7746mm         
00004C0E  3212                    7747mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C10  E149                    7748mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C12  E949                    7749mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C14  E049                    7750mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C16  E849                    7751mm         LSR.W   #4, D1      
00004C18                          7752mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C18  0C01 0009               7753mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1C  6E00 000A               7754mmm         BGT     ALPHA_620
00004C20  0601 0030               7755mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C24  6000 0006               7756mmm         BRA     DONE_620
00004C28  0601 0037               7757mmm ALPHA_620: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2C  4E71                    7758mmm DONE_620: NOP
00004C2E                          7759mmm         ENDM
00004C2E  4E4F                    7760mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C30                          7761mm         ENDM 
00004C30  3605                    7762m         MOVE.W  D5, D3
00004C32                          7763m 
00004C32                          7764m COMPLETE_558:  ; OPCODE HAS BEEN VERIFIED
00004C32                          7765m         ENDM
00004C32                          7766m         printComma
00004C32  43F8 00C9               7767m         LEA     OCOMMA, A1     
00004C36  103C 000E               7768m         MOVE.B  #14,D0          
00004C3A  4E4F                    7769m         TRAP    #15
00004C3C                          7770m         ENDM
00004C3C                          7771m         printAnDest     (A2)
00004C3C  3212                    7772m         MOVE.W  (A2), D1
00004C3E  E949                    7773m         LSL     #$04, D1
00004C40  E049                    7774m         LSR     #$08, D1
00004C42  EA49                    7775m         LSR     #$05, D1
00004C44  43F8 00C3               7776m         LEA     OAN, A1     
00004C48  103C 000E               7777m         MOVE.B  #14,D0          
00004C4C  4E4F                    7778m         TRAP    #15
00004C4E  103C 0003               7779m         MOVE.B  #3,D0          
00004C52  4E4F                    7780m         TRAP    #15
00004C54                          7781m         ENDM
00004C54  4E75                    7782          RTS                 ; Return from decodeLEA subroutine
00004C56                          7783  
00004C56                          7784  
00004C56                          7785  ; ------------------------------------------------------------
00004C56                          7786  ; 9. "decodeAND" subroutine
00004C56                          7787  ; AUTHOR
00004C56                          7788  ;
00004C56                          7789  ; TODO: DESCRIPTION
00004C56                          7790  ; ------------------------------------------------------------
00004C56                          7791  decodeAND:
00004C56                          7792m         verifyOpcode    pAND, (A2)
00004C56  43F8 015C               7793m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004C5A  3612                    7794m         MOVE.W  (A2), D3      ; INPUT VALUE
00004C5C  123C 000F               7795m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004C60                          7796m         
00004C60                          7797m LOOP_623: 
00004C60  0C11 0030               7798m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004C64  6700 000E               7799m         BEQ     CHECKFOR0_623
00004C68  0C11 0031               7800m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004C6C  6700 0010               7801m         BEQ     CHECKFOR1_623
00004C70  6000 0012               7802m         BRA     NEXT_623      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004C74                          7803m         
00004C74                          7804m CHECKFOR0_623: 
00004C74  0303                    7805m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004C76  6600 1F5E               7806m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004C7A  6000 0008               7807m         BRA     NEXT_623
00004C7E                          7808m 
00004C7E                          7809m CHECKFOR1_623:
00004C7E  0303                    7810m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004C80  6700 1F54               7811m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004C84                          7812m 
00004C84                          7813m NEXT_623: 
00004C84  B23C 0000               7814m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004C88  6700 0008               7815m         BEQ     COMPLETE_623  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004C8C  5301                    7816m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004C8E  1819                    7817m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004C90  60CE                    7818m         BRA     LOOP_623      ; BEGIN LOOP AGAIN
00004C92                          7819m 
00004C92                          7820m COMPLETE_623:  ; OPCODE HAS BEEN VERIFIED
00004C92                          7821m         ENDM
00004C92  43F8 0085               7822          LEA     oAND, A1     
00004C96  103C 000E               7823          MOVE.B  #14,D0          
00004C9A  4E4F                    7824          TRAP    #15
00004C9C                          7825m         printOpMode     (A2)
00004C9C  3612                    7826m         MOVE.W  (A2), D3      
00004C9E  123C 0008               7827m         MOVE.B  #8, D1    
00004CA2  4246                    7828m         CLR     D6
00004CA4                          7829m CHECKFORDESTDN_624: 
00004CA4  0303                    7830m         BTST    D1, D3      
00004CA6  6600 0048               7831m         BNE     CHECKFORSRCDN_624
00004CAA  4EB9 00004D7A           7832m         JSR     NEXT_624
00004CB0  1C3C 0001               7833m         MOVE.B  #$1, D6
00004CB4  0303                    7834m         BTST    D1, D3      
00004CB6  6700 0010               7835m         BEQ     DESTDNW_624
00004CBA                          7836m DESTDNL_624:        
00004CBA  43F8 00BD               7837m         LEA     OLSIZE, A1     
00004CBE  103C 000E               7838m         MOVE.B  #14,D0          
00004CC2  4E4F                    7839m         TRAP    #15
00004CC4  6000 00B8               7840m         BRA     COMPLETE_624 
00004CC8                          7841m DESTDNW_624: 
00004CC8  4EB9 00004D7A           7842m         JSR     NEXT_624
00004CCE  0303                    7843m         BTST    D1, D3      
00004CD0  6700 0010               7844m         BEQ     DESTDNB_624
00004CD4  43F8 00B9               7845m         LEA     OWSIZE, A1     
00004CD8  103C 000E               7846m         MOVE.B  #14,D0          
00004CDC  4E4F                    7847m         TRAP    #15
00004CDE  6000 009E               7848m         BRA     COMPLETE_624 
00004CE2                          7849m DESTDNB_624: 
00004CE2  43F8 00B5               7850m         LEA     OBSIZE, A1     
00004CE6  103C 000E               7851m         MOVE.B  #14,D0          
00004CEA  4E4F                    7852m         TRAP    #15
00004CEC  6000 0090               7853m         BRA     COMPLETE_624 
00004CF0                          7854m CHECKFORSRCDN_624: 
00004CF0  4EB9 00004D7A           7855m         JSR     NEXT_624
00004CF6  0303                    7856m         BTST    D1, D3      
00004CF8  6700 0028               7857m         BEQ     SRCDNW_624
00004CFC                          7858m SRCDNL_624:        
00004CFC  43F8 00BD               7859m         LEA     OLSIZE, A1     
00004D00  103C 000E               7860m         MOVE.B  #14,D0          
00004D04  4E4F                    7861m         TRAP    #15
00004D06                          7862mm         PRINTDNDEST D3
00004D06  3203                    7863mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D08  E949                    7864mm         LSL     #$04, D1
00004D0A  E049                    7865mm         LSR     #$08, D1
00004D0C  EA49                    7866mm         LSR     #$05, D1
00004D0E  43F8 00C1               7867mm         LEA     ODN, A1     
00004D12  103C 000E               7868mm         MOVE.B  #14,D0          
00004D16  4E4F                    7869mm         TRAP    #15
00004D18  103C 0003               7870mm         MOVE.B  #3,D0          
00004D1C  4E4F                    7871mm         TRAP    #15
00004D1E                          7872mm         ENDM
00004D1E  6000 005E               7873m         BRA     COMPLETE_624 
00004D22                          7874m SRCDNW_624:
00004D22  4EB9 00004D7A           7875m         JSR     NEXT_624
00004D28  0303                    7876m         BTST    D1, D3     
00004D2A  6700 0028               7877m         BEQ     SRCDNB_624
00004D2E  43F8 00B9               7878m         LEA     OWSIZE, A1     
00004D32  103C 000E               7879m         MOVE.B  #14,D0          
00004D36  4E4F                    7880m         TRAP    #15
00004D38                          7881mm         PRINTDNDEST D3
00004D38  3203                    7882mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D3A  E949                    7883mm         LSL     #$04, D1
00004D3C  E049                    7884mm         LSR     #$08, D1
00004D3E  EA49                    7885mm         LSR     #$05, D1
00004D40  43F8 00C1               7886mm         LEA     ODN, A1     
00004D44  103C 000E               7887mm         MOVE.B  #14,D0          
00004D48  4E4F                    7888mm         TRAP    #15
00004D4A  103C 0003               7889mm         MOVE.B  #3,D0          
00004D4E  4E4F                    7890mm         TRAP    #15
00004D50                          7891mm         ENDM
00004D50  6000 002C               7892m         BRA     COMPLETE_624 
00004D54                          7893m SRCDNB_624: 
00004D54  43F8 00B5               7894m         LEA     OBSIZE, A1     
00004D58  103C 000E               7895m         MOVE.B  #14,D0          
00004D5C  4E4F                    7896m         TRAP    #15
00004D5E                          7897mm         PRINTDNDEST D3
00004D5E  3203                    7898mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D60  E949                    7899mm         LSL     #$04, D1
00004D62  E049                    7900mm         LSR     #$08, D1
00004D64  EA49                    7901mm         LSR     #$05, D1
00004D66  43F8 00C1               7902mm         LEA     ODN, A1     
00004D6A  103C 000E               7903mm         MOVE.B  #14,D0          
00004D6E  4E4F                    7904mm         TRAP    #15
00004D70  103C 0003               7905mm         MOVE.B  #3,D0          
00004D74  4E4F                    7906mm         TRAP    #15
00004D76                          7907mm         ENDM
00004D76  6000 0006               7908m         BRA     COMPLETE_624 
00004D7A                          7909m 
00004D7A                          7910m NEXT_624:
00004D7A  5301                    7911m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004D7C  4E75                    7912m         RTS                
00004D7E                          7913m 
00004D7E                          7914m COMPLETE_624:  ; OPCODE HAS BEEN VERIFIED
00004D7E                          7915m         ENDM
00004D7E  BC3C 0001               7916          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004D82  6700 05E0               7917          BEQ     decodeAndDestOp
00004D86                          7918m         printComma
00004D86  43F8 00C9               7919m         LEA     OCOMMA, A1     
00004D8A  103C 000E               7920m         MOVE.B  #14,D0          
00004D8E  4E4F                    7921m         TRAP    #15
00004D90                          7922m         ENDM
00004D90                          7923m         prepareAdrMode  #$1, (A2)
00004D90  3C3C 0001               7924m         MOVE.W  #$1, D6      ; INPUT VALUE
00004D94  3212                    7925m         MOVE.W  (A2), D1
00004D96  BC3C 0001               7926m         CMP.B   #$01, D6
00004D9A  6700 000C               7927m         BEQ     ADRSOURCE_629    
00004D9E                          7928m ADRDEST_629:
00004D9E  EF49                    7929m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004DA0  E049                    7930m         LSR     #$08, D1
00004DA2  EA49                    7931m         LSR     #$05, D1
00004DA4  6000 000A               7932m         BRA     COMPLETE_629 
00004DA8                          7933m ADRSOURCE_629:                
00004DA8  E149                    7934m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004DAA  E549                    7935m         LSL     #$02, D1
00004DAC  E049                    7936m         LSR     #$08, D1
00004DAE  EA49                    7937m         LSR     #$05, D1
00004DB0                          7938m COMPLETE_629:  ; OPCODE HAS BEEN VERIFIED
00004DB0                          7939m         ENDM        
00004DB0                          7940m         decodeAdrMode   (A2), D1
00004DB0  3612                    7941m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004DB2  3201                    7942m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004DB4                          7943m 
00004DB4  B23C 0001               7944m         CMP.B   #$01, D1
00004DB8  6700 0066               7945m         BEQ     ADRREGDIRECT_630    
00004DBC  B23C 0002               7946m         CMP.B   #$02, D1
00004DC0  6700 00A0               7947m         BEQ     ADRREGINDIRECT_630  
00004DC4  B23C 0003               7948m         CMP.B   #$03, D1
00004DC8  6700 0102               7949m         BEQ     ADRREGPOSTINC_630  
00004DCC  B23C 0004               7950m         CMP.B   #$04, D1
00004DD0  6700 0178               7951m         BEQ     ADRREGPREDEC_630
00004DD4  B23C 0007               7952m         CMP.B   #$07, D1
00004DD8  6700 01EE               7953m         BEQ     ADRABSOLUTE_630    
00004DDC                          7954m         
00004DDC                          7955m DATAREGDIRECT_630: 
00004DDC  BC3C 0001               7956m         CMP.B   #$01, D6
00004DE0  6700 001E               7957m         BEQ     DATAREGDIRECTSRC_630   
00004DE4                          7958m DATAREGDIRECTDEST_630: 
00004DE4                          7959mm         PRINTDNDEST D3 
00004DE4  3203                    7960mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004DE6  E949                    7961mm         LSL     #$04, D1
00004DE8  E049                    7962mm         LSR     #$08, D1
00004DEA  EA49                    7963mm         LSR     #$05, D1
00004DEC  43F8 00C1               7964mm         LEA     ODN, A1     
00004DF0  103C 000E               7965mm         MOVE.B  #14,D0          
00004DF4  4E4F                    7966mm         TRAP    #15
00004DF6  103C 0003               7967mm         MOVE.B  #3,D0          
00004DFA  4E4F                    7968mm         TRAP    #15
00004DFC                          7969mm         ENDM
00004DFC  6000 0562               7970m         BRA     COMPLETE_630 
00004E00                          7971m DATAREGDIRECTSRC_630: 
00004E00                          7972mm         PRINTDNSRC D3 
00004E00  4281                    7973mm         CLR.L   D1
00004E02  3203                    7974mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E04  E149                    7975mm         LSL     #$08, D1
00004E06  EB49                    7976mm         LSL     #$05, D1
00004E08  E049                    7977mm         LSR     #$08, D1
00004E0A  EA49                    7978mm         LSR     #$05, D1
00004E0C  43F8 00C1               7979mm         LEA     ODN, A1     
00004E10  103C 000E               7980mm         MOVE.B  #14,D0          
00004E14  4E4F                    7981mm         TRAP    #15
00004E16  103C 0003               7982mm         MOVE.B  #3,D0          
00004E1A  4E4F                    7983mm         TRAP    #15
00004E1C                          7984mm         ENDM
00004E1C  6000 0542               7985m         BRA     COMPLETE_630   
00004E20                          7986m         
00004E20                          7987m ADRREGDIRECT_630: 
00004E20  BC3C 0001               7988m         CMP.B   #$01, D6
00004E24  6700 001E               7989m         BEQ     ADRREGDIRECTSRC_630   
00004E28                          7990m ADRREGDIRECTDEST_630:
00004E28                          7991mm         PRINTANDEST D3
00004E28  3203                    7992mm         MOVE.W  D3, D1
00004E2A  E949                    7993mm         LSL     #$04, D1
00004E2C  E049                    7994mm         LSR     #$08, D1
00004E2E  EA49                    7995mm         LSR     #$05, D1
00004E30  43F8 00C3               7996mm         LEA     OAN, A1     
00004E34  103C 000E               7997mm         MOVE.B  #14,D0          
00004E38  4E4F                    7998mm         TRAP    #15
00004E3A  103C 0003               7999mm         MOVE.B  #3,D0          
00004E3E  4E4F                    8000mm         TRAP    #15
00004E40                          8001mm         ENDM
00004E40  6000 051E               8002m         BRA     COMPLETE_630   
00004E44                          8003m ADRREGDIRECTSRC_630:
00004E44                          8004mm         PRINTANSRC D3
00004E44  3203                    8005mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E46  E149                    8006mm         LSL     #$08, D1
00004E48  EB49                    8007mm         LSL     #$05, D1
00004E4A  E049                    8008mm         LSR     #$08, D1
00004E4C  EA49                    8009mm         LSR     #$05, D1
00004E4E  43F8 00C3               8010mm         LEA     OAN, A1     
00004E52  103C 000E               8011mm         MOVE.B  #14,D0          
00004E56  4E4F                    8012mm         TRAP    #15
00004E58  103C 0003               8013mm         MOVE.B  #3,D0          
00004E5C  4E4F                    8014mm         TRAP    #15
00004E5E                          8015mm         ENDM
00004E5E  6000 0500               8016m         BRA     COMPLETE_630   
00004E62                          8017m        
00004E62                          8018m ADRREGINDIRECT_630:   
00004E62  BC3C 0001               8019m         CMP.B   #$01, D6
00004E66  6700 0032               8020m         BEQ     ADRREGINDIRECTSRC_630   
00004E6A                          8021m ADRREGINDIRECTDEST_630:
00004E6A                          8022mm         PRINTLB
00004E6A  43F8 00C5               8023mm         LEA     OLB, A1     
00004E6E  103C 000E               8024mm         MOVE.B  #14,D0          
00004E72  4E4F                    8025mm         TRAP    #15
00004E74                          8026mm         ENDM
00004E74                          8027mm         PRINTANDEST D3  
00004E74  3203                    8028mm         MOVE.W  D3, D1
00004E76  E949                    8029mm         LSL     #$04, D1
00004E78  E049                    8030mm         LSR     #$08, D1
00004E7A  EA49                    8031mm         LSR     #$05, D1
00004E7C  43F8 00C3               8032mm         LEA     OAN, A1     
00004E80  103C 000E               8033mm         MOVE.B  #14,D0          
00004E84  4E4F                    8034mm         TRAP    #15
00004E86  103C 0003               8035mm         MOVE.B  #3,D0          
00004E8A  4E4F                    8036mm         TRAP    #15
00004E8C                          8037mm         ENDM
00004E8C                          8038mm         PRINTRB
00004E8C  43F8 00C7               8039mm         LEA     ORB, A1     
00004E90  103C 000E               8040mm         MOVE.B  #14,D0          
00004E94  4E4F                    8041mm         TRAP    #15
00004E96                          8042mm         ENDM
00004E96  6000 04C8               8043m         BRA     COMPLETE_630     
00004E9A                          8044m ADRREGINDIRECTSRC_630:   
00004E9A                          8045mm         PRINTLB
00004E9A  43F8 00C5               8046mm         LEA     OLB, A1     
00004E9E  103C 000E               8047mm         MOVE.B  #14,D0          
00004EA2  4E4F                    8048mm         TRAP    #15
00004EA4                          8049mm         ENDM
00004EA4                          8050mm         PRINTANSRC D3  
00004EA4  3203                    8051mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004EA6  E149                    8052mm         LSL     #$08, D1
00004EA8  EB49                    8053mm         LSL     #$05, D1
00004EAA  E049                    8054mm         LSR     #$08, D1
00004EAC  EA49                    8055mm         LSR     #$05, D1
00004EAE  43F8 00C3               8056mm         LEA     OAN, A1     
00004EB2  103C 000E               8057mm         MOVE.B  #14,D0          
00004EB6  4E4F                    8058mm         TRAP    #15
00004EB8  103C 0003               8059mm         MOVE.B  #3,D0          
00004EBC  4E4F                    8060mm         TRAP    #15
00004EBE                          8061mm         ENDM
00004EBE                          8062mm         PRINTRB
00004EBE  43F8 00C7               8063mm         LEA     ORB, A1     
00004EC2  103C 000E               8064mm         MOVE.B  #14,D0          
00004EC6  4E4F                    8065mm         TRAP    #15
00004EC8                          8066mm         ENDM
00004EC8  6000 0496               8067m         BRA     COMPLETE_630   
00004ECC                          8068m         
00004ECC                          8069m ADRREGPOSTINC_630:   
00004ECC  BC3C 0001               8070m         CMP.B   #$01, D6
00004ED0  6700 003C               8071m         BEQ     ADRREGPOSTINCSRC_630   
00004ED4                          8072m ADRREGPOSTINCDEST_630: 
00004ED4                          8073mm         PRINTLB
00004ED4  43F8 00C5               8074mm         LEA     OLB, A1     
00004ED8  103C 000E               8075mm         MOVE.B  #14,D0          
00004EDC  4E4F                    8076mm         TRAP    #15
00004EDE                          8077mm         ENDM
00004EDE                          8078mm         PRINTANDEST D3  
00004EDE  3203                    8079mm         MOVE.W  D3, D1
00004EE0  E949                    8080mm         LSL     #$04, D1
00004EE2  E049                    8081mm         LSR     #$08, D1
00004EE4  EA49                    8082mm         LSR     #$05, D1
00004EE6  43F8 00C3               8083mm         LEA     OAN, A1     
00004EEA  103C 000E               8084mm         MOVE.B  #14,D0          
00004EEE  4E4F                    8085mm         TRAP    #15
00004EF0  103C 0003               8086mm         MOVE.B  #3,D0          
00004EF4  4E4F                    8087mm         TRAP    #15
00004EF6                          8088mm         ENDM
00004EF6                          8089mm         PRINTRB
00004EF6  43F8 00C7               8090mm         LEA     ORB, A1     
00004EFA  103C 000E               8091mm         MOVE.B  #14,D0          
00004EFE  4E4F                    8092mm         TRAP    #15
00004F00                          8093mm         ENDM
00004F00                          8094mm         PRINTPI
00004F00  43F8 00CE               8095mm         LEA     OPSTINC, A1     
00004F04  103C 000E               8096mm         MOVE.B  #14,D0          
00004F08  4E4F                    8097mm         TRAP    #15
00004F0A                          8098mm         ENDM
00004F0A  6000 0454               8099m         BRA     COMPLETE_630  
00004F0E                          8100m ADRREGPOSTINCSRC_630:           
00004F0E                          8101mm         PRINTLB
00004F0E  43F8 00C5               8102mm         LEA     OLB, A1     
00004F12  103C 000E               8103mm         MOVE.B  #14,D0          
00004F16  4E4F                    8104mm         TRAP    #15
00004F18                          8105mm         ENDM
00004F18                          8106mm         PRINTANSRC D3  
00004F18  3203                    8107mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F1A  E149                    8108mm         LSL     #$08, D1
00004F1C  EB49                    8109mm         LSL     #$05, D1
00004F1E  E049                    8110mm         LSR     #$08, D1
00004F20  EA49                    8111mm         LSR     #$05, D1
00004F22  43F8 00C3               8112mm         LEA     OAN, A1     
00004F26  103C 000E               8113mm         MOVE.B  #14,D0          
00004F2A  4E4F                    8114mm         TRAP    #15
00004F2C  103C 0003               8115mm         MOVE.B  #3,D0          
00004F30  4E4F                    8116mm         TRAP    #15
00004F32                          8117mm         ENDM
00004F32                          8118mm         PRINTRB
00004F32  43F8 00C7               8119mm         LEA     ORB, A1     
00004F36  103C 000E               8120mm         MOVE.B  #14,D0          
00004F3A  4E4F                    8121mm         TRAP    #15
00004F3C                          8122mm         ENDM
00004F3C                          8123mm         PRINTPI
00004F3C  43F8 00CE               8124mm         LEA     OPSTINC, A1     
00004F40  103C 000E               8125mm         MOVE.B  #14,D0          
00004F44  4E4F                    8126mm         TRAP    #15
00004F46                          8127mm         ENDM
00004F46  6000 0418               8128m         BRA     COMPLETE_630  
00004F4A                          8129m ADRREGPREDEC_630: 
00004F4A  BC3C 0001               8130m         CMP.B   #$01, D6
00004F4E  6700 003C               8131m         BEQ     ADRREGPREDECSRC_630   
00004F52                          8132m ADRREGPREDECDEST_630:
00004F52                          8133mm         PRINTPD  
00004F52  43F8 00CC               8134mm         LEA     OPREDEC, A1     
00004F56  103C 000E               8135mm         MOVE.B  #14,D0          
00004F5A  4E4F                    8136mm         TRAP    #15
00004F5C                          8137mm         ENDM
00004F5C                          8138mm         PRINTLB
00004F5C  43F8 00C5               8139mm         LEA     OLB, A1     
00004F60  103C 000E               8140mm         MOVE.B  #14,D0          
00004F64  4E4F                    8141mm         TRAP    #15
00004F66                          8142mm         ENDM
00004F66                          8143mm         PRINTANDEST D3  
00004F66  3203                    8144mm         MOVE.W  D3, D1
00004F68  E949                    8145mm         LSL     #$04, D1
00004F6A  E049                    8146mm         LSR     #$08, D1
00004F6C  EA49                    8147mm         LSR     #$05, D1
00004F6E  43F8 00C3               8148mm         LEA     OAN, A1     
00004F72  103C 000E               8149mm         MOVE.B  #14,D0          
00004F76  4E4F                    8150mm         TRAP    #15
00004F78  103C 0003               8151mm         MOVE.B  #3,D0          
00004F7C  4E4F                    8152mm         TRAP    #15
00004F7E                          8153mm         ENDM
00004F7E                          8154mm         PRINTRB
00004F7E  43F8 00C7               8155mm         LEA     ORB, A1     
00004F82  103C 000E               8156mm         MOVE.B  #14,D0          
00004F86  4E4F                    8157mm         TRAP    #15
00004F88                          8158mm         ENDM
00004F88  6000 03D6               8159m         BRA     COMPLETE_630   
00004F8C                          8160m ADRREGPREDECSRC_630: 
00004F8C                          8161mm         PRINTPD  
00004F8C  43F8 00CC               8162mm         LEA     OPREDEC, A1     
00004F90  103C 000E               8163mm         MOVE.B  #14,D0          
00004F94  4E4F                    8164mm         TRAP    #15
00004F96                          8165mm         ENDM
00004F96                          8166mm         PRINTLB
00004F96  43F8 00C5               8167mm         LEA     OLB, A1     
00004F9A  103C 000E               8168mm         MOVE.B  #14,D0          
00004F9E  4E4F                    8169mm         TRAP    #15
00004FA0                          8170mm         ENDM
00004FA0                          8171mm         PRINTANSRC D3  
00004FA0  3203                    8172mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FA2  E149                    8173mm         LSL     #$08, D1
00004FA4  EB49                    8174mm         LSL     #$05, D1
00004FA6  E049                    8175mm         LSR     #$08, D1
00004FA8  EA49                    8176mm         LSR     #$05, D1
00004FAA  43F8 00C3               8177mm         LEA     OAN, A1     
00004FAE  103C 000E               8178mm         MOVE.B  #14,D0          
00004FB2  4E4F                    8179mm         TRAP    #15
00004FB4  103C 0003               8180mm         MOVE.B  #3,D0          
00004FB8  4E4F                    8181mm         TRAP    #15
00004FBA                          8182mm         ENDM
00004FBA                          8183mm         PRINTRB
00004FBA  43F8 00C7               8184mm         LEA     ORB, A1     
00004FBE  103C 000E               8185mm         MOVE.B  #14,D0          
00004FC2  4E4F                    8186mm         TRAP    #15
00004FC4                          8187mm         ENDM
00004FC4  6000 039A               8188m         BRA     COMPLETE_630
00004FC8                          8189m        
00004FC8                          8190m ADRABSOLUTE_630:
00004FC8  BC3C 0001               8191m         CMP.B   #$01, D6
00004FCC  6600 0018               8192m         BNE     ADRABSOLUTEDST_630 
00004FD0                          8193m         
00004FD0  3A03                    8194m         MOVE.W  D3, D5
00004FD2  0803 0002               8195m         BTST    #2, D3
00004FD6  6600 0024               8196m         BNE     ADRIMMEDIATE_630
00004FDA  0803 0000               8197m         BTST    #0, D3
00004FDE  6600 0270               8198m         BNE     ADRABSOLUTEL_630
00004FE2  6000 01DA               8199m         BRA     ADRABSOLUTEW_630
00004FE6                          8200m ADRABSOLUTEDST_630:
00004FE6  3A03                    8201m         MOVE.W  D3, D5
00004FE8  0803 000B               8202m         BTST    #$B, D3
00004FEC  6600 000E               8203m         BNE     ADRIMMEDIATE_630
00004FF0  0803 0009               8204m         BTST    #$09, D3
00004FF4  6600 025A               8205m         BNE     ADRABSOLUTEL_630
00004FF8  6000 01C4               8206m         BRA     ADRABSOLUTEW_630
00004FFC                          8207m ADRIMMEDIATE_630:
00004FFC  BE3C 0001               8208m         CMP.B   #1, D7
00005000  6700 009E               8209m         BEQ     ADRIMMEDIATEL_630
00005004                          8210m ADRIMMEDIATEW_630:
00005004  361A                    8211m         MOVE.W  (A2)+, D3
00005006                          8212mm         PRINTHASH
00005006  103C 0006               8213mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000500A  323C 0023               8214mm         MOVE.W  #35, D1     ; AN = SIGN
0000500E  4E4F                    8215mm         TRAP    #15         ; OUTPUT = SIGN
00005010                          8216mm         ENDM
00005010                          8217mm         PRINTSIGN
00005010  103C 0006               8218mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005014  323C 0024               8219mm         MOVE.W  #36, D1     ; AN = SIGN
00005018  4E4F                    8220mm         TRAP    #15         ; OUTPUT = SIGN
0000501A                          8221mm         ENDM
0000501A                          8222mm         ADROUT
0000501A  3212                    8223mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000501C  E049                    8224mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000501E  E849                    8225mm         LSR.W   #4, D1      
00005020                          8226mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005020  0C01 0009               8227mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005024  6E00 000A               8228mmm         BGT     ALPHA_660
00005028  0601 0030               8229mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000502C  6000 0006               8230mmm         BRA     DONE_660
00005030  0601 0037               8231mmm ALPHA_660: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005034  4E71                    8232mmm DONE_660: NOP
00005036                          8233mmm         ENDM
00005036  4E4F                    8234mm         TRAP    #15         ; EXECUTE OUTPUT
00005038                          8235mm         
00005038  3212                    8236mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000503A  E949                    8237mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000503C  E049                    8238mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000503E  E849                    8239mm         LSR.W   #4, D1      
00005040                          8240mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005040  0C01 0009               8241mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005044  6E00 000A               8242mmm         BGT     ALPHA_661
00005048  0601 0030               8243mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000504C  6000 0006               8244mmm         BRA     DONE_661
00005050  0601 0037               8245mmm ALPHA_661: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005054  4E71                    8246mmm DONE_661: NOP
00005056                          8247mmm         ENDM
00005056  4E4F                    8248mm         TRAP    #15         ; EXECUTE OUTPUT
00005058                          8249mm         
00005058  3212                    8250mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000505A  E149                    8251mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000505C  E049                    8252mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000505E  E849                    8253mm         LSR.W   #4, D1      
00005060                          8254mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005060  0C01 0009               8255mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005064  6E00 000A               8256mmm         BGT     ALPHA_662
00005068  0601 0030               8257mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000506C  6000 0006               8258mmm         BRA     DONE_662
00005070  0601 0037               8259mmm ALPHA_662: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005074  4E71                    8260mmm DONE_662: NOP
00005076                          8261mmm         ENDM
00005076  4E4F                    8262mm         TRAP    #15         ; EXECUTE OUTPUT
00005078                          8263mm         
00005078  3212                    8264mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000507A  E149                    8265mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000507C  E949                    8266mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000507E  E049                    8267mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005080  E849                    8268mm         LSR.W   #4, D1      
00005082                          8269mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005082  0C01 0009               8270mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005086  6E00 000A               8271mmm         BGT     ALPHA_663
0000508A  0601 0030               8272mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000508E  6000 0006               8273mmm         BRA     DONE_663
00005092  0601 0037               8274mmm ALPHA_663: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005096  4E71                    8275mmm DONE_663: NOP
00005098                          8276mmm         ENDM
00005098  4E4F                    8277mm         TRAP    #15         ; EXECUTE OUTPUT       
0000509A                          8278mm         ENDM 
0000509A  3605                    8279m         MOVE.W  D5, D3
0000509C  6000 02C2               8280m         BRA     COMPLETE_630
000050A0                          8281m ADRIMMEDIATEL_630:
000050A0  361A                    8282m         MOVE.W  (A2)+, D3
000050A2                          8283mm         PRINTHASH
000050A2  103C 0006               8284mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050A6  323C 0023               8285mm         MOVE.W  #35, D1     ; AN = SIGN
000050AA  4E4F                    8286mm         TRAP    #15         ; OUTPUT = SIGN
000050AC                          8287mm         ENDM
000050AC                          8288mm         PRINTSIGN
000050AC  103C 0006               8289mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050B0  323C 0024               8290mm         MOVE.W  #36, D1     ; AN = SIGN
000050B4  4E4F                    8291mm         TRAP    #15         ; OUTPUT = SIGN
000050B6                          8292mm         ENDM
000050B6                          8293mm         ADROUT 
000050B6  3212                    8294mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050B8  E049                    8295mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050BA  E849                    8296mm         LSR.W   #4, D1      
000050BC                          8297mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050BC  0C01 0009               8298mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050C0  6E00 000A               8299mmm         BGT     ALPHA_667
000050C4  0601 0030               8300mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050C8  6000 0006               8301mmm         BRA     DONE_667
000050CC  0601 0037               8302mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050D0  4E71                    8303mmm DONE_667: NOP
000050D2                          8304mmm         ENDM
000050D2  4E4F                    8305mm         TRAP    #15         ; EXECUTE OUTPUT
000050D4                          8306mm         
000050D4  3212                    8307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050D6  E949                    8308mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000050D8  E049                    8309mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050DA  E849                    8310mm         LSR.W   #4, D1      
000050DC                          8311mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050DC  0C01 0009               8312mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050E0  6E00 000A               8313mmm         BGT     ALPHA_668
000050E4  0601 0030               8314mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050E8  6000 0006               8315mmm         BRA     DONE_668
000050EC  0601 0037               8316mmm ALPHA_668: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050F0  4E71                    8317mmm DONE_668: NOP
000050F2                          8318mmm         ENDM
000050F2  4E4F                    8319mm         TRAP    #15         ; EXECUTE OUTPUT
000050F4                          8320mm         
000050F4  3212                    8321mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050F6  E149                    8322mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050F8  E049                    8323mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050FA  E849                    8324mm         LSR.W   #4, D1      
000050FC                          8325mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050FC  0C01 0009               8326mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005100  6E00 000A               8327mmm         BGT     ALPHA_669
00005104  0601 0030               8328mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005108  6000 0006               8329mmm         BRA     DONE_669
0000510C  0601 0037               8330mmm ALPHA_669: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005110  4E71                    8331mmm DONE_669: NOP
00005112                          8332mmm         ENDM
00005112  4E4F                    8333mm         TRAP    #15         ; EXECUTE OUTPUT
00005114                          8334mm         
00005114  3212                    8335mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005116  E149                    8336mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005118  E949                    8337mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000511A  E049                    8338mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000511C  E849                    8339mm         LSR.W   #4, D1      
0000511E                          8340mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000511E  0C01 0009               8341mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005122  6E00 000A               8342mmm         BGT     ALPHA_670
00005126  0601 0030               8343mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000512A  6000 0006               8344mmm         BRA     DONE_670
0000512E  0601 0037               8345mmm ALPHA_670: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005132  4E71                    8346mmm DONE_670: NOP
00005134                          8347mmm         ENDM
00005134  4E4F                    8348mm         TRAP    #15         ; EXECUTE OUTPUT       
00005136                          8349mm         ENDM 
00005136  361A                    8350m         MOVE.W  (A2)+, D3
00005138                          8351mm         ADROUT
00005138  3212                    8352mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000513A  E049                    8353mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000513C  E849                    8354mm         LSR.W   #4, D1      
0000513E                          8355mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000513E  0C01 0009               8356mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005142  6E00 000A               8357mmm         BGT     ALPHA_672
00005146  0601 0030               8358mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000514A  6000 0006               8359mmm         BRA     DONE_672
0000514E  0601 0037               8360mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005152  4E71                    8361mmm DONE_672: NOP
00005154                          8362mmm         ENDM
00005154  4E4F                    8363mm         TRAP    #15         ; EXECUTE OUTPUT
00005156                          8364mm         
00005156  3212                    8365mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005158  E949                    8366mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000515A  E049                    8367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000515C  E849                    8368mm         LSR.W   #4, D1      
0000515E                          8369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000515E  0C01 0009               8370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005162  6E00 000A               8371mmm         BGT     ALPHA_673
00005166  0601 0030               8372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000516A  6000 0006               8373mmm         BRA     DONE_673
0000516E  0601 0037               8374mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005172  4E71                    8375mmm DONE_673: NOP
00005174                          8376mmm         ENDM
00005174  4E4F                    8377mm         TRAP    #15         ; EXECUTE OUTPUT
00005176                          8378mm         
00005176  3212                    8379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005178  E149                    8380mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000517A  E049                    8381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000517C  E849                    8382mm         LSR.W   #4, D1      
0000517E                          8383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000517E  0C01 0009               8384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005182  6E00 000A               8385mmm         BGT     ALPHA_674
00005186  0601 0030               8386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000518A  6000 0006               8387mmm         BRA     DONE_674
0000518E  0601 0037               8388mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005192  4E71                    8389mmm DONE_674: NOP
00005194                          8390mmm         ENDM
00005194  4E4F                    8391mm         TRAP    #15         ; EXECUTE OUTPUT
00005196                          8392mm         
00005196  3212                    8393mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005198  E149                    8394mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000519A  E949                    8395mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000519C  E049                    8396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000519E  E849                    8397mm         LSR.W   #4, D1      
000051A0                          8398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051A0  0C01 0009               8399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051A4  6E00 000A               8400mmm         BGT     ALPHA_675
000051A8  0601 0030               8401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051AC  6000 0006               8402mmm         BRA     DONE_675
000051B0  0601 0037               8403mmm ALPHA_675: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051B4  4E71                    8404mmm DONE_675: NOP
000051B6                          8405mmm         ENDM
000051B6  4E4F                    8406mm         TRAP    #15         ; EXECUTE OUTPUT       
000051B8                          8407mm         ENDM 
000051B8  3605                    8408m         MOVE.W  D5, D3
000051BA  6000 01A4               8409m         BRA     COMPLETE_630 
000051BE                          8410m ADRABSOLUTEW_630:     
000051BE  361A                    8411m         MOVE.W  (A2)+, D3
000051C0                          8412mm         PRINTSIGN
000051C0  103C 0006               8413mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051C4  323C 0024               8414mm         MOVE.W  #36, D1     ; AN = SIGN
000051C8  4E4F                    8415mm         TRAP    #15         ; OUTPUT = SIGN
000051CA                          8416mm         ENDM
000051CA                          8417mm         ADROUT
000051CA  3212                    8418mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051CC  E049                    8419mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051CE  E849                    8420mm         LSR.W   #4, D1      
000051D0                          8421mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051D0  0C01 0009               8422mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051D4  6E00 000A               8423mmm         BGT     ALPHA_678
000051D8  0601 0030               8424mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051DC  6000 0006               8425mmm         BRA     DONE_678
000051E0  0601 0037               8426mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051E4  4E71                    8427mmm DONE_678: NOP
000051E6                          8428mmm         ENDM
000051E6  4E4F                    8429mm         TRAP    #15         ; EXECUTE OUTPUT
000051E8                          8430mm         
000051E8  3212                    8431mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051EA  E949                    8432mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000051EC  E049                    8433mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051EE  E849                    8434mm         LSR.W   #4, D1      
000051F0                          8435mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051F0  0C01 0009               8436mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F4  6E00 000A               8437mmm         BGT     ALPHA_679
000051F8  0601 0030               8438mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051FC  6000 0006               8439mmm         BRA     DONE_679
00005200  0601 0037               8440mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005204  4E71                    8441mmm DONE_679: NOP
00005206                          8442mmm         ENDM
00005206  4E4F                    8443mm         TRAP    #15         ; EXECUTE OUTPUT
00005208                          8444mm         
00005208  3212                    8445mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000520A  E149                    8446mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000520C  E049                    8447mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000520E  E849                    8448mm         LSR.W   #4, D1      
00005210                          8449mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005210  0C01 0009               8450mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005214  6E00 000A               8451mmm         BGT     ALPHA_680
00005218  0601 0030               8452mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000521C  6000 0006               8453mmm         BRA     DONE_680
00005220  0601 0037               8454mmm ALPHA_680: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005224  4E71                    8455mmm DONE_680: NOP
00005226                          8456mmm         ENDM
00005226  4E4F                    8457mm         TRAP    #15         ; EXECUTE OUTPUT
00005228                          8458mm         
00005228  3212                    8459mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000522A  E149                    8460mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000522C  E949                    8461mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000522E  E049                    8462mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005230  E849                    8463mm         LSR.W   #4, D1      
00005232                          8464mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005232  0C01 0009               8465mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005236  6E00 000A               8466mmm         BGT     ALPHA_681
0000523A  0601 0030               8467mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000523E  6000 0006               8468mmm         BRA     DONE_681
00005242  0601 0037               8469mmm ALPHA_681: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005246  4E71                    8470mmm DONE_681: NOP
00005248                          8471mmm         ENDM
00005248  4E4F                    8472mm         TRAP    #15         ; EXECUTE OUTPUT       
0000524A                          8473mm         ENDM 
0000524A  3605                    8474m         MOVE.W  D5, D3
0000524C  6000 0112               8475m         BRA     COMPLETE_630  
00005250                          8476m ADRABSOLUTEL_630:  
00005250  361A                    8477m         MOVE.W  (A2)+, D3
00005252                          8478mm         PRINTSIGN
00005252  103C 0006               8479mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005256  323C 0024               8480mm         MOVE.W  #36, D1     ; AN = SIGN
0000525A  4E4F                    8481mm         TRAP    #15         ; OUTPUT = SIGN
0000525C                          8482mm         ENDM
0000525C                          8483mm         ADROUT 
0000525C  3212                    8484mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000525E  E049                    8485mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005260  E849                    8486mm         LSR.W   #4, D1      
00005262                          8487mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005262  0C01 0009               8488mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005266  6E00 000A               8489mmm         BGT     ALPHA_684
0000526A  0601 0030               8490mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000526E  6000 0006               8491mmm         BRA     DONE_684
00005272  0601 0037               8492mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005276  4E71                    8493mmm DONE_684: NOP
00005278                          8494mmm         ENDM
00005278  4E4F                    8495mm         TRAP    #15         ; EXECUTE OUTPUT
0000527A                          8496mm         
0000527A  3212                    8497mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000527C  E949                    8498mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000527E  E049                    8499mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005280  E849                    8500mm         LSR.W   #4, D1      
00005282                          8501mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005282  0C01 0009               8502mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005286  6E00 000A               8503mmm         BGT     ALPHA_685
0000528A  0601 0030               8504mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000528E  6000 0006               8505mmm         BRA     DONE_685
00005292  0601 0037               8506mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005296  4E71                    8507mmm DONE_685: NOP
00005298                          8508mmm         ENDM
00005298  4E4F                    8509mm         TRAP    #15         ; EXECUTE OUTPUT
0000529A                          8510mm         
0000529A  3212                    8511mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000529C  E149                    8512mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000529E  E049                    8513mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052A0  E849                    8514mm         LSR.W   #4, D1      
000052A2                          8515mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052A2  0C01 0009               8516mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052A6  6E00 000A               8517mmm         BGT     ALPHA_686
000052AA  0601 0030               8518mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052AE  6000 0006               8519mmm         BRA     DONE_686
000052B2  0601 0037               8520mmm ALPHA_686: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052B6  4E71                    8521mmm DONE_686: NOP
000052B8                          8522mmm         ENDM
000052B8  4E4F                    8523mm         TRAP    #15         ; EXECUTE OUTPUT
000052BA                          8524mm         
000052BA  3212                    8525mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052BC  E149                    8526mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052BE  E949                    8527mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052C0  E049                    8528mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052C2  E849                    8529mm         LSR.W   #4, D1      
000052C4                          8530mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052C4  0C01 0009               8531mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052C8  6E00 000A               8532mmm         BGT     ALPHA_687
000052CC  0601 0030               8533mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052D0  6000 0006               8534mmm         BRA     DONE_687
000052D4  0601 0037               8535mmm ALPHA_687: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052D8  4E71                    8536mmm DONE_687: NOP
000052DA                          8537mmm         ENDM
000052DA  4E4F                    8538mm         TRAP    #15         ; EXECUTE OUTPUT       
000052DC                          8539mm         ENDM 
000052DC  361A                    8540m         MOVE.W  (A2)+, D3
000052DE                          8541mm         ADROUT
000052DE  3212                    8542mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052E0  E049                    8543mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052E2  E849                    8544mm         LSR.W   #4, D1      
000052E4                          8545mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052E4  0C01 0009               8546mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052E8  6E00 000A               8547mmm         BGT     ALPHA_689
000052EC  0601 0030               8548mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052F0  6000 0006               8549mmm         BRA     DONE_689
000052F4  0601 0037               8550mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052F8  4E71                    8551mmm DONE_689: NOP
000052FA                          8552mmm         ENDM
000052FA  4E4F                    8553mm         TRAP    #15         ; EXECUTE OUTPUT
000052FC                          8554mm         
000052FC  3212                    8555mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052FE  E949                    8556mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005300  E049                    8557mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005302  E849                    8558mm         LSR.W   #4, D1      
00005304                          8559mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005304  0C01 0009               8560mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005308  6E00 000A               8561mmm         BGT     ALPHA_690
0000530C  0601 0030               8562mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005310  6000 0006               8563mmm         BRA     DONE_690
00005314  0601 0037               8564mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005318  4E71                    8565mmm DONE_690: NOP
0000531A                          8566mmm         ENDM
0000531A  4E4F                    8567mm         TRAP    #15         ; EXECUTE OUTPUT
0000531C                          8568mm         
0000531C  3212                    8569mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000531E  E149                    8570mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005320  E049                    8571mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005322  E849                    8572mm         LSR.W   #4, D1      
00005324                          8573mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005324  0C01 0009               8574mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005328  6E00 000A               8575mmm         BGT     ALPHA_691
0000532C  0601 0030               8576mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005330  6000 0006               8577mmm         BRA     DONE_691
00005334  0601 0037               8578mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005338  4E71                    8579mmm DONE_691: NOP
0000533A                          8580mmm         ENDM
0000533A  4E4F                    8581mm         TRAP    #15         ; EXECUTE OUTPUT
0000533C                          8582mm         
0000533C  3212                    8583mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000533E  E149                    8584mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005340  E949                    8585mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005342  E049                    8586mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005344  E849                    8587mm         LSR.W   #4, D1      
00005346                          8588mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005346  0C01 0009               8589mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000534A  6E00 000A               8590mmm         BGT     ALPHA_692
0000534E  0601 0030               8591mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005352  6000 0006               8592mmm         BRA     DONE_692
00005356  0601 0037               8593mmm ALPHA_692: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000535A  4E71                    8594mmm DONE_692: NOP
0000535C                          8595mmm         ENDM
0000535C  4E4F                    8596mm         TRAP    #15         ; EXECUTE OUTPUT       
0000535E                          8597mm         ENDM 
0000535E  3605                    8598m         MOVE.W  D5, D3
00005360                          8599m 
00005360                          8600m COMPLETE_630:  ; OPCODE HAS BEEN VERIFIED
00005360                          8601m         ENDM
00005360  6000 05F4               8602          BRA     decodeANDcomp
00005364                          8603  decodeAndDestOp:
00005364                          8604m         prepareAdrMode  #$1,(A2)
00005364  3C3C 0001               8605m         MOVE.W  #$1, D6      ; INPUT VALUE
00005368  3212                    8606m         MOVE.W  (A2), D1
0000536A  BC3C 0001               8607m         CMP.B   #$01, D6
0000536E  6700 000C               8608m         BEQ     ADRSOURCE_693    
00005372                          8609m ADRDEST_693:
00005372  EF49                    8610m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005374  E049                    8611m         LSR     #$08, D1
00005376  EA49                    8612m         LSR     #$05, D1
00005378  6000 000A               8613m         BRA     COMPLETE_693 
0000537C                          8614m ADRSOURCE_693:                
0000537C  E149                    8615m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000537E  E549                    8616m         LSL     #$02, D1
00005380  E049                    8617m         LSR     #$08, D1
00005382  EA49                    8618m         LSR     #$05, D1
00005384                          8619m COMPLETE_693:  ; OPCODE HAS BEEN VERIFIED
00005384                          8620m         ENDM        
00005384                          8621m         decodeAdrMode   (A2), D1
00005384  3612                    8622m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005386  3201                    8623m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005388                          8624m 
00005388  B23C 0001               8625m         CMP.B   #$01, D1
0000538C  6700 0066               8626m         BEQ     ADRREGDIRECT_694    
00005390  B23C 0002               8627m         CMP.B   #$02, D1
00005394  6700 00A0               8628m         BEQ     ADRREGINDIRECT_694  
00005398  B23C 0003               8629m         CMP.B   #$03, D1
0000539C  6700 0102               8630m         BEQ     ADRREGPOSTINC_694  
000053A0  B23C 0004               8631m         CMP.B   #$04, D1
000053A4  6700 0178               8632m         BEQ     ADRREGPREDEC_694
000053A8  B23C 0007               8633m         CMP.B   #$07, D1
000053AC  6700 01EE               8634m         BEQ     ADRABSOLUTE_694    
000053B0                          8635m         
000053B0                          8636m DATAREGDIRECT_694: 
000053B0  BC3C 0001               8637m         CMP.B   #$01, D6
000053B4  6700 001E               8638m         BEQ     DATAREGDIRECTSRC_694   
000053B8                          8639m DATAREGDIRECTDEST_694: 
000053B8                          8640mm         PRINTDNDEST D3 
000053B8  3203                    8641mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000053BA  E949                    8642mm         LSL     #$04, D1
000053BC  E049                    8643mm         LSR     #$08, D1
000053BE  EA49                    8644mm         LSR     #$05, D1
000053C0  43F8 00C1               8645mm         LEA     ODN, A1     
000053C4  103C 000E               8646mm         MOVE.B  #14,D0          
000053C8  4E4F                    8647mm         TRAP    #15
000053CA  103C 0003               8648mm         MOVE.B  #3,D0          
000053CE  4E4F                    8649mm         TRAP    #15
000053D0                          8650mm         ENDM
000053D0  6000 0562               8651m         BRA     COMPLETE_694 
000053D4                          8652m DATAREGDIRECTSRC_694: 
000053D4                          8653mm         PRINTDNSRC D3 
000053D4  4281                    8654mm         CLR.L   D1
000053D6  3203                    8655mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000053D8  E149                    8656mm         LSL     #$08, D1
000053DA  EB49                    8657mm         LSL     #$05, D1
000053DC  E049                    8658mm         LSR     #$08, D1
000053DE  EA49                    8659mm         LSR     #$05, D1
000053E0  43F8 00C1               8660mm         LEA     ODN, A1     
000053E4  103C 000E               8661mm         MOVE.B  #14,D0          
000053E8  4E4F                    8662mm         TRAP    #15
000053EA  103C 0003               8663mm         MOVE.B  #3,D0          
000053EE  4E4F                    8664mm         TRAP    #15
000053F0                          8665mm         ENDM
000053F0  6000 0542               8666m         BRA     COMPLETE_694   
000053F4                          8667m         
000053F4                          8668m ADRREGDIRECT_694: 
000053F4  BC3C 0001               8669m         CMP.B   #$01, D6
000053F8  6700 001E               8670m         BEQ     ADRREGDIRECTSRC_694   
000053FC                          8671m ADRREGDIRECTDEST_694:
000053FC                          8672mm         PRINTANDEST D3
000053FC  3203                    8673mm         MOVE.W  D3, D1
000053FE  E949                    8674mm         LSL     #$04, D1
00005400  E049                    8675mm         LSR     #$08, D1
00005402  EA49                    8676mm         LSR     #$05, D1
00005404  43F8 00C3               8677mm         LEA     OAN, A1     
00005408  103C 000E               8678mm         MOVE.B  #14,D0          
0000540C  4E4F                    8679mm         TRAP    #15
0000540E  103C 0003               8680mm         MOVE.B  #3,D0          
00005412  4E4F                    8681mm         TRAP    #15
00005414                          8682mm         ENDM
00005414  6000 051E               8683m         BRA     COMPLETE_694   
00005418                          8684m ADRREGDIRECTSRC_694:
00005418                          8685mm         PRINTANSRC D3
00005418  3203                    8686mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000541A  E149                    8687mm         LSL     #$08, D1
0000541C  EB49                    8688mm         LSL     #$05, D1
0000541E  E049                    8689mm         LSR     #$08, D1
00005420  EA49                    8690mm         LSR     #$05, D1
00005422  43F8 00C3               8691mm         LEA     OAN, A1     
00005426  103C 000E               8692mm         MOVE.B  #14,D0          
0000542A  4E4F                    8693mm         TRAP    #15
0000542C  103C 0003               8694mm         MOVE.B  #3,D0          
00005430  4E4F                    8695mm         TRAP    #15
00005432                          8696mm         ENDM
00005432  6000 0500               8697m         BRA     COMPLETE_694   
00005436                          8698m        
00005436                          8699m ADRREGINDIRECT_694:   
00005436  BC3C 0001               8700m         CMP.B   #$01, D6
0000543A  6700 0032               8701m         BEQ     ADRREGINDIRECTSRC_694   
0000543E                          8702m ADRREGINDIRECTDEST_694:
0000543E                          8703mm         PRINTLB
0000543E  43F8 00C5               8704mm         LEA     OLB, A1     
00005442  103C 000E               8705mm         MOVE.B  #14,D0          
00005446  4E4F                    8706mm         TRAP    #15
00005448                          8707mm         ENDM
00005448                          8708mm         PRINTANDEST D3  
00005448  3203                    8709mm         MOVE.W  D3, D1
0000544A  E949                    8710mm         LSL     #$04, D1
0000544C  E049                    8711mm         LSR     #$08, D1
0000544E  EA49                    8712mm         LSR     #$05, D1
00005450  43F8 00C3               8713mm         LEA     OAN, A1     
00005454  103C 000E               8714mm         MOVE.B  #14,D0          
00005458  4E4F                    8715mm         TRAP    #15
0000545A  103C 0003               8716mm         MOVE.B  #3,D0          
0000545E  4E4F                    8717mm         TRAP    #15
00005460                          8718mm         ENDM
00005460                          8719mm         PRINTRB
00005460  43F8 00C7               8720mm         LEA     ORB, A1     
00005464  103C 000E               8721mm         MOVE.B  #14,D0          
00005468  4E4F                    8722mm         TRAP    #15
0000546A                          8723mm         ENDM
0000546A  6000 04C8               8724m         BRA     COMPLETE_694     
0000546E                          8725m ADRREGINDIRECTSRC_694:   
0000546E                          8726mm         PRINTLB
0000546E  43F8 00C5               8727mm         LEA     OLB, A1     
00005472  103C 000E               8728mm         MOVE.B  #14,D0          
00005476  4E4F                    8729mm         TRAP    #15
00005478                          8730mm         ENDM
00005478                          8731mm         PRINTANSRC D3  
00005478  3203                    8732mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000547A  E149                    8733mm         LSL     #$08, D1
0000547C  EB49                    8734mm         LSL     #$05, D1
0000547E  E049                    8735mm         LSR     #$08, D1
00005480  EA49                    8736mm         LSR     #$05, D1
00005482  43F8 00C3               8737mm         LEA     OAN, A1     
00005486  103C 000E               8738mm         MOVE.B  #14,D0          
0000548A  4E4F                    8739mm         TRAP    #15
0000548C  103C 0003               8740mm         MOVE.B  #3,D0          
00005490  4E4F                    8741mm         TRAP    #15
00005492                          8742mm         ENDM
00005492                          8743mm         PRINTRB
00005492  43F8 00C7               8744mm         LEA     ORB, A1     
00005496  103C 000E               8745mm         MOVE.B  #14,D0          
0000549A  4E4F                    8746mm         TRAP    #15
0000549C                          8747mm         ENDM
0000549C  6000 0496               8748m         BRA     COMPLETE_694   
000054A0                          8749m         
000054A0                          8750m ADRREGPOSTINC_694:   
000054A0  BC3C 0001               8751m         CMP.B   #$01, D6
000054A4  6700 003C               8752m         BEQ     ADRREGPOSTINCSRC_694   
000054A8                          8753m ADRREGPOSTINCDEST_694: 
000054A8                          8754mm         PRINTLB
000054A8  43F8 00C5               8755mm         LEA     OLB, A1     
000054AC  103C 000E               8756mm         MOVE.B  #14,D0          
000054B0  4E4F                    8757mm         TRAP    #15
000054B2                          8758mm         ENDM
000054B2                          8759mm         PRINTANDEST D3  
000054B2  3203                    8760mm         MOVE.W  D3, D1
000054B4  E949                    8761mm         LSL     #$04, D1
000054B6  E049                    8762mm         LSR     #$08, D1
000054B8  EA49                    8763mm         LSR     #$05, D1
000054BA  43F8 00C3               8764mm         LEA     OAN, A1     
000054BE  103C 000E               8765mm         MOVE.B  #14,D0          
000054C2  4E4F                    8766mm         TRAP    #15
000054C4  103C 0003               8767mm         MOVE.B  #3,D0          
000054C8  4E4F                    8768mm         TRAP    #15
000054CA                          8769mm         ENDM
000054CA                          8770mm         PRINTRB
000054CA  43F8 00C7               8771mm         LEA     ORB, A1     
000054CE  103C 000E               8772mm         MOVE.B  #14,D0          
000054D2  4E4F                    8773mm         TRAP    #15
000054D4                          8774mm         ENDM
000054D4                          8775mm         PRINTPI
000054D4  43F8 00CE               8776mm         LEA     OPSTINC, A1     
000054D8  103C 000E               8777mm         MOVE.B  #14,D0          
000054DC  4E4F                    8778mm         TRAP    #15
000054DE                          8779mm         ENDM
000054DE  6000 0454               8780m         BRA     COMPLETE_694  
000054E2                          8781m ADRREGPOSTINCSRC_694:           
000054E2                          8782mm         PRINTLB
000054E2  43F8 00C5               8783mm         LEA     OLB, A1     
000054E6  103C 000E               8784mm         MOVE.B  #14,D0          
000054EA  4E4F                    8785mm         TRAP    #15
000054EC                          8786mm         ENDM
000054EC                          8787mm         PRINTANSRC D3  
000054EC  3203                    8788mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000054EE  E149                    8789mm         LSL     #$08, D1
000054F0  EB49                    8790mm         LSL     #$05, D1
000054F2  E049                    8791mm         LSR     #$08, D1
000054F4  EA49                    8792mm         LSR     #$05, D1
000054F6  43F8 00C3               8793mm         LEA     OAN, A1     
000054FA  103C 000E               8794mm         MOVE.B  #14,D0          
000054FE  4E4F                    8795mm         TRAP    #15
00005500  103C 0003               8796mm         MOVE.B  #3,D0          
00005504  4E4F                    8797mm         TRAP    #15
00005506                          8798mm         ENDM
00005506                          8799mm         PRINTRB
00005506  43F8 00C7               8800mm         LEA     ORB, A1     
0000550A  103C 000E               8801mm         MOVE.B  #14,D0          
0000550E  4E4F                    8802mm         TRAP    #15
00005510                          8803mm         ENDM
00005510                          8804mm         PRINTPI
00005510  43F8 00CE               8805mm         LEA     OPSTINC, A1     
00005514  103C 000E               8806mm         MOVE.B  #14,D0          
00005518  4E4F                    8807mm         TRAP    #15
0000551A                          8808mm         ENDM
0000551A  6000 0418               8809m         BRA     COMPLETE_694  
0000551E                          8810m ADRREGPREDEC_694: 
0000551E  BC3C 0001               8811m         CMP.B   #$01, D6
00005522  6700 003C               8812m         BEQ     ADRREGPREDECSRC_694   
00005526                          8813m ADRREGPREDECDEST_694:
00005526                          8814mm         PRINTPD  
00005526  43F8 00CC               8815mm         LEA     OPREDEC, A1     
0000552A  103C 000E               8816mm         MOVE.B  #14,D0          
0000552E  4E4F                    8817mm         TRAP    #15
00005530                          8818mm         ENDM
00005530                          8819mm         PRINTLB
00005530  43F8 00C5               8820mm         LEA     OLB, A1     
00005534  103C 000E               8821mm         MOVE.B  #14,D0          
00005538  4E4F                    8822mm         TRAP    #15
0000553A                          8823mm         ENDM
0000553A                          8824mm         PRINTANDEST D3  
0000553A  3203                    8825mm         MOVE.W  D3, D1
0000553C  E949                    8826mm         LSL     #$04, D1
0000553E  E049                    8827mm         LSR     #$08, D1
00005540  EA49                    8828mm         LSR     #$05, D1
00005542  43F8 00C3               8829mm         LEA     OAN, A1     
00005546  103C 000E               8830mm         MOVE.B  #14,D0          
0000554A  4E4F                    8831mm         TRAP    #15
0000554C  103C 0003               8832mm         MOVE.B  #3,D0          
00005550  4E4F                    8833mm         TRAP    #15
00005552                          8834mm         ENDM
00005552                          8835mm         PRINTRB
00005552  43F8 00C7               8836mm         LEA     ORB, A1     
00005556  103C 000E               8837mm         MOVE.B  #14,D0          
0000555A  4E4F                    8838mm         TRAP    #15
0000555C                          8839mm         ENDM
0000555C  6000 03D6               8840m         BRA     COMPLETE_694   
00005560                          8841m ADRREGPREDECSRC_694: 
00005560                          8842mm         PRINTPD  
00005560  43F8 00CC               8843mm         LEA     OPREDEC, A1     
00005564  103C 000E               8844mm         MOVE.B  #14,D0          
00005568  4E4F                    8845mm         TRAP    #15
0000556A                          8846mm         ENDM
0000556A                          8847mm         PRINTLB
0000556A  43F8 00C5               8848mm         LEA     OLB, A1     
0000556E  103C 000E               8849mm         MOVE.B  #14,D0          
00005572  4E4F                    8850mm         TRAP    #15
00005574                          8851mm         ENDM
00005574                          8852mm         PRINTANSRC D3  
00005574  3203                    8853mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005576  E149                    8854mm         LSL     #$08, D1
00005578  EB49                    8855mm         LSL     #$05, D1
0000557A  E049                    8856mm         LSR     #$08, D1
0000557C  EA49                    8857mm         LSR     #$05, D1
0000557E  43F8 00C3               8858mm         LEA     OAN, A1     
00005582  103C 000E               8859mm         MOVE.B  #14,D0          
00005586  4E4F                    8860mm         TRAP    #15
00005588  103C 0003               8861mm         MOVE.B  #3,D0          
0000558C  4E4F                    8862mm         TRAP    #15
0000558E                          8863mm         ENDM
0000558E                          8864mm         PRINTRB
0000558E  43F8 00C7               8865mm         LEA     ORB, A1     
00005592  103C 000E               8866mm         MOVE.B  #14,D0          
00005596  4E4F                    8867mm         TRAP    #15
00005598                          8868mm         ENDM
00005598  6000 039A               8869m         BRA     COMPLETE_694
0000559C                          8870m        
0000559C                          8871m ADRABSOLUTE_694:
0000559C  BC3C 0001               8872m         CMP.B   #$01, D6
000055A0  6600 0018               8873m         BNE     ADRABSOLUTEDST_694 
000055A4                          8874m         
000055A4  3A03                    8875m         MOVE.W  D3, D5
000055A6  0803 0002               8876m         BTST    #2, D3
000055AA  6600 0024               8877m         BNE     ADRIMMEDIATE_694
000055AE  0803 0000               8878m         BTST    #0, D3
000055B2  6600 0270               8879m         BNE     ADRABSOLUTEL_694
000055B6  6000 01DA               8880m         BRA     ADRABSOLUTEW_694
000055BA                          8881m ADRABSOLUTEDST_694:
000055BA  3A03                    8882m         MOVE.W  D3, D5
000055BC  0803 000B               8883m         BTST    #$B, D3
000055C0  6600 000E               8884m         BNE     ADRIMMEDIATE_694
000055C4  0803 0009               8885m         BTST    #$09, D3
000055C8  6600 025A               8886m         BNE     ADRABSOLUTEL_694
000055CC  6000 01C4               8887m         BRA     ADRABSOLUTEW_694
000055D0                          8888m ADRIMMEDIATE_694:
000055D0  BE3C 0001               8889m         CMP.B   #1, D7
000055D4  6700 009E               8890m         BEQ     ADRIMMEDIATEL_694
000055D8                          8891m ADRIMMEDIATEW_694:
000055D8  361A                    8892m         MOVE.W  (A2)+, D3
000055DA                          8893mm         PRINTHASH
000055DA  103C 0006               8894mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055DE  323C 0023               8895mm         MOVE.W  #35, D1     ; AN = SIGN
000055E2  4E4F                    8896mm         TRAP    #15         ; OUTPUT = SIGN
000055E4                          8897mm         ENDM
000055E4                          8898mm         PRINTSIGN
000055E4  103C 0006               8899mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055E8  323C 0024               8900mm         MOVE.W  #36, D1     ; AN = SIGN
000055EC  4E4F                    8901mm         TRAP    #15         ; OUTPUT = SIGN
000055EE                          8902mm         ENDM
000055EE                          8903mm         ADROUT
000055EE  3212                    8904mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000055F0  E049                    8905mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000055F2  E849                    8906mm         LSR.W   #4, D1      
000055F4                          8907mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000055F4  0C01 0009               8908mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000055F8  6E00 000A               8909mmm         BGT     ALPHA_724
000055FC  0601 0030               8910mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005600  6000 0006               8911mmm         BRA     DONE_724
00005604  0601 0037               8912mmm ALPHA_724: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005608  4E71                    8913mmm DONE_724: NOP
0000560A                          8914mmm         ENDM
0000560A  4E4F                    8915mm         TRAP    #15         ; EXECUTE OUTPUT
0000560C                          8916mm         
0000560C  3212                    8917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000560E  E949                    8918mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005610  E049                    8919mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005612  E849                    8920mm         LSR.W   #4, D1      
00005614                          8921mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005614  0C01 0009               8922mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005618  6E00 000A               8923mmm         BGT     ALPHA_725
0000561C  0601 0030               8924mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005620  6000 0006               8925mmm         BRA     DONE_725
00005624  0601 0037               8926mmm ALPHA_725: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005628  4E71                    8927mmm DONE_725: NOP
0000562A                          8928mmm         ENDM
0000562A  4E4F                    8929mm         TRAP    #15         ; EXECUTE OUTPUT
0000562C                          8930mm         
0000562C  3212                    8931mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000562E  E149                    8932mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005630  E049                    8933mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005632  E849                    8934mm         LSR.W   #4, D1      
00005634                          8935mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005634  0C01 0009               8936mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005638  6E00 000A               8937mmm         BGT     ALPHA_726
0000563C  0601 0030               8938mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005640  6000 0006               8939mmm         BRA     DONE_726
00005644  0601 0037               8940mmm ALPHA_726: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005648  4E71                    8941mmm DONE_726: NOP
0000564A                          8942mmm         ENDM
0000564A  4E4F                    8943mm         TRAP    #15         ; EXECUTE OUTPUT
0000564C                          8944mm         
0000564C  3212                    8945mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000564E  E149                    8946mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005650  E949                    8947mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005652  E049                    8948mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005654  E849                    8949mm         LSR.W   #4, D1      
00005656                          8950mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005656  0C01 0009               8951mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000565A  6E00 000A               8952mmm         BGT     ALPHA_727
0000565E  0601 0030               8953mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005662  6000 0006               8954mmm         BRA     DONE_727
00005666  0601 0037               8955mmm ALPHA_727: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000566A  4E71                    8956mmm DONE_727: NOP
0000566C                          8957mmm         ENDM
0000566C  4E4F                    8958mm         TRAP    #15         ; EXECUTE OUTPUT       
0000566E                          8959mm         ENDM 
0000566E  3605                    8960m         MOVE.W  D5, D3
00005670  6000 02C2               8961m         BRA     COMPLETE_694
00005674                          8962m ADRIMMEDIATEL_694:
00005674  361A                    8963m         MOVE.W  (A2)+, D3
00005676                          8964mm         PRINTHASH
00005676  103C 0006               8965mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000567A  323C 0023               8966mm         MOVE.W  #35, D1     ; AN = SIGN
0000567E  4E4F                    8967mm         TRAP    #15         ; OUTPUT = SIGN
00005680                          8968mm         ENDM
00005680                          8969mm         PRINTSIGN
00005680  103C 0006               8970mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005684  323C 0024               8971mm         MOVE.W  #36, D1     ; AN = SIGN
00005688  4E4F                    8972mm         TRAP    #15         ; OUTPUT = SIGN
0000568A                          8973mm         ENDM
0000568A                          8974mm         ADROUT 
0000568A  3212                    8975mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000568C  E049                    8976mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000568E  E849                    8977mm         LSR.W   #4, D1      
00005690                          8978mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005690  0C01 0009               8979mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005694  6E00 000A               8980mmm         BGT     ALPHA_731
00005698  0601 0030               8981mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000569C  6000 0006               8982mmm         BRA     DONE_731
000056A0  0601 0037               8983mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056A4  4E71                    8984mmm DONE_731: NOP
000056A6                          8985mmm         ENDM
000056A6  4E4F                    8986mm         TRAP    #15         ; EXECUTE OUTPUT
000056A8                          8987mm         
000056A8  3212                    8988mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056AA  E949                    8989mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000056AC  E049                    8990mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056AE  E849                    8991mm         LSR.W   #4, D1      
000056B0                          8992mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056B0  0C01 0009               8993mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056B4  6E00 000A               8994mmm         BGT     ALPHA_732
000056B8  0601 0030               8995mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056BC  6000 0006               8996mmm         BRA     DONE_732
000056C0  0601 0037               8997mmm ALPHA_732: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056C4  4E71                    8998mmm DONE_732: NOP
000056C6                          8999mmm         ENDM
000056C6  4E4F                    9000mm         TRAP    #15         ; EXECUTE OUTPUT
000056C8                          9001mm         
000056C8  3212                    9002mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056CA  E149                    9003mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056CC  E049                    9004mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056CE  E849                    9005mm         LSR.W   #4, D1      
000056D0                          9006mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056D0  0C01 0009               9007mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056D4  6E00 000A               9008mmm         BGT     ALPHA_733
000056D8  0601 0030               9009mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056DC  6000 0006               9010mmm         BRA     DONE_733
000056E0  0601 0037               9011mmm ALPHA_733: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056E4  4E71                    9012mmm DONE_733: NOP
000056E6                          9013mmm         ENDM
000056E6  4E4F                    9014mm         TRAP    #15         ; EXECUTE OUTPUT
000056E8                          9015mm         
000056E8  3212                    9016mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056EA  E149                    9017mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056EC  E949                    9018mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000056EE  E049                    9019mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056F0  E849                    9020mm         LSR.W   #4, D1      
000056F2                          9021mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056F2  0C01 0009               9022mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056F6  6E00 000A               9023mmm         BGT     ALPHA_734
000056FA  0601 0030               9024mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056FE  6000 0006               9025mmm         BRA     DONE_734
00005702  0601 0037               9026mmm ALPHA_734: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005706  4E71                    9027mmm DONE_734: NOP
00005708                          9028mmm         ENDM
00005708  4E4F                    9029mm         TRAP    #15         ; EXECUTE OUTPUT       
0000570A                          9030mm         ENDM 
0000570A  361A                    9031m         MOVE.W  (A2)+, D3
0000570C                          9032mm         ADROUT
0000570C  3212                    9033mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000570E  E049                    9034mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005710  E849                    9035mm         LSR.W   #4, D1      
00005712                          9036mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005712  0C01 0009               9037mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005716  6E00 000A               9038mmm         BGT     ALPHA_736
0000571A  0601 0030               9039mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000571E  6000 0006               9040mmm         BRA     DONE_736
00005722  0601 0037               9041mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005726  4E71                    9042mmm DONE_736: NOP
00005728                          9043mmm         ENDM
00005728  4E4F                    9044mm         TRAP    #15         ; EXECUTE OUTPUT
0000572A                          9045mm         
0000572A  3212                    9046mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000572C  E949                    9047mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000572E  E049                    9048mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005730  E849                    9049mm         LSR.W   #4, D1      
00005732                          9050mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005732  0C01 0009               9051mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005736  6E00 000A               9052mmm         BGT     ALPHA_737
0000573A  0601 0030               9053mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000573E  6000 0006               9054mmm         BRA     DONE_737
00005742  0601 0037               9055mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005746  4E71                    9056mmm DONE_737: NOP
00005748                          9057mmm         ENDM
00005748  4E4F                    9058mm         TRAP    #15         ; EXECUTE OUTPUT
0000574A                          9059mm         
0000574A  3212                    9060mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000574C  E149                    9061mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000574E  E049                    9062mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005750  E849                    9063mm         LSR.W   #4, D1      
00005752                          9064mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005752  0C01 0009               9065mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005756  6E00 000A               9066mmm         BGT     ALPHA_738
0000575A  0601 0030               9067mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000575E  6000 0006               9068mmm         BRA     DONE_738
00005762  0601 0037               9069mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005766  4E71                    9070mmm DONE_738: NOP
00005768                          9071mmm         ENDM
00005768  4E4F                    9072mm         TRAP    #15         ; EXECUTE OUTPUT
0000576A                          9073mm         
0000576A  3212                    9074mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000576C  E149                    9075mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000576E  E949                    9076mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005770  E049                    9077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005772  E849                    9078mm         LSR.W   #4, D1      
00005774                          9079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005774  0C01 0009               9080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005778  6E00 000A               9081mmm         BGT     ALPHA_739
0000577C  0601 0030               9082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005780  6000 0006               9083mmm         BRA     DONE_739
00005784  0601 0037               9084mmm ALPHA_739: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005788  4E71                    9085mmm DONE_739: NOP
0000578A                          9086mmm         ENDM
0000578A  4E4F                    9087mm         TRAP    #15         ; EXECUTE OUTPUT       
0000578C                          9088mm         ENDM 
0000578C  3605                    9089m         MOVE.W  D5, D3
0000578E  6000 01A4               9090m         BRA     COMPLETE_694 
00005792                          9091m ADRABSOLUTEW_694:     
00005792  361A                    9092m         MOVE.W  (A2)+, D3
00005794                          9093mm         PRINTSIGN
00005794  103C 0006               9094mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005798  323C 0024               9095mm         MOVE.W  #36, D1     ; AN = SIGN
0000579C  4E4F                    9096mm         TRAP    #15         ; OUTPUT = SIGN
0000579E                          9097mm         ENDM
0000579E                          9098mm         ADROUT
0000579E  3212                    9099mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057A0  E049                    9100mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057A2  E849                    9101mm         LSR.W   #4, D1      
000057A4                          9102mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057A4  0C01 0009               9103mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057A8  6E00 000A               9104mmm         BGT     ALPHA_742
000057AC  0601 0030               9105mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057B0  6000 0006               9106mmm         BRA     DONE_742
000057B4  0601 0037               9107mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057B8  4E71                    9108mmm DONE_742: NOP
000057BA                          9109mmm         ENDM
000057BA  4E4F                    9110mm         TRAP    #15         ; EXECUTE OUTPUT
000057BC                          9111mm         
000057BC  3212                    9112mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057BE  E949                    9113mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000057C0  E049                    9114mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057C2  E849                    9115mm         LSR.W   #4, D1      
000057C4                          9116mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057C4  0C01 0009               9117mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057C8  6E00 000A               9118mmm         BGT     ALPHA_743
000057CC  0601 0030               9119mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057D0  6000 0006               9120mmm         BRA     DONE_743
000057D4  0601 0037               9121mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057D8  4E71                    9122mmm DONE_743: NOP
000057DA                          9123mmm         ENDM
000057DA  4E4F                    9124mm         TRAP    #15         ; EXECUTE OUTPUT
000057DC                          9125mm         
000057DC  3212                    9126mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057DE  E149                    9127mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057E0  E049                    9128mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057E2  E849                    9129mm         LSR.W   #4, D1      
000057E4                          9130mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057E4  0C01 0009               9131mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057E8  6E00 000A               9132mmm         BGT     ALPHA_744
000057EC  0601 0030               9133mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057F0  6000 0006               9134mmm         BRA     DONE_744
000057F4  0601 0037               9135mmm ALPHA_744: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057F8  4E71                    9136mmm DONE_744: NOP
000057FA                          9137mmm         ENDM
000057FA  4E4F                    9138mm         TRAP    #15         ; EXECUTE OUTPUT
000057FC                          9139mm         
000057FC  3212                    9140mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057FE  E149                    9141mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005800  E949                    9142mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005802  E049                    9143mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005804  E849                    9144mm         LSR.W   #4, D1      
00005806                          9145mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005806  0C01 0009               9146mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000580A  6E00 000A               9147mmm         BGT     ALPHA_745
0000580E  0601 0030               9148mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005812  6000 0006               9149mmm         BRA     DONE_745
00005816  0601 0037               9150mmm ALPHA_745: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000581A  4E71                    9151mmm DONE_745: NOP
0000581C                          9152mmm         ENDM
0000581C  4E4F                    9153mm         TRAP    #15         ; EXECUTE OUTPUT       
0000581E                          9154mm         ENDM 
0000581E  3605                    9155m         MOVE.W  D5, D3
00005820  6000 0112               9156m         BRA     COMPLETE_694  
00005824                          9157m ADRABSOLUTEL_694:  
00005824  361A                    9158m         MOVE.W  (A2)+, D3
00005826                          9159mm         PRINTSIGN
00005826  103C 0006               9160mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000582A  323C 0024               9161mm         MOVE.W  #36, D1     ; AN = SIGN
0000582E  4E4F                    9162mm         TRAP    #15         ; OUTPUT = SIGN
00005830                          9163mm         ENDM
00005830                          9164mm         ADROUT 
00005830  3212                    9165mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005832  E049                    9166mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005834  E849                    9167mm         LSR.W   #4, D1      
00005836                          9168mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005836  0C01 0009               9169mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000583A  6E00 000A               9170mmm         BGT     ALPHA_748
0000583E  0601 0030               9171mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005842  6000 0006               9172mmm         BRA     DONE_748
00005846  0601 0037               9173mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000584A  4E71                    9174mmm DONE_748: NOP
0000584C                          9175mmm         ENDM
0000584C  4E4F                    9176mm         TRAP    #15         ; EXECUTE OUTPUT
0000584E                          9177mm         
0000584E  3212                    9178mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005850  E949                    9179mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005852  E049                    9180mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005854  E849                    9181mm         LSR.W   #4, D1      
00005856                          9182mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005856  0C01 0009               9183mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000585A  6E00 000A               9184mmm         BGT     ALPHA_749
0000585E  0601 0030               9185mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005862  6000 0006               9186mmm         BRA     DONE_749
00005866  0601 0037               9187mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000586A  4E71                    9188mmm DONE_749: NOP
0000586C                          9189mmm         ENDM
0000586C  4E4F                    9190mm         TRAP    #15         ; EXECUTE OUTPUT
0000586E                          9191mm         
0000586E  3212                    9192mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005870  E149                    9193mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005872  E049                    9194mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005874  E849                    9195mm         LSR.W   #4, D1      
00005876                          9196mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005876  0C01 0009               9197mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000587A  6E00 000A               9198mmm         BGT     ALPHA_750
0000587E  0601 0030               9199mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005882  6000 0006               9200mmm         BRA     DONE_750
00005886  0601 0037               9201mmm ALPHA_750: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000588A  4E71                    9202mmm DONE_750: NOP
0000588C                          9203mmm         ENDM
0000588C  4E4F                    9204mm         TRAP    #15         ; EXECUTE OUTPUT
0000588E                          9205mm         
0000588E  3212                    9206mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005890  E149                    9207mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005892  E949                    9208mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005894  E049                    9209mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005896  E849                    9210mm         LSR.W   #4, D1      
00005898                          9211mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005898  0C01 0009               9212mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000589C  6E00 000A               9213mmm         BGT     ALPHA_751
000058A0  0601 0030               9214mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A4  6000 0006               9215mmm         BRA     DONE_751
000058A8  0601 0037               9216mmm ALPHA_751: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058AC  4E71                    9217mmm DONE_751: NOP
000058AE                          9218mmm         ENDM
000058AE  4E4F                    9219mm         TRAP    #15         ; EXECUTE OUTPUT       
000058B0                          9220mm         ENDM 
000058B0  361A                    9221m         MOVE.W  (A2)+, D3
000058B2                          9222mm         ADROUT
000058B2  3212                    9223mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B4  E049                    9224mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058B6  E849                    9225mm         LSR.W   #4, D1      
000058B8                          9226mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058B8  0C01 0009               9227mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058BC  6E00 000A               9228mmm         BGT     ALPHA_753
000058C0  0601 0030               9229mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C4  6000 0006               9230mmm         BRA     DONE_753
000058C8  0601 0037               9231mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058CC  4E71                    9232mmm DONE_753: NOP
000058CE                          9233mmm         ENDM
000058CE  4E4F                    9234mm         TRAP    #15         ; EXECUTE OUTPUT
000058D0                          9235mm         
000058D0  3212                    9236mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058D2  E949                    9237mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000058D4  E049                    9238mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058D6  E849                    9239mm         LSR.W   #4, D1      
000058D8                          9240mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058D8  0C01 0009               9241mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058DC  6E00 000A               9242mmm         BGT     ALPHA_754
000058E0  0601 0030               9243mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058E4  6000 0006               9244mmm         BRA     DONE_754
000058E8  0601 0037               9245mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058EC  4E71                    9246mmm DONE_754: NOP
000058EE                          9247mmm         ENDM
000058EE  4E4F                    9248mm         TRAP    #15         ; EXECUTE OUTPUT
000058F0                          9249mm         
000058F0  3212                    9250mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058F2  E149                    9251mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058F4  E049                    9252mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058F6  E849                    9253mm         LSR.W   #4, D1      
000058F8                          9254mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058F8  0C01 0009               9255mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058FC  6E00 000A               9256mmm         BGT     ALPHA_755
00005900  0601 0030               9257mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005904  6000 0006               9258mmm         BRA     DONE_755
00005908  0601 0037               9259mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000590C  4E71                    9260mmm DONE_755: NOP
0000590E                          9261mmm         ENDM
0000590E  4E4F                    9262mm         TRAP    #15         ; EXECUTE OUTPUT
00005910                          9263mm         
00005910  3212                    9264mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005912  E149                    9265mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005914  E949                    9266mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005916  E049                    9267mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005918  E849                    9268mm         LSR.W   #4, D1      
0000591A                          9269mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000591A  0C01 0009               9270mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000591E  6E00 000A               9271mmm         BGT     ALPHA_756
00005922  0601 0030               9272mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005926  6000 0006               9273mmm         BRA     DONE_756
0000592A  0601 0037               9274mmm ALPHA_756: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000592E  4E71                    9275mmm DONE_756: NOP
00005930                          9276mmm         ENDM
00005930  4E4F                    9277mm         TRAP    #15         ; EXECUTE OUTPUT       
00005932                          9278mm         ENDM 
00005932  3605                    9279m         MOVE.W  D5, D3
00005934                          9280m 
00005934                          9281m COMPLETE_694:  ; OPCODE HAS BEEN VERIFIED
00005934                          9282m         ENDM
00005934                          9283m         printComma
00005934  43F8 00C9               9284m         LEA     OCOMMA, A1     
00005938  103C 000E               9285m         MOVE.B  #14,D0          
0000593C  4E4F                    9286m         TRAP    #15
0000593E                          9287m         ENDM
0000593E                          9288m         printDnDest     (A2)
0000593E  3212                    9289m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005940  E949                    9290m         LSL     #$04, D1
00005942  E049                    9291m         LSR     #$08, D1
00005944  EA49                    9292m         LSR     #$05, D1
00005946  43F8 00C1               9293m         LEA     ODN, A1     
0000594A  103C 000E               9294m         MOVE.B  #14,D0          
0000594E  4E4F                    9295m         TRAP    #15
00005950  103C 0003               9296m         MOVE.B  #3,D0          
00005954  4E4F                    9297m         TRAP    #15
00005956                          9298m         ENDM
00005956                          9299  decodeANDcomp:
00005956  4E75                    9300          RTS                ; Return from decodeANDcomp subroutine
00005958                          9301  
00005958                          9302  
00005958                          9303  ; ------------------------------------------------------------
00005958                          9304  ; 10. "decodeNOT" subroutine
00005958                          9305  ; AUTHOR
00005958                          9306  ;
00005958                          9307  ; TODO: DESCRIPTION
00005958                          9308  ; ------------------------------------------------------------
00005958                          9309  decodeNOT:
00005958                          9310m         verifyOpcode    pNOT, (A2)
00005958  43F8 016D               9311m         LEA     PNOT, A1      ; INPUT PATTERN STRING
0000595C  3612                    9312m         MOVE.W  (A2), D3      ; INPUT VALUE
0000595E  123C 000F               9313m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005962                          9314m         
00005962                          9315m LOOP_759: 
00005962  0C11 0030               9316m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005966  6700 000E               9317m         BEQ     CHECKFOR0_759
0000596A  0C11 0031               9318m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000596E  6700 0010               9319m         BEQ     CHECKFOR1_759
00005972  6000 0012               9320m         BRA     NEXT_759      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005976                          9321m         
00005976                          9322m CHECKFOR0_759: 
00005976  0303                    9323m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005978  6600 125C               9324m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000597C  6000 0008               9325m         BRA     NEXT_759
00005980                          9326m 
00005980                          9327m CHECKFOR1_759:
00005980  0303                    9328m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005982  6700 1252               9329m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005986                          9330m 
00005986                          9331m NEXT_759: 
00005986  B23C 0000               9332m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000598A  6700 0008               9333m         BEQ     COMPLETE_759  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000598E  5301                    9334m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005990  1819                    9335m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005992  60CE                    9336m         BRA     LOOP_759      ; BEGIN LOOP AGAIN
00005994                          9337m 
00005994                          9338m COMPLETE_759:  ; OPCODE HAS BEEN VERIFIED
00005994                          9339m         ENDM
00005994  43F8 0089               9340          LEA     oNOT, A1     
00005998  103C 000E               9341          MOVE.B  #14,D0          
0000599C  4E4F                    9342          TRAP    #15
0000599E                          9343m         printSizeLow       (A2)
0000599E  3612                    9344m         MOVE.W  (A2), D3      ; INPUT VALUE      
000059A0                          9345m CHECKFORB_760: 
000059A0  0803 0006               9346m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000059A4  6600 0010               9347m         BNE     CHECKFORW_760  ; IF NOT GO TO WORD SIZE
000059A8  43F8 00B5               9348m         LEA     OBSIZE, A1     
000059AC  103C 000E               9349m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059B0  4E4F                    9350m         TRAP    #15
000059B2  6000 0022               9351m         BRA     COMPLETE_760      
000059B6                          9352m CHECKFORW_760: 
000059B6  0803 0007               9353m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000059BA  6600 0010               9354m         BNE     CHECKFORL_760 ; IF NOT GO TO LONGWORD SIZE
000059BE  43F8 00B9               9355m         LEA     OWSIZE, A1     
000059C2  103C 000E               9356m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000059C6  4E4F                    9357m         TRAP    #15
000059C8  6000 000C               9358m         BRA     COMPLETE_760  
000059CC                          9359m CHECKFORL_760:
000059CC  43F8 00BD               9360m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000059D0  103C 000E               9361m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059D4  4E4F                    9362m         TRAP    #15
000059D6                          9363m COMPLETE_760:  ; SIZE HAS BEEN PRINTED
000059D6                          9364m         ENDM
000059D6                          9365m         prepareAdrMode  #$1, (A2)
000059D6  3C3C 0001               9366m         MOVE.W  #$1, D6      ; INPUT VALUE
000059DA  3212                    9367m         MOVE.W  (A2), D1
000059DC  BC3C 0001               9368m         CMP.B   #$01, D6
000059E0  6700 000C               9369m         BEQ     ADRSOURCE_761    
000059E4                          9370m ADRDEST_761:
000059E4  EF49                    9371m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000059E6  E049                    9372m         LSR     #$08, D1
000059E8  EA49                    9373m         LSR     #$05, D1
000059EA  6000 000A               9374m         BRA     COMPLETE_761 
000059EE                          9375m ADRSOURCE_761:                
000059EE  E149                    9376m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000059F0  E549                    9377m         LSL     #$02, D1
000059F2  E049                    9378m         LSR     #$08, D1
000059F4  EA49                    9379m         LSR     #$05, D1
000059F6                          9380m COMPLETE_761:  ; OPCODE HAS BEEN VERIFIED
000059F6                          9381m         ENDM        
000059F6                          9382m         decodeAdrMode   (A2), D1
000059F6  3612                    9383m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000059F8  3201                    9384m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000059FA                          9385m 
000059FA  B23C 0001               9386m         CMP.B   #$01, D1
000059FE  6700 0066               9387m         BEQ     ADRREGDIRECT_762    
00005A02  B23C 0002               9388m         CMP.B   #$02, D1
00005A06  6700 00A0               9389m         BEQ     ADRREGINDIRECT_762  
00005A0A  B23C 0003               9390m         CMP.B   #$03, D1
00005A0E  6700 0102               9391m         BEQ     ADRREGPOSTINC_762  
00005A12  B23C 0004               9392m         CMP.B   #$04, D1
00005A16  6700 0178               9393m         BEQ     ADRREGPREDEC_762
00005A1A  B23C 0007               9394m         CMP.B   #$07, D1
00005A1E  6700 01EE               9395m         BEQ     ADRABSOLUTE_762    
00005A22                          9396m         
00005A22                          9397m DATAREGDIRECT_762: 
00005A22  BC3C 0001               9398m         CMP.B   #$01, D6
00005A26  6700 001E               9399m         BEQ     DATAREGDIRECTSRC_762   
00005A2A                          9400m DATAREGDIRECTDEST_762: 
00005A2A                          9401mm         PRINTDNDEST D3 
00005A2A  3203                    9402mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005A2C  E949                    9403mm         LSL     #$04, D1
00005A2E  E049                    9404mm         LSR     #$08, D1
00005A30  EA49                    9405mm         LSR     #$05, D1
00005A32  43F8 00C1               9406mm         LEA     ODN, A1     
00005A36  103C 000E               9407mm         MOVE.B  #14,D0          
00005A3A  4E4F                    9408mm         TRAP    #15
00005A3C  103C 0003               9409mm         MOVE.B  #3,D0          
00005A40  4E4F                    9410mm         TRAP    #15
00005A42                          9411mm         ENDM
00005A42  6000 0562               9412m         BRA     COMPLETE_762 
00005A46                          9413m DATAREGDIRECTSRC_762: 
00005A46                          9414mm         PRINTDNSRC D3 
00005A46  4281                    9415mm         CLR.L   D1
00005A48  3203                    9416mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A4A  E149                    9417mm         LSL     #$08, D1
00005A4C  EB49                    9418mm         LSL     #$05, D1
00005A4E  E049                    9419mm         LSR     #$08, D1
00005A50  EA49                    9420mm         LSR     #$05, D1
00005A52  43F8 00C1               9421mm         LEA     ODN, A1     
00005A56  103C 000E               9422mm         MOVE.B  #14,D0          
00005A5A  4E4F                    9423mm         TRAP    #15
00005A5C  103C 0003               9424mm         MOVE.B  #3,D0          
00005A60  4E4F                    9425mm         TRAP    #15
00005A62                          9426mm         ENDM
00005A62  6000 0542               9427m         BRA     COMPLETE_762   
00005A66                          9428m         
00005A66                          9429m ADRREGDIRECT_762: 
00005A66  BC3C 0001               9430m         CMP.B   #$01, D6
00005A6A  6700 001E               9431m         BEQ     ADRREGDIRECTSRC_762   
00005A6E                          9432m ADRREGDIRECTDEST_762:
00005A6E                          9433mm         PRINTANDEST D3
00005A6E  3203                    9434mm         MOVE.W  D3, D1
00005A70  E949                    9435mm         LSL     #$04, D1
00005A72  E049                    9436mm         LSR     #$08, D1
00005A74  EA49                    9437mm         LSR     #$05, D1
00005A76  43F8 00C3               9438mm         LEA     OAN, A1     
00005A7A  103C 000E               9439mm         MOVE.B  #14,D0          
00005A7E  4E4F                    9440mm         TRAP    #15
00005A80  103C 0003               9441mm         MOVE.B  #3,D0          
00005A84  4E4F                    9442mm         TRAP    #15
00005A86                          9443mm         ENDM
00005A86  6000 051E               9444m         BRA     COMPLETE_762   
00005A8A                          9445m ADRREGDIRECTSRC_762:
00005A8A                          9446mm         PRINTANSRC D3
00005A8A  3203                    9447mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A8C  E149                    9448mm         LSL     #$08, D1
00005A8E  EB49                    9449mm         LSL     #$05, D1
00005A90  E049                    9450mm         LSR     #$08, D1
00005A92  EA49                    9451mm         LSR     #$05, D1
00005A94  43F8 00C3               9452mm         LEA     OAN, A1     
00005A98  103C 000E               9453mm         MOVE.B  #14,D0          
00005A9C  4E4F                    9454mm         TRAP    #15
00005A9E  103C 0003               9455mm         MOVE.B  #3,D0          
00005AA2  4E4F                    9456mm         TRAP    #15
00005AA4                          9457mm         ENDM
00005AA4  6000 0500               9458m         BRA     COMPLETE_762   
00005AA8                          9459m        
00005AA8                          9460m ADRREGINDIRECT_762:   
00005AA8  BC3C 0001               9461m         CMP.B   #$01, D6
00005AAC  6700 0032               9462m         BEQ     ADRREGINDIRECTSRC_762   
00005AB0                          9463m ADRREGINDIRECTDEST_762:
00005AB0                          9464mm         PRINTLB
00005AB0  43F8 00C5               9465mm         LEA     OLB, A1     
00005AB4  103C 000E               9466mm         MOVE.B  #14,D0          
00005AB8  4E4F                    9467mm         TRAP    #15
00005ABA                          9468mm         ENDM
00005ABA                          9469mm         PRINTANDEST D3  
00005ABA  3203                    9470mm         MOVE.W  D3, D1
00005ABC  E949                    9471mm         LSL     #$04, D1
00005ABE  E049                    9472mm         LSR     #$08, D1
00005AC0  EA49                    9473mm         LSR     #$05, D1
00005AC2  43F8 00C3               9474mm         LEA     OAN, A1     
00005AC6  103C 000E               9475mm         MOVE.B  #14,D0          
00005ACA  4E4F                    9476mm         TRAP    #15
00005ACC  103C 0003               9477mm         MOVE.B  #3,D0          
00005AD0  4E4F                    9478mm         TRAP    #15
00005AD2                          9479mm         ENDM
00005AD2                          9480mm         PRINTRB
00005AD2  43F8 00C7               9481mm         LEA     ORB, A1     
00005AD6  103C 000E               9482mm         MOVE.B  #14,D0          
00005ADA  4E4F                    9483mm         TRAP    #15
00005ADC                          9484mm         ENDM
00005ADC  6000 04C8               9485m         BRA     COMPLETE_762     
00005AE0                          9486m ADRREGINDIRECTSRC_762:   
00005AE0                          9487mm         PRINTLB
00005AE0  43F8 00C5               9488mm         LEA     OLB, A1     
00005AE4  103C 000E               9489mm         MOVE.B  #14,D0          
00005AE8  4E4F                    9490mm         TRAP    #15
00005AEA                          9491mm         ENDM
00005AEA                          9492mm         PRINTANSRC D3  
00005AEA  3203                    9493mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005AEC  E149                    9494mm         LSL     #$08, D1
00005AEE  EB49                    9495mm         LSL     #$05, D1
00005AF0  E049                    9496mm         LSR     #$08, D1
00005AF2  EA49                    9497mm         LSR     #$05, D1
00005AF4  43F8 00C3               9498mm         LEA     OAN, A1     
00005AF8  103C 000E               9499mm         MOVE.B  #14,D0          
00005AFC  4E4F                    9500mm         TRAP    #15
00005AFE  103C 0003               9501mm         MOVE.B  #3,D0          
00005B02  4E4F                    9502mm         TRAP    #15
00005B04                          9503mm         ENDM
00005B04                          9504mm         PRINTRB
00005B04  43F8 00C7               9505mm         LEA     ORB, A1     
00005B08  103C 000E               9506mm         MOVE.B  #14,D0          
00005B0C  4E4F                    9507mm         TRAP    #15
00005B0E                          9508mm         ENDM
00005B0E  6000 0496               9509m         BRA     COMPLETE_762   
00005B12                          9510m         
00005B12                          9511m ADRREGPOSTINC_762:   
00005B12  BC3C 0001               9512m         CMP.B   #$01, D6
00005B16  6700 003C               9513m         BEQ     ADRREGPOSTINCSRC_762   
00005B1A                          9514m ADRREGPOSTINCDEST_762: 
00005B1A                          9515mm         PRINTLB
00005B1A  43F8 00C5               9516mm         LEA     OLB, A1     
00005B1E  103C 000E               9517mm         MOVE.B  #14,D0          
00005B22  4E4F                    9518mm         TRAP    #15
00005B24                          9519mm         ENDM
00005B24                          9520mm         PRINTANDEST D3  
00005B24  3203                    9521mm         MOVE.W  D3, D1
00005B26  E949                    9522mm         LSL     #$04, D1
00005B28  E049                    9523mm         LSR     #$08, D1
00005B2A  EA49                    9524mm         LSR     #$05, D1
00005B2C  43F8 00C3               9525mm         LEA     OAN, A1     
00005B30  103C 000E               9526mm         MOVE.B  #14,D0          
00005B34  4E4F                    9527mm         TRAP    #15
00005B36  103C 0003               9528mm         MOVE.B  #3,D0          
00005B3A  4E4F                    9529mm         TRAP    #15
00005B3C                          9530mm         ENDM
00005B3C                          9531mm         PRINTRB
00005B3C  43F8 00C7               9532mm         LEA     ORB, A1     
00005B40  103C 000E               9533mm         MOVE.B  #14,D0          
00005B44  4E4F                    9534mm         TRAP    #15
00005B46                          9535mm         ENDM
00005B46                          9536mm         PRINTPI
00005B46  43F8 00CE               9537mm         LEA     OPSTINC, A1     
00005B4A  103C 000E               9538mm         MOVE.B  #14,D0          
00005B4E  4E4F                    9539mm         TRAP    #15
00005B50                          9540mm         ENDM
00005B50  6000 0454               9541m         BRA     COMPLETE_762  
00005B54                          9542m ADRREGPOSTINCSRC_762:           
00005B54                          9543mm         PRINTLB
00005B54  43F8 00C5               9544mm         LEA     OLB, A1     
00005B58  103C 000E               9545mm         MOVE.B  #14,D0          
00005B5C  4E4F                    9546mm         TRAP    #15
00005B5E                          9547mm         ENDM
00005B5E                          9548mm         PRINTANSRC D3  
00005B5E  3203                    9549mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005B60  E149                    9550mm         LSL     #$08, D1
00005B62  EB49                    9551mm         LSL     #$05, D1
00005B64  E049                    9552mm         LSR     #$08, D1
00005B66  EA49                    9553mm         LSR     #$05, D1
00005B68  43F8 00C3               9554mm         LEA     OAN, A1     
00005B6C  103C 000E               9555mm         MOVE.B  #14,D0          
00005B70  4E4F                    9556mm         TRAP    #15
00005B72  103C 0003               9557mm         MOVE.B  #3,D0          
00005B76  4E4F                    9558mm         TRAP    #15
00005B78                          9559mm         ENDM
00005B78                          9560mm         PRINTRB
00005B78  43F8 00C7               9561mm         LEA     ORB, A1     
00005B7C  103C 000E               9562mm         MOVE.B  #14,D0          
00005B80  4E4F                    9563mm         TRAP    #15
00005B82                          9564mm         ENDM
00005B82                          9565mm         PRINTPI
00005B82  43F8 00CE               9566mm         LEA     OPSTINC, A1     
00005B86  103C 000E               9567mm         MOVE.B  #14,D0          
00005B8A  4E4F                    9568mm         TRAP    #15
00005B8C                          9569mm         ENDM
00005B8C  6000 0418               9570m         BRA     COMPLETE_762  
00005B90                          9571m ADRREGPREDEC_762: 
00005B90  BC3C 0001               9572m         CMP.B   #$01, D6
00005B94  6700 003C               9573m         BEQ     ADRREGPREDECSRC_762   
00005B98                          9574m ADRREGPREDECDEST_762:
00005B98                          9575mm         PRINTPD  
00005B98  43F8 00CC               9576mm         LEA     OPREDEC, A1     
00005B9C  103C 000E               9577mm         MOVE.B  #14,D0          
00005BA0  4E4F                    9578mm         TRAP    #15
00005BA2                          9579mm         ENDM
00005BA2                          9580mm         PRINTLB
00005BA2  43F8 00C5               9581mm         LEA     OLB, A1     
00005BA6  103C 000E               9582mm         MOVE.B  #14,D0          
00005BAA  4E4F                    9583mm         TRAP    #15
00005BAC                          9584mm         ENDM
00005BAC                          9585mm         PRINTANDEST D3  
00005BAC  3203                    9586mm         MOVE.W  D3, D1
00005BAE  E949                    9587mm         LSL     #$04, D1
00005BB0  E049                    9588mm         LSR     #$08, D1
00005BB2  EA49                    9589mm         LSR     #$05, D1
00005BB4  43F8 00C3               9590mm         LEA     OAN, A1     
00005BB8  103C 000E               9591mm         MOVE.B  #14,D0          
00005BBC  4E4F                    9592mm         TRAP    #15
00005BBE  103C 0003               9593mm         MOVE.B  #3,D0          
00005BC2  4E4F                    9594mm         TRAP    #15
00005BC4                          9595mm         ENDM
00005BC4                          9596mm         PRINTRB
00005BC4  43F8 00C7               9597mm         LEA     ORB, A1     
00005BC8  103C 000E               9598mm         MOVE.B  #14,D0          
00005BCC  4E4F                    9599mm         TRAP    #15
00005BCE                          9600mm         ENDM
00005BCE  6000 03D6               9601m         BRA     COMPLETE_762   
00005BD2                          9602m ADRREGPREDECSRC_762: 
00005BD2                          9603mm         PRINTPD  
00005BD2  43F8 00CC               9604mm         LEA     OPREDEC, A1     
00005BD6  103C 000E               9605mm         MOVE.B  #14,D0          
00005BDA  4E4F                    9606mm         TRAP    #15
00005BDC                          9607mm         ENDM
00005BDC                          9608mm         PRINTLB
00005BDC  43F8 00C5               9609mm         LEA     OLB, A1     
00005BE0  103C 000E               9610mm         MOVE.B  #14,D0          
00005BE4  4E4F                    9611mm         TRAP    #15
00005BE6                          9612mm         ENDM
00005BE6                          9613mm         PRINTANSRC D3  
00005BE6  3203                    9614mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BE8  E149                    9615mm         LSL     #$08, D1
00005BEA  EB49                    9616mm         LSL     #$05, D1
00005BEC  E049                    9617mm         LSR     #$08, D1
00005BEE  EA49                    9618mm         LSR     #$05, D1
00005BF0  43F8 00C3               9619mm         LEA     OAN, A1     
00005BF4  103C 000E               9620mm         MOVE.B  #14,D0          
00005BF8  4E4F                    9621mm         TRAP    #15
00005BFA  103C 0003               9622mm         MOVE.B  #3,D0          
00005BFE  4E4F                    9623mm         TRAP    #15
00005C00                          9624mm         ENDM
00005C00                          9625mm         PRINTRB
00005C00  43F8 00C7               9626mm         LEA     ORB, A1     
00005C04  103C 000E               9627mm         MOVE.B  #14,D0          
00005C08  4E4F                    9628mm         TRAP    #15
00005C0A                          9629mm         ENDM
00005C0A  6000 039A               9630m         BRA     COMPLETE_762
00005C0E                          9631m        
00005C0E                          9632m ADRABSOLUTE_762:
00005C0E  BC3C 0001               9633m         CMP.B   #$01, D6
00005C12  6600 0018               9634m         BNE     ADRABSOLUTEDST_762 
00005C16                          9635m         
00005C16  3A03                    9636m         MOVE.W  D3, D5
00005C18  0803 0002               9637m         BTST    #2, D3
00005C1C  6600 0024               9638m         BNE     ADRIMMEDIATE_762
00005C20  0803 0000               9639m         BTST    #0, D3
00005C24  6600 0270               9640m         BNE     ADRABSOLUTEL_762
00005C28  6000 01DA               9641m         BRA     ADRABSOLUTEW_762
00005C2C                          9642m ADRABSOLUTEDST_762:
00005C2C  3A03                    9643m         MOVE.W  D3, D5
00005C2E  0803 000B               9644m         BTST    #$B, D3
00005C32  6600 000E               9645m         BNE     ADRIMMEDIATE_762
00005C36  0803 0009               9646m         BTST    #$09, D3
00005C3A  6600 025A               9647m         BNE     ADRABSOLUTEL_762
00005C3E  6000 01C4               9648m         BRA     ADRABSOLUTEW_762
00005C42                          9649m ADRIMMEDIATE_762:
00005C42  BE3C 0001               9650m         CMP.B   #1, D7
00005C46  6700 009E               9651m         BEQ     ADRIMMEDIATEL_762
00005C4A                          9652m ADRIMMEDIATEW_762:
00005C4A  361A                    9653m         MOVE.W  (A2)+, D3
00005C4C                          9654mm         PRINTHASH
00005C4C  103C 0006               9655mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C50  323C 0023               9656mm         MOVE.W  #35, D1     ; AN = SIGN
00005C54  4E4F                    9657mm         TRAP    #15         ; OUTPUT = SIGN
00005C56                          9658mm         ENDM
00005C56                          9659mm         PRINTSIGN
00005C56  103C 0006               9660mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C5A  323C 0024               9661mm         MOVE.W  #36, D1     ; AN = SIGN
00005C5E  4E4F                    9662mm         TRAP    #15         ; OUTPUT = SIGN
00005C60                          9663mm         ENDM
00005C60                          9664mm         ADROUT
00005C60  3212                    9665mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C62  E049                    9666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C64  E849                    9667mm         LSR.W   #4, D1      
00005C66                          9668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C66  0C01 0009               9669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C6A  6E00 000A               9670mmm         BGT     ALPHA_792
00005C6E  0601 0030               9671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C72  6000 0006               9672mmm         BRA     DONE_792
00005C76  0601 0037               9673mmm ALPHA_792: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C7A  4E71                    9674mmm DONE_792: NOP
00005C7C                          9675mmm         ENDM
00005C7C  4E4F                    9676mm         TRAP    #15         ; EXECUTE OUTPUT
00005C7E                          9677mm         
00005C7E  3212                    9678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C80  E949                    9679mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005C82  E049                    9680mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C84  E849                    9681mm         LSR.W   #4, D1      
00005C86                          9682mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C86  0C01 0009               9683mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C8A  6E00 000A               9684mmm         BGT     ALPHA_793
00005C8E  0601 0030               9685mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C92  6000 0006               9686mmm         BRA     DONE_793
00005C96  0601 0037               9687mmm ALPHA_793: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C9A  4E71                    9688mmm DONE_793: NOP
00005C9C                          9689mmm         ENDM
00005C9C  4E4F                    9690mm         TRAP    #15         ; EXECUTE OUTPUT
00005C9E                          9691mm         
00005C9E  3212                    9692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CA0  E149                    9693mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CA2  E049                    9694mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CA4  E849                    9695mm         LSR.W   #4, D1      
00005CA6                          9696mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CA6  0C01 0009               9697mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CAA  6E00 000A               9698mmm         BGT     ALPHA_794
00005CAE  0601 0030               9699mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CB2  6000 0006               9700mmm         BRA     DONE_794
00005CB6  0601 0037               9701mmm ALPHA_794: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CBA  4E71                    9702mmm DONE_794: NOP
00005CBC                          9703mmm         ENDM
00005CBC  4E4F                    9704mm         TRAP    #15         ; EXECUTE OUTPUT
00005CBE                          9705mm         
00005CBE  3212                    9706mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CC0  E149                    9707mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CC2  E949                    9708mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005CC4  E049                    9709mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CC6  E849                    9710mm         LSR.W   #4, D1      
00005CC8                          9711mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CC8  0C01 0009               9712mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CCC  6E00 000A               9713mmm         BGT     ALPHA_795
00005CD0  0601 0030               9714mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CD4  6000 0006               9715mmm         BRA     DONE_795
00005CD8  0601 0037               9716mmm ALPHA_795: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CDC  4E71                    9717mmm DONE_795: NOP
00005CDE                          9718mmm         ENDM
00005CDE  4E4F                    9719mm         TRAP    #15         ; EXECUTE OUTPUT       
00005CE0                          9720mm         ENDM 
00005CE0  3605                    9721m         MOVE.W  D5, D3
00005CE2  6000 02C2               9722m         BRA     COMPLETE_762
00005CE6                          9723m ADRIMMEDIATEL_762:
00005CE6  361A                    9724m         MOVE.W  (A2)+, D3
00005CE8                          9725mm         PRINTHASH
00005CE8  103C 0006               9726mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CEC  323C 0023               9727mm         MOVE.W  #35, D1     ; AN = SIGN
00005CF0  4E4F                    9728mm         TRAP    #15         ; OUTPUT = SIGN
00005CF2                          9729mm         ENDM
00005CF2                          9730mm         PRINTSIGN
00005CF2  103C 0006               9731mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CF6  323C 0024               9732mm         MOVE.W  #36, D1     ; AN = SIGN
00005CFA  4E4F                    9733mm         TRAP    #15         ; OUTPUT = SIGN
00005CFC                          9734mm         ENDM
00005CFC                          9735mm         ADROUT 
00005CFC  3212                    9736mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CFE  E049                    9737mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D00  E849                    9738mm         LSR.W   #4, D1      
00005D02                          9739mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D02  0C01 0009               9740mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D06  6E00 000A               9741mmm         BGT     ALPHA_799
00005D0A  0601 0030               9742mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D0E  6000 0006               9743mmm         BRA     DONE_799
00005D12  0601 0037               9744mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D16  4E71                    9745mmm DONE_799: NOP
00005D18                          9746mmm         ENDM
00005D18  4E4F                    9747mm         TRAP    #15         ; EXECUTE OUTPUT
00005D1A                          9748mm         
00005D1A  3212                    9749mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D1C  E949                    9750mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005D1E  E049                    9751mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D20  E849                    9752mm         LSR.W   #4, D1      
00005D22                          9753mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D22  0C01 0009               9754mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D26  6E00 000A               9755mmm         BGT     ALPHA_800
00005D2A  0601 0030               9756mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D2E  6000 0006               9757mmm         BRA     DONE_800
00005D32  0601 0037               9758mmm ALPHA_800: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D36  4E71                    9759mmm DONE_800: NOP
00005D38                          9760mmm         ENDM
00005D38  4E4F                    9761mm         TRAP    #15         ; EXECUTE OUTPUT
00005D3A                          9762mm         
00005D3A  3212                    9763mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D3C  E149                    9764mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D3E  E049                    9765mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D40  E849                    9766mm         LSR.W   #4, D1      
00005D42                          9767mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D42  0C01 0009               9768mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D46  6E00 000A               9769mmm         BGT     ALPHA_801
00005D4A  0601 0030               9770mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D4E  6000 0006               9771mmm         BRA     DONE_801
00005D52  0601 0037               9772mmm ALPHA_801: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D56  4E71                    9773mmm DONE_801: NOP
00005D58                          9774mmm         ENDM
00005D58  4E4F                    9775mm         TRAP    #15         ; EXECUTE OUTPUT
00005D5A                          9776mm         
00005D5A  3212                    9777mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D5C  E149                    9778mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D5E  E949                    9779mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005D60  E049                    9780mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D62  E849                    9781mm         LSR.W   #4, D1      
00005D64                          9782mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D64  0C01 0009               9783mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D68  6E00 000A               9784mmm         BGT     ALPHA_802
00005D6C  0601 0030               9785mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D70  6000 0006               9786mmm         BRA     DONE_802
00005D74  0601 0037               9787mmm ALPHA_802: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D78  4E71                    9788mmm DONE_802: NOP
00005D7A                          9789mmm         ENDM
00005D7A  4E4F                    9790mm         TRAP    #15         ; EXECUTE OUTPUT       
00005D7C                          9791mm         ENDM 
00005D7C  361A                    9792m         MOVE.W  (A2)+, D3
00005D7E                          9793mm         ADROUT
00005D7E  3212                    9794mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D80  E049                    9795mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D82  E849                    9796mm         LSR.W   #4, D1      
00005D84                          9797mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D84  0C01 0009               9798mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D88  6E00 000A               9799mmm         BGT     ALPHA_804
00005D8C  0601 0030               9800mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D90  6000 0006               9801mmm         BRA     DONE_804
00005D94  0601 0037               9802mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D98  4E71                    9803mmm DONE_804: NOP
00005D9A                          9804mmm         ENDM
00005D9A  4E4F                    9805mm         TRAP    #15         ; EXECUTE OUTPUT
00005D9C                          9806mm         
00005D9C  3212                    9807mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D9E  E949                    9808mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DA0  E049                    9809mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DA2  E849                    9810mm         LSR.W   #4, D1      
00005DA4                          9811mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DA4  0C01 0009               9812mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DA8  6E00 000A               9813mmm         BGT     ALPHA_805
00005DAC  0601 0030               9814mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DB0  6000 0006               9815mmm         BRA     DONE_805
00005DB4  0601 0037               9816mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DB8  4E71                    9817mmm DONE_805: NOP
00005DBA                          9818mmm         ENDM
00005DBA  4E4F                    9819mm         TRAP    #15         ; EXECUTE OUTPUT
00005DBC                          9820mm         
00005DBC  3212                    9821mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DBE  E149                    9822mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DC0  E049                    9823mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DC2  E849                    9824mm         LSR.W   #4, D1      
00005DC4                          9825mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DC4  0C01 0009               9826mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DC8  6E00 000A               9827mmm         BGT     ALPHA_806
00005DCC  0601 0030               9828mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DD0  6000 0006               9829mmm         BRA     DONE_806
00005DD4  0601 0037               9830mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DD8  4E71                    9831mmm DONE_806: NOP
00005DDA                          9832mmm         ENDM
00005DDA  4E4F                    9833mm         TRAP    #15         ; EXECUTE OUTPUT
00005DDC                          9834mm         
00005DDC  3212                    9835mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DDE  E149                    9836mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DE0  E949                    9837mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005DE2  E049                    9838mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DE4  E849                    9839mm         LSR.W   #4, D1      
00005DE6                          9840mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DE6  0C01 0009               9841mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DEA  6E00 000A               9842mmm         BGT     ALPHA_807
00005DEE  0601 0030               9843mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DF2  6000 0006               9844mmm         BRA     DONE_807
00005DF6  0601 0037               9845mmm ALPHA_807: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DFA  4E71                    9846mmm DONE_807: NOP
00005DFC                          9847mmm         ENDM
00005DFC  4E4F                    9848mm         TRAP    #15         ; EXECUTE OUTPUT       
00005DFE                          9849mm         ENDM 
00005DFE  3605                    9850m         MOVE.W  D5, D3
00005E00  6000 01A4               9851m         BRA     COMPLETE_762 
00005E04                          9852m ADRABSOLUTEW_762:     
00005E04  361A                    9853m         MOVE.W  (A2)+, D3
00005E06                          9854mm         PRINTSIGN
00005E06  103C 0006               9855mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E0A  323C 0024               9856mm         MOVE.W  #36, D1     ; AN = SIGN
00005E0E  4E4F                    9857mm         TRAP    #15         ; OUTPUT = SIGN
00005E10                          9858mm         ENDM
00005E10                          9859mm         ADROUT
00005E10  3212                    9860mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E12  E049                    9861mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E14  E849                    9862mm         LSR.W   #4, D1      
00005E16                          9863mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E16  0C01 0009               9864mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E1A  6E00 000A               9865mmm         BGT     ALPHA_810
00005E1E  0601 0030               9866mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E22  6000 0006               9867mmm         BRA     DONE_810
00005E26  0601 0037               9868mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E2A  4E71                    9869mmm DONE_810: NOP
00005E2C                          9870mmm         ENDM
00005E2C  4E4F                    9871mm         TRAP    #15         ; EXECUTE OUTPUT
00005E2E                          9872mm         
00005E2E  3212                    9873mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E30  E949                    9874mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E32  E049                    9875mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E34  E849                    9876mm         LSR.W   #4, D1      
00005E36                          9877mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E36  0C01 0009               9878mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E3A  6E00 000A               9879mmm         BGT     ALPHA_811
00005E3E  0601 0030               9880mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E42  6000 0006               9881mmm         BRA     DONE_811
00005E46  0601 0037               9882mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E4A  4E71                    9883mmm DONE_811: NOP
00005E4C                          9884mmm         ENDM
00005E4C  4E4F                    9885mm         TRAP    #15         ; EXECUTE OUTPUT
00005E4E                          9886mm         
00005E4E  3212                    9887mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E50  E149                    9888mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E52  E049                    9889mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E54  E849                    9890mm         LSR.W   #4, D1      
00005E56                          9891mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E56  0C01 0009               9892mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E5A  6E00 000A               9893mmm         BGT     ALPHA_812
00005E5E  0601 0030               9894mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E62  6000 0006               9895mmm         BRA     DONE_812
00005E66  0601 0037               9896mmm ALPHA_812: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E6A  4E71                    9897mmm DONE_812: NOP
00005E6C                          9898mmm         ENDM
00005E6C  4E4F                    9899mm         TRAP    #15         ; EXECUTE OUTPUT
00005E6E                          9900mm         
00005E6E  3212                    9901mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E70  E149                    9902mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E72  E949                    9903mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E74  E049                    9904mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E76  E849                    9905mm         LSR.W   #4, D1      
00005E78                          9906mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E78  0C01 0009               9907mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E7C  6E00 000A               9908mmm         BGT     ALPHA_813
00005E80  0601 0030               9909mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E84  6000 0006               9910mmm         BRA     DONE_813
00005E88  0601 0037               9911mmm ALPHA_813: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E8C  4E71                    9912mmm DONE_813: NOP
00005E8E                          9913mmm         ENDM
00005E8E  4E4F                    9914mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E90                          9915mm         ENDM 
00005E90  3605                    9916m         MOVE.W  D5, D3
00005E92  6000 0112               9917m         BRA     COMPLETE_762  
00005E96                          9918m ADRABSOLUTEL_762:  
00005E96  361A                    9919m         MOVE.W  (A2)+, D3
00005E98                          9920mm         PRINTSIGN
00005E98  103C 0006               9921mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E9C  323C 0024               9922mm         MOVE.W  #36, D1     ; AN = SIGN
00005EA0  4E4F                    9923mm         TRAP    #15         ; OUTPUT = SIGN
00005EA2                          9924mm         ENDM
00005EA2                          9925mm         ADROUT 
00005EA2  3212                    9926mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA4  E049                    9927mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA6  E849                    9928mm         LSR.W   #4, D1      
00005EA8                          9929mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA8  0C01 0009               9930mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EAC  6E00 000A               9931mmm         BGT     ALPHA_816
00005EB0  0601 0030               9932mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB4  6000 0006               9933mmm         BRA     DONE_816
00005EB8  0601 0037               9934mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EBC  4E71                    9935mmm DONE_816: NOP
00005EBE                          9936mmm         ENDM
00005EBE  4E4F                    9937mm         TRAP    #15         ; EXECUTE OUTPUT
00005EC0                          9938mm         
00005EC0  3212                    9939mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC2  E949                    9940mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005EC4  E049                    9941mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC6  E849                    9942mm         LSR.W   #4, D1      
00005EC8                          9943mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EC8  0C01 0009               9944mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECC  6E00 000A               9945mmm         BGT     ALPHA_817
00005ED0  0601 0030               9946mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED4  6000 0006               9947mmm         BRA     DONE_817
00005ED8  0601 0037               9948mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDC  4E71                    9949mmm DONE_817: NOP
00005EDE                          9950mmm         ENDM
00005EDE  4E4F                    9951mm         TRAP    #15         ; EXECUTE OUTPUT
00005EE0                          9952mm         
00005EE0  3212                    9953mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EE2  E149                    9954mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EE4  E049                    9955mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EE6  E849                    9956mm         LSR.W   #4, D1      
00005EE8                          9957mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EE8  0C01 0009               9958mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EEC  6E00 000A               9959mmm         BGT     ALPHA_818
00005EF0  0601 0030               9960mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EF4  6000 0006               9961mmm         BRA     DONE_818
00005EF8  0601 0037               9962mmm ALPHA_818: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EFC  4E71                    9963mmm DONE_818: NOP
00005EFE                          9964mmm         ENDM
00005EFE  4E4F                    9965mm         TRAP    #15         ; EXECUTE OUTPUT
00005F00                          9966mm         
00005F00  3212                    9967mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F02  E149                    9968mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F04  E949                    9969mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F06  E049                    9970mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F08  E849                    9971mm         LSR.W   #4, D1      
00005F0A                          9972mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F0A  0C01 0009               9973mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F0E  6E00 000A               9974mmm         BGT     ALPHA_819
00005F12  0601 0030               9975mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F16  6000 0006               9976mmm         BRA     DONE_819
00005F1A  0601 0037               9977mmm ALPHA_819: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F1E  4E71                    9978mmm DONE_819: NOP
00005F20                          9979mmm         ENDM
00005F20  4E4F                    9980mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F22                          9981mm         ENDM 
00005F22  361A                    9982m         MOVE.W  (A2)+, D3
00005F24                          9983mm         ADROUT
00005F24  3212                    9984mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F26  E049                    9985mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F28  E849                    9986mm         LSR.W   #4, D1      
00005F2A                          9987mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F2A  0C01 0009               9988mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F2E  6E00 000A               9989mmm         BGT     ALPHA_821
00005F32  0601 0030               9990mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F36  6000 0006               9991mmm         BRA     DONE_821
00005F3A  0601 0037               9992mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F3E  4E71                    9993mmm DONE_821: NOP
00005F40                          9994mmm         ENDM
00005F40  4E4F                    9995mm         TRAP    #15         ; EXECUTE OUTPUT
00005F42                          9996mm         
00005F42  3212                    9997mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F44  E949                    9998mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F46  E049                    9999mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F48  E849                   10000mm         LSR.W   #4, D1      
00005F4A                         10001mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F4A  0C01 0009              10002mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F4E  6E00 000A              10003mmm         BGT     ALPHA_822
00005F52  0601 0030              10004mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F56  6000 0006              10005mmm         BRA     DONE_822
00005F5A  0601 0037              10006mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F5E  4E71                   10007mmm DONE_822: NOP
00005F60                         10008mmm         ENDM
00005F60  4E4F                   10009mm         TRAP    #15         ; EXECUTE OUTPUT
00005F62                         10010mm         
00005F62  3212                   10011mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F64  E149                   10012mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F66  E049                   10013mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F68  E849                   10014mm         LSR.W   #4, D1      
00005F6A                         10015mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F6A  0C01 0009              10016mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F6E  6E00 000A              10017mmm         BGT     ALPHA_823
00005F72  0601 0030              10018mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F76  6000 0006              10019mmm         BRA     DONE_823
00005F7A  0601 0037              10020mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F7E  4E71                   10021mmm DONE_823: NOP
00005F80                         10022mmm         ENDM
00005F80  4E4F                   10023mm         TRAP    #15         ; EXECUTE OUTPUT
00005F82                         10024mm         
00005F82  3212                   10025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F84  E149                   10026mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F86  E949                   10027mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F88  E049                   10028mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F8A  E849                   10029mm         LSR.W   #4, D1      
00005F8C                         10030mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F8C  0C01 0009              10031mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F90  6E00 000A              10032mmm         BGT     ALPHA_824
00005F94  0601 0030              10033mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F98  6000 0006              10034mmm         BRA     DONE_824
00005F9C  0601 0037              10035mmm ALPHA_824: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FA0  4E71                   10036mmm DONE_824: NOP
00005FA2                         10037mmm         ENDM
00005FA2  4E4F                   10038mm         TRAP    #15         ; EXECUTE OUTPUT       
00005FA4                         10039mm         ENDM 
00005FA4  3605                   10040m         MOVE.W  D5, D3
00005FA6                         10041m 
00005FA6                         10042m COMPLETE_762:  ; OPCODE HAS BEEN VERIFIED
00005FA6                         10043m         ENDM
00005FA6  4E75                   10044          RTS                 ; Return from decodeNOT subroutine
00005FA8                         10045  
00005FA8                         10046  ; ------------------------------------------------------------
00005FA8                         10047  ; 11a. "decodeLSx_M" subroutine
00005FA8                         10048  ; AUTHOR
00005FA8                         10049  ;
00005FA8                         10050  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
00005FA8                         10051  ; ------------------------------------------------------------
00005FA8                         10052  decodeLSx_M:
00005FA8                         10053m         verifyOpcode    pLSx_M, (A2)
00005FA8  43F8 017E              10054m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00005FAC  3612                   10055m         MOVE.W  (A2), D3      ; INPUT VALUE
00005FAE  123C 000F              10056m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005FB2                         10057m         
00005FB2                         10058m LOOP_825: 
00005FB2  0C11 0030              10059m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005FB6  6700 000E              10060m         BEQ     CHECKFOR0_825
00005FBA  0C11 0031              10061m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005FBE  6700 0010              10062m         BEQ     CHECKFOR1_825
00005FC2  6000 0012              10063m         BRA     NEXT_825      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005FC6                         10064m         
00005FC6                         10065m CHECKFOR0_825: 
00005FC6  0303                   10066m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005FC8  6600 0C0C              10067m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005FCC  6000 0008              10068m         BRA     NEXT_825
00005FD0                         10069m 
00005FD0                         10070m CHECKFOR1_825:
00005FD0  0303                   10071m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005FD2  6700 0C02              10072m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005FD6                         10073m 
00005FD6                         10074m NEXT_825: 
00005FD6  B23C 0000              10075m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005FDA  6700 0008              10076m         BEQ     COMPLETE_825  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005FDE  5301                   10077m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005FE0  1819                   10078m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005FE2  60CE                   10079m         BRA     LOOP_825      ; BEGIN LOOP AGAIN
00005FE4                         10080m 
00005FE4                         10081m COMPLETE_825:  ; OPCODE HAS BEEN VERIFIED
00005FE4                         10082m         ENDM
00005FE4  0803 0008              10083          BTST    #$08, D3     ; Check the 8th bit
00005FE8  6700 0010              10084          BEQ     LSR_M
00005FEC  43F8 008D              10085  LSL_M:  LEA     oLSL, A1
00005FF0  103C 000E              10086          MOVE.B  #14,D0          
00005FF4  4E4F                   10087          TRAP    #15 
00005FF6  6000 000C              10088          BRA     reg_M        
00005FFA                         10089    
00005FFA  43F8 0091              10090  LSR_M:  LEA     oLSR, A1
00005FFE  103C 000E              10091          MOVE.B  #14,D0          
00006002  4E4F                   10092          TRAP    #15      
00006004                         10093m reg_M:  printSizeLow       (A2) 
00006004  3612                   10094m         MOVE.W  (A2), D3      ; INPUT VALUE      
00006006                         10095m CHECKFORB_826: 
00006006  0803 0006              10096m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000600A  6600 0010              10097m         BNE     CHECKFORW_826  ; IF NOT GO TO WORD SIZE
0000600E  43F8 00B5              10098m         LEA     OBSIZE, A1     
00006012  103C 000E              10099m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006016  4E4F                   10100m         TRAP    #15
00006018  6000 0022              10101m         BRA     COMPLETE_826      
0000601C                         10102m CHECKFORW_826: 
0000601C  0803 0007              10103m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006020  6600 0010              10104m         BNE     CHECKFORL_826 ; IF NOT GO TO LONGWORD SIZE
00006024  43F8 00B9              10105m         LEA     OWSIZE, A1     
00006028  103C 000E              10106m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000602C  4E4F                   10107m         TRAP    #15
0000602E  6000 000C              10108m         BRA     COMPLETE_826  
00006032                         10109m CHECKFORL_826:
00006032  43F8 00BD              10110m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006036  103C 000E              10111m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000603A  4E4F                   10112m         TRAP    #15
0000603C                         10113m COMPLETE_826:  ; SIZE HAS BEEN PRINTED
0000603C                         10114m         ENDM
0000603C                         10115m         printCount       (A2)
0000603C  3212                   10116m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000603E  E949                   10117m         LSL     #$04, D1
00006040  E049                   10118m         LSR     #$08, D1
00006042  EA49                   10119m         LSR     #$05, D1
00006044  43F8 00D0              10120m         LEA     OHASH, A1     
00006048  103C 000E              10121m         MOVE.B  #14,D0          
0000604C  4E4F                   10122m         TRAP    #15
0000604E  103C 0003              10123m         MOVE.B  #3,D0          
00006052  4E4F                   10124m         TRAP    #15
00006054                         10125m         ENDM
00006054                         10126m         printComma
00006054  43F8 00C9              10127m         LEA     OCOMMA, A1     
00006058  103C 000E              10128m         MOVE.B  #14,D0          
0000605C  4E4F                   10129m         TRAP    #15
0000605E                         10130m         ENDM
0000605E                         10131m         printDnSrc     (A2)        
0000605E  4281                   10132m         CLR.L   D1
00006060  3212                   10133m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006062  E149                   10134m         LSL     #$08, D1
00006064  EB49                   10135m         LSL     #$05, D1
00006066  E049                   10136m         LSR     #$08, D1
00006068  EA49                   10137m         LSR     #$05, D1
0000606A  43F8 00C1              10138m         LEA     ODN, A1     
0000606E  103C 000E              10139m         MOVE.B  #14,D0          
00006072  4E4F                   10140m         TRAP    #15
00006074  103C 0003              10141m         MOVE.B  #3,D0          
00006078  4E4F                   10142m         TRAP    #15
0000607A                         10143m         ENDM
0000607A  4E75                   10144          RTS                 ; Return from decodeLSx_M subroutine
0000607C                         10145  
0000607C                         10146  
0000607C                         10147  ; ------------------------------------------------------------
0000607C                         10148  ; 11b. "decodeLSx_R" subroutine
0000607C                         10149  ; AUTHOR
0000607C                         10150  ;
0000607C                         10151  ; TODO: DESCRIPTION - LSL or LSR Register Shift
0000607C                         10152  ; ------------------------------------------------------------
0000607C                         10153  decodeLSx_R:
0000607C                         10154m         verifyOpcode    pLSx_R, (A2)
0000607C  43F8 018F              10155m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
00006080  3612                   10156m         MOVE.W  (A2), D3      ; INPUT VALUE
00006082  123C 000F              10157m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006086                         10158m         
00006086                         10159m LOOP_830: 
00006086  0C11 0030              10160m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000608A  6700 000E              10161m         BEQ     CHECKFOR0_830
0000608E  0C11 0031              10162m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006092  6700 0010              10163m         BEQ     CHECKFOR1_830
00006096  6000 0012              10164m         BRA     NEXT_830      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000609A                         10165m         
0000609A                         10166m CHECKFOR0_830: 
0000609A  0303                   10167m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000609C  6600 0B38              10168m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000060A0  6000 0008              10169m         BRA     NEXT_830
000060A4                         10170m 
000060A4                         10171m CHECKFOR1_830:
000060A4  0303                   10172m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000060A6  6700 0B2E              10173m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000060AA                         10174m 
000060AA                         10175m NEXT_830: 
000060AA  B23C 0000              10176m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000060AE  6700 0008              10177m         BEQ     COMPLETE_830  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000060B2  5301                   10178m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000060B4  1819                   10179m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000060B6  60CE                   10180m         BRA     LOOP_830      ; BEGIN LOOP AGAIN
000060B8                         10181m 
000060B8                         10182m COMPLETE_830:  ; OPCODE HAS BEEN VERIFIED
000060B8                         10183m         ENDM
000060B8  0803 0008              10184          BTST    #$08, D3     ; Check the 8th bit
000060BC  6700 0010              10185          BEQ     LSR_R
000060C0  43F8 008D              10186  LSL_R:  LEA     oLSL, A1
000060C4  103C 000E              10187          MOVE.B  #14,D0          
000060C8  4E4F                   10188          TRAP    #15 
000060CA  6000 000C              10189          BRA     reg_R       
000060CE                         10190    
000060CE  43F8 0091              10191  LSR_R:  LEA     oLSR, A1
000060D2  103C 000E              10192          MOVE.B  #14,D0          
000060D6  4E4F                   10193          TRAP    #15      
000060D8                         10194m reg_R:  printSizeLow       (A2)
000060D8  3612                   10195m         MOVE.W  (A2), D3      ; INPUT VALUE      
000060DA                         10196m CHECKFORB_831: 
000060DA  0803 0006              10197m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000060DE  6600 0010              10198m         BNE     CHECKFORW_831  ; IF NOT GO TO WORD SIZE
000060E2  43F8 00B5              10199m         LEA     OBSIZE, A1     
000060E6  103C 000E              10200m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000060EA  4E4F                   10201m         TRAP    #15
000060EC  6000 0022              10202m         BRA     COMPLETE_831      
000060F0                         10203m CHECKFORW_831: 
000060F0  0803 0007              10204m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000060F4  6600 0010              10205m         BNE     CHECKFORL_831 ; IF NOT GO TO LONGWORD SIZE
000060F8  43F8 00B9              10206m         LEA     OWSIZE, A1     
000060FC  103C 000E              10207m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006100  4E4F                   10208m         TRAP    #15
00006102  6000 000C              10209m         BRA     COMPLETE_831  
00006106                         10210m CHECKFORL_831:
00006106  43F8 00BD              10211m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000610A  103C 000E              10212m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000610E  4E4F                   10213m         TRAP    #15
00006110                         10214m COMPLETE_831:  ; SIZE HAS BEEN PRINTED
00006110                         10215m         ENDM
00006110                         10216m         printDnDest    (A2)
00006110  3212                   10217m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006112  E949                   10218m         LSL     #$04, D1
00006114  E049                   10219m         LSR     #$08, D1
00006116  EA49                   10220m         LSR     #$05, D1
00006118  43F8 00C1              10221m         LEA     ODN, A1     
0000611C  103C 000E              10222m         MOVE.B  #14,D0          
00006120  4E4F                   10223m         TRAP    #15
00006122  103C 0003              10224m         MOVE.B  #3,D0          
00006126  4E4F                   10225m         TRAP    #15
00006128                         10226m         ENDM
00006128                         10227m         printComma
00006128  43F8 00C9              10228m         LEA     OCOMMA, A1     
0000612C  103C 000E              10229m         MOVE.B  #14,D0          
00006130  4E4F                   10230m         TRAP    #15
00006132                         10231m         ENDM
00006132                         10232m         printDnSrc     (A2)
00006132  4281                   10233m         CLR.L   D1
00006134  3212                   10234m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006136  E149                   10235m         LSL     #$08, D1
00006138  EB49                   10236m         LSL     #$05, D1
0000613A  E049                   10237m         LSR     #$08, D1
0000613C  EA49                   10238m         LSR     #$05, D1
0000613E  43F8 00C1              10239m         LEA     ODN, A1     
00006142  103C 000E              10240m         MOVE.B  #14,D0          
00006146  4E4F                   10241m         TRAP    #15
00006148  103C 0003              10242m         MOVE.B  #3,D0          
0000614C  4E4F                   10243m         TRAP    #15
0000614E                         10244m         ENDM
0000614E  4E75                   10245          RTS                 ; Return from ddecodeLSx_R subroutine
00006150                         10246  
00006150                         10247  ; ------------------------------------------------------------
00006150                         10248  ; 11c. "decodeLSx_S" subroutine
00006150                         10249  ; AUTHOR
00006150                         10250  ;
00006150                         10251  ; TODO: DESCRIPTION - LSL or LSR Register Shift
00006150                         10252  ; ------------------------------------------------------------
00006150                         10253  decodeLSx_S:
00006150                         10254m         verifyOpcode    pLSx_S, (A2)
00006150  43F8 01A0              10255m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
00006154  3612                   10256m         MOVE.W  (A2), D3      ; INPUT VALUE
00006156  123C 000F              10257m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000615A                         10258m         
0000615A                         10259m LOOP_835: 
0000615A  0C11 0030              10260m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000615E  6700 000E              10261m         BEQ     CHECKFOR0_835
00006162  0C11 0031              10262m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006166  6700 0010              10263m         BEQ     CHECKFOR1_835
0000616A  6000 0012              10264m         BRA     NEXT_835      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000616E                         10265m         
0000616E                         10266m CHECKFOR0_835: 
0000616E  0303                   10267m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006170  6600 0A64              10268m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006174  6000 0008              10269m         BRA     NEXT_835
00006178                         10270m 
00006178                         10271m CHECKFOR1_835:
00006178  0303                   10272m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000617A  6700 0A5A              10273m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000617E                         10274m 
0000617E                         10275m NEXT_835: 
0000617E  B23C 0000              10276m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006182  6700 0008              10277m         BEQ     COMPLETE_835  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006186  5301                   10278m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006188  1819                   10279m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000618A  60CE                   10280m         BRA     LOOP_835      ; BEGIN LOOP AGAIN
0000618C                         10281m 
0000618C                         10282m COMPLETE_835:  ; OPCODE HAS BEEN VERIFIED
0000618C                         10283m         ENDM
0000618C  4E75                   10284          RTS                 ; Return from ddecodeLSx_S subroutine
0000618E                         10285          
0000618E                         10286  ; ------------------------------------------------------------
0000618E                         10287  ; 12a. "decodeASx_M" subroutine
0000618E                         10288  ; AUTHOR
0000618E                         10289  ;
0000618E                         10290  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
0000618E                         10291  ; ------------------------------------------------------------
0000618E                         10292  decodeASx_M:
0000618E                         10293m         verifyOpcode    pASx_M, (A2)
0000618E  43F8 01B1              10294m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006192  3612                   10295m         MOVE.W  (A2), D3      ; INPUT VALUE
00006194  123C 000F              10296m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006198                         10297m         
00006198                         10298m LOOP_836: 
00006198  0C11 0030              10299m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000619C  6700 000E              10300m         BEQ     CHECKFOR0_836
000061A0  0C11 0031              10301m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000061A4  6700 0010              10302m         BEQ     CHECKFOR1_836
000061A8  6000 0012              10303m         BRA     NEXT_836      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000061AC                         10304m         
000061AC                         10305m CHECKFOR0_836: 
000061AC  0303                   10306m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000061AE  6600 0A26              10307m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000061B2  6000 0008              10308m         BRA     NEXT_836
000061B6                         10309m 
000061B6                         10310m CHECKFOR1_836:
000061B6  0303                   10311m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000061B8  6700 0A1C              10312m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000061BC                         10313m 
000061BC                         10314m NEXT_836: 
000061BC  B23C 0000              10315m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000061C0  6700 0008              10316m         BEQ     COMPLETE_836  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000061C4  5301                   10317m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000061C6  1819                   10318m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000061C8  60CE                   10319m         BRA     LOOP_836      ; BEGIN LOOP AGAIN
000061CA                         10320m 
000061CA                         10321m COMPLETE_836:  ; OPCODE HAS BEEN VERIFIED
000061CA                         10322m         ENDM
000061CA  0803 0008              10323          BTST    #$08, D3     ; Check the 8th bit
000061CE  6700 0010              10324          BEQ     ASR_M
000061D2  43F8 0095              10325  ASL_M:  LEA     oASL, A1
000061D6  103C 000E              10326          MOVE.B  #14,D0          
000061DA  4E4F                   10327          TRAP    #15 
000061DC  6000 000C              10328          BRA     Areg_M        
000061E0                         10329    
000061E0  43F8 0099              10330  ASR_M:  LEA     oASR, A1
000061E4  103C 000E              10331          MOVE.B  #14,D0          
000061E8  4E4F                   10332          TRAP    #15      
000061EA                         10333m Areg_M: printSizeLow       (A2) 
000061EA  3612                   10334m         MOVE.W  (A2), D3      ; INPUT VALUE      
000061EC                         10335m CHECKFORB_837: 
000061EC  0803 0006              10336m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000061F0  6600 0010              10337m         BNE     CHECKFORW_837  ; IF NOT GO TO WORD SIZE
000061F4  43F8 00B5              10338m         LEA     OBSIZE, A1     
000061F8  103C 000E              10339m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061FC  4E4F                   10340m         TRAP    #15
000061FE  6000 0022              10341m         BRA     COMPLETE_837      
00006202                         10342m CHECKFORW_837: 
00006202  0803 0007              10343m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006206  6600 0010              10344m         BNE     CHECKFORL_837 ; IF NOT GO TO LONGWORD SIZE
0000620A  43F8 00B9              10345m         LEA     OWSIZE, A1     
0000620E  103C 000E              10346m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006212  4E4F                   10347m         TRAP    #15
00006214  6000 000C              10348m         BRA     COMPLETE_837  
00006218                         10349m CHECKFORL_837:
00006218  43F8 00BD              10350m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000621C  103C 000E              10351m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006220  4E4F                   10352m         TRAP    #15
00006222                         10353m COMPLETE_837:  ; SIZE HAS BEEN PRINTED
00006222                         10354m         ENDM
00006222                         10355m         printCount       (A2)
00006222  3212                   10356m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006224  E949                   10357m         LSL     #$04, D1
00006226  E049                   10358m         LSR     #$08, D1
00006228  EA49                   10359m         LSR     #$05, D1
0000622A  43F8 00D0              10360m         LEA     OHASH, A1     
0000622E  103C 000E              10361m         MOVE.B  #14,D0          
00006232  4E4F                   10362m         TRAP    #15
00006234  103C 0003              10363m         MOVE.B  #3,D0          
00006238  4E4F                   10364m         TRAP    #15
0000623A                         10365m         ENDM
0000623A                         10366m         printComma
0000623A  43F8 00C9              10367m         LEA     OCOMMA, A1     
0000623E  103C 000E              10368m         MOVE.B  #14,D0          
00006242  4E4F                   10369m         TRAP    #15
00006244                         10370m         ENDM
00006244                         10371m         printDnSrc     (A2)          
00006244  4281                   10372m         CLR.L   D1
00006246  3212                   10373m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006248  E149                   10374m         LSL     #$08, D1
0000624A  EB49                   10375m         LSL     #$05, D1
0000624C  E049                   10376m         LSR     #$08, D1
0000624E  EA49                   10377m         LSR     #$05, D1
00006250  43F8 00C1              10378m         LEA     ODN, A1     
00006254  103C 000E              10379m         MOVE.B  #14,D0          
00006258  4E4F                   10380m         TRAP    #15
0000625A  103C 0003              10381m         MOVE.B  #3,D0          
0000625E  4E4F                   10382m         TRAP    #15
00006260                         10383m         ENDM
00006260  4E75                   10384          RTS                 ; Return from decodeASx_M subroutine
00006262                         10385  
00006262                         10386  
00006262                         10387  ; ------------------------------------------------------------
00006262                         10388  ; 12b. "decodeASx_R" subroutine
00006262                         10389  ; AUTHOR
00006262                         10390  ;
00006262                         10391  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006262                         10392  ; ------------------------------------------------------------
00006262                         10393  decodeASx_R:
00006262                         10394m         verifyOpcode    pASx_R, (A2)
00006262  43F8 01C2              10395m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
00006266  3612                   10396m         MOVE.W  (A2), D3      ; INPUT VALUE
00006268  123C 000F              10397m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000626C                         10398m         
0000626C                         10399m LOOP_841: 
0000626C  0C11 0030              10400m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006270  6700 000E              10401m         BEQ     CHECKFOR0_841
00006274  0C11 0031              10402m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006278  6700 0010              10403m         BEQ     CHECKFOR1_841
0000627C  6000 0012              10404m         BRA     NEXT_841      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006280                         10405m         
00006280                         10406m CHECKFOR0_841: 
00006280  0303                   10407m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006282  6600 0952              10408m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006286  6000 0008              10409m         BRA     NEXT_841
0000628A                         10410m 
0000628A                         10411m CHECKFOR1_841:
0000628A  0303                   10412m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000628C  6700 0948              10413m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006290                         10414m 
00006290                         10415m NEXT_841: 
00006290  B23C 0000              10416m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006294  6700 0008              10417m         BEQ     COMPLETE_841  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006298  5301                   10418m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000629A  1819                   10419m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000629C  60CE                   10420m         BRA     LOOP_841      ; BEGIN LOOP AGAIN
0000629E                         10421m 
0000629E                         10422m COMPLETE_841:  ; OPCODE HAS BEEN VERIFIED
0000629E                         10423m         ENDM
0000629E  0803 0008              10424          BTST    #$08, D3     ; Check the 8th bit
000062A2  6700 0010              10425          BEQ     ASR_R
000062A6  43F8 0095              10426  ASL_R:  LEA     oASL, A1
000062AA  103C 000E              10427          MOVE.B  #14,D0          
000062AE  4E4F                   10428          TRAP    #15 
000062B0  6000 000C              10429          BRA     Areg_R       
000062B4                         10430    
000062B4  43F8 0099              10431  ASR_R:  LEA     oASR, A1
000062B8  103C 000E              10432          MOVE.B  #14,D0          
000062BC  4E4F                   10433          TRAP    #15      
000062BE                         10434m Areg_R: printSizeLow       (A2)
000062BE  3612                   10435m         MOVE.W  (A2), D3      ; INPUT VALUE      
000062C0                         10436m CHECKFORB_842: 
000062C0  0803 0006              10437m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000062C4  6600 0010              10438m         BNE     CHECKFORW_842  ; IF NOT GO TO WORD SIZE
000062C8  43F8 00B5              10439m         LEA     OBSIZE, A1     
000062CC  103C 000E              10440m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062D0  4E4F                   10441m         TRAP    #15
000062D2  6000 0022              10442m         BRA     COMPLETE_842      
000062D6                         10443m CHECKFORW_842: 
000062D6  0803 0007              10444m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000062DA  6600 0010              10445m         BNE     CHECKFORL_842 ; IF NOT GO TO LONGWORD SIZE
000062DE  43F8 00B9              10446m         LEA     OWSIZE, A1     
000062E2  103C 000E              10447m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000062E6  4E4F                   10448m         TRAP    #15
000062E8  6000 000C              10449m         BRA     COMPLETE_842  
000062EC                         10450m CHECKFORL_842:
000062EC  43F8 00BD              10451m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000062F0  103C 000E              10452m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062F4  4E4F                   10453m         TRAP    #15
000062F6                         10454m COMPLETE_842:  ; SIZE HAS BEEN PRINTED
000062F6                         10455m         ENDM
000062F6                         10456m         printDnDest    (A2)
000062F6  3212                   10457m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000062F8  E949                   10458m         LSL     #$04, D1
000062FA  E049                   10459m         LSR     #$08, D1
000062FC  EA49                   10460m         LSR     #$05, D1
000062FE  43F8 00C1              10461m         LEA     ODN, A1     
00006302  103C 000E              10462m         MOVE.B  #14,D0          
00006306  4E4F                   10463m         TRAP    #15
00006308  103C 0003              10464m         MOVE.B  #3,D0          
0000630C  4E4F                   10465m         TRAP    #15
0000630E                         10466m         ENDM
0000630E                         10467m         printComma
0000630E  43F8 00C9              10468m         LEA     OCOMMA, A1     
00006312  103C 000E              10469m         MOVE.B  #14,D0          
00006316  4E4F                   10470m         TRAP    #15
00006318                         10471m         ENDM
00006318                         10472m         printDnSrc     (A2)
00006318  4281                   10473m         CLR.L   D1
0000631A  3212                   10474m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000631C  E149                   10475m         LSL     #$08, D1
0000631E  EB49                   10476m         LSL     #$05, D1
00006320  E049                   10477m         LSR     #$08, D1
00006322  EA49                   10478m         LSR     #$05, D1
00006324  43F8 00C1              10479m         LEA     ODN, A1     
00006328  103C 000E              10480m         MOVE.B  #14,D0          
0000632C  4E4F                   10481m         TRAP    #15
0000632E  103C 0003              10482m         MOVE.B  #3,D0          
00006332  4E4F                   10483m         TRAP    #15
00006334                         10484m         ENDM
00006334  4E75                   10485          RTS                 ; Return from decodeASx_R subroutine
00006336                         10486          
00006336                         10487          ; ------------------------------------------------------------
00006336                         10488  ; 12c. "decodeASx_S" subroutine
00006336                         10489  ; AUTHOR
00006336                         10490  ;
00006336                         10491  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006336                         10492  ; ------------------------------------------------------------
00006336                         10493  decodeASx_S:
00006336                         10494m         verifyOpcode    pASx_S, (A2)
00006336  43F8 01D3              10495m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
0000633A  3612                   10496m         MOVE.W  (A2), D3      ; INPUT VALUE
0000633C  123C 000F              10497m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006340                         10498m         
00006340                         10499m LOOP_846: 
00006340  0C11 0030              10500m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006344  6700 000E              10501m         BEQ     CHECKFOR0_846
00006348  0C11 0031              10502m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000634C  6700 0010              10503m         BEQ     CHECKFOR1_846
00006350  6000 0012              10504m         BRA     NEXT_846      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006354                         10505m         
00006354                         10506m CHECKFOR0_846: 
00006354  0303                   10507m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006356  6600 087E              10508m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000635A  6000 0008              10509m         BRA     NEXT_846
0000635E                         10510m 
0000635E                         10511m CHECKFOR1_846:
0000635E  0303                   10512m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006360  6700 0874              10513m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006364                         10514m 
00006364                         10515m NEXT_846: 
00006364  B23C 0000              10516m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006368  6700 0008              10517m         BEQ     COMPLETE_846  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000636C  5301                   10518m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000636E  1819                   10519m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006370  60CE                   10520m         BRA     LOOP_846      ; BEGIN LOOP AGAIN
00006372                         10521m 
00006372                         10522m COMPLETE_846:  ; OPCODE HAS BEEN VERIFIED
00006372                         10523m         ENDM
00006372  4E75                   10524          RTS                 ; Return from decodeASx_S subroutine
00006374                         10525  
00006374                         10526  
00006374                         10527  ; ------------------------------------------------------------
00006374                         10528  ; 13a. "decodeBEQ" subroutine
00006374                         10529  ; AUTHOR
00006374                         10530  ;
00006374                         10531  ; TODO: DESCRIPTION
00006374                         10532  ; ------------------------------------------------------------
00006374                         10533  decodeBEQ:
00006374                         10534m         verifyOpcode    pBEQ, (A2)
00006374  43F8 01E4              10535m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
00006378  3612                   10536m         MOVE.W  (A2), D3      ; INPUT VALUE
0000637A  123C 000F              10537m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000637E                         10538m         
0000637E                         10539m LOOP_847: 
0000637E  0C11 0030              10540m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006382  6700 000E              10541m         BEQ     CHECKFOR0_847
00006386  0C11 0031              10542m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000638A  6700 0010              10543m         BEQ     CHECKFOR1_847
0000638E  6000 0012              10544m         BRA     NEXT_847      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006392                         10545m         
00006392                         10546m CHECKFOR0_847: 
00006392  0303                   10547m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006394  6600 0840              10548m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006398  6000 0008              10549m         BRA     NEXT_847
0000639C                         10550m 
0000639C                         10551m CHECKFOR1_847:
0000639C  0303                   10552m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000639E  6700 0836              10553m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063A2                         10554m 
000063A2                         10555m NEXT_847: 
000063A2  B23C 0000              10556m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063A6  6700 0008              10557m         BEQ     COMPLETE_847  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063AA  5301                   10558m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063AC  1819                   10559m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063AE  60CE                   10560m         BRA     LOOP_847      ; BEGIN LOOP AGAIN
000063B0                         10561m 
000063B0                         10562m COMPLETE_847:  ; OPCODE HAS BEEN VERIFIED
000063B0                         10563m         ENDM
000063B0  43F8 009D              10564          LEA     oBEQ, A1     
000063B4  103C 000E              10565          MOVE.B  #14,D0          
000063B8  4E4F                   10566          TRAP    #15
000063BA                         10567m         space
000063BA  43F8 00D2              10568m         LEA     OBLANK, A1
000063BE  103C 000E              10569m         MOVE.B  #14,D0          
000063C2  4E4F                   10570m         TRAP    #15
000063C4                         10571m         ENDM
000063C4                         10572m         printSign
000063C4  103C 0006              10573m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000063C8  323C 0024              10574m         MOVE.W  #36, D1     ; AN = SIGN
000063CC  4E4F                   10575m         TRAP    #15         ; OUTPUT = SIGN
000063CE                         10576m         ENDM
000063CE                         10577m         printBranch     (A2)
000063CE  3612                   10578m         MOVE.W (A2), D3
000063D0  4241                   10579m         CLR     D1
000063D2  D203                   10580m         ADD.B   D3, D1
000063D4                         10581mm         CONVERTATOH D1
000063D4  0C01 0039              10582mm         CMPI.B  #$39, D1
000063D8  6E00 000A              10583mm         BGT     ALPHA_851
000063DC  0401 0030              10584mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000063E0  6000 0006              10585mm         BRA     DONE_851
000063E4  0401 0037              10586mm ALPHA_851: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000063E8  4E71                   10587mm DONE_851: NOP
000063EA                         10588mm         ENDM
000063EA  103C 0003              10589m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
000063EE  4E4F                   10590m         TRAP    #15
000063F0                         10591m         ENDM        
000063F0  4E75                   10592          RTS                 ; Return from decodeBEQ subroutine
000063F2                         10593  
000063F2                         10594  
000063F2                         10595  ; ------------------------------------------------------------
000063F2                         10596  ; 13b. "decodeBGE" subroutine
000063F2                         10597  ; AUTHOR
000063F2                         10598  ;
000063F2                         10599  ; TODO: DESCRIPTION
000063F2                         10600  ; ------------------------------------------------------------
000063F2                         10601  decodeBGE:
000063F2                         10602m         verifyOpcode    pBGE, (A2)
000063F2  43F8 01F5              10603m         LEA     PBGE, A1      ; INPUT PATTERN STRING
000063F6  3612                   10604m         MOVE.W  (A2), D3      ; INPUT VALUE
000063F8  123C 000F              10605m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063FC                         10606m         
000063FC                         10607m LOOP_852: 
000063FC  0C11 0030              10608m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006400  6700 000E              10609m         BEQ     CHECKFOR0_852
00006404  0C11 0031              10610m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006408  6700 0010              10611m         BEQ     CHECKFOR1_852
0000640C  6000 0012              10612m         BRA     NEXT_852      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006410                         10613m         
00006410                         10614m CHECKFOR0_852: 
00006410  0303                   10615m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006412  6600 07C2              10616m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006416  6000 0008              10617m         BRA     NEXT_852
0000641A                         10618m 
0000641A                         10619m CHECKFOR1_852:
0000641A  0303                   10620m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000641C  6700 07B8              10621m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006420                         10622m 
00006420                         10623m NEXT_852: 
00006420  B23C 0000              10624m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006424  6700 0008              10625m         BEQ     COMPLETE_852  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006428  5301                   10626m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000642A  1819                   10627m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000642C  60CE                   10628m         BRA     LOOP_852      ; BEGIN LOOP AGAIN
0000642E                         10629m 
0000642E                         10630m COMPLETE_852:  ; OPCODE HAS BEEN VERIFIED
0000642E                         10631m         ENDM
0000642E  43F8 00A1              10632          LEA     oBGE, A1     
00006432  103C 000E              10633          MOVE.B  #14,D0          
00006436  4E4F                   10634          TRAP    #15
00006438                         10635m         space
00006438  43F8 00D2              10636m         LEA     OBLANK, A1
0000643C  103C 000E              10637m         MOVE.B  #14,D0          
00006440  4E4F                   10638m         TRAP    #15
00006442                         10639m         ENDM
00006442                         10640m         printSign
00006442  103C 0006              10641m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006446  323C 0024              10642m         MOVE.W  #36, D1     ; AN = SIGN
0000644A  4E4F                   10643m         TRAP    #15         ; OUTPUT = SIGN
0000644C                         10644m         ENDM
0000644C                         10645m         printBranch     (A2)
0000644C  3612                   10646m         MOVE.W (A2), D3
0000644E  4241                   10647m         CLR     D1
00006450  D203                   10648m         ADD.B   D3, D1
00006452                         10649mm         CONVERTATOH D1
00006452  0C01 0039              10650mm         CMPI.B  #$39, D1
00006456  6E00 000A              10651mm         BGT     ALPHA_856
0000645A  0401 0030              10652mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000645E  6000 0006              10653mm         BRA     DONE_856
00006462  0401 0037              10654mm ALPHA_856: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006466  4E71                   10655mm DONE_856: NOP
00006468                         10656mm         ENDM
00006468  103C 0003              10657m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
0000646C  4E4F                   10658m         TRAP    #15
0000646E                         10659m         ENDM        
0000646E  4E75                   10660          RTS                 ; Return from decodeBGE subroutine
00006470                         10661  
00006470                         10662  
00006470                         10663  ; ------------------------------------------------------------
00006470                         10664  ; 13c. "decodeBLT" subroutine
00006470                         10665  ; AUTHOR
00006470                         10666  ;
00006470                         10667  ; TODO: DESCRIPTION
00006470                         10668  ; ------------------------------------------------------------
00006470                         10669  decodeBLT:
00006470                         10670m         verifyOpcode    pBLT, (A2)
00006470  43F8 0206              10671m         LEA     PBLT, A1      ; INPUT PATTERN STRING
00006474  3612                   10672m         MOVE.W  (A2), D3      ; INPUT VALUE
00006476  123C 000F              10673m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000647A                         10674m         
0000647A                         10675m LOOP_857: 
0000647A  0C11 0030              10676m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000647E  6700 000E              10677m         BEQ     CHECKFOR0_857
00006482  0C11 0031              10678m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006486  6700 0010              10679m         BEQ     CHECKFOR1_857
0000648A  6000 0012              10680m         BRA     NEXT_857      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000648E                         10681m         
0000648E                         10682m CHECKFOR0_857: 
0000648E  0303                   10683m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006490  6600 0744              10684m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006494  6000 0008              10685m         BRA     NEXT_857
00006498                         10686m 
00006498                         10687m CHECKFOR1_857:
00006498  0303                   10688m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000649A  6700 073A              10689m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000649E                         10690m 
0000649E                         10691m NEXT_857: 
0000649E  B23C 0000              10692m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000064A2  6700 0008              10693m         BEQ     COMPLETE_857  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000064A6  5301                   10694m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000064A8  1819                   10695m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000064AA  60CE                   10696m         BRA     LOOP_857      ; BEGIN LOOP AGAIN
000064AC                         10697m 
000064AC                         10698m COMPLETE_857:  ; OPCODE HAS BEEN VERIFIED
000064AC                         10699m         ENDM
000064AC  43F8 00A5              10700          LEA     oBLT, A1     
000064B0  103C 000E              10701          MOVE.B  #14,D0          
000064B4  4E4F                   10702          TRAP    #15
000064B6                         10703m         space
000064B6  43F8 00D2              10704m         LEA     OBLANK, A1
000064BA  103C 000E              10705m         MOVE.B  #14,D0          
000064BE  4E4F                   10706m         TRAP    #15
000064C0                         10707m         ENDM
000064C0                         10708m         printSign
000064C0  103C 0006              10709m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000064C4  323C 0024              10710m         MOVE.W  #36, D1     ; AN = SIGN
000064C8  4E4F                   10711m         TRAP    #15         ; OUTPUT = SIGN
000064CA                         10712m         ENDM
000064CA                         10713m         printBranch     (A2)
000064CA  3612                   10714m         MOVE.W (A2), D3
000064CC  4241                   10715m         CLR     D1
000064CE  D203                   10716m         ADD.B   D3, D1
000064D0                         10717mm         CONVERTATOH D1
000064D0  0C01 0039              10718mm         CMPI.B  #$39, D1
000064D4  6E00 000A              10719mm         BGT     ALPHA_861
000064D8  0401 0030              10720mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000064DC  6000 0006              10721mm         BRA     DONE_861
000064E0  0401 0037              10722mm ALPHA_861: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000064E4  4E71                   10723mm DONE_861: NOP
000064E6                         10724mm         ENDM
000064E6  103C 0003              10725m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
000064EA  4E4F                   10726m         TRAP    #15
000064EC                         10727m         ENDM        
000064EC  4E75                   10728          RTS                 ; Return from decodeBLT subroutine
000064EE                         10729  
000064EE                         10730  
000064EE                         10731  ; ------------------------------------------------------------
000064EE                         10732  ; 14. "decodeJSR" subroutine
000064EE                         10733  ; AUTHOR
000064EE                         10734  ;
000064EE                         10735  ; TODO: DESCRIPTION
000064EE                         10736  ; ------------------------------------------------------------
000064EE                         10737  decodeJSR:
000064EE                         10738m         verifyOpcode    pJSR, (A2)
000064EE  43F8 0217              10739m         LEA     PJSR, A1      ; INPUT PATTERN STRING
000064F2  3612                   10740m         MOVE.W  (A2), D3      ; INPUT VALUE
000064F4  123C 000F              10741m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000064F8                         10742m         
000064F8                         10743m LOOP_862: 
000064F8  0C11 0030              10744m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000064FC  6700 000E              10745m         BEQ     CHECKFOR0_862
00006500  0C11 0031              10746m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006504  6700 0010              10747m         BEQ     CHECKFOR1_862
00006508  6000 0012              10748m         BRA     NEXT_862      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000650C                         10749m         
0000650C                         10750m CHECKFOR0_862: 
0000650C  0303                   10751m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000650E  6600 06C6              10752m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006512  6000 0008              10753m         BRA     NEXT_862
00006516                         10754m 
00006516                         10755m CHECKFOR1_862:
00006516  0303                   10756m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006518  6700 06BC              10757m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000651C                         10758m 
0000651C                         10759m NEXT_862: 
0000651C  B23C 0000              10760m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006520  6700 0008              10761m         BEQ     COMPLETE_862  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006524  5301                   10762m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006526  1819                   10763m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006528  60CE                   10764m         BRA     LOOP_862      ; BEGIN LOOP AGAIN
0000652A                         10765m 
0000652A                         10766m COMPLETE_862:  ; OPCODE HAS BEEN VERIFIED
0000652A                         10767m         ENDM
0000652A  43F8 00A9              10768          LEA     oJSR, A1     
0000652E  103C 000E              10769          MOVE.B  #14,D0          
00006532  4E4F                   10770          TRAP    #15
00006534                         10771          
00006534  43F8 00D2              10772          LEA     oBlank, A1     
00006538  103C 000E              10773          MOVE.B  #14,D0          
0000653C  4E4F                   10774          TRAP    #15
0000653E                         10775  
0000653E                         10776m         prepareAdrMode  #$1, (A2)
0000653E  3C3C 0001              10777m         MOVE.W  #$1, D6      ; INPUT VALUE
00006542  3212                   10778m         MOVE.W  (A2), D1
00006544  BC3C 0001              10779m         CMP.B   #$01, D6
00006548  6700 000C              10780m         BEQ     ADRSOURCE_863    
0000654C                         10781m ADRDEST_863:
0000654C  EF49                   10782m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000654E  E049                   10783m         LSR     #$08, D1
00006550  EA49                   10784m         LSR     #$05, D1
00006552  6000 000A              10785m         BRA     COMPLETE_863 
00006556                         10786m ADRSOURCE_863:                
00006556  E149                   10787m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006558  E549                   10788m         LSL     #$02, D1
0000655A  E049                   10789m         LSR     #$08, D1
0000655C  EA49                   10790m         LSR     #$05, D1
0000655E                         10791m COMPLETE_863:  ; OPCODE HAS BEEN VERIFIED
0000655E                         10792m         ENDM        
0000655E                         10793m         decodeAdrMode   (A2), D1        
0000655E  3612                   10794m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00006560  3201                   10795m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00006562                         10796m 
00006562  B23C 0001              10797m         CMP.B   #$01, D1
00006566  6700 0066              10798m         BEQ     ADRREGDIRECT_864    
0000656A  B23C 0002              10799m         CMP.B   #$02, D1
0000656E  6700 00A0              10800m         BEQ     ADRREGINDIRECT_864  
00006572  B23C 0003              10801m         CMP.B   #$03, D1
00006576  6700 0102              10802m         BEQ     ADRREGPOSTINC_864  
0000657A  B23C 0004              10803m         CMP.B   #$04, D1
0000657E  6700 0178              10804m         BEQ     ADRREGPREDEC_864
00006582  B23C 0007              10805m         CMP.B   #$07, D1
00006586  6700 01EE              10806m         BEQ     ADRABSOLUTE_864    
0000658A                         10807m         
0000658A                         10808m DATAREGDIRECT_864: 
0000658A  BC3C 0001              10809m         CMP.B   #$01, D6
0000658E  6700 001E              10810m         BEQ     DATAREGDIRECTSRC_864   
00006592                         10811m DATAREGDIRECTDEST_864: 
00006592                         10812mm         PRINTDNDEST D3 
00006592  3203                   10813mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00006594  E949                   10814mm         LSL     #$04, D1
00006596  E049                   10815mm         LSR     #$08, D1
00006598  EA49                   10816mm         LSR     #$05, D1
0000659A  43F8 00C1              10817mm         LEA     ODN, A1     
0000659E  103C 000E              10818mm         MOVE.B  #14,D0          
000065A2  4E4F                   10819mm         TRAP    #15
000065A4  103C 0003              10820mm         MOVE.B  #3,D0          
000065A8  4E4F                   10821mm         TRAP    #15
000065AA                         10822mm         ENDM
000065AA  6000 0562              10823m         BRA     COMPLETE_864 
000065AE                         10824m DATAREGDIRECTSRC_864: 
000065AE                         10825mm         PRINTDNSRC D3 
000065AE  4281                   10826mm         CLR.L   D1
000065B0  3203                   10827mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000065B2  E149                   10828mm         LSL     #$08, D1
000065B4  EB49                   10829mm         LSL     #$05, D1
000065B6  E049                   10830mm         LSR     #$08, D1
000065B8  EA49                   10831mm         LSR     #$05, D1
000065BA  43F8 00C1              10832mm         LEA     ODN, A1     
000065BE  103C 000E              10833mm         MOVE.B  #14,D0          
000065C2  4E4F                   10834mm         TRAP    #15
000065C4  103C 0003              10835mm         MOVE.B  #3,D0          
000065C8  4E4F                   10836mm         TRAP    #15
000065CA                         10837mm         ENDM
000065CA  6000 0542              10838m         BRA     COMPLETE_864   
000065CE                         10839m         
000065CE                         10840m ADRREGDIRECT_864: 
000065CE  BC3C 0001              10841m         CMP.B   #$01, D6
000065D2  6700 001E              10842m         BEQ     ADRREGDIRECTSRC_864   
000065D6                         10843m ADRREGDIRECTDEST_864:
000065D6                         10844mm         PRINTANDEST D3
000065D6  3203                   10845mm         MOVE.W  D3, D1
000065D8  E949                   10846mm         LSL     #$04, D1
000065DA  E049                   10847mm         LSR     #$08, D1
000065DC  EA49                   10848mm         LSR     #$05, D1
000065DE  43F8 00C3              10849mm         LEA     OAN, A1     
000065E2  103C 000E              10850mm         MOVE.B  #14,D0          
000065E6  4E4F                   10851mm         TRAP    #15
000065E8  103C 0003              10852mm         MOVE.B  #3,D0          
000065EC  4E4F                   10853mm         TRAP    #15
000065EE                         10854mm         ENDM
000065EE  6000 051E              10855m         BRA     COMPLETE_864   
000065F2                         10856m ADRREGDIRECTSRC_864:
000065F2                         10857mm         PRINTANSRC D3
000065F2  3203                   10858mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000065F4  E149                   10859mm         LSL     #$08, D1
000065F6  EB49                   10860mm         LSL     #$05, D1
000065F8  E049                   10861mm         LSR     #$08, D1
000065FA  EA49                   10862mm         LSR     #$05, D1
000065FC  43F8 00C3              10863mm         LEA     OAN, A1     
00006600  103C 000E              10864mm         MOVE.B  #14,D0          
00006604  4E4F                   10865mm         TRAP    #15
00006606  103C 0003              10866mm         MOVE.B  #3,D0          
0000660A  4E4F                   10867mm         TRAP    #15
0000660C                         10868mm         ENDM
0000660C  6000 0500              10869m         BRA     COMPLETE_864   
00006610                         10870m        
00006610                         10871m ADRREGINDIRECT_864:   
00006610  BC3C 0001              10872m         CMP.B   #$01, D6
00006614  6700 0032              10873m         BEQ     ADRREGINDIRECTSRC_864   
00006618                         10874m ADRREGINDIRECTDEST_864:
00006618                         10875mm         PRINTLB
00006618  43F8 00C5              10876mm         LEA     OLB, A1     
0000661C  103C 000E              10877mm         MOVE.B  #14,D0          
00006620  4E4F                   10878mm         TRAP    #15
00006622                         10879mm         ENDM
00006622                         10880mm         PRINTANDEST D3  
00006622  3203                   10881mm         MOVE.W  D3, D1
00006624  E949                   10882mm         LSL     #$04, D1
00006626  E049                   10883mm         LSR     #$08, D1
00006628  EA49                   10884mm         LSR     #$05, D1
0000662A  43F8 00C3              10885mm         LEA     OAN, A1     
0000662E  103C 000E              10886mm         MOVE.B  #14,D0          
00006632  4E4F                   10887mm         TRAP    #15
00006634  103C 0003              10888mm         MOVE.B  #3,D0          
00006638  4E4F                   10889mm         TRAP    #15
0000663A                         10890mm         ENDM
0000663A                         10891mm         PRINTRB
0000663A  43F8 00C7              10892mm         LEA     ORB, A1     
0000663E  103C 000E              10893mm         MOVE.B  #14,D0          
00006642  4E4F                   10894mm         TRAP    #15
00006644                         10895mm         ENDM
00006644  6000 04C8              10896m         BRA     COMPLETE_864     
00006648                         10897m ADRREGINDIRECTSRC_864:   
00006648                         10898mm         PRINTLB
00006648  43F8 00C5              10899mm         LEA     OLB, A1     
0000664C  103C 000E              10900mm         MOVE.B  #14,D0          
00006650  4E4F                   10901mm         TRAP    #15
00006652                         10902mm         ENDM
00006652                         10903mm         PRINTANSRC D3  
00006652  3203                   10904mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006654  E149                   10905mm         LSL     #$08, D1
00006656  EB49                   10906mm         LSL     #$05, D1
00006658  E049                   10907mm         LSR     #$08, D1
0000665A  EA49                   10908mm         LSR     #$05, D1
0000665C  43F8 00C3              10909mm         LEA     OAN, A1     
00006660  103C 000E              10910mm         MOVE.B  #14,D0          
00006664  4E4F                   10911mm         TRAP    #15
00006666  103C 0003              10912mm         MOVE.B  #3,D0          
0000666A  4E4F                   10913mm         TRAP    #15
0000666C                         10914mm         ENDM
0000666C                         10915mm         PRINTRB
0000666C  43F8 00C7              10916mm         LEA     ORB, A1     
00006670  103C 000E              10917mm         MOVE.B  #14,D0          
00006674  4E4F                   10918mm         TRAP    #15
00006676                         10919mm         ENDM
00006676  6000 0496              10920m         BRA     COMPLETE_864   
0000667A                         10921m         
0000667A                         10922m ADRREGPOSTINC_864:   
0000667A  BC3C 0001              10923m         CMP.B   #$01, D6
0000667E  6700 003C              10924m         BEQ     ADRREGPOSTINCSRC_864   
00006682                         10925m ADRREGPOSTINCDEST_864: 
00006682                         10926mm         PRINTLB
00006682  43F8 00C5              10927mm         LEA     OLB, A1     
00006686  103C 000E              10928mm         MOVE.B  #14,D0          
0000668A  4E4F                   10929mm         TRAP    #15
0000668C                         10930mm         ENDM
0000668C                         10931mm         PRINTANDEST D3  
0000668C  3203                   10932mm         MOVE.W  D3, D1
0000668E  E949                   10933mm         LSL     #$04, D1
00006690  E049                   10934mm         LSR     #$08, D1
00006692  EA49                   10935mm         LSR     #$05, D1
00006694  43F8 00C3              10936mm         LEA     OAN, A1     
00006698  103C 000E              10937mm         MOVE.B  #14,D0          
0000669C  4E4F                   10938mm         TRAP    #15
0000669E  103C 0003              10939mm         MOVE.B  #3,D0          
000066A2  4E4F                   10940mm         TRAP    #15
000066A4                         10941mm         ENDM
000066A4                         10942mm         PRINTRB
000066A4  43F8 00C7              10943mm         LEA     ORB, A1     
000066A8  103C 000E              10944mm         MOVE.B  #14,D0          
000066AC  4E4F                   10945mm         TRAP    #15
000066AE                         10946mm         ENDM
000066AE                         10947mm         PRINTPI
000066AE  43F8 00CE              10948mm         LEA     OPSTINC, A1     
000066B2  103C 000E              10949mm         MOVE.B  #14,D0          
000066B6  4E4F                   10950mm         TRAP    #15
000066B8                         10951mm         ENDM
000066B8  6000 0454              10952m         BRA     COMPLETE_864  
000066BC                         10953m ADRREGPOSTINCSRC_864:           
000066BC                         10954mm         PRINTLB
000066BC  43F8 00C5              10955mm         LEA     OLB, A1     
000066C0  103C 000E              10956mm         MOVE.B  #14,D0          
000066C4  4E4F                   10957mm         TRAP    #15
000066C6                         10958mm         ENDM
000066C6                         10959mm         PRINTANSRC D3  
000066C6  3203                   10960mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000066C8  E149                   10961mm         LSL     #$08, D1
000066CA  EB49                   10962mm         LSL     #$05, D1
000066CC  E049                   10963mm         LSR     #$08, D1
000066CE  EA49                   10964mm         LSR     #$05, D1
000066D0  43F8 00C3              10965mm         LEA     OAN, A1     
000066D4  103C 000E              10966mm         MOVE.B  #14,D0          
000066D8  4E4F                   10967mm         TRAP    #15
000066DA  103C 0003              10968mm         MOVE.B  #3,D0          
000066DE  4E4F                   10969mm         TRAP    #15
000066E0                         10970mm         ENDM
000066E0                         10971mm         PRINTRB
000066E0  43F8 00C7              10972mm         LEA     ORB, A1     
000066E4  103C 000E              10973mm         MOVE.B  #14,D0          
000066E8  4E4F                   10974mm         TRAP    #15
000066EA                         10975mm         ENDM
000066EA                         10976mm         PRINTPI
000066EA  43F8 00CE              10977mm         LEA     OPSTINC, A1     
000066EE  103C 000E              10978mm         MOVE.B  #14,D0          
000066F2  4E4F                   10979mm         TRAP    #15
000066F4                         10980mm         ENDM
000066F4  6000 0418              10981m         BRA     COMPLETE_864  
000066F8                         10982m ADRREGPREDEC_864: 
000066F8  BC3C 0001              10983m         CMP.B   #$01, D6
000066FC  6700 003C              10984m         BEQ     ADRREGPREDECSRC_864   
00006700                         10985m ADRREGPREDECDEST_864:
00006700                         10986mm         PRINTPD  
00006700  43F8 00CC              10987mm         LEA     OPREDEC, A1     
00006704  103C 000E              10988mm         MOVE.B  #14,D0          
00006708  4E4F                   10989mm         TRAP    #15
0000670A                         10990mm         ENDM
0000670A                         10991mm         PRINTLB
0000670A  43F8 00C5              10992mm         LEA     OLB, A1     
0000670E  103C 000E              10993mm         MOVE.B  #14,D0          
00006712  4E4F                   10994mm         TRAP    #15
00006714                         10995mm         ENDM
00006714                         10996mm         PRINTANDEST D3  
00006714  3203                   10997mm         MOVE.W  D3, D1
00006716  E949                   10998mm         LSL     #$04, D1
00006718  E049                   10999mm         LSR     #$08, D1
0000671A  EA49                   11000mm         LSR     #$05, D1
0000671C  43F8 00C3              11001mm         LEA     OAN, A1     
00006720  103C 000E              11002mm         MOVE.B  #14,D0          
00006724  4E4F                   11003mm         TRAP    #15
00006726  103C 0003              11004mm         MOVE.B  #3,D0          
0000672A  4E4F                   11005mm         TRAP    #15
0000672C                         11006mm         ENDM
0000672C                         11007mm         PRINTRB
0000672C  43F8 00C7              11008mm         LEA     ORB, A1     
00006730  103C 000E              11009mm         MOVE.B  #14,D0          
00006734  4E4F                   11010mm         TRAP    #15
00006736                         11011mm         ENDM
00006736  6000 03D6              11012m         BRA     COMPLETE_864   
0000673A                         11013m ADRREGPREDECSRC_864: 
0000673A                         11014mm         PRINTPD  
0000673A  43F8 00CC              11015mm         LEA     OPREDEC, A1     
0000673E  103C 000E              11016mm         MOVE.B  #14,D0          
00006742  4E4F                   11017mm         TRAP    #15
00006744                         11018mm         ENDM
00006744                         11019mm         PRINTLB
00006744  43F8 00C5              11020mm         LEA     OLB, A1     
00006748  103C 000E              11021mm         MOVE.B  #14,D0          
0000674C  4E4F                   11022mm         TRAP    #15
0000674E                         11023mm         ENDM
0000674E                         11024mm         PRINTANSRC D3  
0000674E  3203                   11025mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006750  E149                   11026mm         LSL     #$08, D1
00006752  EB49                   11027mm         LSL     #$05, D1
00006754  E049                   11028mm         LSR     #$08, D1
00006756  EA49                   11029mm         LSR     #$05, D1
00006758  43F8 00C3              11030mm         LEA     OAN, A1     
0000675C  103C 000E              11031mm         MOVE.B  #14,D0          
00006760  4E4F                   11032mm         TRAP    #15
00006762  103C 0003              11033mm         MOVE.B  #3,D0          
00006766  4E4F                   11034mm         TRAP    #15
00006768                         11035mm         ENDM
00006768                         11036mm         PRINTRB
00006768  43F8 00C7              11037mm         LEA     ORB, A1     
0000676C  103C 000E              11038mm         MOVE.B  #14,D0          
00006770  4E4F                   11039mm         TRAP    #15
00006772                         11040mm         ENDM
00006772  6000 039A              11041m         BRA     COMPLETE_864
00006776                         11042m        
00006776                         11043m ADRABSOLUTE_864:
00006776  BC3C 0001              11044m         CMP.B   #$01, D6
0000677A  6600 0018              11045m         BNE     ADRABSOLUTEDST_864 
0000677E                         11046m         
0000677E  3A03                   11047m         MOVE.W  D3, D5
00006780  0803 0002              11048m         BTST    #2, D3
00006784  6600 0024              11049m         BNE     ADRIMMEDIATE_864
00006788  0803 0000              11050m         BTST    #0, D3
0000678C  6600 0270              11051m         BNE     ADRABSOLUTEL_864
00006790  6000 01DA              11052m         BRA     ADRABSOLUTEW_864
00006794                         11053m ADRABSOLUTEDST_864:
00006794  3A03                   11054m         MOVE.W  D3, D5
00006796  0803 000B              11055m         BTST    #$B, D3
0000679A  6600 000E              11056m         BNE     ADRIMMEDIATE_864
0000679E  0803 0009              11057m         BTST    #$09, D3
000067A2  6600 025A              11058m         BNE     ADRABSOLUTEL_864
000067A6  6000 01C4              11059m         BRA     ADRABSOLUTEW_864
000067AA                         11060m ADRIMMEDIATE_864:
000067AA  BE3C 0001              11061m         CMP.B   #1, D7
000067AE  6700 009E              11062m         BEQ     ADRIMMEDIATEL_864
000067B2                         11063m ADRIMMEDIATEW_864:
000067B2  361A                   11064m         MOVE.W  (A2)+, D3
000067B4                         11065mm         PRINTHASH
000067B4  103C 0006              11066mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000067B8  323C 0023              11067mm         MOVE.W  #35, D1     ; AN = SIGN
000067BC  4E4F                   11068mm         TRAP    #15         ; OUTPUT = SIGN
000067BE                         11069mm         ENDM
000067BE                         11070mm         PRINTSIGN
000067BE  103C 0006              11071mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000067C2  323C 0024              11072mm         MOVE.W  #36, D1     ; AN = SIGN
000067C6  4E4F                   11073mm         TRAP    #15         ; OUTPUT = SIGN
000067C8                         11074mm         ENDM
000067C8                         11075mm         ADROUT
000067C8  3212                   11076mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067CA  E049                   11077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067CC  E849                   11078mm         LSR.W   #4, D1      
000067CE                         11079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067CE  0C01 0009              11080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067D2  6E00 000A              11081mmm         BGT     ALPHA_894
000067D6  0601 0030              11082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067DA  6000 0006              11083mmm         BRA     DONE_894
000067DE  0601 0037              11084mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067E2  4E71                   11085mmm DONE_894: NOP
000067E4                         11086mmm         ENDM
000067E4  4E4F                   11087mm         TRAP    #15         ; EXECUTE OUTPUT
000067E6                         11088mm         
000067E6  3212                   11089mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067E8  E949                   11090mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000067EA  E049                   11091mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067EC  E849                   11092mm         LSR.W   #4, D1      
000067EE                         11093mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067EE  0C01 0009              11094mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067F2  6E00 000A              11095mmm         BGT     ALPHA_895
000067F6  0601 0030              11096mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067FA  6000 0006              11097mmm         BRA     DONE_895
000067FE  0601 0037              11098mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006802  4E71                   11099mmm DONE_895: NOP
00006804                         11100mmm         ENDM
00006804  4E4F                   11101mm         TRAP    #15         ; EXECUTE OUTPUT
00006806                         11102mm         
00006806  3212                   11103mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006808  E149                   11104mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000680A  E049                   11105mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000680C  E849                   11106mm         LSR.W   #4, D1      
0000680E                         11107mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000680E  0C01 0009              11108mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006812  6E00 000A              11109mmm         BGT     ALPHA_896
00006816  0601 0030              11110mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000681A  6000 0006              11111mmm         BRA     DONE_896
0000681E  0601 0037              11112mmm ALPHA_896: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006822  4E71                   11113mmm DONE_896: NOP
00006824                         11114mmm         ENDM
00006824  4E4F                   11115mm         TRAP    #15         ; EXECUTE OUTPUT
00006826                         11116mm         
00006826  3212                   11117mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006828  E149                   11118mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000682A  E949                   11119mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000682C  E049                   11120mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000682E  E849                   11121mm         LSR.W   #4, D1      
00006830                         11122mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006830  0C01 0009              11123mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006834  6E00 000A              11124mmm         BGT     ALPHA_897
00006838  0601 0030              11125mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000683C  6000 0006              11126mmm         BRA     DONE_897
00006840  0601 0037              11127mmm ALPHA_897: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006844  4E71                   11128mmm DONE_897: NOP
00006846                         11129mmm         ENDM
00006846  4E4F                   11130mm         TRAP    #15         ; EXECUTE OUTPUT       
00006848                         11131mm         ENDM 
00006848  3605                   11132m         MOVE.W  D5, D3
0000684A  6000 02C2              11133m         BRA     COMPLETE_864
0000684E                         11134m ADRIMMEDIATEL_864:
0000684E  361A                   11135m         MOVE.W  (A2)+, D3
00006850                         11136mm         PRINTHASH
00006850  103C 0006              11137mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006854  323C 0023              11138mm         MOVE.W  #35, D1     ; AN = SIGN
00006858  4E4F                   11139mm         TRAP    #15         ; OUTPUT = SIGN
0000685A                         11140mm         ENDM
0000685A                         11141mm         PRINTSIGN
0000685A  103C 0006              11142mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000685E  323C 0024              11143mm         MOVE.W  #36, D1     ; AN = SIGN
00006862  4E4F                   11144mm         TRAP    #15         ; OUTPUT = SIGN
00006864                         11145mm         ENDM
00006864                         11146mm         ADROUT 
00006864  3212                   11147mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006866  E049                   11148mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006868  E849                   11149mm         LSR.W   #4, D1      
0000686A                         11150mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000686A  0C01 0009              11151mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000686E  6E00 000A              11152mmm         BGT     ALPHA_901
00006872  0601 0030              11153mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006876  6000 0006              11154mmm         BRA     DONE_901
0000687A  0601 0037              11155mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000687E  4E71                   11156mmm DONE_901: NOP
00006880                         11157mmm         ENDM
00006880  4E4F                   11158mm         TRAP    #15         ; EXECUTE OUTPUT
00006882                         11159mm         
00006882  3212                   11160mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006884  E949                   11161mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006886  E049                   11162mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006888  E849                   11163mm         LSR.W   #4, D1      
0000688A                         11164mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000688A  0C01 0009              11165mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000688E  6E00 000A              11166mmm         BGT     ALPHA_902
00006892  0601 0030              11167mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006896  6000 0006              11168mmm         BRA     DONE_902
0000689A  0601 0037              11169mmm ALPHA_902: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000689E  4E71                   11170mmm DONE_902: NOP
000068A0                         11171mmm         ENDM
000068A0  4E4F                   11172mm         TRAP    #15         ; EXECUTE OUTPUT
000068A2                         11173mm         
000068A2  3212                   11174mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068A4  E149                   11175mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068A6  E049                   11176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068A8  E849                   11177mm         LSR.W   #4, D1      
000068AA                         11178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068AA  0C01 0009              11179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068AE  6E00 000A              11180mmm         BGT     ALPHA_903
000068B2  0601 0030              11181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068B6  6000 0006              11182mmm         BRA     DONE_903
000068BA  0601 0037              11183mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068BE  4E71                   11184mmm DONE_903: NOP
000068C0                         11185mmm         ENDM
000068C0  4E4F                   11186mm         TRAP    #15         ; EXECUTE OUTPUT
000068C2                         11187mm         
000068C2  3212                   11188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068C4  E149                   11189mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068C6  E949                   11190mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000068C8  E049                   11191mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068CA  E849                   11192mm         LSR.W   #4, D1      
000068CC                         11193mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068CC  0C01 0009              11194mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068D0  6E00 000A              11195mmm         BGT     ALPHA_904
000068D4  0601 0030              11196mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068D8  6000 0006              11197mmm         BRA     DONE_904
000068DC  0601 0037              11198mmm ALPHA_904: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068E0  4E71                   11199mmm DONE_904: NOP
000068E2                         11200mmm         ENDM
000068E2  4E4F                   11201mm         TRAP    #15         ; EXECUTE OUTPUT       
000068E4                         11202mm         ENDM 
000068E4  361A                   11203m         MOVE.W  (A2)+, D3
000068E6                         11204mm         ADROUT
000068E6  3212                   11205mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068E8  E049                   11206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068EA  E849                   11207mm         LSR.W   #4, D1      
000068EC                         11208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068EC  0C01 0009              11209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068F0  6E00 000A              11210mmm         BGT     ALPHA_906
000068F4  0601 0030              11211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068F8  6000 0006              11212mmm         BRA     DONE_906
000068FC  0601 0037              11213mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006900  4E71                   11214mmm DONE_906: NOP
00006902                         11215mmm         ENDM
00006902  4E4F                   11216mm         TRAP    #15         ; EXECUTE OUTPUT
00006904                         11217mm         
00006904  3212                   11218mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006906  E949                   11219mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006908  E049                   11220mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000690A  E849                   11221mm         LSR.W   #4, D1      
0000690C                         11222mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000690C  0C01 0009              11223mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006910  6E00 000A              11224mmm         BGT     ALPHA_907
00006914  0601 0030              11225mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006918  6000 0006              11226mmm         BRA     DONE_907
0000691C  0601 0037              11227mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006920  4E71                   11228mmm DONE_907: NOP
00006922                         11229mmm         ENDM
00006922  4E4F                   11230mm         TRAP    #15         ; EXECUTE OUTPUT
00006924                         11231mm         
00006924  3212                   11232mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006926  E149                   11233mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006928  E049                   11234mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000692A  E849                   11235mm         LSR.W   #4, D1      
0000692C                         11236mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000692C  0C01 0009              11237mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006930  6E00 000A              11238mmm         BGT     ALPHA_908
00006934  0601 0030              11239mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006938  6000 0006              11240mmm         BRA     DONE_908
0000693C  0601 0037              11241mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006940  4E71                   11242mmm DONE_908: NOP
00006942                         11243mmm         ENDM
00006942  4E4F                   11244mm         TRAP    #15         ; EXECUTE OUTPUT
00006944                         11245mm         
00006944  3212                   11246mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006946  E149                   11247mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006948  E949                   11248mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000694A  E049                   11249mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000694C  E849                   11250mm         LSR.W   #4, D1      
0000694E                         11251mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000694E  0C01 0009              11252mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006952  6E00 000A              11253mmm         BGT     ALPHA_909
00006956  0601 0030              11254mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000695A  6000 0006              11255mmm         BRA     DONE_909
0000695E  0601 0037              11256mmm ALPHA_909: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006962  4E71                   11257mmm DONE_909: NOP
00006964                         11258mmm         ENDM
00006964  4E4F                   11259mm         TRAP    #15         ; EXECUTE OUTPUT       
00006966                         11260mm         ENDM 
00006966  3605                   11261m         MOVE.W  D5, D3
00006968  6000 01A4              11262m         BRA     COMPLETE_864 
0000696C                         11263m ADRABSOLUTEW_864:     
0000696C  361A                   11264m         MOVE.W  (A2)+, D3
0000696E                         11265mm         PRINTSIGN
0000696E  103C 0006              11266mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006972  323C 0024              11267mm         MOVE.W  #36, D1     ; AN = SIGN
00006976  4E4F                   11268mm         TRAP    #15         ; OUTPUT = SIGN
00006978                         11269mm         ENDM
00006978                         11270mm         ADROUT
00006978  3212                   11271mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000697A  E049                   11272mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000697C  E849                   11273mm         LSR.W   #4, D1      
0000697E                         11274mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000697E  0C01 0009              11275mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006982  6E00 000A              11276mmm         BGT     ALPHA_912
00006986  0601 0030              11277mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000698A  6000 0006              11278mmm         BRA     DONE_912
0000698E  0601 0037              11279mmm ALPHA_912: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006992  4E71                   11280mmm DONE_912: NOP
00006994                         11281mmm         ENDM
00006994  4E4F                   11282mm         TRAP    #15         ; EXECUTE OUTPUT
00006996                         11283mm         
00006996  3212                   11284mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006998  E949                   11285mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000699A  E049                   11286mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000699C  E849                   11287mm         LSR.W   #4, D1      
0000699E                         11288mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000699E  0C01 0009              11289mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069A2  6E00 000A              11290mmm         BGT     ALPHA_913
000069A6  0601 0030              11291mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069AA  6000 0006              11292mmm         BRA     DONE_913
000069AE  0601 0037              11293mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069B2  4E71                   11294mmm DONE_913: NOP
000069B4                         11295mmm         ENDM
000069B4  4E4F                   11296mm         TRAP    #15         ; EXECUTE OUTPUT
000069B6                         11297mm         
000069B6  3212                   11298mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069B8  E149                   11299mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069BA  E049                   11300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069BC  E849                   11301mm         LSR.W   #4, D1      
000069BE                         11302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069BE  0C01 0009              11303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069C2  6E00 000A              11304mmm         BGT     ALPHA_914
000069C6  0601 0030              11305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069CA  6000 0006              11306mmm         BRA     DONE_914
000069CE  0601 0037              11307mmm ALPHA_914: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069D2  4E71                   11308mmm DONE_914: NOP
000069D4                         11309mmm         ENDM
000069D4  4E4F                   11310mm         TRAP    #15         ; EXECUTE OUTPUT
000069D6                         11311mm         
000069D6  3212                   11312mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069D8  E149                   11313mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069DA  E949                   11314mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069DC  E049                   11315mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069DE  E849                   11316mm         LSR.W   #4, D1      
000069E0                         11317mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069E0  0C01 0009              11318mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069E4  6E00 000A              11319mmm         BGT     ALPHA_915
000069E8  0601 0030              11320mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069EC  6000 0006              11321mmm         BRA     DONE_915
000069F0  0601 0037              11322mmm ALPHA_915: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069F4  4E71                   11323mmm DONE_915: NOP
000069F6                         11324mmm         ENDM
000069F6  4E4F                   11325mm         TRAP    #15         ; EXECUTE OUTPUT       
000069F8                         11326mm         ENDM 
000069F8  3605                   11327m         MOVE.W  D5, D3
000069FA  6000 0112              11328m         BRA     COMPLETE_864  
000069FE                         11329m ADRABSOLUTEL_864:  
000069FE  361A                   11330m         MOVE.W  (A2)+, D3
00006A00                         11331mm         PRINTSIGN
00006A00  103C 0006              11332mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006A04  323C 0024              11333mm         MOVE.W  #36, D1     ; AN = SIGN
00006A08  4E4F                   11334mm         TRAP    #15         ; OUTPUT = SIGN
00006A0A                         11335mm         ENDM
00006A0A                         11336mm         ADROUT 
00006A0A  3212                   11337mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A0C  E049                   11338mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A0E  E849                   11339mm         LSR.W   #4, D1      
00006A10                         11340mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A10  0C01 0009              11341mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A14  6E00 000A              11342mmm         BGT     ALPHA_918
00006A18  0601 0030              11343mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A1C  6000 0006              11344mmm         BRA     DONE_918
00006A20  0601 0037              11345mmm ALPHA_918: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A24  4E71                   11346mmm DONE_918: NOP
00006A26                         11347mmm         ENDM
00006A26  4E4F                   11348mm         TRAP    #15         ; EXECUTE OUTPUT
00006A28                         11349mm         
00006A28  3212                   11350mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A2A  E949                   11351mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A2C  E049                   11352mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A2E  E849                   11353mm         LSR.W   #4, D1      
00006A30                         11354mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A30  0C01 0009              11355mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A34  6E00 000A              11356mmm         BGT     ALPHA_919
00006A38  0601 0030              11357mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A3C  6000 0006              11358mmm         BRA     DONE_919
00006A40  0601 0037              11359mmm ALPHA_919: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A44  4E71                   11360mmm DONE_919: NOP
00006A46                         11361mmm         ENDM
00006A46  4E4F                   11362mm         TRAP    #15         ; EXECUTE OUTPUT
00006A48                         11363mm         
00006A48  3212                   11364mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A4A  E149                   11365mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A4C  E049                   11366mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A4E  E849                   11367mm         LSR.W   #4, D1      
00006A50                         11368mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A50  0C01 0009              11369mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A54  6E00 000A              11370mmm         BGT     ALPHA_920
00006A58  0601 0030              11371mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A5C  6000 0006              11372mmm         BRA     DONE_920
00006A60  0601 0037              11373mmm ALPHA_920: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A64  4E71                   11374mmm DONE_920: NOP
00006A66                         11375mmm         ENDM
00006A66  4E4F                   11376mm         TRAP    #15         ; EXECUTE OUTPUT
00006A68                         11377mm         
00006A68  3212                   11378mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A6A  E149                   11379mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A6C  E949                   11380mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A6E  E049                   11381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A70  E849                   11382mm         LSR.W   #4, D1      
00006A72                         11383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A72  0C01 0009              11384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A76  6E00 000A              11385mmm         BGT     ALPHA_921
00006A7A  0601 0030              11386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A7E  6000 0006              11387mmm         BRA     DONE_921
00006A82  0601 0037              11388mmm ALPHA_921: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A86  4E71                   11389mmm DONE_921: NOP
00006A88                         11390mmm         ENDM
00006A88  4E4F                   11391mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A8A                         11392mm         ENDM 
00006A8A  361A                   11393m         MOVE.W  (A2)+, D3
00006A8C                         11394mm         ADROUT
00006A8C  3212                   11395mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A8E  E049                   11396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A90  E849                   11397mm         LSR.W   #4, D1      
00006A92                         11398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A92  0C01 0009              11399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A96  6E00 000A              11400mmm         BGT     ALPHA_923
00006A9A  0601 0030              11401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A9E  6000 0006              11402mmm         BRA     DONE_923
00006AA2  0601 0037              11403mmm ALPHA_923: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AA6  4E71                   11404mmm DONE_923: NOP
00006AA8                         11405mmm         ENDM
00006AA8  4E4F                   11406mm         TRAP    #15         ; EXECUTE OUTPUT
00006AAA                         11407mm         
00006AAA  3212                   11408mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AAC  E949                   11409mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006AAE  E049                   11410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AB0  E849                   11411mm         LSR.W   #4, D1      
00006AB2                         11412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AB2  0C01 0009              11413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AB6  6E00 000A              11414mmm         BGT     ALPHA_924
00006ABA  0601 0030              11415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ABE  6000 0006              11416mmm         BRA     DONE_924
00006AC2  0601 0037              11417mmm ALPHA_924: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AC6  4E71                   11418mmm DONE_924: NOP
00006AC8                         11419mmm         ENDM
00006AC8  4E4F                   11420mm         TRAP    #15         ; EXECUTE OUTPUT
00006ACA                         11421mm         
00006ACA  3212                   11422mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006ACC  E149                   11423mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ACE  E049                   11424mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AD0  E849                   11425mm         LSR.W   #4, D1      
00006AD2                         11426mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AD2  0C01 0009              11427mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AD6  6E00 000A              11428mmm         BGT     ALPHA_925
00006ADA  0601 0030              11429mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ADE  6000 0006              11430mmm         BRA     DONE_925
00006AE2  0601 0037              11431mmm ALPHA_925: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AE6  4E71                   11432mmm DONE_925: NOP
00006AE8                         11433mmm         ENDM
00006AE8  4E4F                   11434mm         TRAP    #15         ; EXECUTE OUTPUT
00006AEA                         11435mm         
00006AEA  3212                   11436mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AEC  E149                   11437mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AEE  E949                   11438mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006AF0  E049                   11439mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AF2  E849                   11440mm         LSR.W   #4, D1      
00006AF4                         11441mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AF4  0C01 0009              11442mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AF8  6E00 000A              11443mmm         BGT     ALPHA_926
00006AFC  0601 0030              11444mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B00  6000 0006              11445mmm         BRA     DONE_926
00006B04  0601 0037              11446mmm ALPHA_926: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B08  4E71                   11447mmm DONE_926: NOP
00006B0A                         11448mmm         ENDM
00006B0A  4E4F                   11449mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B0C                         11450mm         ENDM 
00006B0C  3605                   11451m         MOVE.W  D5, D3
00006B0E                         11452m 
00006B0E                         11453m COMPLETE_864:  ; OPCODE HAS BEEN VERIFIED
00006B0E                         11454m         ENDM
00006B0E  4E75                   11455          RTS                 ; Return from decodeJSR subroutine
00006B10                         11456  
00006B10                         11457  
00006B10                         11458  ; ------------------------------------------------------------
00006B10                         11459  ; 15. "decodeRTS" subroutine
00006B10                         11460  ; AUTHOR
00006B10                         11461  ;
00006B10                         11462  ; TODO: DESCRIPTION
00006B10                         11463  ; ------------------------------------------------------------
00006B10                         11464  decodeRTS:
00006B10                         11465m         verifyOpcode    pRTS, (A2)
00006B10  43F8 0228              11466m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006B14  3612                   11467m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B16  123C 000F              11468m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B1A                         11469m         
00006B1A                         11470m LOOP_927: 
00006B1A  0C11 0030              11471m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B1E  6700 000E              11472m         BEQ     CHECKFOR0_927
00006B22  0C11 0031              11473m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B26  6700 0010              11474m         BEQ     CHECKFOR1_927
00006B2A  6000 0012              11475m         BRA     NEXT_927      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B2E                         11476m         
00006B2E                         11477m CHECKFOR0_927: 
00006B2E  0303                   11478m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B30  6600 00A4              11479m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B34  6000 0008              11480m         BRA     NEXT_927
00006B38                         11481m 
00006B38                         11482m CHECKFOR1_927:
00006B38  0303                   11483m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006B3A  6700 009A              11484m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006B3E                         11485m 
00006B3E                         11486m NEXT_927: 
00006B3E  B23C 0000              11487m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006B42  6700 0008              11488m         BEQ     COMPLETE_927  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B46  5301                   11489m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B48  1819                   11490m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B4A  60CE                   11491m         BRA     LOOP_927      ; BEGIN LOOP AGAIN
00006B4C                         11492m 
00006B4C                         11493m COMPLETE_927:  ; OPCODE HAS BEEN VERIFIED
00006B4C                         11494m         ENDM
00006B4C  43F8 00AD              11495          LEA     oRTS, A1     
00006B50  103C 000E              11496          MOVE.B  #14,D0          
00006B54  4E4F                   11497          TRAP    #15
00006B56  4E75                   11498          RTS                 ; Return from decodeRTS subroutine
00006B58                         11499  
00006B58                         11500  
00006B58                         11501  ; ------------------------------------------------------------
00006B58                         11502  ; 16. "decodeBRA" subroutine
00006B58                         11503  ; AUTHOR
00006B58                         11504  ;
00006B58                         11505  ; TODO: DESCRIPTION
00006B58                         11506  ; ------------------------------------------------------------
00006B58                         11507  decodeBRA:
00006B58                         11508m         verifyOpcode    pBRA, (A2)
00006B58  43F8 0239              11509m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006B5C  3612                   11510m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B5E  123C 000F              11511m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B62                         11512m         
00006B62                         11513m LOOP_928: 
00006B62  0C11 0030              11514m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B66  6700 000E              11515m         BEQ     CHECKFOR0_928
00006B6A  0C11 0031              11516m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B6E  6700 0010              11517m         BEQ     CHECKFOR1_928
00006B72  6000 0012              11518m         BRA     NEXT_928      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B76                         11519m         
00006B76                         11520m CHECKFOR0_928: 
00006B76  0303                   11521m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B78  6600 005C              11522m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B7C  6000 0008              11523m         BRA     NEXT_928
00006B80                         11524m 
00006B80                         11525m CHECKFOR1_928:
00006B80  0303                   11526m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006B82  6700 0052              11527m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006B86                         11528m 
00006B86                         11529m NEXT_928: 
00006B86  B23C 0000              11530m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006B8A  6700 0008              11531m         BEQ     COMPLETE_928  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B8E  5301                   11532m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B90  1819                   11533m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B92  60CE                   11534m         BRA     LOOP_928      ; BEGIN LOOP AGAIN
00006B94                         11535m 
00006B94                         11536m COMPLETE_928:  ; OPCODE HAS BEEN VERIFIED
00006B94                         11537m         ENDM
00006B94  43F8 00B1              11538          LEA     oBRA, A1     
00006B98  103C 000E              11539          MOVE.B  #14,D0          
00006B9C  4E4F                   11540          TRAP    #15
00006B9E                         11541m         space
00006B9E  43F8 00D2              11542m         LEA     OBLANK, A1
00006BA2  103C 000E              11543m         MOVE.B  #14,D0          
00006BA6  4E4F                   11544m         TRAP    #15
00006BA8                         11545m         ENDM
00006BA8                         11546m         printSign
00006BA8  103C 0006              11547m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006BAC  323C 0024              11548m         MOVE.W  #36, D1     ; AN = SIGN
00006BB0  4E4F                   11549m         TRAP    #15         ; OUTPUT = SIGN
00006BB2                         11550m         ENDM
00006BB2                         11551m         printBranch     (A2)
00006BB2  3612                   11552m         MOVE.W (A2), D3
00006BB4  4241                   11553m         CLR     D1
00006BB6  D203                   11554m         ADD.B   D3, D1
00006BB8                         11555mm         CONVERTATOH D1
00006BB8  0C01 0039              11556mm         CMPI.B  #$39, D1
00006BBC  6E00 000A              11557mm         BGT     ALPHA_932
00006BC0  0401 0030              11558mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00006BC4  6000 0006              11559mm         BRA     DONE_932
00006BC8  0401 0037              11560mm ALPHA_932: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006BCC  4E71                   11561mm DONE_932: NOP
00006BCE                         11562mm         ENDM
00006BCE  103C 0003              11563m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006BD2  4E4F                   11564m         TRAP    #15
00006BD4                         11565m         ENDM        
00006BD4  4E75                   11566          RTS                 ; Return from decodeBRA subroutine
00006BD6                         11567  
00006BD6                         11568  
00006BD6                         11569  
00006BD6                         11570  
00006BD6                         11571  ; ========================================================================
00006BD6                         11572  ; Generic Helper Functions
00006BD6                         11573  ; 
00006BD6                         11574  ; Set of subroutines which do various tasks which are repeated frequently.
00006BD6                         11575  ; Each helper function should be commented with required input and output.
00006BD6                         11576  ; 
00006BD6                         11577  ; If input is required, request through D0, D1, etc
00006BD6                         11578  ; Return using D0
00006BD6                         11579  ; ========================================================================
00006BD6                         11580  
00006BD6                         11581  ; ------------------------------------------------------------
00006BD6                         11582  ; outputData
00006BD6                         11583  ; Jonathan
00006BD6                         11584  ;
00006BD6                         11585  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00006BD6                         11586  ; ------------------------------------------------------------
00006BD6                         11587  outputData:
00006BD6  103C 0006              11588          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00006BDA  323C 003D              11589          MOVE.W  #61, D1     ; An = sign
00006BDE  4E4F                   11590          TRAP    #15         ; Output = sign
00006BE0                         11591          
00006BE0  3212                   11592          MOVE.W  (A2), D1    ; Move A2 into D1
00006BE2  E049                   11593          LSR.W   #8, D1      ; Get the first hex digit of D1
00006BE4  E849                   11594          LSR.W   #4, D1      
00006BE6                         11595m         ConvertHtoA D1      ; Convert D1 to a character
00006BE6  0C01 0009              11596m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BEA  6E00 000A              11597m         BGT     ALPHA_933
00006BEE  0601 0030              11598m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BF2  6000 0006              11599m         BRA     DONE_933
00006BF6  0601 0037              11600m ALPHA_933: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BFA  4E71                   11601m DONE_933: NOP
00006BFC                         11602m         ENDM
00006BFC  4E4F                   11603          TRAP    #15         ; Execute output
00006BFE                         11604          
00006BFE  3212                   11605          MOVE.W  (A2), D1    ; Move A2 into D1
00006C00  E949                   11606          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00006C02  E049                   11607          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C04  E849                   11608          LSR.W   #4, D1      
00006C06                         11609m         ConvertHtoA D1      ; Convert D1 to a character
00006C06  0C01 0009              11610m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C0A  6E00 000A              11611m         BGT     ALPHA_934
00006C0E  0601 0030              11612m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C12  6000 0006              11613m         BRA     DONE_934
00006C16  0601 0037              11614m ALPHA_934: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C1A  4E71                   11615m DONE_934: NOP
00006C1C                         11616m         ENDM
00006C1C  4E4F                   11617          TRAP    #15         ; Execute output
00006C1E                         11618          
00006C1E  3212                   11619          MOVE.W  (A2), D1    ; Move A2 into D1
00006C20  E149                   11620          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006C22  E049                   11621          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C24  E849                   11622          LSR.W   #4, D1      
00006C26                         11623m         ConvertHtoA D1      ; Convert D1 to a character
00006C26  0C01 0009              11624m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C2A  6E00 000A              11625m         BGT     ALPHA_935
00006C2E  0601 0030              11626m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C32  6000 0006              11627m         BRA     DONE_935
00006C36  0601 0037              11628m ALPHA_935: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C3A  4E71                   11629m DONE_935: NOP
00006C3C                         11630m         ENDM
00006C3C  4E4F                   11631          TRAP    #15         ; Execute output
00006C3E                         11632          
00006C3E  3212                   11633          MOVE.W  (A2), D1    ; Move A2 into D1
00006C40  E149                   11634          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006C42  E949                   11635          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00006C44  E049                   11636          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C46  E849                   11637          LSR.W   #4, D1      
00006C48                         11638m         ConvertHtoA D1      ; Convert D1 to a character
00006C48  0C01 0009              11639m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C4C  6E00 000A              11640m         BGT     ALPHA_936
00006C50  0601 0030              11641m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C54  6000 0006              11642m         BRA     DONE_936
00006C58  0601 0037              11643m ALPHA_936: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C5C  4E71                   11644m DONE_936: NOP
00006C5E                         11645m         ENDM
00006C5E  4E4F                   11646          TRAP    #15         ; Execute output
00006C60  4E75                   11647          RTS
00006C62                         11648  
00006C62                         11649  
00006C62                         11650  
00006C62                         11651  
00006C62                         11652  
00006C62                         11653  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00006C62                         11654                              ; End of Code
00006C62                         11655          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_155  22AE
ADRABSOLUTEDST_19   158A
ADRABSOLUTEDST_219  2882
ADRABSOLUTEDST_291  2FB0
ADRABSOLUTEDST_355  3584
ADRABSOLUTEDST_423  3BFC
ADRABSOLUTEDST_491  4274
ADRABSOLUTEDST_558  48B8
ADRABSOLUTEDST_630  4FE6
ADRABSOLUTEDST_694  55BA
ADRABSOLUTEDST_762  5C2C
ADRABSOLUTEDST_84   1B64
ADRABSOLUTEDST_864  6794
ADRABSOLUTEL_155    2518
ADRABSOLUTEL_19     17F4
ADRABSOLUTEL_219    2AEC
ADRABSOLUTEL_291    321A
ADRABSOLUTEL_355    37EE
ADRABSOLUTEL_423    3E66
ADRABSOLUTEL_491    44DE
ADRABSOLUTEL_558    4B22
ADRABSOLUTEL_630    5250
ADRABSOLUTEL_694    5824
ADRABSOLUTEL_762    5E96
ADRABSOLUTEL_84     1DCE
ADRABSOLUTEL_864    69FE
ADRABSOLUTEW_155    2486
ADRABSOLUTEW_19     1762
ADRABSOLUTEW_219    2A5A
ADRABSOLUTEW_291    3188
ADRABSOLUTEW_355    375C
ADRABSOLUTEW_423    3DD4
ADRABSOLUTEW_491    444C
ADRABSOLUTEW_558    4A90
ADRABSOLUTEW_630    51BE
ADRABSOLUTEW_694    5792
ADRABSOLUTEW_762    5E04
ADRABSOLUTEW_84     1D3C
ADRABSOLUTEW_864    696C
ADRABSOLUTE_155     2290
ADRABSOLUTE_19      156C
ADRABSOLUTE_219     2864
ADRABSOLUTE_291     2F92
ADRABSOLUTE_355     3566
ADRABSOLUTE_423     3BDE
ADRABSOLUTE_491     4256
ADRABSOLUTE_558     489A
ADRABSOLUTE_630     4FC8
ADRABSOLUTE_694     559C
ADRABSOLUTE_762     5C0E
ADRABSOLUTE_84      1B46
ADRABSOLUTE_864     6776
ADRDEST_154         2066
ADRDEST_18          1342
ADRDEST_218         263A
ADRDEST_290         2D68
ADRDEST_354         333C
ADRDEST_422         39B4
ADRDEST_490         402C
ADRDEST_557         4670
ADRDEST_629         4D9E
ADRDEST_693         5372
ADRDEST_761         59E4
ADRDEST_83          191C
ADRDEST_863         654C
ADRIMMEDIATEL_155   2368
ADRIMMEDIATEL_19    1644
ADRIMMEDIATEL_219   293C
ADRIMMEDIATEL_291   306A
ADRIMMEDIATEL_355   363E
ADRIMMEDIATEL_423   3CB6
ADRIMMEDIATEL_491   432E
ADRIMMEDIATEL_558   4972
ADRIMMEDIATEL_630   50A0
ADRIMMEDIATEL_694   5674
ADRIMMEDIATEL_762   5CE6
ADRIMMEDIATEL_84    1C1E
ADRIMMEDIATEL_864   684E
ADRIMMEDIATEW_155   22CC
ADRIMMEDIATEW_19    15A8
ADRIMMEDIATEW_219   28A0
ADRIMMEDIATEW_291   2FCE
ADRIMMEDIATEW_355   35A2
ADRIMMEDIATEW_423   3C1A
ADRIMMEDIATEW_491   4292
ADRIMMEDIATEW_558   48D6
ADRIMMEDIATEW_630   5004
ADRIMMEDIATEW_694   55D8
ADRIMMEDIATEW_762   5C4A
ADRIMMEDIATEW_84    1B82
ADRIMMEDIATEW_864   67B2
ADRIMMEDIATE_155    22C4
ADRIMMEDIATE_19     15A0
ADRIMMEDIATE_219    2898
ADRIMMEDIATE_291    2FC6
ADRIMMEDIATE_355    359A
ADRIMMEDIATE_423    3C12
ADRIMMEDIATE_491    428A
ADRIMMEDIATE_558    48CE
ADRIMMEDIATE_630    4FFC
ADRIMMEDIATE_694    55D0
ADRIMMEDIATE_762    5C42
ADRIMMEDIATE_84     1B7A
ADRIMMEDIATE_864    67AA
ADROUT              580
ADRREGDIRECTDEST_155  20F0
ADRREGDIRECTDEST_19  13CC
ADRREGDIRECTDEST_219  26C4
ADRREGDIRECTDEST_291  2DF2
ADRREGDIRECTDEST_355  33C6
ADRREGDIRECTDEST_423  3A3E
ADRREGDIRECTDEST_491  40B6
ADRREGDIRECTDEST_558  46FA
ADRREGDIRECTDEST_630  4E28
ADRREGDIRECTDEST_694  53FC
ADRREGDIRECTDEST_762  5A6E
ADRREGDIRECTDEST_84  19A6
ADRREGDIRECTDEST_864  65D6
ADRREGDIRECTSRC_155  210C
ADRREGDIRECTSRC_19  13E8
ADRREGDIRECTSRC_219  26E0
ADRREGDIRECTSRC_291  2E0E
ADRREGDIRECTSRC_355  33E2
ADRREGDIRECTSRC_423  3A5A
ADRREGDIRECTSRC_491  40D2
ADRREGDIRECTSRC_558  4716
ADRREGDIRECTSRC_630  4E44
ADRREGDIRECTSRC_694  5418
ADRREGDIRECTSRC_762  5A8A
ADRREGDIRECTSRC_84  19C2
ADRREGDIRECTSRC_864  65F2
ADRREGDIRECT_155    20E8
ADRREGDIRECT_19     13C4
ADRREGDIRECT_219    26BC
ADRREGDIRECT_291    2DEA
ADRREGDIRECT_355    33BE
ADRREGDIRECT_423    3A36
ADRREGDIRECT_491    40AE
ADRREGDIRECT_558    46F2
ADRREGDIRECT_630    4E20
ADRREGDIRECT_694    53F4
ADRREGDIRECT_762    5A66
ADRREGDIRECT_84     199E
ADRREGDIRECT_864    65CE
ADRREGINDIRECTDEST_155  2132
ADRREGINDIRECTDEST_19  140E
ADRREGINDIRECTDEST_219  2706
ADRREGINDIRECTDEST_291  2E34
ADRREGINDIRECTDEST_355  3408
ADRREGINDIRECTDEST_423  3A80
ADRREGINDIRECTDEST_491  40F8
ADRREGINDIRECTDEST_558  473C
ADRREGINDIRECTDEST_630  4E6A
ADRREGINDIRECTDEST_694  543E
ADRREGINDIRECTDEST_762  5AB0
ADRREGINDIRECTDEST_84  19E8
ADRREGINDIRECTDEST_864  6618
ADRREGINDIRECTSRC_155  2162
ADRREGINDIRECTSRC_19  143E
ADRREGINDIRECTSRC_219  2736
ADRREGINDIRECTSRC_291  2E64
ADRREGINDIRECTSRC_355  3438
ADRREGINDIRECTSRC_423  3AB0
ADRREGINDIRECTSRC_491  4128
ADRREGINDIRECTSRC_558  476C
ADRREGINDIRECTSRC_630  4E9A
ADRREGINDIRECTSRC_694  546E
ADRREGINDIRECTSRC_762  5AE0
ADRREGINDIRECTSRC_84  1A18
ADRREGINDIRECTSRC_864  6648
ADRREGINDIRECT_155  212A
ADRREGINDIRECT_19   1406
ADRREGINDIRECT_219  26FE
ADRREGINDIRECT_291  2E2C
ADRREGINDIRECT_355  3400
ADRREGINDIRECT_423  3A78
ADRREGINDIRECT_491  40F0
ADRREGINDIRECT_558  4734
ADRREGINDIRECT_630  4E62
ADRREGINDIRECT_694  5436
ADRREGINDIRECT_762  5AA8
ADRREGINDIRECT_84   19E0
ADRREGINDIRECT_864  6610
ADRREGPOSTINCDEST_155  219C
ADRREGPOSTINCDEST_19  1478
ADRREGPOSTINCDEST_219  2770
ADRREGPOSTINCDEST_291  2E9E
ADRREGPOSTINCDEST_355  3472
ADRREGPOSTINCDEST_423  3AEA
ADRREGPOSTINCDEST_491  4162
ADRREGPOSTINCDEST_558  47A6
ADRREGPOSTINCDEST_630  4ED4
ADRREGPOSTINCDEST_694  54A8
ADRREGPOSTINCDEST_762  5B1A
ADRREGPOSTINCDEST_84  1A52
ADRREGPOSTINCDEST_864  6682
ADRREGPOSTINCSRC_155  21D6
ADRREGPOSTINCSRC_19  14B2
ADRREGPOSTINCSRC_219  27AA
ADRREGPOSTINCSRC_291  2ED8
ADRREGPOSTINCSRC_355  34AC
ADRREGPOSTINCSRC_423  3B24
ADRREGPOSTINCSRC_491  419C
ADRREGPOSTINCSRC_558  47E0
ADRREGPOSTINCSRC_630  4F0E
ADRREGPOSTINCSRC_694  54E2
ADRREGPOSTINCSRC_762  5B54
ADRREGPOSTINCSRC_84  1A8C
ADRREGPOSTINCSRC_864  66BC
ADRREGPOSTINC_155   2194
ADRREGPOSTINC_19    1470
ADRREGPOSTINC_219   2768
ADRREGPOSTINC_291   2E96
ADRREGPOSTINC_355   346A
ADRREGPOSTINC_423   3AE2
ADRREGPOSTINC_491   415A
ADRREGPOSTINC_558   479E
ADRREGPOSTINC_630   4ECC
ADRREGPOSTINC_694   54A0
ADRREGPOSTINC_762   5B12
ADRREGPOSTINC_84    1A4A
ADRREGPOSTINC_864   667A
ADRREGPREDECDEST_155  221A
ADRREGPREDECDEST_19  14F6
ADRREGPREDECDEST_219  27EE
ADRREGPREDECDEST_291  2F1C
ADRREGPREDECDEST_355  34F0
ADRREGPREDECDEST_423  3B68
ADRREGPREDECDEST_491  41E0
ADRREGPREDECDEST_558  4824
ADRREGPREDECDEST_630  4F52
ADRREGPREDECDEST_694  5526
ADRREGPREDECDEST_762  5B98
ADRREGPREDECDEST_84  1AD0
ADRREGPREDECDEST_864  6700
ADRREGPREDECSRC_155  2254
ADRREGPREDECSRC_19  1530
ADRREGPREDECSRC_219  2828
ADRREGPREDECSRC_291  2F56
ADRREGPREDECSRC_355  352A
ADRREGPREDECSRC_423  3BA2
ADRREGPREDECSRC_491  421A
ADRREGPREDECSRC_558  485E
ADRREGPREDECSRC_630  4F8C
ADRREGPREDECSRC_694  5560
ADRREGPREDECSRC_762  5BD2
ADRREGPREDECSRC_84  1B0A
ADRREGPREDECSRC_864  673A
ADRREGPREDEC_155    2212
ADRREGPREDEC_19     14EE
ADRREGPREDEC_219    27E6
ADRREGPREDEC_291    2F14
ADRREGPREDEC_355    34E8
ADRREGPREDEC_423    3B60
ADRREGPREDEC_491    41D8
ADRREGPREDEC_558    481C
ADRREGPREDEC_630    4F4A
ADRREGPREDEC_694    551E
ADRREGPREDEC_762    5B90
ADRREGPREDEC_84     1AC8
ADRREGPREDEC_864    66F8
ADRSOURCE_154       2070
ADRSOURCE_18        134C
ADRSOURCE_218       2644
ADRSOURCE_290       2D72
ADRSOURCE_354       3346
ADRSOURCE_422       39BE
ADRSOURCE_490       4036
ADRSOURCE_557       467A
ADRSOURCE_629       4DA8
ADRSOURCE_693       537C
ADRSOURCE_761       59EE
ADRSOURCE_83        1926
ADRSOURCE_863       6556
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_114           1BAE
ALPHA_115           1BCE
ALPHA_116           1BEE
ALPHA_117           1C10
ALPHA_121           1C4A
ALPHA_122           1C6A
ALPHA_123           1C8A
ALPHA_124           1CAC
ALPHA_126           1CCC
ALPHA_127           1CEC
ALPHA_128           1D0C
ALPHA_129           1D2E
ALPHA_132           1D5E
ALPHA_133           1D7E
ALPHA_134           1D9E
ALPHA_135           1DC0
ALPHA_138           1DF0
ALPHA_139           1E10
ALPHA_140           1E30
ALPHA_141           1E52
ALPHA_143           1E72
ALPHA_144           1E92
ALPHA_145           1EB2
ALPHA_146           1ED4
ALPHA_185           22F8
ALPHA_186           2318
ALPHA_187           2338
ALPHA_188           235A
ALPHA_192           2394
ALPHA_193           23B4
ALPHA_194           23D4
ALPHA_195           23F6
ALPHA_197           2416
ALPHA_198           2436
ALPHA_199           2456
ALPHA_2             1020
ALPHA_200           2478
ALPHA_203           24A8
ALPHA_204           24C8
ALPHA_205           24E8
ALPHA_206           250A
ALPHA_209           253A
ALPHA_210           255A
ALPHA_211           257A
ALPHA_212           259C
ALPHA_214           25BC
ALPHA_215           25DC
ALPHA_216           25FC
ALPHA_217           261E
ALPHA_249           28CC
ALPHA_250           28EC
ALPHA_251           290C
ALPHA_252           292E
ALPHA_256           2968
ALPHA_257           2988
ALPHA_258           29A8
ALPHA_259           29CA
ALPHA_261           29EA
ALPHA_262           2A0A
ALPHA_263           2A2A
ALPHA_264           2A4C
ALPHA_267           2A7C
ALPHA_268           2A9C
ALPHA_269           2ABC
ALPHA_270           2ADE
ALPHA_273           2B0E
ALPHA_274           2B2E
ALPHA_275           2B4E
ALPHA_276           2B70
ALPHA_278           2B90
ALPHA_279           2BB0
ALPHA_280           2BD0
ALPHA_281           2BF2
ALPHA_3             1042
ALPHA_321           2FFA
ALPHA_322           301A
ALPHA_323           303A
ALPHA_324           305C
ALPHA_328           3096
ALPHA_329           30B6
ALPHA_330           30D6
ALPHA_331           30F8
ALPHA_333           3118
ALPHA_334           3138
ALPHA_335           3158
ALPHA_336           317A
ALPHA_339           31AA
ALPHA_340           31CA
ALPHA_341           31EA
ALPHA_342           320C
ALPHA_345           323C
ALPHA_346           325C
ALPHA_347           327C
ALPHA_348           329E
ALPHA_350           32BE
ALPHA_351           32DE
ALPHA_352           32FE
ALPHA_353           3320
ALPHA_385           35CE
ALPHA_386           35EE
ALPHA_387           360E
ALPHA_388           3630
ALPHA_392           366A
ALPHA_393           368A
ALPHA_394           36AA
ALPHA_395           36CC
ALPHA_397           36EC
ALPHA_398           370C
ALPHA_399           372C
ALPHA_4             1062
ALPHA_400           374E
ALPHA_403           377E
ALPHA_404           379E
ALPHA_405           37BE
ALPHA_406           37E0
ALPHA_409           3810
ALPHA_410           3830
ALPHA_411           3850
ALPHA_412           3872
ALPHA_414           3892
ALPHA_415           38B2
ALPHA_416           38D2
ALPHA_417           38F4
ALPHA_453           3C46
ALPHA_454           3C66
ALPHA_455           3C86
ALPHA_456           3CA8
ALPHA_460           3CE2
ALPHA_461           3D02
ALPHA_462           3D22
ALPHA_463           3D44
ALPHA_465           3D64
ALPHA_466           3D84
ALPHA_467           3DA4
ALPHA_468           3DC6
ALPHA_471           3DF6
ALPHA_472           3E16
ALPHA_473           3E36
ALPHA_474           3E58
ALPHA_477           3E88
ALPHA_478           3EA8
ALPHA_479           3EC8
ALPHA_480           3EEA
ALPHA_482           3F0A
ALPHA_483           3F2A
ALPHA_484           3F4A
ALPHA_485           3F6C
ALPHA_49            15D4
ALPHA_5             1082
ALPHA_50            15F4
ALPHA_51            1614
ALPHA_52            1636
ALPHA_521           42BE
ALPHA_522           42DE
ALPHA_523           42FE
ALPHA_524           4320
ALPHA_528           435A
ALPHA_529           437A
ALPHA_530           439A
ALPHA_531           43BC
ALPHA_533           43DC
ALPHA_534           43FC
ALPHA_535           441C
ALPHA_536           443E
ALPHA_539           446E
ALPHA_540           448E
ALPHA_541           44AE
ALPHA_542           44D0
ALPHA_545           4500
ALPHA_546           4520
ALPHA_547           4540
ALPHA_548           4562
ALPHA_550           4582
ALPHA_551           45A2
ALPHA_552           45C2
ALPHA_553           45E4
ALPHA_56            1670
ALPHA_57            1690
ALPHA_58            16B0
ALPHA_588           4902
ALPHA_589           4922
ALPHA_59            16D2
ALPHA_590           4942
ALPHA_591           4964
ALPHA_595           499E
ALPHA_596           49BE
ALPHA_597           49DE
ALPHA_598           4A00
ALPHA_600           4A20
ALPHA_601           4A40
ALPHA_602           4A60
ALPHA_603           4A82
ALPHA_606           4AB2
ALPHA_607           4AD2
ALPHA_608           4AF2
ALPHA_609           4B14
ALPHA_61            16F2
ALPHA_612           4B44
ALPHA_613           4B64
ALPHA_614           4B84
ALPHA_615           4BA6
ALPHA_617           4BC6
ALPHA_618           4BE6
ALPHA_619           4C06
ALPHA_62            1712
ALPHA_620           4C28
ALPHA_63            1732
ALPHA_64            1754
ALPHA_660           5030
ALPHA_661           5050
ALPHA_662           5070
ALPHA_663           5092
ALPHA_667           50CC
ALPHA_668           50EC
ALPHA_669           510C
ALPHA_67            1784
ALPHA_670           512E
ALPHA_672           514E
ALPHA_673           516E
ALPHA_674           518E
ALPHA_675           51B0
ALPHA_678           51E0
ALPHA_679           5200
ALPHA_68            17A4
ALPHA_680           5220
ALPHA_681           5242
ALPHA_684           5272
ALPHA_685           5292
ALPHA_686           52B2
ALPHA_687           52D4
ALPHA_689           52F4
ALPHA_69            17C4
ALPHA_690           5314
ALPHA_691           5334
ALPHA_692           5356
ALPHA_70            17E6
ALPHA_724           5604
ALPHA_725           5624
ALPHA_726           5644
ALPHA_727           5666
ALPHA_73            1816
ALPHA_731           56A0
ALPHA_732           56C0
ALPHA_733           56E0
ALPHA_734           5702
ALPHA_736           5722
ALPHA_737           5742
ALPHA_738           5762
ALPHA_739           5784
ALPHA_74            1836
ALPHA_742           57B4
ALPHA_743           57D4
ALPHA_744           57F4
ALPHA_745           5816
ALPHA_748           5846
ALPHA_749           5866
ALPHA_75            1856
ALPHA_750           5886
ALPHA_751           58A8
ALPHA_753           58C8
ALPHA_754           58E8
ALPHA_755           5908
ALPHA_756           592A
ALPHA_76            1878
ALPHA_78            1898
ALPHA_79            18B8
ALPHA_792           5C76
ALPHA_793           5C96
ALPHA_794           5CB6
ALPHA_795           5CD8
ALPHA_799           5D12
ALPHA_8             10B8
ALPHA_80            18D8
ALPHA_800           5D32
ALPHA_801           5D52
ALPHA_802           5D74
ALPHA_804           5D94
ALPHA_805           5DB4
ALPHA_806           5DD4
ALPHA_807           5DF6
ALPHA_81            18FA
ALPHA_810           5E26
ALPHA_811           5E46
ALPHA_812           5E66
ALPHA_813           5E88
ALPHA_816           5EB8
ALPHA_817           5ED8
ALPHA_818           5EF8
ALPHA_819           5F1A
ALPHA_821           5F3A
ALPHA_822           5F5A
ALPHA_823           5F7A
ALPHA_824           5F9C
ALPHA_851           63E4
ALPHA_856           6462
ALPHA_861           64E0
ALPHA_894           67DE
ALPHA_895           67FE
ALPHA_896           681E
ALPHA_897           6840
ALPHA_9             10DA
ALPHA_901           687A
ALPHA_902           689A
ALPHA_903           68BA
ALPHA_904           68DC
ALPHA_906           68FC
ALPHA_907           691C
ALPHA_908           693C
ALPHA_909           695E
ALPHA_912           698E
ALPHA_913           69AE
ALPHA_914           69CE
ALPHA_915           69F0
ALPHA_918           6A20
ALPHA_919           6A40
ALPHA_920           6A60
ALPHA_921           6A82
ALPHA_923           6AA2
ALPHA_924           6AC2
ALPHA_925           6AE2
ALPHA_926           6B04
ALPHA_932           6BC8
ALPHA_933           6BF6
ALPHA_934           6C16
ALPHA_935           6C36
ALPHA_936           6C58
AREG_M              61EA
AREG_R              62BE
ARIREG              1264
ARISHIFT            1258
ASL_M               61D2
ASL_R               62A6
ASR_M               61E0
ASR_R               62B4
CHECKFOR0_147       1EFE
CHECKFOR0_148       1F3C
CHECKFOR0_15        1286
CHECKFOR0_16        12CE
CHECKFOR0_284       2C3E
CHECKFOR0_420       3940
CHECKFOR0_488       3FB8
CHECKFOR0_556       4630
CHECKFOR0_623       4C74
CHECKFOR0_759       5976
CHECKFOR0_825       5FC6
CHECKFOR0_830       609A
CHECKFOR0_835       616E
CHECKFOR0_836       61AC
CHECKFOR0_841       6280
CHECKFOR0_846       6354
CHECKFOR0_847       6392
CHECKFOR0_852       6410
CHECKFOR0_857       648E
CHECKFOR0_862       650C
CHECKFOR0_927       6B2E
CHECKFOR0_928       6B76
CHECKFOR1_147       1F08
CHECKFOR1_148       1F46
CHECKFOR1_15        1290
CHECKFOR1_16        12D8
CHECKFOR1_284       2C48
CHECKFOR1_420       394A
CHECKFOR1_488       3FC2
CHECKFOR1_556       463A
CHECKFOR1_623       4C7E
CHECKFOR1_759       5980
CHECKFOR1_825       5FD0
CHECKFOR1_830       60A4
CHECKFOR1_835       6178
CHECKFOR1_836       61B6
CHECKFOR1_841       628A
CHECKFOR1_846       635E
CHECKFOR1_847       639C
CHECKFOR1_852       641A
CHECKFOR1_857       6498
CHECKFOR1_862       6516
CHECKFOR1_927       6B38
CHECKFOR1_928       6B80
CHECKFORB_17        12FA
CHECKFORB_421       396C
CHECKFORB_489       3FE4
CHECKFORB_760       59A0
CHECKFORB_826       6006
CHECKFORB_831       60DA
CHECKFORB_837       61EC
CHECKFORB_842       62C0
CHECKFORDESTDN_149  1F6C
CHECKFORDESTDN_285  2C6E
CHECKFORDESTDN_624  4CA4
CHECKFORL_17        1326
CHECKFORL_421       3998
CHECKFORL_489       4010
CHECKFORL_760       59CC
CHECKFORL_826       6032
CHECKFORL_831       6106
CHECKFORL_837       6218
CHECKFORL_842       62EC
CHECKFORSRCDN_149   1FB8
CHECKFORSRCDN_285   2CBA
CHECKFORSRCDN_624   4CF0
CHECKFORW_17        1310
CHECKFORW_421       3982
CHECKFORW_489       3FFA
CHECKFORW_760       59B6
CHECKFORW_826       601C
CHECKFORW_831       60F0
CHECKFORW_837       6202
CHECKFORW_842       62D6
COMPLETE_147        1F1C
COMPLETE_148        1F5A
COMPLETE_149        2046
COMPLETE_15         12A4
COMPLETE_154        2078
COMPLETE_155        2628
COMPLETE_16         12EC
COMPLETE_17         1334
COMPLETE_18         1354
COMPLETE_19         1904
COMPLETE_218        264C
COMPLETE_219        2BFC
COMPLETE_284        2C5C
COMPLETE_285        2D48
COMPLETE_290        2D7A
COMPLETE_291        332A
COMPLETE_354        334E
COMPLETE_355        38FE
COMPLETE_420        395E
COMPLETE_421        39A6
COMPLETE_422        39C6
COMPLETE_423        3F76
COMPLETE_488        3FD6
COMPLETE_489        401E
COMPLETE_490        403E
COMPLETE_491        45EE
COMPLETE_556        464E
COMPLETE_557        4682
COMPLETE_558        4C32
COMPLETE_623        4C92
COMPLETE_624        4D7E
COMPLETE_629        4DB0
COMPLETE_630        5360
COMPLETE_693        5384
COMPLETE_694        5934
COMPLETE_759        5994
COMPLETE_760        59D6
COMPLETE_761        59F6
COMPLETE_762        5FA6
COMPLETE_825        5FE4
COMPLETE_826        603C
COMPLETE_83         192E
COMPLETE_830        60B8
COMPLETE_831        6110
COMPLETE_835        618C
COMPLETE_836        61CA
COMPLETE_837        6222
COMPLETE_84         1EDE
COMPLETE_841        629E
COMPLETE_842        62F6
COMPLETE_846        6372
COMPLETE_847        63B0
COMPLETE_852        642E
COMPLETE_857        64AC
COMPLETE_862        652A
COMPLETE_863        655E
COMPLETE_864        6B0E
COMPLETE_927        6B4C
COMPLETE_928        6B94
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_155  20AC
DATAREGDIRECTDEST_19  1388
DATAREGDIRECTDEST_219  2680
DATAREGDIRECTDEST_291  2DAE
DATAREGDIRECTDEST_355  3382
DATAREGDIRECTDEST_423  39FA
DATAREGDIRECTDEST_491  4072
DATAREGDIRECTDEST_558  46B6
DATAREGDIRECTDEST_630  4DE4
DATAREGDIRECTDEST_694  53B8
DATAREGDIRECTDEST_762  5A2A
DATAREGDIRECTDEST_84  1962
DATAREGDIRECTDEST_864  6592
DATAREGDIRECTSRC_155  20C8
DATAREGDIRECTSRC_19  13A4
DATAREGDIRECTSRC_219  269C
DATAREGDIRECTSRC_291  2DCA
DATAREGDIRECTSRC_355  339E
DATAREGDIRECTSRC_423  3A16
DATAREGDIRECTSRC_491  408E
DATAREGDIRECTSRC_558  46D2
DATAREGDIRECTSRC_630  4E00
DATAREGDIRECTSRC_694  53D4
DATAREGDIRECTSRC_762  5A46
DATAREGDIRECTSRC_84  197E
DATAREGDIRECTSRC_864  65AE
DATAREGDIRECT_155   20A4
DATAREGDIRECT_19    1380
DATAREGDIRECT_219   2678
DATAREGDIRECT_291   2DA6
DATAREGDIRECT_355   337A
DATAREGDIRECT_423   39F2
DATAREGDIRECT_491   406A
DATAREGDIRECT_558   46AE
DATAREGDIRECT_630   4DDC
DATAREGDIRECT_694   53B0
DATAREGDIRECT_762   5A22
DATAREGDIRECT_84    195A
DATAREGDIRECT_864   658A
DECODEADD           1F1E
DECODEADDCOMP       2C1E
DECODEADDDESTOP     262C
DECODEADRMODE       1E85
DECODEAND           4C56
DECODEANDCOMP       5956
DECODEANDDESTOP     5364
DECODEASX_M         618E
DECODEASX_R         6262
DECODEASX_S         6336
DECODEBEQ           6374
DECODEBGE           63F2
DECODEBLT           6470
DECODEBRA           6B58
DECODEDIVU          3F9A
DECODEJSR           64EE
DECODELEA           4612
DECODELSX_M         5FA8
DECODELSX_R         607C
DECODELSX_S         6150
DECODEMOVE          12B0
DECODEMOVEM         1EE0
DECODEMULS          3922
DECODENOP           1268
DECODENOT           5958
DECODERTS           6B10
DECODESUB           2C20
DECODESUBCOMP       3920
DECODESUBDESTOP     332E
DESTDNB_149         1FAA
DESTDNB_285         2CAC
DESTDNB_624         4CE2
DESTDNL_149         1F82
DESTDNL_285         2C84
DESTDNL_624         4CBA
DESTDNW_149         1F90
DESTDNW_285         2C92
DESTDNW_624         4CC8
DONE_10             10FE
DONE_11             111E
DONE_114            1BB2
DONE_115            1BD2
DONE_116            1BF2
DONE_117            1C14
DONE_121            1C4E
DONE_122            1C6E
DONE_123            1C8E
DONE_124            1CB0
DONE_126            1CD0
DONE_127            1CF0
DONE_128            1D10
DONE_129            1D32
DONE_132            1D62
DONE_133            1D82
DONE_134            1DA2
DONE_135            1DC4
DONE_138            1DF4
DONE_139            1E14
DONE_140            1E34
DONE_141            1E56
DONE_143            1E76
DONE_144            1E96
DONE_145            1EB6
DONE_146            1ED8
DONE_185            22FC
DONE_186            231C
DONE_187            233C
DONE_188            235E
DONE_192            2398
DONE_193            23B8
DONE_194            23D8
DONE_195            23FA
DONE_197            241A
DONE_198            243A
DONE_199            245A
DONE_2              1024
DONE_200            247C
DONE_203            24AC
DONE_204            24CC
DONE_205            24EC
DONE_206            250E
DONE_209            253E
DONE_210            255E
DONE_211            257E
DONE_212            25A0
DONE_214            25C0
DONE_215            25E0
DONE_216            2600
DONE_217            2622
DONE_249            28D0
DONE_250            28F0
DONE_251            2910
DONE_252            2932
DONE_256            296C
DONE_257            298C
DONE_258            29AC
DONE_259            29CE
DONE_261            29EE
DONE_262            2A0E
DONE_263            2A2E
DONE_264            2A50
DONE_267            2A80
DONE_268            2AA0
DONE_269            2AC0
DONE_270            2AE2
DONE_273            2B12
DONE_274            2B32
DONE_275            2B52
DONE_276            2B74
DONE_278            2B94
DONE_279            2BB4
DONE_280            2BD4
DONE_281            2BF6
DONE_3              1046
DONE_321            2FFE
DONE_322            301E
DONE_323            303E
DONE_324            3060
DONE_328            309A
DONE_329            30BA
DONE_330            30DA
DONE_331            30FC
DONE_333            311C
DONE_334            313C
DONE_335            315C
DONE_336            317E
DONE_339            31AE
DONE_340            31CE
DONE_341            31EE
DONE_342            3210
DONE_345            3240
DONE_346            3260
DONE_347            3280
DONE_348            32A2
DONE_350            32C2
DONE_351            32E2
DONE_352            3302
DONE_353            3324
DONE_385            35D2
DONE_386            35F2
DONE_387            3612
DONE_388            3634
DONE_392            366E
DONE_393            368E
DONE_394            36AE
DONE_395            36D0
DONE_397            36F0
DONE_398            3710
DONE_399            3730
DONE_4              1066
DONE_400            3752
DONE_403            3782
DONE_404            37A2
DONE_405            37C2
DONE_406            37E4
DONE_409            3814
DONE_410            3834
DONE_411            3854
DONE_412            3876
DONE_414            3896
DONE_415            38B6
DONE_416            38D6
DONE_417            38F8
DONE_453            3C4A
DONE_454            3C6A
DONE_455            3C8A
DONE_456            3CAC
DONE_460            3CE6
DONE_461            3D06
DONE_462            3D26
DONE_463            3D48
DONE_465            3D68
DONE_466            3D88
DONE_467            3DA8
DONE_468            3DCA
DONE_471            3DFA
DONE_472            3E1A
DONE_473            3E3A
DONE_474            3E5C
DONE_477            3E8C
DONE_478            3EAC
DONE_479            3ECC
DONE_480            3EEE
DONE_482            3F0E
DONE_483            3F2E
DONE_484            3F4E
DONE_485            3F70
DONE_49             15D8
DONE_5              1086
DONE_50             15F8
DONE_51             1618
DONE_52             163A
DONE_521            42C2
DONE_522            42E2
DONE_523            4302
DONE_524            4324
DONE_528            435E
DONE_529            437E
DONE_530            439E
DONE_531            43C0
DONE_533            43E0
DONE_534            4400
DONE_535            4420
DONE_536            4442
DONE_539            4472
DONE_540            4492
DONE_541            44B2
DONE_542            44D4
DONE_545            4504
DONE_546            4524
DONE_547            4544
DONE_548            4566
DONE_550            4586
DONE_551            45A6
DONE_552            45C6
DONE_553            45E8
DONE_56             1674
DONE_57             1694
DONE_58             16B4
DONE_588            4906
DONE_589            4926
DONE_59             16D6
DONE_590            4946
DONE_591            4968
DONE_595            49A2
DONE_596            49C2
DONE_597            49E2
DONE_598            4A04
DONE_600            4A24
DONE_601            4A44
DONE_602            4A64
DONE_603            4A86
DONE_606            4AB6
DONE_607            4AD6
DONE_608            4AF6
DONE_609            4B18
DONE_61             16F6
DONE_612            4B48
DONE_613            4B68
DONE_614            4B88
DONE_615            4BAA
DONE_617            4BCA
DONE_618            4BEA
DONE_619            4C0A
DONE_62             1716
DONE_620            4C2C
DONE_63             1736
DONE_64             1758
DONE_660            5034
DONE_661            5054
DONE_662            5074
DONE_663            5096
DONE_667            50D0
DONE_668            50F0
DONE_669            5110
DONE_67             1788
DONE_670            5132
DONE_672            5152
DONE_673            5172
DONE_674            5192
DONE_675            51B4
DONE_678            51E4
DONE_679            5204
DONE_68             17A8
DONE_680            5224
DONE_681            5246
DONE_684            5276
DONE_685            5296
DONE_686            52B6
DONE_687            52D8
DONE_689            52F8
DONE_69             17C8
DONE_690            5318
DONE_691            5338
DONE_692            535A
DONE_70             17EA
DONE_724            5608
DONE_725            5628
DONE_726            5648
DONE_727            566A
DONE_73             181A
DONE_731            56A4
DONE_732            56C4
DONE_733            56E4
DONE_734            5706
DONE_736            5726
DONE_737            5746
DONE_738            5766
DONE_739            5788
DONE_74             183A
DONE_742            57B8
DONE_743            57D8
DONE_744            57F8
DONE_745            581A
DONE_748            584A
DONE_749            586A
DONE_75             185A
DONE_750            588A
DONE_751            58AC
DONE_753            58CC
DONE_754            58EC
DONE_755            590C
DONE_756            592E
DONE_76             187C
DONE_78             189C
DONE_79             18BC
DONE_792            5C7A
DONE_793            5C9A
DONE_794            5CBA
DONE_795            5CDC
DONE_799            5D16
DONE_8              10BC
DONE_80             18DC
DONE_800            5D36
DONE_801            5D56
DONE_802            5D78
DONE_804            5D98
DONE_805            5DB8
DONE_806            5DD8
DONE_807            5DFA
DONE_81             18FE
DONE_810            5E2A
DONE_811            5E4A
DONE_812            5E6A
DONE_813            5E8C
DONE_816            5EBC
DONE_817            5EDC
DONE_818            5EFC
DONE_819            5F1E
DONE_821            5F3E
DONE_822            5F5E
DONE_823            5F7E
DONE_824            5FA0
DONE_851            63E8
DONE_856            6466
DONE_861            64E4
DONE_894            67E2
DONE_895            6802
DONE_896            6822
DONE_897            6844
DONE_9              10DE
DONE_901            687E
DONE_902            689E
DONE_903            68BE
DONE_904            68E0
DONE_906            6900
DONE_907            6920
DONE_908            6940
DONE_909            6962
DONE_912            6992
DONE_913            69B2
DONE_914            69D2
DONE_915            69F4
DONE_918            6A24
DONE_919            6A44
DONE_920            6A64
DONE_921            6A86
DONE_923            6AA6
DONE_924            6AC6
DONE_925            6AE6
DONE_926            6B08
DONE_932            6BCC
DONE_933            6BFA
DONE_934            6C1A
DONE_935            6C3A
DONE_936            6C5C
ENDSIM              115E
GOLOOP              113C
IDENTIFYOPCODE      1162
LOGREG              124C
LOOP_147            1EEA
LOOP_148            1F28
LOOP_15             1272
LOOP_16             12BA
LOOP_284            2C2A
LOOP_420            392C
LOOP_488            3FA4
LOOP_556            461C
LOOP_623            4C60
LOOP_759            5962
LOOP_825            5FB2
LOOP_830            6086
LOOP_835            615A
LOOP_836            6198
LOOP_841            626C
LOOP_846            6340
LOOP_847            637E
LOOP_852            63FC
LOOP_857            647A
LOOP_862            64F8
LOOP_927            6B1A
LOOP_928            6B62
LSL_M               5FEC
LSL_R               60C0
LSR_M               5FFA
LSR_R               60CE
MAIN                1000
NEWLINE             341E
NEXT_147            1F0E
NEXT_148            1F4C
NEXT_149            2042
NEXT_15             1296
NEXT_16             12DE
NEXT_284            2C4E
NEXT_285            2D44
NEXT_420            3950
NEXT_488            3FC8
NEXT_556            4640
NEXT_623            4C84
NEXT_624            4D7A
NEXT_759            5986
NEXT_825            5FD6
NEXT_830            60AA
NEXT_835            617E
NEXT_836            61BC
NEXT_841            6290
NEXT_846            6364
NEXT_847            63A2
NEXT_852            6420
NEXT_857            649E
NEXT_862            651C
NEXT_927            6B3E
NEXT_928            6B86
OADD                6F
OAN                 C3
OAND                85
OASL                95
OASR                99
OBEQ                9D
OBGE                A1
OBLANK              D2
OBLT                A5
OBRA                B1
OBSIZE              B5
OCOMMA              C9
ODIVU               7C
ODN                 C1
OHASH               D0
OJSR                A9
OLB                 C5
OLEA                81
OLSIZE              BD
OLSL                8D
OLSR                91
OMOVE               64
OMOVEM              69
OMULS               77
ONOP                60
ONOT                89
OPREDEC             CC
OPSTINC             CE
ORB                 C7
ORTS                AD
OSUB                73
OUTPUTDATA          6BD6
OWSIZE              B9
PADD                107
PAND                15C
PASX_M              1B1
PASX_R              1C2
PASX_S              1D3
PBEQ                1E4
PBGE                1F5
PBLT                206
PBRA                239
PDIVU               13A
PJSR                217
PLEA                14B
PLSX_M              17E
PLSX_R              18F
PLSX_S              1A0
PMOVE               E5
PMOVEM              F6
PMULS               129
PNOP                D4
PNOT                16D
PREPAREADRMODE      1C78
PRINTANDEST         2E33
PRINTANSRC          2F32
PRINTBRANCH         15A8
PRINTCOMMA          305B
PRINTCOUNT          2ACE
PRINTDNDEST         2BE3
PRINTDNSRC          2CF6
PRINTHASH           3309
PRINTLB             318F
PRINTOPMODE         1663
PRINTPD             3128
PRINTPI             30C1
PRINTRB             31F2
PRINTSIGN           3255
PRINTSIZE           F0E
PRINTSIZELOW        127F
PRTS                228
PSUB                118
READINPUT           F4
REG_M               6004
REG_R               60D8
REND                31
RSTART              0
SPACE               33BD
SPLIT0              1170
SPLIT000            117C
SPLIT01             1190
SPLIT0100           119C
SPLIT0100111        11B8
SPLIT0110           11CC
SPLIT01100          11D8
SPLIT01101          11E4
SPLIT1              11F0
SPLIT10             11FC
SPLIT11             1208
SPLIT110            1214
SPLIT111            1238
SRCDNB_149          201C
SRCDNB_285          2D1E
SRCDNB_624          4D54
SRCDNL_149          1FC4
SRCDNL_285          2CC6
SRCDNL_624          4CFC
SRCDNW_149          1FEA
SRCDNW_285          2CEC
SRCDNW_624          4D22
VERIFYOPCODE        A9B
