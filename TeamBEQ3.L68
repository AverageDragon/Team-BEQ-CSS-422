00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/4/2021 5:56:47 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 41 44 44 49 00           102  oADDI:  DC.B    'ADDI',0
00000078= 53 55 42 00              103  oSUB:   DC.B    'SUB',0
0000007C= 4D 55 4C 53 2E 57 ...    104  oMULS:  DC.B    'MULS.W ',0
00000084= 44 49 56 55 2E 57 ...    105  oDIVU:  DC.B    'DIVU.W ',0
0000008C= 4C 45 41 00              106  oLEA:   DC.B    'LEA',0
00000090= 41 4E 44 00              107  oAND:   DC.B    'AND',0
00000094= 4E 4F 54 00              108  oNOT:   DC.B    'NOT',0
00000098= 4C 53 4C 00              109  oLSL:   DC.B    'LSL',0
0000009C= 4C 53 52 00              110  oLSR:   DC.B    'LSR',0
000000A0= 41 53 4C 00              111  oASL:   DC.B    'ASL',0
000000A4= 41 53 52 00              112  oASR:   DC.B    'ASR',0
000000A8= 42 45 51 00              113  oBEQ:   DC.B    'BEQ',0
000000AC= 42 47 45 00              114  oBGE:   DC.B    'BGE',0
000000B0= 42 4C 54 00              115  oBLT:   DC.B    'BLT',0
000000B4= 4A 53 52 00              116  oJSR:   DC.B    'JSR',0
000000B8= 52 54 53 00              117  oRTS:   DC.B    'RTS',0
000000BC= 42 52 41 00              118  oBRA:   DC.B    'BRA',0
000000C0= 2E 42 20 00              119  oBSize  DC.B    '.B ',0
000000C4= 2E 57 20 00              120  oWSize  DC.B    '.W ',0
000000C8= 2E 4C 20 00              121  oLSize  DC.B    '.L ',0
000000CC= 44 00                    122  oDn     DC.B    'D',0
000000CE= 41 00                    123  oAn     DC.B    'A',0
000000D0= 28 00                    124  oLB     DC.B    '(',0
000000D2= 29 00                    125  oRB     DC.B    ')',0
000000D4= 2C 20 00                 126  oComma  DC.B    ', ',0
000000D7= 2D 00                    127  oPreDec DC.B    '-',0
000000D9= 2B 00                    128  oPstInc DC.B    '+',0
000000DB= 23 00                    129  oHash   DC.B    '#',0
000000DD= 20 00                    130  oBlank  DC.B    ' ',0
000000DF= 20 20 20 00              131  oTab  DC.B    '   ',0
000000E3= 57 65 6C 63 6F 6D ...    132  oWelcome DC.B   'Welcome to our 68k DASM!'
000000FB                           133  ; ------------------------------------------------------------
000000FB                           134  ; "Pattern" Variables
000000FB                           135  ; Jonathan
000000FB                           136  ; 
000000FB                           137  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000FB                           138  ; and the opcode isn't actually data
000000FB                           139  ; ------------------------------------------------------------
000000FB= 30 31 30 30 31 31 ...    140  pNOP:   DC.B    '0100111001110001',0
0000010C= 30 30 2E 2E 2E 2E ...    141  pMOVE:  DC.B    '00..............',0
0000011D= 30 31 30 30 31 2E ...    142  pMOVEM: DC.B    '01001.001.......',0
0000012E= 31 31 30 31 2E 2E ...    143  pADD:   DC.B    '1101............',0
0000013F= 31 30 30 31 2E 2E ...    144  pSUB:   DC.B    '1001............',0
00000150= 31 31 30 30 2E 2E ...    145  pMULS:  DC.B    '1100...111......',0
00000161= 31 30 30 30 2E 2E ...    146  pDIVU:  DC.B    '1000...011......',0
00000172= 30 31 30 30 2E 2E ...    147  pLEA:   DC.B    '0100...111......',0
00000183= 31 31 30 30 2E 2E ...    148  pAND:   DC.B    '1100............',0
00000194= 30 31 30 30 30 31 ...    149  pNOT:   DC.B    '01000110........',0
000001A5= 31 31 31 30 2E 2E ...    150  pLSx_M: DC.B    '1110......001...',0
000001B6= 31 31 31 30 2E 2E ...    151  pLSx_R: DC.B    '1110......101...',0
000001C7= 31 31 31 30 2E 2E ...    152  pLSx_S: DC.B    '1110......100...',0
000001D8= 31 31 31 30 2E 2E ...    153  pASx_M: DC.B    '1110......000...',0
000001E9= 31 31 31 30 2E 2E ...    154  pASx_R: DC.B    '1110......100...',0
000001FA= 31 31 31 30 2E 2E ...    155  pASx_S: DC.B    '1110......100...',0
0000020B= 30 31 31 30 30 31 ...    156  pBEQ:   DC.B    '01100111........',0
0000021C= 30 31 31 30 31 31 ...    157  pBGE:   DC.B    '01101100........',0
0000022D= 30 31 31 30 31 31 ...    158  pBLT:   DC.B    '01101101........',0
0000023E= 30 31 30 30 31 31 ...    159  pJSR:   DC.B    '0100111010......',0
0000024F= 30 31 30 30 31 31 ...    160  pRTS:   DC.B    '0100111001110101',0
00000260= 30 31 31 30 30 30 ...    161  pBRA:   DC.B    '01100000........',0
00000271                           162  
00000271                           163  
00000271                           164  ; ========================================================================
00000271                           165  ; Macros
00000271                           166  ; ========================================================================
00000271                           167  ; ------------------------------------------------------------
00000271                           168  ; "convertHtoA" Helper
00000271                           169  ; Jonathan
00000271                           170  ;
00000271                           171  ; 1st argument is a data register containing a single digit of a hex number.
00000271                           172  ;
00000271                           173  ; Converts the argument from a hex digit to an ascii character
00000271                           174  ; ------------------------------------------------------------
00000271                           175  convertHtoA:    MACRO
00000271                           176          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
00000271                           177          BGT     alpha\@
00000271                           178          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
00000271                           179          BRA     done\@
00000271                           180  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
00000271                           181  done\@: NOP
00000271                           182          ENDM
00000271                           183  ; ------------------------------------------------------------
00000271                           184  ; adrOut
00000271                           185  ; Gary
00000271                           186  ;
00000271                           187  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00000271                           188  ; ------------------------------------------------------------
00000271                           189  adrOut:         MACRO
00000271                           190          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           191          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           192          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           193          LSR.W   #4, D1      
00000271                           194          ConvertHtoA D1      ; Convert D1 to a character
00000271                           195          TRAP    #15         ; Execute output
00000271                           196          
00000271                           197          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           198          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000271                           199          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           200          LSR.W   #4, D1      
00000271                           201          ConvertHtoA D1      ; Convert D1 to a character
00000271                           202          TRAP    #15         ; Execute output
00000271                           203          
00000271                           204          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           205          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           206          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           207          LSR.W   #4, D1      
00000271                           208          ConvertHtoA D1      ; Convert D1 to a character
00000271                           209          TRAP    #15         ; Execute output
00000271                           210          
00000271                           211          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           212          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           213          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000271                           214          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           215          LSR.W   #4, D1      
00000271                           216          ConvertHtoA D1      ; Convert D1 to a character
00000271                           217          TRAP    #15         ; Execute output       
00000271                           218          ENDM 
00000271                           219  ; ------------------------------------------------------------
00000271                           220  ; "verifyOpcode" Helper
00000271                           221  ; Jonathan
00000271                           222  ;
00000271                           223  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
00000271                           224  ; 2nd argument is a data register to check against the template
00000271                           225  ;
00000271                           226  ; Verifies that the opcode passed through \2 matches the pattern of \1
00000271                           227  ; If they do not match, branches to outputData
00000271                           228  ; ------------------------------------------------------------
00000271                           229  verifyOpcode:  MACRO
00000271                           230          LEA     \1, A1      ; Input pattern string
00000271                           231          MOVE.W  \2, D3      ; input value
00000271                           232          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
00000271                           233          
00000271                           234  loop\@: 
00000271                           235          CMP.B   #$30, (A1)  ; Check if the template wants a 0
00000271                           236          BEQ     checkFor0\@
00000271                           237          CMP.B   #$31, (A1)  ; Check if the template wants a 1
00000271                           238          BEQ     checkFor1\@
00000271                           239          BRA     next\@      ; Template has a wildcard, go to next iteration
00000271                           240          
00000271                           241  checkFor0\@: 
00000271                           242          BTST    D1, D3      ; Check if contains 0
00000271                           243          BNE     outputData  ; Missing a 0 -> Not a valid opcode
00000271                           244          BRA     next\@
00000271                           245  
00000271                           246  checkFor1\@:
00000271                           247          BTST    D1, D3      ; Check if contains 1
00000271                           248          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
00000271                           249  
00000271                           250  next\@: 
00000271                           251          CMP.B   #0, D1      ; Compare bit counter to 0
00000271                           252          BEQ     complete\@  ; Branch to complete if bit counter reached 0
00000271                           253          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000271                           254          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
00000271                           255          BRA     loop\@      ; Begin loop again
00000271                           256  
00000271                           257  complete\@:  ; Opcode has been verified
00000271                           258          ENDM
00000271                           259          
00000271                           260  ; ------------------------------------------------------------
00000271                           261  ; "printSize" Helper
00000271                           262  ; Gary
00000271                           263  ;
00000271                           264  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           265  ;
00000271                           266  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
00000271                           267  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
00000271                           268  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
00000271                           269  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
00000271                           270  ; ------------------------------------------------------------
00000271                           271  printSize:  MACRO
00000271                           272          MOVE.W  \1, D3      ; input value
00000271                           273          CLR     D7      
00000271                           274  checkForB\@: 
00000271                           275          BTST    #13, D3      ; Check if contains 0
00000271                           276          BNE     checkForW\@  ; If not go to word size
00000271                           277          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
00000271                           278          MOVE.B  #14,D0          
00000271                           279          TRAP    #15
00000271                           280          BRA     complete\@      
00000271                           281  checkForW\@: 
00000271                           282          BTST    #12, D3      ; Check if contains 1
00000271                           283          BEQ     checkForL\@  ; If not, size cannot be word
00000271                           284          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
00000271                           285          MOVE.B  #14,D0          
00000271                           286          TRAP    #15
00000271                           287          BRA     complete\@  
00000271                           288  checkForL\@:
00000271                           289          MOVE.B  #$1, D7
00000271                           290          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
00000271                           291          MOVE.B  #14,D0          
00000271                           292          TRAP    #15
00000271                           293  complete\@:  ; Size has been printed
00000271                           294          ENDM
00000271                           295          
00000271                           296  ; ------------------------------------------------------------
00000271                           297  ; "printSizeLow" Helper
00000271                           298  ; Gary
00000271                           299  ;
00000271                           300  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           301  ;
00000271                           302  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000271                           303  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000271                           304  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000271                           305  ; Once matched, size is printed and appended to already printed opcode, macro exits.
00000271                           306  ; ------------------------------------------------------------
00000271                           307  printSizeLow:  MACRO
00000271                           308          MOVE.W  \1, D3      ; input value   
00000271                           309          CLR     D7   
00000271                           310  checkForB\@: 
00000271                           311          BTST    #6,  D3      ; Check if contains 0
00000271                           312          BNE     checkForW\@  ; If not go to word size
00000271                           313          BTST    #7, D3      ; Check if contains 0
00000271                           314          BNE     checkForL\@ ; If not go to longword size
00000271                           315          LEA     oBSize, A1     
00000271                           316          MOVE.B  #14,D0       ; Print and end macro  
00000271                           317          TRAP    #15
00000271                           318          BRA     complete\@      
00000271                           319  checkForW\@: 
00000271                           320          LEA     oWSize, A1     
00000271                           321          MOVE.B  #14,D0       ; Print and end macro       
00000271                           322          TRAP    #15
00000271                           323          BRA     complete\@  
00000271                           324  checkForL\@:
00000271                           325          MOVE.B  #$1, D7
00000271                           326          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
00000271                           327          MOVE.B  #14,D0       ; Print and end macro  
00000271                           328          TRAP    #15
00000271                           329  complete\@:  ; Size has been printed
00000271                           330          ENDM
00000271                           331  ; ------------------------------------------------------------
00000271                           332  ; "decodeSizeLow" Helper
00000271                           333  ; Gary
00000271                           334  ;
00000271                           335  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           336  ;
00000271                           337  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000271                           338  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000271                           339  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000271                           340  ; Once matched, size is printed and appended to already printed opcode, macro exits.
00000271                           341  ; ------------------------------------------------------------
00000271                           342  decodeSizeLow:  MACRO
00000271                           343          MOVE.W  \1, D3      ; input value   
00000271                           344          CLR     D6   
00000271                           345  checkForBorW\@: 
00000271                           346          BTST    #7, D3      ; Check if contains 0
00000271                           347          BNE     checkForL\@ ; If not go to longword size         
00000271                           348          BRA     complete\@  
00000271                           349  checkForL\@:
00000271                           350          MOVE.B  #$1, D6
00000271                           351  complete\@:  ; Size has been checeked
00000271                           352          ENDM
00000271                           353               
00000271                           354  ; ------------------------------------------------------------
00000271                           355  ; "printBranch" Helper
00000271                           356  ; Gary
00000271                           357  ; 
00000271                           358  ; Executes after prepare macro on D1 which contains only adressing mode
00000271                           359  ; bits. 
00000271                           360  ; ------------------------------------------------------------
00000271                           361  printBranch:  MACRO
00000271                           362          MOVE.W \1, D3
00000271                           363          CLR     D1
00000271                           364          ADD.B   D3, D1
00000271                           365          convertAtoH D1
00000271                           366          MOVE.B  #3,D0       ; Print and end macro  
00000271                           367          TRAP    #15
00000271                           368          ENDM        
00000271                           369          
00000271                           370  ; ------------------------------------------------------------
00000271                           371  ; "printOpMode" Helper
00000271                           372  ; Gary
00000271                           373  ;
00000271                           374  ; 1st argument holds opcode whose opmode is being decoded
00000271                           375  ;
00000271                           376  ; With the opcode in D3, D1 is designated as the bit tracker. Split
00000271                           377  ; into two sorting mechanisms: first, the macro determines whether
00000271                           378  ; the register is a source or a destination. Then, the macro determines
00000271                           379  ; the size and appends it to printed opcode in a similar manner to printSize.
00000271                           380  ; ------------------------------------------------------------
00000271                           381  printOpMode:  MACRO
00000271                           382          MOVE.W  \1, D3      
00000271                           383          MOVE.B  #8, D1    
00000271                           384          CLR     D6
00000271                           385          CLR     D7
00000271                           386  checkForDestDn\@: 
00000271                           387          BTST    D1, D3      
00000271                           388          BNE     checkForSrcDn\@
00000271                           389          JSR     next\@
00000271                           390          MOVE.B  #$1, D6
00000271                           391          BTST    D1, D3      
00000271                           392          BEQ     DestDnW\@
00000271                           393  DestDnL\@:        
00000271                           394          LEA     oLSize, A1     
00000271                           395          MOVE.B  #14,D0          
00000271                           396          TRAP    #15
00000271                           397          MOVE.B  #$1, D7
00000271                           398          BRA     complete\@ 
00000271                           399  DestDnW\@: 
00000271                           400          JSR     next\@
00000271                           401          BTST    D1, D3      
00000271                           402          BEQ     DestDnB\@
00000271                           403          LEA     oWSize, A1     
00000271                           404          MOVE.B  #14,D0          
00000271                           405          TRAP    #15
00000271                           406          BRA     complete\@ 
00000271                           407  DestDnB\@: 
00000271                           408          LEA     oBSize, A1     
00000271                           409          MOVE.B  #14,D0          
00000271                           410          TRAP    #15
00000271                           411          BRA     complete\@ 
00000271                           412  checkForSrcDn\@: 
00000271                           413          JSR     next\@
00000271                           414          BTST    D1, D3      
00000271                           415          BEQ     SrcDnW\@
00000271                           416  SrcDnL\@:        
00000271                           417          LEA     oLSize, A1     
00000271                           418          MOVE.B  #14,D0          
00000271                           419          TRAP    #15
00000271                           420          MOVE.B  #$1, D7
00000271                           421          printDnDest D3
00000271                           422          BRA     complete\@ 
00000271                           423  SrcDnW\@:
00000271                           424          JSR     next\@
00000271                           425          BTST    D1, D3     
00000271                           426          BEQ     SrcDnB\@
00000271                           427          LEA     oWSize, A1     
00000271                           428          MOVE.B  #14,D0          
00000271                           429          TRAP    #15
00000271                           430          printDnDest D3
00000271                           431          BRA     complete\@ 
00000271                           432  SrcDnB\@: 
00000271                           433          LEA     oBSize, A1     
00000271                           434          MOVE.B  #14,D0          
00000271                           435          TRAP    #15
00000271                           436          printDnDest D3
00000271                           437          BRA     complete\@ 
00000271                           438  
00000271                           439  next\@:
00000271                           440          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000271                           441          RTS                
00000271                           442  
00000271                           443  complete\@:  ; Opcode has been verified
00000271                           444          ENDM
00000271                           445  ; ------------------------------------------------------------
00000271                           446  ; "prepareAdrMode" Helper
00000271                           447  ; Gary
00000271                           448  ; 
00000271                           449  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
00000271                           450  ; ------------------------------------------------------------
00000271                           451  prepareAdrMode: MACRO
00000271                           452          MOVE.W  \1, D6      ; input value
00000271                           453          MOVE.W  \2, D1
00000271                           454          CMP.B   #$01, D6
00000271                           455          BEQ     AdrSource\@    
00000271                           456  AdrDest\@:
00000271                           457          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
00000271                           458          LSR     #$08, D1
00000271                           459          LSR     #$05, D1
00000271                           460          BRA     complete\@ 
00000271                           461  AdrSource\@:                
00000271                           462          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
00000271                           463          LSL     #$02, D1
00000271                           464          LSR     #$08, D1
00000271                           465          LSR     #$05, D1
00000271                           466  complete\@:  ; Opcode has been verified
00000271                           467          ENDM        
00000271                           468          
00000271                           469  ; ------------------------------------------------------------
00000271                           470  ; "decodeAdrMode" Helper
00000271                           471  ; Gary
00000271                           472  ; 
00000271                           473  ; Executes after prepare macro on D1 which contains only adressing mode
00000271                           474  ; bits. 
00000271                           475  ; ------------------------------------------------------------
00000271                           476  decodeAdrMode:  MACRO
00000271                           477          MOVE.W  \1, D3      ; holds full opcode
00000271                           478          MOVE.W  \2, D1      ; holds just opmode
00000271                           479  
00000271                           480          CMP.B   #$01, D1
00000271                           481          BEQ     AdrRegDirect\@    
00000271                           482          CMP.B   #$02, D1
00000271                           483          BEQ     AdrRegInDirect\@  
00000271                           484          CMP.B   #$03, D1
00000271                           485          BEQ     AdrRegPostInc\@  
00000271                           486          CMP.B   #$04, D1
00000271                           487          BEQ     AdrRegPreDec\@
00000271                           488          CMP.B   #$07, D1
00000271                           489          BEQ     AdrAbsolute\@    
00000271                           490          
00000271                           491  dataRegDirect\@: 
00000271                           492          CMP.B   #$01, D6
00000271                           493          BEQ     dataRegDirectSrc\@   
00000271                           494  dataRegDirectDest\@: 
00000271                           495          printDnDest D3 
00000271                           496          BRA     complete\@ 
00000271                           497  dataRegDirectSrc\@: 
00000271                           498          printDnSrc D3 
00000271                           499          BRA     complete\@   
00000271                           500          
00000271                           501  AdrRegDirect\@: 
00000271                           502          CMP.B   #$01, D6
00000271                           503          BEQ     AdrRegDirectSrc\@   
00000271                           504  AdrRegDirectDest\@:
00000271                           505          printAnDest D3
00000271                           506          BRA     complete\@   
00000271                           507  AdrRegDirectSrc\@:
00000271                           508          printAnSrc D3
00000271                           509          BRA     complete\@   
00000271                           510         
00000271                           511  AdrRegInDirect\@:   
00000271                           512          CMP.B   #$01, D6
00000271                           513          BEQ     AdrRegInDirectSrc\@   
00000271                           514  AdrRegInDirectDest\@:
00000271                           515          printLB
00000271                           516          printAnDest D3  
00000271                           517          printRB
00000271                           518          BRA     complete\@     
00000271                           519  AdrRegInDirectSrc\@:   
00000271                           520          printLB
00000271                           521          printAnSrc D3  
00000271                           522          printRB
00000271                           523          BRA     complete\@   
00000271                           524          
00000271                           525  AdrRegPostInc\@:   
00000271                           526          CMP.B   #$01, D6
00000271                           527          BEQ     AdrRegPostIncSrc\@   
00000271                           528  AdrRegPostIncDest\@: 
00000271                           529          printLB
00000271                           530          printAnDest D3  
00000271                           531          printRB
00000271                           532          printPI
00000271                           533          BRA     complete\@  
00000271                           534  AdrRegPostIncSrc\@:           
00000271                           535          printLB
00000271                           536          printAnSrc D3  
00000271                           537          printRB
00000271                           538          printPI
00000271                           539          BRA     complete\@  
00000271                           540  AdrRegPreDec\@: 
00000271                           541          CMP.B   #$01, D6
00000271                           542          BEQ     AdrRegPreDecSrc\@   
00000271                           543  AdrRegPreDecDest\@:
00000271                           544          printPD  
00000271                           545          printLB
00000271                           546          printAnDest D3  
00000271                           547          printRB
00000271                           548          BRA     complete\@   
00000271                           549  AdrRegPreDecSrc\@: 
00000271                           550          printPD  
00000271                           551          printLB
00000271                           552          printAnSrc D3  
00000271                           553          printRB
00000271                           554          BRA     complete\@
00000271                           555         
00000271                           556  AdrAbsolute\@:
00000271                           557          CMP.B   #$01, D6
00000271                           558          BNE     AdrAbsoluteDst\@ 
00000271                           559          
00000271                           560          MOVE.W  D3, D5
00000271                           561          BTST    #2, D3
00000271                           562          BNE     AdrImmediate\@
00000271                           563          BTST    #0, D3
00000271                           564          BNE     AdrAbsoluteL\@
00000271                           565          BRA     AdrAbsoluteW\@
00000271                           566  AdrAbsoluteDst\@:
00000271                           567          MOVE.W  D3, D5
00000271                           568          BTST    #$B, D3
00000271                           569          BNE     AdrImmediate\@
00000271                           570          BTST    #$09, D3
00000271                           571          BNE     AdrAbsoluteL\@
00000271                           572          BRA     AdrAbsoluteW\@
00000271                           573  AdrImmediate\@:
00000271                           574          CMP.B   #1, D7
00000271                           575          BEQ     AdrImmediateL\@
00000271                           576  AdrImmediateW\@:
00000271                           577          MOVE.W  (A2)+, D3
00000271                           578          printHash
00000271                           579          printSign
00000271                           580          adrOut
00000271                           581          MOVE.W  D5, D3
00000271                           582          BRA     complete\@
00000271                           583  AdrImmediateL\@:
00000271                           584          MOVE.W  (A2)+, D3
00000271                           585          printHash
00000271                           586          printSign
00000271                           587          adrOut 
00000271                           588          MOVE.W  (A2)+, D3
00000271                           589          adrOut
00000271                           590          MOVE.W  D5, D3
00000271                           591          BRA     complete\@ 
00000271                           592  AdrAbsoluteW\@:     
00000271                           593          MOVE.W  (A2)+, D3
00000271                           594          printSign
00000271                           595          adrOut
00000271                           596          MOVE.W  D5, D3
00000271                           597          BRA     complete\@  
00000271                           598  AdrAbsoluteL\@:  
00000271                           599          MOVE.W  (A2)+, D3
00000271                           600          printSign
00000271                           601          adrOut 
00000271                           602          MOVE.W  (A2)+, D3
00000271                           603          adrOut
00000271                           604          MOVE.W  D5, D3
00000271                           605  
00000271                           606  complete\@:  ; Opcode has been verified
00000271                           607          ENDM
00000271                           608  
00000271                           609  printCount:     MACRO
00000271                           610          MOVE.W  \1, D1      ; bits 9 to 11
00000271                           611          LSL     #$04, D1
00000271                           612          LSR     #$08, D1
00000271                           613          LSR     #$05, D1
00000271                           614          LEA     oHash, A1     
00000271                           615          MOVE.B  #14,D0          
00000271                           616          TRAP    #15
00000271                           617          MOVE.B  #3,D0          
00000271                           618          TRAP    #15
00000271                           619          ENDM
00000271                           620  
00000271                           621  printDnDest:    MACRO 
00000271                           622          MOVE.W  \1, D1      ; bits 9 to 11
00000271                           623          LSL     #$04, D1
00000271                           624          LSR     #$08, D1
00000271                           625          LSR     #$05, D1
00000271                           626          LEA     oDn, A1     
00000271                           627          MOVE.B  #14,D0          
00000271                           628          TRAP    #15
00000271                           629          MOVE.B  #3,D0          
00000271                           630          TRAP    #15
00000271                           631          ENDM
00000271                           632  printDnSrc:    MACRO   
00000271                           633          CLR.L   D1
00000271                           634          MOVE.W  \1, D1   ; bits 0 to 2
00000271                           635          LSL     #$08, D1
00000271                           636          LSL     #$05, D1
00000271                           637          LSR     #$08, D1
00000271                           638          LSR     #$05, D1
00000271                           639          LEA     oDn, A1     
00000271                           640          MOVE.B  #14,D0          
00000271                           641          TRAP    #15
00000271                           642          MOVE.B  #3,D0          
00000271                           643          TRAP    #15
00000271                           644          ENDM
00000271                           645  printAnDest:    MACRO
00000271                           646          MOVE.W  \1, D1
00000271                           647          LSL     #$04, D1
00000271                           648          LSR     #$08, D1
00000271                           649          LSR     #$05, D1
00000271                           650          LEA     oAn, A1     
00000271                           651          MOVE.B  #14,D0          
00000271                           652          TRAP    #15
00000271                           653          MOVE.B  #3,D0          
00000271                           654          TRAP    #15
00000271                           655          ENDM
00000271                           656  printAnSrc:    MACRO   
00000271                           657          MOVE.W  \1, D1   ; bits 0 to 2
00000271                           658          LSL     #$08, D1
00000271                           659          LSL     #$05, D1
00000271                           660          LSR     #$08, D1
00000271                           661          LSR     #$05, D1
00000271                           662          LEA     oAn, A1     
00000271                           663          MOVE.B  #14,D0          
00000271                           664          TRAP    #15
00000271                           665          MOVE.B  #3,D0          
00000271                           666          TRAP    #15
00000271                           667          ENDM
00000271                           668  printAdr:      MACRO
00000271                           669          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           670          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           671          LSR.W   #4, D1      
00000271                           672          ConvertHtoA D1      ; Convert D1 to a character
00000271                           673          MOVE.B  #6, D0      ; Read first digit
00000271                           674          TRAP    #15         ; Execute output
00000271                           675          
00000271                           676          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           677          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000271                           678          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           679          LSR.W   #4, D1      
00000271                           680          ConvertHtoA D1      ; Convert D1 to a character
00000271                           681          MOVE.B  #6, D0      ; Read first digit
00000271                           682          TRAP    #15         ; Execute output
00000271                           683          
00000271                           684          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           685          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           686          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           687          LSR.W   #4, D1      
00000271                           688          ConvertHtoA D1      ; Convert D1 to a character
00000271                           689          MOVE.B  #6, D0      ; Read first digit
00000271                           690          TRAP    #15         ; Execute output
00000271                           691          
00000271                           692          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           693          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           694          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000271                           695          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           696          LSR.W   #4, D1      
00000271                           697          ConvertHtoA D1      ; Convert D1 to a character
00000271                           698          MOVE.B  #6, D0      ; Read first digit
00000271                           699          TRAP    #15         ; Execute output       
00000271                           700          ENDM
00000271                           701  printComma:    MACRO
00000271                           702          LEA     oComma, A1     
00000271                           703          MOVE.B  #14,D0          
00000271                           704          TRAP    #15
00000271                           705          ENDM
00000271                           706  printPI:    MACRO
00000271                           707          LEA     oPstInc, A1     
00000271                           708          MOVE.B  #14,D0          
00000271                           709          TRAP    #15
00000271                           710          ENDM
00000271                           711  printPD:    MACRO
00000271                           712          LEA     oPreDec, A1     
00000271                           713          MOVE.B  #14,D0          
00000271                           714          TRAP    #15
00000271                           715          ENDM
00000271                           716  
00000271                           717  printLB:    MACRO
00000271                           718          LEA     oLB, A1     
00000271                           719          MOVE.B  #14,D0          
00000271                           720          TRAP    #15
00000271                           721          ENDM
00000271                           722  printRB:    MACRO
00000271                           723          LEA     oRB, A1     
00000271                           724          MOVE.B  #14,D0          
00000271                           725          TRAP    #15
00000271                           726          ENDM
00000271                           727  printSign:  MACRO
00000271                           728          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           729          MOVE.W  #36, D1     ; An = sign
00000271                           730          TRAP    #15         ; Output = sign
00000271                           731          ENDM
00000271                           732  printHash:  MACRO
00000271                           733          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           734          MOVE.W  #35, D1     ; An = sign
00000271                           735          TRAP    #15         ; Output = sign
00000271                           736          ENDM
00000271                           737          
00000271                           738  space:      MACRO
00000271                           739          LEA     oBlank, A1
00000271                           740          MOVE.B  #14,D0          
00000271                           741          TRAP    #15
00000271                           742          ENDM
00000271                           743  tab:       MACRO
00000271                           744          LEA     oTab, A1
00000271                           745          MOVE.B  #14,D0          
00000271                           746          TRAP    #15
00000271                           747          ENDM
00000271                           748          
00000271                           749  newLine:    MACRO
00000271                           750          LEA     oBlank, A1
00000271                           751          MOVE.B  #13,D0          
00000271                           752          TRAP    #15
00000271                           753          ENDM
00000271                           754  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00000271                           755  ; "main" routine
00000271                           756  ; Dylan, Gary
00000271                           757  ; 
00000271                           758  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
00000271                           759  ; ========================================================================
00001000                           760          ORG     $1000
00001000                           761          OPT     MEX
00001000                           762          
00001000  43F8 0000                763  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                764          MOVE.B  #13, D0
00001008  4E4F                     765          TRAP    #15
0000100A                           766m         readInput   D2      ; Read 4 digit hex input
0000100A                           767m         ; READ USER's input
0000100A  103C 0005                768m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     769m         TRAP    #15
00001010                           770mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                771mm         CMPI.B  #$39, D1
00001014  6E00 000A                772mm         BGT     ALPHA_2
00001018  0401 0030                773mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                774mm         BRA     DONE_2
00001020  0401 0037                775mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     776mm DONE_2: NOP
00001026                           777mm         ENDM
00001026  E149                     778m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     779m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     780m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           781m         
0000102C  323C 0000                782m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     783m         TRAP    #15         ; READ SECOND DIGIT
00001032                           784mm         CONVERTATOH D1
00001032  0C01 0039                785mm         CMPI.B  #$39, D1
00001036  6E00 000A                786mm         BGT     ALPHA_3
0000103A  0401 0030                787mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                788mm         BRA     DONE_3
00001042  0401 0037                789mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     790mm DONE_3: NOP
00001048                           791mm         ENDM
00001048  E149                     792m         LSL.W   #8, D1      
0000104A  D441                     793m         ADD.W   D1, D2
0000104C                           794m         
0000104C  323C 0000                795m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     796m         TRAP    #15         ; READ THIRD DIGIT
00001052                           797mm         CONVERTATOH D1
00001052  0C01 0039                798mm         CMPI.B  #$39, D1
00001056  6E00 000A                799mm         BGT     ALPHA_4
0000105A  0401 0030                800mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                801mm         BRA     DONE_4
00001062  0401 0037                802mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     803mm DONE_4: NOP
00001068                           804mm         ENDM
00001068  E949                     805m         LSL.W   #4, D1      
0000106A  D441                     806m         ADD.W   D1, D2
0000106C                           807m         
0000106C  323C 0000                808m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     809m         TRAP    #15         ; READ FINAL DIGIT
00001072                           810mm         CONVERTATOH D1     
00001072  0C01 0039                811mm         CMPI.B  #$39, D1
00001076  6E00 000A                812mm         BGT     ALPHA_5
0000107A  0401 0030                813mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                814mm         BRA     DONE_5
00001082  0401 0037                815mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     816mm DONE_5: NOP
00001088                           817mm         ENDM
00001088  D441                     818m         ADD.W   D1, D2
0000108A  3402                     819m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           820m         ENDM
0000108C  3442                     821          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           822m         newline
0000108E  43F8 00DD                823m         LEA     OBLANK, A1
00001092  103C 000D                824m         MOVE.B  #13,D0          
00001096  4E4F                     825m         TRAP    #15
00001098                           826m         ENDM
00001098                           827          
00001098  43F8 0031                828          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                829          MOVE.B  #13, D0
000010A0  4E4F                     830          TRAP    #15
000010A2                           831m         readInput   D2      ; Read 4 digit hex input
000010A2                           832m         ; READ USER's input
000010A2  103C 0005                833m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     834m         TRAP    #15
000010A8                           835mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                836mm         CMPI.B  #$39, D1
000010AC  6E00 000A                837mm         BGT     ALPHA_8
000010B0  0401 0030                838mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                839mm         BRA     DONE_8
000010B8  0401 0037                840mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     841mm DONE_8: NOP
000010BE                           842mm         ENDM
000010BE  E149                     843m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     844m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     845m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           846m         
000010C4  323C 0000                847m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     848m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           849mm         CONVERTATOH D1
000010CA  0C01 0039                850mm         CMPI.B  #$39, D1
000010CE  6E00 000A                851mm         BGT     ALPHA_9
000010D2  0401 0030                852mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                853mm         BRA     DONE_9
000010DA  0401 0037                854mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     855mm DONE_9: NOP
000010E0                           856mm         ENDM
000010E0  E149                     857m         LSL.W   #8, D1      
000010E2  D441                     858m         ADD.W   D1, D2
000010E4                           859m         
000010E4  323C 0000                860m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     861m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           862mm         CONVERTATOH D1
000010EA  0C01 0039                863mm         CMPI.B  #$39, D1
000010EE  6E00 000A                864mm         BGT     ALPHA_10
000010F2  0401 0030                865mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                866mm         BRA     DONE_10
000010FA  0401 0037                867mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     868mm DONE_10: NOP
00001100                           869mm         ENDM
00001100  E949                     870m         LSL.W   #4, D1      
00001102  D441                     871m         ADD.W   D1, D2
00001104                           872m         
00001104  323C 0000                873m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     874m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           875mm         CONVERTATOH D1     
0000110A  0C01 0039                876mm         CMPI.B  #$39, D1
0000110E  6E00 000A                877mm         BGT     ALPHA_11
00001112  0401 0030                878mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                879mm         BRA     DONE_11
0000111A  0401 0037                880mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     881mm DONE_11: NOP
00001120                           882mm         ENDM
00001120  D441                     883m         ADD.W   D1, D2
00001122  3402                     884m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           885m         ENDM
00001124  31C2 0990                886          MOVE.W  D2, ($990)  ; Store at mem location $990
00001128                           887m         newline
00001128  43F8 00DD                888m         LEA     OBLANK, A1
0000112C  103C 000D                889m         MOVE.B  #13,D0          
00001130  4E4F                     890m         TRAP    #15
00001132                           891m         ENDM
00001132                           892m         newline
00001132  43F8 00DD                893m         LEA     OBLANK, A1
00001136  103C 000D                894m         MOVE.B  #13,D0          
0000113A  4E4F                     895m         TRAP    #15
0000113C                           896m         ENDM
0000113C                           897          
0000113C  7200                     898  goLoop: MOVE.L  #0, D1
0000113E  3238 0990                899          MOVE.W  ($990), D1
00001142  240A                     900          MOVE.L  A2, D2
00001144  B282                     901          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 00B2                902          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A                           903m         printAdr
0000114A  320A                     904m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000114C  E049                     905m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000114E  E849                     906m         LSR.W   #4, D1      
00001150                           907mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001150  0C01 0009                908mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001154  6E00 000A                909mm         BGT     ALPHA_15
00001158  0601 0030                910mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000115C  6000 0006                911mm         BRA     DONE_15
00001160  0601 0037                912mm ALPHA_15: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001164  4E71                     913mm DONE_15: NOP
00001166                           914mm         ENDM
00001166  103C 0006                915m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000116A  4E4F                     916m         TRAP    #15         ; EXECUTE OUTPUT
0000116C                           917m         
0000116C  320A                     918m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000116E  E949                     919m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001170  E049                     920m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001172  E849                     921m         LSR.W   #4, D1      
00001174                           922mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001174  0C01 0009                923mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001178  6E00 000A                924mm         BGT     ALPHA_16
0000117C  0601 0030                925mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001180  6000 0006                926mm         BRA     DONE_16
00001184  0601 0037                927mm ALPHA_16: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001188  4E71                     928mm DONE_16: NOP
0000118A                           929mm         ENDM
0000118A  103C 0006                930m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000118E  4E4F                     931m         TRAP    #15         ; EXECUTE OUTPUT
00001190                           932m         
00001190  320A                     933m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
00001192  E149                     934m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001194  E049                     935m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001196  E849                     936m         LSR.W   #4, D1      
00001198                           937mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001198  0C01 0009                938mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000119C  6E00 000A                939mm         BGT     ALPHA_17
000011A0  0601 0030                940mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011A4  6000 0006                941mm         BRA     DONE_17
000011A8  0601 0037                942mm ALPHA_17: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011AC  4E71                     943mm DONE_17: NOP
000011AE                           944mm         ENDM
000011AE  103C 0006                945m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011B2  4E4F                     946m         TRAP    #15         ; EXECUTE OUTPUT
000011B4                           947m         
000011B4  320A                     948m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
000011B6  E149                     949m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000011B8  E949                     950m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000011BA  E049                     951m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000011BC  E849                     952m         LSR.W   #4, D1      
000011BE                           953mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000011BE  0C01 0009                954mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000011C2  6E00 000A                955mm         BGT     ALPHA_18
000011C6  0601 0030                956mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011CA  6000 0006                957mm         BRA     DONE_18
000011CE  0601 0037                958mm ALPHA_18: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011D2  4E71                     959mm DONE_18: NOP
000011D4                           960mm         ENDM
000011D4  103C 0006                961m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011D8  4E4F                     962m         TRAP    #15         ; EXECUTE OUTPUT       
000011DA                           963m         ENDM
000011DA                           964m         tab
000011DA  43F8 00DF                965m         LEA     OTAB, A1
000011DE  103C 000E                966m         MOVE.B  #14,D0          
000011E2  4E4F                     967m         TRAP    #15
000011E4                           968m         ENDM
000011E4  4EB9 000011FE            969          JSR     identifyOpcode  ; Decode what is at A2
000011EA  381A                     970          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
000011EC                           971m         newline
000011EC  43F8 00DD                972m         LEA     OBLANK, A1
000011F0  103C 000D                973m         MOVE.B  #13,D0          
000011F4  4E4F                     974m         TRAP    #15
000011F6                           975m         ENDM
000011F6  6000 FF44                976          BRA     goLoop
000011FA                           977          
000011FA                           978          
000011FA                           979          
000011FA  FFFF FFFF                980  endSim: SIMHALT             ; halt simulator
000011FE                           981          
000011FE                           982          
000011FE                           983  ; ========================================================================
000011FE                           984  ; "identifyOpcode" subroutine
000011FE                           985  ; Jonathan
000011FE                           986  ; 
000011FE                           987  ; Reads the Word at A2 and determines which opcode it represents.
000011FE                           988  ; When the opcode is identified, the appropriate "decodeX" subroutine
000011FE                           989  ; is invoked.
000011FE                           990  ;
000011FE                           991  ; Uses a generated Trie structure to determine where to split on which bits
000011FE                           992  ; in order to efficiently identify the exact opcode
000011FE                           993  ; ========================================================================
000011FE                           994  identifyOpcode:
000011FE  3612                     995          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001200  0803 000F                996          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001204  6700 0006                997          BEQ     split0      ; Split based on the first bit
00001208  6000 008A                998          BRA     split1
0000120C                           999  
0000120C                          1000  split0: 
0000120C  0803 000E               1001          BTST    #$E, D3     ; Check the 2nd bit
00001210  6700 0006               1002          BEQ     split000    ; MOVE follows 00+        
00001214  6000 0016               1003          BRA     split01
00001218                          1004          
00001218                          1005  split000:        
00001218  0803 000D               1006          BTST    #$D, D3     ; Check the 3rd bit
0000121C  6600 0136               1007          BNE     decodeMOVE
00001220  0803 000C               1008          BTST    #$C, D3     ; Check the 3rd bit
00001224  6600 012E               1009          BNE     decodeMOVE
00001228  6000 5B4E               1010          BRA     decodeImmediate
0000122C                          1011  split01:
0000122C  0803 000D               1012          BTST    #$D, D3     ; Check the 3rd bit
00001230  6700 0006               1013          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001234  6000 0032               1014          BRA     split0110   ; Code is 011, but all subcodes are 0110        
00001238                          1015  
00001238                          1016  split0100:
00001238  0803 0008               1017          BTST    #$8, D3     ; Check the 8th bit for LEA
0000123C  6600 34D4               1018          BNE     decodeLEA   ; LEA follows 0100XXX1+
00001240  0803 000B               1019          BTST    #$B, D3     ; Check the 5th bit for NOT
00001244  6700 4866               1020          BEQ     decodeNOT   ; NOT follows 01000+
00001248  0803 0009               1021          BTST    #$9, D3     ; Check the 7th bit
0000124C  6700 0D66               1022          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
00001250  6000 0002               1023          BRA     split0100111
00001254                          1024  
00001254                          1025  split0100111:
00001254  0803 0007               1026          BTST    #$7, D3     ; Check the 9th bit for JSR
00001258  6600 541E               1027          BNE     decodeJSR   ; JSR follows 010011101+
0000125C  0803 0002               1028          BTST    #$2, D3     ; Check the 14th bit
00001260  6700 00AA               1029          BEQ     decodeNOP   ; NOP follows 01001110011100+
00001264  6000 5A4C               1030          BRA     decodeRTS   ; RTS follows 01001110011101+
00001268                          1031  
00001268                          1032  split0110:
00001268  0803 000B               1033          BTST    #$B, D3     ; Check the 5th bit
0000126C  6700 0006               1034          BEQ     split01100
00001270  6000 0016               1035          BRA     split01101
00001274                          1036  
00001274                          1037  split01100:
00001274  0803 000A               1038          BTST    #$A, D3     ; Check the 6th bit
00001278  6700 5A80               1039          BEQ     decodeBRA   ; BRA starts with 011000
0000127C  0803 000C               1040          BTST    #$C, D3     ; Check the 6th bit
00001280  6600 5EBA               1041          BNE     outputData  ; MOVEQ
00001284  6000 5278               1042          BRA     decodeBEQ   ; BEQ starts with 011001
00001288                          1043          
00001288                          1044  split01101:
00001288  0803 0008               1045          BTST    #$8, D3     ; Check the 8th bit
0000128C  6700 52EE               1046          BEQ     decodeBGE   ; BGE starts with 01101100
00001290  6000 5368               1047          BRA     decodeBLT   ; BLT starts with 01101101
00001294                          1048          
00001294                          1049  split1: 
00001294  0803 000E               1050          BTST    #$E, D3     ; Check the 2nd bit
00001298  6700 0006               1051          BEQ     split10
0000129C  6000 000E               1052          BRA     split11
000012A0                          1053  
000012A0                          1054  split10:
000012A0  0803 000C               1055          BTST    #$C, D3     ; Check the 4th bit
000012A4  6700 2E18               1056          BEQ     decodeDIVU  ; DIVU follows 1000+
000012A8  6000 1A84               1057          BRA     decodeSUB   ; SUB follows 1001+
000012AC                          1058  
000012AC                          1059  split11:
000012AC  0803 000D               1060          BTST    #$D, D3     ; Check the 3rd bit
000012B0  6700 0006               1061          BEQ     split110
000012B4  6000 0026               1062          BRA     split111
000012B8                          1063  
000012B8                          1064  split110:
000012B8  0803 000C               1065          BTST    #$C, D3     ; Check the 4th bit for ADD
000012BC  6600 0D34               1066          BNE     decodeADD   ; ADD follows 1101+
000012C0  0803 0008               1067          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
000012C4  6700 3AAA               1068          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
000012C8  0803 0007               1069          BTST    #$7, D3
000012CC  6700 3AA2               1070          BEQ     decodeAND
000012D0  0803 0006               1071          BTST    #$6, D3
000012D4  6700 3A9A               1072          BEQ     decodeAND
000012D8  6000 2790               1073          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
000012DC                          1074  
000012DC                          1075  split111: 
000012DC  0803 0003               1076          BTST    #$3, D3     ; Check 13th bit
000012E0  6700 001A               1077          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
000012E4                          1078     
000012E4  0803 0005               1079          BTST    #$5, D3     
000012E8  6600 0006               1080          BNE     logReg     
000012EC  6000 4E2C               1081          BRA     decodeLSx_M
000012F0  0803 000C               1082  logReg: BTST    #12, D3         
000012F4  6700 4EFE               1083          BEQ     decodeLSx_R
000012F8  6000 5E42               1084          BRA     outputData
000012FC                          1085  
000012FC                          1086  ariShift: ; Special split specifically for Arithmetic Shift
000012FC  0803 0005               1087          BTST    #$5, D3     
00001300  6600 0006               1088          BNE     ariReg
00001304  6000 5006               1089          BRA     decodeASx_M    
00001308  6000 50DC               1090  ariReg: BRA     decodeASx_R
0000130C                          1091              
0000130C                          1092  
0000130C                          1093  ; ========================================================================
0000130C                          1094  ; "decodeX" subroutines
0000130C                          1095  ; Gary, Dylan
0000130C                          1096  ; 
0000130C                          1097  ; Set of subroutines which are invoked by identifyOpcode.
0000130C                          1098  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
0000130C                          1099  ; the instruction.
0000130C                          1100  ;
0000130C                          1101  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
0000130C                          1102  ; opcode) to record the parameters (such as destination register). If the
0000130C                          1103  ; opcode indicates that the next word represents a destination address, then
0000130C                          1104  ; decodeLEA will advance A2 to the next word and decode that.
0000130C                          1105  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
0000130C                          1106  ; ========================================================================
0000130C                          1107  
0000130C                          1108  ; ------------------------------------------------------------
0000130C                          1109  ; 1. "decodeNOP" subroutine
0000130C                          1110  ; AUTHOR
0000130C                          1111  ;
0000130C                          1112  ; TODO: DESCRIPTION
0000130C                          1113  ; ------------------------------------------------------------
0000130C                          1114  decodeNOP:
0000130C                          1115m         verifyOpcode    pNOP, (A2)
0000130C  43F8 00FB               1116m         LEA     PNOP, A1      ; INPUT PATTERN STRING
00001310  3612                    1117m         MOVE.W  (A2), D3      ; INPUT VALUE
00001312  123C 000F               1118m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001316                          1119m         
00001316                          1120m LOOP_21: 
00001316  0C11 0030               1121m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000131A  6700 000E               1122m         BEQ     CHECKFOR0_21
0000131E  0C11 0031               1123m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001322  6700 0010               1124m         BEQ     CHECKFOR1_21
00001326  6000 0012               1125m         BRA     NEXT_21      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000132A                          1126m         
0000132A                          1127m CHECKFOR0_21: 
0000132A  0303                    1128m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000132C  6600 5E0E               1129m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001330  6000 0008               1130m         BRA     NEXT_21
00001334                          1131m 
00001334                          1132m CHECKFOR1_21:
00001334  0303                    1133m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001336  6700 5E04               1134m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000133A                          1135m 
0000133A                          1136m NEXT_21: 
0000133A  B23C 0000               1137m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000133E  6700 0008               1138m         BEQ     COMPLETE_21  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001342  5301                    1139m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001344  1819                    1140m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001346  60CE                    1141m         BRA     LOOP_21      ; BEGIN LOOP AGAIN
00001348                          1142m 
00001348                          1143m COMPLETE_21:  ; OPCODE HAS BEEN VERIFIED
00001348                          1144m         ENDM
00001348  43F8 0060               1145          LEA     oNOP, A1     ; Loads byteVAR
0000134C  103C 000E               1146          MOVE.B  #14,D0          
00001350  4E4F                    1147          TRAP    #15
00001352  4E75                    1148          RTS                 ; Return from decodeNOP subroutine
00001354                          1149  
00001354                          1150  
00001354                          1151  ; ------------------------------------------------------------
00001354                          1152  ; 2. "decodeMOVE" subroutine
00001354                          1153  ; AUTHOR
00001354                          1154  ;
00001354                          1155  ; TODO: DESCRIPTION
00001354                          1156  ; ------------------------------------------------------------
00001354                          1157  decodeMOVE:
00001354                          1158m         verifyOpcode    pMOVE, (A2)
00001354  43F8 010C               1159m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
00001358  3612                    1160m         MOVE.W  (A2), D3      ; INPUT VALUE
0000135A  123C 000F               1161m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000135E                          1162m         
0000135E                          1163m LOOP_22: 
0000135E  0C11 0030               1164m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001362  6700 000E               1165m         BEQ     CHECKFOR0_22
00001366  0C11 0031               1166m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000136A  6700 0010               1167m         BEQ     CHECKFOR1_22
0000136E  6000 0012               1168m         BRA     NEXT_22      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001372                          1169m         
00001372                          1170m CHECKFOR0_22: 
00001372  0303                    1171m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001374  6600 5DC6               1172m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001378  6000 0008               1173m         BRA     NEXT_22
0000137C                          1174m 
0000137C                          1175m CHECKFOR1_22:
0000137C  0303                    1176m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000137E  6700 5DBC               1177m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001382                          1178m 
00001382                          1179m NEXT_22: 
00001382  B23C 0000               1180m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001386  6700 0008               1181m         BEQ     COMPLETE_22  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000138A  5301                    1182m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000138C  1819                    1183m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000138E  60CE                    1184m         BRA     LOOP_22      ; BEGIN LOOP AGAIN
00001390                          1185m 
00001390                          1186m COMPLETE_22:  ; OPCODE HAS BEEN VERIFIED
00001390                          1187m         ENDM
00001390  43F8 0064               1188          LEA     oMOVE, A1     
00001394  103C 000E               1189          MOVE.B  #14,D0          
00001398  4E4F                    1190          TRAP    #15
0000139A                          1191m         printSize       (A2)
0000139A  3612                    1192m         MOVE.W  (A2), D3      ; INPUT VALUE
0000139C  4247                    1193m         CLR     D7      
0000139E                          1194m CHECKFORB_23: 
0000139E  0803 000D               1195m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000013A2  6600 0010               1196m         BNE     CHECKFORW_23  ; IF NOT GO TO WORD SIZE
000013A6  43F8 00C0               1197m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000013AA  103C 000E               1198m         MOVE.B  #14,D0          
000013AE  4E4F                    1199m         TRAP    #15
000013B0  6000 0026               1200m         BRA     COMPLETE_23      
000013B4                          1201m CHECKFORW_23: 
000013B4  0803 000C               1202m         BTST    #12, D3      ; CHECK IF CONTAINS 1
000013B8  6700 0010               1203m         BEQ     CHECKFORL_23  ; IF NOT, SIZE CANNOT BE WORD
000013BC  43F8 00C4               1204m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
000013C0  103C 000E               1205m         MOVE.B  #14,D0          
000013C4  4E4F                    1206m         TRAP    #15
000013C6  6000 0010               1207m         BRA     COMPLETE_23  
000013CA                          1208m CHECKFORL_23:
000013CA  1E3C 0001               1209m         MOVE.B  #$1, D7
000013CE  43F8 00C8               1210m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000013D2  103C 000E               1211m         MOVE.B  #14,D0          
000013D6  4E4F                    1212m         TRAP    #15
000013D8                          1213m COMPLETE_23:  ; SIZE HAS BEEN PRINTED
000013D8                          1214m         ENDM
000013D8                          1215m         prepareAdrMode  #$1, (A2)
000013D8  3C3C 0001               1216m         MOVE.W  #$1, D6      ; INPUT VALUE
000013DC  3212                    1217m         MOVE.W  (A2), D1
000013DE  BC3C 0001               1218m         CMP.B   #$01, D6
000013E2  6700 000C               1219m         BEQ     ADRSOURCE_24    
000013E6                          1220m ADRDEST_24:
000013E6  EF49                    1221m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000013E8  E049                    1222m         LSR     #$08, D1
000013EA  EA49                    1223m         LSR     #$05, D1
000013EC  6000 000A               1224m         BRA     COMPLETE_24 
000013F0                          1225m ADRSOURCE_24:                
000013F0  E149                    1226m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000013F2  E549                    1227m         LSL     #$02, D1
000013F4  E049                    1228m         LSR     #$08, D1
000013F6  EA49                    1229m         LSR     #$05, D1
000013F8                          1230m COMPLETE_24:  ; OPCODE HAS BEEN VERIFIED
000013F8                          1231m         ENDM        
000013F8                          1232m         decodeAdrMode   (A2), D1
000013F8  3612                    1233m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000013FA  3201                    1234m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000013FC                          1235m 
000013FC  B23C 0001               1236m         CMP.B   #$01, D1
00001400  6700 0066               1237m         BEQ     ADRREGDIRECT_25    
00001404  B23C 0002               1238m         CMP.B   #$02, D1
00001408  6700 00A0               1239m         BEQ     ADRREGINDIRECT_25  
0000140C  B23C 0003               1240m         CMP.B   #$03, D1
00001410  6700 0102               1241m         BEQ     ADRREGPOSTINC_25  
00001414  B23C 0004               1242m         CMP.B   #$04, D1
00001418  6700 0178               1243m         BEQ     ADRREGPREDEC_25
0000141C  B23C 0007               1244m         CMP.B   #$07, D1
00001420  6700 01EE               1245m         BEQ     ADRABSOLUTE_25    
00001424                          1246m         
00001424                          1247m DATAREGDIRECT_25: 
00001424  BC3C 0001               1248m         CMP.B   #$01, D6
00001428  6700 001E               1249m         BEQ     DATAREGDIRECTSRC_25   
0000142C                          1250m DATAREGDIRECTDEST_25: 
0000142C                          1251mm         PRINTDNDEST D3 
0000142C  3203                    1252mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000142E  E949                    1253mm         LSL     #$04, D1
00001430  E049                    1254mm         LSR     #$08, D1
00001432  EA49                    1255mm         LSR     #$05, D1
00001434  43F8 00CC               1256mm         LEA     ODN, A1     
00001438  103C 000E               1257mm         MOVE.B  #14,D0          
0000143C  4E4F                    1258mm         TRAP    #15
0000143E  103C 0003               1259mm         MOVE.B  #3,D0          
00001442  4E4F                    1260mm         TRAP    #15
00001444                          1261mm         ENDM
00001444  6000 057A               1262m         BRA     COMPLETE_25 
00001448                          1263m DATAREGDIRECTSRC_25: 
00001448                          1264mm         PRINTDNSRC D3 
00001448  4281                    1265mm         CLR.L   D1
0000144A  3203                    1266mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144C  E149                    1267mm         LSL     #$08, D1
0000144E  EB49                    1268mm         LSL     #$05, D1
00001450  E049                    1269mm         LSR     #$08, D1
00001452  EA49                    1270mm         LSR     #$05, D1
00001454  43F8 00CC               1271mm         LEA     ODN, A1     
00001458  103C 000E               1272mm         MOVE.B  #14,D0          
0000145C  4E4F                    1273mm         TRAP    #15
0000145E  103C 0003               1274mm         MOVE.B  #3,D0          
00001462  4E4F                    1275mm         TRAP    #15
00001464                          1276mm         ENDM
00001464  6000 055A               1277m         BRA     COMPLETE_25   
00001468                          1278m         
00001468                          1279m ADRREGDIRECT_25: 
00001468  BC3C 0001               1280m         CMP.B   #$01, D6
0000146C  6700 001E               1281m         BEQ     ADRREGDIRECTSRC_25   
00001470                          1282m ADRREGDIRECTDEST_25:
00001470                          1283mm         PRINTANDEST D3
00001470  3203                    1284mm         MOVE.W  D3, D1
00001472  E949                    1285mm         LSL     #$04, D1
00001474  E049                    1286mm         LSR     #$08, D1
00001476  EA49                    1287mm         LSR     #$05, D1
00001478  43F8 00CE               1288mm         LEA     OAN, A1     
0000147C  103C 000E               1289mm         MOVE.B  #14,D0          
00001480  4E4F                    1290mm         TRAP    #15
00001482  103C 0003               1291mm         MOVE.B  #3,D0          
00001486  4E4F                    1292mm         TRAP    #15
00001488                          1293mm         ENDM
00001488  6000 0536               1294m         BRA     COMPLETE_25   
0000148C                          1295m ADRREGDIRECTSRC_25:
0000148C                          1296mm         PRINTANSRC D3
0000148C  3203                    1297mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000148E  E149                    1298mm         LSL     #$08, D1
00001490  EB49                    1299mm         LSL     #$05, D1
00001492  E049                    1300mm         LSR     #$08, D1
00001494  EA49                    1301mm         LSR     #$05, D1
00001496  43F8 00CE               1302mm         LEA     OAN, A1     
0000149A  103C 000E               1303mm         MOVE.B  #14,D0          
0000149E  4E4F                    1304mm         TRAP    #15
000014A0  103C 0003               1305mm         MOVE.B  #3,D0          
000014A4  4E4F                    1306mm         TRAP    #15
000014A6                          1307mm         ENDM
000014A6  6000 0518               1308m         BRA     COMPLETE_25   
000014AA                          1309m        
000014AA                          1310m ADRREGINDIRECT_25:   
000014AA  BC3C 0001               1311m         CMP.B   #$01, D6
000014AE  6700 0032               1312m         BEQ     ADRREGINDIRECTSRC_25   
000014B2                          1313m ADRREGINDIRECTDEST_25:
000014B2                          1314mm         PRINTLB
000014B2  43F8 00D0               1315mm         LEA     OLB, A1     
000014B6  103C 000E               1316mm         MOVE.B  #14,D0          
000014BA  4E4F                    1317mm         TRAP    #15
000014BC                          1318mm         ENDM
000014BC                          1319mm         PRINTANDEST D3  
000014BC  3203                    1320mm         MOVE.W  D3, D1
000014BE  E949                    1321mm         LSL     #$04, D1
000014C0  E049                    1322mm         LSR     #$08, D1
000014C2  EA49                    1323mm         LSR     #$05, D1
000014C4  43F8 00CE               1324mm         LEA     OAN, A1     
000014C8  103C 000E               1325mm         MOVE.B  #14,D0          
000014CC  4E4F                    1326mm         TRAP    #15
000014CE  103C 0003               1327mm         MOVE.B  #3,D0          
000014D2  4E4F                    1328mm         TRAP    #15
000014D4                          1329mm         ENDM
000014D4                          1330mm         PRINTRB
000014D4  43F8 00D2               1331mm         LEA     ORB, A1     
000014D8  103C 000E               1332mm         MOVE.B  #14,D0          
000014DC  4E4F                    1333mm         TRAP    #15
000014DE                          1334mm         ENDM
000014DE  6000 04E0               1335m         BRA     COMPLETE_25     
000014E2                          1336m ADRREGINDIRECTSRC_25:   
000014E2                          1337mm         PRINTLB
000014E2  43F8 00D0               1338mm         LEA     OLB, A1     
000014E6  103C 000E               1339mm         MOVE.B  #14,D0          
000014EA  4E4F                    1340mm         TRAP    #15
000014EC                          1341mm         ENDM
000014EC                          1342mm         PRINTANSRC D3  
000014EC  3203                    1343mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014EE  E149                    1344mm         LSL     #$08, D1
000014F0  EB49                    1345mm         LSL     #$05, D1
000014F2  E049                    1346mm         LSR     #$08, D1
000014F4  EA49                    1347mm         LSR     #$05, D1
000014F6  43F8 00CE               1348mm         LEA     OAN, A1     
000014FA  103C 000E               1349mm         MOVE.B  #14,D0          
000014FE  4E4F                    1350mm         TRAP    #15
00001500  103C 0003               1351mm         MOVE.B  #3,D0          
00001504  4E4F                    1352mm         TRAP    #15
00001506                          1353mm         ENDM
00001506                          1354mm         PRINTRB
00001506  43F8 00D2               1355mm         LEA     ORB, A1     
0000150A  103C 000E               1356mm         MOVE.B  #14,D0          
0000150E  4E4F                    1357mm         TRAP    #15
00001510                          1358mm         ENDM
00001510  6000 04AE               1359m         BRA     COMPLETE_25   
00001514                          1360m         
00001514                          1361m ADRREGPOSTINC_25:   
00001514  BC3C 0001               1362m         CMP.B   #$01, D6
00001518  6700 003C               1363m         BEQ     ADRREGPOSTINCSRC_25   
0000151C                          1364m ADRREGPOSTINCDEST_25: 
0000151C                          1365mm         PRINTLB
0000151C  43F8 00D0               1366mm         LEA     OLB, A1     
00001520  103C 000E               1367mm         MOVE.B  #14,D0          
00001524  4E4F                    1368mm         TRAP    #15
00001526                          1369mm         ENDM
00001526                          1370mm         PRINTANDEST D3  
00001526  3203                    1371mm         MOVE.W  D3, D1
00001528  E949                    1372mm         LSL     #$04, D1
0000152A  E049                    1373mm         LSR     #$08, D1
0000152C  EA49                    1374mm         LSR     #$05, D1
0000152E  43F8 00CE               1375mm         LEA     OAN, A1     
00001532  103C 000E               1376mm         MOVE.B  #14,D0          
00001536  4E4F                    1377mm         TRAP    #15
00001538  103C 0003               1378mm         MOVE.B  #3,D0          
0000153C  4E4F                    1379mm         TRAP    #15
0000153E                          1380mm         ENDM
0000153E                          1381mm         PRINTRB
0000153E  43F8 00D2               1382mm         LEA     ORB, A1     
00001542  103C 000E               1383mm         MOVE.B  #14,D0          
00001546  4E4F                    1384mm         TRAP    #15
00001548                          1385mm         ENDM
00001548                          1386mm         PRINTPI
00001548  43F8 00D9               1387mm         LEA     OPSTINC, A1     
0000154C  103C 000E               1388mm         MOVE.B  #14,D0          
00001550  4E4F                    1389mm         TRAP    #15
00001552                          1390mm         ENDM
00001552  6000 046C               1391m         BRA     COMPLETE_25  
00001556                          1392m ADRREGPOSTINCSRC_25:           
00001556                          1393mm         PRINTLB
00001556  43F8 00D0               1394mm         LEA     OLB, A1     
0000155A  103C 000E               1395mm         MOVE.B  #14,D0          
0000155E  4E4F                    1396mm         TRAP    #15
00001560                          1397mm         ENDM
00001560                          1398mm         PRINTANSRC D3  
00001560  3203                    1399mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001562  E149                    1400mm         LSL     #$08, D1
00001564  EB49                    1401mm         LSL     #$05, D1
00001566  E049                    1402mm         LSR     #$08, D1
00001568  EA49                    1403mm         LSR     #$05, D1
0000156A  43F8 00CE               1404mm         LEA     OAN, A1     
0000156E  103C 000E               1405mm         MOVE.B  #14,D0          
00001572  4E4F                    1406mm         TRAP    #15
00001574  103C 0003               1407mm         MOVE.B  #3,D0          
00001578  4E4F                    1408mm         TRAP    #15
0000157A                          1409mm         ENDM
0000157A                          1410mm         PRINTRB
0000157A  43F8 00D2               1411mm         LEA     ORB, A1     
0000157E  103C 000E               1412mm         MOVE.B  #14,D0          
00001582  4E4F                    1413mm         TRAP    #15
00001584                          1414mm         ENDM
00001584                          1415mm         PRINTPI
00001584  43F8 00D9               1416mm         LEA     OPSTINC, A1     
00001588  103C 000E               1417mm         MOVE.B  #14,D0          
0000158C  4E4F                    1418mm         TRAP    #15
0000158E                          1419mm         ENDM
0000158E  6000 0430               1420m         BRA     COMPLETE_25  
00001592                          1421m ADRREGPREDEC_25: 
00001592  BC3C 0001               1422m         CMP.B   #$01, D6
00001596  6700 003C               1423m         BEQ     ADRREGPREDECSRC_25   
0000159A                          1424m ADRREGPREDECDEST_25:
0000159A                          1425mm         PRINTPD  
0000159A  43F8 00D7               1426mm         LEA     OPREDEC, A1     
0000159E  103C 000E               1427mm         MOVE.B  #14,D0          
000015A2  4E4F                    1428mm         TRAP    #15
000015A4                          1429mm         ENDM
000015A4                          1430mm         PRINTLB
000015A4  43F8 00D0               1431mm         LEA     OLB, A1     
000015A8  103C 000E               1432mm         MOVE.B  #14,D0          
000015AC  4E4F                    1433mm         TRAP    #15
000015AE                          1434mm         ENDM
000015AE                          1435mm         PRINTANDEST D3  
000015AE  3203                    1436mm         MOVE.W  D3, D1
000015B0  E949                    1437mm         LSL     #$04, D1
000015B2  E049                    1438mm         LSR     #$08, D1
000015B4  EA49                    1439mm         LSR     #$05, D1
000015B6  43F8 00CE               1440mm         LEA     OAN, A1     
000015BA  103C 000E               1441mm         MOVE.B  #14,D0          
000015BE  4E4F                    1442mm         TRAP    #15
000015C0  103C 0003               1443mm         MOVE.B  #3,D0          
000015C4  4E4F                    1444mm         TRAP    #15
000015C6                          1445mm         ENDM
000015C6                          1446mm         PRINTRB
000015C6  43F8 00D2               1447mm         LEA     ORB, A1     
000015CA  103C 000E               1448mm         MOVE.B  #14,D0          
000015CE  4E4F                    1449mm         TRAP    #15
000015D0                          1450mm         ENDM
000015D0  6000 03EE               1451m         BRA     COMPLETE_25   
000015D4                          1452m ADRREGPREDECSRC_25: 
000015D4                          1453mm         PRINTPD  
000015D4  43F8 00D7               1454mm         LEA     OPREDEC, A1     
000015D8  103C 000E               1455mm         MOVE.B  #14,D0          
000015DC  4E4F                    1456mm         TRAP    #15
000015DE                          1457mm         ENDM
000015DE                          1458mm         PRINTLB
000015DE  43F8 00D0               1459mm         LEA     OLB, A1     
000015E2  103C 000E               1460mm         MOVE.B  #14,D0          
000015E6  4E4F                    1461mm         TRAP    #15
000015E8                          1462mm         ENDM
000015E8                          1463mm         PRINTANSRC D3  
000015E8  3203                    1464mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000015EA  E149                    1465mm         LSL     #$08, D1
000015EC  EB49                    1466mm         LSL     #$05, D1
000015EE  E049                    1467mm         LSR     #$08, D1
000015F0  EA49                    1468mm         LSR     #$05, D1
000015F2  43F8 00CE               1469mm         LEA     OAN, A1     
000015F6  103C 000E               1470mm         MOVE.B  #14,D0          
000015FA  4E4F                    1471mm         TRAP    #15
000015FC  103C 0003               1472mm         MOVE.B  #3,D0          
00001600  4E4F                    1473mm         TRAP    #15
00001602                          1474mm         ENDM
00001602                          1475mm         PRINTRB
00001602  43F8 00D2               1476mm         LEA     ORB, A1     
00001606  103C 000E               1477mm         MOVE.B  #14,D0          
0000160A  4E4F                    1478mm         TRAP    #15
0000160C                          1479mm         ENDM
0000160C  6000 03B2               1480m         BRA     COMPLETE_25
00001610                          1481m        
00001610                          1482m ADRABSOLUTE_25:
00001610  BC3C 0001               1483m         CMP.B   #$01, D6
00001614  6600 0018               1484m         BNE     ADRABSOLUTEDST_25 
00001618                          1485m         
00001618  3A03                    1486m         MOVE.W  D3, D5
0000161A  0803 0002               1487m         BTST    #2, D3
0000161E  6600 0024               1488m         BNE     ADRIMMEDIATE_25
00001622  0803 0000               1489m         BTST    #0, D3
00001626  6600 0280               1490m         BNE     ADRABSOLUTEL_25
0000162A  6000 01E6               1491m         BRA     ADRABSOLUTEW_25
0000162E                          1492m ADRABSOLUTEDST_25:
0000162E  3A03                    1493m         MOVE.W  D3, D5
00001630  0803 000B               1494m         BTST    #$B, D3
00001634  6600 000E               1495m         BNE     ADRIMMEDIATE_25
00001638  0803 0009               1496m         BTST    #$09, D3
0000163C  6600 026A               1497m         BNE     ADRABSOLUTEL_25
00001640  6000 01D0               1498m         BRA     ADRABSOLUTEW_25
00001644                          1499m ADRIMMEDIATE_25:
00001644  BE3C 0001               1500m         CMP.B   #1, D7
00001648  6700 00A2               1501m         BEQ     ADRIMMEDIATEL_25
0000164C                          1502m ADRIMMEDIATEW_25:
0000164C  361A                    1503m         MOVE.W  (A2)+, D3
0000164E                          1504mm         PRINTHASH
0000164E  103C 0006               1505mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001652  323C 0023               1506mm         MOVE.W  #35, D1     ; AN = SIGN
00001656  4E4F                    1507mm         TRAP    #15         ; OUTPUT = SIGN
00001658                          1508mm         ENDM
00001658                          1509mm         PRINTSIGN
00001658  103C 0006               1510mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000165C  323C 0024               1511mm         MOVE.W  #36, D1     ; AN = SIGN
00001660  4E4F                    1512mm         TRAP    #15         ; OUTPUT = SIGN
00001662                          1513mm         ENDM
00001662                          1514mm         ADROUT
00001662  103C 0006               1515mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001666  3212                    1516mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001668  E049                    1517mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000166A  E849                    1518mm         LSR.W   #4, D1      
0000166C                          1519mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000166C  0C01 0009               1520mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001670  6E00 000A               1521mmm         BGT     ALPHA_55
00001674  0601 0030               1522mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001678  6000 0006               1523mmm         BRA     DONE_55
0000167C  0601 0037               1524mmm ALPHA_55: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001680  4E71                    1525mmm DONE_55: NOP
00001682                          1526mmm         ENDM
00001682  4E4F                    1527mm         TRAP    #15         ; EXECUTE OUTPUT
00001684                          1528mm         
00001684  3212                    1529mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001686  E949                    1530mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001688  E049                    1531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000168A  E849                    1532mm         LSR.W   #4, D1      
0000168C                          1533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000168C  0C01 0009               1534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001690  6E00 000A               1535mmm         BGT     ALPHA_56
00001694  0601 0030               1536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001698  6000 0006               1537mmm         BRA     DONE_56
0000169C  0601 0037               1538mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016A0  4E71                    1539mmm DONE_56: NOP
000016A2                          1540mmm         ENDM
000016A2  4E4F                    1541mm         TRAP    #15         ; EXECUTE OUTPUT
000016A4                          1542mm         
000016A4  3212                    1543mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016A6  E149                    1544mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016A8  E049                    1545mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016AA  E849                    1546mm         LSR.W   #4, D1      
000016AC                          1547mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016AC  0C01 0009               1548mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016B0  6E00 000A               1549mmm         BGT     ALPHA_57
000016B4  0601 0030               1550mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016B8  6000 0006               1551mmm         BRA     DONE_57
000016BC  0601 0037               1552mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016C0  4E71                    1553mmm DONE_57: NOP
000016C2                          1554mmm         ENDM
000016C2  4E4F                    1555mm         TRAP    #15         ; EXECUTE OUTPUT
000016C4                          1556mm         
000016C4  3212                    1557mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016C6  E149                    1558mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016C8  E949                    1559mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016CA  E049                    1560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016CC  E849                    1561mm         LSR.W   #4, D1      
000016CE                          1562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016CE  0C01 0009               1563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016D2  6E00 000A               1564mmm         BGT     ALPHA_58
000016D6  0601 0030               1565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016DA  6000 0006               1566mmm         BRA     DONE_58
000016DE  0601 0037               1567mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016E2  4E71                    1568mmm DONE_58: NOP
000016E4                          1569mmm         ENDM
000016E4  4E4F                    1570mm         TRAP    #15         ; EXECUTE OUTPUT       
000016E6                          1571mm         ENDM 
000016E6  3605                    1572m         MOVE.W  D5, D3
000016E8  6000 02D6               1573m         BRA     COMPLETE_25
000016EC                          1574m ADRIMMEDIATEL_25:
000016EC  361A                    1575m         MOVE.W  (A2)+, D3
000016EE                          1576mm         PRINTHASH
000016EE  103C 0006               1577mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016F2  323C 0023               1578mm         MOVE.W  #35, D1     ; AN = SIGN
000016F6  4E4F                    1579mm         TRAP    #15         ; OUTPUT = SIGN
000016F8                          1580mm         ENDM
000016F8                          1581mm         PRINTSIGN
000016F8  103C 0006               1582mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016FC  323C 0024               1583mm         MOVE.W  #36, D1     ; AN = SIGN
00001700  4E4F                    1584mm         TRAP    #15         ; OUTPUT = SIGN
00001702                          1585mm         ENDM
00001702                          1586mm         ADROUT 
00001702  103C 0006               1587mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001706  3212                    1588mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001708  E049                    1589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000170A  E849                    1590mm         LSR.W   #4, D1      
0000170C                          1591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000170C  0C01 0009               1592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001710  6E00 000A               1593mmm         BGT     ALPHA_62
00001714  0601 0030               1594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001718  6000 0006               1595mmm         BRA     DONE_62
0000171C  0601 0037               1596mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001720  4E71                    1597mmm DONE_62: NOP
00001722                          1598mmm         ENDM
00001722  4E4F                    1599mm         TRAP    #15         ; EXECUTE OUTPUT
00001724                          1600mm         
00001724  3212                    1601mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001726  E949                    1602mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001728  E049                    1603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000172A  E849                    1604mm         LSR.W   #4, D1      
0000172C                          1605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000172C  0C01 0009               1606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001730  6E00 000A               1607mmm         BGT     ALPHA_63
00001734  0601 0030               1608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001738  6000 0006               1609mmm         BRA     DONE_63
0000173C  0601 0037               1610mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001740  4E71                    1611mmm DONE_63: NOP
00001742                          1612mmm         ENDM
00001742  4E4F                    1613mm         TRAP    #15         ; EXECUTE OUTPUT
00001744                          1614mm         
00001744  3212                    1615mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001746  E149                    1616mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001748  E049                    1617mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000174A  E849                    1618mm         LSR.W   #4, D1      
0000174C                          1619mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000174C  0C01 0009               1620mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001750  6E00 000A               1621mmm         BGT     ALPHA_64
00001754  0601 0030               1622mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001758  6000 0006               1623mmm         BRA     DONE_64
0000175C  0601 0037               1624mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001760  4E71                    1625mmm DONE_64: NOP
00001762                          1626mmm         ENDM
00001762  4E4F                    1627mm         TRAP    #15         ; EXECUTE OUTPUT
00001764                          1628mm         
00001764  3212                    1629mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001766  E149                    1630mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001768  E949                    1631mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000176A  E049                    1632mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000176C  E849                    1633mm         LSR.W   #4, D1      
0000176E                          1634mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000176E  0C01 0009               1635mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001772  6E00 000A               1636mmm         BGT     ALPHA_65
00001776  0601 0030               1637mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000177A  6000 0006               1638mmm         BRA     DONE_65
0000177E  0601 0037               1639mmm ALPHA_65: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001782  4E71                    1640mmm DONE_65: NOP
00001784                          1641mmm         ENDM
00001784  4E4F                    1642mm         TRAP    #15         ; EXECUTE OUTPUT       
00001786                          1643mm         ENDM 
00001786  361A                    1644m         MOVE.W  (A2)+, D3
00001788                          1645mm         ADROUT
00001788  103C 0006               1646mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000178C  3212                    1647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000178E  E049                    1648mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001790  E849                    1649mm         LSR.W   #4, D1      
00001792                          1650mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001792  0C01 0009               1651mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001796  6E00 000A               1652mmm         BGT     ALPHA_67
0000179A  0601 0030               1653mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000179E  6000 0006               1654mmm         BRA     DONE_67
000017A2  0601 0037               1655mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017A6  4E71                    1656mmm DONE_67: NOP
000017A8                          1657mmm         ENDM
000017A8  4E4F                    1658mm         TRAP    #15         ; EXECUTE OUTPUT
000017AA                          1659mm         
000017AA  3212                    1660mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AC  E949                    1661mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000017AE  E049                    1662mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B0  E849                    1663mm         LSR.W   #4, D1      
000017B2                          1664mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B2  0C01 0009               1665mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B6  6E00 000A               1666mmm         BGT     ALPHA_68
000017BA  0601 0030               1667mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017BE  6000 0006               1668mmm         BRA     DONE_68
000017C2  0601 0037               1669mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C6  4E71                    1670mmm DONE_68: NOP
000017C8                          1671mmm         ENDM
000017C8  4E4F                    1672mm         TRAP    #15         ; EXECUTE OUTPUT
000017CA                          1673mm         
000017CA  3212                    1674mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017CC  E149                    1675mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017CE  E049                    1676mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D0  E849                    1677mm         LSR.W   #4, D1      
000017D2                          1678mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D2  0C01 0009               1679mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017D6  6E00 000A               1680mmm         BGT     ALPHA_69
000017DA  0601 0030               1681mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017DE  6000 0006               1682mmm         BRA     DONE_69
000017E2  0601 0037               1683mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017E6  4E71                    1684mmm DONE_69: NOP
000017E8                          1685mmm         ENDM
000017E8  4E4F                    1686mm         TRAP    #15         ; EXECUTE OUTPUT
000017EA                          1687mm         
000017EA  3212                    1688mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017EC  E149                    1689mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017EE  E949                    1690mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017F0  E049                    1691mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017F2  E849                    1692mm         LSR.W   #4, D1      
000017F4                          1693mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017F4  0C01 0009               1694mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017F8  6E00 000A               1695mmm         BGT     ALPHA_70
000017FC  0601 0030               1696mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001800  6000 0006               1697mmm         BRA     DONE_70
00001804  0601 0037               1698mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001808  4E71                    1699mmm DONE_70: NOP
0000180A                          1700mmm         ENDM
0000180A  4E4F                    1701mm         TRAP    #15         ; EXECUTE OUTPUT       
0000180C                          1702mm         ENDM 
0000180C  3605                    1703m         MOVE.W  D5, D3
0000180E  6000 01B0               1704m         BRA     COMPLETE_25 
00001812                          1705m ADRABSOLUTEW_25:     
00001812  361A                    1706m         MOVE.W  (A2)+, D3
00001814                          1707mm         PRINTSIGN
00001814  103C 0006               1708mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001818  323C 0024               1709mm         MOVE.W  #36, D1     ; AN = SIGN
0000181C  4E4F                    1710mm         TRAP    #15         ; OUTPUT = SIGN
0000181E                          1711mm         ENDM
0000181E                          1712mm         ADROUT
0000181E  103C 0006               1713mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001822  3212                    1714mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001824  E049                    1715mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001826  E849                    1716mm         LSR.W   #4, D1      
00001828                          1717mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001828  0C01 0009               1718mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182C  6E00 000A               1719mmm         BGT     ALPHA_73
00001830  0601 0030               1720mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001834  6000 0006               1721mmm         BRA     DONE_73
00001838  0601 0037               1722mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183C  4E71                    1723mmm DONE_73: NOP
0000183E                          1724mmm         ENDM
0000183E  4E4F                    1725mm         TRAP    #15         ; EXECUTE OUTPUT
00001840                          1726mm         
00001840  3212                    1727mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001842  E949                    1728mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001844  E049                    1729mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001846  E849                    1730mm         LSR.W   #4, D1      
00001848                          1731mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001848  0C01 0009               1732mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184C  6E00 000A               1733mmm         BGT     ALPHA_74
00001850  0601 0030               1734mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001854  6000 0006               1735mmm         BRA     DONE_74
00001858  0601 0037               1736mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185C  4E71                    1737mmm DONE_74: NOP
0000185E                          1738mmm         ENDM
0000185E  4E4F                    1739mm         TRAP    #15         ; EXECUTE OUTPUT
00001860                          1740mm         
00001860  3212                    1741mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001862  E149                    1742mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001864  E049                    1743mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001866  E849                    1744mm         LSR.W   #4, D1      
00001868                          1745mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001868  0C01 0009               1746mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186C  6E00 000A               1747mmm         BGT     ALPHA_75
00001870  0601 0030               1748mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001874  6000 0006               1749mmm         BRA     DONE_75
00001878  0601 0037               1750mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187C  4E71                    1751mmm DONE_75: NOP
0000187E                          1752mmm         ENDM
0000187E  4E4F                    1753mm         TRAP    #15         ; EXECUTE OUTPUT
00001880                          1754mm         
00001880  3212                    1755mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001882  E149                    1756mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001884  E949                    1757mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001886  E049                    1758mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001888  E849                    1759mm         LSR.W   #4, D1      
0000188A                          1760mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000188A  0C01 0009               1761mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188E  6E00 000A               1762mmm         BGT     ALPHA_76
00001892  0601 0030               1763mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001896  6000 0006               1764mmm         BRA     DONE_76
0000189A  0601 0037               1765mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189E  4E71                    1766mmm DONE_76: NOP
000018A0                          1767mmm         ENDM
000018A0  4E4F                    1768mm         TRAP    #15         ; EXECUTE OUTPUT       
000018A2                          1769mm         ENDM 
000018A2  3605                    1770m         MOVE.W  D5, D3
000018A4  6000 011A               1771m         BRA     COMPLETE_25  
000018A8                          1772m ADRABSOLUTEL_25:  
000018A8  361A                    1773m         MOVE.W  (A2)+, D3
000018AA                          1774mm         PRINTSIGN
000018AA  103C 0006               1775mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018AE  323C 0024               1776mm         MOVE.W  #36, D1     ; AN = SIGN
000018B2  4E4F                    1777mm         TRAP    #15         ; OUTPUT = SIGN
000018B4                          1778mm         ENDM
000018B4                          1779mm         ADROUT 
000018B4  103C 0006               1780mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018B8  3212                    1781mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018BA  E049                    1782mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018BC  E849                    1783mm         LSR.W   #4, D1      
000018BE                          1784mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018BE  0C01 0009               1785mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018C2  6E00 000A               1786mmm         BGT     ALPHA_79
000018C6  0601 0030               1787mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018CA  6000 0006               1788mmm         BRA     DONE_79
000018CE  0601 0037               1789mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018D2  4E71                    1790mmm DONE_79: NOP
000018D4                          1791mmm         ENDM
000018D4  4E4F                    1792mm         TRAP    #15         ; EXECUTE OUTPUT
000018D6                          1793mm         
000018D6  3212                    1794mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018D8  E949                    1795mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018DA  E049                    1796mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018DC  E849                    1797mm         LSR.W   #4, D1      
000018DE                          1798mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018DE  0C01 0009               1799mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018E2  6E00 000A               1800mmm         BGT     ALPHA_80
000018E6  0601 0030               1801mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018EA  6000 0006               1802mmm         BRA     DONE_80
000018EE  0601 0037               1803mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018F2  4E71                    1804mmm DONE_80: NOP
000018F4                          1805mmm         ENDM
000018F4  4E4F                    1806mm         TRAP    #15         ; EXECUTE OUTPUT
000018F6                          1807mm         
000018F6  3212                    1808mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018F8  E149                    1809mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018FA  E049                    1810mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018FC  E849                    1811mm         LSR.W   #4, D1      
000018FE                          1812mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018FE  0C01 0009               1813mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001902  6E00 000A               1814mmm         BGT     ALPHA_81
00001906  0601 0030               1815mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000190A  6000 0006               1816mmm         BRA     DONE_81
0000190E  0601 0037               1817mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001912  4E71                    1818mmm DONE_81: NOP
00001914                          1819mmm         ENDM
00001914  4E4F                    1820mm         TRAP    #15         ; EXECUTE OUTPUT
00001916                          1821mm         
00001916  3212                    1822mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001918  E149                    1823mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000191A  E949                    1824mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000191C  E049                    1825mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000191E  E849                    1826mm         LSR.W   #4, D1      
00001920                          1827mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001920  0C01 0009               1828mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001924  6E00 000A               1829mmm         BGT     ALPHA_82
00001928  0601 0030               1830mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000192C  6000 0006               1831mmm         BRA     DONE_82
00001930  0601 0037               1832mmm ALPHA_82: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001934  4E71                    1833mmm DONE_82: NOP
00001936                          1834mmm         ENDM
00001936  4E4F                    1835mm         TRAP    #15         ; EXECUTE OUTPUT       
00001938                          1836mm         ENDM 
00001938  361A                    1837m         MOVE.W  (A2)+, D3
0000193A                          1838mm         ADROUT
0000193A  103C 0006               1839mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000193E  3212                    1840mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001940  E049                    1841mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001942  E849                    1842mm         LSR.W   #4, D1      
00001944                          1843mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001944  0C01 0009               1844mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001948  6E00 000A               1845mmm         BGT     ALPHA_84
0000194C  0601 0030               1846mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001950  6000 0006               1847mmm         BRA     DONE_84
00001954  0601 0037               1848mmm ALPHA_84: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001958  4E71                    1849mmm DONE_84: NOP
0000195A                          1850mmm         ENDM
0000195A  4E4F                    1851mm         TRAP    #15         ; EXECUTE OUTPUT
0000195C                          1852mm         
0000195C  3212                    1853mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000195E  E949                    1854mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001960  E049                    1855mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001962  E849                    1856mm         LSR.W   #4, D1      
00001964                          1857mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001964  0C01 0009               1858mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001968  6E00 000A               1859mmm         BGT     ALPHA_85
0000196C  0601 0030               1860mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001970  6000 0006               1861mmm         BRA     DONE_85
00001974  0601 0037               1862mmm ALPHA_85: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001978  4E71                    1863mmm DONE_85: NOP
0000197A                          1864mmm         ENDM
0000197A  4E4F                    1865mm         TRAP    #15         ; EXECUTE OUTPUT
0000197C                          1866mm         
0000197C  3212                    1867mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000197E  E149                    1868mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001980  E049                    1869mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001982  E849                    1870mm         LSR.W   #4, D1      
00001984                          1871mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001984  0C01 0009               1872mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001988  6E00 000A               1873mmm         BGT     ALPHA_86
0000198C  0601 0030               1874mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001990  6000 0006               1875mmm         BRA     DONE_86
00001994  0601 0037               1876mmm ALPHA_86: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001998  4E71                    1877mmm DONE_86: NOP
0000199A                          1878mmm         ENDM
0000199A  4E4F                    1879mm         TRAP    #15         ; EXECUTE OUTPUT
0000199C                          1880mm         
0000199C  3212                    1881mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000199E  E149                    1882mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000019A0  E949                    1883mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000019A2  E049                    1884mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000019A4  E849                    1885mm         LSR.W   #4, D1      
000019A6                          1886mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000019A6  0C01 0009               1887mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000019AA  6E00 000A               1888mmm         BGT     ALPHA_87
000019AE  0601 0030               1889mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000019B2  6000 0006               1890mmm         BRA     DONE_87
000019B6  0601 0037               1891mmm ALPHA_87: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000019BA  4E71                    1892mmm DONE_87: NOP
000019BC                          1893mmm         ENDM
000019BC  4E4F                    1894mm         TRAP    #15         ; EXECUTE OUTPUT       
000019BE                          1895mm         ENDM 
000019BE  3605                    1896m         MOVE.W  D5, D3
000019C0                          1897m 
000019C0                          1898m COMPLETE_25:  ; OPCODE HAS BEEN VERIFIED
000019C0                          1899m         ENDM
000019C0                          1900m         printComma
000019C0  43F8 00D4               1901m         LEA     OCOMMA, A1     
000019C4  103C 000E               1902m         MOVE.B  #14,D0          
000019C8  4E4F                    1903m         TRAP    #15
000019CA                          1904m         ENDM
000019CA                          1905m         prepareAdrMode  #$0,  D3
000019CA  3C3C 0000               1906m         MOVE.W  #$0, D6      ; INPUT VALUE
000019CE  3203                    1907m         MOVE.W  D3, D1
000019D0  BC3C 0001               1908m         CMP.B   #$01, D6
000019D4  6700 000C               1909m         BEQ     ADRSOURCE_89    
000019D8                          1910m ADRDEST_89:
000019D8  EF49                    1911m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000019DA  E049                    1912m         LSR     #$08, D1
000019DC  EA49                    1913m         LSR     #$05, D1
000019DE  6000 000A               1914m         BRA     COMPLETE_89 
000019E2                          1915m ADRSOURCE_89:                
000019E2  E149                    1916m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000019E4  E549                    1917m         LSL     #$02, D1
000019E6  E049                    1918m         LSR     #$08, D1
000019E8  EA49                    1919m         LSR     #$05, D1
000019EA                          1920m COMPLETE_89:  ; OPCODE HAS BEEN VERIFIED
000019EA                          1921m         ENDM        
000019EA                          1922m         decodeAdrMode   D3, D1
000019EA  3603                    1923m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
000019EC  3201                    1924m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000019EE                          1925m 
000019EE  B23C 0001               1926m         CMP.B   #$01, D1
000019F2  6700 0066               1927m         BEQ     ADRREGDIRECT_90    
000019F6  B23C 0002               1928m         CMP.B   #$02, D1
000019FA  6700 00A0               1929m         BEQ     ADRREGINDIRECT_90  
000019FE  B23C 0003               1930m         CMP.B   #$03, D1
00001A02  6700 0102               1931m         BEQ     ADRREGPOSTINC_90  
00001A06  B23C 0004               1932m         CMP.B   #$04, D1
00001A0A  6700 0178               1933m         BEQ     ADRREGPREDEC_90
00001A0E  B23C 0007               1934m         CMP.B   #$07, D1
00001A12  6700 01EE               1935m         BEQ     ADRABSOLUTE_90    
00001A16                          1936m         
00001A16                          1937m DATAREGDIRECT_90: 
00001A16  BC3C 0001               1938m         CMP.B   #$01, D6
00001A1A  6700 001E               1939m         BEQ     DATAREGDIRECTSRC_90   
00001A1E                          1940m DATAREGDIRECTDEST_90: 
00001A1E                          1941mm         PRINTDNDEST D3 
00001A1E  3203                    1942mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001A20  E949                    1943mm         LSL     #$04, D1
00001A22  E049                    1944mm         LSR     #$08, D1
00001A24  EA49                    1945mm         LSR     #$05, D1
00001A26  43F8 00CC               1946mm         LEA     ODN, A1     
00001A2A  103C 000E               1947mm         MOVE.B  #14,D0          
00001A2E  4E4F                    1948mm         TRAP    #15
00001A30  103C 0003               1949mm         MOVE.B  #3,D0          
00001A34  4E4F                    1950mm         TRAP    #15
00001A36                          1951mm         ENDM
00001A36  6000 057A               1952m         BRA     COMPLETE_90 
00001A3A                          1953m DATAREGDIRECTSRC_90: 
00001A3A                          1954mm         PRINTDNSRC D3 
00001A3A  4281                    1955mm         CLR.L   D1
00001A3C  3203                    1956mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A3E  E149                    1957mm         LSL     #$08, D1
00001A40  EB49                    1958mm         LSL     #$05, D1
00001A42  E049                    1959mm         LSR     #$08, D1
00001A44  EA49                    1960mm         LSR     #$05, D1
00001A46  43F8 00CC               1961mm         LEA     ODN, A1     
00001A4A  103C 000E               1962mm         MOVE.B  #14,D0          
00001A4E  4E4F                    1963mm         TRAP    #15
00001A50  103C 0003               1964mm         MOVE.B  #3,D0          
00001A54  4E4F                    1965mm         TRAP    #15
00001A56                          1966mm         ENDM
00001A56  6000 055A               1967m         BRA     COMPLETE_90   
00001A5A                          1968m         
00001A5A                          1969m ADRREGDIRECT_90: 
00001A5A  BC3C 0001               1970m         CMP.B   #$01, D6
00001A5E  6700 001E               1971m         BEQ     ADRREGDIRECTSRC_90   
00001A62                          1972m ADRREGDIRECTDEST_90:
00001A62                          1973mm         PRINTANDEST D3
00001A62  3203                    1974mm         MOVE.W  D3, D1
00001A64  E949                    1975mm         LSL     #$04, D1
00001A66  E049                    1976mm         LSR     #$08, D1
00001A68  EA49                    1977mm         LSR     #$05, D1
00001A6A  43F8 00CE               1978mm         LEA     OAN, A1     
00001A6E  103C 000E               1979mm         MOVE.B  #14,D0          
00001A72  4E4F                    1980mm         TRAP    #15
00001A74  103C 0003               1981mm         MOVE.B  #3,D0          
00001A78  4E4F                    1982mm         TRAP    #15
00001A7A                          1983mm         ENDM
00001A7A  6000 0536               1984m         BRA     COMPLETE_90   
00001A7E                          1985m ADRREGDIRECTSRC_90:
00001A7E                          1986mm         PRINTANSRC D3
00001A7E  3203                    1987mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A80  E149                    1988mm         LSL     #$08, D1
00001A82  EB49                    1989mm         LSL     #$05, D1
00001A84  E049                    1990mm         LSR     #$08, D1
00001A86  EA49                    1991mm         LSR     #$05, D1
00001A88  43F8 00CE               1992mm         LEA     OAN, A1     
00001A8C  103C 000E               1993mm         MOVE.B  #14,D0          
00001A90  4E4F                    1994mm         TRAP    #15
00001A92  103C 0003               1995mm         MOVE.B  #3,D0          
00001A96  4E4F                    1996mm         TRAP    #15
00001A98                          1997mm         ENDM
00001A98  6000 0518               1998m         BRA     COMPLETE_90   
00001A9C                          1999m        
00001A9C                          2000m ADRREGINDIRECT_90:   
00001A9C  BC3C 0001               2001m         CMP.B   #$01, D6
00001AA0  6700 0032               2002m         BEQ     ADRREGINDIRECTSRC_90   
00001AA4                          2003m ADRREGINDIRECTDEST_90:
00001AA4                          2004mm         PRINTLB
00001AA4  43F8 00D0               2005mm         LEA     OLB, A1     
00001AA8  103C 000E               2006mm         MOVE.B  #14,D0          
00001AAC  4E4F                    2007mm         TRAP    #15
00001AAE                          2008mm         ENDM
00001AAE                          2009mm         PRINTANDEST D3  
00001AAE  3203                    2010mm         MOVE.W  D3, D1
00001AB0  E949                    2011mm         LSL     #$04, D1
00001AB2  E049                    2012mm         LSR     #$08, D1
00001AB4  EA49                    2013mm         LSR     #$05, D1
00001AB6  43F8 00CE               2014mm         LEA     OAN, A1     
00001ABA  103C 000E               2015mm         MOVE.B  #14,D0          
00001ABE  4E4F                    2016mm         TRAP    #15
00001AC0  103C 0003               2017mm         MOVE.B  #3,D0          
00001AC4  4E4F                    2018mm         TRAP    #15
00001AC6                          2019mm         ENDM
00001AC6                          2020mm         PRINTRB
00001AC6  43F8 00D2               2021mm         LEA     ORB, A1     
00001ACA  103C 000E               2022mm         MOVE.B  #14,D0          
00001ACE  4E4F                    2023mm         TRAP    #15
00001AD0                          2024mm         ENDM
00001AD0  6000 04E0               2025m         BRA     COMPLETE_90     
00001AD4                          2026m ADRREGINDIRECTSRC_90:   
00001AD4                          2027mm         PRINTLB
00001AD4  43F8 00D0               2028mm         LEA     OLB, A1     
00001AD8  103C 000E               2029mm         MOVE.B  #14,D0          
00001ADC  4E4F                    2030mm         TRAP    #15
00001ADE                          2031mm         ENDM
00001ADE                          2032mm         PRINTANSRC D3  
00001ADE  3203                    2033mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001AE0  E149                    2034mm         LSL     #$08, D1
00001AE2  EB49                    2035mm         LSL     #$05, D1
00001AE4  E049                    2036mm         LSR     #$08, D1
00001AE6  EA49                    2037mm         LSR     #$05, D1
00001AE8  43F8 00CE               2038mm         LEA     OAN, A1     
00001AEC  103C 000E               2039mm         MOVE.B  #14,D0          
00001AF0  4E4F                    2040mm         TRAP    #15
00001AF2  103C 0003               2041mm         MOVE.B  #3,D0          
00001AF6  4E4F                    2042mm         TRAP    #15
00001AF8                          2043mm         ENDM
00001AF8                          2044mm         PRINTRB
00001AF8  43F8 00D2               2045mm         LEA     ORB, A1     
00001AFC  103C 000E               2046mm         MOVE.B  #14,D0          
00001B00  4E4F                    2047mm         TRAP    #15
00001B02                          2048mm         ENDM
00001B02  6000 04AE               2049m         BRA     COMPLETE_90   
00001B06                          2050m         
00001B06                          2051m ADRREGPOSTINC_90:   
00001B06  BC3C 0001               2052m         CMP.B   #$01, D6
00001B0A  6700 003C               2053m         BEQ     ADRREGPOSTINCSRC_90   
00001B0E                          2054m ADRREGPOSTINCDEST_90: 
00001B0E                          2055mm         PRINTLB
00001B0E  43F8 00D0               2056mm         LEA     OLB, A1     
00001B12  103C 000E               2057mm         MOVE.B  #14,D0          
00001B16  4E4F                    2058mm         TRAP    #15
00001B18                          2059mm         ENDM
00001B18                          2060mm         PRINTANDEST D3  
00001B18  3203                    2061mm         MOVE.W  D3, D1
00001B1A  E949                    2062mm         LSL     #$04, D1
00001B1C  E049                    2063mm         LSR     #$08, D1
00001B1E  EA49                    2064mm         LSR     #$05, D1
00001B20  43F8 00CE               2065mm         LEA     OAN, A1     
00001B24  103C 000E               2066mm         MOVE.B  #14,D0          
00001B28  4E4F                    2067mm         TRAP    #15
00001B2A  103C 0003               2068mm         MOVE.B  #3,D0          
00001B2E  4E4F                    2069mm         TRAP    #15
00001B30                          2070mm         ENDM
00001B30                          2071mm         PRINTRB
00001B30  43F8 00D2               2072mm         LEA     ORB, A1     
00001B34  103C 000E               2073mm         MOVE.B  #14,D0          
00001B38  4E4F                    2074mm         TRAP    #15
00001B3A                          2075mm         ENDM
00001B3A                          2076mm         PRINTPI
00001B3A  43F8 00D9               2077mm         LEA     OPSTINC, A1     
00001B3E  103C 000E               2078mm         MOVE.B  #14,D0          
00001B42  4E4F                    2079mm         TRAP    #15
00001B44                          2080mm         ENDM
00001B44  6000 046C               2081m         BRA     COMPLETE_90  
00001B48                          2082m ADRREGPOSTINCSRC_90:           
00001B48                          2083mm         PRINTLB
00001B48  43F8 00D0               2084mm         LEA     OLB, A1     
00001B4C  103C 000E               2085mm         MOVE.B  #14,D0          
00001B50  4E4F                    2086mm         TRAP    #15
00001B52                          2087mm         ENDM
00001B52                          2088mm         PRINTANSRC D3  
00001B52  3203                    2089mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B54  E149                    2090mm         LSL     #$08, D1
00001B56  EB49                    2091mm         LSL     #$05, D1
00001B58  E049                    2092mm         LSR     #$08, D1
00001B5A  EA49                    2093mm         LSR     #$05, D1
00001B5C  43F8 00CE               2094mm         LEA     OAN, A1     
00001B60  103C 000E               2095mm         MOVE.B  #14,D0          
00001B64  4E4F                    2096mm         TRAP    #15
00001B66  103C 0003               2097mm         MOVE.B  #3,D0          
00001B6A  4E4F                    2098mm         TRAP    #15
00001B6C                          2099mm         ENDM
00001B6C                          2100mm         PRINTRB
00001B6C  43F8 00D2               2101mm         LEA     ORB, A1     
00001B70  103C 000E               2102mm         MOVE.B  #14,D0          
00001B74  4E4F                    2103mm         TRAP    #15
00001B76                          2104mm         ENDM
00001B76                          2105mm         PRINTPI
00001B76  43F8 00D9               2106mm         LEA     OPSTINC, A1     
00001B7A  103C 000E               2107mm         MOVE.B  #14,D0          
00001B7E  4E4F                    2108mm         TRAP    #15
00001B80                          2109mm         ENDM
00001B80  6000 0430               2110m         BRA     COMPLETE_90  
00001B84                          2111m ADRREGPREDEC_90: 
00001B84  BC3C 0001               2112m         CMP.B   #$01, D6
00001B88  6700 003C               2113m         BEQ     ADRREGPREDECSRC_90   
00001B8C                          2114m ADRREGPREDECDEST_90:
00001B8C                          2115mm         PRINTPD  
00001B8C  43F8 00D7               2116mm         LEA     OPREDEC, A1     
00001B90  103C 000E               2117mm         MOVE.B  #14,D0          
00001B94  4E4F                    2118mm         TRAP    #15
00001B96                          2119mm         ENDM
00001B96                          2120mm         PRINTLB
00001B96  43F8 00D0               2121mm         LEA     OLB, A1     
00001B9A  103C 000E               2122mm         MOVE.B  #14,D0          
00001B9E  4E4F                    2123mm         TRAP    #15
00001BA0                          2124mm         ENDM
00001BA0                          2125mm         PRINTANDEST D3  
00001BA0  3203                    2126mm         MOVE.W  D3, D1
00001BA2  E949                    2127mm         LSL     #$04, D1
00001BA4  E049                    2128mm         LSR     #$08, D1
00001BA6  EA49                    2129mm         LSR     #$05, D1
00001BA8  43F8 00CE               2130mm         LEA     OAN, A1     
00001BAC  103C 000E               2131mm         MOVE.B  #14,D0          
00001BB0  4E4F                    2132mm         TRAP    #15
00001BB2  103C 0003               2133mm         MOVE.B  #3,D0          
00001BB6  4E4F                    2134mm         TRAP    #15
00001BB8                          2135mm         ENDM
00001BB8                          2136mm         PRINTRB
00001BB8  43F8 00D2               2137mm         LEA     ORB, A1     
00001BBC  103C 000E               2138mm         MOVE.B  #14,D0          
00001BC0  4E4F                    2139mm         TRAP    #15
00001BC2                          2140mm         ENDM
00001BC2  6000 03EE               2141m         BRA     COMPLETE_90   
00001BC6                          2142m ADRREGPREDECSRC_90: 
00001BC6                          2143mm         PRINTPD  
00001BC6  43F8 00D7               2144mm         LEA     OPREDEC, A1     
00001BCA  103C 000E               2145mm         MOVE.B  #14,D0          
00001BCE  4E4F                    2146mm         TRAP    #15
00001BD0                          2147mm         ENDM
00001BD0                          2148mm         PRINTLB
00001BD0  43F8 00D0               2149mm         LEA     OLB, A1     
00001BD4  103C 000E               2150mm         MOVE.B  #14,D0          
00001BD8  4E4F                    2151mm         TRAP    #15
00001BDA                          2152mm         ENDM
00001BDA                          2153mm         PRINTANSRC D3  
00001BDA  3203                    2154mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001BDC  E149                    2155mm         LSL     #$08, D1
00001BDE  EB49                    2156mm         LSL     #$05, D1
00001BE0  E049                    2157mm         LSR     #$08, D1
00001BE2  EA49                    2158mm         LSR     #$05, D1
00001BE4  43F8 00CE               2159mm         LEA     OAN, A1     
00001BE8  103C 000E               2160mm         MOVE.B  #14,D0          
00001BEC  4E4F                    2161mm         TRAP    #15
00001BEE  103C 0003               2162mm         MOVE.B  #3,D0          
00001BF2  4E4F                    2163mm         TRAP    #15
00001BF4                          2164mm         ENDM
00001BF4                          2165mm         PRINTRB
00001BF4  43F8 00D2               2166mm         LEA     ORB, A1     
00001BF8  103C 000E               2167mm         MOVE.B  #14,D0          
00001BFC  4E4F                    2168mm         TRAP    #15
00001BFE                          2169mm         ENDM
00001BFE  6000 03B2               2170m         BRA     COMPLETE_90
00001C02                          2171m        
00001C02                          2172m ADRABSOLUTE_90:
00001C02  BC3C 0001               2173m         CMP.B   #$01, D6
00001C06  6600 0018               2174m         BNE     ADRABSOLUTEDST_90 
00001C0A                          2175m         
00001C0A  3A03                    2176m         MOVE.W  D3, D5
00001C0C  0803 0002               2177m         BTST    #2, D3
00001C10  6600 0024               2178m         BNE     ADRIMMEDIATE_90
00001C14  0803 0000               2179m         BTST    #0, D3
00001C18  6600 0280               2180m         BNE     ADRABSOLUTEL_90
00001C1C  6000 01E6               2181m         BRA     ADRABSOLUTEW_90
00001C20                          2182m ADRABSOLUTEDST_90:
00001C20  3A03                    2183m         MOVE.W  D3, D5
00001C22  0803 000B               2184m         BTST    #$B, D3
00001C26  6600 000E               2185m         BNE     ADRIMMEDIATE_90
00001C2A  0803 0009               2186m         BTST    #$09, D3
00001C2E  6600 026A               2187m         BNE     ADRABSOLUTEL_90
00001C32  6000 01D0               2188m         BRA     ADRABSOLUTEW_90
00001C36                          2189m ADRIMMEDIATE_90:
00001C36  BE3C 0001               2190m         CMP.B   #1, D7
00001C3A  6700 00A2               2191m         BEQ     ADRIMMEDIATEL_90
00001C3E                          2192m ADRIMMEDIATEW_90:
00001C3E  361A                    2193m         MOVE.W  (A2)+, D3
00001C40                          2194mm         PRINTHASH
00001C40  103C 0006               2195mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C44  323C 0023               2196mm         MOVE.W  #35, D1     ; AN = SIGN
00001C48  4E4F                    2197mm         TRAP    #15         ; OUTPUT = SIGN
00001C4A                          2198mm         ENDM
00001C4A                          2199mm         PRINTSIGN
00001C4A  103C 0006               2200mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C4E  323C 0024               2201mm         MOVE.W  #36, D1     ; AN = SIGN
00001C52  4E4F                    2202mm         TRAP    #15         ; OUTPUT = SIGN
00001C54                          2203mm         ENDM
00001C54                          2204mm         ADROUT
00001C54  103C 0006               2205mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C58  3212                    2206mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C5A  E049                    2207mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C5C  E849                    2208mm         LSR.W   #4, D1      
00001C5E                          2209mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5E  0C01 0009               2210mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C62  6E00 000A               2211mmm         BGT     ALPHA_120
00001C66  0601 0030               2212mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C6A  6000 0006               2213mmm         BRA     DONE_120
00001C6E  0601 0037               2214mmm ALPHA_120: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C72  4E71                    2215mmm DONE_120: NOP
00001C74                          2216mmm         ENDM
00001C74  4E4F                    2217mm         TRAP    #15         ; EXECUTE OUTPUT
00001C76                          2218mm         
00001C76  3212                    2219mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C78  E949                    2220mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C7A  E049                    2221mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C7C  E849                    2222mm         LSR.W   #4, D1      
00001C7E                          2223mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7E  0C01 0009               2224mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C82  6E00 000A               2225mmm         BGT     ALPHA_121
00001C86  0601 0030               2226mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C8A  6000 0006               2227mmm         BRA     DONE_121
00001C8E  0601 0037               2228mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C92  4E71                    2229mmm DONE_121: NOP
00001C94                          2230mmm         ENDM
00001C94  4E4F                    2231mm         TRAP    #15         ; EXECUTE OUTPUT
00001C96                          2232mm         
00001C96  3212                    2233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C98  E149                    2234mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C9A  E049                    2235mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9C  E849                    2236mm         LSR.W   #4, D1      
00001C9E                          2237mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9E  0C01 0009               2238mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA2  6E00 000A               2239mmm         BGT     ALPHA_122
00001CA6  0601 0030               2240mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CAA  6000 0006               2241mmm         BRA     DONE_122
00001CAE  0601 0037               2242mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB2  4E71                    2243mmm DONE_122: NOP
00001CB4                          2244mmm         ENDM
00001CB4  4E4F                    2245mm         TRAP    #15         ; EXECUTE OUTPUT
00001CB6                          2246mm         
00001CB6  3212                    2247mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB8  E149                    2248mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CBA  E949                    2249mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001CBC  E049                    2250mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBE  E849                    2251mm         LSR.W   #4, D1      
00001CC0                          2252mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CC0  0C01 0009               2253mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC4  6E00 000A               2254mmm         BGT     ALPHA_123
00001CC8  0601 0030               2255mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CCC  6000 0006               2256mmm         BRA     DONE_123
00001CD0  0601 0037               2257mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD4  4E71                    2258mmm DONE_123: NOP
00001CD6                          2259mmm         ENDM
00001CD6  4E4F                    2260mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CD8                          2261mm         ENDM 
00001CD8  3605                    2262m         MOVE.W  D5, D3
00001CDA  6000 02D6               2263m         BRA     COMPLETE_90
00001CDE                          2264m ADRIMMEDIATEL_90:
00001CDE  361A                    2265m         MOVE.W  (A2)+, D3
00001CE0                          2266mm         PRINTHASH
00001CE0  103C 0006               2267mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CE4  323C 0023               2268mm         MOVE.W  #35, D1     ; AN = SIGN
00001CE8  4E4F                    2269mm         TRAP    #15         ; OUTPUT = SIGN
00001CEA                          2270mm         ENDM
00001CEA                          2271mm         PRINTSIGN
00001CEA  103C 0006               2272mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CEE  323C 0024               2273mm         MOVE.W  #36, D1     ; AN = SIGN
00001CF2  4E4F                    2274mm         TRAP    #15         ; OUTPUT = SIGN
00001CF4                          2275mm         ENDM
00001CF4                          2276mm         ADROUT 
00001CF4  103C 0006               2277mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CF8  3212                    2278mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CFA  E049                    2279mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFC  E849                    2280mm         LSR.W   #4, D1      
00001CFE                          2281mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFE  0C01 0009               2282mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D02  6E00 000A               2283mmm         BGT     ALPHA_127
00001D06  0601 0030               2284mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D0A  6000 0006               2285mmm         BRA     DONE_127
00001D0E  0601 0037               2286mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D12  4E71                    2287mmm DONE_127: NOP
00001D14                          2288mmm         ENDM
00001D14  4E4F                    2289mm         TRAP    #15         ; EXECUTE OUTPUT
00001D16                          2290mm         
00001D16  3212                    2291mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D18  E949                    2292mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D1A  E049                    2293mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2294mm         LSR.W   #4, D1      
00001D1E                          2295mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2296mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2297mmm         BGT     ALPHA_128
00001D26  0601 0030               2298mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2299mmm         BRA     DONE_128
00001D2E  0601 0037               2300mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2301mmm DONE_128: NOP
00001D34                          2302mmm         ENDM
00001D34  4E4F                    2303mm         TRAP    #15         ; EXECUTE OUTPUT
00001D36                          2304mm         
00001D36  3212                    2305mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D38  E149                    2306mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D3A  E049                    2307mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D3C  E849                    2308mm         LSR.W   #4, D1      
00001D3E                          2309mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D3E  0C01 0009               2310mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D42  6E00 000A               2311mmm         BGT     ALPHA_129
00001D46  0601 0030               2312mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D4A  6000 0006               2313mmm         BRA     DONE_129
00001D4E  0601 0037               2314mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D52  4E71                    2315mmm DONE_129: NOP
00001D54                          2316mmm         ENDM
00001D54  4E4F                    2317mm         TRAP    #15         ; EXECUTE OUTPUT
00001D56                          2318mm         
00001D56  3212                    2319mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D58  E149                    2320mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D5A  E949                    2321mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D5C  E049                    2322mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D5E  E849                    2323mm         LSR.W   #4, D1      
00001D60                          2324mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D60  0C01 0009               2325mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D64  6E00 000A               2326mmm         BGT     ALPHA_130
00001D68  0601 0030               2327mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D6C  6000 0006               2328mmm         BRA     DONE_130
00001D70  0601 0037               2329mmm ALPHA_130: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D74  4E71                    2330mmm DONE_130: NOP
00001D76                          2331mmm         ENDM
00001D76  4E4F                    2332mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D78                          2333mm         ENDM 
00001D78  361A                    2334m         MOVE.W  (A2)+, D3
00001D7A                          2335mm         ADROUT
00001D7A  103C 0006               2336mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D7E  3212                    2337mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D80  E049                    2338mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D82  E849                    2339mm         LSR.W   #4, D1      
00001D84                          2340mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D84  0C01 0009               2341mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D88  6E00 000A               2342mmm         BGT     ALPHA_132
00001D8C  0601 0030               2343mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D90  6000 0006               2344mmm         BRA     DONE_132
00001D94  0601 0037               2345mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D98  4E71                    2346mmm DONE_132: NOP
00001D9A                          2347mmm         ENDM
00001D9A  4E4F                    2348mm         TRAP    #15         ; EXECUTE OUTPUT
00001D9C                          2349mm         
00001D9C  3212                    2350mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D9E  E949                    2351mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DA0  E049                    2352mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DA2  E849                    2353mm         LSR.W   #4, D1      
00001DA4                          2354mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DA4  0C01 0009               2355mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DA8  6E00 000A               2356mmm         BGT     ALPHA_133
00001DAC  0601 0030               2357mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DB0  6000 0006               2358mmm         BRA     DONE_133
00001DB4  0601 0037               2359mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DB8  4E71                    2360mmm DONE_133: NOP
00001DBA                          2361mmm         ENDM
00001DBA  4E4F                    2362mm         TRAP    #15         ; EXECUTE OUTPUT
00001DBC                          2363mm         
00001DBC  3212                    2364mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DBE  E149                    2365mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DC0  E049                    2366mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DC2  E849                    2367mm         LSR.W   #4, D1      
00001DC4                          2368mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DC4  0C01 0009               2369mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DC8  6E00 000A               2370mmm         BGT     ALPHA_134
00001DCC  0601 0030               2371mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DD0  6000 0006               2372mmm         BRA     DONE_134
00001DD4  0601 0037               2373mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DD8  4E71                    2374mmm DONE_134: NOP
00001DDA                          2375mmm         ENDM
00001DDA  4E4F                    2376mm         TRAP    #15         ; EXECUTE OUTPUT
00001DDC                          2377mm         
00001DDC  3212                    2378mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDE  E149                    2379mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DE0  E949                    2380mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DE2  E049                    2381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DE4  E849                    2382mm         LSR.W   #4, D1      
00001DE6                          2383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE6  0C01 0009               2384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DEA  6E00 000A               2385mmm         BGT     ALPHA_135
00001DEE  0601 0030               2386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DF2  6000 0006               2387mmm         BRA     DONE_135
00001DF6  0601 0037               2388mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DFA  4E71                    2389mmm DONE_135: NOP
00001DFC                          2390mmm         ENDM
00001DFC  4E4F                    2391mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DFE                          2392mm         ENDM 
00001DFE  3605                    2393m         MOVE.W  D5, D3
00001E00  6000 01B0               2394m         BRA     COMPLETE_90 
00001E04                          2395m ADRABSOLUTEW_90:     
00001E04  361A                    2396m         MOVE.W  (A2)+, D3
00001E06                          2397mm         PRINTSIGN
00001E06  103C 0006               2398mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E0A  323C 0024               2399mm         MOVE.W  #36, D1     ; AN = SIGN
00001E0E  4E4F                    2400mm         TRAP    #15         ; OUTPUT = SIGN
00001E10                          2401mm         ENDM
00001E10                          2402mm         ADROUT
00001E10  103C 0006               2403mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E14  3212                    2404mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E16  E049                    2405mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E18  E849                    2406mm         LSR.W   #4, D1      
00001E1A                          2407mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E1A  0C01 0009               2408mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E1E  6E00 000A               2409mmm         BGT     ALPHA_138
00001E22  0601 0030               2410mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E26  6000 0006               2411mmm         BRA     DONE_138
00001E2A  0601 0037               2412mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E2E  4E71                    2413mmm DONE_138: NOP
00001E30                          2414mmm         ENDM
00001E30  4E4F                    2415mm         TRAP    #15         ; EXECUTE OUTPUT
00001E32                          2416mm         
00001E32  3212                    2417mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E34  E949                    2418mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E36  E049                    2419mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E38  E849                    2420mm         LSR.W   #4, D1      
00001E3A                          2421mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E3A  0C01 0009               2422mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E3E  6E00 000A               2423mmm         BGT     ALPHA_139
00001E42  0601 0030               2424mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E46  6000 0006               2425mmm         BRA     DONE_139
00001E4A  0601 0037               2426mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E4E  4E71                    2427mmm DONE_139: NOP
00001E50                          2428mmm         ENDM
00001E50  4E4F                    2429mm         TRAP    #15         ; EXECUTE OUTPUT
00001E52                          2430mm         
00001E52  3212                    2431mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E54  E149                    2432mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E56  E049                    2433mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E58  E849                    2434mm         LSR.W   #4, D1      
00001E5A                          2435mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E5A  0C01 0009               2436mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E5E  6E00 000A               2437mmm         BGT     ALPHA_140
00001E62  0601 0030               2438mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E66  6000 0006               2439mmm         BRA     DONE_140
00001E6A  0601 0037               2440mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E6E  4E71                    2441mmm DONE_140: NOP
00001E70                          2442mmm         ENDM
00001E70  4E4F                    2443mm         TRAP    #15         ; EXECUTE OUTPUT
00001E72                          2444mm         
00001E72  3212                    2445mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E74  E149                    2446mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E76  E949                    2447mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E78  E049                    2448mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E7A  E849                    2449mm         LSR.W   #4, D1      
00001E7C                          2450mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E7C  0C01 0009               2451mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E80  6E00 000A               2452mmm         BGT     ALPHA_141
00001E84  0601 0030               2453mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E88  6000 0006               2454mmm         BRA     DONE_141
00001E8C  0601 0037               2455mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E90  4E71                    2456mmm DONE_141: NOP
00001E92                          2457mmm         ENDM
00001E92  4E4F                    2458mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E94                          2459mm         ENDM 
00001E94  3605                    2460m         MOVE.W  D5, D3
00001E96  6000 011A               2461m         BRA     COMPLETE_90  
00001E9A                          2462m ADRABSOLUTEL_90:  
00001E9A  361A                    2463m         MOVE.W  (A2)+, D3
00001E9C                          2464mm         PRINTSIGN
00001E9C  103C 0006               2465mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EA0  323C 0024               2466mm         MOVE.W  #36, D1     ; AN = SIGN
00001EA4  4E4F                    2467mm         TRAP    #15         ; OUTPUT = SIGN
00001EA6                          2468mm         ENDM
00001EA6                          2469mm         ADROUT 
00001EA6  103C 0006               2470mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EAA  3212                    2471mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EAC  E049                    2472mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EAE  E849                    2473mm         LSR.W   #4, D1      
00001EB0                          2474mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EB0  0C01 0009               2475mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EB4  6E00 000A               2476mmm         BGT     ALPHA_144
00001EB8  0601 0030               2477mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EBC  6000 0006               2478mmm         BRA     DONE_144
00001EC0  0601 0037               2479mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EC4  4E71                    2480mmm DONE_144: NOP
00001EC6                          2481mmm         ENDM
00001EC6  4E4F                    2482mm         TRAP    #15         ; EXECUTE OUTPUT
00001EC8                          2483mm         
00001EC8  3212                    2484mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001ECA  E949                    2485mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001ECC  E049                    2486mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001ECE  E849                    2487mm         LSR.W   #4, D1      
00001ED0                          2488mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001ED0  0C01 0009               2489mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001ED4  6E00 000A               2490mmm         BGT     ALPHA_145
00001ED8  0601 0030               2491mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EDC  6000 0006               2492mmm         BRA     DONE_145
00001EE0  0601 0037               2493mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EE4  4E71                    2494mmm DONE_145: NOP
00001EE6                          2495mmm         ENDM
00001EE6  4E4F                    2496mm         TRAP    #15         ; EXECUTE OUTPUT
00001EE8                          2497mm         
00001EE8  3212                    2498mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EEA  E149                    2499mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EEC  E049                    2500mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EEE  E849                    2501mm         LSR.W   #4, D1      
00001EF0                          2502mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EF0  0C01 0009               2503mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EF4  6E00 000A               2504mmm         BGT     ALPHA_146
00001EF8  0601 0030               2505mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EFC  6000 0006               2506mmm         BRA     DONE_146
00001F00  0601 0037               2507mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F04  4E71                    2508mmm DONE_146: NOP
00001F06                          2509mmm         ENDM
00001F06  4E4F                    2510mm         TRAP    #15         ; EXECUTE OUTPUT
00001F08                          2511mm         
00001F08  3212                    2512mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F0A  E149                    2513mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F0C  E949                    2514mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F0E  E049                    2515mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F10  E849                    2516mm         LSR.W   #4, D1      
00001F12                          2517mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F12  0C01 0009               2518mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F16  6E00 000A               2519mmm         BGT     ALPHA_147
00001F1A  0601 0030               2520mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F1E  6000 0006               2521mmm         BRA     DONE_147
00001F22  0601 0037               2522mmm ALPHA_147: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F26  4E71                    2523mmm DONE_147: NOP
00001F28                          2524mmm         ENDM
00001F28  4E4F                    2525mm         TRAP    #15         ; EXECUTE OUTPUT       
00001F2A                          2526mm         ENDM 
00001F2A  361A                    2527m         MOVE.W  (A2)+, D3
00001F2C                          2528mm         ADROUT
00001F2C  103C 0006               2529mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001F30  3212                    2530mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F32  E049                    2531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F34  E849                    2532mm         LSR.W   #4, D1      
00001F36                          2533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F36  0C01 0009               2534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F3A  6E00 000A               2535mmm         BGT     ALPHA_149
00001F3E  0601 0030               2536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F42  6000 0006               2537mmm         BRA     DONE_149
00001F46  0601 0037               2538mmm ALPHA_149: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F4A  4E71                    2539mmm DONE_149: NOP
00001F4C                          2540mmm         ENDM
00001F4C  4E4F                    2541mm         TRAP    #15         ; EXECUTE OUTPUT
00001F4E                          2542mm         
00001F4E  3212                    2543mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F50  E949                    2544mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001F52  E049                    2545mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F54  E849                    2546mm         LSR.W   #4, D1      
00001F56                          2547mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F56  0C01 0009               2548mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F5A  6E00 000A               2549mmm         BGT     ALPHA_150
00001F5E  0601 0030               2550mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F62  6000 0006               2551mmm         BRA     DONE_150
00001F66  0601 0037               2552mmm ALPHA_150: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F6A  4E71                    2553mmm DONE_150: NOP
00001F6C                          2554mmm         ENDM
00001F6C  4E4F                    2555mm         TRAP    #15         ; EXECUTE OUTPUT
00001F6E                          2556mm         
00001F6E  3212                    2557mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F70  E149                    2558mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F72  E049                    2559mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F74  E849                    2560mm         LSR.W   #4, D1      
00001F76                          2561mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F76  0C01 0009               2562mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F7A  6E00 000A               2563mmm         BGT     ALPHA_151
00001F7E  0601 0030               2564mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F82  6000 0006               2565mmm         BRA     DONE_151
00001F86  0601 0037               2566mmm ALPHA_151: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F8A  4E71                    2567mmm DONE_151: NOP
00001F8C                          2568mmm         ENDM
00001F8C  4E4F                    2569mm         TRAP    #15         ; EXECUTE OUTPUT
00001F8E                          2570mm         
00001F8E  3212                    2571mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F90  E149                    2572mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F92  E949                    2573mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F94  E049                    2574mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F96  E849                    2575mm         LSR.W   #4, D1      
00001F98                          2576mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F98  0C01 0009               2577mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F9C  6E00 000A               2578mmm         BGT     ALPHA_152
00001FA0  0601 0030               2579mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001FA4  6000 0006               2580mmm         BRA     DONE_152
00001FA8  0601 0037               2581mmm ALPHA_152: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001FAC  4E71                    2582mmm DONE_152: NOP
00001FAE                          2583mmm         ENDM
00001FAE  4E4F                    2584mm         TRAP    #15         ; EXECUTE OUTPUT       
00001FB0                          2585mm         ENDM 
00001FB0  3605                    2586m         MOVE.W  D5, D3
00001FB2                          2587m 
00001FB2                          2588m COMPLETE_90:  ; OPCODE HAS BEEN VERIFIED
00001FB2                          2589m         ENDM
00001FB2  4E75                    2590          RTS                 ; Return from decodeMOVE subroutine
00001FB4                          2591  
00001FB4                          2592  
00001FB4                          2593  ; ------------------------------------------------------------
00001FB4                          2594  ; 3. "decodeMOVEM" subroutine
00001FB4                          2595  ; AUTHOR
00001FB4                          2596  ;
00001FB4                          2597  ; TODO: DESCRIPTION
00001FB4                          2598  ; ------------------------------------------------------------
00001FB4                          2599  decodeMOVEM:
00001FB4                          2600m         verifyOpcode    pMOVEM, (A2)
00001FB4  43F8 011D               2601m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001FB8  3612                    2602m         MOVE.W  (A2), D3      ; INPUT VALUE
00001FBA  123C 000F               2603m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001FBE                          2604m         
00001FBE                          2605m LOOP_153: 
00001FBE  0C11 0030               2606m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001FC2  6700 000E               2607m         BEQ     CHECKFOR0_153
00001FC6  0C11 0031               2608m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001FCA  6700 0010               2609m         BEQ     CHECKFOR1_153
00001FCE  6000 0012               2610m         BRA     NEXT_153      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001FD2                          2611m         
00001FD2                          2612m CHECKFOR0_153: 
00001FD2  0303                    2613m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001FD4  6600 5166               2614m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001FD8  6000 0008               2615m         BRA     NEXT_153
00001FDC                          2616m 
00001FDC                          2617m CHECKFOR1_153:
00001FDC  0303                    2618m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001FDE  6700 515C               2619m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001FE2                          2620m 
00001FE2                          2621m NEXT_153: 
00001FE2  B23C 0000               2622m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001FE6  6700 0008               2623m         BEQ     COMPLETE_153  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001FEA  5301                    2624m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001FEC  1819                    2625m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001FEE  60CE                    2626m         BRA     LOOP_153      ; BEGIN LOOP AGAIN
00001FF0                          2627m 
00001FF0                          2628m COMPLETE_153:  ; OPCODE HAS BEEN VERIFIED
00001FF0                          2629m         ENDM
00001FF0                          2630          ; put code here
00001FF0  4E75                    2631          RTS                 ; Return from decodeMOVEM subroutine
00001FF2                          2632  
00001FF2                          2633  
00001FF2                          2634  ; ------------------------------------------------------------
00001FF2                          2635  ; 4. "decodeADD" subroutine
00001FF2                          2636  ; AUTHOR
00001FF2                          2637  ;
00001FF2                          2638  ; TODO: DESCRIPTION
00001FF2                          2639  ; ------------------------------------------------------------
00001FF2                          2640  decodeADD:
00001FF2                          2641m         verifyOpcode    pADD, (A2)
00001FF2  43F8 012E               2642m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001FF6  3612                    2643m         MOVE.W  (A2), D3      ; INPUT VALUE
00001FF8  123C 000F               2644m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001FFC                          2645m         
00001FFC                          2646m LOOP_154: 
00001FFC  0C11 0030               2647m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002000  6700 000E               2648m         BEQ     CHECKFOR0_154
00002004  0C11 0031               2649m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002008  6700 0010               2650m         BEQ     CHECKFOR1_154
0000200C  6000 0012               2651m         BRA     NEXT_154      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002010                          2652m         
00002010                          2653m CHECKFOR0_154: 
00002010  0303                    2654m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002012  6600 5128               2655m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002016  6000 0008               2656m         BRA     NEXT_154
0000201A                          2657m 
0000201A                          2658m CHECKFOR1_154:
0000201A  0303                    2659m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000201C  6700 511E               2660m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002020                          2661m 
00002020                          2662m NEXT_154: 
00002020  B23C 0000               2663m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002024  6700 0008               2664m         BEQ     COMPLETE_154  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002028  5301                    2665m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000202A  1819                    2666m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000202C  60CE                    2667m         BRA     LOOP_154      ; BEGIN LOOP AGAIN
0000202E                          2668m 
0000202E                          2669m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
0000202E                          2670m         ENDM
0000202E  43F8 006F               2671          LEA     oADD, A1     
00002032  103C 000E               2672          MOVE.B  #14,D0          
00002036  4E4F                    2673          TRAP    #15
00002038                          2674m         printOpMode     (A2)
00002038  3612                    2675m         MOVE.W  (A2), D3      
0000203A  123C 0008               2676m         MOVE.B  #8, D1    
0000203E  4246                    2677m         CLR     D6
00002040  4247                    2678m         CLR     D7
00002042                          2679m CHECKFORDESTDN_155: 
00002042  0303                    2680m         BTST    D1, D3      
00002044  6600 004C               2681m         BNE     CHECKFORSRCDN_155
00002048  4EB9 00002120           2682m         JSR     NEXT_155
0000204E  1C3C 0001               2683m         MOVE.B  #$1, D6
00002052  0303                    2684m         BTST    D1, D3      
00002054  6700 0014               2685m         BEQ     DESTDNW_155
00002058                          2686m DESTDNL_155:        
00002058  43F8 00C8               2687m         LEA     OLSIZE, A1     
0000205C  103C 000E               2688m         MOVE.B  #14,D0          
00002060  4E4F                    2689m         TRAP    #15
00002062  1E3C 0001               2690m         MOVE.B  #$1, D7
00002066  6000 00BC               2691m         BRA     COMPLETE_155 
0000206A                          2692m DESTDNW_155: 
0000206A  4EB9 00002120           2693m         JSR     NEXT_155
00002070  0303                    2694m         BTST    D1, D3      
00002072  6700 0010               2695m         BEQ     DESTDNB_155
00002076  43F8 00C4               2696m         LEA     OWSIZE, A1     
0000207A  103C 000E               2697m         MOVE.B  #14,D0          
0000207E  4E4F                    2698m         TRAP    #15
00002080  6000 00A2               2699m         BRA     COMPLETE_155 
00002084                          2700m DESTDNB_155: 
00002084  43F8 00C0               2701m         LEA     OBSIZE, A1     
00002088  103C 000E               2702m         MOVE.B  #14,D0          
0000208C  4E4F                    2703m         TRAP    #15
0000208E  6000 0094               2704m         BRA     COMPLETE_155 
00002092                          2705m CHECKFORSRCDN_155: 
00002092  4EB9 00002120           2706m         JSR     NEXT_155
00002098  0303                    2707m         BTST    D1, D3      
0000209A  6700 002C               2708m         BEQ     SRCDNW_155
0000209E                          2709m SRCDNL_155:        
0000209E  43F8 00C8               2710m         LEA     OLSIZE, A1     
000020A2  103C 000E               2711m         MOVE.B  #14,D0          
000020A6  4E4F                    2712m         TRAP    #15
000020A8  1E3C 0001               2713m         MOVE.B  #$1, D7
000020AC                          2714mm         PRINTDNDEST D3
000020AC  3203                    2715mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020AE  E949                    2716mm         LSL     #$04, D1
000020B0  E049                    2717mm         LSR     #$08, D1
000020B2  EA49                    2718mm         LSR     #$05, D1
000020B4  43F8 00CC               2719mm         LEA     ODN, A1     
000020B8  103C 000E               2720mm         MOVE.B  #14,D0          
000020BC  4E4F                    2721mm         TRAP    #15
000020BE  103C 0003               2722mm         MOVE.B  #3,D0          
000020C2  4E4F                    2723mm         TRAP    #15
000020C4                          2724mm         ENDM
000020C4  6000 005E               2725m         BRA     COMPLETE_155 
000020C8                          2726m SRCDNW_155:
000020C8  4EB9 00002120           2727m         JSR     NEXT_155
000020CE  0303                    2728m         BTST    D1, D3     
000020D0  6700 0028               2729m         BEQ     SRCDNB_155
000020D4  43F8 00C4               2730m         LEA     OWSIZE, A1     
000020D8  103C 000E               2731m         MOVE.B  #14,D0          
000020DC  4E4F                    2732m         TRAP    #15
000020DE                          2733mm         PRINTDNDEST D3
000020DE  3203                    2734mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020E0  E949                    2735mm         LSL     #$04, D1
000020E2  E049                    2736mm         LSR     #$08, D1
000020E4  EA49                    2737mm         LSR     #$05, D1
000020E6  43F8 00CC               2738mm         LEA     ODN, A1     
000020EA  103C 000E               2739mm         MOVE.B  #14,D0          
000020EE  4E4F                    2740mm         TRAP    #15
000020F0  103C 0003               2741mm         MOVE.B  #3,D0          
000020F4  4E4F                    2742mm         TRAP    #15
000020F6                          2743mm         ENDM
000020F6  6000 002C               2744m         BRA     COMPLETE_155 
000020FA                          2745m SRCDNB_155: 
000020FA  43F8 00C0               2746m         LEA     OBSIZE, A1     
000020FE  103C 000E               2747m         MOVE.B  #14,D0          
00002102  4E4F                    2748m         TRAP    #15
00002104                          2749mm         PRINTDNDEST D3
00002104  3203                    2750mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002106  E949                    2751mm         LSL     #$04, D1
00002108  E049                    2752mm         LSR     #$08, D1
0000210A  EA49                    2753mm         LSR     #$05, D1
0000210C  43F8 00CC               2754mm         LEA     ODN, A1     
00002110  103C 000E               2755mm         MOVE.B  #14,D0          
00002114  4E4F                    2756mm         TRAP    #15
00002116  103C 0003               2757mm         MOVE.B  #3,D0          
0000211A  4E4F                    2758mm         TRAP    #15
0000211C                          2759mm         ENDM
0000211C  6000 0006               2760m         BRA     COMPLETE_155 
00002120                          2761m 
00002120                          2762m NEXT_155:
00002120  5301                    2763m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002122  4E75                    2764m         RTS                
00002124                          2765m 
00002124                          2766m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
00002124                          2767m         ENDM
00002124  BC3C 0001               2768          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002128  6700 05F8               2769          BEQ     decodeAddDestOp
0000212C                          2770m         printComma
0000212C  43F8 00D4               2771m         LEA     OCOMMA, A1     
00002130  103C 000E               2772m         MOVE.B  #14,D0          
00002134  4E4F                    2773m         TRAP    #15
00002136                          2774m         ENDM
00002136                          2775m         prepareAdrMode  #$1, (A2)
00002136  3C3C 0001               2776m         MOVE.W  #$1, D6      ; INPUT VALUE
0000213A  3212                    2777m         MOVE.W  (A2), D1
0000213C  BC3C 0001               2778m         CMP.B   #$01, D6
00002140  6700 000C               2779m         BEQ     ADRSOURCE_160    
00002144                          2780m ADRDEST_160:
00002144  EF49                    2781m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002146  E049                    2782m         LSR     #$08, D1
00002148  EA49                    2783m         LSR     #$05, D1
0000214A  6000 000A               2784m         BRA     COMPLETE_160 
0000214E                          2785m ADRSOURCE_160:                
0000214E  E149                    2786m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002150  E549                    2787m         LSL     #$02, D1
00002152  E049                    2788m         LSR     #$08, D1
00002154  EA49                    2789m         LSR     #$05, D1
00002156                          2790m COMPLETE_160:  ; OPCODE HAS BEEN VERIFIED
00002156                          2791m         ENDM        
00002156                          2792m         decodeAdrMode   (A2), D1
00002156  3612                    2793m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002158  3201                    2794m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000215A                          2795m 
0000215A  B23C 0001               2796m         CMP.B   #$01, D1
0000215E  6700 0066               2797m         BEQ     ADRREGDIRECT_161    
00002162  B23C 0002               2798m         CMP.B   #$02, D1
00002166  6700 00A0               2799m         BEQ     ADRREGINDIRECT_161  
0000216A  B23C 0003               2800m         CMP.B   #$03, D1
0000216E  6700 0102               2801m         BEQ     ADRREGPOSTINC_161  
00002172  B23C 0004               2802m         CMP.B   #$04, D1
00002176  6700 0178               2803m         BEQ     ADRREGPREDEC_161
0000217A  B23C 0007               2804m         CMP.B   #$07, D1
0000217E  6700 01EE               2805m         BEQ     ADRABSOLUTE_161    
00002182                          2806m         
00002182                          2807m DATAREGDIRECT_161: 
00002182  BC3C 0001               2808m         CMP.B   #$01, D6
00002186  6700 001E               2809m         BEQ     DATAREGDIRECTSRC_161   
0000218A                          2810m DATAREGDIRECTDEST_161: 
0000218A                          2811mm         PRINTDNDEST D3 
0000218A  3203                    2812mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000218C  E949                    2813mm         LSL     #$04, D1
0000218E  E049                    2814mm         LSR     #$08, D1
00002190  EA49                    2815mm         LSR     #$05, D1
00002192  43F8 00CC               2816mm         LEA     ODN, A1     
00002196  103C 000E               2817mm         MOVE.B  #14,D0          
0000219A  4E4F                    2818mm         TRAP    #15
0000219C  103C 0003               2819mm         MOVE.B  #3,D0          
000021A0  4E4F                    2820mm         TRAP    #15
000021A2                          2821mm         ENDM
000021A2  6000 057A               2822m         BRA     COMPLETE_161 
000021A6                          2823m DATAREGDIRECTSRC_161: 
000021A6                          2824mm         PRINTDNSRC D3 
000021A6  4281                    2825mm         CLR.L   D1
000021A8  3203                    2826mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021AA  E149                    2827mm         LSL     #$08, D1
000021AC  EB49                    2828mm         LSL     #$05, D1
000021AE  E049                    2829mm         LSR     #$08, D1
000021B0  EA49                    2830mm         LSR     #$05, D1
000021B2  43F8 00CC               2831mm         LEA     ODN, A1     
000021B6  103C 000E               2832mm         MOVE.B  #14,D0          
000021BA  4E4F                    2833mm         TRAP    #15
000021BC  103C 0003               2834mm         MOVE.B  #3,D0          
000021C0  4E4F                    2835mm         TRAP    #15
000021C2                          2836mm         ENDM
000021C2  6000 055A               2837m         BRA     COMPLETE_161   
000021C6                          2838m         
000021C6                          2839m ADRREGDIRECT_161: 
000021C6  BC3C 0001               2840m         CMP.B   #$01, D6
000021CA  6700 001E               2841m         BEQ     ADRREGDIRECTSRC_161   
000021CE                          2842m ADRREGDIRECTDEST_161:
000021CE                          2843mm         PRINTANDEST D3
000021CE  3203                    2844mm         MOVE.W  D3, D1
000021D0  E949                    2845mm         LSL     #$04, D1
000021D2  E049                    2846mm         LSR     #$08, D1
000021D4  EA49                    2847mm         LSR     #$05, D1
000021D6  43F8 00CE               2848mm         LEA     OAN, A1     
000021DA  103C 000E               2849mm         MOVE.B  #14,D0          
000021DE  4E4F                    2850mm         TRAP    #15
000021E0  103C 0003               2851mm         MOVE.B  #3,D0          
000021E4  4E4F                    2852mm         TRAP    #15
000021E6                          2853mm         ENDM
000021E6  6000 0536               2854m         BRA     COMPLETE_161   
000021EA                          2855m ADRREGDIRECTSRC_161:
000021EA                          2856mm         PRINTANSRC D3
000021EA  3203                    2857mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021EC  E149                    2858mm         LSL     #$08, D1
000021EE  EB49                    2859mm         LSL     #$05, D1
000021F0  E049                    2860mm         LSR     #$08, D1
000021F2  EA49                    2861mm         LSR     #$05, D1
000021F4  43F8 00CE               2862mm         LEA     OAN, A1     
000021F8  103C 000E               2863mm         MOVE.B  #14,D0          
000021FC  4E4F                    2864mm         TRAP    #15
000021FE  103C 0003               2865mm         MOVE.B  #3,D0          
00002202  4E4F                    2866mm         TRAP    #15
00002204                          2867mm         ENDM
00002204  6000 0518               2868m         BRA     COMPLETE_161   
00002208                          2869m        
00002208                          2870m ADRREGINDIRECT_161:   
00002208  BC3C 0001               2871m         CMP.B   #$01, D6
0000220C  6700 0032               2872m         BEQ     ADRREGINDIRECTSRC_161   
00002210                          2873m ADRREGINDIRECTDEST_161:
00002210                          2874mm         PRINTLB
00002210  43F8 00D0               2875mm         LEA     OLB, A1     
00002214  103C 000E               2876mm         MOVE.B  #14,D0          
00002218  4E4F                    2877mm         TRAP    #15
0000221A                          2878mm         ENDM
0000221A                          2879mm         PRINTANDEST D3  
0000221A  3203                    2880mm         MOVE.W  D3, D1
0000221C  E949                    2881mm         LSL     #$04, D1
0000221E  E049                    2882mm         LSR     #$08, D1
00002220  EA49                    2883mm         LSR     #$05, D1
00002222  43F8 00CE               2884mm         LEA     OAN, A1     
00002226  103C 000E               2885mm         MOVE.B  #14,D0          
0000222A  4E4F                    2886mm         TRAP    #15
0000222C  103C 0003               2887mm         MOVE.B  #3,D0          
00002230  4E4F                    2888mm         TRAP    #15
00002232                          2889mm         ENDM
00002232                          2890mm         PRINTRB
00002232  43F8 00D2               2891mm         LEA     ORB, A1     
00002236  103C 000E               2892mm         MOVE.B  #14,D0          
0000223A  4E4F                    2893mm         TRAP    #15
0000223C                          2894mm         ENDM
0000223C  6000 04E0               2895m         BRA     COMPLETE_161     
00002240                          2896m ADRREGINDIRECTSRC_161:   
00002240                          2897mm         PRINTLB
00002240  43F8 00D0               2898mm         LEA     OLB, A1     
00002244  103C 000E               2899mm         MOVE.B  #14,D0          
00002248  4E4F                    2900mm         TRAP    #15
0000224A                          2901mm         ENDM
0000224A                          2902mm         PRINTANSRC D3  
0000224A  3203                    2903mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000224C  E149                    2904mm         LSL     #$08, D1
0000224E  EB49                    2905mm         LSL     #$05, D1
00002250  E049                    2906mm         LSR     #$08, D1
00002252  EA49                    2907mm         LSR     #$05, D1
00002254  43F8 00CE               2908mm         LEA     OAN, A1     
00002258  103C 000E               2909mm         MOVE.B  #14,D0          
0000225C  4E4F                    2910mm         TRAP    #15
0000225E  103C 0003               2911mm         MOVE.B  #3,D0          
00002262  4E4F                    2912mm         TRAP    #15
00002264                          2913mm         ENDM
00002264                          2914mm         PRINTRB
00002264  43F8 00D2               2915mm         LEA     ORB, A1     
00002268  103C 000E               2916mm         MOVE.B  #14,D0          
0000226C  4E4F                    2917mm         TRAP    #15
0000226E                          2918mm         ENDM
0000226E  6000 04AE               2919m         BRA     COMPLETE_161   
00002272                          2920m         
00002272                          2921m ADRREGPOSTINC_161:   
00002272  BC3C 0001               2922m         CMP.B   #$01, D6
00002276  6700 003C               2923m         BEQ     ADRREGPOSTINCSRC_161   
0000227A                          2924m ADRREGPOSTINCDEST_161: 
0000227A                          2925mm         PRINTLB
0000227A  43F8 00D0               2926mm         LEA     OLB, A1     
0000227E  103C 000E               2927mm         MOVE.B  #14,D0          
00002282  4E4F                    2928mm         TRAP    #15
00002284                          2929mm         ENDM
00002284                          2930mm         PRINTANDEST D3  
00002284  3203                    2931mm         MOVE.W  D3, D1
00002286  E949                    2932mm         LSL     #$04, D1
00002288  E049                    2933mm         LSR     #$08, D1
0000228A  EA49                    2934mm         LSR     #$05, D1
0000228C  43F8 00CE               2935mm         LEA     OAN, A1     
00002290  103C 000E               2936mm         MOVE.B  #14,D0          
00002294  4E4F                    2937mm         TRAP    #15
00002296  103C 0003               2938mm         MOVE.B  #3,D0          
0000229A  4E4F                    2939mm         TRAP    #15
0000229C                          2940mm         ENDM
0000229C                          2941mm         PRINTRB
0000229C  43F8 00D2               2942mm         LEA     ORB, A1     
000022A0  103C 000E               2943mm         MOVE.B  #14,D0          
000022A4  4E4F                    2944mm         TRAP    #15
000022A6                          2945mm         ENDM
000022A6                          2946mm         PRINTPI
000022A6  43F8 00D9               2947mm         LEA     OPSTINC, A1     
000022AA  103C 000E               2948mm         MOVE.B  #14,D0          
000022AE  4E4F                    2949mm         TRAP    #15
000022B0                          2950mm         ENDM
000022B0  6000 046C               2951m         BRA     COMPLETE_161  
000022B4                          2952m ADRREGPOSTINCSRC_161:           
000022B4                          2953mm         PRINTLB
000022B4  43F8 00D0               2954mm         LEA     OLB, A1     
000022B8  103C 000E               2955mm         MOVE.B  #14,D0          
000022BC  4E4F                    2956mm         TRAP    #15
000022BE                          2957mm         ENDM
000022BE                          2958mm         PRINTANSRC D3  
000022BE  3203                    2959mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000022C0  E149                    2960mm         LSL     #$08, D1
000022C2  EB49                    2961mm         LSL     #$05, D1
000022C4  E049                    2962mm         LSR     #$08, D1
000022C6  EA49                    2963mm         LSR     #$05, D1
000022C8  43F8 00CE               2964mm         LEA     OAN, A1     
000022CC  103C 000E               2965mm         MOVE.B  #14,D0          
000022D0  4E4F                    2966mm         TRAP    #15
000022D2  103C 0003               2967mm         MOVE.B  #3,D0          
000022D6  4E4F                    2968mm         TRAP    #15
000022D8                          2969mm         ENDM
000022D8                          2970mm         PRINTRB
000022D8  43F8 00D2               2971mm         LEA     ORB, A1     
000022DC  103C 000E               2972mm         MOVE.B  #14,D0          
000022E0  4E4F                    2973mm         TRAP    #15
000022E2                          2974mm         ENDM
000022E2                          2975mm         PRINTPI
000022E2  43F8 00D9               2976mm         LEA     OPSTINC, A1     
000022E6  103C 000E               2977mm         MOVE.B  #14,D0          
000022EA  4E4F                    2978mm         TRAP    #15
000022EC                          2979mm         ENDM
000022EC  6000 0430               2980m         BRA     COMPLETE_161  
000022F0                          2981m ADRREGPREDEC_161: 
000022F0  BC3C 0001               2982m         CMP.B   #$01, D6
000022F4  6700 003C               2983m         BEQ     ADRREGPREDECSRC_161   
000022F8                          2984m ADRREGPREDECDEST_161:
000022F8                          2985mm         PRINTPD  
000022F8  43F8 00D7               2986mm         LEA     OPREDEC, A1     
000022FC  103C 000E               2987mm         MOVE.B  #14,D0          
00002300  4E4F                    2988mm         TRAP    #15
00002302                          2989mm         ENDM
00002302                          2990mm         PRINTLB
00002302  43F8 00D0               2991mm         LEA     OLB, A1     
00002306  103C 000E               2992mm         MOVE.B  #14,D0          
0000230A  4E4F                    2993mm         TRAP    #15
0000230C                          2994mm         ENDM
0000230C                          2995mm         PRINTANDEST D3  
0000230C  3203                    2996mm         MOVE.W  D3, D1
0000230E  E949                    2997mm         LSL     #$04, D1
00002310  E049                    2998mm         LSR     #$08, D1
00002312  EA49                    2999mm         LSR     #$05, D1
00002314  43F8 00CE               3000mm         LEA     OAN, A1     
00002318  103C 000E               3001mm         MOVE.B  #14,D0          
0000231C  4E4F                    3002mm         TRAP    #15
0000231E  103C 0003               3003mm         MOVE.B  #3,D0          
00002322  4E4F                    3004mm         TRAP    #15
00002324                          3005mm         ENDM
00002324                          3006mm         PRINTRB
00002324  43F8 00D2               3007mm         LEA     ORB, A1     
00002328  103C 000E               3008mm         MOVE.B  #14,D0          
0000232C  4E4F                    3009mm         TRAP    #15
0000232E                          3010mm         ENDM
0000232E  6000 03EE               3011m         BRA     COMPLETE_161   
00002332                          3012m ADRREGPREDECSRC_161: 
00002332                          3013mm         PRINTPD  
00002332  43F8 00D7               3014mm         LEA     OPREDEC, A1     
00002336  103C 000E               3015mm         MOVE.B  #14,D0          
0000233A  4E4F                    3016mm         TRAP    #15
0000233C                          3017mm         ENDM
0000233C                          3018mm         PRINTLB
0000233C  43F8 00D0               3019mm         LEA     OLB, A1     
00002340  103C 000E               3020mm         MOVE.B  #14,D0          
00002344  4E4F                    3021mm         TRAP    #15
00002346                          3022mm         ENDM
00002346                          3023mm         PRINTANSRC D3  
00002346  3203                    3024mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002348  E149                    3025mm         LSL     #$08, D1
0000234A  EB49                    3026mm         LSL     #$05, D1
0000234C  E049                    3027mm         LSR     #$08, D1
0000234E  EA49                    3028mm         LSR     #$05, D1
00002350  43F8 00CE               3029mm         LEA     OAN, A1     
00002354  103C 000E               3030mm         MOVE.B  #14,D0          
00002358  4E4F                    3031mm         TRAP    #15
0000235A  103C 0003               3032mm         MOVE.B  #3,D0          
0000235E  4E4F                    3033mm         TRAP    #15
00002360                          3034mm         ENDM
00002360                          3035mm         PRINTRB
00002360  43F8 00D2               3036mm         LEA     ORB, A1     
00002364  103C 000E               3037mm         MOVE.B  #14,D0          
00002368  4E4F                    3038mm         TRAP    #15
0000236A                          3039mm         ENDM
0000236A  6000 03B2               3040m         BRA     COMPLETE_161
0000236E                          3041m        
0000236E                          3042m ADRABSOLUTE_161:
0000236E  BC3C 0001               3043m         CMP.B   #$01, D6
00002372  6600 0018               3044m         BNE     ADRABSOLUTEDST_161 
00002376                          3045m         
00002376  3A03                    3046m         MOVE.W  D3, D5
00002378  0803 0002               3047m         BTST    #2, D3
0000237C  6600 0024               3048m         BNE     ADRIMMEDIATE_161
00002380  0803 0000               3049m         BTST    #0, D3
00002384  6600 0280               3050m         BNE     ADRABSOLUTEL_161
00002388  6000 01E6               3051m         BRA     ADRABSOLUTEW_161
0000238C                          3052m ADRABSOLUTEDST_161:
0000238C  3A03                    3053m         MOVE.W  D3, D5
0000238E  0803 000B               3054m         BTST    #$B, D3
00002392  6600 000E               3055m         BNE     ADRIMMEDIATE_161
00002396  0803 0009               3056m         BTST    #$09, D3
0000239A  6600 026A               3057m         BNE     ADRABSOLUTEL_161
0000239E  6000 01D0               3058m         BRA     ADRABSOLUTEW_161
000023A2                          3059m ADRIMMEDIATE_161:
000023A2  BE3C 0001               3060m         CMP.B   #1, D7
000023A6  6700 00A2               3061m         BEQ     ADRIMMEDIATEL_161
000023AA                          3062m ADRIMMEDIATEW_161:
000023AA  361A                    3063m         MOVE.W  (A2)+, D3
000023AC                          3064mm         PRINTHASH
000023AC  103C 0006               3065mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023B0  323C 0023               3066mm         MOVE.W  #35, D1     ; AN = SIGN
000023B4  4E4F                    3067mm         TRAP    #15         ; OUTPUT = SIGN
000023B6                          3068mm         ENDM
000023B6                          3069mm         PRINTSIGN
000023B6  103C 0006               3070mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023BA  323C 0024               3071mm         MOVE.W  #36, D1     ; AN = SIGN
000023BE  4E4F                    3072mm         TRAP    #15         ; OUTPUT = SIGN
000023C0                          3073mm         ENDM
000023C0                          3074mm         ADROUT
000023C0  103C 0006               3075mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023C4  3212                    3076mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023C6  E049                    3077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023C8  E849                    3078mm         LSR.W   #4, D1      
000023CA                          3079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023CA  0C01 0009               3080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023CE  6E00 000A               3081mmm         BGT     ALPHA_191
000023D2  0601 0030               3082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023D6  6000 0006               3083mmm         BRA     DONE_191
000023DA  0601 0037               3084mmm ALPHA_191: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023DE  4E71                    3085mmm DONE_191: NOP
000023E0                          3086mmm         ENDM
000023E0  4E4F                    3087mm         TRAP    #15         ; EXECUTE OUTPUT
000023E2                          3088mm         
000023E2  3212                    3089mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023E4  E949                    3090mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023E6  E049                    3091mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023E8  E849                    3092mm         LSR.W   #4, D1      
000023EA                          3093mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023EA  0C01 0009               3094mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023EE  6E00 000A               3095mmm         BGT     ALPHA_192
000023F2  0601 0030               3096mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023F6  6000 0006               3097mmm         BRA     DONE_192
000023FA  0601 0037               3098mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023FE  4E71                    3099mmm DONE_192: NOP
00002400                          3100mmm         ENDM
00002400  4E4F                    3101mm         TRAP    #15         ; EXECUTE OUTPUT
00002402                          3102mm         
00002402  3212                    3103mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002404  E149                    3104mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002406  E049                    3105mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002408  E849                    3106mm         LSR.W   #4, D1      
0000240A                          3107mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000240A  0C01 0009               3108mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000240E  6E00 000A               3109mmm         BGT     ALPHA_193
00002412  0601 0030               3110mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002416  6000 0006               3111mmm         BRA     DONE_193
0000241A  0601 0037               3112mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000241E  4E71                    3113mmm DONE_193: NOP
00002420                          3114mmm         ENDM
00002420  4E4F                    3115mm         TRAP    #15         ; EXECUTE OUTPUT
00002422                          3116mm         
00002422  3212                    3117mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002424  E149                    3118mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002426  E949                    3119mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002428  E049                    3120mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000242A  E849                    3121mm         LSR.W   #4, D1      
0000242C                          3122mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000242C  0C01 0009               3123mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002430  6E00 000A               3124mmm         BGT     ALPHA_194
00002434  0601 0030               3125mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002438  6000 0006               3126mmm         BRA     DONE_194
0000243C  0601 0037               3127mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002440  4E71                    3128mmm DONE_194: NOP
00002442                          3129mmm         ENDM
00002442  4E4F                    3130mm         TRAP    #15         ; EXECUTE OUTPUT       
00002444                          3131mm         ENDM 
00002444  3605                    3132m         MOVE.W  D5, D3
00002446  6000 02D6               3133m         BRA     COMPLETE_161
0000244A                          3134m ADRIMMEDIATEL_161:
0000244A  361A                    3135m         MOVE.W  (A2)+, D3
0000244C                          3136mm         PRINTHASH
0000244C  103C 0006               3137mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002450  323C 0023               3138mm         MOVE.W  #35, D1     ; AN = SIGN
00002454  4E4F                    3139mm         TRAP    #15         ; OUTPUT = SIGN
00002456                          3140mm         ENDM
00002456                          3141mm         PRINTSIGN
00002456  103C 0006               3142mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000245A  323C 0024               3143mm         MOVE.W  #36, D1     ; AN = SIGN
0000245E  4E4F                    3144mm         TRAP    #15         ; OUTPUT = SIGN
00002460                          3145mm         ENDM
00002460                          3146mm         ADROUT 
00002460  103C 0006               3147mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002464  3212                    3148mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002466  E049                    3149mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002468  E849                    3150mm         LSR.W   #4, D1      
0000246A                          3151mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000246A  0C01 0009               3152mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000246E  6E00 000A               3153mmm         BGT     ALPHA_198
00002472  0601 0030               3154mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002476  6000 0006               3155mmm         BRA     DONE_198
0000247A  0601 0037               3156mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000247E  4E71                    3157mmm DONE_198: NOP
00002480                          3158mmm         ENDM
00002480  4E4F                    3159mm         TRAP    #15         ; EXECUTE OUTPUT
00002482                          3160mm         
00002482  3212                    3161mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002484  E949                    3162mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002486  E049                    3163mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002488  E849                    3164mm         LSR.W   #4, D1      
0000248A                          3165mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000248A  0C01 0009               3166mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000248E  6E00 000A               3167mmm         BGT     ALPHA_199
00002492  0601 0030               3168mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002496  6000 0006               3169mmm         BRA     DONE_199
0000249A  0601 0037               3170mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000249E  4E71                    3171mmm DONE_199: NOP
000024A0                          3172mmm         ENDM
000024A0  4E4F                    3173mm         TRAP    #15         ; EXECUTE OUTPUT
000024A2                          3174mm         
000024A2  3212                    3175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024A4  E149                    3176mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024A6  E049                    3177mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024A8  E849                    3178mm         LSR.W   #4, D1      
000024AA                          3179mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024AA  0C01 0009               3180mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024AE  6E00 000A               3181mmm         BGT     ALPHA_200
000024B2  0601 0030               3182mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024B6  6000 0006               3183mmm         BRA     DONE_200
000024BA  0601 0037               3184mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024BE  4E71                    3185mmm DONE_200: NOP
000024C0                          3186mmm         ENDM
000024C0  4E4F                    3187mm         TRAP    #15         ; EXECUTE OUTPUT
000024C2                          3188mm         
000024C2  3212                    3189mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024C4  E149                    3190mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024C6  E949                    3191mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024C8  E049                    3192mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024CA  E849                    3193mm         LSR.W   #4, D1      
000024CC                          3194mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024CC  0C01 0009               3195mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024D0  6E00 000A               3196mmm         BGT     ALPHA_201
000024D4  0601 0030               3197mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024D8  6000 0006               3198mmm         BRA     DONE_201
000024DC  0601 0037               3199mmm ALPHA_201: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024E0  4E71                    3200mmm DONE_201: NOP
000024E2                          3201mmm         ENDM
000024E2  4E4F                    3202mm         TRAP    #15         ; EXECUTE OUTPUT       
000024E4                          3203mm         ENDM 
000024E4  361A                    3204m         MOVE.W  (A2)+, D3
000024E6                          3205mm         ADROUT
000024E6  103C 0006               3206mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000024EA  3212                    3207mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024EC  E049                    3208mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024EE  E849                    3209mm         LSR.W   #4, D1      
000024F0                          3210mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024F0  0C01 0009               3211mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024F4  6E00 000A               3212mmm         BGT     ALPHA_203
000024F8  0601 0030               3213mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024FC  6000 0006               3214mmm         BRA     DONE_203
00002500  0601 0037               3215mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002504  4E71                    3216mmm DONE_203: NOP
00002506                          3217mmm         ENDM
00002506  4E4F                    3218mm         TRAP    #15         ; EXECUTE OUTPUT
00002508                          3219mm         
00002508  3212                    3220mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000250A  E949                    3221mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000250C  E049                    3222mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000250E  E849                    3223mm         LSR.W   #4, D1      
00002510                          3224mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002510  0C01 0009               3225mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002514  6E00 000A               3226mmm         BGT     ALPHA_204
00002518  0601 0030               3227mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000251C  6000 0006               3228mmm         BRA     DONE_204
00002520  0601 0037               3229mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002524  4E71                    3230mmm DONE_204: NOP
00002526                          3231mmm         ENDM
00002526  4E4F                    3232mm         TRAP    #15         ; EXECUTE OUTPUT
00002528                          3233mm         
00002528  3212                    3234mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000252A  E149                    3235mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000252C  E049                    3236mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000252E  E849                    3237mm         LSR.W   #4, D1      
00002530                          3238mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002530  0C01 0009               3239mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002534  6E00 000A               3240mmm         BGT     ALPHA_205
00002538  0601 0030               3241mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000253C  6000 0006               3242mmm         BRA     DONE_205
00002540  0601 0037               3243mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002544  4E71                    3244mmm DONE_205: NOP
00002546                          3245mmm         ENDM
00002546  4E4F                    3246mm         TRAP    #15         ; EXECUTE OUTPUT
00002548                          3247mm         
00002548  3212                    3248mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000254A  E149                    3249mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000254C  E949                    3250mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000254E  E049                    3251mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002550  E849                    3252mm         LSR.W   #4, D1      
00002552                          3253mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002552  0C01 0009               3254mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002556  6E00 000A               3255mmm         BGT     ALPHA_206
0000255A  0601 0030               3256mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000255E  6000 0006               3257mmm         BRA     DONE_206
00002562  0601 0037               3258mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002566  4E71                    3259mmm DONE_206: NOP
00002568                          3260mmm         ENDM
00002568  4E4F                    3261mm         TRAP    #15         ; EXECUTE OUTPUT       
0000256A                          3262mm         ENDM 
0000256A  3605                    3263m         MOVE.W  D5, D3
0000256C  6000 01B0               3264m         BRA     COMPLETE_161 
00002570                          3265m ADRABSOLUTEW_161:     
00002570  361A                    3266m         MOVE.W  (A2)+, D3
00002572                          3267mm         PRINTSIGN
00002572  103C 0006               3268mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002576  323C 0024               3269mm         MOVE.W  #36, D1     ; AN = SIGN
0000257A  4E4F                    3270mm         TRAP    #15         ; OUTPUT = SIGN
0000257C                          3271mm         ENDM
0000257C                          3272mm         ADROUT
0000257C  103C 0006               3273mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002580  3212                    3274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002582  E049                    3275mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002584  E849                    3276mm         LSR.W   #4, D1      
00002586                          3277mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002586  0C01 0009               3278mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000258A  6E00 000A               3279mmm         BGT     ALPHA_209
0000258E  0601 0030               3280mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002592  6000 0006               3281mmm         BRA     DONE_209
00002596  0601 0037               3282mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000259A  4E71                    3283mmm DONE_209: NOP
0000259C                          3284mmm         ENDM
0000259C  4E4F                    3285mm         TRAP    #15         ; EXECUTE OUTPUT
0000259E                          3286mm         
0000259E  3212                    3287mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A0  E949                    3288mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025A2  E049                    3289mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025A4  E849                    3290mm         LSR.W   #4, D1      
000025A6                          3291mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025A6  0C01 0009               3292mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025AA  6E00 000A               3293mmm         BGT     ALPHA_210
000025AE  0601 0030               3294mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B2  6000 0006               3295mmm         BRA     DONE_210
000025B6  0601 0037               3296mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025BA  4E71                    3297mmm DONE_210: NOP
000025BC                          3298mmm         ENDM
000025BC  4E4F                    3299mm         TRAP    #15         ; EXECUTE OUTPUT
000025BE                          3300mm         
000025BE  3212                    3301mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025C0  E149                    3302mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025C2  E049                    3303mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025C4  E849                    3304mm         LSR.W   #4, D1      
000025C6                          3305mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025C6  0C01 0009               3306mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025CA  6E00 000A               3307mmm         BGT     ALPHA_211
000025CE  0601 0030               3308mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025D2  6000 0006               3309mmm         BRA     DONE_211
000025D6  0601 0037               3310mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025DA  4E71                    3311mmm DONE_211: NOP
000025DC                          3312mmm         ENDM
000025DC  4E4F                    3313mm         TRAP    #15         ; EXECUTE OUTPUT
000025DE                          3314mm         
000025DE  3212                    3315mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025E0  E149                    3316mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025E2  E949                    3317mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000025E4  E049                    3318mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025E6  E849                    3319mm         LSR.W   #4, D1      
000025E8                          3320mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025E8  0C01 0009               3321mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025EC  6E00 000A               3322mmm         BGT     ALPHA_212
000025F0  0601 0030               3323mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025F4  6000 0006               3324mmm         BRA     DONE_212
000025F8  0601 0037               3325mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025FC  4E71                    3326mmm DONE_212: NOP
000025FE                          3327mmm         ENDM
000025FE  4E4F                    3328mm         TRAP    #15         ; EXECUTE OUTPUT       
00002600                          3329mm         ENDM 
00002600  3605                    3330m         MOVE.W  D5, D3
00002602  6000 011A               3331m         BRA     COMPLETE_161  
00002606                          3332m ADRABSOLUTEL_161:  
00002606  361A                    3333m         MOVE.W  (A2)+, D3
00002608                          3334mm         PRINTSIGN
00002608  103C 0006               3335mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000260C  323C 0024               3336mm         MOVE.W  #36, D1     ; AN = SIGN
00002610  4E4F                    3337mm         TRAP    #15         ; OUTPUT = SIGN
00002612                          3338mm         ENDM
00002612                          3339mm         ADROUT 
00002612  103C 0006               3340mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002616  3212                    3341mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002618  E049                    3342mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000261A  E849                    3343mm         LSR.W   #4, D1      
0000261C                          3344mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000261C  0C01 0009               3345mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002620  6E00 000A               3346mmm         BGT     ALPHA_215
00002624  0601 0030               3347mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002628  6000 0006               3348mmm         BRA     DONE_215
0000262C  0601 0037               3349mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002630  4E71                    3350mmm DONE_215: NOP
00002632                          3351mmm         ENDM
00002632  4E4F                    3352mm         TRAP    #15         ; EXECUTE OUTPUT
00002634                          3353mm         
00002634  3212                    3354mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002636  E949                    3355mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002638  E049                    3356mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000263A  E849                    3357mm         LSR.W   #4, D1      
0000263C                          3358mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000263C  0C01 0009               3359mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002640  6E00 000A               3360mmm         BGT     ALPHA_216
00002644  0601 0030               3361mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002648  6000 0006               3362mmm         BRA     DONE_216
0000264C  0601 0037               3363mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002650  4E71                    3364mmm DONE_216: NOP
00002652                          3365mmm         ENDM
00002652  4E4F                    3366mm         TRAP    #15         ; EXECUTE OUTPUT
00002654                          3367mm         
00002654  3212                    3368mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002656  E149                    3369mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002658  E049                    3370mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000265A  E849                    3371mm         LSR.W   #4, D1      
0000265C                          3372mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000265C  0C01 0009               3373mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002660  6E00 000A               3374mmm         BGT     ALPHA_217
00002664  0601 0030               3375mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002668  6000 0006               3376mmm         BRA     DONE_217
0000266C  0601 0037               3377mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002670  4E71                    3378mmm DONE_217: NOP
00002672                          3379mmm         ENDM
00002672  4E4F                    3380mm         TRAP    #15         ; EXECUTE OUTPUT
00002674                          3381mm         
00002674  3212                    3382mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002676  E149                    3383mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002678  E949                    3384mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000267A  E049                    3385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000267C  E849                    3386mm         LSR.W   #4, D1      
0000267E                          3387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000267E  0C01 0009               3388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002682  6E00 000A               3389mmm         BGT     ALPHA_218
00002686  0601 0030               3390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000268A  6000 0006               3391mmm         BRA     DONE_218
0000268E  0601 0037               3392mmm ALPHA_218: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002692  4E71                    3393mmm DONE_218: NOP
00002694                          3394mmm         ENDM
00002694  4E4F                    3395mm         TRAP    #15         ; EXECUTE OUTPUT       
00002696                          3396mm         ENDM 
00002696  361A                    3397m         MOVE.W  (A2)+, D3
00002698                          3398mm         ADROUT
00002698  103C 0006               3399mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000269C  3212                    3400mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000269E  E049                    3401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026A0  E849                    3402mm         LSR.W   #4, D1      
000026A2                          3403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026A2  0C01 0009               3404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026A6  6E00 000A               3405mmm         BGT     ALPHA_220
000026AA  0601 0030               3406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026AE  6000 0006               3407mmm         BRA     DONE_220
000026B2  0601 0037               3408mmm ALPHA_220: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026B6  4E71                    3409mmm DONE_220: NOP
000026B8                          3410mmm         ENDM
000026B8  4E4F                    3411mm         TRAP    #15         ; EXECUTE OUTPUT
000026BA                          3412mm         
000026BA  3212                    3413mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026BC  E949                    3414mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000026BE  E049                    3415mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026C0  E849                    3416mm         LSR.W   #4, D1      
000026C2                          3417mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026C2  0C01 0009               3418mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026C6  6E00 000A               3419mmm         BGT     ALPHA_221
000026CA  0601 0030               3420mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026CE  6000 0006               3421mmm         BRA     DONE_221
000026D2  0601 0037               3422mmm ALPHA_221: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026D6  4E71                    3423mmm DONE_221: NOP
000026D8                          3424mmm         ENDM
000026D8  4E4F                    3425mm         TRAP    #15         ; EXECUTE OUTPUT
000026DA                          3426mm         
000026DA  3212                    3427mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026DC  E149                    3428mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000026DE  E049                    3429mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026E0  E849                    3430mm         LSR.W   #4, D1      
000026E2                          3431mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026E2  0C01 0009               3432mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026E6  6E00 000A               3433mmm         BGT     ALPHA_222
000026EA  0601 0030               3434mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026EE  6000 0006               3435mmm         BRA     DONE_222
000026F2  0601 0037               3436mmm ALPHA_222: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026F6  4E71                    3437mmm DONE_222: NOP
000026F8                          3438mmm         ENDM
000026F8  4E4F                    3439mm         TRAP    #15         ; EXECUTE OUTPUT
000026FA                          3440mm         
000026FA  3212                    3441mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026FC  E149                    3442mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000026FE  E949                    3443mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002700  E049                    3444mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002702  E849                    3445mm         LSR.W   #4, D1      
00002704                          3446mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002704  0C01 0009               3447mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002708  6E00 000A               3448mmm         BGT     ALPHA_223
0000270C  0601 0030               3449mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002710  6000 0006               3450mmm         BRA     DONE_223
00002714  0601 0037               3451mmm ALPHA_223: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002718  4E71                    3452mmm DONE_223: NOP
0000271A                          3453mmm         ENDM
0000271A  4E4F                    3454mm         TRAP    #15         ; EXECUTE OUTPUT       
0000271C                          3455mm         ENDM 
0000271C  3605                    3456m         MOVE.W  D5, D3
0000271E                          3457m 
0000271E                          3458m COMPLETE_161:  ; OPCODE HAS BEEN VERIFIED
0000271E                          3459m         ENDM
0000271E  6000 060C               3460          BRA     decodeADDcomp
00002722                          3461  decodeAddDestOp:
00002722                          3462m         prepareAdrMode  #$1,(A2)
00002722  3C3C 0001               3463m         MOVE.W  #$1, D6      ; INPUT VALUE
00002726  3212                    3464m         MOVE.W  (A2), D1
00002728  BC3C 0001               3465m         CMP.B   #$01, D6
0000272C  6700 000C               3466m         BEQ     ADRSOURCE_224    
00002730                          3467m ADRDEST_224:
00002730  EF49                    3468m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002732  E049                    3469m         LSR     #$08, D1
00002734  EA49                    3470m         LSR     #$05, D1
00002736  6000 000A               3471m         BRA     COMPLETE_224 
0000273A                          3472m ADRSOURCE_224:                
0000273A  E149                    3473m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000273C  E549                    3474m         LSL     #$02, D1
0000273E  E049                    3475m         LSR     #$08, D1
00002740  EA49                    3476m         LSR     #$05, D1
00002742                          3477m COMPLETE_224:  ; OPCODE HAS BEEN VERIFIED
00002742                          3478m         ENDM        
00002742                          3479m         decodeAdrMode   (A2), D1
00002742  3612                    3480m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002744  3201                    3481m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002746                          3482m 
00002746  B23C 0001               3483m         CMP.B   #$01, D1
0000274A  6700 0066               3484m         BEQ     ADRREGDIRECT_225    
0000274E  B23C 0002               3485m         CMP.B   #$02, D1
00002752  6700 00A0               3486m         BEQ     ADRREGINDIRECT_225  
00002756  B23C 0003               3487m         CMP.B   #$03, D1
0000275A  6700 0102               3488m         BEQ     ADRREGPOSTINC_225  
0000275E  B23C 0004               3489m         CMP.B   #$04, D1
00002762  6700 0178               3490m         BEQ     ADRREGPREDEC_225
00002766  B23C 0007               3491m         CMP.B   #$07, D1
0000276A  6700 01EE               3492m         BEQ     ADRABSOLUTE_225    
0000276E                          3493m         
0000276E                          3494m DATAREGDIRECT_225: 
0000276E  BC3C 0001               3495m         CMP.B   #$01, D6
00002772  6700 001E               3496m         BEQ     DATAREGDIRECTSRC_225   
00002776                          3497m DATAREGDIRECTDEST_225: 
00002776                          3498mm         PRINTDNDEST D3 
00002776  3203                    3499mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002778  E949                    3500mm         LSL     #$04, D1
0000277A  E049                    3501mm         LSR     #$08, D1
0000277C  EA49                    3502mm         LSR     #$05, D1
0000277E  43F8 00CC               3503mm         LEA     ODN, A1     
00002782  103C 000E               3504mm         MOVE.B  #14,D0          
00002786  4E4F                    3505mm         TRAP    #15
00002788  103C 0003               3506mm         MOVE.B  #3,D0          
0000278C  4E4F                    3507mm         TRAP    #15
0000278E                          3508mm         ENDM
0000278E  6000 057A               3509m         BRA     COMPLETE_225 
00002792                          3510m DATAREGDIRECTSRC_225: 
00002792                          3511mm         PRINTDNSRC D3 
00002792  4281                    3512mm         CLR.L   D1
00002794  3203                    3513mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002796  E149                    3514mm         LSL     #$08, D1
00002798  EB49                    3515mm         LSL     #$05, D1
0000279A  E049                    3516mm         LSR     #$08, D1
0000279C  EA49                    3517mm         LSR     #$05, D1
0000279E  43F8 00CC               3518mm         LEA     ODN, A1     
000027A2  103C 000E               3519mm         MOVE.B  #14,D0          
000027A6  4E4F                    3520mm         TRAP    #15
000027A8  103C 0003               3521mm         MOVE.B  #3,D0          
000027AC  4E4F                    3522mm         TRAP    #15
000027AE                          3523mm         ENDM
000027AE  6000 055A               3524m         BRA     COMPLETE_225   
000027B2                          3525m         
000027B2                          3526m ADRREGDIRECT_225: 
000027B2  BC3C 0001               3527m         CMP.B   #$01, D6
000027B6  6700 001E               3528m         BEQ     ADRREGDIRECTSRC_225   
000027BA                          3529m ADRREGDIRECTDEST_225:
000027BA                          3530mm         PRINTANDEST D3
000027BA  3203                    3531mm         MOVE.W  D3, D1
000027BC  E949                    3532mm         LSL     #$04, D1
000027BE  E049                    3533mm         LSR     #$08, D1
000027C0  EA49                    3534mm         LSR     #$05, D1
000027C2  43F8 00CE               3535mm         LEA     OAN, A1     
000027C6  103C 000E               3536mm         MOVE.B  #14,D0          
000027CA  4E4F                    3537mm         TRAP    #15
000027CC  103C 0003               3538mm         MOVE.B  #3,D0          
000027D0  4E4F                    3539mm         TRAP    #15
000027D2                          3540mm         ENDM
000027D2  6000 0536               3541m         BRA     COMPLETE_225   
000027D6                          3542m ADRREGDIRECTSRC_225:
000027D6                          3543mm         PRINTANSRC D3
000027D6  3203                    3544mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027D8  E149                    3545mm         LSL     #$08, D1
000027DA  EB49                    3546mm         LSL     #$05, D1
000027DC  E049                    3547mm         LSR     #$08, D1
000027DE  EA49                    3548mm         LSR     #$05, D1
000027E0  43F8 00CE               3549mm         LEA     OAN, A1     
000027E4  103C 000E               3550mm         MOVE.B  #14,D0          
000027E8  4E4F                    3551mm         TRAP    #15
000027EA  103C 0003               3552mm         MOVE.B  #3,D0          
000027EE  4E4F                    3553mm         TRAP    #15
000027F0                          3554mm         ENDM
000027F0  6000 0518               3555m         BRA     COMPLETE_225   
000027F4                          3556m        
000027F4                          3557m ADRREGINDIRECT_225:   
000027F4  BC3C 0001               3558m         CMP.B   #$01, D6
000027F8  6700 0032               3559m         BEQ     ADRREGINDIRECTSRC_225   
000027FC                          3560m ADRREGINDIRECTDEST_225:
000027FC                          3561mm         PRINTLB
000027FC  43F8 00D0               3562mm         LEA     OLB, A1     
00002800  103C 000E               3563mm         MOVE.B  #14,D0          
00002804  4E4F                    3564mm         TRAP    #15
00002806                          3565mm         ENDM
00002806                          3566mm         PRINTANDEST D3  
00002806  3203                    3567mm         MOVE.W  D3, D1
00002808  E949                    3568mm         LSL     #$04, D1
0000280A  E049                    3569mm         LSR     #$08, D1
0000280C  EA49                    3570mm         LSR     #$05, D1
0000280E  43F8 00CE               3571mm         LEA     OAN, A1     
00002812  103C 000E               3572mm         MOVE.B  #14,D0          
00002816  4E4F                    3573mm         TRAP    #15
00002818  103C 0003               3574mm         MOVE.B  #3,D0          
0000281C  4E4F                    3575mm         TRAP    #15
0000281E                          3576mm         ENDM
0000281E                          3577mm         PRINTRB
0000281E  43F8 00D2               3578mm         LEA     ORB, A1     
00002822  103C 000E               3579mm         MOVE.B  #14,D0          
00002826  4E4F                    3580mm         TRAP    #15
00002828                          3581mm         ENDM
00002828  6000 04E0               3582m         BRA     COMPLETE_225     
0000282C                          3583m ADRREGINDIRECTSRC_225:   
0000282C                          3584mm         PRINTLB
0000282C  43F8 00D0               3585mm         LEA     OLB, A1     
00002830  103C 000E               3586mm         MOVE.B  #14,D0          
00002834  4E4F                    3587mm         TRAP    #15
00002836                          3588mm         ENDM
00002836                          3589mm         PRINTANSRC D3  
00002836  3203                    3590mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002838  E149                    3591mm         LSL     #$08, D1
0000283A  EB49                    3592mm         LSL     #$05, D1
0000283C  E049                    3593mm         LSR     #$08, D1
0000283E  EA49                    3594mm         LSR     #$05, D1
00002840  43F8 00CE               3595mm         LEA     OAN, A1     
00002844  103C 000E               3596mm         MOVE.B  #14,D0          
00002848  4E4F                    3597mm         TRAP    #15
0000284A  103C 0003               3598mm         MOVE.B  #3,D0          
0000284E  4E4F                    3599mm         TRAP    #15
00002850                          3600mm         ENDM
00002850                          3601mm         PRINTRB
00002850  43F8 00D2               3602mm         LEA     ORB, A1     
00002854  103C 000E               3603mm         MOVE.B  #14,D0          
00002858  4E4F                    3604mm         TRAP    #15
0000285A                          3605mm         ENDM
0000285A  6000 04AE               3606m         BRA     COMPLETE_225   
0000285E                          3607m         
0000285E                          3608m ADRREGPOSTINC_225:   
0000285E  BC3C 0001               3609m         CMP.B   #$01, D6
00002862  6700 003C               3610m         BEQ     ADRREGPOSTINCSRC_225   
00002866                          3611m ADRREGPOSTINCDEST_225: 
00002866                          3612mm         PRINTLB
00002866  43F8 00D0               3613mm         LEA     OLB, A1     
0000286A  103C 000E               3614mm         MOVE.B  #14,D0          
0000286E  4E4F                    3615mm         TRAP    #15
00002870                          3616mm         ENDM
00002870                          3617mm         PRINTANDEST D3  
00002870  3203                    3618mm         MOVE.W  D3, D1
00002872  E949                    3619mm         LSL     #$04, D1
00002874  E049                    3620mm         LSR     #$08, D1
00002876  EA49                    3621mm         LSR     #$05, D1
00002878  43F8 00CE               3622mm         LEA     OAN, A1     
0000287C  103C 000E               3623mm         MOVE.B  #14,D0          
00002880  4E4F                    3624mm         TRAP    #15
00002882  103C 0003               3625mm         MOVE.B  #3,D0          
00002886  4E4F                    3626mm         TRAP    #15
00002888                          3627mm         ENDM
00002888                          3628mm         PRINTRB
00002888  43F8 00D2               3629mm         LEA     ORB, A1     
0000288C  103C 000E               3630mm         MOVE.B  #14,D0          
00002890  4E4F                    3631mm         TRAP    #15
00002892                          3632mm         ENDM
00002892                          3633mm         PRINTPI
00002892  43F8 00D9               3634mm         LEA     OPSTINC, A1     
00002896  103C 000E               3635mm         MOVE.B  #14,D0          
0000289A  4E4F                    3636mm         TRAP    #15
0000289C                          3637mm         ENDM
0000289C  6000 046C               3638m         BRA     COMPLETE_225  
000028A0                          3639m ADRREGPOSTINCSRC_225:           
000028A0                          3640mm         PRINTLB
000028A0  43F8 00D0               3641mm         LEA     OLB, A1     
000028A4  103C 000E               3642mm         MOVE.B  #14,D0          
000028A8  4E4F                    3643mm         TRAP    #15
000028AA                          3644mm         ENDM
000028AA                          3645mm         PRINTANSRC D3  
000028AA  3203                    3646mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000028AC  E149                    3647mm         LSL     #$08, D1
000028AE  EB49                    3648mm         LSL     #$05, D1
000028B0  E049                    3649mm         LSR     #$08, D1
000028B2  EA49                    3650mm         LSR     #$05, D1
000028B4  43F8 00CE               3651mm         LEA     OAN, A1     
000028B8  103C 000E               3652mm         MOVE.B  #14,D0          
000028BC  4E4F                    3653mm         TRAP    #15
000028BE  103C 0003               3654mm         MOVE.B  #3,D0          
000028C2  4E4F                    3655mm         TRAP    #15
000028C4                          3656mm         ENDM
000028C4                          3657mm         PRINTRB
000028C4  43F8 00D2               3658mm         LEA     ORB, A1     
000028C8  103C 000E               3659mm         MOVE.B  #14,D0          
000028CC  4E4F                    3660mm         TRAP    #15
000028CE                          3661mm         ENDM
000028CE                          3662mm         PRINTPI
000028CE  43F8 00D9               3663mm         LEA     OPSTINC, A1     
000028D2  103C 000E               3664mm         MOVE.B  #14,D0          
000028D6  4E4F                    3665mm         TRAP    #15
000028D8                          3666mm         ENDM
000028D8  6000 0430               3667m         BRA     COMPLETE_225  
000028DC                          3668m ADRREGPREDEC_225: 
000028DC  BC3C 0001               3669m         CMP.B   #$01, D6
000028E0  6700 003C               3670m         BEQ     ADRREGPREDECSRC_225   
000028E4                          3671m ADRREGPREDECDEST_225:
000028E4                          3672mm         PRINTPD  
000028E4  43F8 00D7               3673mm         LEA     OPREDEC, A1     
000028E8  103C 000E               3674mm         MOVE.B  #14,D0          
000028EC  4E4F                    3675mm         TRAP    #15
000028EE                          3676mm         ENDM
000028EE                          3677mm         PRINTLB
000028EE  43F8 00D0               3678mm         LEA     OLB, A1     
000028F2  103C 000E               3679mm         MOVE.B  #14,D0          
000028F6  4E4F                    3680mm         TRAP    #15
000028F8                          3681mm         ENDM
000028F8                          3682mm         PRINTANDEST D3  
000028F8  3203                    3683mm         MOVE.W  D3, D1
000028FA  E949                    3684mm         LSL     #$04, D1
000028FC  E049                    3685mm         LSR     #$08, D1
000028FE  EA49                    3686mm         LSR     #$05, D1
00002900  43F8 00CE               3687mm         LEA     OAN, A1     
00002904  103C 000E               3688mm         MOVE.B  #14,D0          
00002908  4E4F                    3689mm         TRAP    #15
0000290A  103C 0003               3690mm         MOVE.B  #3,D0          
0000290E  4E4F                    3691mm         TRAP    #15
00002910                          3692mm         ENDM
00002910                          3693mm         PRINTRB
00002910  43F8 00D2               3694mm         LEA     ORB, A1     
00002914  103C 000E               3695mm         MOVE.B  #14,D0          
00002918  4E4F                    3696mm         TRAP    #15
0000291A                          3697mm         ENDM
0000291A  6000 03EE               3698m         BRA     COMPLETE_225   
0000291E                          3699m ADRREGPREDECSRC_225: 
0000291E                          3700mm         PRINTPD  
0000291E  43F8 00D7               3701mm         LEA     OPREDEC, A1     
00002922  103C 000E               3702mm         MOVE.B  #14,D0          
00002926  4E4F                    3703mm         TRAP    #15
00002928                          3704mm         ENDM
00002928                          3705mm         PRINTLB
00002928  43F8 00D0               3706mm         LEA     OLB, A1     
0000292C  103C 000E               3707mm         MOVE.B  #14,D0          
00002930  4E4F                    3708mm         TRAP    #15
00002932                          3709mm         ENDM
00002932                          3710mm         PRINTANSRC D3  
00002932  3203                    3711mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002934  E149                    3712mm         LSL     #$08, D1
00002936  EB49                    3713mm         LSL     #$05, D1
00002938  E049                    3714mm         LSR     #$08, D1
0000293A  EA49                    3715mm         LSR     #$05, D1
0000293C  43F8 00CE               3716mm         LEA     OAN, A1     
00002940  103C 000E               3717mm         MOVE.B  #14,D0          
00002944  4E4F                    3718mm         TRAP    #15
00002946  103C 0003               3719mm         MOVE.B  #3,D0          
0000294A  4E4F                    3720mm         TRAP    #15
0000294C                          3721mm         ENDM
0000294C                          3722mm         PRINTRB
0000294C  43F8 00D2               3723mm         LEA     ORB, A1     
00002950  103C 000E               3724mm         MOVE.B  #14,D0          
00002954  4E4F                    3725mm         TRAP    #15
00002956                          3726mm         ENDM
00002956  6000 03B2               3727m         BRA     COMPLETE_225
0000295A                          3728m        
0000295A                          3729m ADRABSOLUTE_225:
0000295A  BC3C 0001               3730m         CMP.B   #$01, D6
0000295E  6600 0018               3731m         BNE     ADRABSOLUTEDST_225 
00002962                          3732m         
00002962  3A03                    3733m         MOVE.W  D3, D5
00002964  0803 0002               3734m         BTST    #2, D3
00002968  6600 0024               3735m         BNE     ADRIMMEDIATE_225
0000296C  0803 0000               3736m         BTST    #0, D3
00002970  6600 0280               3737m         BNE     ADRABSOLUTEL_225
00002974  6000 01E6               3738m         BRA     ADRABSOLUTEW_225
00002978                          3739m ADRABSOLUTEDST_225:
00002978  3A03                    3740m         MOVE.W  D3, D5
0000297A  0803 000B               3741m         BTST    #$B, D3
0000297E  6600 000E               3742m         BNE     ADRIMMEDIATE_225
00002982  0803 0009               3743m         BTST    #$09, D3
00002986  6600 026A               3744m         BNE     ADRABSOLUTEL_225
0000298A  6000 01D0               3745m         BRA     ADRABSOLUTEW_225
0000298E                          3746m ADRIMMEDIATE_225:
0000298E  BE3C 0001               3747m         CMP.B   #1, D7
00002992  6700 00A2               3748m         BEQ     ADRIMMEDIATEL_225
00002996                          3749m ADRIMMEDIATEW_225:
00002996  361A                    3750m         MOVE.W  (A2)+, D3
00002998                          3751mm         PRINTHASH
00002998  103C 0006               3752mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000299C  323C 0023               3753mm         MOVE.W  #35, D1     ; AN = SIGN
000029A0  4E4F                    3754mm         TRAP    #15         ; OUTPUT = SIGN
000029A2                          3755mm         ENDM
000029A2                          3756mm         PRINTSIGN
000029A2  103C 0006               3757mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029A6  323C 0024               3758mm         MOVE.W  #36, D1     ; AN = SIGN
000029AA  4E4F                    3759mm         TRAP    #15         ; OUTPUT = SIGN
000029AC                          3760mm         ENDM
000029AC                          3761mm         ADROUT
000029AC  103C 0006               3762mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029B0  3212                    3763mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029B2  E049                    3764mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029B4  E849                    3765mm         LSR.W   #4, D1      
000029B6                          3766mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029B6  0C01 0009               3767mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029BA  6E00 000A               3768mmm         BGT     ALPHA_255
000029BE  0601 0030               3769mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029C2  6000 0006               3770mmm         BRA     DONE_255
000029C6  0601 0037               3771mmm ALPHA_255: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029CA  4E71                    3772mmm DONE_255: NOP
000029CC                          3773mmm         ENDM
000029CC  4E4F                    3774mm         TRAP    #15         ; EXECUTE OUTPUT
000029CE                          3775mm         
000029CE  3212                    3776mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029D0  E949                    3777mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029D2  E049                    3778mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029D4  E849                    3779mm         LSR.W   #4, D1      
000029D6                          3780mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029D6  0C01 0009               3781mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029DA  6E00 000A               3782mmm         BGT     ALPHA_256
000029DE  0601 0030               3783mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029E2  6000 0006               3784mmm         BRA     DONE_256
000029E6  0601 0037               3785mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029EA  4E71                    3786mmm DONE_256: NOP
000029EC                          3787mmm         ENDM
000029EC  4E4F                    3788mm         TRAP    #15         ; EXECUTE OUTPUT
000029EE                          3789mm         
000029EE  3212                    3790mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029F0  E149                    3791mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029F2  E049                    3792mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029F4  E849                    3793mm         LSR.W   #4, D1      
000029F6                          3794mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029F6  0C01 0009               3795mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029FA  6E00 000A               3796mmm         BGT     ALPHA_257
000029FE  0601 0030               3797mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A02  6000 0006               3798mmm         BRA     DONE_257
00002A06  0601 0037               3799mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A0A  4E71                    3800mmm DONE_257: NOP
00002A0C                          3801mmm         ENDM
00002A0C  4E4F                    3802mm         TRAP    #15         ; EXECUTE OUTPUT
00002A0E                          3803mm         
00002A0E  3212                    3804mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A10  E149                    3805mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A12  E949                    3806mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A14  E049                    3807mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A16  E849                    3808mm         LSR.W   #4, D1      
00002A18                          3809mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A18  0C01 0009               3810mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A1C  6E00 000A               3811mmm         BGT     ALPHA_258
00002A20  0601 0030               3812mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A24  6000 0006               3813mmm         BRA     DONE_258
00002A28  0601 0037               3814mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A2C  4E71                    3815mmm DONE_258: NOP
00002A2E                          3816mmm         ENDM
00002A2E  4E4F                    3817mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A30                          3818mm         ENDM 
00002A30  3605                    3819m         MOVE.W  D5, D3
00002A32  6000 02D6               3820m         BRA     COMPLETE_225
00002A36                          3821m ADRIMMEDIATEL_225:
00002A36  361A                    3822m         MOVE.W  (A2)+, D3
00002A38                          3823mm         PRINTHASH
00002A38  103C 0006               3824mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A3C  323C 0023               3825mm         MOVE.W  #35, D1     ; AN = SIGN
00002A40  4E4F                    3826mm         TRAP    #15         ; OUTPUT = SIGN
00002A42                          3827mm         ENDM
00002A42                          3828mm         PRINTSIGN
00002A42  103C 0006               3829mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A46  323C 0024               3830mm         MOVE.W  #36, D1     ; AN = SIGN
00002A4A  4E4F                    3831mm         TRAP    #15         ; OUTPUT = SIGN
00002A4C                          3832mm         ENDM
00002A4C                          3833mm         ADROUT 
00002A4C  103C 0006               3834mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A50  3212                    3835mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A52  E049                    3836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A54  E849                    3837mm         LSR.W   #4, D1      
00002A56                          3838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A56  0C01 0009               3839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A5A  6E00 000A               3840mmm         BGT     ALPHA_262
00002A5E  0601 0030               3841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A62  6000 0006               3842mmm         BRA     DONE_262
00002A66  0601 0037               3843mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A6A  4E71                    3844mmm DONE_262: NOP
00002A6C                          3845mmm         ENDM
00002A6C  4E4F                    3846mm         TRAP    #15         ; EXECUTE OUTPUT
00002A6E                          3847mm         
00002A6E  3212                    3848mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A70  E949                    3849mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A72  E049                    3850mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A74  E849                    3851mm         LSR.W   #4, D1      
00002A76                          3852mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A76  0C01 0009               3853mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A7A  6E00 000A               3854mmm         BGT     ALPHA_263
00002A7E  0601 0030               3855mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A82  6000 0006               3856mmm         BRA     DONE_263
00002A86  0601 0037               3857mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A8A  4E71                    3858mmm DONE_263: NOP
00002A8C                          3859mmm         ENDM
00002A8C  4E4F                    3860mm         TRAP    #15         ; EXECUTE OUTPUT
00002A8E                          3861mm         
00002A8E  3212                    3862mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A90  E149                    3863mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A92  E049                    3864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A94  E849                    3865mm         LSR.W   #4, D1      
00002A96                          3866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A96  0C01 0009               3867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A9A  6E00 000A               3868mmm         BGT     ALPHA_264
00002A9E  0601 0030               3869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AA2  6000 0006               3870mmm         BRA     DONE_264
00002AA6  0601 0037               3871mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AAA  4E71                    3872mmm DONE_264: NOP
00002AAC                          3873mmm         ENDM
00002AAC  4E4F                    3874mm         TRAP    #15         ; EXECUTE OUTPUT
00002AAE                          3875mm         
00002AAE  3212                    3876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AB0  E149                    3877mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AB2  E949                    3878mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002AB4  E049                    3879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AB6  E849                    3880mm         LSR.W   #4, D1      
00002AB8                          3881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AB8  0C01 0009               3882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002ABC  6E00 000A               3883mmm         BGT     ALPHA_265
00002AC0  0601 0030               3884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AC4  6000 0006               3885mmm         BRA     DONE_265
00002AC8  0601 0037               3886mmm ALPHA_265: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002ACC  4E71                    3887mmm DONE_265: NOP
00002ACE                          3888mmm         ENDM
00002ACE  4E4F                    3889mm         TRAP    #15         ; EXECUTE OUTPUT       
00002AD0                          3890mm         ENDM 
00002AD0  361A                    3891m         MOVE.W  (A2)+, D3
00002AD2                          3892mm         ADROUT
00002AD2  103C 0006               3893mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AD6  3212                    3894mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AD8  E049                    3895mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002ADA  E849                    3896mm         LSR.W   #4, D1      
00002ADC                          3897mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ADC  0C01 0009               3898mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AE0  6E00 000A               3899mmm         BGT     ALPHA_267
00002AE4  0601 0030               3900mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AE8  6000 0006               3901mmm         BRA     DONE_267
00002AEC  0601 0037               3902mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AF0  4E71                    3903mmm DONE_267: NOP
00002AF2                          3904mmm         ENDM
00002AF2  4E4F                    3905mm         TRAP    #15         ; EXECUTE OUTPUT
00002AF4                          3906mm         
00002AF4  3212                    3907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AF6  E949                    3908mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002AF8  E049                    3909mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AFA  E849                    3910mm         LSR.W   #4, D1      
00002AFC                          3911mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AFC  0C01 0009               3912mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B00  6E00 000A               3913mmm         BGT     ALPHA_268
00002B04  0601 0030               3914mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B08  6000 0006               3915mmm         BRA     DONE_268
00002B0C  0601 0037               3916mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B10  4E71                    3917mmm DONE_268: NOP
00002B12                          3918mmm         ENDM
00002B12  4E4F                    3919mm         TRAP    #15         ; EXECUTE OUTPUT
00002B14                          3920mm         
00002B14  3212                    3921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B16  E149                    3922mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B18  E049                    3923mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1A  E849                    3924mm         LSR.W   #4, D1      
00002B1C                          3925mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1C  0C01 0009               3926mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B20  6E00 000A               3927mmm         BGT     ALPHA_269
00002B24  0601 0030               3928mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B28  6000 0006               3929mmm         BRA     DONE_269
00002B2C  0601 0037               3930mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B30  4E71                    3931mmm DONE_269: NOP
00002B32                          3932mmm         ENDM
00002B32  4E4F                    3933mm         TRAP    #15         ; EXECUTE OUTPUT
00002B34                          3934mm         
00002B34  3212                    3935mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B36  E149                    3936mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B38  E949                    3937mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B3A  E049                    3938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    3939mm         LSR.W   #4, D1      
00002B3E                          3940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               3941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               3942mmm         BGT     ALPHA_270
00002B46  0601 0030               3943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               3944mmm         BRA     DONE_270
00002B4E  0601 0037               3945mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    3946mmm DONE_270: NOP
00002B54                          3947mmm         ENDM
00002B54  4E4F                    3948mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B56                          3949mm         ENDM 
00002B56  3605                    3950m         MOVE.W  D5, D3
00002B58  6000 01B0               3951m         BRA     COMPLETE_225 
00002B5C                          3952m ADRABSOLUTEW_225:     
00002B5C  361A                    3953m         MOVE.W  (A2)+, D3
00002B5E                          3954mm         PRINTSIGN
00002B5E  103C 0006               3955mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B62  323C 0024               3956mm         MOVE.W  #36, D1     ; AN = SIGN
00002B66  4E4F                    3957mm         TRAP    #15         ; OUTPUT = SIGN
00002B68                          3958mm         ENDM
00002B68                          3959mm         ADROUT
00002B68  103C 0006               3960mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B6C  3212                    3961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B6E  E049                    3962mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B70  E849                    3963mm         LSR.W   #4, D1      
00002B72                          3964mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B72  0C01 0009               3965mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B76  6E00 000A               3966mmm         BGT     ALPHA_273
00002B7A  0601 0030               3967mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B7E  6000 0006               3968mmm         BRA     DONE_273
00002B82  0601 0037               3969mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B86  4E71                    3970mmm DONE_273: NOP
00002B88                          3971mmm         ENDM
00002B88  4E4F                    3972mm         TRAP    #15         ; EXECUTE OUTPUT
00002B8A                          3973mm         
00002B8A  3212                    3974mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B8C  E949                    3975mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B8E  E049                    3976mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B90  E849                    3977mm         LSR.W   #4, D1      
00002B92                          3978mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B92  0C01 0009               3979mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B96  6E00 000A               3980mmm         BGT     ALPHA_274
00002B9A  0601 0030               3981mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B9E  6000 0006               3982mmm         BRA     DONE_274
00002BA2  0601 0037               3983mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BA6  4E71                    3984mmm DONE_274: NOP
00002BA8                          3985mmm         ENDM
00002BA8  4E4F                    3986mm         TRAP    #15         ; EXECUTE OUTPUT
00002BAA                          3987mm         
00002BAA  3212                    3988mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BAC  E149                    3989mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BAE  E049                    3990mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BB0  E849                    3991mm         LSR.W   #4, D1      
00002BB2                          3992mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BB2  0C01 0009               3993mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BB6  6E00 000A               3994mmm         BGT     ALPHA_275
00002BBA  0601 0030               3995mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BBE  6000 0006               3996mmm         BRA     DONE_275
00002BC2  0601 0037               3997mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BC6  4E71                    3998mmm DONE_275: NOP
00002BC8                          3999mmm         ENDM
00002BC8  4E4F                    4000mm         TRAP    #15         ; EXECUTE OUTPUT
00002BCA                          4001mm         
00002BCA  3212                    4002mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BCC  E149                    4003mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BCE  E949                    4004mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BD0  E049                    4005mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BD2  E849                    4006mm         LSR.W   #4, D1      
00002BD4                          4007mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BD4  0C01 0009               4008mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BD8  6E00 000A               4009mmm         BGT     ALPHA_276
00002BDC  0601 0030               4010mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BE0  6000 0006               4011mmm         BRA     DONE_276
00002BE4  0601 0037               4012mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BE8  4E71                    4013mmm DONE_276: NOP
00002BEA                          4014mmm         ENDM
00002BEA  4E4F                    4015mm         TRAP    #15         ; EXECUTE OUTPUT       
00002BEC                          4016mm         ENDM 
00002BEC  3605                    4017m         MOVE.W  D5, D3
00002BEE  6000 011A               4018m         BRA     COMPLETE_225  
00002BF2                          4019m ADRABSOLUTEL_225:  
00002BF2  361A                    4020m         MOVE.W  (A2)+, D3
00002BF4                          4021mm         PRINTSIGN
00002BF4  103C 0006               4022mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002BF8  323C 0024               4023mm         MOVE.W  #36, D1     ; AN = SIGN
00002BFC  4E4F                    4024mm         TRAP    #15         ; OUTPUT = SIGN
00002BFE                          4025mm         ENDM
00002BFE                          4026mm         ADROUT 
00002BFE  103C 0006               4027mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C02  3212                    4028mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C04  E049                    4029mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C06  E849                    4030mm         LSR.W   #4, D1      
00002C08                          4031mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C08  0C01 0009               4032mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C0C  6E00 000A               4033mmm         BGT     ALPHA_279
00002C10  0601 0030               4034mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C14  6000 0006               4035mmm         BRA     DONE_279
00002C18  0601 0037               4036mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C1C  4E71                    4037mmm DONE_279: NOP
00002C1E                          4038mmm         ENDM
00002C1E  4E4F                    4039mm         TRAP    #15         ; EXECUTE OUTPUT
00002C20                          4040mm         
00002C20  3212                    4041mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C22  E949                    4042mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002C24  E049                    4043mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C26  E849                    4044mm         LSR.W   #4, D1      
00002C28                          4045mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C28  0C01 0009               4046mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C2C  6E00 000A               4047mmm         BGT     ALPHA_280
00002C30  0601 0030               4048mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C34  6000 0006               4049mmm         BRA     DONE_280
00002C38  0601 0037               4050mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C3C  4E71                    4051mmm DONE_280: NOP
00002C3E                          4052mmm         ENDM
00002C3E  4E4F                    4053mm         TRAP    #15         ; EXECUTE OUTPUT
00002C40                          4054mm         
00002C40  3212                    4055mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C42  E149                    4056mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C44  E049                    4057mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C46  E849                    4058mm         LSR.W   #4, D1      
00002C48                          4059mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C48  0C01 0009               4060mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C4C  6E00 000A               4061mmm         BGT     ALPHA_281
00002C50  0601 0030               4062mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C54  6000 0006               4063mmm         BRA     DONE_281
00002C58  0601 0037               4064mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C5C  4E71                    4065mmm DONE_281: NOP
00002C5E                          4066mmm         ENDM
00002C5E  4E4F                    4067mm         TRAP    #15         ; EXECUTE OUTPUT
00002C60                          4068mm         
00002C60  3212                    4069mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C62  E149                    4070mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C64  E949                    4071mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002C66  E049                    4072mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C68  E849                    4073mm         LSR.W   #4, D1      
00002C6A                          4074mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C6A  0C01 0009               4075mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C6E  6E00 000A               4076mmm         BGT     ALPHA_282
00002C72  0601 0030               4077mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C76  6000 0006               4078mmm         BRA     DONE_282
00002C7A  0601 0037               4079mmm ALPHA_282: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C7E  4E71                    4080mmm DONE_282: NOP
00002C80                          4081mmm         ENDM
00002C80  4E4F                    4082mm         TRAP    #15         ; EXECUTE OUTPUT       
00002C82                          4083mm         ENDM 
00002C82  361A                    4084m         MOVE.W  (A2)+, D3
00002C84                          4085mm         ADROUT
00002C84  103C 0006               4086mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C88  3212                    4087mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C8A  E049                    4088mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C8C  E849                    4089mm         LSR.W   #4, D1      
00002C8E                          4090mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C8E  0C01 0009               4091mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C92  6E00 000A               4092mmm         BGT     ALPHA_284
00002C96  0601 0030               4093mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C9A  6000 0006               4094mmm         BRA     DONE_284
00002C9E  0601 0037               4095mmm ALPHA_284: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CA2  4E71                    4096mmm DONE_284: NOP
00002CA4                          4097mmm         ENDM
00002CA4  4E4F                    4098mm         TRAP    #15         ; EXECUTE OUTPUT
00002CA6                          4099mm         
00002CA6  3212                    4100mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CA8  E949                    4101mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002CAA  E049                    4102mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CAC  E849                    4103mm         LSR.W   #4, D1      
00002CAE                          4104mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CAE  0C01 0009               4105mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CB2  6E00 000A               4106mmm         BGT     ALPHA_285
00002CB6  0601 0030               4107mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CBA  6000 0006               4108mmm         BRA     DONE_285
00002CBE  0601 0037               4109mmm ALPHA_285: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CC2  4E71                    4110mmm DONE_285: NOP
00002CC4                          4111mmm         ENDM
00002CC4  4E4F                    4112mm         TRAP    #15         ; EXECUTE OUTPUT
00002CC6                          4113mm         
00002CC6  3212                    4114mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CC8  E149                    4115mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002CCA  E049                    4116mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CCC  E849                    4117mm         LSR.W   #4, D1      
00002CCE                          4118mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CCE  0C01 0009               4119mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CD2  6E00 000A               4120mmm         BGT     ALPHA_286
00002CD6  0601 0030               4121mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CDA  6000 0006               4122mmm         BRA     DONE_286
00002CDE  0601 0037               4123mmm ALPHA_286: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CE2  4E71                    4124mmm DONE_286: NOP
00002CE4                          4125mmm         ENDM
00002CE4  4E4F                    4126mm         TRAP    #15         ; EXECUTE OUTPUT
00002CE6                          4127mm         
00002CE6  3212                    4128mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CE8  E149                    4129mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002CEA  E949                    4130mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002CEC  E049                    4131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CEE  E849                    4132mm         LSR.W   #4, D1      
00002CF0                          4133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CF0  0C01 0009               4134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CF4  6E00 000A               4135mmm         BGT     ALPHA_287
00002CF8  0601 0030               4136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CFC  6000 0006               4137mmm         BRA     DONE_287
00002D00  0601 0037               4138mmm ALPHA_287: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002D04  4E71                    4139mmm DONE_287: NOP
00002D06                          4140mmm         ENDM
00002D06  4E4F                    4141mm         TRAP    #15         ; EXECUTE OUTPUT       
00002D08                          4142mm         ENDM 
00002D08  3605                    4143m         MOVE.W  D5, D3
00002D0A                          4144m 
00002D0A                          4145m COMPLETE_225:  ; OPCODE HAS BEEN VERIFIED
00002D0A                          4146m         ENDM
00002D0A                          4147m         printComma
00002D0A  43F8 00D4               4148m         LEA     OCOMMA, A1     
00002D0E  103C 000E               4149m         MOVE.B  #14,D0          
00002D12  4E4F                    4150m         TRAP    #15
00002D14                          4151m         ENDM
00002D14                          4152m         printDnDest     D3
00002D14  3203                    4153m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D16  E949                    4154m         LSL     #$04, D1
00002D18  E049                    4155m         LSR     #$08, D1
00002D1A  EA49                    4156m         LSR     #$05, D1
00002D1C  43F8 00CC               4157m         LEA     ODN, A1     
00002D20  103C 000E               4158m         MOVE.B  #14,D0          
00002D24  4E4F                    4159m         TRAP    #15
00002D26  103C 0003               4160m         MOVE.B  #3,D0          
00002D2A  4E4F                    4161m         TRAP    #15
00002D2C                          4162m         ENDM
00002D2C                          4163  decodeADDcomp:
00002D2C  4E75                    4164          RTS                ; Return from decodeADD subroutine
00002D2E                          4165  
00002D2E                          4166  
00002D2E                          4167  ; ------------------------------------------------------------
00002D2E                          4168  ; 5. "decodeSUB" subroutine
00002D2E                          4169  ; AUTHOR
00002D2E                          4170  ;
00002D2E                          4171  ; TODO: DESCRIPTION
00002D2E                          4172  ; ------------------------------------------------------------
00002D2E                          4173  decodeSUB:
00002D2E                          4174m         verifyOpcode    pSUB, (A2)
00002D2E  43F8 013F               4175m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002D32  3612                    4176m         MOVE.W  (A2), D3      ; INPUT VALUE
00002D34  123C 000F               4177m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002D38                          4178m         
00002D38                          4179m LOOP_290: 
00002D38  0C11 0030               4180m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002D3C  6700 000E               4181m         BEQ     CHECKFOR0_290
00002D40  0C11 0031               4182m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002D44  6700 0010               4183m         BEQ     CHECKFOR1_290
00002D48  6000 0012               4184m         BRA     NEXT_290      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002D4C                          4185m         
00002D4C                          4186m CHECKFOR0_290: 
00002D4C  0303                    4187m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002D4E  6600 43EC               4188m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002D52  6000 0008               4189m         BRA     NEXT_290
00002D56                          4190m 
00002D56                          4191m CHECKFOR1_290:
00002D56  0303                    4192m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002D58  6700 43E2               4193m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002D5C                          4194m 
00002D5C                          4195m NEXT_290: 
00002D5C  B23C 0000               4196m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002D60  6700 0008               4197m         BEQ     COMPLETE_290  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002D64  5301                    4198m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D66  1819                    4199m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002D68  60CE                    4200m         BRA     LOOP_290      ; BEGIN LOOP AGAIN
00002D6A                          4201m 
00002D6A                          4202m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D6A                          4203m         ENDM
00002D6A  43F8 0078               4204          LEA     oSUB, A1     
00002D6E  103C 000E               4205          MOVE.B  #14,D0          
00002D72  4E4F                    4206          TRAP    #15
00002D74                          4207m         printOpMode     (A2)
00002D74  3612                    4208m         MOVE.W  (A2), D3      
00002D76  123C 0008               4209m         MOVE.B  #8, D1    
00002D7A  4246                    4210m         CLR     D6
00002D7C  4247                    4211m         CLR     D7
00002D7E                          4212m CHECKFORDESTDN_291: 
00002D7E  0303                    4213m         BTST    D1, D3      
00002D80  6600 004C               4214m         BNE     CHECKFORSRCDN_291
00002D84  4EB9 00002E5C           4215m         JSR     NEXT_291
00002D8A  1C3C 0001               4216m         MOVE.B  #$1, D6
00002D8E  0303                    4217m         BTST    D1, D3      
00002D90  6700 0014               4218m         BEQ     DESTDNW_291
00002D94                          4219m DESTDNL_291:        
00002D94  43F8 00C8               4220m         LEA     OLSIZE, A1     
00002D98  103C 000E               4221m         MOVE.B  #14,D0          
00002D9C  4E4F                    4222m         TRAP    #15
00002D9E  1E3C 0001               4223m         MOVE.B  #$1, D7
00002DA2  6000 00BC               4224m         BRA     COMPLETE_291 
00002DA6                          4225m DESTDNW_291: 
00002DA6  4EB9 00002E5C           4226m         JSR     NEXT_291
00002DAC  0303                    4227m         BTST    D1, D3      
00002DAE  6700 0010               4228m         BEQ     DESTDNB_291
00002DB2  43F8 00C4               4229m         LEA     OWSIZE, A1     
00002DB6  103C 000E               4230m         MOVE.B  #14,D0          
00002DBA  4E4F                    4231m         TRAP    #15
00002DBC  6000 00A2               4232m         BRA     COMPLETE_291 
00002DC0                          4233m DESTDNB_291: 
00002DC0  43F8 00C0               4234m         LEA     OBSIZE, A1     
00002DC4  103C 000E               4235m         MOVE.B  #14,D0          
00002DC8  4E4F                    4236m         TRAP    #15
00002DCA  6000 0094               4237m         BRA     COMPLETE_291 
00002DCE                          4238m CHECKFORSRCDN_291: 
00002DCE  4EB9 00002E5C           4239m         JSR     NEXT_291
00002DD4  0303                    4240m         BTST    D1, D3      
00002DD6  6700 002C               4241m         BEQ     SRCDNW_291
00002DDA                          4242m SRCDNL_291:        
00002DDA  43F8 00C8               4243m         LEA     OLSIZE, A1     
00002DDE  103C 000E               4244m         MOVE.B  #14,D0          
00002DE2  4E4F                    4245m         TRAP    #15
00002DE4  1E3C 0001               4246m         MOVE.B  #$1, D7
00002DE8                          4247mm         PRINTDNDEST D3
00002DE8  3203                    4248mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DEA  E949                    4249mm         LSL     #$04, D1
00002DEC  E049                    4250mm         LSR     #$08, D1
00002DEE  EA49                    4251mm         LSR     #$05, D1
00002DF0  43F8 00CC               4252mm         LEA     ODN, A1     
00002DF4  103C 000E               4253mm         MOVE.B  #14,D0          
00002DF8  4E4F                    4254mm         TRAP    #15
00002DFA  103C 0003               4255mm         MOVE.B  #3,D0          
00002DFE  4E4F                    4256mm         TRAP    #15
00002E00                          4257mm         ENDM
00002E00  6000 005E               4258m         BRA     COMPLETE_291 
00002E04                          4259m SRCDNW_291:
00002E04  4EB9 00002E5C           4260m         JSR     NEXT_291
00002E0A  0303                    4261m         BTST    D1, D3     
00002E0C  6700 0028               4262m         BEQ     SRCDNB_291
00002E10  43F8 00C4               4263m         LEA     OWSIZE, A1     
00002E14  103C 000E               4264m         MOVE.B  #14,D0          
00002E18  4E4F                    4265m         TRAP    #15
00002E1A                          4266mm         PRINTDNDEST D3
00002E1A  3203                    4267mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E1C  E949                    4268mm         LSL     #$04, D1
00002E1E  E049                    4269mm         LSR     #$08, D1
00002E20  EA49                    4270mm         LSR     #$05, D1
00002E22  43F8 00CC               4271mm         LEA     ODN, A1     
00002E26  103C 000E               4272mm         MOVE.B  #14,D0          
00002E2A  4E4F                    4273mm         TRAP    #15
00002E2C  103C 0003               4274mm         MOVE.B  #3,D0          
00002E30  4E4F                    4275mm         TRAP    #15
00002E32                          4276mm         ENDM
00002E32  6000 002C               4277m         BRA     COMPLETE_291 
00002E36                          4278m SRCDNB_291: 
00002E36  43F8 00C0               4279m         LEA     OBSIZE, A1     
00002E3A  103C 000E               4280m         MOVE.B  #14,D0          
00002E3E  4E4F                    4281m         TRAP    #15
00002E40                          4282mm         PRINTDNDEST D3
00002E40  3203                    4283mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E42  E949                    4284mm         LSL     #$04, D1
00002E44  E049                    4285mm         LSR     #$08, D1
00002E46  EA49                    4286mm         LSR     #$05, D1
00002E48  43F8 00CC               4287mm         LEA     ODN, A1     
00002E4C  103C 000E               4288mm         MOVE.B  #14,D0          
00002E50  4E4F                    4289mm         TRAP    #15
00002E52  103C 0003               4290mm         MOVE.B  #3,D0          
00002E56  4E4F                    4291mm         TRAP    #15
00002E58                          4292mm         ENDM
00002E58  6000 0006               4293m         BRA     COMPLETE_291 
00002E5C                          4294m 
00002E5C                          4295m NEXT_291:
00002E5C  5301                    4296m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002E5E  4E75                    4297m         RTS                
00002E60                          4298m 
00002E60                          4299m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
00002E60                          4300m         ENDM
00002E60  BC3C 0001               4301          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002E64  6700 05F8               4302          BEQ     decodeSubDestOp
00002E68                          4303m         printComma
00002E68  43F8 00D4               4304m         LEA     OCOMMA, A1     
00002E6C  103C 000E               4305m         MOVE.B  #14,D0          
00002E70  4E4F                    4306m         TRAP    #15
00002E72                          4307m         ENDM
00002E72                          4308m         prepareAdrMode  #$1, (A2)
00002E72  3C3C 0001               4309m         MOVE.W  #$1, D6      ; INPUT VALUE
00002E76  3212                    4310m         MOVE.W  (A2), D1
00002E78  BC3C 0001               4311m         CMP.B   #$01, D6
00002E7C  6700 000C               4312m         BEQ     ADRSOURCE_296    
00002E80                          4313m ADRDEST_296:
00002E80  EF49                    4314m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002E82  E049                    4315m         LSR     #$08, D1
00002E84  EA49                    4316m         LSR     #$05, D1
00002E86  6000 000A               4317m         BRA     COMPLETE_296 
00002E8A                          4318m ADRSOURCE_296:                
00002E8A  E149                    4319m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002E8C  E549                    4320m         LSL     #$02, D1
00002E8E  E049                    4321m         LSR     #$08, D1
00002E90  EA49                    4322m         LSR     #$05, D1
00002E92                          4323m COMPLETE_296:  ; OPCODE HAS BEEN VERIFIED
00002E92                          4324m         ENDM        
00002E92                          4325m         decodeAdrMode   (A2), D1
00002E92  3612                    4326m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002E94  3201                    4327m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002E96                          4328m 
00002E96  B23C 0001               4329m         CMP.B   #$01, D1
00002E9A  6700 0066               4330m         BEQ     ADRREGDIRECT_297    
00002E9E  B23C 0002               4331m         CMP.B   #$02, D1
00002EA2  6700 00A0               4332m         BEQ     ADRREGINDIRECT_297  
00002EA6  B23C 0003               4333m         CMP.B   #$03, D1
00002EAA  6700 0102               4334m         BEQ     ADRREGPOSTINC_297  
00002EAE  B23C 0004               4335m         CMP.B   #$04, D1
00002EB2  6700 0178               4336m         BEQ     ADRREGPREDEC_297
00002EB6  B23C 0007               4337m         CMP.B   #$07, D1
00002EBA  6700 01EE               4338m         BEQ     ADRABSOLUTE_297    
00002EBE                          4339m         
00002EBE                          4340m DATAREGDIRECT_297: 
00002EBE  BC3C 0001               4341m         CMP.B   #$01, D6
00002EC2  6700 001E               4342m         BEQ     DATAREGDIRECTSRC_297   
00002EC6                          4343m DATAREGDIRECTDEST_297: 
00002EC6                          4344mm         PRINTDNDEST D3 
00002EC6  3203                    4345mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002EC8  E949                    4346mm         LSL     #$04, D1
00002ECA  E049                    4347mm         LSR     #$08, D1
00002ECC  EA49                    4348mm         LSR     #$05, D1
00002ECE  43F8 00CC               4349mm         LEA     ODN, A1     
00002ED2  103C 000E               4350mm         MOVE.B  #14,D0          
00002ED6  4E4F                    4351mm         TRAP    #15
00002ED8  103C 0003               4352mm         MOVE.B  #3,D0          
00002EDC  4E4F                    4353mm         TRAP    #15
00002EDE                          4354mm         ENDM
00002EDE  6000 057A               4355m         BRA     COMPLETE_297 
00002EE2                          4356m DATAREGDIRECTSRC_297: 
00002EE2                          4357mm         PRINTDNSRC D3 
00002EE2  4281                    4358mm         CLR.L   D1
00002EE4  3203                    4359mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EE6  E149                    4360mm         LSL     #$08, D1
00002EE8  EB49                    4361mm         LSL     #$05, D1
00002EEA  E049                    4362mm         LSR     #$08, D1
00002EEC  EA49                    4363mm         LSR     #$05, D1
00002EEE  43F8 00CC               4364mm         LEA     ODN, A1     
00002EF2  103C 000E               4365mm         MOVE.B  #14,D0          
00002EF6  4E4F                    4366mm         TRAP    #15
00002EF8  103C 0003               4367mm         MOVE.B  #3,D0          
00002EFC  4E4F                    4368mm         TRAP    #15
00002EFE                          4369mm         ENDM
00002EFE  6000 055A               4370m         BRA     COMPLETE_297   
00002F02                          4371m         
00002F02                          4372m ADRREGDIRECT_297: 
00002F02  BC3C 0001               4373m         CMP.B   #$01, D6
00002F06  6700 001E               4374m         BEQ     ADRREGDIRECTSRC_297   
00002F0A                          4375m ADRREGDIRECTDEST_297:
00002F0A                          4376mm         PRINTANDEST D3
00002F0A  3203                    4377mm         MOVE.W  D3, D1
00002F0C  E949                    4378mm         LSL     #$04, D1
00002F0E  E049                    4379mm         LSR     #$08, D1
00002F10  EA49                    4380mm         LSR     #$05, D1
00002F12  43F8 00CE               4381mm         LEA     OAN, A1     
00002F16  103C 000E               4382mm         MOVE.B  #14,D0          
00002F1A  4E4F                    4383mm         TRAP    #15
00002F1C  103C 0003               4384mm         MOVE.B  #3,D0          
00002F20  4E4F                    4385mm         TRAP    #15
00002F22                          4386mm         ENDM
00002F22  6000 0536               4387m         BRA     COMPLETE_297   
00002F26                          4388m ADRREGDIRECTSRC_297:
00002F26                          4389mm         PRINTANSRC D3
00002F26  3203                    4390mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F28  E149                    4391mm         LSL     #$08, D1
00002F2A  EB49                    4392mm         LSL     #$05, D1
00002F2C  E049                    4393mm         LSR     #$08, D1
00002F2E  EA49                    4394mm         LSR     #$05, D1
00002F30  43F8 00CE               4395mm         LEA     OAN, A1     
00002F34  103C 000E               4396mm         MOVE.B  #14,D0          
00002F38  4E4F                    4397mm         TRAP    #15
00002F3A  103C 0003               4398mm         MOVE.B  #3,D0          
00002F3E  4E4F                    4399mm         TRAP    #15
00002F40                          4400mm         ENDM
00002F40  6000 0518               4401m         BRA     COMPLETE_297   
00002F44                          4402m        
00002F44                          4403m ADRREGINDIRECT_297:   
00002F44  BC3C 0001               4404m         CMP.B   #$01, D6
00002F48  6700 0032               4405m         BEQ     ADRREGINDIRECTSRC_297   
00002F4C                          4406m ADRREGINDIRECTDEST_297:
00002F4C                          4407mm         PRINTLB
00002F4C  43F8 00D0               4408mm         LEA     OLB, A1     
00002F50  103C 000E               4409mm         MOVE.B  #14,D0          
00002F54  4E4F                    4410mm         TRAP    #15
00002F56                          4411mm         ENDM
00002F56                          4412mm         PRINTANDEST D3  
00002F56  3203                    4413mm         MOVE.W  D3, D1
00002F58  E949                    4414mm         LSL     #$04, D1
00002F5A  E049                    4415mm         LSR     #$08, D1
00002F5C  EA49                    4416mm         LSR     #$05, D1
00002F5E  43F8 00CE               4417mm         LEA     OAN, A1     
00002F62  103C 000E               4418mm         MOVE.B  #14,D0          
00002F66  4E4F                    4419mm         TRAP    #15
00002F68  103C 0003               4420mm         MOVE.B  #3,D0          
00002F6C  4E4F                    4421mm         TRAP    #15
00002F6E                          4422mm         ENDM
00002F6E                          4423mm         PRINTRB
00002F6E  43F8 00D2               4424mm         LEA     ORB, A1     
00002F72  103C 000E               4425mm         MOVE.B  #14,D0          
00002F76  4E4F                    4426mm         TRAP    #15
00002F78                          4427mm         ENDM
00002F78  6000 04E0               4428m         BRA     COMPLETE_297     
00002F7C                          4429m ADRREGINDIRECTSRC_297:   
00002F7C                          4430mm         PRINTLB
00002F7C  43F8 00D0               4431mm         LEA     OLB, A1     
00002F80  103C 000E               4432mm         MOVE.B  #14,D0          
00002F84  4E4F                    4433mm         TRAP    #15
00002F86                          4434mm         ENDM
00002F86                          4435mm         PRINTANSRC D3  
00002F86  3203                    4436mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F88  E149                    4437mm         LSL     #$08, D1
00002F8A  EB49                    4438mm         LSL     #$05, D1
00002F8C  E049                    4439mm         LSR     #$08, D1
00002F8E  EA49                    4440mm         LSR     #$05, D1
00002F90  43F8 00CE               4441mm         LEA     OAN, A1     
00002F94  103C 000E               4442mm         MOVE.B  #14,D0          
00002F98  4E4F                    4443mm         TRAP    #15
00002F9A  103C 0003               4444mm         MOVE.B  #3,D0          
00002F9E  4E4F                    4445mm         TRAP    #15
00002FA0                          4446mm         ENDM
00002FA0                          4447mm         PRINTRB
00002FA0  43F8 00D2               4448mm         LEA     ORB, A1     
00002FA4  103C 000E               4449mm         MOVE.B  #14,D0          
00002FA8  4E4F                    4450mm         TRAP    #15
00002FAA                          4451mm         ENDM
00002FAA  6000 04AE               4452m         BRA     COMPLETE_297   
00002FAE                          4453m         
00002FAE                          4454m ADRREGPOSTINC_297:   
00002FAE  BC3C 0001               4455m         CMP.B   #$01, D6
00002FB2  6700 003C               4456m         BEQ     ADRREGPOSTINCSRC_297   
00002FB6                          4457m ADRREGPOSTINCDEST_297: 
00002FB6                          4458mm         PRINTLB
00002FB6  43F8 00D0               4459mm         LEA     OLB, A1     
00002FBA  103C 000E               4460mm         MOVE.B  #14,D0          
00002FBE  4E4F                    4461mm         TRAP    #15
00002FC0                          4462mm         ENDM
00002FC0                          4463mm         PRINTANDEST D3  
00002FC0  3203                    4464mm         MOVE.W  D3, D1
00002FC2  E949                    4465mm         LSL     #$04, D1
00002FC4  E049                    4466mm         LSR     #$08, D1
00002FC6  EA49                    4467mm         LSR     #$05, D1
00002FC8  43F8 00CE               4468mm         LEA     OAN, A1     
00002FCC  103C 000E               4469mm         MOVE.B  #14,D0          
00002FD0  4E4F                    4470mm         TRAP    #15
00002FD2  103C 0003               4471mm         MOVE.B  #3,D0          
00002FD6  4E4F                    4472mm         TRAP    #15
00002FD8                          4473mm         ENDM
00002FD8                          4474mm         PRINTRB
00002FD8  43F8 00D2               4475mm         LEA     ORB, A1     
00002FDC  103C 000E               4476mm         MOVE.B  #14,D0          
00002FE0  4E4F                    4477mm         TRAP    #15
00002FE2                          4478mm         ENDM
00002FE2                          4479mm         PRINTPI
00002FE2  43F8 00D9               4480mm         LEA     OPSTINC, A1     
00002FE6  103C 000E               4481mm         MOVE.B  #14,D0          
00002FEA  4E4F                    4482mm         TRAP    #15
00002FEC                          4483mm         ENDM
00002FEC  6000 046C               4484m         BRA     COMPLETE_297  
00002FF0                          4485m ADRREGPOSTINCSRC_297:           
00002FF0                          4486mm         PRINTLB
00002FF0  43F8 00D0               4487mm         LEA     OLB, A1     
00002FF4  103C 000E               4488mm         MOVE.B  #14,D0          
00002FF8  4E4F                    4489mm         TRAP    #15
00002FFA                          4490mm         ENDM
00002FFA                          4491mm         PRINTANSRC D3  
00002FFA  3203                    4492mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002FFC  E149                    4493mm         LSL     #$08, D1
00002FFE  EB49                    4494mm         LSL     #$05, D1
00003000  E049                    4495mm         LSR     #$08, D1
00003002  EA49                    4496mm         LSR     #$05, D1
00003004  43F8 00CE               4497mm         LEA     OAN, A1     
00003008  103C 000E               4498mm         MOVE.B  #14,D0          
0000300C  4E4F                    4499mm         TRAP    #15
0000300E  103C 0003               4500mm         MOVE.B  #3,D0          
00003012  4E4F                    4501mm         TRAP    #15
00003014                          4502mm         ENDM
00003014                          4503mm         PRINTRB
00003014  43F8 00D2               4504mm         LEA     ORB, A1     
00003018  103C 000E               4505mm         MOVE.B  #14,D0          
0000301C  4E4F                    4506mm         TRAP    #15
0000301E                          4507mm         ENDM
0000301E                          4508mm         PRINTPI
0000301E  43F8 00D9               4509mm         LEA     OPSTINC, A1     
00003022  103C 000E               4510mm         MOVE.B  #14,D0          
00003026  4E4F                    4511mm         TRAP    #15
00003028                          4512mm         ENDM
00003028  6000 0430               4513m         BRA     COMPLETE_297  
0000302C                          4514m ADRREGPREDEC_297: 
0000302C  BC3C 0001               4515m         CMP.B   #$01, D6
00003030  6700 003C               4516m         BEQ     ADRREGPREDECSRC_297   
00003034                          4517m ADRREGPREDECDEST_297:
00003034                          4518mm         PRINTPD  
00003034  43F8 00D7               4519mm         LEA     OPREDEC, A1     
00003038  103C 000E               4520mm         MOVE.B  #14,D0          
0000303C  4E4F                    4521mm         TRAP    #15
0000303E                          4522mm         ENDM
0000303E                          4523mm         PRINTLB
0000303E  43F8 00D0               4524mm         LEA     OLB, A1     
00003042  103C 000E               4525mm         MOVE.B  #14,D0          
00003046  4E4F                    4526mm         TRAP    #15
00003048                          4527mm         ENDM
00003048                          4528mm         PRINTANDEST D3  
00003048  3203                    4529mm         MOVE.W  D3, D1
0000304A  E949                    4530mm         LSL     #$04, D1
0000304C  E049                    4531mm         LSR     #$08, D1
0000304E  EA49                    4532mm         LSR     #$05, D1
00003050  43F8 00CE               4533mm         LEA     OAN, A1     
00003054  103C 000E               4534mm         MOVE.B  #14,D0          
00003058  4E4F                    4535mm         TRAP    #15
0000305A  103C 0003               4536mm         MOVE.B  #3,D0          
0000305E  4E4F                    4537mm         TRAP    #15
00003060                          4538mm         ENDM
00003060                          4539mm         PRINTRB
00003060  43F8 00D2               4540mm         LEA     ORB, A1     
00003064  103C 000E               4541mm         MOVE.B  #14,D0          
00003068  4E4F                    4542mm         TRAP    #15
0000306A                          4543mm         ENDM
0000306A  6000 03EE               4544m         BRA     COMPLETE_297   
0000306E                          4545m ADRREGPREDECSRC_297: 
0000306E                          4546mm         PRINTPD  
0000306E  43F8 00D7               4547mm         LEA     OPREDEC, A1     
00003072  103C 000E               4548mm         MOVE.B  #14,D0          
00003076  4E4F                    4549mm         TRAP    #15
00003078                          4550mm         ENDM
00003078                          4551mm         PRINTLB
00003078  43F8 00D0               4552mm         LEA     OLB, A1     
0000307C  103C 000E               4553mm         MOVE.B  #14,D0          
00003080  4E4F                    4554mm         TRAP    #15
00003082                          4555mm         ENDM
00003082                          4556mm         PRINTANSRC D3  
00003082  3203                    4557mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003084  E149                    4558mm         LSL     #$08, D1
00003086  EB49                    4559mm         LSL     #$05, D1
00003088  E049                    4560mm         LSR     #$08, D1
0000308A  EA49                    4561mm         LSR     #$05, D1
0000308C  43F8 00CE               4562mm         LEA     OAN, A1     
00003090  103C 000E               4563mm         MOVE.B  #14,D0          
00003094  4E4F                    4564mm         TRAP    #15
00003096  103C 0003               4565mm         MOVE.B  #3,D0          
0000309A  4E4F                    4566mm         TRAP    #15
0000309C                          4567mm         ENDM
0000309C                          4568mm         PRINTRB
0000309C  43F8 00D2               4569mm         LEA     ORB, A1     
000030A0  103C 000E               4570mm         MOVE.B  #14,D0          
000030A4  4E4F                    4571mm         TRAP    #15
000030A6                          4572mm         ENDM
000030A6  6000 03B2               4573m         BRA     COMPLETE_297
000030AA                          4574m        
000030AA                          4575m ADRABSOLUTE_297:
000030AA  BC3C 0001               4576m         CMP.B   #$01, D6
000030AE  6600 0018               4577m         BNE     ADRABSOLUTEDST_297 
000030B2                          4578m         
000030B2  3A03                    4579m         MOVE.W  D3, D5
000030B4  0803 0002               4580m         BTST    #2, D3
000030B8  6600 0024               4581m         BNE     ADRIMMEDIATE_297
000030BC  0803 0000               4582m         BTST    #0, D3
000030C0  6600 0280               4583m         BNE     ADRABSOLUTEL_297
000030C4  6000 01E6               4584m         BRA     ADRABSOLUTEW_297
000030C8                          4585m ADRABSOLUTEDST_297:
000030C8  3A03                    4586m         MOVE.W  D3, D5
000030CA  0803 000B               4587m         BTST    #$B, D3
000030CE  6600 000E               4588m         BNE     ADRIMMEDIATE_297
000030D2  0803 0009               4589m         BTST    #$09, D3
000030D6  6600 026A               4590m         BNE     ADRABSOLUTEL_297
000030DA  6000 01D0               4591m         BRA     ADRABSOLUTEW_297
000030DE                          4592m ADRIMMEDIATE_297:
000030DE  BE3C 0001               4593m         CMP.B   #1, D7
000030E2  6700 00A2               4594m         BEQ     ADRIMMEDIATEL_297
000030E6                          4595m ADRIMMEDIATEW_297:
000030E6  361A                    4596m         MOVE.W  (A2)+, D3
000030E8                          4597mm         PRINTHASH
000030E8  103C 0006               4598mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000030EC  323C 0023               4599mm         MOVE.W  #35, D1     ; AN = SIGN
000030F0  4E4F                    4600mm         TRAP    #15         ; OUTPUT = SIGN
000030F2                          4601mm         ENDM
000030F2                          4602mm         PRINTSIGN
000030F2  103C 0006               4603mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000030F6  323C 0024               4604mm         MOVE.W  #36, D1     ; AN = SIGN
000030FA  4E4F                    4605mm         TRAP    #15         ; OUTPUT = SIGN
000030FC                          4606mm         ENDM
000030FC                          4607mm         ADROUT
000030FC  103C 0006               4608mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003100  3212                    4609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003102  E049                    4610mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003104  E849                    4611mm         LSR.W   #4, D1      
00003106                          4612mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003106  0C01 0009               4613mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000310A  6E00 000A               4614mmm         BGT     ALPHA_327
0000310E  0601 0030               4615mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003112  6000 0006               4616mmm         BRA     DONE_327
00003116  0601 0037               4617mmm ALPHA_327: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000311A  4E71                    4618mmm DONE_327: NOP
0000311C                          4619mmm         ENDM
0000311C  4E4F                    4620mm         TRAP    #15         ; EXECUTE OUTPUT
0000311E                          4621mm         
0000311E  3212                    4622mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003120  E949                    4623mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003122  E049                    4624mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003124  E849                    4625mm         LSR.W   #4, D1      
00003126                          4626mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003126  0C01 0009               4627mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312A  6E00 000A               4628mmm         BGT     ALPHA_328
0000312E  0601 0030               4629mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003132  6000 0006               4630mmm         BRA     DONE_328
00003136  0601 0037               4631mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313A  4E71                    4632mmm DONE_328: NOP
0000313C                          4633mmm         ENDM
0000313C  4E4F                    4634mm         TRAP    #15         ; EXECUTE OUTPUT
0000313E                          4635mm         
0000313E  3212                    4636mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003140  E149                    4637mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003142  E049                    4638mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003144  E849                    4639mm         LSR.W   #4, D1      
00003146                          4640mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003146  0C01 0009               4641mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314A  6E00 000A               4642mmm         BGT     ALPHA_329
0000314E  0601 0030               4643mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003152  6000 0006               4644mmm         BRA     DONE_329
00003156  0601 0037               4645mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315A  4E71                    4646mmm DONE_329: NOP
0000315C                          4647mmm         ENDM
0000315C  4E4F                    4648mm         TRAP    #15         ; EXECUTE OUTPUT
0000315E                          4649mm         
0000315E  3212                    4650mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003160  E149                    4651mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003162  E949                    4652mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003164  E049                    4653mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003166  E849                    4654mm         LSR.W   #4, D1      
00003168                          4655mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003168  0C01 0009               4656mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316C  6E00 000A               4657mmm         BGT     ALPHA_330
00003170  0601 0030               4658mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003174  6000 0006               4659mmm         BRA     DONE_330
00003178  0601 0037               4660mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317C  4E71                    4661mmm DONE_330: NOP
0000317E                          4662mmm         ENDM
0000317E  4E4F                    4663mm         TRAP    #15         ; EXECUTE OUTPUT       
00003180                          4664mm         ENDM 
00003180  3605                    4665m         MOVE.W  D5, D3
00003182  6000 02D6               4666m         BRA     COMPLETE_297
00003186                          4667m ADRIMMEDIATEL_297:
00003186  361A                    4668m         MOVE.W  (A2)+, D3
00003188                          4669mm         PRINTHASH
00003188  103C 0006               4670mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000318C  323C 0023               4671mm         MOVE.W  #35, D1     ; AN = SIGN
00003190  4E4F                    4672mm         TRAP    #15         ; OUTPUT = SIGN
00003192                          4673mm         ENDM
00003192                          4674mm         PRINTSIGN
00003192  103C 0006               4675mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003196  323C 0024               4676mm         MOVE.W  #36, D1     ; AN = SIGN
0000319A  4E4F                    4677mm         TRAP    #15         ; OUTPUT = SIGN
0000319C                          4678mm         ENDM
0000319C                          4679mm         ADROUT 
0000319C  103C 0006               4680mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031A0  3212                    4681mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031A2  E049                    4682mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031A4  E849                    4683mm         LSR.W   #4, D1      
000031A6                          4684mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031A6  0C01 0009               4685mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031AA  6E00 000A               4686mmm         BGT     ALPHA_334
000031AE  0601 0030               4687mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031B2  6000 0006               4688mmm         BRA     DONE_334
000031B6  0601 0037               4689mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031BA  4E71                    4690mmm DONE_334: NOP
000031BC                          4691mmm         ENDM
000031BC  4E4F                    4692mm         TRAP    #15         ; EXECUTE OUTPUT
000031BE                          4693mm         
000031BE  3212                    4694mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031C0  E949                    4695mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031C2  E049                    4696mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031C4  E849                    4697mm         LSR.W   #4, D1      
000031C6                          4698mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031C6  0C01 0009               4699mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031CA  6E00 000A               4700mmm         BGT     ALPHA_335
000031CE  0601 0030               4701mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031D2  6000 0006               4702mmm         BRA     DONE_335
000031D6  0601 0037               4703mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031DA  4E71                    4704mmm DONE_335: NOP
000031DC                          4705mmm         ENDM
000031DC  4E4F                    4706mm         TRAP    #15         ; EXECUTE OUTPUT
000031DE                          4707mm         
000031DE  3212                    4708mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031E0  E149                    4709mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031E2  E049                    4710mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031E4  E849                    4711mm         LSR.W   #4, D1      
000031E6                          4712mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031E6  0C01 0009               4713mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031EA  6E00 000A               4714mmm         BGT     ALPHA_336
000031EE  0601 0030               4715mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031F2  6000 0006               4716mmm         BRA     DONE_336
000031F6  0601 0037               4717mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031FA  4E71                    4718mmm DONE_336: NOP
000031FC                          4719mmm         ENDM
000031FC  4E4F                    4720mm         TRAP    #15         ; EXECUTE OUTPUT
000031FE                          4721mm         
000031FE  3212                    4722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003200  E149                    4723mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003202  E949                    4724mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003204  E049                    4725mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003206  E849                    4726mm         LSR.W   #4, D1      
00003208                          4727mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003208  0C01 0009               4728mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000320C  6E00 000A               4729mmm         BGT     ALPHA_337
00003210  0601 0030               4730mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003214  6000 0006               4731mmm         BRA     DONE_337
00003218  0601 0037               4732mmm ALPHA_337: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000321C  4E71                    4733mmm DONE_337: NOP
0000321E                          4734mmm         ENDM
0000321E  4E4F                    4735mm         TRAP    #15         ; EXECUTE OUTPUT       
00003220                          4736mm         ENDM 
00003220  361A                    4737m         MOVE.W  (A2)+, D3
00003222                          4738mm         ADROUT
00003222  103C 0006               4739mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003226  3212                    4740mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003228  E049                    4741mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000322A  E849                    4742mm         LSR.W   #4, D1      
0000322C                          4743mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000322C  0C01 0009               4744mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003230  6E00 000A               4745mmm         BGT     ALPHA_339
00003234  0601 0030               4746mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003238  6000 0006               4747mmm         BRA     DONE_339
0000323C  0601 0037               4748mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003240  4E71                    4749mmm DONE_339: NOP
00003242                          4750mmm         ENDM
00003242  4E4F                    4751mm         TRAP    #15         ; EXECUTE OUTPUT
00003244                          4752mm         
00003244  3212                    4753mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003246  E949                    4754mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003248  E049                    4755mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000324A  E849                    4756mm         LSR.W   #4, D1      
0000324C                          4757mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000324C  0C01 0009               4758mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003250  6E00 000A               4759mmm         BGT     ALPHA_340
00003254  0601 0030               4760mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003258  6000 0006               4761mmm         BRA     DONE_340
0000325C  0601 0037               4762mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003260  4E71                    4763mmm DONE_340: NOP
00003262                          4764mmm         ENDM
00003262  4E4F                    4765mm         TRAP    #15         ; EXECUTE OUTPUT
00003264                          4766mm         
00003264  3212                    4767mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003266  E149                    4768mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003268  E049                    4769mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000326A  E849                    4770mm         LSR.W   #4, D1      
0000326C                          4771mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000326C  0C01 0009               4772mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003270  6E00 000A               4773mmm         BGT     ALPHA_341
00003274  0601 0030               4774mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003278  6000 0006               4775mmm         BRA     DONE_341
0000327C  0601 0037               4776mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003280  4E71                    4777mmm DONE_341: NOP
00003282                          4778mmm         ENDM
00003282  4E4F                    4779mm         TRAP    #15         ; EXECUTE OUTPUT
00003284                          4780mm         
00003284  3212                    4781mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003286  E149                    4782mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003288  E949                    4783mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000328A  E049                    4784mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000328C  E849                    4785mm         LSR.W   #4, D1      
0000328E                          4786mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000328E  0C01 0009               4787mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003292  6E00 000A               4788mmm         BGT     ALPHA_342
00003296  0601 0030               4789mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329A  6000 0006               4790mmm         BRA     DONE_342
0000329E  0601 0037               4791mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A2  4E71                    4792mmm DONE_342: NOP
000032A4                          4793mmm         ENDM
000032A4  4E4F                    4794mm         TRAP    #15         ; EXECUTE OUTPUT       
000032A6                          4795mm         ENDM 
000032A6  3605                    4796m         MOVE.W  D5, D3
000032A8  6000 01B0               4797m         BRA     COMPLETE_297 
000032AC                          4798m ADRABSOLUTEW_297:     
000032AC  361A                    4799m         MOVE.W  (A2)+, D3
000032AE                          4800mm         PRINTSIGN
000032AE  103C 0006               4801mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032B2  323C 0024               4802mm         MOVE.W  #36, D1     ; AN = SIGN
000032B6  4E4F                    4803mm         TRAP    #15         ; OUTPUT = SIGN
000032B8                          4804mm         ENDM
000032B8                          4805mm         ADROUT
000032B8  103C 0006               4806mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032BC  3212                    4807mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032BE  E049                    4808mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032C0  E849                    4809mm         LSR.W   #4, D1      
000032C2                          4810mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032C2  0C01 0009               4811mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032C6  6E00 000A               4812mmm         BGT     ALPHA_345
000032CA  0601 0030               4813mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032CE  6000 0006               4814mmm         BRA     DONE_345
000032D2  0601 0037               4815mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032D6  4E71                    4816mmm DONE_345: NOP
000032D8                          4817mmm         ENDM
000032D8  4E4F                    4818mm         TRAP    #15         ; EXECUTE OUTPUT
000032DA                          4819mm         
000032DA  3212                    4820mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032DC  E949                    4821mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032DE  E049                    4822mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032E0  E849                    4823mm         LSR.W   #4, D1      
000032E2                          4824mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032E2  0C01 0009               4825mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032E6  6E00 000A               4826mmm         BGT     ALPHA_346
000032EA  0601 0030               4827mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032EE  6000 0006               4828mmm         BRA     DONE_346
000032F2  0601 0037               4829mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032F6  4E71                    4830mmm DONE_346: NOP
000032F8                          4831mmm         ENDM
000032F8  4E4F                    4832mm         TRAP    #15         ; EXECUTE OUTPUT
000032FA                          4833mm         
000032FA  3212                    4834mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032FC  E149                    4835mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032FE  E049                    4836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003300  E849                    4837mm         LSR.W   #4, D1      
00003302                          4838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003302  0C01 0009               4839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003306  6E00 000A               4840mmm         BGT     ALPHA_347
0000330A  0601 0030               4841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000330E  6000 0006               4842mmm         BRA     DONE_347
00003312  0601 0037               4843mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003316  4E71                    4844mmm DONE_347: NOP
00003318                          4845mmm         ENDM
00003318  4E4F                    4846mm         TRAP    #15         ; EXECUTE OUTPUT
0000331A                          4847mm         
0000331A  3212                    4848mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000331C  E149                    4849mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000331E  E949                    4850mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003320  E049                    4851mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003322  E849                    4852mm         LSR.W   #4, D1      
00003324                          4853mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003324  0C01 0009               4854mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003328  6E00 000A               4855mmm         BGT     ALPHA_348
0000332C  0601 0030               4856mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003330  6000 0006               4857mmm         BRA     DONE_348
00003334  0601 0037               4858mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003338  4E71                    4859mmm DONE_348: NOP
0000333A                          4860mmm         ENDM
0000333A  4E4F                    4861mm         TRAP    #15         ; EXECUTE OUTPUT       
0000333C                          4862mm         ENDM 
0000333C  3605                    4863m         MOVE.W  D5, D3
0000333E  6000 011A               4864m         BRA     COMPLETE_297  
00003342                          4865m ADRABSOLUTEL_297:  
00003342  361A                    4866m         MOVE.W  (A2)+, D3
00003344                          4867mm         PRINTSIGN
00003344  103C 0006               4868mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003348  323C 0024               4869mm         MOVE.W  #36, D1     ; AN = SIGN
0000334C  4E4F                    4870mm         TRAP    #15         ; OUTPUT = SIGN
0000334E                          4871mm         ENDM
0000334E                          4872mm         ADROUT 
0000334E  103C 0006               4873mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003352  3212                    4874mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003354  E049                    4875mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003356  E849                    4876mm         LSR.W   #4, D1      
00003358                          4877mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003358  0C01 0009               4878mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000335C  6E00 000A               4879mmm         BGT     ALPHA_351
00003360  0601 0030               4880mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003364  6000 0006               4881mmm         BRA     DONE_351
00003368  0601 0037               4882mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000336C  4E71                    4883mmm DONE_351: NOP
0000336E                          4884mmm         ENDM
0000336E  4E4F                    4885mm         TRAP    #15         ; EXECUTE OUTPUT
00003370                          4886mm         
00003370  3212                    4887mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003372  E949                    4888mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003374  E049                    4889mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003376  E849                    4890mm         LSR.W   #4, D1      
00003378                          4891mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003378  0C01 0009               4892mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000337C  6E00 000A               4893mmm         BGT     ALPHA_352
00003380  0601 0030               4894mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003384  6000 0006               4895mmm         BRA     DONE_352
00003388  0601 0037               4896mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000338C  4E71                    4897mmm DONE_352: NOP
0000338E                          4898mmm         ENDM
0000338E  4E4F                    4899mm         TRAP    #15         ; EXECUTE OUTPUT
00003390                          4900mm         
00003390  3212                    4901mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003392  E149                    4902mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003394  E049                    4903mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003396  E849                    4904mm         LSR.W   #4, D1      
00003398                          4905mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003398  0C01 0009               4906mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000339C  6E00 000A               4907mmm         BGT     ALPHA_353
000033A0  0601 0030               4908mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033A4  6000 0006               4909mmm         BRA     DONE_353
000033A8  0601 0037               4910mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033AC  4E71                    4911mmm DONE_353: NOP
000033AE                          4912mmm         ENDM
000033AE  4E4F                    4913mm         TRAP    #15         ; EXECUTE OUTPUT
000033B0                          4914mm         
000033B0  3212                    4915mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033B2  E149                    4916mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033B4  E949                    4917mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000033B6  E049                    4918mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033B8  E849                    4919mm         LSR.W   #4, D1      
000033BA                          4920mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033BA  0C01 0009               4921mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033BE  6E00 000A               4922mmm         BGT     ALPHA_354
000033C2  0601 0030               4923mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033C6  6000 0006               4924mmm         BRA     DONE_354
000033CA  0601 0037               4925mmm ALPHA_354: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033CE  4E71                    4926mmm DONE_354: NOP
000033D0                          4927mmm         ENDM
000033D0  4E4F                    4928mm         TRAP    #15         ; EXECUTE OUTPUT       
000033D2                          4929mm         ENDM 
000033D2  361A                    4930m         MOVE.W  (A2)+, D3
000033D4                          4931mm         ADROUT
000033D4  103C 0006               4932mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000033D8  3212                    4933mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033DA  E049                    4934mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033DC  E849                    4935mm         LSR.W   #4, D1      
000033DE                          4936mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033DE  0C01 0009               4937mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033E2  6E00 000A               4938mmm         BGT     ALPHA_356
000033E6  0601 0030               4939mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033EA  6000 0006               4940mmm         BRA     DONE_356
000033EE  0601 0037               4941mmm ALPHA_356: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033F2  4E71                    4942mmm DONE_356: NOP
000033F4                          4943mmm         ENDM
000033F4  4E4F                    4944mm         TRAP    #15         ; EXECUTE OUTPUT
000033F6                          4945mm         
000033F6  3212                    4946mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033F8  E949                    4947mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000033FA  E049                    4948mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033FC  E849                    4949mm         LSR.W   #4, D1      
000033FE                          4950mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033FE  0C01 0009               4951mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003402  6E00 000A               4952mmm         BGT     ALPHA_357
00003406  0601 0030               4953mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000340A  6000 0006               4954mmm         BRA     DONE_357
0000340E  0601 0037               4955mmm ALPHA_357: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003412  4E71                    4956mmm DONE_357: NOP
00003414                          4957mmm         ENDM
00003414  4E4F                    4958mm         TRAP    #15         ; EXECUTE OUTPUT
00003416                          4959mm         
00003416  3212                    4960mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003418  E149                    4961mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000341A  E049                    4962mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000341C  E849                    4963mm         LSR.W   #4, D1      
0000341E                          4964mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000341E  0C01 0009               4965mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003422  6E00 000A               4966mmm         BGT     ALPHA_358
00003426  0601 0030               4967mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000342A  6000 0006               4968mmm         BRA     DONE_358
0000342E  0601 0037               4969mmm ALPHA_358: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003432  4E71                    4970mmm DONE_358: NOP
00003434                          4971mmm         ENDM
00003434  4E4F                    4972mm         TRAP    #15         ; EXECUTE OUTPUT
00003436                          4973mm         
00003436  3212                    4974mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003438  E149                    4975mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000343A  E949                    4976mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000343C  E049                    4977mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000343E  E849                    4978mm         LSR.W   #4, D1      
00003440                          4979mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003440  0C01 0009               4980mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003444  6E00 000A               4981mmm         BGT     ALPHA_359
00003448  0601 0030               4982mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000344C  6000 0006               4983mmm         BRA     DONE_359
00003450  0601 0037               4984mmm ALPHA_359: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003454  4E71                    4985mmm DONE_359: NOP
00003456                          4986mmm         ENDM
00003456  4E4F                    4987mm         TRAP    #15         ; EXECUTE OUTPUT       
00003458                          4988mm         ENDM 
00003458  3605                    4989m         MOVE.W  D5, D3
0000345A                          4990m 
0000345A                          4991m COMPLETE_297:  ; OPCODE HAS BEEN VERIFIED
0000345A                          4992m         ENDM
0000345A  6000 060C               4993          BRA     decodeSUBcomp
0000345E                          4994  decodeSubDestOp:
0000345E                          4995m         prepareAdrMode  #$1,(A2)
0000345E  3C3C 0001               4996m         MOVE.W  #$1, D6      ; INPUT VALUE
00003462  3212                    4997m         MOVE.W  (A2), D1
00003464  BC3C 0001               4998m         CMP.B   #$01, D6
00003468  6700 000C               4999m         BEQ     ADRSOURCE_360    
0000346C                          5000m ADRDEST_360:
0000346C  EF49                    5001m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000346E  E049                    5002m         LSR     #$08, D1
00003470  EA49                    5003m         LSR     #$05, D1
00003472  6000 000A               5004m         BRA     COMPLETE_360 
00003476                          5005m ADRSOURCE_360:                
00003476  E149                    5006m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003478  E549                    5007m         LSL     #$02, D1
0000347A  E049                    5008m         LSR     #$08, D1
0000347C  EA49                    5009m         LSR     #$05, D1
0000347E                          5010m COMPLETE_360:  ; OPCODE HAS BEEN VERIFIED
0000347E                          5011m         ENDM        
0000347E                          5012m         decodeAdrMode   (A2), D1
0000347E  3612                    5013m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003480  3201                    5014m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003482                          5015m 
00003482  B23C 0001               5016m         CMP.B   #$01, D1
00003486  6700 0066               5017m         BEQ     ADRREGDIRECT_361    
0000348A  B23C 0002               5018m         CMP.B   #$02, D1
0000348E  6700 00A0               5019m         BEQ     ADRREGINDIRECT_361  
00003492  B23C 0003               5020m         CMP.B   #$03, D1
00003496  6700 0102               5021m         BEQ     ADRREGPOSTINC_361  
0000349A  B23C 0004               5022m         CMP.B   #$04, D1
0000349E  6700 0178               5023m         BEQ     ADRREGPREDEC_361
000034A2  B23C 0007               5024m         CMP.B   #$07, D1
000034A6  6700 01EE               5025m         BEQ     ADRABSOLUTE_361    
000034AA                          5026m         
000034AA                          5027m DATAREGDIRECT_361: 
000034AA  BC3C 0001               5028m         CMP.B   #$01, D6
000034AE  6700 001E               5029m         BEQ     DATAREGDIRECTSRC_361   
000034B2                          5030m DATAREGDIRECTDEST_361: 
000034B2                          5031mm         PRINTDNDEST D3 
000034B2  3203                    5032mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000034B4  E949                    5033mm         LSL     #$04, D1
000034B6  E049                    5034mm         LSR     #$08, D1
000034B8  EA49                    5035mm         LSR     #$05, D1
000034BA  43F8 00CC               5036mm         LEA     ODN, A1     
000034BE  103C 000E               5037mm         MOVE.B  #14,D0          
000034C2  4E4F                    5038mm         TRAP    #15
000034C4  103C 0003               5039mm         MOVE.B  #3,D0          
000034C8  4E4F                    5040mm         TRAP    #15
000034CA                          5041mm         ENDM
000034CA  6000 057A               5042m         BRA     COMPLETE_361 
000034CE                          5043m DATAREGDIRECTSRC_361: 
000034CE                          5044mm         PRINTDNSRC D3 
000034CE  4281                    5045mm         CLR.L   D1
000034D0  3203                    5046mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034D2  E149                    5047mm         LSL     #$08, D1
000034D4  EB49                    5048mm         LSL     #$05, D1
000034D6  E049                    5049mm         LSR     #$08, D1
000034D8  EA49                    5050mm         LSR     #$05, D1
000034DA  43F8 00CC               5051mm         LEA     ODN, A1     
000034DE  103C 000E               5052mm         MOVE.B  #14,D0          
000034E2  4E4F                    5053mm         TRAP    #15
000034E4  103C 0003               5054mm         MOVE.B  #3,D0          
000034E8  4E4F                    5055mm         TRAP    #15
000034EA                          5056mm         ENDM
000034EA  6000 055A               5057m         BRA     COMPLETE_361   
000034EE                          5058m         
000034EE                          5059m ADRREGDIRECT_361: 
000034EE  BC3C 0001               5060m         CMP.B   #$01, D6
000034F2  6700 001E               5061m         BEQ     ADRREGDIRECTSRC_361   
000034F6                          5062m ADRREGDIRECTDEST_361:
000034F6                          5063mm         PRINTANDEST D3
000034F6  3203                    5064mm         MOVE.W  D3, D1
000034F8  E949                    5065mm         LSL     #$04, D1
000034FA  E049                    5066mm         LSR     #$08, D1
000034FC  EA49                    5067mm         LSR     #$05, D1
000034FE  43F8 00CE               5068mm         LEA     OAN, A1     
00003502  103C 000E               5069mm         MOVE.B  #14,D0          
00003506  4E4F                    5070mm         TRAP    #15
00003508  103C 0003               5071mm         MOVE.B  #3,D0          
0000350C  4E4F                    5072mm         TRAP    #15
0000350E                          5073mm         ENDM
0000350E  6000 0536               5074m         BRA     COMPLETE_361   
00003512                          5075m ADRREGDIRECTSRC_361:
00003512                          5076mm         PRINTANSRC D3
00003512  3203                    5077mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003514  E149                    5078mm         LSL     #$08, D1
00003516  EB49                    5079mm         LSL     #$05, D1
00003518  E049                    5080mm         LSR     #$08, D1
0000351A  EA49                    5081mm         LSR     #$05, D1
0000351C  43F8 00CE               5082mm         LEA     OAN, A1     
00003520  103C 000E               5083mm         MOVE.B  #14,D0          
00003524  4E4F                    5084mm         TRAP    #15
00003526  103C 0003               5085mm         MOVE.B  #3,D0          
0000352A  4E4F                    5086mm         TRAP    #15
0000352C                          5087mm         ENDM
0000352C  6000 0518               5088m         BRA     COMPLETE_361   
00003530                          5089m        
00003530                          5090m ADRREGINDIRECT_361:   
00003530  BC3C 0001               5091m         CMP.B   #$01, D6
00003534  6700 0032               5092m         BEQ     ADRREGINDIRECTSRC_361   
00003538                          5093m ADRREGINDIRECTDEST_361:
00003538                          5094mm         PRINTLB
00003538  43F8 00D0               5095mm         LEA     OLB, A1     
0000353C  103C 000E               5096mm         MOVE.B  #14,D0          
00003540  4E4F                    5097mm         TRAP    #15
00003542                          5098mm         ENDM
00003542                          5099mm         PRINTANDEST D3  
00003542  3203                    5100mm         MOVE.W  D3, D1
00003544  E949                    5101mm         LSL     #$04, D1
00003546  E049                    5102mm         LSR     #$08, D1
00003548  EA49                    5103mm         LSR     #$05, D1
0000354A  43F8 00CE               5104mm         LEA     OAN, A1     
0000354E  103C 000E               5105mm         MOVE.B  #14,D0          
00003552  4E4F                    5106mm         TRAP    #15
00003554  103C 0003               5107mm         MOVE.B  #3,D0          
00003558  4E4F                    5108mm         TRAP    #15
0000355A                          5109mm         ENDM
0000355A                          5110mm         PRINTRB
0000355A  43F8 00D2               5111mm         LEA     ORB, A1     
0000355E  103C 000E               5112mm         MOVE.B  #14,D0          
00003562  4E4F                    5113mm         TRAP    #15
00003564                          5114mm         ENDM
00003564  6000 04E0               5115m         BRA     COMPLETE_361     
00003568                          5116m ADRREGINDIRECTSRC_361:   
00003568                          5117mm         PRINTLB
00003568  43F8 00D0               5118mm         LEA     OLB, A1     
0000356C  103C 000E               5119mm         MOVE.B  #14,D0          
00003570  4E4F                    5120mm         TRAP    #15
00003572                          5121mm         ENDM
00003572                          5122mm         PRINTANSRC D3  
00003572  3203                    5123mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003574  E149                    5124mm         LSL     #$08, D1
00003576  EB49                    5125mm         LSL     #$05, D1
00003578  E049                    5126mm         LSR     #$08, D1
0000357A  EA49                    5127mm         LSR     #$05, D1
0000357C  43F8 00CE               5128mm         LEA     OAN, A1     
00003580  103C 000E               5129mm         MOVE.B  #14,D0          
00003584  4E4F                    5130mm         TRAP    #15
00003586  103C 0003               5131mm         MOVE.B  #3,D0          
0000358A  4E4F                    5132mm         TRAP    #15
0000358C                          5133mm         ENDM
0000358C                          5134mm         PRINTRB
0000358C  43F8 00D2               5135mm         LEA     ORB, A1     
00003590  103C 000E               5136mm         MOVE.B  #14,D0          
00003594  4E4F                    5137mm         TRAP    #15
00003596                          5138mm         ENDM
00003596  6000 04AE               5139m         BRA     COMPLETE_361   
0000359A                          5140m         
0000359A                          5141m ADRREGPOSTINC_361:   
0000359A  BC3C 0001               5142m         CMP.B   #$01, D6
0000359E  6700 003C               5143m         BEQ     ADRREGPOSTINCSRC_361   
000035A2                          5144m ADRREGPOSTINCDEST_361: 
000035A2                          5145mm         PRINTLB
000035A2  43F8 00D0               5146mm         LEA     OLB, A1     
000035A6  103C 000E               5147mm         MOVE.B  #14,D0          
000035AA  4E4F                    5148mm         TRAP    #15
000035AC                          5149mm         ENDM
000035AC                          5150mm         PRINTANDEST D3  
000035AC  3203                    5151mm         MOVE.W  D3, D1
000035AE  E949                    5152mm         LSL     #$04, D1
000035B0  E049                    5153mm         LSR     #$08, D1
000035B2  EA49                    5154mm         LSR     #$05, D1
000035B4  43F8 00CE               5155mm         LEA     OAN, A1     
000035B8  103C 000E               5156mm         MOVE.B  #14,D0          
000035BC  4E4F                    5157mm         TRAP    #15
000035BE  103C 0003               5158mm         MOVE.B  #3,D0          
000035C2  4E4F                    5159mm         TRAP    #15
000035C4                          5160mm         ENDM
000035C4                          5161mm         PRINTRB
000035C4  43F8 00D2               5162mm         LEA     ORB, A1     
000035C8  103C 000E               5163mm         MOVE.B  #14,D0          
000035CC  4E4F                    5164mm         TRAP    #15
000035CE                          5165mm         ENDM
000035CE                          5166mm         PRINTPI
000035CE  43F8 00D9               5167mm         LEA     OPSTINC, A1     
000035D2  103C 000E               5168mm         MOVE.B  #14,D0          
000035D6  4E4F                    5169mm         TRAP    #15
000035D8                          5170mm         ENDM
000035D8  6000 046C               5171m         BRA     COMPLETE_361  
000035DC                          5172m ADRREGPOSTINCSRC_361:           
000035DC                          5173mm         PRINTLB
000035DC  43F8 00D0               5174mm         LEA     OLB, A1     
000035E0  103C 000E               5175mm         MOVE.B  #14,D0          
000035E4  4E4F                    5176mm         TRAP    #15
000035E6                          5177mm         ENDM
000035E6                          5178mm         PRINTANSRC D3  
000035E6  3203                    5179mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000035E8  E149                    5180mm         LSL     #$08, D1
000035EA  EB49                    5181mm         LSL     #$05, D1
000035EC  E049                    5182mm         LSR     #$08, D1
000035EE  EA49                    5183mm         LSR     #$05, D1
000035F0  43F8 00CE               5184mm         LEA     OAN, A1     
000035F4  103C 000E               5185mm         MOVE.B  #14,D0          
000035F8  4E4F                    5186mm         TRAP    #15
000035FA  103C 0003               5187mm         MOVE.B  #3,D0          
000035FE  4E4F                    5188mm         TRAP    #15
00003600                          5189mm         ENDM
00003600                          5190mm         PRINTRB
00003600  43F8 00D2               5191mm         LEA     ORB, A1     
00003604  103C 000E               5192mm         MOVE.B  #14,D0          
00003608  4E4F                    5193mm         TRAP    #15
0000360A                          5194mm         ENDM
0000360A                          5195mm         PRINTPI
0000360A  43F8 00D9               5196mm         LEA     OPSTINC, A1     
0000360E  103C 000E               5197mm         MOVE.B  #14,D0          
00003612  4E4F                    5198mm         TRAP    #15
00003614                          5199mm         ENDM
00003614  6000 0430               5200m         BRA     COMPLETE_361  
00003618                          5201m ADRREGPREDEC_361: 
00003618  BC3C 0001               5202m         CMP.B   #$01, D6
0000361C  6700 003C               5203m         BEQ     ADRREGPREDECSRC_361   
00003620                          5204m ADRREGPREDECDEST_361:
00003620                          5205mm         PRINTPD  
00003620  43F8 00D7               5206mm         LEA     OPREDEC, A1     
00003624  103C 000E               5207mm         MOVE.B  #14,D0          
00003628  4E4F                    5208mm         TRAP    #15
0000362A                          5209mm         ENDM
0000362A                          5210mm         PRINTLB
0000362A  43F8 00D0               5211mm         LEA     OLB, A1     
0000362E  103C 000E               5212mm         MOVE.B  #14,D0          
00003632  4E4F                    5213mm         TRAP    #15
00003634                          5214mm         ENDM
00003634                          5215mm         PRINTANDEST D3  
00003634  3203                    5216mm         MOVE.W  D3, D1
00003636  E949                    5217mm         LSL     #$04, D1
00003638  E049                    5218mm         LSR     #$08, D1
0000363A  EA49                    5219mm         LSR     #$05, D1
0000363C  43F8 00CE               5220mm         LEA     OAN, A1     
00003640  103C 000E               5221mm         MOVE.B  #14,D0          
00003644  4E4F                    5222mm         TRAP    #15
00003646  103C 0003               5223mm         MOVE.B  #3,D0          
0000364A  4E4F                    5224mm         TRAP    #15
0000364C                          5225mm         ENDM
0000364C                          5226mm         PRINTRB
0000364C  43F8 00D2               5227mm         LEA     ORB, A1     
00003650  103C 000E               5228mm         MOVE.B  #14,D0          
00003654  4E4F                    5229mm         TRAP    #15
00003656                          5230mm         ENDM
00003656  6000 03EE               5231m         BRA     COMPLETE_361   
0000365A                          5232m ADRREGPREDECSRC_361: 
0000365A                          5233mm         PRINTPD  
0000365A  43F8 00D7               5234mm         LEA     OPREDEC, A1     
0000365E  103C 000E               5235mm         MOVE.B  #14,D0          
00003662  4E4F                    5236mm         TRAP    #15
00003664                          5237mm         ENDM
00003664                          5238mm         PRINTLB
00003664  43F8 00D0               5239mm         LEA     OLB, A1     
00003668  103C 000E               5240mm         MOVE.B  #14,D0          
0000366C  4E4F                    5241mm         TRAP    #15
0000366E                          5242mm         ENDM
0000366E                          5243mm         PRINTANSRC D3  
0000366E  3203                    5244mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003670  E149                    5245mm         LSL     #$08, D1
00003672  EB49                    5246mm         LSL     #$05, D1
00003674  E049                    5247mm         LSR     #$08, D1
00003676  EA49                    5248mm         LSR     #$05, D1
00003678  43F8 00CE               5249mm         LEA     OAN, A1     
0000367C  103C 000E               5250mm         MOVE.B  #14,D0          
00003680  4E4F                    5251mm         TRAP    #15
00003682  103C 0003               5252mm         MOVE.B  #3,D0          
00003686  4E4F                    5253mm         TRAP    #15
00003688                          5254mm         ENDM
00003688                          5255mm         PRINTRB
00003688  43F8 00D2               5256mm         LEA     ORB, A1     
0000368C  103C 000E               5257mm         MOVE.B  #14,D0          
00003690  4E4F                    5258mm         TRAP    #15
00003692                          5259mm         ENDM
00003692  6000 03B2               5260m         BRA     COMPLETE_361
00003696                          5261m        
00003696                          5262m ADRABSOLUTE_361:
00003696  BC3C 0001               5263m         CMP.B   #$01, D6
0000369A  6600 0018               5264m         BNE     ADRABSOLUTEDST_361 
0000369E                          5265m         
0000369E  3A03                    5266m         MOVE.W  D3, D5
000036A0  0803 0002               5267m         BTST    #2, D3
000036A4  6600 0024               5268m         BNE     ADRIMMEDIATE_361
000036A8  0803 0000               5269m         BTST    #0, D3
000036AC  6600 0280               5270m         BNE     ADRABSOLUTEL_361
000036B0  6000 01E6               5271m         BRA     ADRABSOLUTEW_361
000036B4                          5272m ADRABSOLUTEDST_361:
000036B4  3A03                    5273m         MOVE.W  D3, D5
000036B6  0803 000B               5274m         BTST    #$B, D3
000036BA  6600 000E               5275m         BNE     ADRIMMEDIATE_361
000036BE  0803 0009               5276m         BTST    #$09, D3
000036C2  6600 026A               5277m         BNE     ADRABSOLUTEL_361
000036C6  6000 01D0               5278m         BRA     ADRABSOLUTEW_361
000036CA                          5279m ADRIMMEDIATE_361:
000036CA  BE3C 0001               5280m         CMP.B   #1, D7
000036CE  6700 00A2               5281m         BEQ     ADRIMMEDIATEL_361
000036D2                          5282m ADRIMMEDIATEW_361:
000036D2  361A                    5283m         MOVE.W  (A2)+, D3
000036D4                          5284mm         PRINTHASH
000036D4  103C 0006               5285mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036D8  323C 0023               5286mm         MOVE.W  #35, D1     ; AN = SIGN
000036DC  4E4F                    5287mm         TRAP    #15         ; OUTPUT = SIGN
000036DE                          5288mm         ENDM
000036DE                          5289mm         PRINTSIGN
000036DE  103C 0006               5290mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036E2  323C 0024               5291mm         MOVE.W  #36, D1     ; AN = SIGN
000036E6  4E4F                    5292mm         TRAP    #15         ; OUTPUT = SIGN
000036E8                          5293mm         ENDM
000036E8                          5294mm         ADROUT
000036E8  103C 0006               5295mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036EC  3212                    5296mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036EE  E049                    5297mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036F0  E849                    5298mm         LSR.W   #4, D1      
000036F2                          5299mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036F2  0C01 0009               5300mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036F6  6E00 000A               5301mmm         BGT     ALPHA_391
000036FA  0601 0030               5302mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036FE  6000 0006               5303mmm         BRA     DONE_391
00003702  0601 0037               5304mmm ALPHA_391: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003706  4E71                    5305mmm DONE_391: NOP
00003708                          5306mmm         ENDM
00003708  4E4F                    5307mm         TRAP    #15         ; EXECUTE OUTPUT
0000370A                          5308mm         
0000370A  3212                    5309mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000370C  E949                    5310mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000370E  E049                    5311mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003710  E849                    5312mm         LSR.W   #4, D1      
00003712                          5313mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003712  0C01 0009               5314mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003716  6E00 000A               5315mmm         BGT     ALPHA_392
0000371A  0601 0030               5316mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000371E  6000 0006               5317mmm         BRA     DONE_392
00003722  0601 0037               5318mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003726  4E71                    5319mmm DONE_392: NOP
00003728                          5320mmm         ENDM
00003728  4E4F                    5321mm         TRAP    #15         ; EXECUTE OUTPUT
0000372A                          5322mm         
0000372A  3212                    5323mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000372C  E149                    5324mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000372E  E049                    5325mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003730  E849                    5326mm         LSR.W   #4, D1      
00003732                          5327mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003732  0C01 0009               5328mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003736  6E00 000A               5329mmm         BGT     ALPHA_393
0000373A  0601 0030               5330mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000373E  6000 0006               5331mmm         BRA     DONE_393
00003742  0601 0037               5332mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003746  4E71                    5333mmm DONE_393: NOP
00003748                          5334mmm         ENDM
00003748  4E4F                    5335mm         TRAP    #15         ; EXECUTE OUTPUT
0000374A                          5336mm         
0000374A  3212                    5337mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000374C  E149                    5338mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000374E  E949                    5339mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003750  E049                    5340mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003752  E849                    5341mm         LSR.W   #4, D1      
00003754                          5342mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003754  0C01 0009               5343mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003758  6E00 000A               5344mmm         BGT     ALPHA_394
0000375C  0601 0030               5345mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003760  6000 0006               5346mmm         BRA     DONE_394
00003764  0601 0037               5347mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003768  4E71                    5348mmm DONE_394: NOP
0000376A                          5349mmm         ENDM
0000376A  4E4F                    5350mm         TRAP    #15         ; EXECUTE OUTPUT       
0000376C                          5351mm         ENDM 
0000376C  3605                    5352m         MOVE.W  D5, D3
0000376E  6000 02D6               5353m         BRA     COMPLETE_361
00003772                          5354m ADRIMMEDIATEL_361:
00003772  361A                    5355m         MOVE.W  (A2)+, D3
00003774                          5356mm         PRINTHASH
00003774  103C 0006               5357mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003778  323C 0023               5358mm         MOVE.W  #35, D1     ; AN = SIGN
0000377C  4E4F                    5359mm         TRAP    #15         ; OUTPUT = SIGN
0000377E                          5360mm         ENDM
0000377E                          5361mm         PRINTSIGN
0000377E  103C 0006               5362mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003782  323C 0024               5363mm         MOVE.W  #36, D1     ; AN = SIGN
00003786  4E4F                    5364mm         TRAP    #15         ; OUTPUT = SIGN
00003788                          5365mm         ENDM
00003788                          5366mm         ADROUT 
00003788  103C 0006               5367mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000378C  3212                    5368mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000378E  E049                    5369mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003790  E849                    5370mm         LSR.W   #4, D1      
00003792                          5371mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003792  0C01 0009               5372mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003796  6E00 000A               5373mmm         BGT     ALPHA_398
0000379A  0601 0030               5374mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000379E  6000 0006               5375mmm         BRA     DONE_398
000037A2  0601 0037               5376mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037A6  4E71                    5377mmm DONE_398: NOP
000037A8                          5378mmm         ENDM
000037A8  4E4F                    5379mm         TRAP    #15         ; EXECUTE OUTPUT
000037AA                          5380mm         
000037AA  3212                    5381mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037AC  E949                    5382mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000037AE  E049                    5383mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037B0  E849                    5384mm         LSR.W   #4, D1      
000037B2                          5385mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037B2  0C01 0009               5386mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B6  6E00 000A               5387mmm         BGT     ALPHA_399
000037BA  0601 0030               5388mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037BE  6000 0006               5389mmm         BRA     DONE_399
000037C2  0601 0037               5390mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C6  4E71                    5391mmm DONE_399: NOP
000037C8                          5392mmm         ENDM
000037C8  4E4F                    5393mm         TRAP    #15         ; EXECUTE OUTPUT
000037CA                          5394mm         
000037CA  3212                    5395mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037CC  E149                    5396mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037CE  E049                    5397mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037D0  E849                    5398mm         LSR.W   #4, D1      
000037D2                          5399mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D2  0C01 0009               5400mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D6  6E00 000A               5401mmm         BGT     ALPHA_400
000037DA  0601 0030               5402mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037DE  6000 0006               5403mmm         BRA     DONE_400
000037E2  0601 0037               5404mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E6  4E71                    5405mmm DONE_400: NOP
000037E8                          5406mmm         ENDM
000037E8  4E4F                    5407mm         TRAP    #15         ; EXECUTE OUTPUT
000037EA                          5408mm         
000037EA  3212                    5409mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037EC  E149                    5410mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037EE  E949                    5411mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037F0  E049                    5412mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037F2  E849                    5413mm         LSR.W   #4, D1      
000037F4                          5414mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037F4  0C01 0009               5415mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037F8  6E00 000A               5416mmm         BGT     ALPHA_401
000037FC  0601 0030               5417mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003800  6000 0006               5418mmm         BRA     DONE_401
00003804  0601 0037               5419mmm ALPHA_401: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003808  4E71                    5420mmm DONE_401: NOP
0000380A                          5421mmm         ENDM
0000380A  4E4F                    5422mm         TRAP    #15         ; EXECUTE OUTPUT       
0000380C                          5423mm         ENDM 
0000380C  361A                    5424m         MOVE.W  (A2)+, D3
0000380E                          5425mm         ADROUT
0000380E  103C 0006               5426mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003812  3212                    5427mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003814  E049                    5428mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003816  E849                    5429mm         LSR.W   #4, D1      
00003818                          5430mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003818  0C01 0009               5431mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000381C  6E00 000A               5432mmm         BGT     ALPHA_403
00003820  0601 0030               5433mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003824  6000 0006               5434mmm         BRA     DONE_403
00003828  0601 0037               5435mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000382C  4E71                    5436mmm DONE_403: NOP
0000382E                          5437mmm         ENDM
0000382E  4E4F                    5438mm         TRAP    #15         ; EXECUTE OUTPUT
00003830                          5439mm         
00003830  3212                    5440mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003832  E949                    5441mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003834  E049                    5442mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003836  E849                    5443mm         LSR.W   #4, D1      
00003838                          5444mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003838  0C01 0009               5445mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000383C  6E00 000A               5446mmm         BGT     ALPHA_404
00003840  0601 0030               5447mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003844  6000 0006               5448mmm         BRA     DONE_404
00003848  0601 0037               5449mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000384C  4E71                    5450mmm DONE_404: NOP
0000384E                          5451mmm         ENDM
0000384E  4E4F                    5452mm         TRAP    #15         ; EXECUTE OUTPUT
00003850                          5453mm         
00003850  3212                    5454mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003852  E149                    5455mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003854  E049                    5456mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003856  E849                    5457mm         LSR.W   #4, D1      
00003858                          5458mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003858  0C01 0009               5459mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000385C  6E00 000A               5460mmm         BGT     ALPHA_405
00003860  0601 0030               5461mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003864  6000 0006               5462mmm         BRA     DONE_405
00003868  0601 0037               5463mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000386C  4E71                    5464mmm DONE_405: NOP
0000386E                          5465mmm         ENDM
0000386E  4E4F                    5466mm         TRAP    #15         ; EXECUTE OUTPUT
00003870                          5467mm         
00003870  3212                    5468mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003872  E149                    5469mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003874  E949                    5470mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003876  E049                    5471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003878  E849                    5472mm         LSR.W   #4, D1      
0000387A                          5473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000387A  0C01 0009               5474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000387E  6E00 000A               5475mmm         BGT     ALPHA_406
00003882  0601 0030               5476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003886  6000 0006               5477mmm         BRA     DONE_406
0000388A  0601 0037               5478mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000388E  4E71                    5479mmm DONE_406: NOP
00003890                          5480mmm         ENDM
00003890  4E4F                    5481mm         TRAP    #15         ; EXECUTE OUTPUT       
00003892                          5482mm         ENDM 
00003892  3605                    5483m         MOVE.W  D5, D3
00003894  6000 01B0               5484m         BRA     COMPLETE_361 
00003898                          5485m ADRABSOLUTEW_361:     
00003898  361A                    5486m         MOVE.W  (A2)+, D3
0000389A                          5487mm         PRINTSIGN
0000389A  103C 0006               5488mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000389E  323C 0024               5489mm         MOVE.W  #36, D1     ; AN = SIGN
000038A2  4E4F                    5490mm         TRAP    #15         ; OUTPUT = SIGN
000038A4                          5491mm         ENDM
000038A4                          5492mm         ADROUT
000038A4  103C 0006               5493mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038A8  3212                    5494mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038AA  E049                    5495mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038AC  E849                    5496mm         LSR.W   #4, D1      
000038AE                          5497mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038AE  0C01 0009               5498mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038B2  6E00 000A               5499mmm         BGT     ALPHA_409
000038B6  0601 0030               5500mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038BA  6000 0006               5501mmm         BRA     DONE_409
000038BE  0601 0037               5502mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038C2  4E71                    5503mmm DONE_409: NOP
000038C4                          5504mmm         ENDM
000038C4  4E4F                    5505mm         TRAP    #15         ; EXECUTE OUTPUT
000038C6                          5506mm         
000038C6  3212                    5507mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038C8  E949                    5508mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000038CA  E049                    5509mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038CC  E849                    5510mm         LSR.W   #4, D1      
000038CE                          5511mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038CE  0C01 0009               5512mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038D2  6E00 000A               5513mmm         BGT     ALPHA_410
000038D6  0601 0030               5514mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038DA  6000 0006               5515mmm         BRA     DONE_410
000038DE  0601 0037               5516mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038E2  4E71                    5517mmm DONE_410: NOP
000038E4                          5518mmm         ENDM
000038E4  4E4F                    5519mm         TRAP    #15         ; EXECUTE OUTPUT
000038E6                          5520mm         
000038E6  3212                    5521mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038E8  E149                    5522mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038EA  E049                    5523mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038EC  E849                    5524mm         LSR.W   #4, D1      
000038EE                          5525mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038EE  0C01 0009               5526mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038F2  6E00 000A               5527mmm         BGT     ALPHA_411
000038F6  0601 0030               5528mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038FA  6000 0006               5529mmm         BRA     DONE_411
000038FE  0601 0037               5530mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003902  4E71                    5531mmm DONE_411: NOP
00003904                          5532mmm         ENDM
00003904  4E4F                    5533mm         TRAP    #15         ; EXECUTE OUTPUT
00003906                          5534mm         
00003906  3212                    5535mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003908  E149                    5536mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000390A  E949                    5537mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000390C  E049                    5538mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000390E  E849                    5539mm         LSR.W   #4, D1      
00003910                          5540mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003910  0C01 0009               5541mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003914  6E00 000A               5542mmm         BGT     ALPHA_412
00003918  0601 0030               5543mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000391C  6000 0006               5544mmm         BRA     DONE_412
00003920  0601 0037               5545mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003924  4E71                    5546mmm DONE_412: NOP
00003926                          5547mmm         ENDM
00003926  4E4F                    5548mm         TRAP    #15         ; EXECUTE OUTPUT       
00003928                          5549mm         ENDM 
00003928  3605                    5550m         MOVE.W  D5, D3
0000392A  6000 011A               5551m         BRA     COMPLETE_361  
0000392E                          5552m ADRABSOLUTEL_361:  
0000392E  361A                    5553m         MOVE.W  (A2)+, D3
00003930                          5554mm         PRINTSIGN
00003930  103C 0006               5555mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003934  323C 0024               5556mm         MOVE.W  #36, D1     ; AN = SIGN
00003938  4E4F                    5557mm         TRAP    #15         ; OUTPUT = SIGN
0000393A                          5558mm         ENDM
0000393A                          5559mm         ADROUT 
0000393A  103C 0006               5560mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000393E  3212                    5561mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003940  E049                    5562mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003942  E849                    5563mm         LSR.W   #4, D1      
00003944                          5564mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003944  0C01 0009               5565mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003948  6E00 000A               5566mmm         BGT     ALPHA_415
0000394C  0601 0030               5567mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003950  6000 0006               5568mmm         BRA     DONE_415
00003954  0601 0037               5569mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003958  4E71                    5570mmm DONE_415: NOP
0000395A                          5571mmm         ENDM
0000395A  4E4F                    5572mm         TRAP    #15         ; EXECUTE OUTPUT
0000395C                          5573mm         
0000395C  3212                    5574mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000395E  E949                    5575mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003960  E049                    5576mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003962  E849                    5577mm         LSR.W   #4, D1      
00003964                          5578mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003964  0C01 0009               5579mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003968  6E00 000A               5580mmm         BGT     ALPHA_416
0000396C  0601 0030               5581mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003970  6000 0006               5582mmm         BRA     DONE_416
00003974  0601 0037               5583mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003978  4E71                    5584mmm DONE_416: NOP
0000397A                          5585mmm         ENDM
0000397A  4E4F                    5586mm         TRAP    #15         ; EXECUTE OUTPUT
0000397C                          5587mm         
0000397C  3212                    5588mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000397E  E149                    5589mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003980  E049                    5590mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003982  E849                    5591mm         LSR.W   #4, D1      
00003984                          5592mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003984  0C01 0009               5593mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003988  6E00 000A               5594mmm         BGT     ALPHA_417
0000398C  0601 0030               5595mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003990  6000 0006               5596mmm         BRA     DONE_417
00003994  0601 0037               5597mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003998  4E71                    5598mmm DONE_417: NOP
0000399A                          5599mmm         ENDM
0000399A  4E4F                    5600mm         TRAP    #15         ; EXECUTE OUTPUT
0000399C                          5601mm         
0000399C  3212                    5602mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000399E  E149                    5603mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000039A0  E949                    5604mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000039A2  E049                    5605mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039A4  E849                    5606mm         LSR.W   #4, D1      
000039A6                          5607mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039A6  0C01 0009               5608mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039AA  6E00 000A               5609mmm         BGT     ALPHA_418
000039AE  0601 0030               5610mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039B2  6000 0006               5611mmm         BRA     DONE_418
000039B6  0601 0037               5612mmm ALPHA_418: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039BA  4E71                    5613mmm DONE_418: NOP
000039BC                          5614mmm         ENDM
000039BC  4E4F                    5615mm         TRAP    #15         ; EXECUTE OUTPUT       
000039BE                          5616mm         ENDM 
000039BE  361A                    5617m         MOVE.W  (A2)+, D3
000039C0                          5618mm         ADROUT
000039C0  103C 0006               5619mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000039C4  3212                    5620mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039C6  E049                    5621mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039C8  E849                    5622mm         LSR.W   #4, D1      
000039CA                          5623mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039CA  0C01 0009               5624mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039CE  6E00 000A               5625mmm         BGT     ALPHA_420
000039D2  0601 0030               5626mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039D6  6000 0006               5627mmm         BRA     DONE_420
000039DA  0601 0037               5628mmm ALPHA_420: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039DE  4E71                    5629mmm DONE_420: NOP
000039E0                          5630mmm         ENDM
000039E0  4E4F                    5631mm         TRAP    #15         ; EXECUTE OUTPUT
000039E2                          5632mm         
000039E2  3212                    5633mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039E4  E949                    5634mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000039E6  E049                    5635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039E8  E849                    5636mm         LSR.W   #4, D1      
000039EA                          5637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039EA  0C01 0009               5638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039EE  6E00 000A               5639mmm         BGT     ALPHA_421
000039F2  0601 0030               5640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039F6  6000 0006               5641mmm         BRA     DONE_421
000039FA  0601 0037               5642mmm ALPHA_421: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039FE  4E71                    5643mmm DONE_421: NOP
00003A00                          5644mmm         ENDM
00003A00  4E4F                    5645mm         TRAP    #15         ; EXECUTE OUTPUT
00003A02                          5646mm         
00003A02  3212                    5647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A04  E149                    5648mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A06  E049                    5649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A08  E849                    5650mm         LSR.W   #4, D1      
00003A0A                          5651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A0A  0C01 0009               5652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A0E  6E00 000A               5653mmm         BGT     ALPHA_422
00003A12  0601 0030               5654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A16  6000 0006               5655mmm         BRA     DONE_422
00003A1A  0601 0037               5656mmm ALPHA_422: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A1E  4E71                    5657mmm DONE_422: NOP
00003A20                          5658mmm         ENDM
00003A20  4E4F                    5659mm         TRAP    #15         ; EXECUTE OUTPUT
00003A22                          5660mm         
00003A22  3212                    5661mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A24  E149                    5662mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A26  E949                    5663mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003A28  E049                    5664mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A2A  E849                    5665mm         LSR.W   #4, D1      
00003A2C                          5666mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A2C  0C01 0009               5667mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A30  6E00 000A               5668mmm         BGT     ALPHA_423
00003A34  0601 0030               5669mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A38  6000 0006               5670mmm         BRA     DONE_423
00003A3C  0601 0037               5671mmm ALPHA_423: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A40  4E71                    5672mmm DONE_423: NOP
00003A42                          5673mmm         ENDM
00003A42  4E4F                    5674mm         TRAP    #15         ; EXECUTE OUTPUT       
00003A44                          5675mm         ENDM 
00003A44  3605                    5676m         MOVE.W  D5, D3
00003A46                          5677m 
00003A46                          5678m COMPLETE_361:  ; OPCODE HAS BEEN VERIFIED
00003A46                          5679m         ENDM
00003A46                          5680m         printComma
00003A46  43F8 00D4               5681m         LEA     OCOMMA, A1     
00003A4A  103C 000E               5682m         MOVE.B  #14,D0          
00003A4E  4E4F                    5683m         TRAP    #15
00003A50                          5684m         ENDM
00003A50                          5685m         printDnDest     D3
00003A50  3203                    5686m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003A52  E949                    5687m         LSL     #$04, D1
00003A54  E049                    5688m         LSR     #$08, D1
00003A56  EA49                    5689m         LSR     #$05, D1
00003A58  43F8 00CC               5690m         LEA     ODN, A1     
00003A5C  103C 000E               5691m         MOVE.B  #14,D0          
00003A60  4E4F                    5692m         TRAP    #15
00003A62  103C 0003               5693m         MOVE.B  #3,D0          
00003A66  4E4F                    5694m         TRAP    #15
00003A68                          5695m         ENDM
00003A68                          5696  decodeSUBcomp:
00003A68  4E75                    5697          RTS                ; Return from decodeSUBcomp subroutine
00003A6A                          5698  
00003A6A                          5699  
00003A6A                          5700  ; ------------------------------------------------------------
00003A6A                          5701  ; 6. "decodeMULS" subroutine
00003A6A                          5702  ; AUTHOR
00003A6A                          5703  ;
00003A6A                          5704  ; TODO: DESCRIPTION MULS
00003A6A                          5705  ; ------------------------------------------------------------
00003A6A                          5706  decodeMULS:
00003A6A                          5707m         verifyOpcode    pMULS, (A2)
00003A6A  43F8 0150               5708m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003A6E  3612                    5709m         MOVE.W  (A2), D3      ; INPUT VALUE
00003A70  123C 000F               5710m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003A74                          5711m         
00003A74                          5712m LOOP_426: 
00003A74  0C11 0030               5713m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003A78  6700 000E               5714m         BEQ     CHECKFOR0_426
00003A7C  0C11 0031               5715m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003A80  6700 0010               5716m         BEQ     CHECKFOR1_426
00003A84  6000 0012               5717m         BRA     NEXT_426      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003A88                          5718m         
00003A88                          5719m CHECKFOR0_426: 
00003A88  0303                    5720m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003A8A  6600 36B0               5721m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003A8E  6000 0008               5722m         BRA     NEXT_426
00003A92                          5723m 
00003A92                          5724m CHECKFOR1_426:
00003A92  0303                    5725m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003A94  6700 36A6               5726m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003A98                          5727m 
00003A98                          5728m NEXT_426: 
00003A98  B23C 0000               5729m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003A9C  6700 0008               5730m         BEQ     COMPLETE_426  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003AA0  5301                    5731m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003AA2  1819                    5732m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003AA4  60CE                    5733m         BRA     LOOP_426      ; BEGIN LOOP AGAIN
00003AA6                          5734m 
00003AA6                          5735m COMPLETE_426:  ; OPCODE HAS BEEN VERIFIED
00003AA6                          5736m         ENDM
00003AA6  43F8 007C               5737          LEA     oMULS, A1     
00003AAA  103C 000E               5738          MOVE.B  #14,D0          
00003AAE  4E4F                    5739          TRAP    #15
00003AB0  4247                    5740          CLR     D7
00003AB2                          5741m         prepareAdrMode  #$1, (A2)
00003AB2  3C3C 0001               5742m         MOVE.W  #$1, D6      ; INPUT VALUE
00003AB6  3212                    5743m         MOVE.W  (A2), D1
00003AB8  BC3C 0001               5744m         CMP.B   #$01, D6
00003ABC  6700 000C               5745m         BEQ     ADRSOURCE_427    
00003AC0                          5746m ADRDEST_427:
00003AC0  EF49                    5747m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003AC2  E049                    5748m         LSR     #$08, D1
00003AC4  EA49                    5749m         LSR     #$05, D1
00003AC6  6000 000A               5750m         BRA     COMPLETE_427 
00003ACA                          5751m ADRSOURCE_427:                
00003ACA  E149                    5752m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003ACC  E549                    5753m         LSL     #$02, D1
00003ACE  E049                    5754m         LSR     #$08, D1
00003AD0  EA49                    5755m         LSR     #$05, D1
00003AD2                          5756m COMPLETE_427:  ; OPCODE HAS BEEN VERIFIED
00003AD2                          5757m         ENDM        
00003AD2                          5758m         decodeAdrMode   (A2), D1
00003AD2  3612                    5759m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003AD4  3201                    5760m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003AD6                          5761m 
00003AD6  B23C 0001               5762m         CMP.B   #$01, D1
00003ADA  6700 0066               5763m         BEQ     ADRREGDIRECT_428    
00003ADE  B23C 0002               5764m         CMP.B   #$02, D1
00003AE2  6700 00A0               5765m         BEQ     ADRREGINDIRECT_428  
00003AE6  B23C 0003               5766m         CMP.B   #$03, D1
00003AEA  6700 0102               5767m         BEQ     ADRREGPOSTINC_428  
00003AEE  B23C 0004               5768m         CMP.B   #$04, D1
00003AF2  6700 0178               5769m         BEQ     ADRREGPREDEC_428
00003AF6  B23C 0007               5770m         CMP.B   #$07, D1
00003AFA  6700 01EE               5771m         BEQ     ADRABSOLUTE_428    
00003AFE                          5772m         
00003AFE                          5773m DATAREGDIRECT_428: 
00003AFE  BC3C 0001               5774m         CMP.B   #$01, D6
00003B02  6700 001E               5775m         BEQ     DATAREGDIRECTSRC_428   
00003B06                          5776m DATAREGDIRECTDEST_428: 
00003B06                          5777mm         PRINTDNDEST D3 
00003B06  3203                    5778mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003B08  E949                    5779mm         LSL     #$04, D1
00003B0A  E049                    5780mm         LSR     #$08, D1
00003B0C  EA49                    5781mm         LSR     #$05, D1
00003B0E  43F8 00CC               5782mm         LEA     ODN, A1     
00003B12  103C 000E               5783mm         MOVE.B  #14,D0          
00003B16  4E4F                    5784mm         TRAP    #15
00003B18  103C 0003               5785mm         MOVE.B  #3,D0          
00003B1C  4E4F                    5786mm         TRAP    #15
00003B1E                          5787mm         ENDM
00003B1E  6000 057A               5788m         BRA     COMPLETE_428 
00003B22                          5789m DATAREGDIRECTSRC_428: 
00003B22                          5790mm         PRINTDNSRC D3 
00003B22  4281                    5791mm         CLR.L   D1
00003B24  3203                    5792mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B26  E149                    5793mm         LSL     #$08, D1
00003B28  EB49                    5794mm         LSL     #$05, D1
00003B2A  E049                    5795mm         LSR     #$08, D1
00003B2C  EA49                    5796mm         LSR     #$05, D1
00003B2E  43F8 00CC               5797mm         LEA     ODN, A1     
00003B32  103C 000E               5798mm         MOVE.B  #14,D0          
00003B36  4E4F                    5799mm         TRAP    #15
00003B38  103C 0003               5800mm         MOVE.B  #3,D0          
00003B3C  4E4F                    5801mm         TRAP    #15
00003B3E                          5802mm         ENDM
00003B3E  6000 055A               5803m         BRA     COMPLETE_428   
00003B42                          5804m         
00003B42                          5805m ADRREGDIRECT_428: 
00003B42  BC3C 0001               5806m         CMP.B   #$01, D6
00003B46  6700 001E               5807m         BEQ     ADRREGDIRECTSRC_428   
00003B4A                          5808m ADRREGDIRECTDEST_428:
00003B4A                          5809mm         PRINTANDEST D3
00003B4A  3203                    5810mm         MOVE.W  D3, D1
00003B4C  E949                    5811mm         LSL     #$04, D1
00003B4E  E049                    5812mm         LSR     #$08, D1
00003B50  EA49                    5813mm         LSR     #$05, D1
00003B52  43F8 00CE               5814mm         LEA     OAN, A1     
00003B56  103C 000E               5815mm         MOVE.B  #14,D0          
00003B5A  4E4F                    5816mm         TRAP    #15
00003B5C  103C 0003               5817mm         MOVE.B  #3,D0          
00003B60  4E4F                    5818mm         TRAP    #15
00003B62                          5819mm         ENDM
00003B62  6000 0536               5820m         BRA     COMPLETE_428   
00003B66                          5821m ADRREGDIRECTSRC_428:
00003B66                          5822mm         PRINTANSRC D3
00003B66  3203                    5823mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B68  E149                    5824mm         LSL     #$08, D1
00003B6A  EB49                    5825mm         LSL     #$05, D1
00003B6C  E049                    5826mm         LSR     #$08, D1
00003B6E  EA49                    5827mm         LSR     #$05, D1
00003B70  43F8 00CE               5828mm         LEA     OAN, A1     
00003B74  103C 000E               5829mm         MOVE.B  #14,D0          
00003B78  4E4F                    5830mm         TRAP    #15
00003B7A  103C 0003               5831mm         MOVE.B  #3,D0          
00003B7E  4E4F                    5832mm         TRAP    #15
00003B80                          5833mm         ENDM
00003B80  6000 0518               5834m         BRA     COMPLETE_428   
00003B84                          5835m        
00003B84                          5836m ADRREGINDIRECT_428:   
00003B84  BC3C 0001               5837m         CMP.B   #$01, D6
00003B88  6700 0032               5838m         BEQ     ADRREGINDIRECTSRC_428   
00003B8C                          5839m ADRREGINDIRECTDEST_428:
00003B8C                          5840mm         PRINTLB
00003B8C  43F8 00D0               5841mm         LEA     OLB, A1     
00003B90  103C 000E               5842mm         MOVE.B  #14,D0          
00003B94  4E4F                    5843mm         TRAP    #15
00003B96                          5844mm         ENDM
00003B96                          5845mm         PRINTANDEST D3  
00003B96  3203                    5846mm         MOVE.W  D3, D1
00003B98  E949                    5847mm         LSL     #$04, D1
00003B9A  E049                    5848mm         LSR     #$08, D1
00003B9C  EA49                    5849mm         LSR     #$05, D1
00003B9E  43F8 00CE               5850mm         LEA     OAN, A1     
00003BA2  103C 000E               5851mm         MOVE.B  #14,D0          
00003BA6  4E4F                    5852mm         TRAP    #15
00003BA8  103C 0003               5853mm         MOVE.B  #3,D0          
00003BAC  4E4F                    5854mm         TRAP    #15
00003BAE                          5855mm         ENDM
00003BAE                          5856mm         PRINTRB
00003BAE  43F8 00D2               5857mm         LEA     ORB, A1     
00003BB2  103C 000E               5858mm         MOVE.B  #14,D0          
00003BB6  4E4F                    5859mm         TRAP    #15
00003BB8                          5860mm         ENDM
00003BB8  6000 04E0               5861m         BRA     COMPLETE_428     
00003BBC                          5862m ADRREGINDIRECTSRC_428:   
00003BBC                          5863mm         PRINTLB
00003BBC  43F8 00D0               5864mm         LEA     OLB, A1     
00003BC0  103C 000E               5865mm         MOVE.B  #14,D0          
00003BC4  4E4F                    5866mm         TRAP    #15
00003BC6                          5867mm         ENDM
00003BC6                          5868mm         PRINTANSRC D3  
00003BC6  3203                    5869mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BC8  E149                    5870mm         LSL     #$08, D1
00003BCA  EB49                    5871mm         LSL     #$05, D1
00003BCC  E049                    5872mm         LSR     #$08, D1
00003BCE  EA49                    5873mm         LSR     #$05, D1
00003BD0  43F8 00CE               5874mm         LEA     OAN, A1     
00003BD4  103C 000E               5875mm         MOVE.B  #14,D0          
00003BD8  4E4F                    5876mm         TRAP    #15
00003BDA  103C 0003               5877mm         MOVE.B  #3,D0          
00003BDE  4E4F                    5878mm         TRAP    #15
00003BE0                          5879mm         ENDM
00003BE0                          5880mm         PRINTRB
00003BE0  43F8 00D2               5881mm         LEA     ORB, A1     
00003BE4  103C 000E               5882mm         MOVE.B  #14,D0          
00003BE8  4E4F                    5883mm         TRAP    #15
00003BEA                          5884mm         ENDM
00003BEA  6000 04AE               5885m         BRA     COMPLETE_428   
00003BEE                          5886m         
00003BEE                          5887m ADRREGPOSTINC_428:   
00003BEE  BC3C 0001               5888m         CMP.B   #$01, D6
00003BF2  6700 003C               5889m         BEQ     ADRREGPOSTINCSRC_428   
00003BF6                          5890m ADRREGPOSTINCDEST_428: 
00003BF6                          5891mm         PRINTLB
00003BF6  43F8 00D0               5892mm         LEA     OLB, A1     
00003BFA  103C 000E               5893mm         MOVE.B  #14,D0          
00003BFE  4E4F                    5894mm         TRAP    #15
00003C00                          5895mm         ENDM
00003C00                          5896mm         PRINTANDEST D3  
00003C00  3203                    5897mm         MOVE.W  D3, D1
00003C02  E949                    5898mm         LSL     #$04, D1
00003C04  E049                    5899mm         LSR     #$08, D1
00003C06  EA49                    5900mm         LSR     #$05, D1
00003C08  43F8 00CE               5901mm         LEA     OAN, A1     
00003C0C  103C 000E               5902mm         MOVE.B  #14,D0          
00003C10  4E4F                    5903mm         TRAP    #15
00003C12  103C 0003               5904mm         MOVE.B  #3,D0          
00003C16  4E4F                    5905mm         TRAP    #15
00003C18                          5906mm         ENDM
00003C18                          5907mm         PRINTRB
00003C18  43F8 00D2               5908mm         LEA     ORB, A1     
00003C1C  103C 000E               5909mm         MOVE.B  #14,D0          
00003C20  4E4F                    5910mm         TRAP    #15
00003C22                          5911mm         ENDM
00003C22                          5912mm         PRINTPI
00003C22  43F8 00D9               5913mm         LEA     OPSTINC, A1     
00003C26  103C 000E               5914mm         MOVE.B  #14,D0          
00003C2A  4E4F                    5915mm         TRAP    #15
00003C2C                          5916mm         ENDM
00003C2C  6000 046C               5917m         BRA     COMPLETE_428  
00003C30                          5918m ADRREGPOSTINCSRC_428:           
00003C30                          5919mm         PRINTLB
00003C30  43F8 00D0               5920mm         LEA     OLB, A1     
00003C34  103C 000E               5921mm         MOVE.B  #14,D0          
00003C38  4E4F                    5922mm         TRAP    #15
00003C3A                          5923mm         ENDM
00003C3A                          5924mm         PRINTANSRC D3  
00003C3A  3203                    5925mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003C3C  E149                    5926mm         LSL     #$08, D1
00003C3E  EB49                    5927mm         LSL     #$05, D1
00003C40  E049                    5928mm         LSR     #$08, D1
00003C42  EA49                    5929mm         LSR     #$05, D1
00003C44  43F8 00CE               5930mm         LEA     OAN, A1     
00003C48  103C 000E               5931mm         MOVE.B  #14,D0          
00003C4C  4E4F                    5932mm         TRAP    #15
00003C4E  103C 0003               5933mm         MOVE.B  #3,D0          
00003C52  4E4F                    5934mm         TRAP    #15
00003C54                          5935mm         ENDM
00003C54                          5936mm         PRINTRB
00003C54  43F8 00D2               5937mm         LEA     ORB, A1     
00003C58  103C 000E               5938mm         MOVE.B  #14,D0          
00003C5C  4E4F                    5939mm         TRAP    #15
00003C5E                          5940mm         ENDM
00003C5E                          5941mm         PRINTPI
00003C5E  43F8 00D9               5942mm         LEA     OPSTINC, A1     
00003C62  103C 000E               5943mm         MOVE.B  #14,D0          
00003C66  4E4F                    5944mm         TRAP    #15
00003C68                          5945mm         ENDM
00003C68  6000 0430               5946m         BRA     COMPLETE_428  
00003C6C                          5947m ADRREGPREDEC_428: 
00003C6C  BC3C 0001               5948m         CMP.B   #$01, D6
00003C70  6700 003C               5949m         BEQ     ADRREGPREDECSRC_428   
00003C74                          5950m ADRREGPREDECDEST_428:
00003C74                          5951mm         PRINTPD  
00003C74  43F8 00D7               5952mm         LEA     OPREDEC, A1     
00003C78  103C 000E               5953mm         MOVE.B  #14,D0          
00003C7C  4E4F                    5954mm         TRAP    #15
00003C7E                          5955mm         ENDM
00003C7E                          5956mm         PRINTLB
00003C7E  43F8 00D0               5957mm         LEA     OLB, A1     
00003C82  103C 000E               5958mm         MOVE.B  #14,D0          
00003C86  4E4F                    5959mm         TRAP    #15
00003C88                          5960mm         ENDM
00003C88                          5961mm         PRINTANDEST D3  
00003C88  3203                    5962mm         MOVE.W  D3, D1
00003C8A  E949                    5963mm         LSL     #$04, D1
00003C8C  E049                    5964mm         LSR     #$08, D1
00003C8E  EA49                    5965mm         LSR     #$05, D1
00003C90  43F8 00CE               5966mm         LEA     OAN, A1     
00003C94  103C 000E               5967mm         MOVE.B  #14,D0          
00003C98  4E4F                    5968mm         TRAP    #15
00003C9A  103C 0003               5969mm         MOVE.B  #3,D0          
00003C9E  4E4F                    5970mm         TRAP    #15
00003CA0                          5971mm         ENDM
00003CA0                          5972mm         PRINTRB
00003CA0  43F8 00D2               5973mm         LEA     ORB, A1     
00003CA4  103C 000E               5974mm         MOVE.B  #14,D0          
00003CA8  4E4F                    5975mm         TRAP    #15
00003CAA                          5976mm         ENDM
00003CAA  6000 03EE               5977m         BRA     COMPLETE_428   
00003CAE                          5978m ADRREGPREDECSRC_428: 
00003CAE                          5979mm         PRINTPD  
00003CAE  43F8 00D7               5980mm         LEA     OPREDEC, A1     
00003CB2  103C 000E               5981mm         MOVE.B  #14,D0          
00003CB6  4E4F                    5982mm         TRAP    #15
00003CB8                          5983mm         ENDM
00003CB8                          5984mm         PRINTLB
00003CB8  43F8 00D0               5985mm         LEA     OLB, A1     
00003CBC  103C 000E               5986mm         MOVE.B  #14,D0          
00003CC0  4E4F                    5987mm         TRAP    #15
00003CC2                          5988mm         ENDM
00003CC2                          5989mm         PRINTANSRC D3  
00003CC2  3203                    5990mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003CC4  E149                    5991mm         LSL     #$08, D1
00003CC6  EB49                    5992mm         LSL     #$05, D1
00003CC8  E049                    5993mm         LSR     #$08, D1
00003CCA  EA49                    5994mm         LSR     #$05, D1
00003CCC  43F8 00CE               5995mm         LEA     OAN, A1     
00003CD0  103C 000E               5996mm         MOVE.B  #14,D0          
00003CD4  4E4F                    5997mm         TRAP    #15
00003CD6  103C 0003               5998mm         MOVE.B  #3,D0          
00003CDA  4E4F                    5999mm         TRAP    #15
00003CDC                          6000mm         ENDM
00003CDC                          6001mm         PRINTRB
00003CDC  43F8 00D2               6002mm         LEA     ORB, A1     
00003CE0  103C 000E               6003mm         MOVE.B  #14,D0          
00003CE4  4E4F                    6004mm         TRAP    #15
00003CE6                          6005mm         ENDM
00003CE6  6000 03B2               6006m         BRA     COMPLETE_428
00003CEA                          6007m        
00003CEA                          6008m ADRABSOLUTE_428:
00003CEA  BC3C 0001               6009m         CMP.B   #$01, D6
00003CEE  6600 0018               6010m         BNE     ADRABSOLUTEDST_428 
00003CF2                          6011m         
00003CF2  3A03                    6012m         MOVE.W  D3, D5
00003CF4  0803 0002               6013m         BTST    #2, D3
00003CF8  6600 0024               6014m         BNE     ADRIMMEDIATE_428
00003CFC  0803 0000               6015m         BTST    #0, D3
00003D00  6600 0280               6016m         BNE     ADRABSOLUTEL_428
00003D04  6000 01E6               6017m         BRA     ADRABSOLUTEW_428
00003D08                          6018m ADRABSOLUTEDST_428:
00003D08  3A03                    6019m         MOVE.W  D3, D5
00003D0A  0803 000B               6020m         BTST    #$B, D3
00003D0E  6600 000E               6021m         BNE     ADRIMMEDIATE_428
00003D12  0803 0009               6022m         BTST    #$09, D3
00003D16  6600 026A               6023m         BNE     ADRABSOLUTEL_428
00003D1A  6000 01D0               6024m         BRA     ADRABSOLUTEW_428
00003D1E                          6025m ADRIMMEDIATE_428:
00003D1E  BE3C 0001               6026m         CMP.B   #1, D7
00003D22  6700 00A2               6027m         BEQ     ADRIMMEDIATEL_428
00003D26                          6028m ADRIMMEDIATEW_428:
00003D26  361A                    6029m         MOVE.W  (A2)+, D3
00003D28                          6030mm         PRINTHASH
00003D28  103C 0006               6031mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D2C  323C 0023               6032mm         MOVE.W  #35, D1     ; AN = SIGN
00003D30  4E4F                    6033mm         TRAP    #15         ; OUTPUT = SIGN
00003D32                          6034mm         ENDM
00003D32                          6035mm         PRINTSIGN
00003D32  103C 0006               6036mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D36  323C 0024               6037mm         MOVE.W  #36, D1     ; AN = SIGN
00003D3A  4E4F                    6038mm         TRAP    #15         ; OUTPUT = SIGN
00003D3C                          6039mm         ENDM
00003D3C                          6040mm         ADROUT
00003D3C  103C 0006               6041mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D40  3212                    6042mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D42  E049                    6043mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D44  E849                    6044mm         LSR.W   #4, D1      
00003D46                          6045mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D46  0C01 0009               6046mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D4A  6E00 000A               6047mmm         BGT     ALPHA_458
00003D4E  0601 0030               6048mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D52  6000 0006               6049mmm         BRA     DONE_458
00003D56  0601 0037               6050mmm ALPHA_458: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D5A  4E71                    6051mmm DONE_458: NOP
00003D5C                          6052mmm         ENDM
00003D5C  4E4F                    6053mm         TRAP    #15         ; EXECUTE OUTPUT
00003D5E                          6054mm         
00003D5E  3212                    6055mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D60  E949                    6056mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D62  E049                    6057mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D64  E849                    6058mm         LSR.W   #4, D1      
00003D66                          6059mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D66  0C01 0009               6060mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D6A  6E00 000A               6061mmm         BGT     ALPHA_459
00003D6E  0601 0030               6062mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D72  6000 0006               6063mmm         BRA     DONE_459
00003D76  0601 0037               6064mmm ALPHA_459: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D7A  4E71                    6065mmm DONE_459: NOP
00003D7C                          6066mmm         ENDM
00003D7C  4E4F                    6067mm         TRAP    #15         ; EXECUTE OUTPUT
00003D7E                          6068mm         
00003D7E  3212                    6069mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D80  E149                    6070mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D82  E049                    6071mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D84  E849                    6072mm         LSR.W   #4, D1      
00003D86                          6073mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D86  0C01 0009               6074mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D8A  6E00 000A               6075mmm         BGT     ALPHA_460
00003D8E  0601 0030               6076mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D92  6000 0006               6077mmm         BRA     DONE_460
00003D96  0601 0037               6078mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D9A  4E71                    6079mmm DONE_460: NOP
00003D9C                          6080mmm         ENDM
00003D9C  4E4F                    6081mm         TRAP    #15         ; EXECUTE OUTPUT
00003D9E                          6082mm         
00003D9E  3212                    6083mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DA0  E149                    6084mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DA2  E949                    6085mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DA4  E049                    6086mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DA6  E849                    6087mm         LSR.W   #4, D1      
00003DA8                          6088mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DA8  0C01 0009               6089mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DAC  6E00 000A               6090mmm         BGT     ALPHA_461
00003DB0  0601 0030               6091mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DB4  6000 0006               6092mmm         BRA     DONE_461
00003DB8  0601 0037               6093mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DBC  4E71                    6094mmm DONE_461: NOP
00003DBE                          6095mmm         ENDM
00003DBE  4E4F                    6096mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DC0                          6097mm         ENDM 
00003DC0  3605                    6098m         MOVE.W  D5, D3
00003DC2  6000 02D6               6099m         BRA     COMPLETE_428
00003DC6                          6100m ADRIMMEDIATEL_428:
00003DC6  361A                    6101m         MOVE.W  (A2)+, D3
00003DC8                          6102mm         PRINTHASH
00003DC8  103C 0006               6103mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DCC  323C 0023               6104mm         MOVE.W  #35, D1     ; AN = SIGN
00003DD0  4E4F                    6105mm         TRAP    #15         ; OUTPUT = SIGN
00003DD2                          6106mm         ENDM
00003DD2                          6107mm         PRINTSIGN
00003DD2  103C 0006               6108mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DD6  323C 0024               6109mm         MOVE.W  #36, D1     ; AN = SIGN
00003DDA  4E4F                    6110mm         TRAP    #15         ; OUTPUT = SIGN
00003DDC                          6111mm         ENDM
00003DDC                          6112mm         ADROUT 
00003DDC  103C 0006               6113mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DE0  3212                    6114mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DE2  E049                    6115mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DE4  E849                    6116mm         LSR.W   #4, D1      
00003DE6                          6117mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DE6  0C01 0009               6118mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DEA  6E00 000A               6119mmm         BGT     ALPHA_465
00003DEE  0601 0030               6120mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DF2  6000 0006               6121mmm         BRA     DONE_465
00003DF6  0601 0037               6122mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DFA  4E71                    6123mmm DONE_465: NOP
00003DFC                          6124mmm         ENDM
00003DFC  4E4F                    6125mm         TRAP    #15         ; EXECUTE OUTPUT
00003DFE                          6126mm         
00003DFE  3212                    6127mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E00  E949                    6128mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E02  E049                    6129mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E04  E849                    6130mm         LSR.W   #4, D1      
00003E06                          6131mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E06  0C01 0009               6132mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E0A  6E00 000A               6133mmm         BGT     ALPHA_466
00003E0E  0601 0030               6134mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E12  6000 0006               6135mmm         BRA     DONE_466
00003E16  0601 0037               6136mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E1A  4E71                    6137mmm DONE_466: NOP
00003E1C                          6138mmm         ENDM
00003E1C  4E4F                    6139mm         TRAP    #15         ; EXECUTE OUTPUT
00003E1E                          6140mm         
00003E1E  3212                    6141mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E20  E149                    6142mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E22  E049                    6143mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E24  E849                    6144mm         LSR.W   #4, D1      
00003E26                          6145mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E26  0C01 0009               6146mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E2A  6E00 000A               6147mmm         BGT     ALPHA_467
00003E2E  0601 0030               6148mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E32  6000 0006               6149mmm         BRA     DONE_467
00003E36  0601 0037               6150mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E3A  4E71                    6151mmm DONE_467: NOP
00003E3C                          6152mmm         ENDM
00003E3C  4E4F                    6153mm         TRAP    #15         ; EXECUTE OUTPUT
00003E3E                          6154mm         
00003E3E  3212                    6155mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E40  E149                    6156mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E42  E949                    6157mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E44  E049                    6158mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E46  E849                    6159mm         LSR.W   #4, D1      
00003E48                          6160mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E48  0C01 0009               6161mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E4C  6E00 000A               6162mmm         BGT     ALPHA_468
00003E50  0601 0030               6163mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E54  6000 0006               6164mmm         BRA     DONE_468
00003E58  0601 0037               6165mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E5C  4E71                    6166mmm DONE_468: NOP
00003E5E                          6167mmm         ENDM
00003E5E  4E4F                    6168mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E60                          6169mm         ENDM 
00003E60  361A                    6170m         MOVE.W  (A2)+, D3
00003E62                          6171mm         ADROUT
00003E62  103C 0006               6172mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E66  3212                    6173mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E68  E049                    6174mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E6A  E849                    6175mm         LSR.W   #4, D1      
00003E6C                          6176mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E6C  0C01 0009               6177mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E70  6E00 000A               6178mmm         BGT     ALPHA_470
00003E74  0601 0030               6179mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E78  6000 0006               6180mmm         BRA     DONE_470
00003E7C  0601 0037               6181mmm ALPHA_470: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E80  4E71                    6182mmm DONE_470: NOP
00003E82                          6183mmm         ENDM
00003E82  4E4F                    6184mm         TRAP    #15         ; EXECUTE OUTPUT
00003E84                          6185mm         
00003E84  3212                    6186mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E86  E949                    6187mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E88  E049                    6188mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E8A  E849                    6189mm         LSR.W   #4, D1      
00003E8C                          6190mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E8C  0C01 0009               6191mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E90  6E00 000A               6192mmm         BGT     ALPHA_471
00003E94  0601 0030               6193mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E98  6000 0006               6194mmm         BRA     DONE_471
00003E9C  0601 0037               6195mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EA0  4E71                    6196mmm DONE_471: NOP
00003EA2                          6197mmm         ENDM
00003EA2  4E4F                    6198mm         TRAP    #15         ; EXECUTE OUTPUT
00003EA4                          6199mm         
00003EA4  3212                    6200mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EA6  E149                    6201mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EA8  E049                    6202mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EAA  E849                    6203mm         LSR.W   #4, D1      
00003EAC                          6204mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EAC  0C01 0009               6205mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EB0  6E00 000A               6206mmm         BGT     ALPHA_472
00003EB4  0601 0030               6207mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EB8  6000 0006               6208mmm         BRA     DONE_472
00003EBC  0601 0037               6209mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EC0  4E71                    6210mmm DONE_472: NOP
00003EC2                          6211mmm         ENDM
00003EC2  4E4F                    6212mm         TRAP    #15         ; EXECUTE OUTPUT
00003EC4                          6213mm         
00003EC4  3212                    6214mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EC6  E149                    6215mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EC8  E949                    6216mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003ECA  E049                    6217mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ECC  E849                    6218mm         LSR.W   #4, D1      
00003ECE                          6219mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003ECE  0C01 0009               6220mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003ED2  6E00 000A               6221mmm         BGT     ALPHA_473
00003ED6  0601 0030               6222mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EDA  6000 0006               6223mmm         BRA     DONE_473
00003EDE  0601 0037               6224mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EE2  4E71                    6225mmm DONE_473: NOP
00003EE4                          6226mmm         ENDM
00003EE4  4E4F                    6227mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EE6                          6228mm         ENDM 
00003EE6  3605                    6229m         MOVE.W  D5, D3
00003EE8  6000 01B0               6230m         BRA     COMPLETE_428 
00003EEC                          6231m ADRABSOLUTEW_428:     
00003EEC  361A                    6232m         MOVE.W  (A2)+, D3
00003EEE                          6233mm         PRINTSIGN
00003EEE  103C 0006               6234mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003EF2  323C 0024               6235mm         MOVE.W  #36, D1     ; AN = SIGN
00003EF6  4E4F                    6236mm         TRAP    #15         ; OUTPUT = SIGN
00003EF8                          6237mm         ENDM
00003EF8                          6238mm         ADROUT
00003EF8  103C 0006               6239mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003EFC  3212                    6240mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EFE  E049                    6241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F00  E849                    6242mm         LSR.W   #4, D1      
00003F02                          6243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F02  0C01 0009               6244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F06  6E00 000A               6245mmm         BGT     ALPHA_476
00003F0A  0601 0030               6246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F0E  6000 0006               6247mmm         BRA     DONE_476
00003F12  0601 0037               6248mmm ALPHA_476: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F16  4E71                    6249mmm DONE_476: NOP
00003F18                          6250mmm         ENDM
00003F18  4E4F                    6251mm         TRAP    #15         ; EXECUTE OUTPUT
00003F1A                          6252mm         
00003F1A  3212                    6253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F1C  E949                    6254mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F1E  E049                    6255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F20  E849                    6256mm         LSR.W   #4, D1      
00003F22                          6257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F22  0C01 0009               6258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F26  6E00 000A               6259mmm         BGT     ALPHA_477
00003F2A  0601 0030               6260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F2E  6000 0006               6261mmm         BRA     DONE_477
00003F32  0601 0037               6262mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F36  4E71                    6263mmm DONE_477: NOP
00003F38                          6264mmm         ENDM
00003F38  4E4F                    6265mm         TRAP    #15         ; EXECUTE OUTPUT
00003F3A                          6266mm         
00003F3A  3212                    6267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F3C  E149                    6268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F3E  E049                    6269mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F40  E849                    6270mm         LSR.W   #4, D1      
00003F42                          6271mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F42  0C01 0009               6272mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F46  6E00 000A               6273mmm         BGT     ALPHA_478
00003F4A  0601 0030               6274mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F4E  6000 0006               6275mmm         BRA     DONE_478
00003F52  0601 0037               6276mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F56  4E71                    6277mmm DONE_478: NOP
00003F58                          6278mmm         ENDM
00003F58  4E4F                    6279mm         TRAP    #15         ; EXECUTE OUTPUT
00003F5A                          6280mm         
00003F5A  3212                    6281mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F5C  E149                    6282mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F5E  E949                    6283mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F60  E049                    6284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F62  E849                    6285mm         LSR.W   #4, D1      
00003F64                          6286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F64  0C01 0009               6287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F68  6E00 000A               6288mmm         BGT     ALPHA_479
00003F6C  0601 0030               6289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F70  6000 0006               6290mmm         BRA     DONE_479
00003F74  0601 0037               6291mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F78  4E71                    6292mmm DONE_479: NOP
00003F7A                          6293mmm         ENDM
00003F7A  4E4F                    6294mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F7C                          6295mm         ENDM 
00003F7C  3605                    6296m         MOVE.W  D5, D3
00003F7E  6000 011A               6297m         BRA     COMPLETE_428  
00003F82                          6298m ADRABSOLUTEL_428:  
00003F82  361A                    6299m         MOVE.W  (A2)+, D3
00003F84                          6300mm         PRINTSIGN
00003F84  103C 0006               6301mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F88  323C 0024               6302mm         MOVE.W  #36, D1     ; AN = SIGN
00003F8C  4E4F                    6303mm         TRAP    #15         ; OUTPUT = SIGN
00003F8E                          6304mm         ENDM
00003F8E                          6305mm         ADROUT 
00003F8E  103C 0006               6306mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F92  3212                    6307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F94  E049                    6308mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F96  E849                    6309mm         LSR.W   #4, D1      
00003F98                          6310mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F98  0C01 0009               6311mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F9C  6E00 000A               6312mmm         BGT     ALPHA_482
00003FA0  0601 0030               6313mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FA4  6000 0006               6314mmm         BRA     DONE_482
00003FA8  0601 0037               6315mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FAC  4E71                    6316mmm DONE_482: NOP
00003FAE                          6317mmm         ENDM
00003FAE  4E4F                    6318mm         TRAP    #15         ; EXECUTE OUTPUT
00003FB0                          6319mm         
00003FB0  3212                    6320mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FB2  E949                    6321mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003FB4  E049                    6322mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FB6  E849                    6323mm         LSR.W   #4, D1      
00003FB8                          6324mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FB8  0C01 0009               6325mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FBC  6E00 000A               6326mmm         BGT     ALPHA_483
00003FC0  0601 0030               6327mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FC4  6000 0006               6328mmm         BRA     DONE_483
00003FC8  0601 0037               6329mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FCC  4E71                    6330mmm DONE_483: NOP
00003FCE                          6331mmm         ENDM
00003FCE  4E4F                    6332mm         TRAP    #15         ; EXECUTE OUTPUT
00003FD0                          6333mm         
00003FD0  3212                    6334mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FD2  E149                    6335mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FD4  E049                    6336mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FD6  E849                    6337mm         LSR.W   #4, D1      
00003FD8                          6338mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FD8  0C01 0009               6339mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FDC  6E00 000A               6340mmm         BGT     ALPHA_484
00003FE0  0601 0030               6341mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FE4  6000 0006               6342mmm         BRA     DONE_484
00003FE8  0601 0037               6343mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FEC  4E71                    6344mmm DONE_484: NOP
00003FEE                          6345mmm         ENDM
00003FEE  4E4F                    6346mm         TRAP    #15         ; EXECUTE OUTPUT
00003FF0                          6347mm         
00003FF0  3212                    6348mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FF2  E149                    6349mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FF4  E949                    6350mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003FF6  E049                    6351mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FF8  E849                    6352mm         LSR.W   #4, D1      
00003FFA                          6353mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FFA  0C01 0009               6354mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FFE  6E00 000A               6355mmm         BGT     ALPHA_485
00004002  0601 0030               6356mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004006  6000 0006               6357mmm         BRA     DONE_485
0000400A  0601 0037               6358mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000400E  4E71                    6359mmm DONE_485: NOP
00004010                          6360mmm         ENDM
00004010  4E4F                    6361mm         TRAP    #15         ; EXECUTE OUTPUT       
00004012                          6362mm         ENDM 
00004012  361A                    6363m         MOVE.W  (A2)+, D3
00004014                          6364mm         ADROUT
00004014  103C 0006               6365mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004018  3212                    6366mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000401A  E049                    6367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000401C  E849                    6368mm         LSR.W   #4, D1      
0000401E                          6369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000401E  0C01 0009               6370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004022  6E00 000A               6371mmm         BGT     ALPHA_487
00004026  0601 0030               6372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000402A  6000 0006               6373mmm         BRA     DONE_487
0000402E  0601 0037               6374mmm ALPHA_487: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004032  4E71                    6375mmm DONE_487: NOP
00004034                          6376mmm         ENDM
00004034  4E4F                    6377mm         TRAP    #15         ; EXECUTE OUTPUT
00004036                          6378mm         
00004036  3212                    6379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004038  E949                    6380mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000403A  E049                    6381mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000403C  E849                    6382mm         LSR.W   #4, D1      
0000403E                          6383mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000403E  0C01 0009               6384mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004042  6E00 000A               6385mmm         BGT     ALPHA_488
00004046  0601 0030               6386mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000404A  6000 0006               6387mmm         BRA     DONE_488
0000404E  0601 0037               6388mmm ALPHA_488: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004052  4E71                    6389mmm DONE_488: NOP
00004054                          6390mmm         ENDM
00004054  4E4F                    6391mm         TRAP    #15         ; EXECUTE OUTPUT
00004056                          6392mm         
00004056  3212                    6393mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004058  E149                    6394mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000405A  E049                    6395mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000405C  E849                    6396mm         LSR.W   #4, D1      
0000405E                          6397mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000405E  0C01 0009               6398mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004062  6E00 000A               6399mmm         BGT     ALPHA_489
00004066  0601 0030               6400mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000406A  6000 0006               6401mmm         BRA     DONE_489
0000406E  0601 0037               6402mmm ALPHA_489: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004072  4E71                    6403mmm DONE_489: NOP
00004074                          6404mmm         ENDM
00004074  4E4F                    6405mm         TRAP    #15         ; EXECUTE OUTPUT
00004076                          6406mm         
00004076  3212                    6407mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004078  E149                    6408mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000407A  E949                    6409mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000407C  E049                    6410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000407E  E849                    6411mm         LSR.W   #4, D1      
00004080                          6412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004080  0C01 0009               6413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004084  6E00 000A               6414mmm         BGT     ALPHA_490
00004088  0601 0030               6415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000408C  6000 0006               6416mmm         BRA     DONE_490
00004090  0601 0037               6417mmm ALPHA_490: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004094  4E71                    6418mmm DONE_490: NOP
00004096                          6419mmm         ENDM
00004096  4E4F                    6420mm         TRAP    #15         ; EXECUTE OUTPUT       
00004098                          6421mm         ENDM 
00004098  3605                    6422m         MOVE.W  D5, D3
0000409A                          6423m 
0000409A                          6424m COMPLETE_428:  ; OPCODE HAS BEEN VERIFIED
0000409A                          6425m         ENDM
0000409A                          6426m         printComma
0000409A  43F8 00D4               6427m         LEA     OCOMMA, A1     
0000409E  103C 000E               6428m         MOVE.B  #14,D0          
000040A2  4E4F                    6429m         TRAP    #15
000040A4                          6430m         ENDM
000040A4                          6431m         printDnDest     D3
000040A4  3203                    6432m         MOVE.W  D3, D1      ; BITS 9 TO 11
000040A6  E949                    6433m         LSL     #$04, D1
000040A8  E049                    6434m         LSR     #$08, D1
000040AA  EA49                    6435m         LSR     #$05, D1
000040AC  43F8 00CC               6436m         LEA     ODN, A1     
000040B0  103C 000E               6437m         MOVE.B  #14,D0          
000040B4  4E4F                    6438m         TRAP    #15
000040B6  103C 0003               6439m         MOVE.B  #3,D0          
000040BA  4E4F                    6440m         TRAP    #15
000040BC                          6441m         ENDM
000040BC  4E75                    6442          RTS                 ; Return from decodeMULS subroutine
000040BE                          6443          
000040BE                          6444  ; ------------------------------------------------------------
000040BE                          6445  ; 7. "decodeDIVU" subroutine
000040BE                          6446  ; AUTHOR
000040BE                          6447  ;
000040BE                          6448  ; TODO: DESCRIPTION DIVU
000040BE                          6449  ; ------------------------------------------------------------
000040BE                          6450  decodeDIVU:
000040BE                          6451m         verifyOpcode    pDIVU, (A2)
000040BE  43F8 0161               6452m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
000040C2  3612                    6453m         MOVE.W  (A2), D3      ; INPUT VALUE
000040C4  123C 000F               6454m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000040C8                          6455m         
000040C8                          6456m LOOP_493: 
000040C8  0C11 0030               6457m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000040CC  6700 000E               6458m         BEQ     CHECKFOR0_493
000040D0  0C11 0031               6459m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000040D4  6700 0010               6460m         BEQ     CHECKFOR1_493
000040D8  6000 0012               6461m         BRA     NEXT_493      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000040DC                          6462m         
000040DC                          6463m CHECKFOR0_493: 
000040DC  0303                    6464m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000040DE  6600 305C               6465m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000040E2  6000 0008               6466m         BRA     NEXT_493
000040E6                          6467m 
000040E6                          6468m CHECKFOR1_493:
000040E6  0303                    6469m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000040E8  6700 3052               6470m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000040EC                          6471m 
000040EC                          6472m NEXT_493: 
000040EC  B23C 0000               6473m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000040F0  6700 0008               6474m         BEQ     COMPLETE_493  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000040F4  5301                    6475m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000040F6  1819                    6476m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000040F8  60CE                    6477m         BRA     LOOP_493      ; BEGIN LOOP AGAIN
000040FA                          6478m 
000040FA                          6479m COMPLETE_493:  ; OPCODE HAS BEEN VERIFIED
000040FA                          6480m         ENDM
000040FA  43F8 0084               6481          LEA     oDIVU, A1     
000040FE  103C 000E               6482          MOVE.B  #14,D0          
00004102  4E4F                    6483          TRAP    #15
00004104  4247                    6484          CLR     D7
00004106                          6485m         prepareAdrMode  #$1, (A2)
00004106  3C3C 0001               6486m         MOVE.W  #$1, D6      ; INPUT VALUE
0000410A  3212                    6487m         MOVE.W  (A2), D1
0000410C  BC3C 0001               6488m         CMP.B   #$01, D6
00004110  6700 000C               6489m         BEQ     ADRSOURCE_494    
00004114                          6490m ADRDEST_494:
00004114  EF49                    6491m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004116  E049                    6492m         LSR     #$08, D1
00004118  EA49                    6493m         LSR     #$05, D1
0000411A  6000 000A               6494m         BRA     COMPLETE_494 
0000411E                          6495m ADRSOURCE_494:                
0000411E  E149                    6496m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004120  E549                    6497m         LSL     #$02, D1
00004122  E049                    6498m         LSR     #$08, D1
00004124  EA49                    6499m         LSR     #$05, D1
00004126                          6500m COMPLETE_494:  ; OPCODE HAS BEEN VERIFIED
00004126                          6501m         ENDM        
00004126                          6502m         decodeAdrMode   (A2), D1
00004126  3612                    6503m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004128  3201                    6504m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000412A                          6505m 
0000412A  B23C 0001               6506m         CMP.B   #$01, D1
0000412E  6700 0066               6507m         BEQ     ADRREGDIRECT_495    
00004132  B23C 0002               6508m         CMP.B   #$02, D1
00004136  6700 00A0               6509m         BEQ     ADRREGINDIRECT_495  
0000413A  B23C 0003               6510m         CMP.B   #$03, D1
0000413E  6700 0102               6511m         BEQ     ADRREGPOSTINC_495  
00004142  B23C 0004               6512m         CMP.B   #$04, D1
00004146  6700 0178               6513m         BEQ     ADRREGPREDEC_495
0000414A  B23C 0007               6514m         CMP.B   #$07, D1
0000414E  6700 01EE               6515m         BEQ     ADRABSOLUTE_495    
00004152                          6516m         
00004152                          6517m DATAREGDIRECT_495: 
00004152  BC3C 0001               6518m         CMP.B   #$01, D6
00004156  6700 001E               6519m         BEQ     DATAREGDIRECTSRC_495   
0000415A                          6520m DATAREGDIRECTDEST_495: 
0000415A                          6521mm         PRINTDNDEST D3 
0000415A  3203                    6522mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000415C  E949                    6523mm         LSL     #$04, D1
0000415E  E049                    6524mm         LSR     #$08, D1
00004160  EA49                    6525mm         LSR     #$05, D1
00004162  43F8 00CC               6526mm         LEA     ODN, A1     
00004166  103C 000E               6527mm         MOVE.B  #14,D0          
0000416A  4E4F                    6528mm         TRAP    #15
0000416C  103C 0003               6529mm         MOVE.B  #3,D0          
00004170  4E4F                    6530mm         TRAP    #15
00004172                          6531mm         ENDM
00004172  6000 057A               6532m         BRA     COMPLETE_495 
00004176                          6533m DATAREGDIRECTSRC_495: 
00004176                          6534mm         PRINTDNSRC D3 
00004176  4281                    6535mm         CLR.L   D1
00004178  3203                    6536mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000417A  E149                    6537mm         LSL     #$08, D1
0000417C  EB49                    6538mm         LSL     #$05, D1
0000417E  E049                    6539mm         LSR     #$08, D1
00004180  EA49                    6540mm         LSR     #$05, D1
00004182  43F8 00CC               6541mm         LEA     ODN, A1     
00004186  103C 000E               6542mm         MOVE.B  #14,D0          
0000418A  4E4F                    6543mm         TRAP    #15
0000418C  103C 0003               6544mm         MOVE.B  #3,D0          
00004190  4E4F                    6545mm         TRAP    #15
00004192                          6546mm         ENDM
00004192  6000 055A               6547m         BRA     COMPLETE_495   
00004196                          6548m         
00004196                          6549m ADRREGDIRECT_495: 
00004196  BC3C 0001               6550m         CMP.B   #$01, D6
0000419A  6700 001E               6551m         BEQ     ADRREGDIRECTSRC_495   
0000419E                          6552m ADRREGDIRECTDEST_495:
0000419E                          6553mm         PRINTANDEST D3
0000419E  3203                    6554mm         MOVE.W  D3, D1
000041A0  E949                    6555mm         LSL     #$04, D1
000041A2  E049                    6556mm         LSR     #$08, D1
000041A4  EA49                    6557mm         LSR     #$05, D1
000041A6  43F8 00CE               6558mm         LEA     OAN, A1     
000041AA  103C 000E               6559mm         MOVE.B  #14,D0          
000041AE  4E4F                    6560mm         TRAP    #15
000041B0  103C 0003               6561mm         MOVE.B  #3,D0          
000041B4  4E4F                    6562mm         TRAP    #15
000041B6                          6563mm         ENDM
000041B6  6000 0536               6564m         BRA     COMPLETE_495   
000041BA                          6565m ADRREGDIRECTSRC_495:
000041BA                          6566mm         PRINTANSRC D3
000041BA  3203                    6567mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041BC  E149                    6568mm         LSL     #$08, D1
000041BE  EB49                    6569mm         LSL     #$05, D1
000041C0  E049                    6570mm         LSR     #$08, D1
000041C2  EA49                    6571mm         LSR     #$05, D1
000041C4  43F8 00CE               6572mm         LEA     OAN, A1     
000041C8  103C 000E               6573mm         MOVE.B  #14,D0          
000041CC  4E4F                    6574mm         TRAP    #15
000041CE  103C 0003               6575mm         MOVE.B  #3,D0          
000041D2  4E4F                    6576mm         TRAP    #15
000041D4                          6577mm         ENDM
000041D4  6000 0518               6578m         BRA     COMPLETE_495   
000041D8                          6579m        
000041D8                          6580m ADRREGINDIRECT_495:   
000041D8  BC3C 0001               6581m         CMP.B   #$01, D6
000041DC  6700 0032               6582m         BEQ     ADRREGINDIRECTSRC_495   
000041E0                          6583m ADRREGINDIRECTDEST_495:
000041E0                          6584mm         PRINTLB
000041E0  43F8 00D0               6585mm         LEA     OLB, A1     
000041E4  103C 000E               6586mm         MOVE.B  #14,D0          
000041E8  4E4F                    6587mm         TRAP    #15
000041EA                          6588mm         ENDM
000041EA                          6589mm         PRINTANDEST D3  
000041EA  3203                    6590mm         MOVE.W  D3, D1
000041EC  E949                    6591mm         LSL     #$04, D1
000041EE  E049                    6592mm         LSR     #$08, D1
000041F0  EA49                    6593mm         LSR     #$05, D1
000041F2  43F8 00CE               6594mm         LEA     OAN, A1     
000041F6  103C 000E               6595mm         MOVE.B  #14,D0          
000041FA  4E4F                    6596mm         TRAP    #15
000041FC  103C 0003               6597mm         MOVE.B  #3,D0          
00004200  4E4F                    6598mm         TRAP    #15
00004202                          6599mm         ENDM
00004202                          6600mm         PRINTRB
00004202  43F8 00D2               6601mm         LEA     ORB, A1     
00004206  103C 000E               6602mm         MOVE.B  #14,D0          
0000420A  4E4F                    6603mm         TRAP    #15
0000420C                          6604mm         ENDM
0000420C  6000 04E0               6605m         BRA     COMPLETE_495     
00004210                          6606m ADRREGINDIRECTSRC_495:   
00004210                          6607mm         PRINTLB
00004210  43F8 00D0               6608mm         LEA     OLB, A1     
00004214  103C 000E               6609mm         MOVE.B  #14,D0          
00004218  4E4F                    6610mm         TRAP    #15
0000421A                          6611mm         ENDM
0000421A                          6612mm         PRINTANSRC D3  
0000421A  3203                    6613mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000421C  E149                    6614mm         LSL     #$08, D1
0000421E  EB49                    6615mm         LSL     #$05, D1
00004220  E049                    6616mm         LSR     #$08, D1
00004222  EA49                    6617mm         LSR     #$05, D1
00004224  43F8 00CE               6618mm         LEA     OAN, A1     
00004228  103C 000E               6619mm         MOVE.B  #14,D0          
0000422C  4E4F                    6620mm         TRAP    #15
0000422E  103C 0003               6621mm         MOVE.B  #3,D0          
00004232  4E4F                    6622mm         TRAP    #15
00004234                          6623mm         ENDM
00004234                          6624mm         PRINTRB
00004234  43F8 00D2               6625mm         LEA     ORB, A1     
00004238  103C 000E               6626mm         MOVE.B  #14,D0          
0000423C  4E4F                    6627mm         TRAP    #15
0000423E                          6628mm         ENDM
0000423E  6000 04AE               6629m         BRA     COMPLETE_495   
00004242                          6630m         
00004242                          6631m ADRREGPOSTINC_495:   
00004242  BC3C 0001               6632m         CMP.B   #$01, D6
00004246  6700 003C               6633m         BEQ     ADRREGPOSTINCSRC_495   
0000424A                          6634m ADRREGPOSTINCDEST_495: 
0000424A                          6635mm         PRINTLB
0000424A  43F8 00D0               6636mm         LEA     OLB, A1     
0000424E  103C 000E               6637mm         MOVE.B  #14,D0          
00004252  4E4F                    6638mm         TRAP    #15
00004254                          6639mm         ENDM
00004254                          6640mm         PRINTANDEST D3  
00004254  3203                    6641mm         MOVE.W  D3, D1
00004256  E949                    6642mm         LSL     #$04, D1
00004258  E049                    6643mm         LSR     #$08, D1
0000425A  EA49                    6644mm         LSR     #$05, D1
0000425C  43F8 00CE               6645mm         LEA     OAN, A1     
00004260  103C 000E               6646mm         MOVE.B  #14,D0          
00004264  4E4F                    6647mm         TRAP    #15
00004266  103C 0003               6648mm         MOVE.B  #3,D0          
0000426A  4E4F                    6649mm         TRAP    #15
0000426C                          6650mm         ENDM
0000426C                          6651mm         PRINTRB
0000426C  43F8 00D2               6652mm         LEA     ORB, A1     
00004270  103C 000E               6653mm         MOVE.B  #14,D0          
00004274  4E4F                    6654mm         TRAP    #15
00004276                          6655mm         ENDM
00004276                          6656mm         PRINTPI
00004276  43F8 00D9               6657mm         LEA     OPSTINC, A1     
0000427A  103C 000E               6658mm         MOVE.B  #14,D0          
0000427E  4E4F                    6659mm         TRAP    #15
00004280                          6660mm         ENDM
00004280  6000 046C               6661m         BRA     COMPLETE_495  
00004284                          6662m ADRREGPOSTINCSRC_495:           
00004284                          6663mm         PRINTLB
00004284  43F8 00D0               6664mm         LEA     OLB, A1     
00004288  103C 000E               6665mm         MOVE.B  #14,D0          
0000428C  4E4F                    6666mm         TRAP    #15
0000428E                          6667mm         ENDM
0000428E                          6668mm         PRINTANSRC D3  
0000428E  3203                    6669mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004290  E149                    6670mm         LSL     #$08, D1
00004292  EB49                    6671mm         LSL     #$05, D1
00004294  E049                    6672mm         LSR     #$08, D1
00004296  EA49                    6673mm         LSR     #$05, D1
00004298  43F8 00CE               6674mm         LEA     OAN, A1     
0000429C  103C 000E               6675mm         MOVE.B  #14,D0          
000042A0  4E4F                    6676mm         TRAP    #15
000042A2  103C 0003               6677mm         MOVE.B  #3,D0          
000042A6  4E4F                    6678mm         TRAP    #15
000042A8                          6679mm         ENDM
000042A8                          6680mm         PRINTRB
000042A8  43F8 00D2               6681mm         LEA     ORB, A1     
000042AC  103C 000E               6682mm         MOVE.B  #14,D0          
000042B0  4E4F                    6683mm         TRAP    #15
000042B2                          6684mm         ENDM
000042B2                          6685mm         PRINTPI
000042B2  43F8 00D9               6686mm         LEA     OPSTINC, A1     
000042B6  103C 000E               6687mm         MOVE.B  #14,D0          
000042BA  4E4F                    6688mm         TRAP    #15
000042BC                          6689mm         ENDM
000042BC  6000 0430               6690m         BRA     COMPLETE_495  
000042C0                          6691m ADRREGPREDEC_495: 
000042C0  BC3C 0001               6692m         CMP.B   #$01, D6
000042C4  6700 003C               6693m         BEQ     ADRREGPREDECSRC_495   
000042C8                          6694m ADRREGPREDECDEST_495:
000042C8                          6695mm         PRINTPD  
000042C8  43F8 00D7               6696mm         LEA     OPREDEC, A1     
000042CC  103C 000E               6697mm         MOVE.B  #14,D0          
000042D0  4E4F                    6698mm         TRAP    #15
000042D2                          6699mm         ENDM
000042D2                          6700mm         PRINTLB
000042D2  43F8 00D0               6701mm         LEA     OLB, A1     
000042D6  103C 000E               6702mm         MOVE.B  #14,D0          
000042DA  4E4F                    6703mm         TRAP    #15
000042DC                          6704mm         ENDM
000042DC                          6705mm         PRINTANDEST D3  
000042DC  3203                    6706mm         MOVE.W  D3, D1
000042DE  E949                    6707mm         LSL     #$04, D1
000042E0  E049                    6708mm         LSR     #$08, D1
000042E2  EA49                    6709mm         LSR     #$05, D1
000042E4  43F8 00CE               6710mm         LEA     OAN, A1     
000042E8  103C 000E               6711mm         MOVE.B  #14,D0          
000042EC  4E4F                    6712mm         TRAP    #15
000042EE  103C 0003               6713mm         MOVE.B  #3,D0          
000042F2  4E4F                    6714mm         TRAP    #15
000042F4                          6715mm         ENDM
000042F4                          6716mm         PRINTRB
000042F4  43F8 00D2               6717mm         LEA     ORB, A1     
000042F8  103C 000E               6718mm         MOVE.B  #14,D0          
000042FC  4E4F                    6719mm         TRAP    #15
000042FE                          6720mm         ENDM
000042FE  6000 03EE               6721m         BRA     COMPLETE_495   
00004302                          6722m ADRREGPREDECSRC_495: 
00004302                          6723mm         PRINTPD  
00004302  43F8 00D7               6724mm         LEA     OPREDEC, A1     
00004306  103C 000E               6725mm         MOVE.B  #14,D0          
0000430A  4E4F                    6726mm         TRAP    #15
0000430C                          6727mm         ENDM
0000430C                          6728mm         PRINTLB
0000430C  43F8 00D0               6729mm         LEA     OLB, A1     
00004310  103C 000E               6730mm         MOVE.B  #14,D0          
00004314  4E4F                    6731mm         TRAP    #15
00004316                          6732mm         ENDM
00004316                          6733mm         PRINTANSRC D3  
00004316  3203                    6734mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004318  E149                    6735mm         LSL     #$08, D1
0000431A  EB49                    6736mm         LSL     #$05, D1
0000431C  E049                    6737mm         LSR     #$08, D1
0000431E  EA49                    6738mm         LSR     #$05, D1
00004320  43F8 00CE               6739mm         LEA     OAN, A1     
00004324  103C 000E               6740mm         MOVE.B  #14,D0          
00004328  4E4F                    6741mm         TRAP    #15
0000432A  103C 0003               6742mm         MOVE.B  #3,D0          
0000432E  4E4F                    6743mm         TRAP    #15
00004330                          6744mm         ENDM
00004330                          6745mm         PRINTRB
00004330  43F8 00D2               6746mm         LEA     ORB, A1     
00004334  103C 000E               6747mm         MOVE.B  #14,D0          
00004338  4E4F                    6748mm         TRAP    #15
0000433A                          6749mm         ENDM
0000433A  6000 03B2               6750m         BRA     COMPLETE_495
0000433E                          6751m        
0000433E                          6752m ADRABSOLUTE_495:
0000433E  BC3C 0001               6753m         CMP.B   #$01, D6
00004342  6600 0018               6754m         BNE     ADRABSOLUTEDST_495 
00004346                          6755m         
00004346  3A03                    6756m         MOVE.W  D3, D5
00004348  0803 0002               6757m         BTST    #2, D3
0000434C  6600 0024               6758m         BNE     ADRIMMEDIATE_495
00004350  0803 0000               6759m         BTST    #0, D3
00004354  6600 0280               6760m         BNE     ADRABSOLUTEL_495
00004358  6000 01E6               6761m         BRA     ADRABSOLUTEW_495
0000435C                          6762m ADRABSOLUTEDST_495:
0000435C  3A03                    6763m         MOVE.W  D3, D5
0000435E  0803 000B               6764m         BTST    #$B, D3
00004362  6600 000E               6765m         BNE     ADRIMMEDIATE_495
00004366  0803 0009               6766m         BTST    #$09, D3
0000436A  6600 026A               6767m         BNE     ADRABSOLUTEL_495
0000436E  6000 01D0               6768m         BRA     ADRABSOLUTEW_495
00004372                          6769m ADRIMMEDIATE_495:
00004372  BE3C 0001               6770m         CMP.B   #1, D7
00004376  6700 00A2               6771m         BEQ     ADRIMMEDIATEL_495
0000437A                          6772m ADRIMMEDIATEW_495:
0000437A  361A                    6773m         MOVE.W  (A2)+, D3
0000437C                          6774mm         PRINTHASH
0000437C  103C 0006               6775mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004380  323C 0023               6776mm         MOVE.W  #35, D1     ; AN = SIGN
00004384  4E4F                    6777mm         TRAP    #15         ; OUTPUT = SIGN
00004386                          6778mm         ENDM
00004386                          6779mm         PRINTSIGN
00004386  103C 0006               6780mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000438A  323C 0024               6781mm         MOVE.W  #36, D1     ; AN = SIGN
0000438E  4E4F                    6782mm         TRAP    #15         ; OUTPUT = SIGN
00004390                          6783mm         ENDM
00004390                          6784mm         ADROUT
00004390  103C 0006               6785mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004394  3212                    6786mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004396  E049                    6787mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004398  E849                    6788mm         LSR.W   #4, D1      
0000439A                          6789mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000439A  0C01 0009               6790mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000439E  6E00 000A               6791mmm         BGT     ALPHA_525
000043A2  0601 0030               6792mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043A6  6000 0006               6793mmm         BRA     DONE_525
000043AA  0601 0037               6794mmm ALPHA_525: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043AE  4E71                    6795mmm DONE_525: NOP
000043B0                          6796mmm         ENDM
000043B0  4E4F                    6797mm         TRAP    #15         ; EXECUTE OUTPUT
000043B2                          6798mm         
000043B2  3212                    6799mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043B4  E949                    6800mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043B6  E049                    6801mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043B8  E849                    6802mm         LSR.W   #4, D1      
000043BA                          6803mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043BA  0C01 0009               6804mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043BE  6E00 000A               6805mmm         BGT     ALPHA_526
000043C2  0601 0030               6806mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043C6  6000 0006               6807mmm         BRA     DONE_526
000043CA  0601 0037               6808mmm ALPHA_526: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043CE  4E71                    6809mmm DONE_526: NOP
000043D0                          6810mmm         ENDM
000043D0  4E4F                    6811mm         TRAP    #15         ; EXECUTE OUTPUT
000043D2                          6812mm         
000043D2  3212                    6813mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043D4  E149                    6814mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043D6  E049                    6815mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043D8  E849                    6816mm         LSR.W   #4, D1      
000043DA                          6817mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043DA  0C01 0009               6818mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043DE  6E00 000A               6819mmm         BGT     ALPHA_527
000043E2  0601 0030               6820mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043E6  6000 0006               6821mmm         BRA     DONE_527
000043EA  0601 0037               6822mmm ALPHA_527: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043EE  4E71                    6823mmm DONE_527: NOP
000043F0                          6824mmm         ENDM
000043F0  4E4F                    6825mm         TRAP    #15         ; EXECUTE OUTPUT
000043F2                          6826mm         
000043F2  3212                    6827mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043F4  E149                    6828mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043F6  E949                    6829mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043F8  E049                    6830mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043FA  E849                    6831mm         LSR.W   #4, D1      
000043FC                          6832mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043FC  0C01 0009               6833mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004400  6E00 000A               6834mmm         BGT     ALPHA_528
00004404  0601 0030               6835mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004408  6000 0006               6836mmm         BRA     DONE_528
0000440C  0601 0037               6837mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004410  4E71                    6838mmm DONE_528: NOP
00004412                          6839mmm         ENDM
00004412  4E4F                    6840mm         TRAP    #15         ; EXECUTE OUTPUT       
00004414                          6841mm         ENDM 
00004414  3605                    6842m         MOVE.W  D5, D3
00004416  6000 02D6               6843m         BRA     COMPLETE_495
0000441A                          6844m ADRIMMEDIATEL_495:
0000441A  361A                    6845m         MOVE.W  (A2)+, D3
0000441C                          6846mm         PRINTHASH
0000441C  103C 0006               6847mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004420  323C 0023               6848mm         MOVE.W  #35, D1     ; AN = SIGN
00004424  4E4F                    6849mm         TRAP    #15         ; OUTPUT = SIGN
00004426                          6850mm         ENDM
00004426                          6851mm         PRINTSIGN
00004426  103C 0006               6852mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000442A  323C 0024               6853mm         MOVE.W  #36, D1     ; AN = SIGN
0000442E  4E4F                    6854mm         TRAP    #15         ; OUTPUT = SIGN
00004430                          6855mm         ENDM
00004430                          6856mm         ADROUT 
00004430  103C 0006               6857mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004434  3212                    6858mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004436  E049                    6859mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004438  E849                    6860mm         LSR.W   #4, D1      
0000443A                          6861mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000443A  0C01 0009               6862mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000443E  6E00 000A               6863mmm         BGT     ALPHA_532
00004442  0601 0030               6864mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004446  6000 0006               6865mmm         BRA     DONE_532
0000444A  0601 0037               6866mmm ALPHA_532: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000444E  4E71                    6867mmm DONE_532: NOP
00004450                          6868mmm         ENDM
00004450  4E4F                    6869mm         TRAP    #15         ; EXECUTE OUTPUT
00004452                          6870mm         
00004452  3212                    6871mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004454  E949                    6872mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004456  E049                    6873mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004458  E849                    6874mm         LSR.W   #4, D1      
0000445A                          6875mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000445A  0C01 0009               6876mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000445E  6E00 000A               6877mmm         BGT     ALPHA_533
00004462  0601 0030               6878mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004466  6000 0006               6879mmm         BRA     DONE_533
0000446A  0601 0037               6880mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000446E  4E71                    6881mmm DONE_533: NOP
00004470                          6882mmm         ENDM
00004470  4E4F                    6883mm         TRAP    #15         ; EXECUTE OUTPUT
00004472                          6884mm         
00004472  3212                    6885mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004474  E149                    6886mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004476  E049                    6887mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004478  E849                    6888mm         LSR.W   #4, D1      
0000447A                          6889mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000447A  0C01 0009               6890mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000447E  6E00 000A               6891mmm         BGT     ALPHA_534
00004482  0601 0030               6892mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004486  6000 0006               6893mmm         BRA     DONE_534
0000448A  0601 0037               6894mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000448E  4E71                    6895mmm DONE_534: NOP
00004490                          6896mmm         ENDM
00004490  4E4F                    6897mm         TRAP    #15         ; EXECUTE OUTPUT
00004492                          6898mm         
00004492  3212                    6899mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004494  E149                    6900mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004496  E949                    6901mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004498  E049                    6902mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449A  E849                    6903mm         LSR.W   #4, D1      
0000449C                          6904mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449C  0C01 0009               6905mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A0  6E00 000A               6906mmm         BGT     ALPHA_535
000044A4  0601 0030               6907mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044A8  6000 0006               6908mmm         BRA     DONE_535
000044AC  0601 0037               6909mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B0  4E71                    6910mmm DONE_535: NOP
000044B2                          6911mmm         ENDM
000044B2  4E4F                    6912mm         TRAP    #15         ; EXECUTE OUTPUT       
000044B4                          6913mm         ENDM 
000044B4  361A                    6914m         MOVE.W  (A2)+, D3
000044B6                          6915mm         ADROUT
000044B6  103C 0006               6916mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044BA  3212                    6917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044BC  E049                    6918mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BE  E849                    6919mm         LSR.W   #4, D1      
000044C0                          6920mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044C0  0C01 0009               6921mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C4  6E00 000A               6922mmm         BGT     ALPHA_537
000044C8  0601 0030               6923mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CC  6000 0006               6924mmm         BRA     DONE_537
000044D0  0601 0037               6925mmm ALPHA_537: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D4  4E71                    6926mmm DONE_537: NOP
000044D6                          6927mmm         ENDM
000044D6  4E4F                    6928mm         TRAP    #15         ; EXECUTE OUTPUT
000044D8                          6929mm         
000044D8  3212                    6930mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044DA  E949                    6931mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000044DC  E049                    6932mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044DE  E849                    6933mm         LSR.W   #4, D1      
000044E0                          6934mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044E0  0C01 0009               6935mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044E4  6E00 000A               6936mmm         BGT     ALPHA_538
000044E8  0601 0030               6937mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044EC  6000 0006               6938mmm         BRA     DONE_538
000044F0  0601 0037               6939mmm ALPHA_538: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044F4  4E71                    6940mmm DONE_538: NOP
000044F6                          6941mmm         ENDM
000044F6  4E4F                    6942mm         TRAP    #15         ; EXECUTE OUTPUT
000044F8                          6943mm         
000044F8  3212                    6944mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044FA  E149                    6945mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044FC  E049                    6946mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044FE  E849                    6947mm         LSR.W   #4, D1      
00004500                          6948mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004500  0C01 0009               6949mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004504  6E00 000A               6950mmm         BGT     ALPHA_539
00004508  0601 0030               6951mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000450C  6000 0006               6952mmm         BRA     DONE_539
00004510  0601 0037               6953mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004514  4E71                    6954mmm DONE_539: NOP
00004516                          6955mmm         ENDM
00004516  4E4F                    6956mm         TRAP    #15         ; EXECUTE OUTPUT
00004518                          6957mm         
00004518  3212                    6958mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000451A  E149                    6959mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000451C  E949                    6960mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000451E  E049                    6961mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004520  E849                    6962mm         LSR.W   #4, D1      
00004522                          6963mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004522  0C01 0009               6964mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004526  6E00 000A               6965mmm         BGT     ALPHA_540
0000452A  0601 0030               6966mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000452E  6000 0006               6967mmm         BRA     DONE_540
00004532  0601 0037               6968mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004536  4E71                    6969mmm DONE_540: NOP
00004538                          6970mmm         ENDM
00004538  4E4F                    6971mm         TRAP    #15         ; EXECUTE OUTPUT       
0000453A                          6972mm         ENDM 
0000453A  3605                    6973m         MOVE.W  D5, D3
0000453C  6000 01B0               6974m         BRA     COMPLETE_495 
00004540                          6975m ADRABSOLUTEW_495:     
00004540  361A                    6976m         MOVE.W  (A2)+, D3
00004542                          6977mm         PRINTSIGN
00004542  103C 0006               6978mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004546  323C 0024               6979mm         MOVE.W  #36, D1     ; AN = SIGN
0000454A  4E4F                    6980mm         TRAP    #15         ; OUTPUT = SIGN
0000454C                          6981mm         ENDM
0000454C                          6982mm         ADROUT
0000454C  103C 0006               6983mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004550  3212                    6984mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004552  E049                    6985mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004554  E849                    6986mm         LSR.W   #4, D1      
00004556                          6987mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004556  0C01 0009               6988mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000455A  6E00 000A               6989mmm         BGT     ALPHA_543
0000455E  0601 0030               6990mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004562  6000 0006               6991mmm         BRA     DONE_543
00004566  0601 0037               6992mmm ALPHA_543: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000456A  4E71                    6993mmm DONE_543: NOP
0000456C                          6994mmm         ENDM
0000456C  4E4F                    6995mm         TRAP    #15         ; EXECUTE OUTPUT
0000456E                          6996mm         
0000456E  3212                    6997mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004570  E949                    6998mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004572  E049                    6999mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004574  E849                    7000mm         LSR.W   #4, D1      
00004576                          7001mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004576  0C01 0009               7002mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000457A  6E00 000A               7003mmm         BGT     ALPHA_544
0000457E  0601 0030               7004mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004582  6000 0006               7005mmm         BRA     DONE_544
00004586  0601 0037               7006mmm ALPHA_544: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000458A  4E71                    7007mmm DONE_544: NOP
0000458C                          7008mmm         ENDM
0000458C  4E4F                    7009mm         TRAP    #15         ; EXECUTE OUTPUT
0000458E                          7010mm         
0000458E  3212                    7011mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004590  E149                    7012mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004592  E049                    7013mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004594  E849                    7014mm         LSR.W   #4, D1      
00004596                          7015mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004596  0C01 0009               7016mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000459A  6E00 000A               7017mmm         BGT     ALPHA_545
0000459E  0601 0030               7018mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045A2  6000 0006               7019mmm         BRA     DONE_545
000045A6  0601 0037               7020mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045AA  4E71                    7021mmm DONE_545: NOP
000045AC                          7022mmm         ENDM
000045AC  4E4F                    7023mm         TRAP    #15         ; EXECUTE OUTPUT
000045AE                          7024mm         
000045AE  3212                    7025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045B0  E149                    7026mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045B2  E949                    7027mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045B4  E049                    7028mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B6  E849                    7029mm         LSR.W   #4, D1      
000045B8                          7030mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B8  0C01 0009               7031mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045BC  6E00 000A               7032mmm         BGT     ALPHA_546
000045C0  0601 0030               7033mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045C4  6000 0006               7034mmm         BRA     DONE_546
000045C8  0601 0037               7035mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045CC  4E71                    7036mmm DONE_546: NOP
000045CE                          7037mmm         ENDM
000045CE  4E4F                    7038mm         TRAP    #15         ; EXECUTE OUTPUT       
000045D0                          7039mm         ENDM 
000045D0  3605                    7040m         MOVE.W  D5, D3
000045D2  6000 011A               7041m         BRA     COMPLETE_495  
000045D6                          7042m ADRABSOLUTEL_495:  
000045D6  361A                    7043m         MOVE.W  (A2)+, D3
000045D8                          7044mm         PRINTSIGN
000045D8  103C 0006               7045mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000045DC  323C 0024               7046mm         MOVE.W  #36, D1     ; AN = SIGN
000045E0  4E4F                    7047mm         TRAP    #15         ; OUTPUT = SIGN
000045E2                          7048mm         ENDM
000045E2                          7049mm         ADROUT 
000045E2  103C 0006               7050mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000045E6  3212                    7051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045E8  E049                    7052mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045EA  E849                    7053mm         LSR.W   #4, D1      
000045EC                          7054mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045EC  0C01 0009               7055mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045F0  6E00 000A               7056mmm         BGT     ALPHA_549
000045F4  0601 0030               7057mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045F8  6000 0006               7058mmm         BRA     DONE_549
000045FC  0601 0037               7059mmm ALPHA_549: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004600  4E71                    7060mmm DONE_549: NOP
00004602                          7061mmm         ENDM
00004602  4E4F                    7062mm         TRAP    #15         ; EXECUTE OUTPUT
00004604                          7063mm         
00004604  3212                    7064mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004606  E949                    7065mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004608  E049                    7066mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000460A  E849                    7067mm         LSR.W   #4, D1      
0000460C                          7068mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000460C  0C01 0009               7069mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004610  6E00 000A               7070mmm         BGT     ALPHA_550
00004614  0601 0030               7071mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004618  6000 0006               7072mmm         BRA     DONE_550
0000461C  0601 0037               7073mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004620  4E71                    7074mmm DONE_550: NOP
00004622                          7075mmm         ENDM
00004622  4E4F                    7076mm         TRAP    #15         ; EXECUTE OUTPUT
00004624                          7077mm         
00004624  3212                    7078mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004626  E149                    7079mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004628  E049                    7080mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000462A  E849                    7081mm         LSR.W   #4, D1      
0000462C                          7082mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000462C  0C01 0009               7083mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004630  6E00 000A               7084mmm         BGT     ALPHA_551
00004634  0601 0030               7085mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004638  6000 0006               7086mmm         BRA     DONE_551
0000463C  0601 0037               7087mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004640  4E71                    7088mmm DONE_551: NOP
00004642                          7089mmm         ENDM
00004642  4E4F                    7090mm         TRAP    #15         ; EXECUTE OUTPUT
00004644                          7091mm         
00004644  3212                    7092mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004646  E149                    7093mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004648  E949                    7094mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000464A  E049                    7095mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000464C  E849                    7096mm         LSR.W   #4, D1      
0000464E                          7097mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000464E  0C01 0009               7098mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004652  6E00 000A               7099mmm         BGT     ALPHA_552
00004656  0601 0030               7100mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000465A  6000 0006               7101mmm         BRA     DONE_552
0000465E  0601 0037               7102mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004662  4E71                    7103mmm DONE_552: NOP
00004664                          7104mmm         ENDM
00004664  4E4F                    7105mm         TRAP    #15         ; EXECUTE OUTPUT       
00004666                          7106mm         ENDM 
00004666  361A                    7107m         MOVE.W  (A2)+, D3
00004668                          7108mm         ADROUT
00004668  103C 0006               7109mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000466C  3212                    7110mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000466E  E049                    7111mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004670  E849                    7112mm         LSR.W   #4, D1      
00004672                          7113mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004672  0C01 0009               7114mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004676  6E00 000A               7115mmm         BGT     ALPHA_554
0000467A  0601 0030               7116mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000467E  6000 0006               7117mmm         BRA     DONE_554
00004682  0601 0037               7118mmm ALPHA_554: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004686  4E71                    7119mmm DONE_554: NOP
00004688                          7120mmm         ENDM
00004688  4E4F                    7121mm         TRAP    #15         ; EXECUTE OUTPUT
0000468A                          7122mm         
0000468A  3212                    7123mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000468C  E949                    7124mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000468E  E049                    7125mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004690  E849                    7126mm         LSR.W   #4, D1      
00004692                          7127mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004692  0C01 0009               7128mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004696  6E00 000A               7129mmm         BGT     ALPHA_555
0000469A  0601 0030               7130mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000469E  6000 0006               7131mmm         BRA     DONE_555
000046A2  0601 0037               7132mmm ALPHA_555: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046A6  4E71                    7133mmm DONE_555: NOP
000046A8                          7134mmm         ENDM
000046A8  4E4F                    7135mm         TRAP    #15         ; EXECUTE OUTPUT
000046AA                          7136mm         
000046AA  3212                    7137mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046AC  E149                    7138mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046AE  E049                    7139mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046B0  E849                    7140mm         LSR.W   #4, D1      
000046B2                          7141mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046B2  0C01 0009               7142mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046B6  6E00 000A               7143mmm         BGT     ALPHA_556
000046BA  0601 0030               7144mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046BE  6000 0006               7145mmm         BRA     DONE_556
000046C2  0601 0037               7146mmm ALPHA_556: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046C6  4E71                    7147mmm DONE_556: NOP
000046C8                          7148mmm         ENDM
000046C8  4E4F                    7149mm         TRAP    #15         ; EXECUTE OUTPUT
000046CA                          7150mm         
000046CA  3212                    7151mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046CC  E149                    7152mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046CE  E949                    7153mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000046D0  E049                    7154mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046D2  E849                    7155mm         LSR.W   #4, D1      
000046D4                          7156mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046D4  0C01 0009               7157mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046D8  6E00 000A               7158mmm         BGT     ALPHA_557
000046DC  0601 0030               7159mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046E0  6000 0006               7160mmm         BRA     DONE_557
000046E4  0601 0037               7161mmm ALPHA_557: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046E8  4E71                    7162mmm DONE_557: NOP
000046EA                          7163mmm         ENDM
000046EA  4E4F                    7164mm         TRAP    #15         ; EXECUTE OUTPUT       
000046EC                          7165mm         ENDM 
000046EC  3605                    7166m         MOVE.W  D5, D3
000046EE                          7167m 
000046EE                          7168m COMPLETE_495:  ; OPCODE HAS BEEN VERIFIED
000046EE                          7169m         ENDM
000046EE                          7170m         printComma
000046EE  43F8 00D4               7171m         LEA     OCOMMA, A1     
000046F2  103C 000E               7172m         MOVE.B  #14,D0          
000046F6  4E4F                    7173m         TRAP    #15
000046F8                          7174m         ENDM
000046F8                          7175m         printDnDest     D3
000046F8  3203                    7176m         MOVE.W  D3, D1      ; BITS 9 TO 11
000046FA  E949                    7177m         LSL     #$04, D1
000046FC  E049                    7178m         LSR     #$08, D1
000046FE  EA49                    7179m         LSR     #$05, D1
00004700  43F8 00CC               7180m         LEA     ODN, A1     
00004704  103C 000E               7181m         MOVE.B  #14,D0          
00004708  4E4F                    7182m         TRAP    #15
0000470A  103C 0003               7183m         MOVE.B  #3,D0          
0000470E  4E4F                    7184m         TRAP    #15
00004710                          7185m         ENDM
00004710  4E75                    7186          RTS                 ; Return from decodeDIVU subroutine
00004712                          7187  
00004712                          7188  
00004712                          7189  ; ------------------------------------------------------------
00004712                          7190  ; 8. "decodeLEA" subroutine
00004712                          7191  ; AUTHOR
00004712                          7192  ;
00004712                          7193  ; TODO: DESCRIPTION
00004712                          7194  ; ------------------------------------------------------------
00004712                          7195  decodeLEA:
00004712                          7196m         verifyOpcode    pLEA, (A2)
00004712  43F8 0172               7197m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004716  3612                    7198m         MOVE.W  (A2), D3      ; INPUT VALUE
00004718  123C 000F               7199m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000471C                          7200m         
0000471C                          7201m LOOP_560: 
0000471C  0C11 0030               7202m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004720  6700 000E               7203m         BEQ     CHECKFOR0_560
00004724  0C11 0031               7204m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004728  6700 0010               7205m         BEQ     CHECKFOR1_560
0000472C  6000 0012               7206m         BRA     NEXT_560      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004730                          7207m         
00004730                          7208m CHECKFOR0_560: 
00004730  0303                    7209m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004732  6600 2A08               7210m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004736  6000 0008               7211m         BRA     NEXT_560
0000473A                          7212m 
0000473A                          7213m CHECKFOR1_560:
0000473A  0303                    7214m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000473C  6700 29FE               7215m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004740                          7216m 
00004740                          7217m NEXT_560: 
00004740  B23C 0000               7218m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004744  6700 0008               7219m         BEQ     COMPLETE_560  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004748  5301                    7220m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000474A  1819                    7221m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000474C  60CE                    7222m         BRA     LOOP_560      ; BEGIN LOOP AGAIN
0000474E                          7223m 
0000474E                          7224m COMPLETE_560:  ; OPCODE HAS BEEN VERIFIED
0000474E                          7225m         ENDM
0000474E  43F8 008C               7226          LEA     oLEA, A1     
00004752  103C 000E               7227          MOVE.B  #14,D0          
00004756  4E4F                    7228          TRAP    #15
00004758  43F8 00DD               7229          LEA     oBlank, A1     
0000475C  103C 000E               7230          MOVE.B  #14,D0          
00004760  4E4F                    7231          TRAP    #15
00004762  3A12                    7232          MOVE.W  (A2), D5
00004764                          7233m         prepareAdrMode  #$1, (A2)
00004764  3C3C 0001               7234m         MOVE.W  #$1, D6      ; INPUT VALUE
00004768  3212                    7235m         MOVE.W  (A2), D1
0000476A  BC3C 0001               7236m         CMP.B   #$01, D6
0000476E  6700 000C               7237m         BEQ     ADRSOURCE_561    
00004772                          7238m ADRDEST_561:
00004772  EF49                    7239m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004774  E049                    7240m         LSR     #$08, D1
00004776  EA49                    7241m         LSR     #$05, D1
00004778  6000 000A               7242m         BRA     COMPLETE_561 
0000477C                          7243m ADRSOURCE_561:                
0000477C  E149                    7244m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000477E  E549                    7245m         LSL     #$02, D1
00004780  E049                    7246m         LSR     #$08, D1
00004782  EA49                    7247m         LSR     #$05, D1
00004784                          7248m COMPLETE_561:  ; OPCODE HAS BEEN VERIFIED
00004784                          7249m         ENDM        
00004784                          7250m         decodeAdrMode   (A2), D1
00004784  3612                    7251m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004786  3201                    7252m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004788                          7253m 
00004788  B23C 0001               7254m         CMP.B   #$01, D1
0000478C  6700 0066               7255m         BEQ     ADRREGDIRECT_562    
00004790  B23C 0002               7256m         CMP.B   #$02, D1
00004794  6700 00A0               7257m         BEQ     ADRREGINDIRECT_562  
00004798  B23C 0003               7258m         CMP.B   #$03, D1
0000479C  6700 0102               7259m         BEQ     ADRREGPOSTINC_562  
000047A0  B23C 0004               7260m         CMP.B   #$04, D1
000047A4  6700 0178               7261m         BEQ     ADRREGPREDEC_562
000047A8  B23C 0007               7262m         CMP.B   #$07, D1
000047AC  6700 01EE               7263m         BEQ     ADRABSOLUTE_562    
000047B0                          7264m         
000047B0                          7265m DATAREGDIRECT_562: 
000047B0  BC3C 0001               7266m         CMP.B   #$01, D6
000047B4  6700 001E               7267m         BEQ     DATAREGDIRECTSRC_562   
000047B8                          7268m DATAREGDIRECTDEST_562: 
000047B8                          7269mm         PRINTDNDEST D3 
000047B8  3203                    7270mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000047BA  E949                    7271mm         LSL     #$04, D1
000047BC  E049                    7272mm         LSR     #$08, D1
000047BE  EA49                    7273mm         LSR     #$05, D1
000047C0  43F8 00CC               7274mm         LEA     ODN, A1     
000047C4  103C 000E               7275mm         MOVE.B  #14,D0          
000047C8  4E4F                    7276mm         TRAP    #15
000047CA  103C 0003               7277mm         MOVE.B  #3,D0          
000047CE  4E4F                    7278mm         TRAP    #15
000047D0                          7279mm         ENDM
000047D0  6000 057A               7280m         BRA     COMPLETE_562 
000047D4                          7281m DATAREGDIRECTSRC_562: 
000047D4                          7282mm         PRINTDNSRC D3 
000047D4  4281                    7283mm         CLR.L   D1
000047D6  3203                    7284mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047D8  E149                    7285mm         LSL     #$08, D1
000047DA  EB49                    7286mm         LSL     #$05, D1
000047DC  E049                    7287mm         LSR     #$08, D1
000047DE  EA49                    7288mm         LSR     #$05, D1
000047E0  43F8 00CC               7289mm         LEA     ODN, A1     
000047E4  103C 000E               7290mm         MOVE.B  #14,D0          
000047E8  4E4F                    7291mm         TRAP    #15
000047EA  103C 0003               7292mm         MOVE.B  #3,D0          
000047EE  4E4F                    7293mm         TRAP    #15
000047F0                          7294mm         ENDM
000047F0  6000 055A               7295m         BRA     COMPLETE_562   
000047F4                          7296m         
000047F4                          7297m ADRREGDIRECT_562: 
000047F4  BC3C 0001               7298m         CMP.B   #$01, D6
000047F8  6700 001E               7299m         BEQ     ADRREGDIRECTSRC_562   
000047FC                          7300m ADRREGDIRECTDEST_562:
000047FC                          7301mm         PRINTANDEST D3
000047FC  3203                    7302mm         MOVE.W  D3, D1
000047FE  E949                    7303mm         LSL     #$04, D1
00004800  E049                    7304mm         LSR     #$08, D1
00004802  EA49                    7305mm         LSR     #$05, D1
00004804  43F8 00CE               7306mm         LEA     OAN, A1     
00004808  103C 000E               7307mm         MOVE.B  #14,D0          
0000480C  4E4F                    7308mm         TRAP    #15
0000480E  103C 0003               7309mm         MOVE.B  #3,D0          
00004812  4E4F                    7310mm         TRAP    #15
00004814                          7311mm         ENDM
00004814  6000 0536               7312m         BRA     COMPLETE_562   
00004818                          7313m ADRREGDIRECTSRC_562:
00004818                          7314mm         PRINTANSRC D3
00004818  3203                    7315mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000481A  E149                    7316mm         LSL     #$08, D1
0000481C  EB49                    7317mm         LSL     #$05, D1
0000481E  E049                    7318mm         LSR     #$08, D1
00004820  EA49                    7319mm         LSR     #$05, D1
00004822  43F8 00CE               7320mm         LEA     OAN, A1     
00004826  103C 000E               7321mm         MOVE.B  #14,D0          
0000482A  4E4F                    7322mm         TRAP    #15
0000482C  103C 0003               7323mm         MOVE.B  #3,D0          
00004830  4E4F                    7324mm         TRAP    #15
00004832                          7325mm         ENDM
00004832  6000 0518               7326m         BRA     COMPLETE_562   
00004836                          7327m        
00004836                          7328m ADRREGINDIRECT_562:   
00004836  BC3C 0001               7329m         CMP.B   #$01, D6
0000483A  6700 0032               7330m         BEQ     ADRREGINDIRECTSRC_562   
0000483E                          7331m ADRREGINDIRECTDEST_562:
0000483E                          7332mm         PRINTLB
0000483E  43F8 00D0               7333mm         LEA     OLB, A1     
00004842  103C 000E               7334mm         MOVE.B  #14,D0          
00004846  4E4F                    7335mm         TRAP    #15
00004848                          7336mm         ENDM
00004848                          7337mm         PRINTANDEST D3  
00004848  3203                    7338mm         MOVE.W  D3, D1
0000484A  E949                    7339mm         LSL     #$04, D1
0000484C  E049                    7340mm         LSR     #$08, D1
0000484E  EA49                    7341mm         LSR     #$05, D1
00004850  43F8 00CE               7342mm         LEA     OAN, A1     
00004854  103C 000E               7343mm         MOVE.B  #14,D0          
00004858  4E4F                    7344mm         TRAP    #15
0000485A  103C 0003               7345mm         MOVE.B  #3,D0          
0000485E  4E4F                    7346mm         TRAP    #15
00004860                          7347mm         ENDM
00004860                          7348mm         PRINTRB
00004860  43F8 00D2               7349mm         LEA     ORB, A1     
00004864  103C 000E               7350mm         MOVE.B  #14,D0          
00004868  4E4F                    7351mm         TRAP    #15
0000486A                          7352mm         ENDM
0000486A  6000 04E0               7353m         BRA     COMPLETE_562     
0000486E                          7354m ADRREGINDIRECTSRC_562:   
0000486E                          7355mm         PRINTLB
0000486E  43F8 00D0               7356mm         LEA     OLB, A1     
00004872  103C 000E               7357mm         MOVE.B  #14,D0          
00004876  4E4F                    7358mm         TRAP    #15
00004878                          7359mm         ENDM
00004878                          7360mm         PRINTANSRC D3  
00004878  3203                    7361mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000487A  E149                    7362mm         LSL     #$08, D1
0000487C  EB49                    7363mm         LSL     #$05, D1
0000487E  E049                    7364mm         LSR     #$08, D1
00004880  EA49                    7365mm         LSR     #$05, D1
00004882  43F8 00CE               7366mm         LEA     OAN, A1     
00004886  103C 000E               7367mm         MOVE.B  #14,D0          
0000488A  4E4F                    7368mm         TRAP    #15
0000488C  103C 0003               7369mm         MOVE.B  #3,D0          
00004890  4E4F                    7370mm         TRAP    #15
00004892                          7371mm         ENDM
00004892                          7372mm         PRINTRB
00004892  43F8 00D2               7373mm         LEA     ORB, A1     
00004896  103C 000E               7374mm         MOVE.B  #14,D0          
0000489A  4E4F                    7375mm         TRAP    #15
0000489C                          7376mm         ENDM
0000489C  6000 04AE               7377m         BRA     COMPLETE_562   
000048A0                          7378m         
000048A0                          7379m ADRREGPOSTINC_562:   
000048A0  BC3C 0001               7380m         CMP.B   #$01, D6
000048A4  6700 003C               7381m         BEQ     ADRREGPOSTINCSRC_562   
000048A8                          7382m ADRREGPOSTINCDEST_562: 
000048A8                          7383mm         PRINTLB
000048A8  43F8 00D0               7384mm         LEA     OLB, A1     
000048AC  103C 000E               7385mm         MOVE.B  #14,D0          
000048B0  4E4F                    7386mm         TRAP    #15
000048B2                          7387mm         ENDM
000048B2                          7388mm         PRINTANDEST D3  
000048B2  3203                    7389mm         MOVE.W  D3, D1
000048B4  E949                    7390mm         LSL     #$04, D1
000048B6  E049                    7391mm         LSR     #$08, D1
000048B8  EA49                    7392mm         LSR     #$05, D1
000048BA  43F8 00CE               7393mm         LEA     OAN, A1     
000048BE  103C 000E               7394mm         MOVE.B  #14,D0          
000048C2  4E4F                    7395mm         TRAP    #15
000048C4  103C 0003               7396mm         MOVE.B  #3,D0          
000048C8  4E4F                    7397mm         TRAP    #15
000048CA                          7398mm         ENDM
000048CA                          7399mm         PRINTRB
000048CA  43F8 00D2               7400mm         LEA     ORB, A1     
000048CE  103C 000E               7401mm         MOVE.B  #14,D0          
000048D2  4E4F                    7402mm         TRAP    #15
000048D4                          7403mm         ENDM
000048D4                          7404mm         PRINTPI
000048D4  43F8 00D9               7405mm         LEA     OPSTINC, A1     
000048D8  103C 000E               7406mm         MOVE.B  #14,D0          
000048DC  4E4F                    7407mm         TRAP    #15
000048DE                          7408mm         ENDM
000048DE  6000 046C               7409m         BRA     COMPLETE_562  
000048E2                          7410m ADRREGPOSTINCSRC_562:           
000048E2                          7411mm         PRINTLB
000048E2  43F8 00D0               7412mm         LEA     OLB, A1     
000048E6  103C 000E               7413mm         MOVE.B  #14,D0          
000048EA  4E4F                    7414mm         TRAP    #15
000048EC                          7415mm         ENDM
000048EC                          7416mm         PRINTANSRC D3  
000048EC  3203                    7417mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000048EE  E149                    7418mm         LSL     #$08, D1
000048F0  EB49                    7419mm         LSL     #$05, D1
000048F2  E049                    7420mm         LSR     #$08, D1
000048F4  EA49                    7421mm         LSR     #$05, D1
000048F6  43F8 00CE               7422mm         LEA     OAN, A1     
000048FA  103C 000E               7423mm         MOVE.B  #14,D0          
000048FE  4E4F                    7424mm         TRAP    #15
00004900  103C 0003               7425mm         MOVE.B  #3,D0          
00004904  4E4F                    7426mm         TRAP    #15
00004906                          7427mm         ENDM
00004906                          7428mm         PRINTRB
00004906  43F8 00D2               7429mm         LEA     ORB, A1     
0000490A  103C 000E               7430mm         MOVE.B  #14,D0          
0000490E  4E4F                    7431mm         TRAP    #15
00004910                          7432mm         ENDM
00004910                          7433mm         PRINTPI
00004910  43F8 00D9               7434mm         LEA     OPSTINC, A1     
00004914  103C 000E               7435mm         MOVE.B  #14,D0          
00004918  4E4F                    7436mm         TRAP    #15
0000491A                          7437mm         ENDM
0000491A  6000 0430               7438m         BRA     COMPLETE_562  
0000491E                          7439m ADRREGPREDEC_562: 
0000491E  BC3C 0001               7440m         CMP.B   #$01, D6
00004922  6700 003C               7441m         BEQ     ADRREGPREDECSRC_562   
00004926                          7442m ADRREGPREDECDEST_562:
00004926                          7443mm         PRINTPD  
00004926  43F8 00D7               7444mm         LEA     OPREDEC, A1     
0000492A  103C 000E               7445mm         MOVE.B  #14,D0          
0000492E  4E4F                    7446mm         TRAP    #15
00004930                          7447mm         ENDM
00004930                          7448mm         PRINTLB
00004930  43F8 00D0               7449mm         LEA     OLB, A1     
00004934  103C 000E               7450mm         MOVE.B  #14,D0          
00004938  4E4F                    7451mm         TRAP    #15
0000493A                          7452mm         ENDM
0000493A                          7453mm         PRINTANDEST D3  
0000493A  3203                    7454mm         MOVE.W  D3, D1
0000493C  E949                    7455mm         LSL     #$04, D1
0000493E  E049                    7456mm         LSR     #$08, D1
00004940  EA49                    7457mm         LSR     #$05, D1
00004942  43F8 00CE               7458mm         LEA     OAN, A1     
00004946  103C 000E               7459mm         MOVE.B  #14,D0          
0000494A  4E4F                    7460mm         TRAP    #15
0000494C  103C 0003               7461mm         MOVE.B  #3,D0          
00004950  4E4F                    7462mm         TRAP    #15
00004952                          7463mm         ENDM
00004952                          7464mm         PRINTRB
00004952  43F8 00D2               7465mm         LEA     ORB, A1     
00004956  103C 000E               7466mm         MOVE.B  #14,D0          
0000495A  4E4F                    7467mm         TRAP    #15
0000495C                          7468mm         ENDM
0000495C  6000 03EE               7469m         BRA     COMPLETE_562   
00004960                          7470m ADRREGPREDECSRC_562: 
00004960                          7471mm         PRINTPD  
00004960  43F8 00D7               7472mm         LEA     OPREDEC, A1     
00004964  103C 000E               7473mm         MOVE.B  #14,D0          
00004968  4E4F                    7474mm         TRAP    #15
0000496A                          7475mm         ENDM
0000496A                          7476mm         PRINTLB
0000496A  43F8 00D0               7477mm         LEA     OLB, A1     
0000496E  103C 000E               7478mm         MOVE.B  #14,D0          
00004972  4E4F                    7479mm         TRAP    #15
00004974                          7480mm         ENDM
00004974                          7481mm         PRINTANSRC D3  
00004974  3203                    7482mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004976  E149                    7483mm         LSL     #$08, D1
00004978  EB49                    7484mm         LSL     #$05, D1
0000497A  E049                    7485mm         LSR     #$08, D1
0000497C  EA49                    7486mm         LSR     #$05, D1
0000497E  43F8 00CE               7487mm         LEA     OAN, A1     
00004982  103C 000E               7488mm         MOVE.B  #14,D0          
00004986  4E4F                    7489mm         TRAP    #15
00004988  103C 0003               7490mm         MOVE.B  #3,D0          
0000498C  4E4F                    7491mm         TRAP    #15
0000498E                          7492mm         ENDM
0000498E                          7493mm         PRINTRB
0000498E  43F8 00D2               7494mm         LEA     ORB, A1     
00004992  103C 000E               7495mm         MOVE.B  #14,D0          
00004996  4E4F                    7496mm         TRAP    #15
00004998                          7497mm         ENDM
00004998  6000 03B2               7498m         BRA     COMPLETE_562
0000499C                          7499m        
0000499C                          7500m ADRABSOLUTE_562:
0000499C  BC3C 0001               7501m         CMP.B   #$01, D6
000049A0  6600 0018               7502m         BNE     ADRABSOLUTEDST_562 
000049A4                          7503m         
000049A4  3A03                    7504m         MOVE.W  D3, D5
000049A6  0803 0002               7505m         BTST    #2, D3
000049AA  6600 0024               7506m         BNE     ADRIMMEDIATE_562
000049AE  0803 0000               7507m         BTST    #0, D3
000049B2  6600 0280               7508m         BNE     ADRABSOLUTEL_562
000049B6  6000 01E6               7509m         BRA     ADRABSOLUTEW_562
000049BA                          7510m ADRABSOLUTEDST_562:
000049BA  3A03                    7511m         MOVE.W  D3, D5
000049BC  0803 000B               7512m         BTST    #$B, D3
000049C0  6600 000E               7513m         BNE     ADRIMMEDIATE_562
000049C4  0803 0009               7514m         BTST    #$09, D3
000049C8  6600 026A               7515m         BNE     ADRABSOLUTEL_562
000049CC  6000 01D0               7516m         BRA     ADRABSOLUTEW_562
000049D0                          7517m ADRIMMEDIATE_562:
000049D0  BE3C 0001               7518m         CMP.B   #1, D7
000049D4  6700 00A2               7519m         BEQ     ADRIMMEDIATEL_562
000049D8                          7520m ADRIMMEDIATEW_562:
000049D8  361A                    7521m         MOVE.W  (A2)+, D3
000049DA                          7522mm         PRINTHASH
000049DA  103C 0006               7523mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049DE  323C 0023               7524mm         MOVE.W  #35, D1     ; AN = SIGN
000049E2  4E4F                    7525mm         TRAP    #15         ; OUTPUT = SIGN
000049E4                          7526mm         ENDM
000049E4                          7527mm         PRINTSIGN
000049E4  103C 0006               7528mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049E8  323C 0024               7529mm         MOVE.W  #36, D1     ; AN = SIGN
000049EC  4E4F                    7530mm         TRAP    #15         ; OUTPUT = SIGN
000049EE                          7531mm         ENDM
000049EE                          7532mm         ADROUT
000049EE  103C 0006               7533mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049F2  3212                    7534mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049F4  E049                    7535mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049F6  E849                    7536mm         LSR.W   #4, D1      
000049F8                          7537mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F8  0C01 0009               7538mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049FC  6E00 000A               7539mmm         BGT     ALPHA_592
00004A00  0601 0030               7540mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A04  6000 0006               7541mmm         BRA     DONE_592
00004A08  0601 0037               7542mmm ALPHA_592: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A0C  4E71                    7543mmm DONE_592: NOP
00004A0E                          7544mmm         ENDM
00004A0E  4E4F                    7545mm         TRAP    #15         ; EXECUTE OUTPUT
00004A10                          7546mm         
00004A10  3212                    7547mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A12  E949                    7548mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A14  E049                    7549mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A16  E849                    7550mm         LSR.W   #4, D1      
00004A18                          7551mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A18  0C01 0009               7552mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A1C  6E00 000A               7553mmm         BGT     ALPHA_593
00004A20  0601 0030               7554mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A24  6000 0006               7555mmm         BRA     DONE_593
00004A28  0601 0037               7556mmm ALPHA_593: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A2C  4E71                    7557mmm DONE_593: NOP
00004A2E                          7558mmm         ENDM
00004A2E  4E4F                    7559mm         TRAP    #15         ; EXECUTE OUTPUT
00004A30                          7560mm         
00004A30  3212                    7561mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A32  E149                    7562mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A34  E049                    7563mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A36  E849                    7564mm         LSR.W   #4, D1      
00004A38                          7565mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A38  0C01 0009               7566mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A3C  6E00 000A               7567mmm         BGT     ALPHA_594
00004A40  0601 0030               7568mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A44  6000 0006               7569mmm         BRA     DONE_594
00004A48  0601 0037               7570mmm ALPHA_594: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A4C  4E71                    7571mmm DONE_594: NOP
00004A4E                          7572mmm         ENDM
00004A4E  4E4F                    7573mm         TRAP    #15         ; EXECUTE OUTPUT
00004A50                          7574mm         
00004A50  3212                    7575mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A52  E149                    7576mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A54  E949                    7577mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A56  E049                    7578mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A58  E849                    7579mm         LSR.W   #4, D1      
00004A5A                          7580mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A5A  0C01 0009               7581mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A5E  6E00 000A               7582mmm         BGT     ALPHA_595
00004A62  0601 0030               7583mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A66  6000 0006               7584mmm         BRA     DONE_595
00004A6A  0601 0037               7585mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A6E  4E71                    7586mmm DONE_595: NOP
00004A70                          7587mmm         ENDM
00004A70  4E4F                    7588mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A72                          7589mm         ENDM 
00004A72  3605                    7590m         MOVE.W  D5, D3
00004A74  6000 02D6               7591m         BRA     COMPLETE_562
00004A78                          7592m ADRIMMEDIATEL_562:
00004A78  361A                    7593m         MOVE.W  (A2)+, D3
00004A7A                          7594mm         PRINTHASH
00004A7A  103C 0006               7595mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A7E  323C 0023               7596mm         MOVE.W  #35, D1     ; AN = SIGN
00004A82  4E4F                    7597mm         TRAP    #15         ; OUTPUT = SIGN
00004A84                          7598mm         ENDM
00004A84                          7599mm         PRINTSIGN
00004A84  103C 0006               7600mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A88  323C 0024               7601mm         MOVE.W  #36, D1     ; AN = SIGN
00004A8C  4E4F                    7602mm         TRAP    #15         ; OUTPUT = SIGN
00004A8E                          7603mm         ENDM
00004A8E                          7604mm         ADROUT 
00004A8E  103C 0006               7605mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A92  3212                    7606mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A94  E049                    7607mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A96  E849                    7608mm         LSR.W   #4, D1      
00004A98                          7609mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A98  0C01 0009               7610mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A9C  6E00 000A               7611mmm         BGT     ALPHA_599
00004AA0  0601 0030               7612mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AA4  6000 0006               7613mmm         BRA     DONE_599
00004AA8  0601 0037               7614mmm ALPHA_599: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AAC  4E71                    7615mmm DONE_599: NOP
00004AAE                          7616mmm         ENDM
00004AAE  4E4F                    7617mm         TRAP    #15         ; EXECUTE OUTPUT
00004AB0                          7618mm         
00004AB0  3212                    7619mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AB2  E949                    7620mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004AB4  E049                    7621mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AB6  E849                    7622mm         LSR.W   #4, D1      
00004AB8                          7623mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AB8  0C01 0009               7624mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004ABC  6E00 000A               7625mmm         BGT     ALPHA_600
00004AC0  0601 0030               7626mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AC4  6000 0006               7627mmm         BRA     DONE_600
00004AC8  0601 0037               7628mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004ACC  4E71                    7629mmm DONE_600: NOP
00004ACE                          7630mmm         ENDM
00004ACE  4E4F                    7631mm         TRAP    #15         ; EXECUTE OUTPUT
00004AD0                          7632mm         
00004AD0  3212                    7633mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AD2  E149                    7634mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AD4  E049                    7635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AD6  E849                    7636mm         LSR.W   #4, D1      
00004AD8                          7637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AD8  0C01 0009               7638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004ADC  6E00 000A               7639mmm         BGT     ALPHA_601
00004AE0  0601 0030               7640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AE4  6000 0006               7641mmm         BRA     DONE_601
00004AE8  0601 0037               7642mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AEC  4E71                    7643mmm DONE_601: NOP
00004AEE                          7644mmm         ENDM
00004AEE  4E4F                    7645mm         TRAP    #15         ; EXECUTE OUTPUT
00004AF0                          7646mm         
00004AF0  3212                    7647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AF2  E149                    7648mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AF4  E949                    7649mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004AF6  E049                    7650mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AF8  E849                    7651mm         LSR.W   #4, D1      
00004AFA                          7652mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AFA  0C01 0009               7653mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AFE  6E00 000A               7654mmm         BGT     ALPHA_602
00004B02  0601 0030               7655mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B06  6000 0006               7656mmm         BRA     DONE_602
00004B0A  0601 0037               7657mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B0E  4E71                    7658mmm DONE_602: NOP
00004B10                          7659mmm         ENDM
00004B10  4E4F                    7660mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B12                          7661mm         ENDM 
00004B12  361A                    7662m         MOVE.W  (A2)+, D3
00004B14                          7663mm         ADROUT
00004B14  103C 0006               7664mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B18  3212                    7665mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B1A  E049                    7666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B1C  E849                    7667mm         LSR.W   #4, D1      
00004B1E                          7668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B1E  0C01 0009               7669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B22  6E00 000A               7670mmm         BGT     ALPHA_604
00004B26  0601 0030               7671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B2A  6000 0006               7672mmm         BRA     DONE_604
00004B2E  0601 0037               7673mmm ALPHA_604: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B32  4E71                    7674mmm DONE_604: NOP
00004B34                          7675mmm         ENDM
00004B34  4E4F                    7676mm         TRAP    #15         ; EXECUTE OUTPUT
00004B36                          7677mm         
00004B36  3212                    7678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B38  E949                    7679mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B3A  E049                    7680mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B3C  E849                    7681mm         LSR.W   #4, D1      
00004B3E                          7682mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B3E  0C01 0009               7683mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B42  6E00 000A               7684mmm         BGT     ALPHA_605
00004B46  0601 0030               7685mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B4A  6000 0006               7686mmm         BRA     DONE_605
00004B4E  0601 0037               7687mmm ALPHA_605: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B52  4E71                    7688mmm DONE_605: NOP
00004B54                          7689mmm         ENDM
00004B54  4E4F                    7690mm         TRAP    #15         ; EXECUTE OUTPUT
00004B56                          7691mm         
00004B56  3212                    7692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B58  E149                    7693mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B5A  E049                    7694mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B5C  E849                    7695mm         LSR.W   #4, D1      
00004B5E                          7696mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B5E  0C01 0009               7697mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B62  6E00 000A               7698mmm         BGT     ALPHA_606
00004B66  0601 0030               7699mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B6A  6000 0006               7700mmm         BRA     DONE_606
00004B6E  0601 0037               7701mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B72  4E71                    7702mmm DONE_606: NOP
00004B74                          7703mmm         ENDM
00004B74  4E4F                    7704mm         TRAP    #15         ; EXECUTE OUTPUT
00004B76                          7705mm         
00004B76  3212                    7706mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B78  E149                    7707mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B7A  E949                    7708mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B7C  E049                    7709mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B7E  E849                    7710mm         LSR.W   #4, D1      
00004B80                          7711mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B80  0C01 0009               7712mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B84  6E00 000A               7713mmm         BGT     ALPHA_607
00004B88  0601 0030               7714mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B8C  6000 0006               7715mmm         BRA     DONE_607
00004B90  0601 0037               7716mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B94  4E71                    7717mmm DONE_607: NOP
00004B96                          7718mmm         ENDM
00004B96  4E4F                    7719mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B98                          7720mm         ENDM 
00004B98  3605                    7721m         MOVE.W  D5, D3
00004B9A  6000 01B0               7722m         BRA     COMPLETE_562 
00004B9E                          7723m ADRABSOLUTEW_562:     
00004B9E  361A                    7724m         MOVE.W  (A2)+, D3
00004BA0                          7725mm         PRINTSIGN
00004BA0  103C 0006               7726mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BA4  323C 0024               7727mm         MOVE.W  #36, D1     ; AN = SIGN
00004BA8  4E4F                    7728mm         TRAP    #15         ; OUTPUT = SIGN
00004BAA                          7729mm         ENDM
00004BAA                          7730mm         ADROUT
00004BAA  103C 0006               7731mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BAE  3212                    7732mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BB0  E049                    7733mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BB2  E849                    7734mm         LSR.W   #4, D1      
00004BB4                          7735mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BB4  0C01 0009               7736mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BB8  6E00 000A               7737mmm         BGT     ALPHA_610
00004BBC  0601 0030               7738mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BC0  6000 0006               7739mmm         BRA     DONE_610
00004BC4  0601 0037               7740mmm ALPHA_610: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BC8  4E71                    7741mmm DONE_610: NOP
00004BCA                          7742mmm         ENDM
00004BCA  4E4F                    7743mm         TRAP    #15         ; EXECUTE OUTPUT
00004BCC                          7744mm         
00004BCC  3212                    7745mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BCE  E949                    7746mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BD0  E049                    7747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD2  E849                    7748mm         LSR.W   #4, D1      
00004BD4                          7749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD4  0C01 0009               7750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BD8  6E00 000A               7751mmm         BGT     ALPHA_611
00004BDC  0601 0030               7752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE0  6000 0006               7753mmm         BRA     DONE_611
00004BE4  0601 0037               7754mmm ALPHA_611: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BE8  4E71                    7755mmm DONE_611: NOP
00004BEA                          7756mmm         ENDM
00004BEA  4E4F                    7757mm         TRAP    #15         ; EXECUTE OUTPUT
00004BEC                          7758mm         
00004BEC  3212                    7759mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BEE  E149                    7760mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BF0  E049                    7761mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF2  E849                    7762mm         LSR.W   #4, D1      
00004BF4                          7763mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF4  0C01 0009               7764mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BF8  6E00 000A               7765mmm         BGT     ALPHA_612
00004BFC  0601 0030               7766mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C00  6000 0006               7767mmm         BRA     DONE_612
00004C04  0601 0037               7768mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C08  4E71                    7769mmm DONE_612: NOP
00004C0A                          7770mmm         ENDM
00004C0A  4E4F                    7771mm         TRAP    #15         ; EXECUTE OUTPUT
00004C0C                          7772mm         
00004C0C  3212                    7773mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C0E  E149                    7774mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C10  E949                    7775mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C12  E049                    7776mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C14  E849                    7777mm         LSR.W   #4, D1      
00004C16                          7778mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C16  0C01 0009               7779mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1A  6E00 000A               7780mmm         BGT     ALPHA_613
00004C1E  0601 0030               7781mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C22  6000 0006               7782mmm         BRA     DONE_613
00004C26  0601 0037               7783mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2A  4E71                    7784mmm DONE_613: NOP
00004C2C                          7785mmm         ENDM
00004C2C  4E4F                    7786mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C2E                          7787mm         ENDM 
00004C2E  3605                    7788m         MOVE.W  D5, D3
00004C30  6000 011A               7789m         BRA     COMPLETE_562  
00004C34                          7790m ADRABSOLUTEL_562:  
00004C34  361A                    7791m         MOVE.W  (A2)+, D3
00004C36                          7792mm         PRINTSIGN
00004C36  103C 0006               7793mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C3A  323C 0024               7794mm         MOVE.W  #36, D1     ; AN = SIGN
00004C3E  4E4F                    7795mm         TRAP    #15         ; OUTPUT = SIGN
00004C40                          7796mm         ENDM
00004C40                          7797mm         ADROUT 
00004C40  103C 0006               7798mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C44  3212                    7799mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C46  E049                    7800mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C48  E849                    7801mm         LSR.W   #4, D1      
00004C4A                          7802mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C4A  0C01 0009               7803mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C4E  6E00 000A               7804mmm         BGT     ALPHA_616
00004C52  0601 0030               7805mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C56  6000 0006               7806mmm         BRA     DONE_616
00004C5A  0601 0037               7807mmm ALPHA_616: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C5E  4E71                    7808mmm DONE_616: NOP
00004C60                          7809mmm         ENDM
00004C60  4E4F                    7810mm         TRAP    #15         ; EXECUTE OUTPUT
00004C62                          7811mm         
00004C62  3212                    7812mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C64  E949                    7813mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004C66  E049                    7814mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C68  E849                    7815mm         LSR.W   #4, D1      
00004C6A                          7816mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C6A  0C01 0009               7817mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C6E  6E00 000A               7818mmm         BGT     ALPHA_617
00004C72  0601 0030               7819mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C76  6000 0006               7820mmm         BRA     DONE_617
00004C7A  0601 0037               7821mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C7E  4E71                    7822mmm DONE_617: NOP
00004C80                          7823mmm         ENDM
00004C80  4E4F                    7824mm         TRAP    #15         ; EXECUTE OUTPUT
00004C82                          7825mm         
00004C82  3212                    7826mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C84  E149                    7827mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C86  E049                    7828mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C88  E849                    7829mm         LSR.W   #4, D1      
00004C8A                          7830mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C8A  0C01 0009               7831mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C8E  6E00 000A               7832mmm         BGT     ALPHA_618
00004C92  0601 0030               7833mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C96  6000 0006               7834mmm         BRA     DONE_618
00004C9A  0601 0037               7835mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C9E  4E71                    7836mmm DONE_618: NOP
00004CA0                          7837mmm         ENDM
00004CA0  4E4F                    7838mm         TRAP    #15         ; EXECUTE OUTPUT
00004CA2                          7839mm         
00004CA2  3212                    7840mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CA4  E149                    7841mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004CA6  E949                    7842mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004CA8  E049                    7843mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CAA  E849                    7844mm         LSR.W   #4, D1      
00004CAC                          7845mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CAC  0C01 0009               7846mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CB0  6E00 000A               7847mmm         BGT     ALPHA_619
00004CB4  0601 0030               7848mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CB8  6000 0006               7849mmm         BRA     DONE_619
00004CBC  0601 0037               7850mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CC0  4E71                    7851mmm DONE_619: NOP
00004CC2                          7852mmm         ENDM
00004CC2  4E4F                    7853mm         TRAP    #15         ; EXECUTE OUTPUT       
00004CC4                          7854mm         ENDM 
00004CC4  361A                    7855m         MOVE.W  (A2)+, D3
00004CC6                          7856mm         ADROUT
00004CC6  103C 0006               7857mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004CCA  3212                    7858mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CCC  E049                    7859mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CCE  E849                    7860mm         LSR.W   #4, D1      
00004CD0                          7861mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CD0  0C01 0009               7862mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CD4  6E00 000A               7863mmm         BGT     ALPHA_621
00004CD8  0601 0030               7864mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CDC  6000 0006               7865mmm         BRA     DONE_621
00004CE0  0601 0037               7866mmm ALPHA_621: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CE4  4E71                    7867mmm DONE_621: NOP
00004CE6                          7868mmm         ENDM
00004CE6  4E4F                    7869mm         TRAP    #15         ; EXECUTE OUTPUT
00004CE8                          7870mm         
00004CE8  3212                    7871mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CEA  E949                    7872mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004CEC  E049                    7873mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CEE  E849                    7874mm         LSR.W   #4, D1      
00004CF0                          7875mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CF0  0C01 0009               7876mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CF4  6E00 000A               7877mmm         BGT     ALPHA_622
00004CF8  0601 0030               7878mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CFC  6000 0006               7879mmm         BRA     DONE_622
00004D00  0601 0037               7880mmm ALPHA_622: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D04  4E71                    7881mmm DONE_622: NOP
00004D06                          7882mmm         ENDM
00004D06  4E4F                    7883mm         TRAP    #15         ; EXECUTE OUTPUT
00004D08                          7884mm         
00004D08  3212                    7885mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D0A  E149                    7886mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D0C  E049                    7887mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D0E  E849                    7888mm         LSR.W   #4, D1      
00004D10                          7889mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D10  0C01 0009               7890mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D14  6E00 000A               7891mmm         BGT     ALPHA_623
00004D18  0601 0030               7892mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D1C  6000 0006               7893mmm         BRA     DONE_623
00004D20  0601 0037               7894mmm ALPHA_623: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D24  4E71                    7895mmm DONE_623: NOP
00004D26                          7896mmm         ENDM
00004D26  4E4F                    7897mm         TRAP    #15         ; EXECUTE OUTPUT
00004D28                          7898mm         
00004D28  3212                    7899mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D2A  E149                    7900mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D2C  E949                    7901mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004D2E  E049                    7902mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D30  E849                    7903mm         LSR.W   #4, D1      
00004D32                          7904mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D32  0C01 0009               7905mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D36  6E00 000A               7906mmm         BGT     ALPHA_624
00004D3A  0601 0030               7907mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D3E  6000 0006               7908mmm         BRA     DONE_624
00004D42  0601 0037               7909mmm ALPHA_624: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D46  4E71                    7910mmm DONE_624: NOP
00004D48                          7911mmm         ENDM
00004D48  4E4F                    7912mm         TRAP    #15         ; EXECUTE OUTPUT       
00004D4A                          7913mm         ENDM 
00004D4A  3605                    7914m         MOVE.W  D5, D3
00004D4C                          7915m 
00004D4C                          7916m COMPLETE_562:  ; OPCODE HAS BEEN VERIFIED
00004D4C                          7917m         ENDM
00004D4C                          7918m         printComma
00004D4C  43F8 00D4               7919m         LEA     OCOMMA, A1     
00004D50  103C 000E               7920m         MOVE.B  #14,D0          
00004D54  4E4F                    7921m         TRAP    #15
00004D56                          7922m         ENDM
00004D56                          7923m         printAnDest     D5
00004D56  3205                    7924m         MOVE.W  D5, D1
00004D58  E949                    7925m         LSL     #$04, D1
00004D5A  E049                    7926m         LSR     #$08, D1
00004D5C  EA49                    7927m         LSR     #$05, D1
00004D5E  43F8 00CE               7928m         LEA     OAN, A1     
00004D62  103C 000E               7929m         MOVE.B  #14,D0          
00004D66  4E4F                    7930m         TRAP    #15
00004D68  103C 0003               7931m         MOVE.B  #3,D0          
00004D6C  4E4F                    7932m         TRAP    #15
00004D6E                          7933m         ENDM
00004D6E  4E75                    7934          RTS                 ; Return from decodeLEA subroutine
00004D70                          7935  
00004D70                          7936  
00004D70                          7937  ; ------------------------------------------------------------
00004D70                          7938  ; 9. "decodeAND" subroutine
00004D70                          7939  ; AUTHOR
00004D70                          7940  ;
00004D70                          7941  ; TODO: DESCRIPTION
00004D70                          7942  ; ------------------------------------------------------------
00004D70                          7943  decodeAND:
00004D70                          7944m         verifyOpcode    pAND, (A2)
00004D70  43F8 0183               7945m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004D74  3612                    7946m         MOVE.W  (A2), D3      ; INPUT VALUE
00004D76  123C 000F               7947m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004D7A                          7948m         
00004D7A                          7949m LOOP_627: 
00004D7A  0C11 0030               7950m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004D7E  6700 000E               7951m         BEQ     CHECKFOR0_627
00004D82  0C11 0031               7952m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004D86  6700 0010               7953m         BEQ     CHECKFOR1_627
00004D8A  6000 0012               7954m         BRA     NEXT_627      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004D8E                          7955m         
00004D8E                          7956m CHECKFOR0_627: 
00004D8E  0303                    7957m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004D90  6600 23AA               7958m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004D94  6000 0008               7959m         BRA     NEXT_627
00004D98                          7960m 
00004D98                          7961m CHECKFOR1_627:
00004D98  0303                    7962m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004D9A  6700 23A0               7963m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004D9E                          7964m 
00004D9E                          7965m NEXT_627: 
00004D9E  B23C 0000               7966m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004DA2  6700 0008               7967m         BEQ     COMPLETE_627  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004DA6  5301                    7968m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004DA8  1819                    7969m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004DAA  60CE                    7970m         BRA     LOOP_627      ; BEGIN LOOP AGAIN
00004DAC                          7971m 
00004DAC                          7972m COMPLETE_627:  ; OPCODE HAS BEEN VERIFIED
00004DAC                          7973m         ENDM
00004DAC  43F8 0090               7974          LEA     oAND, A1     
00004DB0  103C 000E               7975          MOVE.B  #14,D0          
00004DB4  4E4F                    7976          TRAP    #15
00004DB6                          7977m         printOpMode     (A2)
00004DB6  3612                    7978m         MOVE.W  (A2), D3      
00004DB8  123C 0008               7979m         MOVE.B  #8, D1    
00004DBC  4246                    7980m         CLR     D6
00004DBE  4247                    7981m         CLR     D7
00004DC0                          7982m CHECKFORDESTDN_628: 
00004DC0  0303                    7983m         BTST    D1, D3      
00004DC2  6600 004C               7984m         BNE     CHECKFORSRCDN_628
00004DC6  4EB9 00004E9E           7985m         JSR     NEXT_628
00004DCC  1C3C 0001               7986m         MOVE.B  #$1, D6
00004DD0  0303                    7987m         BTST    D1, D3      
00004DD2  6700 0014               7988m         BEQ     DESTDNW_628
00004DD6                          7989m DESTDNL_628:        
00004DD6  43F8 00C8               7990m         LEA     OLSIZE, A1     
00004DDA  103C 000E               7991m         MOVE.B  #14,D0          
00004DDE  4E4F                    7992m         TRAP    #15
00004DE0  1E3C 0001               7993m         MOVE.B  #$1, D7
00004DE4  6000 00BC               7994m         BRA     COMPLETE_628 
00004DE8                          7995m DESTDNW_628: 
00004DE8  4EB9 00004E9E           7996m         JSR     NEXT_628
00004DEE  0303                    7997m         BTST    D1, D3      
00004DF0  6700 0010               7998m         BEQ     DESTDNB_628
00004DF4  43F8 00C4               7999m         LEA     OWSIZE, A1     
00004DF8  103C 000E               8000m         MOVE.B  #14,D0          
00004DFC  4E4F                    8001m         TRAP    #15
00004DFE  6000 00A2               8002m         BRA     COMPLETE_628 
00004E02                          8003m DESTDNB_628: 
00004E02  43F8 00C0               8004m         LEA     OBSIZE, A1     
00004E06  103C 000E               8005m         MOVE.B  #14,D0          
00004E0A  4E4F                    8006m         TRAP    #15
00004E0C  6000 0094               8007m         BRA     COMPLETE_628 
00004E10                          8008m CHECKFORSRCDN_628: 
00004E10  4EB9 00004E9E           8009m         JSR     NEXT_628
00004E16  0303                    8010m         BTST    D1, D3      
00004E18  6700 002C               8011m         BEQ     SRCDNW_628
00004E1C                          8012m SRCDNL_628:        
00004E1C  43F8 00C8               8013m         LEA     OLSIZE, A1     
00004E20  103C 000E               8014m         MOVE.B  #14,D0          
00004E24  4E4F                    8015m         TRAP    #15
00004E26  1E3C 0001               8016m         MOVE.B  #$1, D7
00004E2A                          8017mm         PRINTDNDEST D3
00004E2A  3203                    8018mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E2C  E949                    8019mm         LSL     #$04, D1
00004E2E  E049                    8020mm         LSR     #$08, D1
00004E30  EA49                    8021mm         LSR     #$05, D1
00004E32  43F8 00CC               8022mm         LEA     ODN, A1     
00004E36  103C 000E               8023mm         MOVE.B  #14,D0          
00004E3A  4E4F                    8024mm         TRAP    #15
00004E3C  103C 0003               8025mm         MOVE.B  #3,D0          
00004E40  4E4F                    8026mm         TRAP    #15
00004E42                          8027mm         ENDM
00004E42  6000 005E               8028m         BRA     COMPLETE_628 
00004E46                          8029m SRCDNW_628:
00004E46  4EB9 00004E9E           8030m         JSR     NEXT_628
00004E4C  0303                    8031m         BTST    D1, D3     
00004E4E  6700 0028               8032m         BEQ     SRCDNB_628
00004E52  43F8 00C4               8033m         LEA     OWSIZE, A1     
00004E56  103C 000E               8034m         MOVE.B  #14,D0          
00004E5A  4E4F                    8035m         TRAP    #15
00004E5C                          8036mm         PRINTDNDEST D3
00004E5C  3203                    8037mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E5E  E949                    8038mm         LSL     #$04, D1
00004E60  E049                    8039mm         LSR     #$08, D1
00004E62  EA49                    8040mm         LSR     #$05, D1
00004E64  43F8 00CC               8041mm         LEA     ODN, A1     
00004E68  103C 000E               8042mm         MOVE.B  #14,D0          
00004E6C  4E4F                    8043mm         TRAP    #15
00004E6E  103C 0003               8044mm         MOVE.B  #3,D0          
00004E72  4E4F                    8045mm         TRAP    #15
00004E74                          8046mm         ENDM
00004E74  6000 002C               8047m         BRA     COMPLETE_628 
00004E78                          8048m SRCDNB_628: 
00004E78  43F8 00C0               8049m         LEA     OBSIZE, A1     
00004E7C  103C 000E               8050m         MOVE.B  #14,D0          
00004E80  4E4F                    8051m         TRAP    #15
00004E82                          8052mm         PRINTDNDEST D3
00004E82  3203                    8053mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E84  E949                    8054mm         LSL     #$04, D1
00004E86  E049                    8055mm         LSR     #$08, D1
00004E88  EA49                    8056mm         LSR     #$05, D1
00004E8A  43F8 00CC               8057mm         LEA     ODN, A1     
00004E8E  103C 000E               8058mm         MOVE.B  #14,D0          
00004E92  4E4F                    8059mm         TRAP    #15
00004E94  103C 0003               8060mm         MOVE.B  #3,D0          
00004E98  4E4F                    8061mm         TRAP    #15
00004E9A                          8062mm         ENDM
00004E9A  6000 0006               8063m         BRA     COMPLETE_628 
00004E9E                          8064m 
00004E9E                          8065m NEXT_628:
00004E9E  5301                    8066m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004EA0  4E75                    8067m         RTS                
00004EA2                          8068m 
00004EA2                          8069m COMPLETE_628:  ; OPCODE HAS BEEN VERIFIED
00004EA2                          8070m         ENDM
00004EA2  BC3C 0001               8071          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004EA6  6700 05F8               8072          BEQ     decodeAndDestOp
00004EAA                          8073m         printComma
00004EAA  43F8 00D4               8074m         LEA     OCOMMA, A1     
00004EAE  103C 000E               8075m         MOVE.B  #14,D0          
00004EB2  4E4F                    8076m         TRAP    #15
00004EB4                          8077m         ENDM
00004EB4                          8078m         prepareAdrMode  #$1, (A2)
00004EB4  3C3C 0001               8079m         MOVE.W  #$1, D6      ; INPUT VALUE
00004EB8  3212                    8080m         MOVE.W  (A2), D1
00004EBA  BC3C 0001               8081m         CMP.B   #$01, D6
00004EBE  6700 000C               8082m         BEQ     ADRSOURCE_633    
00004EC2                          8083m ADRDEST_633:
00004EC2  EF49                    8084m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004EC4  E049                    8085m         LSR     #$08, D1
00004EC6  EA49                    8086m         LSR     #$05, D1
00004EC8  6000 000A               8087m         BRA     COMPLETE_633 
00004ECC                          8088m ADRSOURCE_633:                
00004ECC  E149                    8089m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004ECE  E549                    8090m         LSL     #$02, D1
00004ED0  E049                    8091m         LSR     #$08, D1
00004ED2  EA49                    8092m         LSR     #$05, D1
00004ED4                          8093m COMPLETE_633:  ; OPCODE HAS BEEN VERIFIED
00004ED4                          8094m         ENDM        
00004ED4                          8095m         decodeAdrMode   (A2), D1
00004ED4  3612                    8096m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004ED6  3201                    8097m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004ED8                          8098m 
00004ED8  B23C 0001               8099m         CMP.B   #$01, D1
00004EDC  6700 0066               8100m         BEQ     ADRREGDIRECT_634    
00004EE0  B23C 0002               8101m         CMP.B   #$02, D1
00004EE4  6700 00A0               8102m         BEQ     ADRREGINDIRECT_634  
00004EE8  B23C 0003               8103m         CMP.B   #$03, D1
00004EEC  6700 0102               8104m         BEQ     ADRREGPOSTINC_634  
00004EF0  B23C 0004               8105m         CMP.B   #$04, D1
00004EF4  6700 0178               8106m         BEQ     ADRREGPREDEC_634
00004EF8  B23C 0007               8107m         CMP.B   #$07, D1
00004EFC  6700 01EE               8108m         BEQ     ADRABSOLUTE_634    
00004F00                          8109m         
00004F00                          8110m DATAREGDIRECT_634: 
00004F00  BC3C 0001               8111m         CMP.B   #$01, D6
00004F04  6700 001E               8112m         BEQ     DATAREGDIRECTSRC_634   
00004F08                          8113m DATAREGDIRECTDEST_634: 
00004F08                          8114mm         PRINTDNDEST D3 
00004F08  3203                    8115mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004F0A  E949                    8116mm         LSL     #$04, D1
00004F0C  E049                    8117mm         LSR     #$08, D1
00004F0E  EA49                    8118mm         LSR     #$05, D1
00004F10  43F8 00CC               8119mm         LEA     ODN, A1     
00004F14  103C 000E               8120mm         MOVE.B  #14,D0          
00004F18  4E4F                    8121mm         TRAP    #15
00004F1A  103C 0003               8122mm         MOVE.B  #3,D0          
00004F1E  4E4F                    8123mm         TRAP    #15
00004F20                          8124mm         ENDM
00004F20  6000 057A               8125m         BRA     COMPLETE_634 
00004F24                          8126m DATAREGDIRECTSRC_634: 
00004F24                          8127mm         PRINTDNSRC D3 
00004F24  4281                    8128mm         CLR.L   D1
00004F26  3203                    8129mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F28  E149                    8130mm         LSL     #$08, D1
00004F2A  EB49                    8131mm         LSL     #$05, D1
00004F2C  E049                    8132mm         LSR     #$08, D1
00004F2E  EA49                    8133mm         LSR     #$05, D1
00004F30  43F8 00CC               8134mm         LEA     ODN, A1     
00004F34  103C 000E               8135mm         MOVE.B  #14,D0          
00004F38  4E4F                    8136mm         TRAP    #15
00004F3A  103C 0003               8137mm         MOVE.B  #3,D0          
00004F3E  4E4F                    8138mm         TRAP    #15
00004F40                          8139mm         ENDM
00004F40  6000 055A               8140m         BRA     COMPLETE_634   
00004F44                          8141m         
00004F44                          8142m ADRREGDIRECT_634: 
00004F44  BC3C 0001               8143m         CMP.B   #$01, D6
00004F48  6700 001E               8144m         BEQ     ADRREGDIRECTSRC_634   
00004F4C                          8145m ADRREGDIRECTDEST_634:
00004F4C                          8146mm         PRINTANDEST D3
00004F4C  3203                    8147mm         MOVE.W  D3, D1
00004F4E  E949                    8148mm         LSL     #$04, D1
00004F50  E049                    8149mm         LSR     #$08, D1
00004F52  EA49                    8150mm         LSR     #$05, D1
00004F54  43F8 00CE               8151mm         LEA     OAN, A1     
00004F58  103C 000E               8152mm         MOVE.B  #14,D0          
00004F5C  4E4F                    8153mm         TRAP    #15
00004F5E  103C 0003               8154mm         MOVE.B  #3,D0          
00004F62  4E4F                    8155mm         TRAP    #15
00004F64                          8156mm         ENDM
00004F64  6000 0536               8157m         BRA     COMPLETE_634   
00004F68                          8158m ADRREGDIRECTSRC_634:
00004F68                          8159mm         PRINTANSRC D3
00004F68  3203                    8160mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F6A  E149                    8161mm         LSL     #$08, D1
00004F6C  EB49                    8162mm         LSL     #$05, D1
00004F6E  E049                    8163mm         LSR     #$08, D1
00004F70  EA49                    8164mm         LSR     #$05, D1
00004F72  43F8 00CE               8165mm         LEA     OAN, A1     
00004F76  103C 000E               8166mm         MOVE.B  #14,D0          
00004F7A  4E4F                    8167mm         TRAP    #15
00004F7C  103C 0003               8168mm         MOVE.B  #3,D0          
00004F80  4E4F                    8169mm         TRAP    #15
00004F82                          8170mm         ENDM
00004F82  6000 0518               8171m         BRA     COMPLETE_634   
00004F86                          8172m        
00004F86                          8173m ADRREGINDIRECT_634:   
00004F86  BC3C 0001               8174m         CMP.B   #$01, D6
00004F8A  6700 0032               8175m         BEQ     ADRREGINDIRECTSRC_634   
00004F8E                          8176m ADRREGINDIRECTDEST_634:
00004F8E                          8177mm         PRINTLB
00004F8E  43F8 00D0               8178mm         LEA     OLB, A1     
00004F92  103C 000E               8179mm         MOVE.B  #14,D0          
00004F96  4E4F                    8180mm         TRAP    #15
00004F98                          8181mm         ENDM
00004F98                          8182mm         PRINTANDEST D3  
00004F98  3203                    8183mm         MOVE.W  D3, D1
00004F9A  E949                    8184mm         LSL     #$04, D1
00004F9C  E049                    8185mm         LSR     #$08, D1
00004F9E  EA49                    8186mm         LSR     #$05, D1
00004FA0  43F8 00CE               8187mm         LEA     OAN, A1     
00004FA4  103C 000E               8188mm         MOVE.B  #14,D0          
00004FA8  4E4F                    8189mm         TRAP    #15
00004FAA  103C 0003               8190mm         MOVE.B  #3,D0          
00004FAE  4E4F                    8191mm         TRAP    #15
00004FB0                          8192mm         ENDM
00004FB0                          8193mm         PRINTRB
00004FB0  43F8 00D2               8194mm         LEA     ORB, A1     
00004FB4  103C 000E               8195mm         MOVE.B  #14,D0          
00004FB8  4E4F                    8196mm         TRAP    #15
00004FBA                          8197mm         ENDM
00004FBA  6000 04E0               8198m         BRA     COMPLETE_634     
00004FBE                          8199m ADRREGINDIRECTSRC_634:   
00004FBE                          8200mm         PRINTLB
00004FBE  43F8 00D0               8201mm         LEA     OLB, A1     
00004FC2  103C 000E               8202mm         MOVE.B  #14,D0          
00004FC6  4E4F                    8203mm         TRAP    #15
00004FC8                          8204mm         ENDM
00004FC8                          8205mm         PRINTANSRC D3  
00004FC8  3203                    8206mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FCA  E149                    8207mm         LSL     #$08, D1
00004FCC  EB49                    8208mm         LSL     #$05, D1
00004FCE  E049                    8209mm         LSR     #$08, D1
00004FD0  EA49                    8210mm         LSR     #$05, D1
00004FD2  43F8 00CE               8211mm         LEA     OAN, A1     
00004FD6  103C 000E               8212mm         MOVE.B  #14,D0          
00004FDA  4E4F                    8213mm         TRAP    #15
00004FDC  103C 0003               8214mm         MOVE.B  #3,D0          
00004FE0  4E4F                    8215mm         TRAP    #15
00004FE2                          8216mm         ENDM
00004FE2                          8217mm         PRINTRB
00004FE2  43F8 00D2               8218mm         LEA     ORB, A1     
00004FE6  103C 000E               8219mm         MOVE.B  #14,D0          
00004FEA  4E4F                    8220mm         TRAP    #15
00004FEC                          8221mm         ENDM
00004FEC  6000 04AE               8222m         BRA     COMPLETE_634   
00004FF0                          8223m         
00004FF0                          8224m ADRREGPOSTINC_634:   
00004FF0  BC3C 0001               8225m         CMP.B   #$01, D6
00004FF4  6700 003C               8226m         BEQ     ADRREGPOSTINCSRC_634   
00004FF8                          8227m ADRREGPOSTINCDEST_634: 
00004FF8                          8228mm         PRINTLB
00004FF8  43F8 00D0               8229mm         LEA     OLB, A1     
00004FFC  103C 000E               8230mm         MOVE.B  #14,D0          
00005000  4E4F                    8231mm         TRAP    #15
00005002                          8232mm         ENDM
00005002                          8233mm         PRINTANDEST D3  
00005002  3203                    8234mm         MOVE.W  D3, D1
00005004  E949                    8235mm         LSL     #$04, D1
00005006  E049                    8236mm         LSR     #$08, D1
00005008  EA49                    8237mm         LSR     #$05, D1
0000500A  43F8 00CE               8238mm         LEA     OAN, A1     
0000500E  103C 000E               8239mm         MOVE.B  #14,D0          
00005012  4E4F                    8240mm         TRAP    #15
00005014  103C 0003               8241mm         MOVE.B  #3,D0          
00005018  4E4F                    8242mm         TRAP    #15
0000501A                          8243mm         ENDM
0000501A                          8244mm         PRINTRB
0000501A  43F8 00D2               8245mm         LEA     ORB, A1     
0000501E  103C 000E               8246mm         MOVE.B  #14,D0          
00005022  4E4F                    8247mm         TRAP    #15
00005024                          8248mm         ENDM
00005024                          8249mm         PRINTPI
00005024  43F8 00D9               8250mm         LEA     OPSTINC, A1     
00005028  103C 000E               8251mm         MOVE.B  #14,D0          
0000502C  4E4F                    8252mm         TRAP    #15
0000502E                          8253mm         ENDM
0000502E  6000 046C               8254m         BRA     COMPLETE_634  
00005032                          8255m ADRREGPOSTINCSRC_634:           
00005032                          8256mm         PRINTLB
00005032  43F8 00D0               8257mm         LEA     OLB, A1     
00005036  103C 000E               8258mm         MOVE.B  #14,D0          
0000503A  4E4F                    8259mm         TRAP    #15
0000503C                          8260mm         ENDM
0000503C                          8261mm         PRINTANSRC D3  
0000503C  3203                    8262mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000503E  E149                    8263mm         LSL     #$08, D1
00005040  EB49                    8264mm         LSL     #$05, D1
00005042  E049                    8265mm         LSR     #$08, D1
00005044  EA49                    8266mm         LSR     #$05, D1
00005046  43F8 00CE               8267mm         LEA     OAN, A1     
0000504A  103C 000E               8268mm         MOVE.B  #14,D0          
0000504E  4E4F                    8269mm         TRAP    #15
00005050  103C 0003               8270mm         MOVE.B  #3,D0          
00005054  4E4F                    8271mm         TRAP    #15
00005056                          8272mm         ENDM
00005056                          8273mm         PRINTRB
00005056  43F8 00D2               8274mm         LEA     ORB, A1     
0000505A  103C 000E               8275mm         MOVE.B  #14,D0          
0000505E  4E4F                    8276mm         TRAP    #15
00005060                          8277mm         ENDM
00005060                          8278mm         PRINTPI
00005060  43F8 00D9               8279mm         LEA     OPSTINC, A1     
00005064  103C 000E               8280mm         MOVE.B  #14,D0          
00005068  4E4F                    8281mm         TRAP    #15
0000506A                          8282mm         ENDM
0000506A  6000 0430               8283m         BRA     COMPLETE_634  
0000506E                          8284m ADRREGPREDEC_634: 
0000506E  BC3C 0001               8285m         CMP.B   #$01, D6
00005072  6700 003C               8286m         BEQ     ADRREGPREDECSRC_634   
00005076                          8287m ADRREGPREDECDEST_634:
00005076                          8288mm         PRINTPD  
00005076  43F8 00D7               8289mm         LEA     OPREDEC, A1     
0000507A  103C 000E               8290mm         MOVE.B  #14,D0          
0000507E  4E4F                    8291mm         TRAP    #15
00005080                          8292mm         ENDM
00005080                          8293mm         PRINTLB
00005080  43F8 00D0               8294mm         LEA     OLB, A1     
00005084  103C 000E               8295mm         MOVE.B  #14,D0          
00005088  4E4F                    8296mm         TRAP    #15
0000508A                          8297mm         ENDM
0000508A                          8298mm         PRINTANDEST D3  
0000508A  3203                    8299mm         MOVE.W  D3, D1
0000508C  E949                    8300mm         LSL     #$04, D1
0000508E  E049                    8301mm         LSR     #$08, D1
00005090  EA49                    8302mm         LSR     #$05, D1
00005092  43F8 00CE               8303mm         LEA     OAN, A1     
00005096  103C 000E               8304mm         MOVE.B  #14,D0          
0000509A  4E4F                    8305mm         TRAP    #15
0000509C  103C 0003               8306mm         MOVE.B  #3,D0          
000050A0  4E4F                    8307mm         TRAP    #15
000050A2                          8308mm         ENDM
000050A2                          8309mm         PRINTRB
000050A2  43F8 00D2               8310mm         LEA     ORB, A1     
000050A6  103C 000E               8311mm         MOVE.B  #14,D0          
000050AA  4E4F                    8312mm         TRAP    #15
000050AC                          8313mm         ENDM
000050AC  6000 03EE               8314m         BRA     COMPLETE_634   
000050B0                          8315m ADRREGPREDECSRC_634: 
000050B0                          8316mm         PRINTPD  
000050B0  43F8 00D7               8317mm         LEA     OPREDEC, A1     
000050B4  103C 000E               8318mm         MOVE.B  #14,D0          
000050B8  4E4F                    8319mm         TRAP    #15
000050BA                          8320mm         ENDM
000050BA                          8321mm         PRINTLB
000050BA  43F8 00D0               8322mm         LEA     OLB, A1     
000050BE  103C 000E               8323mm         MOVE.B  #14,D0          
000050C2  4E4F                    8324mm         TRAP    #15
000050C4                          8325mm         ENDM
000050C4                          8326mm         PRINTANSRC D3  
000050C4  3203                    8327mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000050C6  E149                    8328mm         LSL     #$08, D1
000050C8  EB49                    8329mm         LSL     #$05, D1
000050CA  E049                    8330mm         LSR     #$08, D1
000050CC  EA49                    8331mm         LSR     #$05, D1
000050CE  43F8 00CE               8332mm         LEA     OAN, A1     
000050D2  103C 000E               8333mm         MOVE.B  #14,D0          
000050D6  4E4F                    8334mm         TRAP    #15
000050D8  103C 0003               8335mm         MOVE.B  #3,D0          
000050DC  4E4F                    8336mm         TRAP    #15
000050DE                          8337mm         ENDM
000050DE                          8338mm         PRINTRB
000050DE  43F8 00D2               8339mm         LEA     ORB, A1     
000050E2  103C 000E               8340mm         MOVE.B  #14,D0          
000050E6  4E4F                    8341mm         TRAP    #15
000050E8                          8342mm         ENDM
000050E8  6000 03B2               8343m         BRA     COMPLETE_634
000050EC                          8344m        
000050EC                          8345m ADRABSOLUTE_634:
000050EC  BC3C 0001               8346m         CMP.B   #$01, D6
000050F0  6600 0018               8347m         BNE     ADRABSOLUTEDST_634 
000050F4                          8348m         
000050F4  3A03                    8349m         MOVE.W  D3, D5
000050F6  0803 0002               8350m         BTST    #2, D3
000050FA  6600 0024               8351m         BNE     ADRIMMEDIATE_634
000050FE  0803 0000               8352m         BTST    #0, D3
00005102  6600 0280               8353m         BNE     ADRABSOLUTEL_634
00005106  6000 01E6               8354m         BRA     ADRABSOLUTEW_634
0000510A                          8355m ADRABSOLUTEDST_634:
0000510A  3A03                    8356m         MOVE.W  D3, D5
0000510C  0803 000B               8357m         BTST    #$B, D3
00005110  6600 000E               8358m         BNE     ADRIMMEDIATE_634
00005114  0803 0009               8359m         BTST    #$09, D3
00005118  6600 026A               8360m         BNE     ADRABSOLUTEL_634
0000511C  6000 01D0               8361m         BRA     ADRABSOLUTEW_634
00005120                          8362m ADRIMMEDIATE_634:
00005120  BE3C 0001               8363m         CMP.B   #1, D7
00005124  6700 00A2               8364m         BEQ     ADRIMMEDIATEL_634
00005128                          8365m ADRIMMEDIATEW_634:
00005128  361A                    8366m         MOVE.W  (A2)+, D3
0000512A                          8367mm         PRINTHASH
0000512A  103C 0006               8368mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000512E  323C 0023               8369mm         MOVE.W  #35, D1     ; AN = SIGN
00005132  4E4F                    8370mm         TRAP    #15         ; OUTPUT = SIGN
00005134                          8371mm         ENDM
00005134                          8372mm         PRINTSIGN
00005134  103C 0006               8373mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005138  323C 0024               8374mm         MOVE.W  #36, D1     ; AN = SIGN
0000513C  4E4F                    8375mm         TRAP    #15         ; OUTPUT = SIGN
0000513E                          8376mm         ENDM
0000513E                          8377mm         ADROUT
0000513E  103C 0006               8378mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005142  3212                    8379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005144  E049                    8380mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005146  E849                    8381mm         LSR.W   #4, D1      
00005148                          8382mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005148  0C01 0009               8383mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000514C  6E00 000A               8384mmm         BGT     ALPHA_664
00005150  0601 0030               8385mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005154  6000 0006               8386mmm         BRA     DONE_664
00005158  0601 0037               8387mmm ALPHA_664: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000515C  4E71                    8388mmm DONE_664: NOP
0000515E                          8389mmm         ENDM
0000515E  4E4F                    8390mm         TRAP    #15         ; EXECUTE OUTPUT
00005160                          8391mm         
00005160  3212                    8392mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005162  E949                    8393mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005164  E049                    8394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005166  E849                    8395mm         LSR.W   #4, D1      
00005168                          8396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005168  0C01 0009               8397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000516C  6E00 000A               8398mmm         BGT     ALPHA_665
00005170  0601 0030               8399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005174  6000 0006               8400mmm         BRA     DONE_665
00005178  0601 0037               8401mmm ALPHA_665: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000517C  4E71                    8402mmm DONE_665: NOP
0000517E                          8403mmm         ENDM
0000517E  4E4F                    8404mm         TRAP    #15         ; EXECUTE OUTPUT
00005180                          8405mm         
00005180  3212                    8406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005182  E149                    8407mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005184  E049                    8408mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005186  E849                    8409mm         LSR.W   #4, D1      
00005188                          8410mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005188  0C01 0009               8411mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000518C  6E00 000A               8412mmm         BGT     ALPHA_666
00005190  0601 0030               8413mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005194  6000 0006               8414mmm         BRA     DONE_666
00005198  0601 0037               8415mmm ALPHA_666: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000519C  4E71                    8416mmm DONE_666: NOP
0000519E                          8417mmm         ENDM
0000519E  4E4F                    8418mm         TRAP    #15         ; EXECUTE OUTPUT
000051A0                          8419mm         
000051A0  3212                    8420mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051A2  E149                    8421mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051A4  E949                    8422mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000051A6  E049                    8423mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051A8  E849                    8424mm         LSR.W   #4, D1      
000051AA                          8425mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051AA  0C01 0009               8426mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051AE  6E00 000A               8427mmm         BGT     ALPHA_667
000051B2  0601 0030               8428mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051B6  6000 0006               8429mmm         BRA     DONE_667
000051BA  0601 0037               8430mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051BE  4E71                    8431mmm DONE_667: NOP
000051C0                          8432mmm         ENDM
000051C0  4E4F                    8433mm         TRAP    #15         ; EXECUTE OUTPUT       
000051C2                          8434mm         ENDM 
000051C2  3605                    8435m         MOVE.W  D5, D3
000051C4  6000 02D6               8436m         BRA     COMPLETE_634
000051C8                          8437m ADRIMMEDIATEL_634:
000051C8  361A                    8438m         MOVE.W  (A2)+, D3
000051CA                          8439mm         PRINTHASH
000051CA  103C 0006               8440mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051CE  323C 0023               8441mm         MOVE.W  #35, D1     ; AN = SIGN
000051D2  4E4F                    8442mm         TRAP    #15         ; OUTPUT = SIGN
000051D4                          8443mm         ENDM
000051D4                          8444mm         PRINTSIGN
000051D4  103C 0006               8445mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051D8  323C 0024               8446mm         MOVE.W  #36, D1     ; AN = SIGN
000051DC  4E4F                    8447mm         TRAP    #15         ; OUTPUT = SIGN
000051DE                          8448mm         ENDM
000051DE                          8449mm         ADROUT 
000051DE  103C 0006               8450mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051E2  3212                    8451mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051E4  E049                    8452mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051E6  E849                    8453mm         LSR.W   #4, D1      
000051E8                          8454mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051E8  0C01 0009               8455mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051EC  6E00 000A               8456mmm         BGT     ALPHA_671
000051F0  0601 0030               8457mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051F4  6000 0006               8458mmm         BRA     DONE_671
000051F8  0601 0037               8459mmm ALPHA_671: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051FC  4E71                    8460mmm DONE_671: NOP
000051FE                          8461mmm         ENDM
000051FE  4E4F                    8462mm         TRAP    #15         ; EXECUTE OUTPUT
00005200                          8463mm         
00005200  3212                    8464mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005202  E949                    8465mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005204  E049                    8466mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005206  E849                    8467mm         LSR.W   #4, D1      
00005208                          8468mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005208  0C01 0009               8469mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000520C  6E00 000A               8470mmm         BGT     ALPHA_672
00005210  0601 0030               8471mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005214  6000 0006               8472mmm         BRA     DONE_672
00005218  0601 0037               8473mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000521C  4E71                    8474mmm DONE_672: NOP
0000521E                          8475mmm         ENDM
0000521E  4E4F                    8476mm         TRAP    #15         ; EXECUTE OUTPUT
00005220                          8477mm         
00005220  3212                    8478mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005222  E149                    8479mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005224  E049                    8480mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005226  E849                    8481mm         LSR.W   #4, D1      
00005228                          8482mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005228  0C01 0009               8483mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000522C  6E00 000A               8484mmm         BGT     ALPHA_673
00005230  0601 0030               8485mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005234  6000 0006               8486mmm         BRA     DONE_673
00005238  0601 0037               8487mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000523C  4E71                    8488mmm DONE_673: NOP
0000523E                          8489mmm         ENDM
0000523E  4E4F                    8490mm         TRAP    #15         ; EXECUTE OUTPUT
00005240                          8491mm         
00005240  3212                    8492mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005242  E149                    8493mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005244  E949                    8494mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005246  E049                    8495mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005248  E849                    8496mm         LSR.W   #4, D1      
0000524A                          8497mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000524A  0C01 0009               8498mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000524E  6E00 000A               8499mmm         BGT     ALPHA_674
00005252  0601 0030               8500mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005256  6000 0006               8501mmm         BRA     DONE_674
0000525A  0601 0037               8502mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000525E  4E71                    8503mmm DONE_674: NOP
00005260                          8504mmm         ENDM
00005260  4E4F                    8505mm         TRAP    #15         ; EXECUTE OUTPUT       
00005262                          8506mm         ENDM 
00005262  361A                    8507m         MOVE.W  (A2)+, D3
00005264                          8508mm         ADROUT
00005264  103C 0006               8509mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005268  3212                    8510mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000526A  E049                    8511mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000526C  E849                    8512mm         LSR.W   #4, D1      
0000526E                          8513mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000526E  0C01 0009               8514mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005272  6E00 000A               8515mmm         BGT     ALPHA_676
00005276  0601 0030               8516mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000527A  6000 0006               8517mmm         BRA     DONE_676
0000527E  0601 0037               8518mmm ALPHA_676: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005282  4E71                    8519mmm DONE_676: NOP
00005284                          8520mmm         ENDM
00005284  4E4F                    8521mm         TRAP    #15         ; EXECUTE OUTPUT
00005286                          8522mm         
00005286  3212                    8523mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005288  E949                    8524mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000528A  E049                    8525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000528C  E849                    8526mm         LSR.W   #4, D1      
0000528E                          8527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000528E  0C01 0009               8528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005292  6E00 000A               8529mmm         BGT     ALPHA_677
00005296  0601 0030               8530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000529A  6000 0006               8531mmm         BRA     DONE_677
0000529E  0601 0037               8532mmm ALPHA_677: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052A2  4E71                    8533mmm DONE_677: NOP
000052A4                          8534mmm         ENDM
000052A4  4E4F                    8535mm         TRAP    #15         ; EXECUTE OUTPUT
000052A6                          8536mm         
000052A6  3212                    8537mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052A8  E149                    8538mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052AA  E049                    8539mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052AC  E849                    8540mm         LSR.W   #4, D1      
000052AE                          8541mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052AE  0C01 0009               8542mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052B2  6E00 000A               8543mmm         BGT     ALPHA_678
000052B6  0601 0030               8544mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052BA  6000 0006               8545mmm         BRA     DONE_678
000052BE  0601 0037               8546mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052C2  4E71                    8547mmm DONE_678: NOP
000052C4                          8548mmm         ENDM
000052C4  4E4F                    8549mm         TRAP    #15         ; EXECUTE OUTPUT
000052C6                          8550mm         
000052C6  3212                    8551mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052C8  E149                    8552mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052CA  E949                    8553mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052CC  E049                    8554mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052CE  E849                    8555mm         LSR.W   #4, D1      
000052D0                          8556mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052D0  0C01 0009               8557mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052D4  6E00 000A               8558mmm         BGT     ALPHA_679
000052D8  0601 0030               8559mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052DC  6000 0006               8560mmm         BRA     DONE_679
000052E0  0601 0037               8561mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052E4  4E71                    8562mmm DONE_679: NOP
000052E6                          8563mmm         ENDM
000052E6  4E4F                    8564mm         TRAP    #15         ; EXECUTE OUTPUT       
000052E8                          8565mm         ENDM 
000052E8  3605                    8566m         MOVE.W  D5, D3
000052EA  6000 01B0               8567m         BRA     COMPLETE_634 
000052EE                          8568m ADRABSOLUTEW_634:     
000052EE  361A                    8569m         MOVE.W  (A2)+, D3
000052F0                          8570mm         PRINTSIGN
000052F0  103C 0006               8571mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000052F4  323C 0024               8572mm         MOVE.W  #36, D1     ; AN = SIGN
000052F8  4E4F                    8573mm         TRAP    #15         ; OUTPUT = SIGN
000052FA                          8574mm         ENDM
000052FA                          8575mm         ADROUT
000052FA  103C 0006               8576mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000052FE  3212                    8577mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005300  E049                    8578mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005302  E849                    8579mm         LSR.W   #4, D1      
00005304                          8580mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005304  0C01 0009               8581mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005308  6E00 000A               8582mmm         BGT     ALPHA_682
0000530C  0601 0030               8583mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005310  6000 0006               8584mmm         BRA     DONE_682
00005314  0601 0037               8585mmm ALPHA_682: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005318  4E71                    8586mmm DONE_682: NOP
0000531A                          8587mmm         ENDM
0000531A  4E4F                    8588mm         TRAP    #15         ; EXECUTE OUTPUT
0000531C                          8589mm         
0000531C  3212                    8590mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000531E  E949                    8591mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005320  E049                    8592mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005322  E849                    8593mm         LSR.W   #4, D1      
00005324                          8594mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005324  0C01 0009               8595mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005328  6E00 000A               8596mmm         BGT     ALPHA_683
0000532C  0601 0030               8597mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005330  6000 0006               8598mmm         BRA     DONE_683
00005334  0601 0037               8599mmm ALPHA_683: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005338  4E71                    8600mmm DONE_683: NOP
0000533A                          8601mmm         ENDM
0000533A  4E4F                    8602mm         TRAP    #15         ; EXECUTE OUTPUT
0000533C                          8603mm         
0000533C  3212                    8604mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000533E  E149                    8605mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005340  E049                    8606mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005342  E849                    8607mm         LSR.W   #4, D1      
00005344                          8608mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005344  0C01 0009               8609mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005348  6E00 000A               8610mmm         BGT     ALPHA_684
0000534C  0601 0030               8611mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005350  6000 0006               8612mmm         BRA     DONE_684
00005354  0601 0037               8613mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005358  4E71                    8614mmm DONE_684: NOP
0000535A                          8615mmm         ENDM
0000535A  4E4F                    8616mm         TRAP    #15         ; EXECUTE OUTPUT
0000535C                          8617mm         
0000535C  3212                    8618mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000535E  E149                    8619mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005360  E949                    8620mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005362  E049                    8621mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005364  E849                    8622mm         LSR.W   #4, D1      
00005366                          8623mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005366  0C01 0009               8624mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000536A  6E00 000A               8625mmm         BGT     ALPHA_685
0000536E  0601 0030               8626mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005372  6000 0006               8627mmm         BRA     DONE_685
00005376  0601 0037               8628mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000537A  4E71                    8629mmm DONE_685: NOP
0000537C                          8630mmm         ENDM
0000537C  4E4F                    8631mm         TRAP    #15         ; EXECUTE OUTPUT       
0000537E                          8632mm         ENDM 
0000537E  3605                    8633m         MOVE.W  D5, D3
00005380  6000 011A               8634m         BRA     COMPLETE_634  
00005384                          8635m ADRABSOLUTEL_634:  
00005384  361A                    8636m         MOVE.W  (A2)+, D3
00005386                          8637mm         PRINTSIGN
00005386  103C 0006               8638mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000538A  323C 0024               8639mm         MOVE.W  #36, D1     ; AN = SIGN
0000538E  4E4F                    8640mm         TRAP    #15         ; OUTPUT = SIGN
00005390                          8641mm         ENDM
00005390                          8642mm         ADROUT 
00005390  103C 0006               8643mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005394  3212                    8644mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005396  E049                    8645mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005398  E849                    8646mm         LSR.W   #4, D1      
0000539A                          8647mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000539A  0C01 0009               8648mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000539E  6E00 000A               8649mmm         BGT     ALPHA_688
000053A2  0601 0030               8650mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053A6  6000 0006               8651mmm         BRA     DONE_688
000053AA  0601 0037               8652mmm ALPHA_688: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053AE  4E71                    8653mmm DONE_688: NOP
000053B0                          8654mmm         ENDM
000053B0  4E4F                    8655mm         TRAP    #15         ; EXECUTE OUTPUT
000053B2                          8656mm         
000053B2  3212                    8657mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053B4  E949                    8658mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000053B6  E049                    8659mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053B8  E849                    8660mm         LSR.W   #4, D1      
000053BA                          8661mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053BA  0C01 0009               8662mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053BE  6E00 000A               8663mmm         BGT     ALPHA_689
000053C2  0601 0030               8664mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053C6  6000 0006               8665mmm         BRA     DONE_689
000053CA  0601 0037               8666mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053CE  4E71                    8667mmm DONE_689: NOP
000053D0                          8668mmm         ENDM
000053D0  4E4F                    8669mm         TRAP    #15         ; EXECUTE OUTPUT
000053D2                          8670mm         
000053D2  3212                    8671mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053D4  E149                    8672mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000053D6  E049                    8673mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053D8  E849                    8674mm         LSR.W   #4, D1      
000053DA                          8675mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053DA  0C01 0009               8676mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053DE  6E00 000A               8677mmm         BGT     ALPHA_690
000053E2  0601 0030               8678mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053E6  6000 0006               8679mmm         BRA     DONE_690
000053EA  0601 0037               8680mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053EE  4E71                    8681mmm DONE_690: NOP
000053F0                          8682mmm         ENDM
000053F0  4E4F                    8683mm         TRAP    #15         ; EXECUTE OUTPUT
000053F2                          8684mm         
000053F2  3212                    8685mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053F4  E149                    8686mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000053F6  E949                    8687mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000053F8  E049                    8688mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053FA  E849                    8689mm         LSR.W   #4, D1      
000053FC                          8690mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053FC  0C01 0009               8691mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005400  6E00 000A               8692mmm         BGT     ALPHA_691
00005404  0601 0030               8693mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005408  6000 0006               8694mmm         BRA     DONE_691
0000540C  0601 0037               8695mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005410  4E71                    8696mmm DONE_691: NOP
00005412                          8697mmm         ENDM
00005412  4E4F                    8698mm         TRAP    #15         ; EXECUTE OUTPUT       
00005414                          8699mm         ENDM 
00005414  361A                    8700m         MOVE.W  (A2)+, D3
00005416                          8701mm         ADROUT
00005416  103C 0006               8702mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000541A  3212                    8703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000541C  E049                    8704mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000541E  E849                    8705mm         LSR.W   #4, D1      
00005420                          8706mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005420  0C01 0009               8707mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005424  6E00 000A               8708mmm         BGT     ALPHA_693
00005428  0601 0030               8709mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000542C  6000 0006               8710mmm         BRA     DONE_693
00005430  0601 0037               8711mmm ALPHA_693: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005434  4E71                    8712mmm DONE_693: NOP
00005436                          8713mmm         ENDM
00005436  4E4F                    8714mm         TRAP    #15         ; EXECUTE OUTPUT
00005438                          8715mm         
00005438  3212                    8716mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000543A  E949                    8717mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000543C  E049                    8718mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000543E  E849                    8719mm         LSR.W   #4, D1      
00005440                          8720mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005440  0C01 0009               8721mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005444  6E00 000A               8722mmm         BGT     ALPHA_694
00005448  0601 0030               8723mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000544C  6000 0006               8724mmm         BRA     DONE_694
00005450  0601 0037               8725mmm ALPHA_694: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005454  4E71                    8726mmm DONE_694: NOP
00005456                          8727mmm         ENDM
00005456  4E4F                    8728mm         TRAP    #15         ; EXECUTE OUTPUT
00005458                          8729mm         
00005458  3212                    8730mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000545A  E149                    8731mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000545C  E049                    8732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000545E  E849                    8733mm         LSR.W   #4, D1      
00005460                          8734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005460  0C01 0009               8735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005464  6E00 000A               8736mmm         BGT     ALPHA_695
00005468  0601 0030               8737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000546C  6000 0006               8738mmm         BRA     DONE_695
00005470  0601 0037               8739mmm ALPHA_695: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005474  4E71                    8740mmm DONE_695: NOP
00005476                          8741mmm         ENDM
00005476  4E4F                    8742mm         TRAP    #15         ; EXECUTE OUTPUT
00005478                          8743mm         
00005478  3212                    8744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000547A  E149                    8745mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000547C  E949                    8746mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000547E  E049                    8747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005480  E849                    8748mm         LSR.W   #4, D1      
00005482                          8749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005482  0C01 0009               8750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005486  6E00 000A               8751mmm         BGT     ALPHA_696
0000548A  0601 0030               8752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000548E  6000 0006               8753mmm         BRA     DONE_696
00005492  0601 0037               8754mmm ALPHA_696: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005496  4E71                    8755mmm DONE_696: NOP
00005498                          8756mmm         ENDM
00005498  4E4F                    8757mm         TRAP    #15         ; EXECUTE OUTPUT       
0000549A                          8758mm         ENDM 
0000549A  3605                    8759m         MOVE.W  D5, D3
0000549C                          8760m 
0000549C                          8761m COMPLETE_634:  ; OPCODE HAS BEEN VERIFIED
0000549C                          8762m         ENDM
0000549C  6000 060C               8763          BRA     decodeANDcomp
000054A0                          8764  decodeAndDestOp:
000054A0                          8765m         prepareAdrMode  #$1,(A2)
000054A0  3C3C 0001               8766m         MOVE.W  #$1, D6      ; INPUT VALUE
000054A4  3212                    8767m         MOVE.W  (A2), D1
000054A6  BC3C 0001               8768m         CMP.B   #$01, D6
000054AA  6700 000C               8769m         BEQ     ADRSOURCE_697    
000054AE                          8770m ADRDEST_697:
000054AE  EF49                    8771m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000054B0  E049                    8772m         LSR     #$08, D1
000054B2  EA49                    8773m         LSR     #$05, D1
000054B4  6000 000A               8774m         BRA     COMPLETE_697 
000054B8                          8775m ADRSOURCE_697:                
000054B8  E149                    8776m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000054BA  E549                    8777m         LSL     #$02, D1
000054BC  E049                    8778m         LSR     #$08, D1
000054BE  EA49                    8779m         LSR     #$05, D1
000054C0                          8780m COMPLETE_697:  ; OPCODE HAS BEEN VERIFIED
000054C0                          8781m         ENDM        
000054C0                          8782m         decodeAdrMode   (A2), D1
000054C0  3612                    8783m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000054C2  3201                    8784m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000054C4                          8785m 
000054C4  B23C 0001               8786m         CMP.B   #$01, D1
000054C8  6700 0066               8787m         BEQ     ADRREGDIRECT_698    
000054CC  B23C 0002               8788m         CMP.B   #$02, D1
000054D0  6700 00A0               8789m         BEQ     ADRREGINDIRECT_698  
000054D4  B23C 0003               8790m         CMP.B   #$03, D1
000054D8  6700 0102               8791m         BEQ     ADRREGPOSTINC_698  
000054DC  B23C 0004               8792m         CMP.B   #$04, D1
000054E0  6700 0178               8793m         BEQ     ADRREGPREDEC_698
000054E4  B23C 0007               8794m         CMP.B   #$07, D1
000054E8  6700 01EE               8795m         BEQ     ADRABSOLUTE_698    
000054EC                          8796m         
000054EC                          8797m DATAREGDIRECT_698: 
000054EC  BC3C 0001               8798m         CMP.B   #$01, D6
000054F0  6700 001E               8799m         BEQ     DATAREGDIRECTSRC_698   
000054F4                          8800m DATAREGDIRECTDEST_698: 
000054F4                          8801mm         PRINTDNDEST D3 
000054F4  3203                    8802mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000054F6  E949                    8803mm         LSL     #$04, D1
000054F8  E049                    8804mm         LSR     #$08, D1
000054FA  EA49                    8805mm         LSR     #$05, D1
000054FC  43F8 00CC               8806mm         LEA     ODN, A1     
00005500  103C 000E               8807mm         MOVE.B  #14,D0          
00005504  4E4F                    8808mm         TRAP    #15
00005506  103C 0003               8809mm         MOVE.B  #3,D0          
0000550A  4E4F                    8810mm         TRAP    #15
0000550C                          8811mm         ENDM
0000550C  6000 057A               8812m         BRA     COMPLETE_698 
00005510                          8813m DATAREGDIRECTSRC_698: 
00005510                          8814mm         PRINTDNSRC D3 
00005510  4281                    8815mm         CLR.L   D1
00005512  3203                    8816mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005514  E149                    8817mm         LSL     #$08, D1
00005516  EB49                    8818mm         LSL     #$05, D1
00005518  E049                    8819mm         LSR     #$08, D1
0000551A  EA49                    8820mm         LSR     #$05, D1
0000551C  43F8 00CC               8821mm         LEA     ODN, A1     
00005520  103C 000E               8822mm         MOVE.B  #14,D0          
00005524  4E4F                    8823mm         TRAP    #15
00005526  103C 0003               8824mm         MOVE.B  #3,D0          
0000552A  4E4F                    8825mm         TRAP    #15
0000552C                          8826mm         ENDM
0000552C  6000 055A               8827m         BRA     COMPLETE_698   
00005530                          8828m         
00005530                          8829m ADRREGDIRECT_698: 
00005530  BC3C 0001               8830m         CMP.B   #$01, D6
00005534  6700 001E               8831m         BEQ     ADRREGDIRECTSRC_698   
00005538                          8832m ADRREGDIRECTDEST_698:
00005538                          8833mm         PRINTANDEST D3
00005538  3203                    8834mm         MOVE.W  D3, D1
0000553A  E949                    8835mm         LSL     #$04, D1
0000553C  E049                    8836mm         LSR     #$08, D1
0000553E  EA49                    8837mm         LSR     #$05, D1
00005540  43F8 00CE               8838mm         LEA     OAN, A1     
00005544  103C 000E               8839mm         MOVE.B  #14,D0          
00005548  4E4F                    8840mm         TRAP    #15
0000554A  103C 0003               8841mm         MOVE.B  #3,D0          
0000554E  4E4F                    8842mm         TRAP    #15
00005550                          8843mm         ENDM
00005550  6000 0536               8844m         BRA     COMPLETE_698   
00005554                          8845m ADRREGDIRECTSRC_698:
00005554                          8846mm         PRINTANSRC D3
00005554  3203                    8847mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005556  E149                    8848mm         LSL     #$08, D1
00005558  EB49                    8849mm         LSL     #$05, D1
0000555A  E049                    8850mm         LSR     #$08, D1
0000555C  EA49                    8851mm         LSR     #$05, D1
0000555E  43F8 00CE               8852mm         LEA     OAN, A1     
00005562  103C 000E               8853mm         MOVE.B  #14,D0          
00005566  4E4F                    8854mm         TRAP    #15
00005568  103C 0003               8855mm         MOVE.B  #3,D0          
0000556C  4E4F                    8856mm         TRAP    #15
0000556E                          8857mm         ENDM
0000556E  6000 0518               8858m         BRA     COMPLETE_698   
00005572                          8859m        
00005572                          8860m ADRREGINDIRECT_698:   
00005572  BC3C 0001               8861m         CMP.B   #$01, D6
00005576  6700 0032               8862m         BEQ     ADRREGINDIRECTSRC_698   
0000557A                          8863m ADRREGINDIRECTDEST_698:
0000557A                          8864mm         PRINTLB
0000557A  43F8 00D0               8865mm         LEA     OLB, A1     
0000557E  103C 000E               8866mm         MOVE.B  #14,D0          
00005582  4E4F                    8867mm         TRAP    #15
00005584                          8868mm         ENDM
00005584                          8869mm         PRINTANDEST D3  
00005584  3203                    8870mm         MOVE.W  D3, D1
00005586  E949                    8871mm         LSL     #$04, D1
00005588  E049                    8872mm         LSR     #$08, D1
0000558A  EA49                    8873mm         LSR     #$05, D1
0000558C  43F8 00CE               8874mm         LEA     OAN, A1     
00005590  103C 000E               8875mm         MOVE.B  #14,D0          
00005594  4E4F                    8876mm         TRAP    #15
00005596  103C 0003               8877mm         MOVE.B  #3,D0          
0000559A  4E4F                    8878mm         TRAP    #15
0000559C                          8879mm         ENDM
0000559C                          8880mm         PRINTRB
0000559C  43F8 00D2               8881mm         LEA     ORB, A1     
000055A0  103C 000E               8882mm         MOVE.B  #14,D0          
000055A4  4E4F                    8883mm         TRAP    #15
000055A6                          8884mm         ENDM
000055A6  6000 04E0               8885m         BRA     COMPLETE_698     
000055AA                          8886m ADRREGINDIRECTSRC_698:   
000055AA                          8887mm         PRINTLB
000055AA  43F8 00D0               8888mm         LEA     OLB, A1     
000055AE  103C 000E               8889mm         MOVE.B  #14,D0          
000055B2  4E4F                    8890mm         TRAP    #15
000055B4                          8891mm         ENDM
000055B4                          8892mm         PRINTANSRC D3  
000055B4  3203                    8893mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000055B6  E149                    8894mm         LSL     #$08, D1
000055B8  EB49                    8895mm         LSL     #$05, D1
000055BA  E049                    8896mm         LSR     #$08, D1
000055BC  EA49                    8897mm         LSR     #$05, D1
000055BE  43F8 00CE               8898mm         LEA     OAN, A1     
000055C2  103C 000E               8899mm         MOVE.B  #14,D0          
000055C6  4E4F                    8900mm         TRAP    #15
000055C8  103C 0003               8901mm         MOVE.B  #3,D0          
000055CC  4E4F                    8902mm         TRAP    #15
000055CE                          8903mm         ENDM
000055CE                          8904mm         PRINTRB
000055CE  43F8 00D2               8905mm         LEA     ORB, A1     
000055D2  103C 000E               8906mm         MOVE.B  #14,D0          
000055D6  4E4F                    8907mm         TRAP    #15
000055D8                          8908mm         ENDM
000055D8  6000 04AE               8909m         BRA     COMPLETE_698   
000055DC                          8910m         
000055DC                          8911m ADRREGPOSTINC_698:   
000055DC  BC3C 0001               8912m         CMP.B   #$01, D6
000055E0  6700 003C               8913m         BEQ     ADRREGPOSTINCSRC_698   
000055E4                          8914m ADRREGPOSTINCDEST_698: 
000055E4                          8915mm         PRINTLB
000055E4  43F8 00D0               8916mm         LEA     OLB, A1     
000055E8  103C 000E               8917mm         MOVE.B  #14,D0          
000055EC  4E4F                    8918mm         TRAP    #15
000055EE                          8919mm         ENDM
000055EE                          8920mm         PRINTANDEST D3  
000055EE  3203                    8921mm         MOVE.W  D3, D1
000055F0  E949                    8922mm         LSL     #$04, D1
000055F2  E049                    8923mm         LSR     #$08, D1
000055F4  EA49                    8924mm         LSR     #$05, D1
000055F6  43F8 00CE               8925mm         LEA     OAN, A1     
000055FA  103C 000E               8926mm         MOVE.B  #14,D0          
000055FE  4E4F                    8927mm         TRAP    #15
00005600  103C 0003               8928mm         MOVE.B  #3,D0          
00005604  4E4F                    8929mm         TRAP    #15
00005606                          8930mm         ENDM
00005606                          8931mm         PRINTRB
00005606  43F8 00D2               8932mm         LEA     ORB, A1     
0000560A  103C 000E               8933mm         MOVE.B  #14,D0          
0000560E  4E4F                    8934mm         TRAP    #15
00005610                          8935mm         ENDM
00005610                          8936mm         PRINTPI
00005610  43F8 00D9               8937mm         LEA     OPSTINC, A1     
00005614  103C 000E               8938mm         MOVE.B  #14,D0          
00005618  4E4F                    8939mm         TRAP    #15
0000561A                          8940mm         ENDM
0000561A  6000 046C               8941m         BRA     COMPLETE_698  
0000561E                          8942m ADRREGPOSTINCSRC_698:           
0000561E                          8943mm         PRINTLB
0000561E  43F8 00D0               8944mm         LEA     OLB, A1     
00005622  103C 000E               8945mm         MOVE.B  #14,D0          
00005626  4E4F                    8946mm         TRAP    #15
00005628                          8947mm         ENDM
00005628                          8948mm         PRINTANSRC D3  
00005628  3203                    8949mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000562A  E149                    8950mm         LSL     #$08, D1
0000562C  EB49                    8951mm         LSL     #$05, D1
0000562E  E049                    8952mm         LSR     #$08, D1
00005630  EA49                    8953mm         LSR     #$05, D1
00005632  43F8 00CE               8954mm         LEA     OAN, A1     
00005636  103C 000E               8955mm         MOVE.B  #14,D0          
0000563A  4E4F                    8956mm         TRAP    #15
0000563C  103C 0003               8957mm         MOVE.B  #3,D0          
00005640  4E4F                    8958mm         TRAP    #15
00005642                          8959mm         ENDM
00005642                          8960mm         PRINTRB
00005642  43F8 00D2               8961mm         LEA     ORB, A1     
00005646  103C 000E               8962mm         MOVE.B  #14,D0          
0000564A  4E4F                    8963mm         TRAP    #15
0000564C                          8964mm         ENDM
0000564C                          8965mm         PRINTPI
0000564C  43F8 00D9               8966mm         LEA     OPSTINC, A1     
00005650  103C 000E               8967mm         MOVE.B  #14,D0          
00005654  4E4F                    8968mm         TRAP    #15
00005656                          8969mm         ENDM
00005656  6000 0430               8970m         BRA     COMPLETE_698  
0000565A                          8971m ADRREGPREDEC_698: 
0000565A  BC3C 0001               8972m         CMP.B   #$01, D6
0000565E  6700 003C               8973m         BEQ     ADRREGPREDECSRC_698   
00005662                          8974m ADRREGPREDECDEST_698:
00005662                          8975mm         PRINTPD  
00005662  43F8 00D7               8976mm         LEA     OPREDEC, A1     
00005666  103C 000E               8977mm         MOVE.B  #14,D0          
0000566A  4E4F                    8978mm         TRAP    #15
0000566C                          8979mm         ENDM
0000566C                          8980mm         PRINTLB
0000566C  43F8 00D0               8981mm         LEA     OLB, A1     
00005670  103C 000E               8982mm         MOVE.B  #14,D0          
00005674  4E4F                    8983mm         TRAP    #15
00005676                          8984mm         ENDM
00005676                          8985mm         PRINTANDEST D3  
00005676  3203                    8986mm         MOVE.W  D3, D1
00005678  E949                    8987mm         LSL     #$04, D1
0000567A  E049                    8988mm         LSR     #$08, D1
0000567C  EA49                    8989mm         LSR     #$05, D1
0000567E  43F8 00CE               8990mm         LEA     OAN, A1     
00005682  103C 000E               8991mm         MOVE.B  #14,D0          
00005686  4E4F                    8992mm         TRAP    #15
00005688  103C 0003               8993mm         MOVE.B  #3,D0          
0000568C  4E4F                    8994mm         TRAP    #15
0000568E                          8995mm         ENDM
0000568E                          8996mm         PRINTRB
0000568E  43F8 00D2               8997mm         LEA     ORB, A1     
00005692  103C 000E               8998mm         MOVE.B  #14,D0          
00005696  4E4F                    8999mm         TRAP    #15
00005698                          9000mm         ENDM
00005698  6000 03EE               9001m         BRA     COMPLETE_698   
0000569C                          9002m ADRREGPREDECSRC_698: 
0000569C                          9003mm         PRINTPD  
0000569C  43F8 00D7               9004mm         LEA     OPREDEC, A1     
000056A0  103C 000E               9005mm         MOVE.B  #14,D0          
000056A4  4E4F                    9006mm         TRAP    #15
000056A6                          9007mm         ENDM
000056A6                          9008mm         PRINTLB
000056A6  43F8 00D0               9009mm         LEA     OLB, A1     
000056AA  103C 000E               9010mm         MOVE.B  #14,D0          
000056AE  4E4F                    9011mm         TRAP    #15
000056B0                          9012mm         ENDM
000056B0                          9013mm         PRINTANSRC D3  
000056B0  3203                    9014mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000056B2  E149                    9015mm         LSL     #$08, D1
000056B4  EB49                    9016mm         LSL     #$05, D1
000056B6  E049                    9017mm         LSR     #$08, D1
000056B8  EA49                    9018mm         LSR     #$05, D1
000056BA  43F8 00CE               9019mm         LEA     OAN, A1     
000056BE  103C 000E               9020mm         MOVE.B  #14,D0          
000056C2  4E4F                    9021mm         TRAP    #15
000056C4  103C 0003               9022mm         MOVE.B  #3,D0          
000056C8  4E4F                    9023mm         TRAP    #15
000056CA                          9024mm         ENDM
000056CA                          9025mm         PRINTRB
000056CA  43F8 00D2               9026mm         LEA     ORB, A1     
000056CE  103C 000E               9027mm         MOVE.B  #14,D0          
000056D2  4E4F                    9028mm         TRAP    #15
000056D4                          9029mm         ENDM
000056D4  6000 03B2               9030m         BRA     COMPLETE_698
000056D8                          9031m        
000056D8                          9032m ADRABSOLUTE_698:
000056D8  BC3C 0001               9033m         CMP.B   #$01, D6
000056DC  6600 0018               9034m         BNE     ADRABSOLUTEDST_698 
000056E0                          9035m         
000056E0  3A03                    9036m         MOVE.W  D3, D5
000056E2  0803 0002               9037m         BTST    #2, D3
000056E6  6600 0024               9038m         BNE     ADRIMMEDIATE_698
000056EA  0803 0000               9039m         BTST    #0, D3
000056EE  6600 0280               9040m         BNE     ADRABSOLUTEL_698
000056F2  6000 01E6               9041m         BRA     ADRABSOLUTEW_698
000056F6                          9042m ADRABSOLUTEDST_698:
000056F6  3A03                    9043m         MOVE.W  D3, D5
000056F8  0803 000B               9044m         BTST    #$B, D3
000056FC  6600 000E               9045m         BNE     ADRIMMEDIATE_698
00005700  0803 0009               9046m         BTST    #$09, D3
00005704  6600 026A               9047m         BNE     ADRABSOLUTEL_698
00005708  6000 01D0               9048m         BRA     ADRABSOLUTEW_698
0000570C                          9049m ADRIMMEDIATE_698:
0000570C  BE3C 0001               9050m         CMP.B   #1, D7
00005710  6700 00A2               9051m         BEQ     ADRIMMEDIATEL_698
00005714                          9052m ADRIMMEDIATEW_698:
00005714  361A                    9053m         MOVE.W  (A2)+, D3
00005716                          9054mm         PRINTHASH
00005716  103C 0006               9055mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000571A  323C 0023               9056mm         MOVE.W  #35, D1     ; AN = SIGN
0000571E  4E4F                    9057mm         TRAP    #15         ; OUTPUT = SIGN
00005720                          9058mm         ENDM
00005720                          9059mm         PRINTSIGN
00005720  103C 0006               9060mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005724  323C 0024               9061mm         MOVE.W  #36, D1     ; AN = SIGN
00005728  4E4F                    9062mm         TRAP    #15         ; OUTPUT = SIGN
0000572A                          9063mm         ENDM
0000572A                          9064mm         ADROUT
0000572A  103C 0006               9065mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000572E  3212                    9066mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005730  E049                    9067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005732  E849                    9068mm         LSR.W   #4, D1      
00005734                          9069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005734  0C01 0009               9070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005738  6E00 000A               9071mmm         BGT     ALPHA_728
0000573C  0601 0030               9072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005740  6000 0006               9073mmm         BRA     DONE_728
00005744  0601 0037               9074mmm ALPHA_728: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005748  4E71                    9075mmm DONE_728: NOP
0000574A                          9076mmm         ENDM
0000574A  4E4F                    9077mm         TRAP    #15         ; EXECUTE OUTPUT
0000574C                          9078mm         
0000574C  3212                    9079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000574E  E949                    9080mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005750  E049                    9081mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005752  E849                    9082mm         LSR.W   #4, D1      
00005754                          9083mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005754  0C01 0009               9084mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005758  6E00 000A               9085mmm         BGT     ALPHA_729
0000575C  0601 0030               9086mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005760  6000 0006               9087mmm         BRA     DONE_729
00005764  0601 0037               9088mmm ALPHA_729: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005768  4E71                    9089mmm DONE_729: NOP
0000576A                          9090mmm         ENDM
0000576A  4E4F                    9091mm         TRAP    #15         ; EXECUTE OUTPUT
0000576C                          9092mm         
0000576C  3212                    9093mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000576E  E149                    9094mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005770  E049                    9095mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005772  E849                    9096mm         LSR.W   #4, D1      
00005774                          9097mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005774  0C01 0009               9098mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005778  6E00 000A               9099mmm         BGT     ALPHA_730
0000577C  0601 0030               9100mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005780  6000 0006               9101mmm         BRA     DONE_730
00005784  0601 0037               9102mmm ALPHA_730: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005788  4E71                    9103mmm DONE_730: NOP
0000578A                          9104mmm         ENDM
0000578A  4E4F                    9105mm         TRAP    #15         ; EXECUTE OUTPUT
0000578C                          9106mm         
0000578C  3212                    9107mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000578E  E149                    9108mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005790  E949                    9109mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005792  E049                    9110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005794  E849                    9111mm         LSR.W   #4, D1      
00005796                          9112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005796  0C01 0009               9113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000579A  6E00 000A               9114mmm         BGT     ALPHA_731
0000579E  0601 0030               9115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057A2  6000 0006               9116mmm         BRA     DONE_731
000057A6  0601 0037               9117mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057AA  4E71                    9118mmm DONE_731: NOP
000057AC                          9119mmm         ENDM
000057AC  4E4F                    9120mm         TRAP    #15         ; EXECUTE OUTPUT       
000057AE                          9121mm         ENDM 
000057AE  3605                    9122m         MOVE.W  D5, D3
000057B0  6000 02D6               9123m         BRA     COMPLETE_698
000057B4                          9124m ADRIMMEDIATEL_698:
000057B4  361A                    9125m         MOVE.W  (A2)+, D3
000057B6                          9126mm         PRINTHASH
000057B6  103C 0006               9127mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057BA  323C 0023               9128mm         MOVE.W  #35, D1     ; AN = SIGN
000057BE  4E4F                    9129mm         TRAP    #15         ; OUTPUT = SIGN
000057C0                          9130mm         ENDM
000057C0                          9131mm         PRINTSIGN
000057C0  103C 0006               9132mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057C4  323C 0024               9133mm         MOVE.W  #36, D1     ; AN = SIGN
000057C8  4E4F                    9134mm         TRAP    #15         ; OUTPUT = SIGN
000057CA                          9135mm         ENDM
000057CA                          9136mm         ADROUT 
000057CA  103C 0006               9137mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057CE  3212                    9138mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057D0  E049                    9139mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057D2  E849                    9140mm         LSR.W   #4, D1      
000057D4                          9141mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057D4  0C01 0009               9142mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057D8  6E00 000A               9143mmm         BGT     ALPHA_735
000057DC  0601 0030               9144mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057E0  6000 0006               9145mmm         BRA     DONE_735
000057E4  0601 0037               9146mmm ALPHA_735: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057E8  4E71                    9147mmm DONE_735: NOP
000057EA                          9148mmm         ENDM
000057EA  4E4F                    9149mm         TRAP    #15         ; EXECUTE OUTPUT
000057EC                          9150mm         
000057EC  3212                    9151mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057EE  E949                    9152mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000057F0  E049                    9153mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057F2  E849                    9154mm         LSR.W   #4, D1      
000057F4                          9155mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057F4  0C01 0009               9156mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057F8  6E00 000A               9157mmm         BGT     ALPHA_736
000057FC  0601 0030               9158mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005800  6000 0006               9159mmm         BRA     DONE_736
00005804  0601 0037               9160mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005808  4E71                    9161mmm DONE_736: NOP
0000580A                          9162mmm         ENDM
0000580A  4E4F                    9163mm         TRAP    #15         ; EXECUTE OUTPUT
0000580C                          9164mm         
0000580C  3212                    9165mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000580E  E149                    9166mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005810  E049                    9167mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005812  E849                    9168mm         LSR.W   #4, D1      
00005814                          9169mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005814  0C01 0009               9170mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005818  6E00 000A               9171mmm         BGT     ALPHA_737
0000581C  0601 0030               9172mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005820  6000 0006               9173mmm         BRA     DONE_737
00005824  0601 0037               9174mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005828  4E71                    9175mmm DONE_737: NOP
0000582A                          9176mmm         ENDM
0000582A  4E4F                    9177mm         TRAP    #15         ; EXECUTE OUTPUT
0000582C                          9178mm         
0000582C  3212                    9179mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000582E  E149                    9180mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005830  E949                    9181mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005832  E049                    9182mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005834  E849                    9183mm         LSR.W   #4, D1      
00005836                          9184mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005836  0C01 0009               9185mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000583A  6E00 000A               9186mmm         BGT     ALPHA_738
0000583E  0601 0030               9187mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005842  6000 0006               9188mmm         BRA     DONE_738
00005846  0601 0037               9189mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000584A  4E71                    9190mmm DONE_738: NOP
0000584C                          9191mmm         ENDM
0000584C  4E4F                    9192mm         TRAP    #15         ; EXECUTE OUTPUT       
0000584E                          9193mm         ENDM 
0000584E  361A                    9194m         MOVE.W  (A2)+, D3
00005850                          9195mm         ADROUT
00005850  103C 0006               9196mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005854  3212                    9197mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005856  E049                    9198mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005858  E849                    9199mm         LSR.W   #4, D1      
0000585A                          9200mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000585A  0C01 0009               9201mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000585E  6E00 000A               9202mmm         BGT     ALPHA_740
00005862  0601 0030               9203mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005866  6000 0006               9204mmm         BRA     DONE_740
0000586A  0601 0037               9205mmm ALPHA_740: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000586E  4E71                    9206mmm DONE_740: NOP
00005870                          9207mmm         ENDM
00005870  4E4F                    9208mm         TRAP    #15         ; EXECUTE OUTPUT
00005872                          9209mm         
00005872  3212                    9210mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005874  E949                    9211mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005876  E049                    9212mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005878  E849                    9213mm         LSR.W   #4, D1      
0000587A                          9214mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000587A  0C01 0009               9215mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000587E  6E00 000A               9216mmm         BGT     ALPHA_741
00005882  0601 0030               9217mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005886  6000 0006               9218mmm         BRA     DONE_741
0000588A  0601 0037               9219mmm ALPHA_741: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000588E  4E71                    9220mmm DONE_741: NOP
00005890                          9221mmm         ENDM
00005890  4E4F                    9222mm         TRAP    #15         ; EXECUTE OUTPUT
00005892                          9223mm         
00005892  3212                    9224mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005894  E149                    9225mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005896  E049                    9226mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005898  E849                    9227mm         LSR.W   #4, D1      
0000589A                          9228mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000589A  0C01 0009               9229mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000589E  6E00 000A               9230mmm         BGT     ALPHA_742
000058A2  0601 0030               9231mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A6  6000 0006               9232mmm         BRA     DONE_742
000058AA  0601 0037               9233mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058AE  4E71                    9234mmm DONE_742: NOP
000058B0                          9235mmm         ENDM
000058B0  4E4F                    9236mm         TRAP    #15         ; EXECUTE OUTPUT
000058B2                          9237mm         
000058B2  3212                    9238mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B4  E149                    9239mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058B6  E949                    9240mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000058B8  E049                    9241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058BA  E849                    9242mm         LSR.W   #4, D1      
000058BC                          9243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058BC  0C01 0009               9244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058C0  6E00 000A               9245mmm         BGT     ALPHA_743
000058C4  0601 0030               9246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C8  6000 0006               9247mmm         BRA     DONE_743
000058CC  0601 0037               9248mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058D0  4E71                    9249mmm DONE_743: NOP
000058D2                          9250mmm         ENDM
000058D2  4E4F                    9251mm         TRAP    #15         ; EXECUTE OUTPUT       
000058D4                          9252mm         ENDM 
000058D4  3605                    9253m         MOVE.W  D5, D3
000058D6  6000 01B0               9254m         BRA     COMPLETE_698 
000058DA                          9255m ADRABSOLUTEW_698:     
000058DA  361A                    9256m         MOVE.W  (A2)+, D3
000058DC                          9257mm         PRINTSIGN
000058DC  103C 0006               9258mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000058E0  323C 0024               9259mm         MOVE.W  #36, D1     ; AN = SIGN
000058E4  4E4F                    9260mm         TRAP    #15         ; OUTPUT = SIGN
000058E6                          9261mm         ENDM
000058E6                          9262mm         ADROUT
000058E6  103C 0006               9263mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000058EA  3212                    9264mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058EC  E049                    9265mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058EE  E849                    9266mm         LSR.W   #4, D1      
000058F0                          9267mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058F0  0C01 0009               9268mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058F4  6E00 000A               9269mmm         BGT     ALPHA_746
000058F8  0601 0030               9270mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058FC  6000 0006               9271mmm         BRA     DONE_746
00005900  0601 0037               9272mmm ALPHA_746: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005904  4E71                    9273mmm DONE_746: NOP
00005906                          9274mmm         ENDM
00005906  4E4F                    9275mm         TRAP    #15         ; EXECUTE OUTPUT
00005908                          9276mm         
00005908  3212                    9277mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000590A  E949                    9278mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000590C  E049                    9279mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000590E  E849                    9280mm         LSR.W   #4, D1      
00005910                          9281mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005910  0C01 0009               9282mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005914  6E00 000A               9283mmm         BGT     ALPHA_747
00005918  0601 0030               9284mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000591C  6000 0006               9285mmm         BRA     DONE_747
00005920  0601 0037               9286mmm ALPHA_747: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005924  4E71                    9287mmm DONE_747: NOP
00005926                          9288mmm         ENDM
00005926  4E4F                    9289mm         TRAP    #15         ; EXECUTE OUTPUT
00005928                          9290mm         
00005928  3212                    9291mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000592A  E149                    9292mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000592C  E049                    9293mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000592E  E849                    9294mm         LSR.W   #4, D1      
00005930                          9295mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005930  0C01 0009               9296mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005934  6E00 000A               9297mmm         BGT     ALPHA_748
00005938  0601 0030               9298mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000593C  6000 0006               9299mmm         BRA     DONE_748
00005940  0601 0037               9300mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005944  4E71                    9301mmm DONE_748: NOP
00005946                          9302mmm         ENDM
00005946  4E4F                    9303mm         TRAP    #15         ; EXECUTE OUTPUT
00005948                          9304mm         
00005948  3212                    9305mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000594A  E149                    9306mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000594C  E949                    9307mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000594E  E049                    9308mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005950  E849                    9309mm         LSR.W   #4, D1      
00005952                          9310mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005952  0C01 0009               9311mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005956  6E00 000A               9312mmm         BGT     ALPHA_749
0000595A  0601 0030               9313mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000595E  6000 0006               9314mmm         BRA     DONE_749
00005962  0601 0037               9315mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005966  4E71                    9316mmm DONE_749: NOP
00005968                          9317mmm         ENDM
00005968  4E4F                    9318mm         TRAP    #15         ; EXECUTE OUTPUT       
0000596A                          9319mm         ENDM 
0000596A  3605                    9320m         MOVE.W  D5, D3
0000596C  6000 011A               9321m         BRA     COMPLETE_698  
00005970                          9322m ADRABSOLUTEL_698:  
00005970  361A                    9323m         MOVE.W  (A2)+, D3
00005972                          9324mm         PRINTSIGN
00005972  103C 0006               9325mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005976  323C 0024               9326mm         MOVE.W  #36, D1     ; AN = SIGN
0000597A  4E4F                    9327mm         TRAP    #15         ; OUTPUT = SIGN
0000597C                          9328mm         ENDM
0000597C                          9329mm         ADROUT 
0000597C  103C 0006               9330mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005980  3212                    9331mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005982  E049                    9332mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005984  E849                    9333mm         LSR.W   #4, D1      
00005986                          9334mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005986  0C01 0009               9335mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000598A  6E00 000A               9336mmm         BGT     ALPHA_752
0000598E  0601 0030               9337mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005992  6000 0006               9338mmm         BRA     DONE_752
00005996  0601 0037               9339mmm ALPHA_752: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000599A  4E71                    9340mmm DONE_752: NOP
0000599C                          9341mmm         ENDM
0000599C  4E4F                    9342mm         TRAP    #15         ; EXECUTE OUTPUT
0000599E                          9343mm         
0000599E  3212                    9344mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059A0  E949                    9345mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000059A2  E049                    9346mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059A4  E849                    9347mm         LSR.W   #4, D1      
000059A6                          9348mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059A6  0C01 0009               9349mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059AA  6E00 000A               9350mmm         BGT     ALPHA_753
000059AE  0601 0030               9351mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059B2  6000 0006               9352mmm         BRA     DONE_753
000059B6  0601 0037               9353mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059BA  4E71                    9354mmm DONE_753: NOP
000059BC                          9355mmm         ENDM
000059BC  4E4F                    9356mm         TRAP    #15         ; EXECUTE OUTPUT
000059BE                          9357mm         
000059BE  3212                    9358mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059C0  E149                    9359mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000059C2  E049                    9360mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059C4  E849                    9361mm         LSR.W   #4, D1      
000059C6                          9362mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059C6  0C01 0009               9363mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059CA  6E00 000A               9364mmm         BGT     ALPHA_754
000059CE  0601 0030               9365mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059D2  6000 0006               9366mmm         BRA     DONE_754
000059D6  0601 0037               9367mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059DA  4E71                    9368mmm DONE_754: NOP
000059DC                          9369mmm         ENDM
000059DC  4E4F                    9370mm         TRAP    #15         ; EXECUTE OUTPUT
000059DE                          9371mm         
000059DE  3212                    9372mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059E0  E149                    9373mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000059E2  E949                    9374mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000059E4  E049                    9375mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059E6  E849                    9376mm         LSR.W   #4, D1      
000059E8                          9377mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059E8  0C01 0009               9378mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059EC  6E00 000A               9379mmm         BGT     ALPHA_755
000059F0  0601 0030               9380mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059F4  6000 0006               9381mmm         BRA     DONE_755
000059F8  0601 0037               9382mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059FC  4E71                    9383mmm DONE_755: NOP
000059FE                          9384mmm         ENDM
000059FE  4E4F                    9385mm         TRAP    #15         ; EXECUTE OUTPUT       
00005A00                          9386mm         ENDM 
00005A00  361A                    9387m         MOVE.W  (A2)+, D3
00005A02                          9388mm         ADROUT
00005A02  103C 0006               9389mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005A06  3212                    9390mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A08  E049                    9391mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A0A  E849                    9392mm         LSR.W   #4, D1      
00005A0C                          9393mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A0C  0C01 0009               9394mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A10  6E00 000A               9395mmm         BGT     ALPHA_757
00005A14  0601 0030               9396mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A18  6000 0006               9397mmm         BRA     DONE_757
00005A1C  0601 0037               9398mmm ALPHA_757: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A20  4E71                    9399mmm DONE_757: NOP
00005A22                          9400mmm         ENDM
00005A22  4E4F                    9401mm         TRAP    #15         ; EXECUTE OUTPUT
00005A24                          9402mm         
00005A24  3212                    9403mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A26  E949                    9404mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005A28  E049                    9405mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A2A  E849                    9406mm         LSR.W   #4, D1      
00005A2C                          9407mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A2C  0C01 0009               9408mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A30  6E00 000A               9409mmm         BGT     ALPHA_758
00005A34  0601 0030               9410mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A38  6000 0006               9411mmm         BRA     DONE_758
00005A3C  0601 0037               9412mmm ALPHA_758: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A40  4E71                    9413mmm DONE_758: NOP
00005A42                          9414mmm         ENDM
00005A42  4E4F                    9415mm         TRAP    #15         ; EXECUTE OUTPUT
00005A44                          9416mm         
00005A44  3212                    9417mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A46  E149                    9418mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A48  E049                    9419mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A4A  E849                    9420mm         LSR.W   #4, D1      
00005A4C                          9421mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A4C  0C01 0009               9422mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A50  6E00 000A               9423mmm         BGT     ALPHA_759
00005A54  0601 0030               9424mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A58  6000 0006               9425mmm         BRA     DONE_759
00005A5C  0601 0037               9426mmm ALPHA_759: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A60  4E71                    9427mmm DONE_759: NOP
00005A62                          9428mmm         ENDM
00005A62  4E4F                    9429mm         TRAP    #15         ; EXECUTE OUTPUT
00005A64                          9430mm         
00005A64  3212                    9431mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A66  E149                    9432mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A68  E949                    9433mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005A6A  E049                    9434mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A6C  E849                    9435mm         LSR.W   #4, D1      
00005A6E                          9436mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A6E  0C01 0009               9437mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A72  6E00 000A               9438mmm         BGT     ALPHA_760
00005A76  0601 0030               9439mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A7A  6000 0006               9440mmm         BRA     DONE_760
00005A7E  0601 0037               9441mmm ALPHA_760: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A82  4E71                    9442mmm DONE_760: NOP
00005A84                          9443mmm         ENDM
00005A84  4E4F                    9444mm         TRAP    #15         ; EXECUTE OUTPUT       
00005A86                          9445mm         ENDM 
00005A86  3605                    9446m         MOVE.W  D5, D3
00005A88                          9447m 
00005A88                          9448m COMPLETE_698:  ; OPCODE HAS BEEN VERIFIED
00005A88                          9449m         ENDM
00005A88                          9450m         printComma
00005A88  43F8 00D4               9451m         LEA     OCOMMA, A1     
00005A8C  103C 000E               9452m         MOVE.B  #14,D0          
00005A90  4E4F                    9453m         TRAP    #15
00005A92                          9454m         ENDM
00005A92                          9455m         printDnDest     (A2)
00005A92  3212                    9456m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005A94  E949                    9457m         LSL     #$04, D1
00005A96  E049                    9458m         LSR     #$08, D1
00005A98  EA49                    9459m         LSR     #$05, D1
00005A9A  43F8 00CC               9460m         LEA     ODN, A1     
00005A9E  103C 000E               9461m         MOVE.B  #14,D0          
00005AA2  4E4F                    9462m         TRAP    #15
00005AA4  103C 0003               9463m         MOVE.B  #3,D0          
00005AA8  4E4F                    9464m         TRAP    #15
00005AAA                          9465m         ENDM
00005AAA                          9466  decodeANDcomp:
00005AAA  4E75                    9467          RTS                ; Return from decodeANDcomp subroutine
00005AAC                          9468  
00005AAC                          9469  
00005AAC                          9470  ; ------------------------------------------------------------
00005AAC                          9471  ; 10. "decodeNOT" subroutine
00005AAC                          9472  ; AUTHOR
00005AAC                          9473  ;
00005AAC                          9474  ; TODO: DESCRIPTION
00005AAC                          9475  ; ------------------------------------------------------------
00005AAC                          9476  decodeNOT:
00005AAC                          9477m         verifyOpcode    pNOT, (A2)
00005AAC  43F8 0194               9478m         LEA     PNOT, A1      ; INPUT PATTERN STRING
00005AB0  3612                    9479m         MOVE.W  (A2), D3      ; INPUT VALUE
00005AB2  123C 000F               9480m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005AB6                          9481m         
00005AB6                          9482m LOOP_763: 
00005AB6  0C11 0030               9483m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005ABA  6700 000E               9484m         BEQ     CHECKFOR0_763
00005ABE  0C11 0031               9485m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005AC2  6700 0010               9486m         BEQ     CHECKFOR1_763
00005AC6  6000 0012               9487m         BRA     NEXT_763      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005ACA                          9488m         
00005ACA                          9489m CHECKFOR0_763: 
00005ACA  0303                    9490m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005ACC  6600 166E               9491m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005AD0  6000 0008               9492m         BRA     NEXT_763
00005AD4                          9493m 
00005AD4                          9494m CHECKFOR1_763:
00005AD4  0303                    9495m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005AD6  6700 1664               9496m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005ADA                          9497m 
00005ADA                          9498m NEXT_763: 
00005ADA  B23C 0000               9499m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005ADE  6700 0008               9500m         BEQ     COMPLETE_763  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005AE2  5301                    9501m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005AE4  1819                    9502m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005AE6  60CE                    9503m         BRA     LOOP_763      ; BEGIN LOOP AGAIN
00005AE8                          9504m 
00005AE8                          9505m COMPLETE_763:  ; OPCODE HAS BEEN VERIFIED
00005AE8                          9506m         ENDM
00005AE8  43F8 0094               9507          LEA     oNOT, A1     
00005AEC  103C 000E               9508          MOVE.B  #14,D0          
00005AF0  4E4F                    9509          TRAP    #15
00005AF2                          9510m         printSizeLow       (A2)
00005AF2  3612                    9511m         MOVE.W  (A2), D3      ; INPUT VALUE   
00005AF4  4247                    9512m         CLR     D7   
00005AF6                          9513m CHECKFORB_764: 
00005AF6  0803 0006               9514m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00005AFA  6600 0018               9515m         BNE     CHECKFORW_764  ; IF NOT GO TO WORD SIZE
00005AFE  0803 0007               9516m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00005B02  6600 001E               9517m         BNE     CHECKFORL_764 ; IF NOT GO TO LONGWORD SIZE
00005B06  43F8 00C0               9518m         LEA     OBSIZE, A1     
00005B0A  103C 000E               9519m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B0E  4E4F                    9520m         TRAP    #15
00005B10  6000 001E               9521m         BRA     COMPLETE_764      
00005B14                          9522m CHECKFORW_764: 
00005B14  43F8 00C4               9523m         LEA     OWSIZE, A1     
00005B18  103C 000E               9524m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00005B1C  4E4F                    9525m         TRAP    #15
00005B1E  6000 0010               9526m         BRA     COMPLETE_764  
00005B22                          9527m CHECKFORL_764:
00005B22  1E3C 0001               9528m         MOVE.B  #$1, D7
00005B26  43F8 00C8               9529m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00005B2A  103C 000E               9530m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B2E  4E4F                    9531m         TRAP    #15
00005B30                          9532m COMPLETE_764:  ; SIZE HAS BEEN PRINTED
00005B30                          9533m         ENDM
00005B30                          9534m         prepareAdrMode  #$1, (A2)
00005B30  3C3C 0001               9535m         MOVE.W  #$1, D6      ; INPUT VALUE
00005B34  3212                    9536m         MOVE.W  (A2), D1
00005B36  BC3C 0001               9537m         CMP.B   #$01, D6
00005B3A  6700 000C               9538m         BEQ     ADRSOURCE_765    
00005B3E                          9539m ADRDEST_765:
00005B3E  EF49                    9540m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005B40  E049                    9541m         LSR     #$08, D1
00005B42  EA49                    9542m         LSR     #$05, D1
00005B44  6000 000A               9543m         BRA     COMPLETE_765 
00005B48                          9544m ADRSOURCE_765:                
00005B48  E149                    9545m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00005B4A  E549                    9546m         LSL     #$02, D1
00005B4C  E049                    9547m         LSR     #$08, D1
00005B4E  EA49                    9548m         LSR     #$05, D1
00005B50                          9549m COMPLETE_765:  ; OPCODE HAS BEEN VERIFIED
00005B50                          9550m         ENDM        
00005B50                          9551m         decodeAdrMode   (A2), D1
00005B50  3612                    9552m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005B52  3201                    9553m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005B54                          9554m 
00005B54  B23C 0001               9555m         CMP.B   #$01, D1
00005B58  6700 0066               9556m         BEQ     ADRREGDIRECT_766    
00005B5C  B23C 0002               9557m         CMP.B   #$02, D1
00005B60  6700 00A0               9558m         BEQ     ADRREGINDIRECT_766  
00005B64  B23C 0003               9559m         CMP.B   #$03, D1
00005B68  6700 0102               9560m         BEQ     ADRREGPOSTINC_766  
00005B6C  B23C 0004               9561m         CMP.B   #$04, D1
00005B70  6700 0178               9562m         BEQ     ADRREGPREDEC_766
00005B74  B23C 0007               9563m         CMP.B   #$07, D1
00005B78  6700 01EE               9564m         BEQ     ADRABSOLUTE_766    
00005B7C                          9565m         
00005B7C                          9566m DATAREGDIRECT_766: 
00005B7C  BC3C 0001               9567m         CMP.B   #$01, D6
00005B80  6700 001E               9568m         BEQ     DATAREGDIRECTSRC_766   
00005B84                          9569m DATAREGDIRECTDEST_766: 
00005B84                          9570mm         PRINTDNDEST D3 
00005B84  3203                    9571mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005B86  E949                    9572mm         LSL     #$04, D1
00005B88  E049                    9573mm         LSR     #$08, D1
00005B8A  EA49                    9574mm         LSR     #$05, D1
00005B8C  43F8 00CC               9575mm         LEA     ODN, A1     
00005B90  103C 000E               9576mm         MOVE.B  #14,D0          
00005B94  4E4F                    9577mm         TRAP    #15
00005B96  103C 0003               9578mm         MOVE.B  #3,D0          
00005B9A  4E4F                    9579mm         TRAP    #15
00005B9C                          9580mm         ENDM
00005B9C  6000 057A               9581m         BRA     COMPLETE_766 
00005BA0                          9582m DATAREGDIRECTSRC_766: 
00005BA0                          9583mm         PRINTDNSRC D3 
00005BA0  4281                    9584mm         CLR.L   D1
00005BA2  3203                    9585mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BA4  E149                    9586mm         LSL     #$08, D1
00005BA6  EB49                    9587mm         LSL     #$05, D1
00005BA8  E049                    9588mm         LSR     #$08, D1
00005BAA  EA49                    9589mm         LSR     #$05, D1
00005BAC  43F8 00CC               9590mm         LEA     ODN, A1     
00005BB0  103C 000E               9591mm         MOVE.B  #14,D0          
00005BB4  4E4F                    9592mm         TRAP    #15
00005BB6  103C 0003               9593mm         MOVE.B  #3,D0          
00005BBA  4E4F                    9594mm         TRAP    #15
00005BBC                          9595mm         ENDM
00005BBC  6000 055A               9596m         BRA     COMPLETE_766   
00005BC0                          9597m         
00005BC0                          9598m ADRREGDIRECT_766: 
00005BC0  BC3C 0001               9599m         CMP.B   #$01, D6
00005BC4  6700 001E               9600m         BEQ     ADRREGDIRECTSRC_766   
00005BC8                          9601m ADRREGDIRECTDEST_766:
00005BC8                          9602mm         PRINTANDEST D3
00005BC8  3203                    9603mm         MOVE.W  D3, D1
00005BCA  E949                    9604mm         LSL     #$04, D1
00005BCC  E049                    9605mm         LSR     #$08, D1
00005BCE  EA49                    9606mm         LSR     #$05, D1
00005BD0  43F8 00CE               9607mm         LEA     OAN, A1     
00005BD4  103C 000E               9608mm         MOVE.B  #14,D0          
00005BD8  4E4F                    9609mm         TRAP    #15
00005BDA  103C 0003               9610mm         MOVE.B  #3,D0          
00005BDE  4E4F                    9611mm         TRAP    #15
00005BE0                          9612mm         ENDM
00005BE0  6000 0536               9613m         BRA     COMPLETE_766   
00005BE4                          9614m ADRREGDIRECTSRC_766:
00005BE4                          9615mm         PRINTANSRC D3
00005BE4  3203                    9616mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BE6  E149                    9617mm         LSL     #$08, D1
00005BE8  EB49                    9618mm         LSL     #$05, D1
00005BEA  E049                    9619mm         LSR     #$08, D1
00005BEC  EA49                    9620mm         LSR     #$05, D1
00005BEE  43F8 00CE               9621mm         LEA     OAN, A1     
00005BF2  103C 000E               9622mm         MOVE.B  #14,D0          
00005BF6  4E4F                    9623mm         TRAP    #15
00005BF8  103C 0003               9624mm         MOVE.B  #3,D0          
00005BFC  4E4F                    9625mm         TRAP    #15
00005BFE                          9626mm         ENDM
00005BFE  6000 0518               9627m         BRA     COMPLETE_766   
00005C02                          9628m        
00005C02                          9629m ADRREGINDIRECT_766:   
00005C02  BC3C 0001               9630m         CMP.B   #$01, D6
00005C06  6700 0032               9631m         BEQ     ADRREGINDIRECTSRC_766   
00005C0A                          9632m ADRREGINDIRECTDEST_766:
00005C0A                          9633mm         PRINTLB
00005C0A  43F8 00D0               9634mm         LEA     OLB, A1     
00005C0E  103C 000E               9635mm         MOVE.B  #14,D0          
00005C12  4E4F                    9636mm         TRAP    #15
00005C14                          9637mm         ENDM
00005C14                          9638mm         PRINTANDEST D3  
00005C14  3203                    9639mm         MOVE.W  D3, D1
00005C16  E949                    9640mm         LSL     #$04, D1
00005C18  E049                    9641mm         LSR     #$08, D1
00005C1A  EA49                    9642mm         LSR     #$05, D1
00005C1C  43F8 00CE               9643mm         LEA     OAN, A1     
00005C20  103C 000E               9644mm         MOVE.B  #14,D0          
00005C24  4E4F                    9645mm         TRAP    #15
00005C26  103C 0003               9646mm         MOVE.B  #3,D0          
00005C2A  4E4F                    9647mm         TRAP    #15
00005C2C                          9648mm         ENDM
00005C2C                          9649mm         PRINTRB
00005C2C  43F8 00D2               9650mm         LEA     ORB, A1     
00005C30  103C 000E               9651mm         MOVE.B  #14,D0          
00005C34  4E4F                    9652mm         TRAP    #15
00005C36                          9653mm         ENDM
00005C36  6000 04E0               9654m         BRA     COMPLETE_766     
00005C3A                          9655m ADRREGINDIRECTSRC_766:   
00005C3A                          9656mm         PRINTLB
00005C3A  43F8 00D0               9657mm         LEA     OLB, A1     
00005C3E  103C 000E               9658mm         MOVE.B  #14,D0          
00005C42  4E4F                    9659mm         TRAP    #15
00005C44                          9660mm         ENDM
00005C44                          9661mm         PRINTANSRC D3  
00005C44  3203                    9662mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C46  E149                    9663mm         LSL     #$08, D1
00005C48  EB49                    9664mm         LSL     #$05, D1
00005C4A  E049                    9665mm         LSR     #$08, D1
00005C4C  EA49                    9666mm         LSR     #$05, D1
00005C4E  43F8 00CE               9667mm         LEA     OAN, A1     
00005C52  103C 000E               9668mm         MOVE.B  #14,D0          
00005C56  4E4F                    9669mm         TRAP    #15
00005C58  103C 0003               9670mm         MOVE.B  #3,D0          
00005C5C  4E4F                    9671mm         TRAP    #15
00005C5E                          9672mm         ENDM
00005C5E                          9673mm         PRINTRB
00005C5E  43F8 00D2               9674mm         LEA     ORB, A1     
00005C62  103C 000E               9675mm         MOVE.B  #14,D0          
00005C66  4E4F                    9676mm         TRAP    #15
00005C68                          9677mm         ENDM
00005C68  6000 04AE               9678m         BRA     COMPLETE_766   
00005C6C                          9679m         
00005C6C                          9680m ADRREGPOSTINC_766:   
00005C6C  BC3C 0001               9681m         CMP.B   #$01, D6
00005C70  6700 003C               9682m         BEQ     ADRREGPOSTINCSRC_766   
00005C74                          9683m ADRREGPOSTINCDEST_766: 
00005C74                          9684mm         PRINTLB
00005C74  43F8 00D0               9685mm         LEA     OLB, A1     
00005C78  103C 000E               9686mm         MOVE.B  #14,D0          
00005C7C  4E4F                    9687mm         TRAP    #15
00005C7E                          9688mm         ENDM
00005C7E                          9689mm         PRINTANDEST D3  
00005C7E  3203                    9690mm         MOVE.W  D3, D1
00005C80  E949                    9691mm         LSL     #$04, D1
00005C82  E049                    9692mm         LSR     #$08, D1
00005C84  EA49                    9693mm         LSR     #$05, D1
00005C86  43F8 00CE               9694mm         LEA     OAN, A1     
00005C8A  103C 000E               9695mm         MOVE.B  #14,D0          
00005C8E  4E4F                    9696mm         TRAP    #15
00005C90  103C 0003               9697mm         MOVE.B  #3,D0          
00005C94  4E4F                    9698mm         TRAP    #15
00005C96                          9699mm         ENDM
00005C96                          9700mm         PRINTRB
00005C96  43F8 00D2               9701mm         LEA     ORB, A1     
00005C9A  103C 000E               9702mm         MOVE.B  #14,D0          
00005C9E  4E4F                    9703mm         TRAP    #15
00005CA0                          9704mm         ENDM
00005CA0                          9705mm         PRINTPI
00005CA0  43F8 00D9               9706mm         LEA     OPSTINC, A1     
00005CA4  103C 000E               9707mm         MOVE.B  #14,D0          
00005CA8  4E4F                    9708mm         TRAP    #15
00005CAA                          9709mm         ENDM
00005CAA  6000 046C               9710m         BRA     COMPLETE_766  
00005CAE                          9711m ADRREGPOSTINCSRC_766:           
00005CAE                          9712mm         PRINTLB
00005CAE  43F8 00D0               9713mm         LEA     OLB, A1     
00005CB2  103C 000E               9714mm         MOVE.B  #14,D0          
00005CB6  4E4F                    9715mm         TRAP    #15
00005CB8                          9716mm         ENDM
00005CB8                          9717mm         PRINTANSRC D3  
00005CB8  3203                    9718mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005CBA  E149                    9719mm         LSL     #$08, D1
00005CBC  EB49                    9720mm         LSL     #$05, D1
00005CBE  E049                    9721mm         LSR     #$08, D1
00005CC0  EA49                    9722mm         LSR     #$05, D1
00005CC2  43F8 00CE               9723mm         LEA     OAN, A1     
00005CC6  103C 000E               9724mm         MOVE.B  #14,D0          
00005CCA  4E4F                    9725mm         TRAP    #15
00005CCC  103C 0003               9726mm         MOVE.B  #3,D0          
00005CD0  4E4F                    9727mm         TRAP    #15
00005CD2                          9728mm         ENDM
00005CD2                          9729mm         PRINTRB
00005CD2  43F8 00D2               9730mm         LEA     ORB, A1     
00005CD6  103C 000E               9731mm         MOVE.B  #14,D0          
00005CDA  4E4F                    9732mm         TRAP    #15
00005CDC                          9733mm         ENDM
00005CDC                          9734mm         PRINTPI
00005CDC  43F8 00D9               9735mm         LEA     OPSTINC, A1     
00005CE0  103C 000E               9736mm         MOVE.B  #14,D0          
00005CE4  4E4F                    9737mm         TRAP    #15
00005CE6                          9738mm         ENDM
00005CE6  6000 0430               9739m         BRA     COMPLETE_766  
00005CEA                          9740m ADRREGPREDEC_766: 
00005CEA  BC3C 0001               9741m         CMP.B   #$01, D6
00005CEE  6700 003C               9742m         BEQ     ADRREGPREDECSRC_766   
00005CF2                          9743m ADRREGPREDECDEST_766:
00005CF2                          9744mm         PRINTPD  
00005CF2  43F8 00D7               9745mm         LEA     OPREDEC, A1     
00005CF6  103C 000E               9746mm         MOVE.B  #14,D0          
00005CFA  4E4F                    9747mm         TRAP    #15
00005CFC                          9748mm         ENDM
00005CFC                          9749mm         PRINTLB
00005CFC  43F8 00D0               9750mm         LEA     OLB, A1     
00005D00  103C 000E               9751mm         MOVE.B  #14,D0          
00005D04  4E4F                    9752mm         TRAP    #15
00005D06                          9753mm         ENDM
00005D06                          9754mm         PRINTANDEST D3  
00005D06  3203                    9755mm         MOVE.W  D3, D1
00005D08  E949                    9756mm         LSL     #$04, D1
00005D0A  E049                    9757mm         LSR     #$08, D1
00005D0C  EA49                    9758mm         LSR     #$05, D1
00005D0E  43F8 00CE               9759mm         LEA     OAN, A1     
00005D12  103C 000E               9760mm         MOVE.B  #14,D0          
00005D16  4E4F                    9761mm         TRAP    #15
00005D18  103C 0003               9762mm         MOVE.B  #3,D0          
00005D1C  4E4F                    9763mm         TRAP    #15
00005D1E                          9764mm         ENDM
00005D1E                          9765mm         PRINTRB
00005D1E  43F8 00D2               9766mm         LEA     ORB, A1     
00005D22  103C 000E               9767mm         MOVE.B  #14,D0          
00005D26  4E4F                    9768mm         TRAP    #15
00005D28                          9769mm         ENDM
00005D28  6000 03EE               9770m         BRA     COMPLETE_766   
00005D2C                          9771m ADRREGPREDECSRC_766: 
00005D2C                          9772mm         PRINTPD  
00005D2C  43F8 00D7               9773mm         LEA     OPREDEC, A1     
00005D30  103C 000E               9774mm         MOVE.B  #14,D0          
00005D34  4E4F                    9775mm         TRAP    #15
00005D36                          9776mm         ENDM
00005D36                          9777mm         PRINTLB
00005D36  43F8 00D0               9778mm         LEA     OLB, A1     
00005D3A  103C 000E               9779mm         MOVE.B  #14,D0          
00005D3E  4E4F                    9780mm         TRAP    #15
00005D40                          9781mm         ENDM
00005D40                          9782mm         PRINTANSRC D3  
00005D40  3203                    9783mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005D42  E149                    9784mm         LSL     #$08, D1
00005D44  EB49                    9785mm         LSL     #$05, D1
00005D46  E049                    9786mm         LSR     #$08, D1
00005D48  EA49                    9787mm         LSR     #$05, D1
00005D4A  43F8 00CE               9788mm         LEA     OAN, A1     
00005D4E  103C 000E               9789mm         MOVE.B  #14,D0          
00005D52  4E4F                    9790mm         TRAP    #15
00005D54  103C 0003               9791mm         MOVE.B  #3,D0          
00005D58  4E4F                    9792mm         TRAP    #15
00005D5A                          9793mm         ENDM
00005D5A                          9794mm         PRINTRB
00005D5A  43F8 00D2               9795mm         LEA     ORB, A1     
00005D5E  103C 000E               9796mm         MOVE.B  #14,D0          
00005D62  4E4F                    9797mm         TRAP    #15
00005D64                          9798mm         ENDM
00005D64  6000 03B2               9799m         BRA     COMPLETE_766
00005D68                          9800m        
00005D68                          9801m ADRABSOLUTE_766:
00005D68  BC3C 0001               9802m         CMP.B   #$01, D6
00005D6C  6600 0018               9803m         BNE     ADRABSOLUTEDST_766 
00005D70                          9804m         
00005D70  3A03                    9805m         MOVE.W  D3, D5
00005D72  0803 0002               9806m         BTST    #2, D3
00005D76  6600 0024               9807m         BNE     ADRIMMEDIATE_766
00005D7A  0803 0000               9808m         BTST    #0, D3
00005D7E  6600 0280               9809m         BNE     ADRABSOLUTEL_766
00005D82  6000 01E6               9810m         BRA     ADRABSOLUTEW_766
00005D86                          9811m ADRABSOLUTEDST_766:
00005D86  3A03                    9812m         MOVE.W  D3, D5
00005D88  0803 000B               9813m         BTST    #$B, D3
00005D8C  6600 000E               9814m         BNE     ADRIMMEDIATE_766
00005D90  0803 0009               9815m         BTST    #$09, D3
00005D94  6600 026A               9816m         BNE     ADRABSOLUTEL_766
00005D98  6000 01D0               9817m         BRA     ADRABSOLUTEW_766
00005D9C                          9818m ADRIMMEDIATE_766:
00005D9C  BE3C 0001               9819m         CMP.B   #1, D7
00005DA0  6700 00A2               9820m         BEQ     ADRIMMEDIATEL_766
00005DA4                          9821m ADRIMMEDIATEW_766:
00005DA4  361A                    9822m         MOVE.W  (A2)+, D3
00005DA6                          9823mm         PRINTHASH
00005DA6  103C 0006               9824mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DAA  323C 0023               9825mm         MOVE.W  #35, D1     ; AN = SIGN
00005DAE  4E4F                    9826mm         TRAP    #15         ; OUTPUT = SIGN
00005DB0                          9827mm         ENDM
00005DB0                          9828mm         PRINTSIGN
00005DB0  103C 0006               9829mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DB4  323C 0024               9830mm         MOVE.W  #36, D1     ; AN = SIGN
00005DB8  4E4F                    9831mm         TRAP    #15         ; OUTPUT = SIGN
00005DBA                          9832mm         ENDM
00005DBA                          9833mm         ADROUT
00005DBA  103C 0006               9834mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DBE  3212                    9835mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DC0  E049                    9836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DC2  E849                    9837mm         LSR.W   #4, D1      
00005DC4                          9838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DC4  0C01 0009               9839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DC8  6E00 000A               9840mmm         BGT     ALPHA_796
00005DCC  0601 0030               9841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DD0  6000 0006               9842mmm         BRA     DONE_796
00005DD4  0601 0037               9843mmm ALPHA_796: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DD8  4E71                    9844mmm DONE_796: NOP
00005DDA                          9845mmm         ENDM
00005DDA  4E4F                    9846mm         TRAP    #15         ; EXECUTE OUTPUT
00005DDC                          9847mm         
00005DDC  3212                    9848mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DDE  E949                    9849mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DE0  E049                    9850mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DE2  E849                    9851mm         LSR.W   #4, D1      
00005DE4                          9852mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DE4  0C01 0009               9853mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DE8  6E00 000A               9854mmm         BGT     ALPHA_797
00005DEC  0601 0030               9855mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DF0  6000 0006               9856mmm         BRA     DONE_797
00005DF4  0601 0037               9857mmm ALPHA_797: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DF8  4E71                    9858mmm DONE_797: NOP
00005DFA                          9859mmm         ENDM
00005DFA  4E4F                    9860mm         TRAP    #15         ; EXECUTE OUTPUT
00005DFC                          9861mm         
00005DFC  3212                    9862mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DFE  E149                    9863mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E00  E049                    9864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E02  E849                    9865mm         LSR.W   #4, D1      
00005E04                          9866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E04  0C01 0009               9867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E08  6E00 000A               9868mmm         BGT     ALPHA_798
00005E0C  0601 0030               9869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E10  6000 0006               9870mmm         BRA     DONE_798
00005E14  0601 0037               9871mmm ALPHA_798: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E18  4E71                    9872mmm DONE_798: NOP
00005E1A                          9873mmm         ENDM
00005E1A  4E4F                    9874mm         TRAP    #15         ; EXECUTE OUTPUT
00005E1C                          9875mm         
00005E1C  3212                    9876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E1E  E149                    9877mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E20  E949                    9878mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E22  E049                    9879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E24  E849                    9880mm         LSR.W   #4, D1      
00005E26                          9881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E26  0C01 0009               9882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E2A  6E00 000A               9883mmm         BGT     ALPHA_799
00005E2E  0601 0030               9884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E32  6000 0006               9885mmm         BRA     DONE_799
00005E36  0601 0037               9886mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E3A  4E71                    9887mmm DONE_799: NOP
00005E3C                          9888mmm         ENDM
00005E3C  4E4F                    9889mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E3E                          9890mm         ENDM 
00005E3E  3605                    9891m         MOVE.W  D5, D3
00005E40  6000 02D6               9892m         BRA     COMPLETE_766
00005E44                          9893m ADRIMMEDIATEL_766:
00005E44  361A                    9894m         MOVE.W  (A2)+, D3
00005E46                          9895mm         PRINTHASH
00005E46  103C 0006               9896mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E4A  323C 0023               9897mm         MOVE.W  #35, D1     ; AN = SIGN
00005E4E  4E4F                    9898mm         TRAP    #15         ; OUTPUT = SIGN
00005E50                          9899mm         ENDM
00005E50                          9900mm         PRINTSIGN
00005E50  103C 0006               9901mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E54  323C 0024               9902mm         MOVE.W  #36, D1     ; AN = SIGN
00005E58  4E4F                    9903mm         TRAP    #15         ; OUTPUT = SIGN
00005E5A                          9904mm         ENDM
00005E5A                          9905mm         ADROUT 
00005E5A  103C 0006               9906mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E5E  3212                    9907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E60  E049                    9908mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E62  E849                    9909mm         LSR.W   #4, D1      
00005E64                          9910mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E64  0C01 0009               9911mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E68  6E00 000A               9912mmm         BGT     ALPHA_803
00005E6C  0601 0030               9913mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E70  6000 0006               9914mmm         BRA     DONE_803
00005E74  0601 0037               9915mmm ALPHA_803: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E78  4E71                    9916mmm DONE_803: NOP
00005E7A                          9917mmm         ENDM
00005E7A  4E4F                    9918mm         TRAP    #15         ; EXECUTE OUTPUT
00005E7C                          9919mm         
00005E7C  3212                    9920mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E7E  E949                    9921mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E80  E049                    9922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E82  E849                    9923mm         LSR.W   #4, D1      
00005E84                          9924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E84  0C01 0009               9925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E88  6E00 000A               9926mmm         BGT     ALPHA_804
00005E8C  0601 0030               9927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E90  6000 0006               9928mmm         BRA     DONE_804
00005E94  0601 0037               9929mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E98  4E71                    9930mmm DONE_804: NOP
00005E9A                          9931mmm         ENDM
00005E9A  4E4F                    9932mm         TRAP    #15         ; EXECUTE OUTPUT
00005E9C                          9933mm         
00005E9C  3212                    9934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E9E  E149                    9935mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EA0  E049                    9936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA2  E849                    9937mm         LSR.W   #4, D1      
00005EA4                          9938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA4  0C01 0009               9939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EA8  6E00 000A               9940mmm         BGT     ALPHA_805
00005EAC  0601 0030               9941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB0  6000 0006               9942mmm         BRA     DONE_805
00005EB4  0601 0037               9943mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EB8  4E71                    9944mmm DONE_805: NOP
00005EBA                          9945mmm         ENDM
00005EBA  4E4F                    9946mm         TRAP    #15         ; EXECUTE OUTPUT
00005EBC                          9947mm         
00005EBC  3212                    9948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EBE  E149                    9949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EC0  E949                    9950mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005EC2  E049                    9951mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC4  E849                    9952mm         LSR.W   #4, D1      
00005EC6                          9953mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EC6  0C01 0009               9954mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECA  6E00 000A               9955mmm         BGT     ALPHA_806
00005ECE  0601 0030               9956mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED2  6000 0006               9957mmm         BRA     DONE_806
00005ED6  0601 0037               9958mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDA  4E71                    9959mmm DONE_806: NOP
00005EDC                          9960mmm         ENDM
00005EDC  4E4F                    9961mm         TRAP    #15         ; EXECUTE OUTPUT       
00005EDE                          9962mm         ENDM 
00005EDE  361A                    9963m         MOVE.W  (A2)+, D3
00005EE0                          9964mm         ADROUT
00005EE0  103C 0006               9965mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005EE4  3212                    9966mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EE6  E049                    9967mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EE8  E849                    9968mm         LSR.W   #4, D1      
00005EEA                          9969mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EEA  0C01 0009               9970mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EEE  6E00 000A               9971mmm         BGT     ALPHA_808
00005EF2  0601 0030               9972mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EF6  6000 0006               9973mmm         BRA     DONE_808
00005EFA  0601 0037               9974mmm ALPHA_808: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EFE  4E71                    9975mmm DONE_808: NOP
00005F00                          9976mmm         ENDM
00005F00  4E4F                    9977mm         TRAP    #15         ; EXECUTE OUTPUT
00005F02                          9978mm         
00005F02  3212                    9979mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F04  E949                    9980mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F06  E049                    9981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F08  E849                    9982mm         LSR.W   #4, D1      
00005F0A                          9983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F0A  0C01 0009               9984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F0E  6E00 000A               9985mmm         BGT     ALPHA_809
00005F12  0601 0030               9986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F16  6000 0006               9987mmm         BRA     DONE_809
00005F1A  0601 0037               9988mmm ALPHA_809: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F1E  4E71                    9989mmm DONE_809: NOP
00005F20                          9990mmm         ENDM
00005F20  4E4F                    9991mm         TRAP    #15         ; EXECUTE OUTPUT
00005F22                          9992mm         
00005F22  3212                    9993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F24  E149                    9994mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F26  E049                    9995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F28  E849                    9996mm         LSR.W   #4, D1      
00005F2A                          9997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F2A  0C01 0009               9998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F2E  6E00 000A               9999mmm         BGT     ALPHA_810
00005F32  0601 0030              10000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F36  6000 0006              10001mmm         BRA     DONE_810
00005F3A  0601 0037              10002mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F3E  4E71                   10003mmm DONE_810: NOP
00005F40                         10004mmm         ENDM
00005F40  4E4F                   10005mm         TRAP    #15         ; EXECUTE OUTPUT
00005F42                         10006mm         
00005F42  3212                   10007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F44  E149                   10008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F46  E949                   10009mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F48  E049                   10010mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F4A  E849                   10011mm         LSR.W   #4, D1      
00005F4C                         10012mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F4C  0C01 0009              10013mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F50  6E00 000A              10014mmm         BGT     ALPHA_811
00005F54  0601 0030              10015mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F58  6000 0006              10016mmm         BRA     DONE_811
00005F5C  0601 0037              10017mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F60  4E71                   10018mmm DONE_811: NOP
00005F62                         10019mmm         ENDM
00005F62  4E4F                   10020mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F64                         10021mm         ENDM 
00005F64  3605                   10022m         MOVE.W  D5, D3
00005F66  6000 01B0              10023m         BRA     COMPLETE_766 
00005F6A                         10024m ADRABSOLUTEW_766:     
00005F6A  361A                   10025m         MOVE.W  (A2)+, D3
00005F6C                         10026mm         PRINTSIGN
00005F6C  103C 0006              10027mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F70  323C 0024              10028mm         MOVE.W  #36, D1     ; AN = SIGN
00005F74  4E4F                   10029mm         TRAP    #15         ; OUTPUT = SIGN
00005F76                         10030mm         ENDM
00005F76                         10031mm         ADROUT
00005F76  103C 0006              10032mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F7A  3212                   10033mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F7C  E049                   10034mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F7E  E849                   10035mm         LSR.W   #4, D1      
00005F80                         10036mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F80  0C01 0009              10037mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F84  6E00 000A              10038mmm         BGT     ALPHA_814
00005F88  0601 0030              10039mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F8C  6000 0006              10040mmm         BRA     DONE_814
00005F90  0601 0037              10041mmm ALPHA_814: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F94  4E71                   10042mmm DONE_814: NOP
00005F96                         10043mmm         ENDM
00005F96  4E4F                   10044mm         TRAP    #15         ; EXECUTE OUTPUT
00005F98                         10045mm         
00005F98  3212                   10046mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F9A  E949                   10047mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F9C  E049                   10048mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F9E  E849                   10049mm         LSR.W   #4, D1      
00005FA0                         10050mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FA0  0C01 0009              10051mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FA4  6E00 000A              10052mmm         BGT     ALPHA_815
00005FA8  0601 0030              10053mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FAC  6000 0006              10054mmm         BRA     DONE_815
00005FB0  0601 0037              10055mmm ALPHA_815: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FB4  4E71                   10056mmm DONE_815: NOP
00005FB6                         10057mmm         ENDM
00005FB6  4E4F                   10058mm         TRAP    #15         ; EXECUTE OUTPUT
00005FB8                         10059mm         
00005FB8  3212                   10060mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FBA  E149                   10061mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FBC  E049                   10062mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FBE  E849                   10063mm         LSR.W   #4, D1      
00005FC0                         10064mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FC0  0C01 0009              10065mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FC4  6E00 000A              10066mmm         BGT     ALPHA_816
00005FC8  0601 0030              10067mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FCC  6000 0006              10068mmm         BRA     DONE_816
00005FD0  0601 0037              10069mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FD4  4E71                   10070mmm DONE_816: NOP
00005FD6                         10071mmm         ENDM
00005FD6  4E4F                   10072mm         TRAP    #15         ; EXECUTE OUTPUT
00005FD8                         10073mm         
00005FD8  3212                   10074mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FDA  E149                   10075mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FDC  E949                   10076mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005FDE  E049                   10077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FE0  E849                   10078mm         LSR.W   #4, D1      
00005FE2                         10079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FE2  0C01 0009              10080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FE6  6E00 000A              10081mmm         BGT     ALPHA_817
00005FEA  0601 0030              10082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FEE  6000 0006              10083mmm         BRA     DONE_817
00005FF2  0601 0037              10084mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FF6  4E71                   10085mmm DONE_817: NOP
00005FF8                         10086mmm         ENDM
00005FF8  4E4F                   10087mm         TRAP    #15         ; EXECUTE OUTPUT       
00005FFA                         10088mm         ENDM 
00005FFA  3605                   10089m         MOVE.W  D5, D3
00005FFC  6000 011A              10090m         BRA     COMPLETE_766  
00006000                         10091m ADRABSOLUTEL_766:  
00006000  361A                   10092m         MOVE.W  (A2)+, D3
00006002                         10093mm         PRINTSIGN
00006002  103C 0006              10094mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006006  323C 0024              10095mm         MOVE.W  #36, D1     ; AN = SIGN
0000600A  4E4F                   10096mm         TRAP    #15         ; OUTPUT = SIGN
0000600C                         10097mm         ENDM
0000600C                         10098mm         ADROUT 
0000600C  103C 0006              10099mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006010  3212                   10100mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006012  E049                   10101mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006014  E849                   10102mm         LSR.W   #4, D1      
00006016                         10103mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006016  0C01 0009              10104mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000601A  6E00 000A              10105mmm         BGT     ALPHA_820
0000601E  0601 0030              10106mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006022  6000 0006              10107mmm         BRA     DONE_820
00006026  0601 0037              10108mmm ALPHA_820: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000602A  4E71                   10109mmm DONE_820: NOP
0000602C                         10110mmm         ENDM
0000602C  4E4F                   10111mm         TRAP    #15         ; EXECUTE OUTPUT
0000602E                         10112mm         
0000602E  3212                   10113mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006030  E949                   10114mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006032  E049                   10115mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006034  E849                   10116mm         LSR.W   #4, D1      
00006036                         10117mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006036  0C01 0009              10118mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000603A  6E00 000A              10119mmm         BGT     ALPHA_821
0000603E  0601 0030              10120mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006042  6000 0006              10121mmm         BRA     DONE_821
00006046  0601 0037              10122mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000604A  4E71                   10123mmm DONE_821: NOP
0000604C                         10124mmm         ENDM
0000604C  4E4F                   10125mm         TRAP    #15         ; EXECUTE OUTPUT
0000604E                         10126mm         
0000604E  3212                   10127mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006050  E149                   10128mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006052  E049                   10129mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006054  E849                   10130mm         LSR.W   #4, D1      
00006056                         10131mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006056  0C01 0009              10132mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000605A  6E00 000A              10133mmm         BGT     ALPHA_822
0000605E  0601 0030              10134mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006062  6000 0006              10135mmm         BRA     DONE_822
00006066  0601 0037              10136mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000606A  4E71                   10137mmm DONE_822: NOP
0000606C                         10138mmm         ENDM
0000606C  4E4F                   10139mm         TRAP    #15         ; EXECUTE OUTPUT
0000606E                         10140mm         
0000606E  3212                   10141mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006070  E149                   10142mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006072  E949                   10143mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006074  E049                   10144mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006076  E849                   10145mm         LSR.W   #4, D1      
00006078                         10146mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006078  0C01 0009              10147mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000607C  6E00 000A              10148mmm         BGT     ALPHA_823
00006080  0601 0030              10149mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006084  6000 0006              10150mmm         BRA     DONE_823
00006088  0601 0037              10151mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000608C  4E71                   10152mmm DONE_823: NOP
0000608E                         10153mmm         ENDM
0000608E  4E4F                   10154mm         TRAP    #15         ; EXECUTE OUTPUT       
00006090                         10155mm         ENDM 
00006090  361A                   10156m         MOVE.W  (A2)+, D3
00006092                         10157mm         ADROUT
00006092  103C 0006              10158mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006096  3212                   10159mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006098  E049                   10160mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000609A  E849                   10161mm         LSR.W   #4, D1      
0000609C                         10162mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000609C  0C01 0009              10163mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060A0  6E00 000A              10164mmm         BGT     ALPHA_825
000060A4  0601 0030              10165mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060A8  6000 0006              10166mmm         BRA     DONE_825
000060AC  0601 0037              10167mmm ALPHA_825: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060B0  4E71                   10168mmm DONE_825: NOP
000060B2                         10169mmm         ENDM
000060B2  4E4F                   10170mm         TRAP    #15         ; EXECUTE OUTPUT
000060B4                         10171mm         
000060B4  3212                   10172mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060B6  E949                   10173mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000060B8  E049                   10174mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060BA  E849                   10175mm         LSR.W   #4, D1      
000060BC                         10176mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060BC  0C01 0009              10177mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060C0  6E00 000A              10178mmm         BGT     ALPHA_826
000060C4  0601 0030              10179mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060C8  6000 0006              10180mmm         BRA     DONE_826
000060CC  0601 0037              10181mmm ALPHA_826: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060D0  4E71                   10182mmm DONE_826: NOP
000060D2                         10183mmm         ENDM
000060D2  4E4F                   10184mm         TRAP    #15         ; EXECUTE OUTPUT
000060D4                         10185mm         
000060D4  3212                   10186mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060D6  E149                   10187mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000060D8  E049                   10188mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060DA  E849                   10189mm         LSR.W   #4, D1      
000060DC                         10190mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060DC  0C01 0009              10191mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060E0  6E00 000A              10192mmm         BGT     ALPHA_827
000060E4  0601 0030              10193mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060E8  6000 0006              10194mmm         BRA     DONE_827
000060EC  0601 0037              10195mmm ALPHA_827: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060F0  4E71                   10196mmm DONE_827: NOP
000060F2                         10197mmm         ENDM
000060F2  4E4F                   10198mm         TRAP    #15         ; EXECUTE OUTPUT
000060F4                         10199mm         
000060F4  3212                   10200mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060F6  E149                   10201mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000060F8  E949                   10202mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000060FA  E049                   10203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060FC  E849                   10204mm         LSR.W   #4, D1      
000060FE                         10205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060FE  0C01 0009              10206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006102  6E00 000A              10207mmm         BGT     ALPHA_828
00006106  0601 0030              10208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000610A  6000 0006              10209mmm         BRA     DONE_828
0000610E  0601 0037              10210mmm ALPHA_828: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006112  4E71                   10211mmm DONE_828: NOP
00006114                         10212mmm         ENDM
00006114  4E4F                   10213mm         TRAP    #15         ; EXECUTE OUTPUT       
00006116                         10214mm         ENDM 
00006116  3605                   10215m         MOVE.W  D5, D3
00006118                         10216m 
00006118                         10217m COMPLETE_766:  ; OPCODE HAS BEEN VERIFIED
00006118                         10218m         ENDM
00006118  4E75                   10219          RTS                 ; Return from decodeNOT subroutine
0000611A                         10220  
0000611A                         10221  ; ------------------------------------------------------------
0000611A                         10222  ; 11a. "decodeLSx_M" subroutine
0000611A                         10223  ; AUTHOR
0000611A                         10224  ;
0000611A                         10225  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
0000611A                         10226  ; ------------------------------------------------------------
0000611A                         10227  decodeLSx_M:
0000611A                         10228m         verifyOpcode    pLSx_M, (A2)
0000611A  43F8 01A5              10229m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
0000611E  3612                   10230m         MOVE.W  (A2), D3      ; INPUT VALUE
00006120  123C 000F              10231m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006124                         10232m         
00006124                         10233m LOOP_829: 
00006124  0C11 0030              10234m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006128  6700 000E              10235m         BEQ     CHECKFOR0_829
0000612C  0C11 0031              10236m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006130  6700 0010              10237m         BEQ     CHECKFOR1_829
00006134  6000 0012              10238m         BRA     NEXT_829      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006138                         10239m         
00006138                         10240m CHECKFOR0_829: 
00006138  0303                   10241m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000613A  6600 1000              10242m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000613E  6000 0008              10243m         BRA     NEXT_829
00006142                         10244m 
00006142                         10245m CHECKFOR1_829:
00006142  0303                   10246m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006144  6700 0FF6              10247m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006148                         10248m 
00006148                         10249m NEXT_829: 
00006148  B23C 0000              10250m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000614C  6700 0008              10251m         BEQ     COMPLETE_829  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006150  5301                   10252m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006152  1819                   10253m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006154  60CE                   10254m         BRA     LOOP_829      ; BEGIN LOOP AGAIN
00006156                         10255m 
00006156                         10256m COMPLETE_829:  ; OPCODE HAS BEEN VERIFIED
00006156                         10257m         ENDM
00006156  0803 0008              10258          BTST    #$08, D3     ; Check the 8th bit
0000615A  6700 0010              10259          BEQ     LSR_M
0000615E  43F8 0098              10260  LSL_M:  LEA     oLSL, A1
00006162  103C 000E              10261          MOVE.B  #14,D0          
00006166  4E4F                   10262          TRAP    #15 
00006168  6000 000C              10263          BRA     reg_M        
0000616C                         10264    
0000616C  43F8 009C              10265  LSR_M:  LEA     oLSR, A1
00006170  103C 000E              10266          MOVE.B  #14,D0          
00006174  4E4F                   10267          TRAP    #15      
00006176                         10268m reg_M:  printSizeLow       (A2) 
00006176  3612                   10269m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006178  4247                   10270m         CLR     D7   
0000617A                         10271m CHECKFORB_830: 
0000617A  0803 0006              10272m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000617E  6600 0018              10273m         BNE     CHECKFORW_830  ; IF NOT GO TO WORD SIZE
00006182  0803 0007              10274m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006186  6600 001E              10275m         BNE     CHECKFORL_830 ; IF NOT GO TO LONGWORD SIZE
0000618A  43F8 00C0              10276m         LEA     OBSIZE, A1     
0000618E  103C 000E              10277m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006192  4E4F                   10278m         TRAP    #15
00006194  6000 001E              10279m         BRA     COMPLETE_830      
00006198                         10280m CHECKFORW_830: 
00006198  43F8 00C4              10281m         LEA     OWSIZE, A1     
0000619C  103C 000E              10282m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000061A0  4E4F                   10283m         TRAP    #15
000061A2  6000 0010              10284m         BRA     COMPLETE_830  
000061A6                         10285m CHECKFORL_830:
000061A6  1E3C 0001              10286m         MOVE.B  #$1, D7
000061AA  43F8 00C8              10287m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000061AE  103C 000E              10288m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061B2  4E4F                   10289m         TRAP    #15
000061B4                         10290m COMPLETE_830:  ; SIZE HAS BEEN PRINTED
000061B4                         10291m         ENDM
000061B4                         10292m         printCount       (A2)
000061B4  3212                   10293m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000061B6  E949                   10294m         LSL     #$04, D1
000061B8  E049                   10295m         LSR     #$08, D1
000061BA  EA49                   10296m         LSR     #$05, D1
000061BC  43F8 00DB              10297m         LEA     OHASH, A1     
000061C0  103C 000E              10298m         MOVE.B  #14,D0          
000061C4  4E4F                   10299m         TRAP    #15
000061C6  103C 0003              10300m         MOVE.B  #3,D0          
000061CA  4E4F                   10301m         TRAP    #15
000061CC                         10302m         ENDM
000061CC                         10303m         printComma
000061CC  43F8 00D4              10304m         LEA     OCOMMA, A1     
000061D0  103C 000E              10305m         MOVE.B  #14,D0          
000061D4  4E4F                   10306m         TRAP    #15
000061D6                         10307m         ENDM
000061D6                         10308m         printDnSrc     (A2)        
000061D6  4281                   10309m         CLR.L   D1
000061D8  3212                   10310m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000061DA  E149                   10311m         LSL     #$08, D1
000061DC  EB49                   10312m         LSL     #$05, D1
000061DE  E049                   10313m         LSR     #$08, D1
000061E0  EA49                   10314m         LSR     #$05, D1
000061E2  43F8 00CC              10315m         LEA     ODN, A1     
000061E6  103C 000E              10316m         MOVE.B  #14,D0          
000061EA  4E4F                   10317m         TRAP    #15
000061EC  103C 0003              10318m         MOVE.B  #3,D0          
000061F0  4E4F                   10319m         TRAP    #15
000061F2                         10320m         ENDM
000061F2  4E75                   10321          RTS                 ; Return from decodeLSx_M subroutine
000061F4                         10322  
000061F4                         10323  
000061F4                         10324  ; ------------------------------------------------------------
000061F4                         10325  ; 11b. "decodeLSx_R" subroutine
000061F4                         10326  ; AUTHOR
000061F4                         10327  ;
000061F4                         10328  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000061F4                         10329  ; ------------------------------------------------------------
000061F4                         10330  decodeLSx_R:
000061F4                         10331m         verifyOpcode    pLSx_R, (A2)
000061F4  43F8 01B6              10332m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
000061F8  3612                   10333m         MOVE.W  (A2), D3      ; INPUT VALUE
000061FA  123C 000F              10334m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000061FE                         10335m         
000061FE                         10336m LOOP_834: 
000061FE  0C11 0030              10337m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006202  6700 000E              10338m         BEQ     CHECKFOR0_834
00006206  0C11 0031              10339m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000620A  6700 0010              10340m         BEQ     CHECKFOR1_834
0000620E  6000 0012              10341m         BRA     NEXT_834      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006212                         10342m         
00006212                         10343m CHECKFOR0_834: 
00006212  0303                   10344m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006214  6600 0F26              10345m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006218  6000 0008              10346m         BRA     NEXT_834
0000621C                         10347m 
0000621C                         10348m CHECKFOR1_834:
0000621C  0303                   10349m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000621E  6700 0F1C              10350m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006222                         10351m 
00006222                         10352m NEXT_834: 
00006222  B23C 0000              10353m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006226  6700 0008              10354m         BEQ     COMPLETE_834  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000622A  5301                   10355m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000622C  1819                   10356m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000622E  60CE                   10357m         BRA     LOOP_834      ; BEGIN LOOP AGAIN
00006230                         10358m 
00006230                         10359m COMPLETE_834:  ; OPCODE HAS BEEN VERIFIED
00006230                         10360m         ENDM
00006230  0803 0008              10361          BTST    #$08, D3     ; Check the 8th bit
00006234  6700 0010              10362          BEQ     LSR_R
00006238  43F8 0098              10363  LSL_R:  LEA     oLSL, A1
0000623C  103C 000E              10364          MOVE.B  #14,D0          
00006240  4E4F                   10365          TRAP    #15 
00006242  6000 000C              10366          BRA     reg_R       
00006246                         10367    
00006246  43F8 009C              10368  LSR_R:  LEA     oLSR, A1
0000624A  103C 000E              10369          MOVE.B  #14,D0          
0000624E  4E4F                   10370          TRAP    #15      
00006250                         10371m reg_R:  printSizeLow       (A2)
00006250  3612                   10372m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006252  4247                   10373m         CLR     D7   
00006254                         10374m CHECKFORB_835: 
00006254  0803 0006              10375m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006258  6600 0018              10376m         BNE     CHECKFORW_835  ; IF NOT GO TO WORD SIZE
0000625C  0803 0007              10377m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006260  6600 001E              10378m         BNE     CHECKFORL_835 ; IF NOT GO TO LONGWORD SIZE
00006264  43F8 00C0              10379m         LEA     OBSIZE, A1     
00006268  103C 000E              10380m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000626C  4E4F                   10381m         TRAP    #15
0000626E  6000 001E              10382m         BRA     COMPLETE_835      
00006272                         10383m CHECKFORW_835: 
00006272  43F8 00C4              10384m         LEA     OWSIZE, A1     
00006276  103C 000E              10385m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000627A  4E4F                   10386m         TRAP    #15
0000627C  6000 0010              10387m         BRA     COMPLETE_835  
00006280                         10388m CHECKFORL_835:
00006280  1E3C 0001              10389m         MOVE.B  #$1, D7
00006284  43F8 00C8              10390m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006288  103C 000E              10391m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000628C  4E4F                   10392m         TRAP    #15
0000628E                         10393m COMPLETE_835:  ; SIZE HAS BEEN PRINTED
0000628E                         10394m         ENDM
0000628E                         10395m         printDnDest    (A2)
0000628E  3212                   10396m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006290  E949                   10397m         LSL     #$04, D1
00006292  E049                   10398m         LSR     #$08, D1
00006294  EA49                   10399m         LSR     #$05, D1
00006296  43F8 00CC              10400m         LEA     ODN, A1     
0000629A  103C 000E              10401m         MOVE.B  #14,D0          
0000629E  4E4F                   10402m         TRAP    #15
000062A0  103C 0003              10403m         MOVE.B  #3,D0          
000062A4  4E4F                   10404m         TRAP    #15
000062A6                         10405m         ENDM
000062A6                         10406m         printComma
000062A6  43F8 00D4              10407m         LEA     OCOMMA, A1     
000062AA  103C 000E              10408m         MOVE.B  #14,D0          
000062AE  4E4F                   10409m         TRAP    #15
000062B0                         10410m         ENDM
000062B0                         10411m         printDnSrc     (A2)
000062B0  4281                   10412m         CLR.L   D1
000062B2  3212                   10413m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000062B4  E149                   10414m         LSL     #$08, D1
000062B6  EB49                   10415m         LSL     #$05, D1
000062B8  E049                   10416m         LSR     #$08, D1
000062BA  EA49                   10417m         LSR     #$05, D1
000062BC  43F8 00CC              10418m         LEA     ODN, A1     
000062C0  103C 000E              10419m         MOVE.B  #14,D0          
000062C4  4E4F                   10420m         TRAP    #15
000062C6  103C 0003              10421m         MOVE.B  #3,D0          
000062CA  4E4F                   10422m         TRAP    #15
000062CC                         10423m         ENDM
000062CC  4E75                   10424          RTS                 ; Return from ddecodeLSx_R subroutine
000062CE                         10425  
000062CE                         10426  ; ------------------------------------------------------------
000062CE                         10427  ; 11c. "decodeLSx_S" subroutine
000062CE                         10428  ; AUTHOR
000062CE                         10429  ;
000062CE                         10430  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000062CE                         10431  ; ------------------------------------------------------------
000062CE                         10432  decodeLSx_S:
000062CE                         10433m         verifyOpcode    pLSx_S, (A2)
000062CE  43F8 01C7              10434m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
000062D2  3612                   10435m         MOVE.W  (A2), D3      ; INPUT VALUE
000062D4  123C 000F              10436m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000062D8                         10437m         
000062D8                         10438m LOOP_839: 
000062D8  0C11 0030              10439m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000062DC  6700 000E              10440m         BEQ     CHECKFOR0_839
000062E0  0C11 0031              10441m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000062E4  6700 0010              10442m         BEQ     CHECKFOR1_839
000062E8  6000 0012              10443m         BRA     NEXT_839      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000062EC                         10444m         
000062EC                         10445m CHECKFOR0_839: 
000062EC  0303                   10446m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000062EE  6600 0E4C              10447m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000062F2  6000 0008              10448m         BRA     NEXT_839
000062F6                         10449m 
000062F6                         10450m CHECKFOR1_839:
000062F6  0303                   10451m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000062F8  6700 0E42              10452m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000062FC                         10453m 
000062FC                         10454m NEXT_839: 
000062FC  B23C 0000              10455m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006300  6700 0008              10456m         BEQ     COMPLETE_839  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006304  5301                   10457m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006306  1819                   10458m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006308  60CE                   10459m         BRA     LOOP_839      ; BEGIN LOOP AGAIN
0000630A                         10460m 
0000630A                         10461m COMPLETE_839:  ; OPCODE HAS BEEN VERIFIED
0000630A                         10462m         ENDM
0000630A  4E75                   10463          RTS                 ; Return from ddecodeLSx_S subroutine
0000630C                         10464          
0000630C                         10465  ; ------------------------------------------------------------
0000630C                         10466  ; 12a. "decodeASx_M" subroutine
0000630C                         10467  ; AUTHOR
0000630C                         10468  ;
0000630C                         10469  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
0000630C                         10470  ; ------------------------------------------------------------
0000630C                         10471  decodeASx_M:
0000630C                         10472m         verifyOpcode    pASx_M, (A2)
0000630C  43F8 01D8              10473m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006310  3612                   10474m         MOVE.W  (A2), D3      ; INPUT VALUE
00006312  123C 000F              10475m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006316                         10476m         
00006316                         10477m LOOP_840: 
00006316  0C11 0030              10478m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000631A  6700 000E              10479m         BEQ     CHECKFOR0_840
0000631E  0C11 0031              10480m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006322  6700 0010              10481m         BEQ     CHECKFOR1_840
00006326  6000 0012              10482m         BRA     NEXT_840      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000632A                         10483m         
0000632A                         10484m CHECKFOR0_840: 
0000632A  0303                   10485m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000632C  6600 0E0E              10486m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006330  6000 0008              10487m         BRA     NEXT_840
00006334                         10488m 
00006334                         10489m CHECKFOR1_840:
00006334  0303                   10490m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006336  6700 0E04              10491m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000633A                         10492m 
0000633A                         10493m NEXT_840: 
0000633A  B23C 0000              10494m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000633E  6700 0008              10495m         BEQ     COMPLETE_840  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006342  5301                   10496m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006344  1819                   10497m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006346  60CE                   10498m         BRA     LOOP_840      ; BEGIN LOOP AGAIN
00006348                         10499m 
00006348                         10500m COMPLETE_840:  ; OPCODE HAS BEEN VERIFIED
00006348                         10501m         ENDM
00006348  0803 0008              10502          BTST    #$08, D3     ; Check the 8th bit
0000634C  6700 0010              10503          BEQ     ASR_M
00006350  43F8 00A0              10504  ASL_M:  LEA     oASL, A1
00006354  103C 000E              10505          MOVE.B  #14,D0          
00006358  4E4F                   10506          TRAP    #15 
0000635A  6000 000C              10507          BRA     Areg_M        
0000635E                         10508    
0000635E  43F8 00A4              10509  ASR_M:  LEA     oASR, A1
00006362  103C 000E              10510          MOVE.B  #14,D0          
00006366  4E4F                   10511          TRAP    #15      
00006368                         10512m Areg_M: printSizeLow       (A2) 
00006368  3612                   10513m         MOVE.W  (A2), D3      ; INPUT VALUE   
0000636A  4247                   10514m         CLR     D7   
0000636C                         10515m CHECKFORB_841: 
0000636C  0803 0006              10516m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006370  6600 0018              10517m         BNE     CHECKFORW_841  ; IF NOT GO TO WORD SIZE
00006374  0803 0007              10518m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006378  6600 001E              10519m         BNE     CHECKFORL_841 ; IF NOT GO TO LONGWORD SIZE
0000637C  43F8 00C0              10520m         LEA     OBSIZE, A1     
00006380  103C 000E              10521m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006384  4E4F                   10522m         TRAP    #15
00006386  6000 001E              10523m         BRA     COMPLETE_841      
0000638A                         10524m CHECKFORW_841: 
0000638A  43F8 00C4              10525m         LEA     OWSIZE, A1     
0000638E  103C 000E              10526m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006392  4E4F                   10527m         TRAP    #15
00006394  6000 0010              10528m         BRA     COMPLETE_841  
00006398                         10529m CHECKFORL_841:
00006398  1E3C 0001              10530m         MOVE.B  #$1, D7
0000639C  43F8 00C8              10531m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000063A0  103C 000E              10532m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000063A4  4E4F                   10533m         TRAP    #15
000063A6                         10534m COMPLETE_841:  ; SIZE HAS BEEN PRINTED
000063A6                         10535m         ENDM
000063A6                         10536m         printCount       (A2)
000063A6  3212                   10537m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000063A8  E949                   10538m         LSL     #$04, D1
000063AA  E049                   10539m         LSR     #$08, D1
000063AC  EA49                   10540m         LSR     #$05, D1
000063AE  43F8 00DB              10541m         LEA     OHASH, A1     
000063B2  103C 000E              10542m         MOVE.B  #14,D0          
000063B6  4E4F                   10543m         TRAP    #15
000063B8  103C 0003              10544m         MOVE.B  #3,D0          
000063BC  4E4F                   10545m         TRAP    #15
000063BE                         10546m         ENDM
000063BE                         10547m         printComma
000063BE  43F8 00D4              10548m         LEA     OCOMMA, A1     
000063C2  103C 000E              10549m         MOVE.B  #14,D0          
000063C6  4E4F                   10550m         TRAP    #15
000063C8                         10551m         ENDM
000063C8                         10552m         printDnSrc     (A2)          
000063C8  4281                   10553m         CLR.L   D1
000063CA  3212                   10554m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000063CC  E149                   10555m         LSL     #$08, D1
000063CE  EB49                   10556m         LSL     #$05, D1
000063D0  E049                   10557m         LSR     #$08, D1
000063D2  EA49                   10558m         LSR     #$05, D1
000063D4  43F8 00CC              10559m         LEA     ODN, A1     
000063D8  103C 000E              10560m         MOVE.B  #14,D0          
000063DC  4E4F                   10561m         TRAP    #15
000063DE  103C 0003              10562m         MOVE.B  #3,D0          
000063E2  4E4F                   10563m         TRAP    #15
000063E4                         10564m         ENDM
000063E4  4E75                   10565          RTS                 ; Return from decodeASx_M subroutine
000063E6                         10566  
000063E6                         10567  
000063E6                         10568  ; ------------------------------------------------------------
000063E6                         10569  ; 12b. "decodeASx_R" subroutine
000063E6                         10570  ; AUTHOR
000063E6                         10571  ;
000063E6                         10572  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000063E6                         10573  ; ------------------------------------------------------------
000063E6                         10574  decodeASx_R:
000063E6                         10575m         verifyOpcode    pASx_R, (A2)
000063E6  43F8 01E9              10576m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
000063EA  3612                   10577m         MOVE.W  (A2), D3      ; INPUT VALUE
000063EC  123C 000F              10578m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063F0                         10579m         
000063F0                         10580m LOOP_845: 
000063F0  0C11 0030              10581m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063F4  6700 000E              10582m         BEQ     CHECKFOR0_845
000063F8  0C11 0031              10583m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063FC  6700 0010              10584m         BEQ     CHECKFOR1_845
00006400  6000 0012              10585m         BRA     NEXT_845      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006404                         10586m         
00006404                         10587m CHECKFOR0_845: 
00006404  0303                   10588m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006406  6600 0D34              10589m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000640A  6000 0008              10590m         BRA     NEXT_845
0000640E                         10591m 
0000640E                         10592m CHECKFOR1_845:
0000640E  0303                   10593m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006410  6700 0D2A              10594m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006414                         10595m 
00006414                         10596m NEXT_845: 
00006414  B23C 0000              10597m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006418  6700 0008              10598m         BEQ     COMPLETE_845  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000641C  5301                   10599m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000641E  1819                   10600m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006420  60CE                   10601m         BRA     LOOP_845      ; BEGIN LOOP AGAIN
00006422                         10602m 
00006422                         10603m COMPLETE_845:  ; OPCODE HAS BEEN VERIFIED
00006422                         10604m         ENDM
00006422  0803 0008              10605          BTST    #$08, D3     ; Check the 8th bit
00006426  6700 0010              10606          BEQ     ASR_R
0000642A  43F8 00A0              10607  ASL_R:  LEA     oASL, A1
0000642E  103C 000E              10608          MOVE.B  #14,D0          
00006432  4E4F                   10609          TRAP    #15 
00006434  6000 000C              10610          BRA     Areg_R       
00006438                         10611    
00006438  43F8 00A4              10612  ASR_R:  LEA     oASR, A1
0000643C  103C 000E              10613          MOVE.B  #14,D0          
00006440  4E4F                   10614          TRAP    #15      
00006442                         10615m Areg_R: printSizeLow       (A2)
00006442  3612                   10616m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006444  4247                   10617m         CLR     D7   
00006446                         10618m CHECKFORB_846: 
00006446  0803 0006              10619m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000644A  6600 0018              10620m         BNE     CHECKFORW_846  ; IF NOT GO TO WORD SIZE
0000644E  0803 0007              10621m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006452  6600 001E              10622m         BNE     CHECKFORL_846 ; IF NOT GO TO LONGWORD SIZE
00006456  43F8 00C0              10623m         LEA     OBSIZE, A1     
0000645A  103C 000E              10624m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000645E  4E4F                   10625m         TRAP    #15
00006460  6000 001E              10626m         BRA     COMPLETE_846      
00006464                         10627m CHECKFORW_846: 
00006464  43F8 00C4              10628m         LEA     OWSIZE, A1     
00006468  103C 000E              10629m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000646C  4E4F                   10630m         TRAP    #15
0000646E  6000 0010              10631m         BRA     COMPLETE_846  
00006472                         10632m CHECKFORL_846:
00006472  1E3C 0001              10633m         MOVE.B  #$1, D7
00006476  43F8 00C8              10634m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000647A  103C 000E              10635m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000647E  4E4F                   10636m         TRAP    #15
00006480                         10637m COMPLETE_846:  ; SIZE HAS BEEN PRINTED
00006480                         10638m         ENDM
00006480                         10639m         printDnDest    (A2)
00006480  3212                   10640m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006482  E949                   10641m         LSL     #$04, D1
00006484  E049                   10642m         LSR     #$08, D1
00006486  EA49                   10643m         LSR     #$05, D1
00006488  43F8 00CC              10644m         LEA     ODN, A1     
0000648C  103C 000E              10645m         MOVE.B  #14,D0          
00006490  4E4F                   10646m         TRAP    #15
00006492  103C 0003              10647m         MOVE.B  #3,D0          
00006496  4E4F                   10648m         TRAP    #15
00006498                         10649m         ENDM
00006498                         10650m         printComma
00006498  43F8 00D4              10651m         LEA     OCOMMA, A1     
0000649C  103C 000E              10652m         MOVE.B  #14,D0          
000064A0  4E4F                   10653m         TRAP    #15
000064A2                         10654m         ENDM
000064A2                         10655m         printDnSrc     (A2)
000064A2  4281                   10656m         CLR.L   D1
000064A4  3212                   10657m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000064A6  E149                   10658m         LSL     #$08, D1
000064A8  EB49                   10659m         LSL     #$05, D1
000064AA  E049                   10660m         LSR     #$08, D1
000064AC  EA49                   10661m         LSR     #$05, D1
000064AE  43F8 00CC              10662m         LEA     ODN, A1     
000064B2  103C 000E              10663m         MOVE.B  #14,D0          
000064B6  4E4F                   10664m         TRAP    #15
000064B8  103C 0003              10665m         MOVE.B  #3,D0          
000064BC  4E4F                   10666m         TRAP    #15
000064BE                         10667m         ENDM
000064BE  4E75                   10668          RTS                 ; Return from decodeASx_R subroutine
000064C0                         10669          
000064C0                         10670          ; ------------------------------------------------------------
000064C0                         10671  ; 12c. "decodeASx_S" subroutine
000064C0                         10672  ; AUTHOR
000064C0                         10673  ;
000064C0                         10674  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000064C0                         10675  ; ------------------------------------------------------------
000064C0                         10676  decodeASx_S:
000064C0                         10677m         verifyOpcode    pASx_S, (A2)
000064C0  43F8 01FA              10678m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
000064C4  3612                   10679m         MOVE.W  (A2), D3      ; INPUT VALUE
000064C6  123C 000F              10680m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000064CA                         10681m         
000064CA                         10682m LOOP_850: 
000064CA  0C11 0030              10683m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000064CE  6700 000E              10684m         BEQ     CHECKFOR0_850
000064D2  0C11 0031              10685m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000064D6  6700 0010              10686m         BEQ     CHECKFOR1_850
000064DA  6000 0012              10687m         BRA     NEXT_850      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000064DE                         10688m         
000064DE                         10689m CHECKFOR0_850: 
000064DE  0303                   10690m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000064E0  6600 0C5A              10691m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000064E4  6000 0008              10692m         BRA     NEXT_850
000064E8                         10693m 
000064E8                         10694m CHECKFOR1_850:
000064E8  0303                   10695m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000064EA  6700 0C50              10696m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000064EE                         10697m 
000064EE                         10698m NEXT_850: 
000064EE  B23C 0000              10699m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000064F2  6700 0008              10700m         BEQ     COMPLETE_850  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000064F6  5301                   10701m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000064F8  1819                   10702m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000064FA  60CE                   10703m         BRA     LOOP_850      ; BEGIN LOOP AGAIN
000064FC                         10704m 
000064FC                         10705m COMPLETE_850:  ; OPCODE HAS BEEN VERIFIED
000064FC                         10706m         ENDM
000064FC  4E75                   10707          RTS                 ; Return from decodeASx_S subroutine
000064FE                         10708  
000064FE                         10709  
000064FE                         10710  ; ------------------------------------------------------------
000064FE                         10711  ; 13a. "decodeBEQ" subroutine
000064FE                         10712  ; AUTHOR
000064FE                         10713  ;
000064FE                         10714  ; TODO: DESCRIPTION
000064FE                         10715  ; ------------------------------------------------------------
000064FE                         10716  decodeBEQ:
000064FE                         10717m         verifyOpcode    pBEQ, (A2)
000064FE  43F8 020B              10718m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
00006502  3612                   10719m         MOVE.W  (A2), D3      ; INPUT VALUE
00006504  123C 000F              10720m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006508                         10721m         
00006508                         10722m LOOP_851: 
00006508  0C11 0030              10723m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000650C  6700 000E              10724m         BEQ     CHECKFOR0_851
00006510  0C11 0031              10725m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006514  6700 0010              10726m         BEQ     CHECKFOR1_851
00006518  6000 0012              10727m         BRA     NEXT_851      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000651C                         10728m         
0000651C                         10729m CHECKFOR0_851: 
0000651C  0303                   10730m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000651E  6600 0C1C              10731m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006522  6000 0008              10732m         BRA     NEXT_851
00006526                         10733m 
00006526                         10734m CHECKFOR1_851:
00006526  0303                   10735m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006528  6700 0C12              10736m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000652C                         10737m 
0000652C                         10738m NEXT_851: 
0000652C  B23C 0000              10739m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006530  6700 0008              10740m         BEQ     COMPLETE_851  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006534  5301                   10741m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006536  1819                   10742m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006538  60CE                   10743m         BRA     LOOP_851      ; BEGIN LOOP AGAIN
0000653A                         10744m 
0000653A                         10745m COMPLETE_851:  ; OPCODE HAS BEEN VERIFIED
0000653A                         10746m         ENDM
0000653A  43F8 00A8              10747          LEA     oBEQ, A1     
0000653E  103C 000E              10748          MOVE.B  #14,D0          
00006542  4E4F                   10749          TRAP    #15
00006544                         10750m         space
00006544  43F8 00DD              10751m         LEA     OBLANK, A1
00006548  103C 000E              10752m         MOVE.B  #14,D0          
0000654C  4E4F                   10753m         TRAP    #15
0000654E                         10754m         ENDM
0000654E                         10755m         printSign
0000654E  103C 0006              10756m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006552  323C 0024              10757m         MOVE.W  #36, D1     ; AN = SIGN
00006556  4E4F                   10758m         TRAP    #15         ; OUTPUT = SIGN
00006558                         10759m         ENDM
00006558                         10760m         printBranch     (A2)
00006558  3612                   10761m         MOVE.W (A2), D3
0000655A  4241                   10762m         CLR     D1
0000655C  D203                   10763m         ADD.B   D3, D1
0000655E                         10764mm         CONVERTATOH D1
0000655E  0C01 0039              10765mm         CMPI.B  #$39, D1
00006562  6E00 000A              10766mm         BGT     ALPHA_855
00006566  0401 0030              10767mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000656A  6000 0006              10768mm         BRA     DONE_855
0000656E  0401 0037              10769mm ALPHA_855: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006572  4E71                   10770mm DONE_855: NOP
00006574                         10771mm         ENDM
00006574  103C 0003              10772m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006578  4E4F                   10773m         TRAP    #15
0000657A                         10774m         ENDM        
0000657A  4E75                   10775          RTS                 ; Return from decodeBEQ subroutine
0000657C                         10776  
0000657C                         10777  
0000657C                         10778  ; ------------------------------------------------------------
0000657C                         10779  ; 13b. "decodeBGE" subroutine
0000657C                         10780  ; AUTHOR
0000657C                         10781  ;
0000657C                         10782  ; TODO: DESCRIPTION
0000657C                         10783  ; ------------------------------------------------------------
0000657C                         10784  decodeBGE:
0000657C                         10785m         verifyOpcode    pBGE, (A2)
0000657C  43F8 021C              10786m         LEA     PBGE, A1      ; INPUT PATTERN STRING
00006580  3612                   10787m         MOVE.W  (A2), D3      ; INPUT VALUE
00006582  123C 000F              10788m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006586                         10789m         
00006586                         10790m LOOP_856: 
00006586  0C11 0030              10791m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000658A  6700 000E              10792m         BEQ     CHECKFOR0_856
0000658E  0C11 0031              10793m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006592  6700 0010              10794m         BEQ     CHECKFOR1_856
00006596  6000 0012              10795m         BRA     NEXT_856      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000659A                         10796m         
0000659A                         10797m CHECKFOR0_856: 
0000659A  0303                   10798m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000659C  6600 0B9E              10799m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000065A0  6000 0008              10800m         BRA     NEXT_856
000065A4                         10801m 
000065A4                         10802m CHECKFOR1_856:
000065A4  0303                   10803m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000065A6  6700 0B94              10804m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000065AA                         10805m 
000065AA                         10806m NEXT_856: 
000065AA  B23C 0000              10807m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000065AE  6700 0008              10808m         BEQ     COMPLETE_856  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000065B2  5301                   10809m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000065B4  1819                   10810m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000065B6  60CE                   10811m         BRA     LOOP_856      ; BEGIN LOOP AGAIN
000065B8                         10812m 
000065B8                         10813m COMPLETE_856:  ; OPCODE HAS BEEN VERIFIED
000065B8                         10814m         ENDM
000065B8  43F8 00AC              10815          LEA     oBGE, A1     
000065BC  103C 000E              10816          MOVE.B  #14,D0          
000065C0  4E4F                   10817          TRAP    #15
000065C2                         10818m         space
000065C2  43F8 00DD              10819m         LEA     OBLANK, A1
000065C6  103C 000E              10820m         MOVE.B  #14,D0          
000065CA  4E4F                   10821m         TRAP    #15
000065CC                         10822m         ENDM
000065CC                         10823m         printSign
000065CC  103C 0006              10824m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000065D0  323C 0024              10825m         MOVE.W  #36, D1     ; AN = SIGN
000065D4  4E4F                   10826m         TRAP    #15         ; OUTPUT = SIGN
000065D6                         10827m         ENDM
000065D6                         10828m         printBranch     (A2)
000065D6  3612                   10829m         MOVE.W (A2), D3
000065D8  4241                   10830m         CLR     D1
000065DA  D203                   10831m         ADD.B   D3, D1
000065DC                         10832mm         CONVERTATOH D1
000065DC  0C01 0039              10833mm         CMPI.B  #$39, D1
000065E0  6E00 000A              10834mm         BGT     ALPHA_860
000065E4  0401 0030              10835mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000065E8  6000 0006              10836mm         BRA     DONE_860
000065EC  0401 0037              10837mm ALPHA_860: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000065F0  4E71                   10838mm DONE_860: NOP
000065F2                         10839mm         ENDM
000065F2  103C 0003              10840m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
000065F6  4E4F                   10841m         TRAP    #15
000065F8                         10842m         ENDM        
000065F8  4E75                   10843          RTS                 ; Return from decodeBGE subroutine
000065FA                         10844  
000065FA                         10845  
000065FA                         10846  ; ------------------------------------------------------------
000065FA                         10847  ; 13c. "decodeBLT" subroutine
000065FA                         10848  ; AUTHOR
000065FA                         10849  ;
000065FA                         10850  ; TODO: DESCRIPTION
000065FA                         10851  ; ------------------------------------------------------------
000065FA                         10852  decodeBLT:
000065FA                         10853m         verifyOpcode    pBLT, (A2)
000065FA  43F8 022D              10854m         LEA     PBLT, A1      ; INPUT PATTERN STRING
000065FE  3612                   10855m         MOVE.W  (A2), D3      ; INPUT VALUE
00006600  123C 000F              10856m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006604                         10857m         
00006604                         10858m LOOP_861: 
00006604  0C11 0030              10859m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006608  6700 000E              10860m         BEQ     CHECKFOR0_861
0000660C  0C11 0031              10861m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006610  6700 0010              10862m         BEQ     CHECKFOR1_861
00006614  6000 0012              10863m         BRA     NEXT_861      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006618                         10864m         
00006618                         10865m CHECKFOR0_861: 
00006618  0303                   10866m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000661A  6600 0B20              10867m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000661E  6000 0008              10868m         BRA     NEXT_861
00006622                         10869m 
00006622                         10870m CHECKFOR1_861:
00006622  0303                   10871m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006624  6700 0B16              10872m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006628                         10873m 
00006628                         10874m NEXT_861: 
00006628  B23C 0000              10875m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000662C  6700 0008              10876m         BEQ     COMPLETE_861  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006630  5301                   10877m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006632  1819                   10878m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006634  60CE                   10879m         BRA     LOOP_861      ; BEGIN LOOP AGAIN
00006636                         10880m 
00006636                         10881m COMPLETE_861:  ; OPCODE HAS BEEN VERIFIED
00006636                         10882m         ENDM
00006636  43F8 00B0              10883          LEA     oBLT, A1     
0000663A  103C 000E              10884          MOVE.B  #14,D0          
0000663E  4E4F                   10885          TRAP    #15
00006640                         10886m         space
00006640  43F8 00DD              10887m         LEA     OBLANK, A1
00006644  103C 000E              10888m         MOVE.B  #14,D0          
00006648  4E4F                   10889m         TRAP    #15
0000664A                         10890m         ENDM
0000664A                         10891m         printSign
0000664A  103C 0006              10892m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000664E  323C 0024              10893m         MOVE.W  #36, D1     ; AN = SIGN
00006652  4E4F                   10894m         TRAP    #15         ; OUTPUT = SIGN
00006654                         10895m         ENDM
00006654                         10896m         printBranch     (A2)
00006654  3612                   10897m         MOVE.W (A2), D3
00006656  4241                   10898m         CLR     D1
00006658  D203                   10899m         ADD.B   D3, D1
0000665A                         10900mm         CONVERTATOH D1
0000665A  0C01 0039              10901mm         CMPI.B  #$39, D1
0000665E  6E00 000A              10902mm         BGT     ALPHA_865
00006662  0401 0030              10903mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00006666  6000 0006              10904mm         BRA     DONE_865
0000666A  0401 0037              10905mm ALPHA_865: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000666E  4E71                   10906mm DONE_865: NOP
00006670                         10907mm         ENDM
00006670  103C 0003              10908m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006674  4E4F                   10909m         TRAP    #15
00006676                         10910m         ENDM        
00006676  4E75                   10911          RTS                 ; Return from decodeBLT subroutine
00006678                         10912  
00006678                         10913  
00006678                         10914  ; ------------------------------------------------------------
00006678                         10915  ; 14. "decodeJSR" subroutine
00006678                         10916  ; AUTHOR
00006678                         10917  ;
00006678                         10918  ; TODO: DESCRIPTION
00006678                         10919  ; ------------------------------------------------------------
00006678                         10920  decodeJSR:
00006678                         10921m         verifyOpcode    pJSR, (A2)
00006678  43F8 023E              10922m         LEA     PJSR, A1      ; INPUT PATTERN STRING
0000667C  3612                   10923m         MOVE.W  (A2), D3      ; INPUT VALUE
0000667E  123C 000F              10924m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006682                         10925m         
00006682                         10926m LOOP_866: 
00006682  0C11 0030              10927m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006686  6700 000E              10928m         BEQ     CHECKFOR0_866
0000668A  0C11 0031              10929m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000668E  6700 0010              10930m         BEQ     CHECKFOR1_866
00006692  6000 0012              10931m         BRA     NEXT_866      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006696                         10932m         
00006696                         10933m CHECKFOR0_866: 
00006696  0303                   10934m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006698  6600 0AA2              10935m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000669C  6000 0008              10936m         BRA     NEXT_866
000066A0                         10937m 
000066A0                         10938m CHECKFOR1_866:
000066A0  0303                   10939m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000066A2  6700 0A98              10940m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000066A6                         10941m 
000066A6                         10942m NEXT_866: 
000066A6  B23C 0000              10943m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000066AA  6700 0008              10944m         BEQ     COMPLETE_866  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000066AE  5301                   10945m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000066B0  1819                   10946m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000066B2  60CE                   10947m         BRA     LOOP_866      ; BEGIN LOOP AGAIN
000066B4                         10948m 
000066B4                         10949m COMPLETE_866:  ; OPCODE HAS BEEN VERIFIED
000066B4                         10950m         ENDM
000066B4  43F8 00B4              10951          LEA     oJSR, A1     
000066B8  103C 000E              10952          MOVE.B  #14,D0          
000066BC  4E4F                   10953          TRAP    #15
000066BE                         10954          
000066BE  43F8 00DD              10955          LEA     oBlank, A1     
000066C2  103C 000E              10956          MOVE.B  #14,D0          
000066C6  4E4F                   10957          TRAP    #15
000066C8                         10958  
000066C8                         10959m         prepareAdrMode  #$1, (A2)
000066C8  3C3C 0001              10960m         MOVE.W  #$1, D6      ; INPUT VALUE
000066CC  3212                   10961m         MOVE.W  (A2), D1
000066CE  BC3C 0001              10962m         CMP.B   #$01, D6
000066D2  6700 000C              10963m         BEQ     ADRSOURCE_867    
000066D6                         10964m ADRDEST_867:
000066D6  EF49                   10965m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000066D8  E049                   10966m         LSR     #$08, D1
000066DA  EA49                   10967m         LSR     #$05, D1
000066DC  6000 000A              10968m         BRA     COMPLETE_867 
000066E0                         10969m ADRSOURCE_867:                
000066E0  E149                   10970m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000066E2  E549                   10971m         LSL     #$02, D1
000066E4  E049                   10972m         LSR     #$08, D1
000066E6  EA49                   10973m         LSR     #$05, D1
000066E8                         10974m COMPLETE_867:  ; OPCODE HAS BEEN VERIFIED
000066E8                         10975m         ENDM        
000066E8                         10976m         decodeAdrMode   (A2), D1        
000066E8  3612                   10977m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000066EA  3201                   10978m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000066EC                         10979m 
000066EC  B23C 0001              10980m         CMP.B   #$01, D1
000066F0  6700 0066              10981m         BEQ     ADRREGDIRECT_868    
000066F4  B23C 0002              10982m         CMP.B   #$02, D1
000066F8  6700 00A0              10983m         BEQ     ADRREGINDIRECT_868  
000066FC  B23C 0003              10984m         CMP.B   #$03, D1
00006700  6700 0102              10985m         BEQ     ADRREGPOSTINC_868  
00006704  B23C 0004              10986m         CMP.B   #$04, D1
00006708  6700 0178              10987m         BEQ     ADRREGPREDEC_868
0000670C  B23C 0007              10988m         CMP.B   #$07, D1
00006710  6700 01EE              10989m         BEQ     ADRABSOLUTE_868    
00006714                         10990m         
00006714                         10991m DATAREGDIRECT_868: 
00006714  BC3C 0001              10992m         CMP.B   #$01, D6
00006718  6700 001E              10993m         BEQ     DATAREGDIRECTSRC_868   
0000671C                         10994m DATAREGDIRECTDEST_868: 
0000671C                         10995mm         PRINTDNDEST D3 
0000671C  3203                   10996mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000671E  E949                   10997mm         LSL     #$04, D1
00006720  E049                   10998mm         LSR     #$08, D1
00006722  EA49                   10999mm         LSR     #$05, D1
00006724  43F8 00CC              11000mm         LEA     ODN, A1     
00006728  103C 000E              11001mm         MOVE.B  #14,D0          
0000672C  4E4F                   11002mm         TRAP    #15
0000672E  103C 0003              11003mm         MOVE.B  #3,D0          
00006732  4E4F                   11004mm         TRAP    #15
00006734                         11005mm         ENDM
00006734  6000 057A              11006m         BRA     COMPLETE_868 
00006738                         11007m DATAREGDIRECTSRC_868: 
00006738                         11008mm         PRINTDNSRC D3 
00006738  4281                   11009mm         CLR.L   D1
0000673A  3203                   11010mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000673C  E149                   11011mm         LSL     #$08, D1
0000673E  EB49                   11012mm         LSL     #$05, D1
00006740  E049                   11013mm         LSR     #$08, D1
00006742  EA49                   11014mm         LSR     #$05, D1
00006744  43F8 00CC              11015mm         LEA     ODN, A1     
00006748  103C 000E              11016mm         MOVE.B  #14,D0          
0000674C  4E4F                   11017mm         TRAP    #15
0000674E  103C 0003              11018mm         MOVE.B  #3,D0          
00006752  4E4F                   11019mm         TRAP    #15
00006754                         11020mm         ENDM
00006754  6000 055A              11021m         BRA     COMPLETE_868   
00006758                         11022m         
00006758                         11023m ADRREGDIRECT_868: 
00006758  BC3C 0001              11024m         CMP.B   #$01, D6
0000675C  6700 001E              11025m         BEQ     ADRREGDIRECTSRC_868   
00006760                         11026m ADRREGDIRECTDEST_868:
00006760                         11027mm         PRINTANDEST D3
00006760  3203                   11028mm         MOVE.W  D3, D1
00006762  E949                   11029mm         LSL     #$04, D1
00006764  E049                   11030mm         LSR     #$08, D1
00006766  EA49                   11031mm         LSR     #$05, D1
00006768  43F8 00CE              11032mm         LEA     OAN, A1     
0000676C  103C 000E              11033mm         MOVE.B  #14,D0          
00006770  4E4F                   11034mm         TRAP    #15
00006772  103C 0003              11035mm         MOVE.B  #3,D0          
00006776  4E4F                   11036mm         TRAP    #15
00006778                         11037mm         ENDM
00006778  6000 0536              11038m         BRA     COMPLETE_868   
0000677C                         11039m ADRREGDIRECTSRC_868:
0000677C                         11040mm         PRINTANSRC D3
0000677C  3203                   11041mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000677E  E149                   11042mm         LSL     #$08, D1
00006780  EB49                   11043mm         LSL     #$05, D1
00006782  E049                   11044mm         LSR     #$08, D1
00006784  EA49                   11045mm         LSR     #$05, D1
00006786  43F8 00CE              11046mm         LEA     OAN, A1     
0000678A  103C 000E              11047mm         MOVE.B  #14,D0          
0000678E  4E4F                   11048mm         TRAP    #15
00006790  103C 0003              11049mm         MOVE.B  #3,D0          
00006794  4E4F                   11050mm         TRAP    #15
00006796                         11051mm         ENDM
00006796  6000 0518              11052m         BRA     COMPLETE_868   
0000679A                         11053m        
0000679A                         11054m ADRREGINDIRECT_868:   
0000679A  BC3C 0001              11055m         CMP.B   #$01, D6
0000679E  6700 0032              11056m         BEQ     ADRREGINDIRECTSRC_868   
000067A2                         11057m ADRREGINDIRECTDEST_868:
000067A2                         11058mm         PRINTLB
000067A2  43F8 00D0              11059mm         LEA     OLB, A1     
000067A6  103C 000E              11060mm         MOVE.B  #14,D0          
000067AA  4E4F                   11061mm         TRAP    #15
000067AC                         11062mm         ENDM
000067AC                         11063mm         PRINTANDEST D3  
000067AC  3203                   11064mm         MOVE.W  D3, D1
000067AE  E949                   11065mm         LSL     #$04, D1
000067B0  E049                   11066mm         LSR     #$08, D1
000067B2  EA49                   11067mm         LSR     #$05, D1
000067B4  43F8 00CE              11068mm         LEA     OAN, A1     
000067B8  103C 000E              11069mm         MOVE.B  #14,D0          
000067BC  4E4F                   11070mm         TRAP    #15
000067BE  103C 0003              11071mm         MOVE.B  #3,D0          
000067C2  4E4F                   11072mm         TRAP    #15
000067C4                         11073mm         ENDM
000067C4                         11074mm         PRINTRB
000067C4  43F8 00D2              11075mm         LEA     ORB, A1     
000067C8  103C 000E              11076mm         MOVE.B  #14,D0          
000067CC  4E4F                   11077mm         TRAP    #15
000067CE                         11078mm         ENDM
000067CE  6000 04E0              11079m         BRA     COMPLETE_868     
000067D2                         11080m ADRREGINDIRECTSRC_868:   
000067D2                         11081mm         PRINTLB
000067D2  43F8 00D0              11082mm         LEA     OLB, A1     
000067D6  103C 000E              11083mm         MOVE.B  #14,D0          
000067DA  4E4F                   11084mm         TRAP    #15
000067DC                         11085mm         ENDM
000067DC                         11086mm         PRINTANSRC D3  
000067DC  3203                   11087mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000067DE  E149                   11088mm         LSL     #$08, D1
000067E0  EB49                   11089mm         LSL     #$05, D1
000067E2  E049                   11090mm         LSR     #$08, D1
000067E4  EA49                   11091mm         LSR     #$05, D1
000067E6  43F8 00CE              11092mm         LEA     OAN, A1     
000067EA  103C 000E              11093mm         MOVE.B  #14,D0          
000067EE  4E4F                   11094mm         TRAP    #15
000067F0  103C 0003              11095mm         MOVE.B  #3,D0          
000067F4  4E4F                   11096mm         TRAP    #15
000067F6                         11097mm         ENDM
000067F6                         11098mm         PRINTRB
000067F6  43F8 00D2              11099mm         LEA     ORB, A1     
000067FA  103C 000E              11100mm         MOVE.B  #14,D0          
000067FE  4E4F                   11101mm         TRAP    #15
00006800                         11102mm         ENDM
00006800  6000 04AE              11103m         BRA     COMPLETE_868   
00006804                         11104m         
00006804                         11105m ADRREGPOSTINC_868:   
00006804  BC3C 0001              11106m         CMP.B   #$01, D6
00006808  6700 003C              11107m         BEQ     ADRREGPOSTINCSRC_868   
0000680C                         11108m ADRREGPOSTINCDEST_868: 
0000680C                         11109mm         PRINTLB
0000680C  43F8 00D0              11110mm         LEA     OLB, A1     
00006810  103C 000E              11111mm         MOVE.B  #14,D0          
00006814  4E4F                   11112mm         TRAP    #15
00006816                         11113mm         ENDM
00006816                         11114mm         PRINTANDEST D3  
00006816  3203                   11115mm         MOVE.W  D3, D1
00006818  E949                   11116mm         LSL     #$04, D1
0000681A  E049                   11117mm         LSR     #$08, D1
0000681C  EA49                   11118mm         LSR     #$05, D1
0000681E  43F8 00CE              11119mm         LEA     OAN, A1     
00006822  103C 000E              11120mm         MOVE.B  #14,D0          
00006826  4E4F                   11121mm         TRAP    #15
00006828  103C 0003              11122mm         MOVE.B  #3,D0          
0000682C  4E4F                   11123mm         TRAP    #15
0000682E                         11124mm         ENDM
0000682E                         11125mm         PRINTRB
0000682E  43F8 00D2              11126mm         LEA     ORB, A1     
00006832  103C 000E              11127mm         MOVE.B  #14,D0          
00006836  4E4F                   11128mm         TRAP    #15
00006838                         11129mm         ENDM
00006838                         11130mm         PRINTPI
00006838  43F8 00D9              11131mm         LEA     OPSTINC, A1     
0000683C  103C 000E              11132mm         MOVE.B  #14,D0          
00006840  4E4F                   11133mm         TRAP    #15
00006842                         11134mm         ENDM
00006842  6000 046C              11135m         BRA     COMPLETE_868  
00006846                         11136m ADRREGPOSTINCSRC_868:           
00006846                         11137mm         PRINTLB
00006846  43F8 00D0              11138mm         LEA     OLB, A1     
0000684A  103C 000E              11139mm         MOVE.B  #14,D0          
0000684E  4E4F                   11140mm         TRAP    #15
00006850                         11141mm         ENDM
00006850                         11142mm         PRINTANSRC D3  
00006850  3203                   11143mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006852  E149                   11144mm         LSL     #$08, D1
00006854  EB49                   11145mm         LSL     #$05, D1
00006856  E049                   11146mm         LSR     #$08, D1
00006858  EA49                   11147mm         LSR     #$05, D1
0000685A  43F8 00CE              11148mm         LEA     OAN, A1     
0000685E  103C 000E              11149mm         MOVE.B  #14,D0          
00006862  4E4F                   11150mm         TRAP    #15
00006864  103C 0003              11151mm         MOVE.B  #3,D0          
00006868  4E4F                   11152mm         TRAP    #15
0000686A                         11153mm         ENDM
0000686A                         11154mm         PRINTRB
0000686A  43F8 00D2              11155mm         LEA     ORB, A1     
0000686E  103C 000E              11156mm         MOVE.B  #14,D0          
00006872  4E4F                   11157mm         TRAP    #15
00006874                         11158mm         ENDM
00006874                         11159mm         PRINTPI
00006874  43F8 00D9              11160mm         LEA     OPSTINC, A1     
00006878  103C 000E              11161mm         MOVE.B  #14,D0          
0000687C  4E4F                   11162mm         TRAP    #15
0000687E                         11163mm         ENDM
0000687E  6000 0430              11164m         BRA     COMPLETE_868  
00006882                         11165m ADRREGPREDEC_868: 
00006882  BC3C 0001              11166m         CMP.B   #$01, D6
00006886  6700 003C              11167m         BEQ     ADRREGPREDECSRC_868   
0000688A                         11168m ADRREGPREDECDEST_868:
0000688A                         11169mm         PRINTPD  
0000688A  43F8 00D7              11170mm         LEA     OPREDEC, A1     
0000688E  103C 000E              11171mm         MOVE.B  #14,D0          
00006892  4E4F                   11172mm         TRAP    #15
00006894                         11173mm         ENDM
00006894                         11174mm         PRINTLB
00006894  43F8 00D0              11175mm         LEA     OLB, A1     
00006898  103C 000E              11176mm         MOVE.B  #14,D0          
0000689C  4E4F                   11177mm         TRAP    #15
0000689E                         11178mm         ENDM
0000689E                         11179mm         PRINTANDEST D3  
0000689E  3203                   11180mm         MOVE.W  D3, D1
000068A0  E949                   11181mm         LSL     #$04, D1
000068A2  E049                   11182mm         LSR     #$08, D1
000068A4  EA49                   11183mm         LSR     #$05, D1
000068A6  43F8 00CE              11184mm         LEA     OAN, A1     
000068AA  103C 000E              11185mm         MOVE.B  #14,D0          
000068AE  4E4F                   11186mm         TRAP    #15
000068B0  103C 0003              11187mm         MOVE.B  #3,D0          
000068B4  4E4F                   11188mm         TRAP    #15
000068B6                         11189mm         ENDM
000068B6                         11190mm         PRINTRB
000068B6  43F8 00D2              11191mm         LEA     ORB, A1     
000068BA  103C 000E              11192mm         MOVE.B  #14,D0          
000068BE  4E4F                   11193mm         TRAP    #15
000068C0                         11194mm         ENDM
000068C0  6000 03EE              11195m         BRA     COMPLETE_868   
000068C4                         11196m ADRREGPREDECSRC_868: 
000068C4                         11197mm         PRINTPD  
000068C4  43F8 00D7              11198mm         LEA     OPREDEC, A1     
000068C8  103C 000E              11199mm         MOVE.B  #14,D0          
000068CC  4E4F                   11200mm         TRAP    #15
000068CE                         11201mm         ENDM
000068CE                         11202mm         PRINTLB
000068CE  43F8 00D0              11203mm         LEA     OLB, A1     
000068D2  103C 000E              11204mm         MOVE.B  #14,D0          
000068D6  4E4F                   11205mm         TRAP    #15
000068D8                         11206mm         ENDM
000068D8                         11207mm         PRINTANSRC D3  
000068D8  3203                   11208mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000068DA  E149                   11209mm         LSL     #$08, D1
000068DC  EB49                   11210mm         LSL     #$05, D1
000068DE  E049                   11211mm         LSR     #$08, D1
000068E0  EA49                   11212mm         LSR     #$05, D1
000068E2  43F8 00CE              11213mm         LEA     OAN, A1     
000068E6  103C 000E              11214mm         MOVE.B  #14,D0          
000068EA  4E4F                   11215mm         TRAP    #15
000068EC  103C 0003              11216mm         MOVE.B  #3,D0          
000068F0  4E4F                   11217mm         TRAP    #15
000068F2                         11218mm         ENDM
000068F2                         11219mm         PRINTRB
000068F2  43F8 00D2              11220mm         LEA     ORB, A1     
000068F6  103C 000E              11221mm         MOVE.B  #14,D0          
000068FA  4E4F                   11222mm         TRAP    #15
000068FC                         11223mm         ENDM
000068FC  6000 03B2              11224m         BRA     COMPLETE_868
00006900                         11225m        
00006900                         11226m ADRABSOLUTE_868:
00006900  BC3C 0001              11227m         CMP.B   #$01, D6
00006904  6600 0018              11228m         BNE     ADRABSOLUTEDST_868 
00006908                         11229m         
00006908  3A03                   11230m         MOVE.W  D3, D5
0000690A  0803 0002              11231m         BTST    #2, D3
0000690E  6600 0024              11232m         BNE     ADRIMMEDIATE_868
00006912  0803 0000              11233m         BTST    #0, D3
00006916  6600 0280              11234m         BNE     ADRABSOLUTEL_868
0000691A  6000 01E6              11235m         BRA     ADRABSOLUTEW_868
0000691E                         11236m ADRABSOLUTEDST_868:
0000691E  3A03                   11237m         MOVE.W  D3, D5
00006920  0803 000B              11238m         BTST    #$B, D3
00006924  6600 000E              11239m         BNE     ADRIMMEDIATE_868
00006928  0803 0009              11240m         BTST    #$09, D3
0000692C  6600 026A              11241m         BNE     ADRABSOLUTEL_868
00006930  6000 01D0              11242m         BRA     ADRABSOLUTEW_868
00006934                         11243m ADRIMMEDIATE_868:
00006934  BE3C 0001              11244m         CMP.B   #1, D7
00006938  6700 00A2              11245m         BEQ     ADRIMMEDIATEL_868
0000693C                         11246m ADRIMMEDIATEW_868:
0000693C  361A                   11247m         MOVE.W  (A2)+, D3
0000693E                         11248mm         PRINTHASH
0000693E  103C 0006              11249mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006942  323C 0023              11250mm         MOVE.W  #35, D1     ; AN = SIGN
00006946  4E4F                   11251mm         TRAP    #15         ; OUTPUT = SIGN
00006948                         11252mm         ENDM
00006948                         11253mm         PRINTSIGN
00006948  103C 0006              11254mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000694C  323C 0024              11255mm         MOVE.W  #36, D1     ; AN = SIGN
00006950  4E4F                   11256mm         TRAP    #15         ; OUTPUT = SIGN
00006952                         11257mm         ENDM
00006952                         11258mm         ADROUT
00006952  103C 0006              11259mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006956  3212                   11260mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006958  E049                   11261mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000695A  E849                   11262mm         LSR.W   #4, D1      
0000695C                         11263mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000695C  0C01 0009              11264mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006960  6E00 000A              11265mmm         BGT     ALPHA_898
00006964  0601 0030              11266mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006968  6000 0006              11267mmm         BRA     DONE_898
0000696C  0601 0037              11268mmm ALPHA_898: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006970  4E71                   11269mmm DONE_898: NOP
00006972                         11270mmm         ENDM
00006972  4E4F                   11271mm         TRAP    #15         ; EXECUTE OUTPUT
00006974                         11272mm         
00006974  3212                   11273mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006976  E949                   11274mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006978  E049                   11275mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000697A  E849                   11276mm         LSR.W   #4, D1      
0000697C                         11277mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000697C  0C01 0009              11278mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006980  6E00 000A              11279mmm         BGT     ALPHA_899
00006984  0601 0030              11280mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006988  6000 0006              11281mmm         BRA     DONE_899
0000698C  0601 0037              11282mmm ALPHA_899: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006990  4E71                   11283mmm DONE_899: NOP
00006992                         11284mmm         ENDM
00006992  4E4F                   11285mm         TRAP    #15         ; EXECUTE OUTPUT
00006994                         11286mm         
00006994  3212                   11287mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006996  E149                   11288mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006998  E049                   11289mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000699A  E849                   11290mm         LSR.W   #4, D1      
0000699C                         11291mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000699C  0C01 0009              11292mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069A0  6E00 000A              11293mmm         BGT     ALPHA_900
000069A4  0601 0030              11294mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069A8  6000 0006              11295mmm         BRA     DONE_900
000069AC  0601 0037              11296mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069B0  4E71                   11297mmm DONE_900: NOP
000069B2                         11298mmm         ENDM
000069B2  4E4F                   11299mm         TRAP    #15         ; EXECUTE OUTPUT
000069B4                         11300mm         
000069B4  3212                   11301mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069B6  E149                   11302mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069B8  E949                   11303mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069BA  E049                   11304mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069BC  E849                   11305mm         LSR.W   #4, D1      
000069BE                         11306mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069BE  0C01 0009              11307mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069C2  6E00 000A              11308mmm         BGT     ALPHA_901
000069C6  0601 0030              11309mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069CA  6000 0006              11310mmm         BRA     DONE_901
000069CE  0601 0037              11311mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069D2  4E71                   11312mmm DONE_901: NOP
000069D4                         11313mmm         ENDM
000069D4  4E4F                   11314mm         TRAP    #15         ; EXECUTE OUTPUT       
000069D6                         11315mm         ENDM 
000069D6  3605                   11316m         MOVE.W  D5, D3
000069D8  6000 02D6              11317m         BRA     COMPLETE_868
000069DC                         11318m ADRIMMEDIATEL_868:
000069DC  361A                   11319m         MOVE.W  (A2)+, D3
000069DE                         11320mm         PRINTHASH
000069DE  103C 0006              11321mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069E2  323C 0023              11322mm         MOVE.W  #35, D1     ; AN = SIGN
000069E6  4E4F                   11323mm         TRAP    #15         ; OUTPUT = SIGN
000069E8                         11324mm         ENDM
000069E8                         11325mm         PRINTSIGN
000069E8  103C 0006              11326mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069EC  323C 0024              11327mm         MOVE.W  #36, D1     ; AN = SIGN
000069F0  4E4F                   11328mm         TRAP    #15         ; OUTPUT = SIGN
000069F2                         11329mm         ENDM
000069F2                         11330mm         ADROUT 
000069F2  103C 0006              11331mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069F6  3212                   11332mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069F8  E049                   11333mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069FA  E849                   11334mm         LSR.W   #4, D1      
000069FC                         11335mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069FC  0C01 0009              11336mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A00  6E00 000A              11337mmm         BGT     ALPHA_905
00006A04  0601 0030              11338mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A08  6000 0006              11339mmm         BRA     DONE_905
00006A0C  0601 0037              11340mmm ALPHA_905: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A10  4E71                   11341mmm DONE_905: NOP
00006A12                         11342mmm         ENDM
00006A12  4E4F                   11343mm         TRAP    #15         ; EXECUTE OUTPUT
00006A14                         11344mm         
00006A14  3212                   11345mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A16  E949                   11346mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A18  E049                   11347mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A1A  E849                   11348mm         LSR.W   #4, D1      
00006A1C                         11349mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A1C  0C01 0009              11350mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A20  6E00 000A              11351mmm         BGT     ALPHA_906
00006A24  0601 0030              11352mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A28  6000 0006              11353mmm         BRA     DONE_906
00006A2C  0601 0037              11354mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A30  4E71                   11355mmm DONE_906: NOP
00006A32                         11356mmm         ENDM
00006A32  4E4F                   11357mm         TRAP    #15         ; EXECUTE OUTPUT
00006A34                         11358mm         
00006A34  3212                   11359mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A36  E149                   11360mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A38  E049                   11361mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A3A  E849                   11362mm         LSR.W   #4, D1      
00006A3C                         11363mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A3C  0C01 0009              11364mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A40  6E00 000A              11365mmm         BGT     ALPHA_907
00006A44  0601 0030              11366mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A48  6000 0006              11367mmm         BRA     DONE_907
00006A4C  0601 0037              11368mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A50  4E71                   11369mmm DONE_907: NOP
00006A52                         11370mmm         ENDM
00006A52  4E4F                   11371mm         TRAP    #15         ; EXECUTE OUTPUT
00006A54                         11372mm         
00006A54  3212                   11373mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A56  E149                   11374mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A58  E949                   11375mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A5A  E049                   11376mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A5C  E849                   11377mm         LSR.W   #4, D1      
00006A5E                         11378mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A5E  0C01 0009              11379mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A62  6E00 000A              11380mmm         BGT     ALPHA_908
00006A66  0601 0030              11381mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A6A  6000 0006              11382mmm         BRA     DONE_908
00006A6E  0601 0037              11383mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A72  4E71                   11384mmm DONE_908: NOP
00006A74                         11385mmm         ENDM
00006A74  4E4F                   11386mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A76                         11387mm         ENDM 
00006A76  361A                   11388m         MOVE.W  (A2)+, D3
00006A78                         11389mm         ADROUT
00006A78  103C 0006              11390mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006A7C  3212                   11391mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A7E  E049                   11392mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A80  E849                   11393mm         LSR.W   #4, D1      
00006A82                         11394mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A82  0C01 0009              11395mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A86  6E00 000A              11396mmm         BGT     ALPHA_910
00006A8A  0601 0030              11397mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A8E  6000 0006              11398mmm         BRA     DONE_910
00006A92  0601 0037              11399mmm ALPHA_910: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A96  4E71                   11400mmm DONE_910: NOP
00006A98                         11401mmm         ENDM
00006A98  4E4F                   11402mm         TRAP    #15         ; EXECUTE OUTPUT
00006A9A                         11403mm         
00006A9A  3212                   11404mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A9C  E949                   11405mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A9E  E049                   11406mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AA0  E849                   11407mm         LSR.W   #4, D1      
00006AA2                         11408mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AA2  0C01 0009              11409mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AA6  6E00 000A              11410mmm         BGT     ALPHA_911
00006AAA  0601 0030              11411mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AAE  6000 0006              11412mmm         BRA     DONE_911
00006AB2  0601 0037              11413mmm ALPHA_911: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AB6  4E71                   11414mmm DONE_911: NOP
00006AB8                         11415mmm         ENDM
00006AB8  4E4F                   11416mm         TRAP    #15         ; EXECUTE OUTPUT
00006ABA                         11417mm         
00006ABA  3212                   11418mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006ABC  E149                   11419mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ABE  E049                   11420mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AC0  E849                   11421mm         LSR.W   #4, D1      
00006AC2                         11422mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AC2  0C01 0009              11423mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AC6  6E00 000A              11424mmm         BGT     ALPHA_912
00006ACA  0601 0030              11425mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ACE  6000 0006              11426mmm         BRA     DONE_912
00006AD2  0601 0037              11427mmm ALPHA_912: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AD6  4E71                   11428mmm DONE_912: NOP
00006AD8                         11429mmm         ENDM
00006AD8  4E4F                   11430mm         TRAP    #15         ; EXECUTE OUTPUT
00006ADA                         11431mm         
00006ADA  3212                   11432mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006ADC  E149                   11433mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ADE  E949                   11434mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006AE0  E049                   11435mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AE2  E849                   11436mm         LSR.W   #4, D1      
00006AE4                         11437mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AE4  0C01 0009              11438mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AE8  6E00 000A              11439mmm         BGT     ALPHA_913
00006AEC  0601 0030              11440mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AF0  6000 0006              11441mmm         BRA     DONE_913
00006AF4  0601 0037              11442mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AF8  4E71                   11443mmm DONE_913: NOP
00006AFA                         11444mmm         ENDM
00006AFA  4E4F                   11445mm         TRAP    #15         ; EXECUTE OUTPUT       
00006AFC                         11446mm         ENDM 
00006AFC  3605                   11447m         MOVE.W  D5, D3
00006AFE  6000 01B0              11448m         BRA     COMPLETE_868 
00006B02                         11449m ADRABSOLUTEW_868:     
00006B02  361A                   11450m         MOVE.W  (A2)+, D3
00006B04                         11451mm         PRINTSIGN
00006B04  103C 0006              11452mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006B08  323C 0024              11453mm         MOVE.W  #36, D1     ; AN = SIGN
00006B0C  4E4F                   11454mm         TRAP    #15         ; OUTPUT = SIGN
00006B0E                         11455mm         ENDM
00006B0E                         11456mm         ADROUT
00006B0E  103C 0006              11457mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006B12  3212                   11458mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B14  E049                   11459mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B16  E849                   11460mm         LSR.W   #4, D1      
00006B18                         11461mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B18  0C01 0009              11462mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B1C  6E00 000A              11463mmm         BGT     ALPHA_916
00006B20  0601 0030              11464mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B24  6000 0006              11465mmm         BRA     DONE_916
00006B28  0601 0037              11466mmm ALPHA_916: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B2C  4E71                   11467mmm DONE_916: NOP
00006B2E                         11468mmm         ENDM
00006B2E  4E4F                   11469mm         TRAP    #15         ; EXECUTE OUTPUT
00006B30                         11470mm         
00006B30  3212                   11471mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B32  E949                   11472mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006B34  E049                   11473mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B36  E849                   11474mm         LSR.W   #4, D1      
00006B38                         11475mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B38  0C01 0009              11476mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B3C  6E00 000A              11477mmm         BGT     ALPHA_917
00006B40  0601 0030              11478mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B44  6000 0006              11479mmm         BRA     DONE_917
00006B48  0601 0037              11480mmm ALPHA_917: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B4C  4E71                   11481mmm DONE_917: NOP
00006B4E                         11482mmm         ENDM
00006B4E  4E4F                   11483mm         TRAP    #15         ; EXECUTE OUTPUT
00006B50                         11484mm         
00006B50  3212                   11485mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B52  E149                   11486mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B54  E049                   11487mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B56  E849                   11488mm         LSR.W   #4, D1      
00006B58                         11489mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B58  0C01 0009              11490mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B5C  6E00 000A              11491mmm         BGT     ALPHA_918
00006B60  0601 0030              11492mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B64  6000 0006              11493mmm         BRA     DONE_918
00006B68  0601 0037              11494mmm ALPHA_918: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B6C  4E71                   11495mmm DONE_918: NOP
00006B6E                         11496mmm         ENDM
00006B6E  4E4F                   11497mm         TRAP    #15         ; EXECUTE OUTPUT
00006B70                         11498mm         
00006B70  3212                   11499mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B72  E149                   11500mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B74  E949                   11501mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006B76  E049                   11502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B78  E849                   11503mm         LSR.W   #4, D1      
00006B7A                         11504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B7A  0C01 0009              11505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B7E  6E00 000A              11506mmm         BGT     ALPHA_919
00006B82  0601 0030              11507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B86  6000 0006              11508mmm         BRA     DONE_919
00006B8A  0601 0037              11509mmm ALPHA_919: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B8E  4E71                   11510mmm DONE_919: NOP
00006B90                         11511mmm         ENDM
00006B90  4E4F                   11512mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B92                         11513mm         ENDM 
00006B92  3605                   11514m         MOVE.W  D5, D3
00006B94  6000 011A              11515m         BRA     COMPLETE_868  
00006B98                         11516m ADRABSOLUTEL_868:  
00006B98  361A                   11517m         MOVE.W  (A2)+, D3
00006B9A                         11518mm         PRINTSIGN
00006B9A  103C 0006              11519mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006B9E  323C 0024              11520mm         MOVE.W  #36, D1     ; AN = SIGN
00006BA2  4E4F                   11521mm         TRAP    #15         ; OUTPUT = SIGN
00006BA4                         11522mm         ENDM
00006BA4                         11523mm         ADROUT 
00006BA4  103C 0006              11524mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006BA8  3212                   11525mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006BAA  E049                   11526mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006BAC  E849                   11527mm         LSR.W   #4, D1      
00006BAE                         11528mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006BAE  0C01 0009              11529mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BB2  6E00 000A              11530mmm         BGT     ALPHA_922
00006BB6  0601 0030              11531mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BBA  6000 0006              11532mmm         BRA     DONE_922
00006BBE  0601 0037              11533mmm ALPHA_922: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BC2  4E71                   11534mmm DONE_922: NOP
00006BC4                         11535mmm         ENDM
00006BC4  4E4F                   11536mm         TRAP    #15         ; EXECUTE OUTPUT
00006BC6                         11537mm         
00006BC6  3212                   11538mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006BC8  E949                   11539mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006BCA  E049                   11540mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006BCC  E849                   11541mm         LSR.W   #4, D1      
00006BCE                         11542mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006BCE  0C01 0009              11543mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BD2  6E00 000A              11544mmm         BGT     ALPHA_923
00006BD6  0601 0030              11545mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BDA  6000 0006              11546mmm         BRA     DONE_923
00006BDE  0601 0037              11547mmm ALPHA_923: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BE2  4E71                   11548mmm DONE_923: NOP
00006BE4                         11549mmm         ENDM
00006BE4  4E4F                   11550mm         TRAP    #15         ; EXECUTE OUTPUT
00006BE6                         11551mm         
00006BE6  3212                   11552mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006BE8  E149                   11553mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006BEA  E049                   11554mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006BEC  E849                   11555mm         LSR.W   #4, D1      
00006BEE                         11556mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006BEE  0C01 0009              11557mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BF2  6E00 000A              11558mmm         BGT     ALPHA_924
00006BF6  0601 0030              11559mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BFA  6000 0006              11560mmm         BRA     DONE_924
00006BFE  0601 0037              11561mmm ALPHA_924: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C02  4E71                   11562mmm DONE_924: NOP
00006C04                         11563mmm         ENDM
00006C04  4E4F                   11564mm         TRAP    #15         ; EXECUTE OUTPUT
00006C06                         11565mm         
00006C06  3212                   11566mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006C08  E149                   11567mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006C0A  E949                   11568mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006C0C  E049                   11569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006C0E  E849                   11570mm         LSR.W   #4, D1      
00006C10                         11571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006C10  0C01 0009              11572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C14  6E00 000A              11573mmm         BGT     ALPHA_925
00006C18  0601 0030              11574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C1C  6000 0006              11575mmm         BRA     DONE_925
00006C20  0601 0037              11576mmm ALPHA_925: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C24  4E71                   11577mmm DONE_925: NOP
00006C26                         11578mmm         ENDM
00006C26  4E4F                   11579mm         TRAP    #15         ; EXECUTE OUTPUT       
00006C28                         11580mm         ENDM 
00006C28  361A                   11581m         MOVE.W  (A2)+, D3
00006C2A                         11582mm         ADROUT
00006C2A  103C 0006              11583mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006C2E  3212                   11584mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006C30  E049                   11585mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006C32  E849                   11586mm         LSR.W   #4, D1      
00006C34                         11587mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006C34  0C01 0009              11588mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C38  6E00 000A              11589mmm         BGT     ALPHA_927
00006C3C  0601 0030              11590mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C40  6000 0006              11591mmm         BRA     DONE_927
00006C44  0601 0037              11592mmm ALPHA_927: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C48  4E71                   11593mmm DONE_927: NOP
00006C4A                         11594mmm         ENDM
00006C4A  4E4F                   11595mm         TRAP    #15         ; EXECUTE OUTPUT
00006C4C                         11596mm         
00006C4C  3212                   11597mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006C4E  E949                   11598mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006C50  E049                   11599mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006C52  E849                   11600mm         LSR.W   #4, D1      
00006C54                         11601mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006C54  0C01 0009              11602mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C58  6E00 000A              11603mmm         BGT     ALPHA_928
00006C5C  0601 0030              11604mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C60  6000 0006              11605mmm         BRA     DONE_928
00006C64  0601 0037              11606mmm ALPHA_928: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C68  4E71                   11607mmm DONE_928: NOP
00006C6A                         11608mmm         ENDM
00006C6A  4E4F                   11609mm         TRAP    #15         ; EXECUTE OUTPUT
00006C6C                         11610mm         
00006C6C  3212                   11611mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006C6E  E149                   11612mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006C70  E049                   11613mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006C72  E849                   11614mm         LSR.W   #4, D1      
00006C74                         11615mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006C74  0C01 0009              11616mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C78  6E00 000A              11617mmm         BGT     ALPHA_929
00006C7C  0601 0030              11618mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C80  6000 0006              11619mmm         BRA     DONE_929
00006C84  0601 0037              11620mmm ALPHA_929: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C88  4E71                   11621mmm DONE_929: NOP
00006C8A                         11622mmm         ENDM
00006C8A  4E4F                   11623mm         TRAP    #15         ; EXECUTE OUTPUT
00006C8C                         11624mm         
00006C8C  3212                   11625mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006C8E  E149                   11626mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006C90  E949                   11627mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006C92  E049                   11628mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006C94  E849                   11629mm         LSR.W   #4, D1      
00006C96                         11630mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006C96  0C01 0009              11631mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C9A  6E00 000A              11632mmm         BGT     ALPHA_930
00006C9E  0601 0030              11633mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006CA2  6000 0006              11634mmm         BRA     DONE_930
00006CA6  0601 0037              11635mmm ALPHA_930: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006CAA  4E71                   11636mmm DONE_930: NOP
00006CAC                         11637mmm         ENDM
00006CAC  4E4F                   11638mm         TRAP    #15         ; EXECUTE OUTPUT       
00006CAE                         11639mm         ENDM 
00006CAE  3605                   11640m         MOVE.W  D5, D3
00006CB0                         11641m 
00006CB0                         11642m COMPLETE_868:  ; OPCODE HAS BEEN VERIFIED
00006CB0                         11643m         ENDM
00006CB0  4E75                   11644          RTS                 ; Return from decodeJSR subroutine
00006CB2                         11645  
00006CB2                         11646  
00006CB2                         11647  ; ------------------------------------------------------------
00006CB2                         11648  ; 15. "decodeRTS" subroutine
00006CB2                         11649  ; AUTHOR
00006CB2                         11650  ;
00006CB2                         11651  ; TODO: DESCRIPTION
00006CB2                         11652  ; ------------------------------------------------------------
00006CB2                         11653  decodeRTS:
00006CB2                         11654m         verifyOpcode    pRTS, (A2)
00006CB2  43F8 024F              11655m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006CB6  3612                   11656m         MOVE.W  (A2), D3      ; INPUT VALUE
00006CB8  123C 000F              11657m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006CBC                         11658m         
00006CBC                         11659m LOOP_931: 
00006CBC  0C11 0030              11660m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006CC0  6700 000E              11661m         BEQ     CHECKFOR0_931
00006CC4  0C11 0031              11662m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006CC8  6700 0010              11663m         BEQ     CHECKFOR1_931
00006CCC  6000 0012              11664m         BRA     NEXT_931      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006CD0                         11665m         
00006CD0                         11666m CHECKFOR0_931: 
00006CD0  0303                   11667m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006CD2  6600 0468              11668m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006CD6  6000 0008              11669m         BRA     NEXT_931
00006CDA                         11670m 
00006CDA                         11671m CHECKFOR1_931:
00006CDA  0303                   11672m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006CDC  6700 045E              11673m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006CE0                         11674m 
00006CE0                         11675m NEXT_931: 
00006CE0  B23C 0000              11676m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006CE4  6700 0008              11677m         BEQ     COMPLETE_931  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006CE8  5301                   11678m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006CEA  1819                   11679m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006CEC  60CE                   11680m         BRA     LOOP_931      ; BEGIN LOOP AGAIN
00006CEE                         11681m 
00006CEE                         11682m COMPLETE_931:  ; OPCODE HAS BEEN VERIFIED
00006CEE                         11683m         ENDM
00006CEE  43F8 00B8              11684          LEA     oRTS, A1     
00006CF2  103C 000E              11685          MOVE.B  #14,D0          
00006CF6  4E4F                   11686          TRAP    #15
00006CF8  4E75                   11687          RTS                 ; Return from decodeRTS subroutine
00006CFA                         11688  
00006CFA                         11689  
00006CFA                         11690  ; ------------------------------------------------------------
00006CFA                         11691  ; 16. "decodeBRA" subroutine
00006CFA                         11692  ; AUTHOR
00006CFA                         11693  ;
00006CFA                         11694  ; TODO: DESCRIPTION
00006CFA                         11695  ; ------------------------------------------------------------
00006CFA                         11696  decodeBRA:
00006CFA                         11697m         verifyOpcode    pBRA, (A2)
00006CFA  43F8 0260              11698m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006CFE  3612                   11699m         MOVE.W  (A2), D3      ; INPUT VALUE
00006D00  123C 000F              11700m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006D04                         11701m         
00006D04                         11702m LOOP_932: 
00006D04  0C11 0030              11703m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006D08  6700 000E              11704m         BEQ     CHECKFOR0_932
00006D0C  0C11 0031              11705m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006D10  6700 0010              11706m         BEQ     CHECKFOR1_932
00006D14  6000 0012              11707m         BRA     NEXT_932      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006D18                         11708m         
00006D18                         11709m CHECKFOR0_932: 
00006D18  0303                   11710m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006D1A  6600 0420              11711m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006D1E  6000 0008              11712m         BRA     NEXT_932
00006D22                         11713m 
00006D22                         11714m CHECKFOR1_932:
00006D22  0303                   11715m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006D24  6700 0416              11716m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006D28                         11717m 
00006D28                         11718m NEXT_932: 
00006D28  B23C 0000              11719m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006D2C  6700 0008              11720m         BEQ     COMPLETE_932  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006D30  5301                   11721m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006D32  1819                   11722m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006D34  60CE                   11723m         BRA     LOOP_932      ; BEGIN LOOP AGAIN
00006D36                         11724m 
00006D36                         11725m COMPLETE_932:  ; OPCODE HAS BEEN VERIFIED
00006D36                         11726m         ENDM
00006D36  43F8 00BC              11727          LEA     oBRA, A1     
00006D3A  103C 000E              11728          MOVE.B  #14,D0          
00006D3E  4E4F                   11729          TRAP    #15
00006D40                         11730m         space
00006D40  43F8 00DD              11731m         LEA     OBLANK, A1
00006D44  103C 000E              11732m         MOVE.B  #14,D0          
00006D48  4E4F                   11733m         TRAP    #15
00006D4A                         11734m         ENDM
00006D4A                         11735m         printSign
00006D4A  103C 0006              11736m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006D4E  323C 0024              11737m         MOVE.W  #36, D1     ; AN = SIGN
00006D52  4E4F                   11738m         TRAP    #15         ; OUTPUT = SIGN
00006D54                         11739m         ENDM
00006D54                         11740m         printBranch     (A2)
00006D54  3612                   11741m         MOVE.W (A2), D3
00006D56  4241                   11742m         CLR     D1
00006D58  D203                   11743m         ADD.B   D3, D1
00006D5A                         11744mm         CONVERTATOH D1
00006D5A  0C01 0039              11745mm         CMPI.B  #$39, D1
00006D5E  6E00 000A              11746mm         BGT     ALPHA_936
00006D62  0401 0030              11747mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00006D66  6000 0006              11748mm         BRA     DONE_936
00006D6A  0401 0037              11749mm ALPHA_936: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006D6E  4E71                   11750mm DONE_936: NOP
00006D70                         11751mm         ENDM
00006D70  103C 0003              11752m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006D74  4E4F                   11753m         TRAP    #15
00006D76                         11754m         ENDM        
00006D76  4E75                   11755          RTS                 ; Return from decodeBRA subroutine
00006D78                         11756          
00006D78                         11757  ; ------------------------------------------------------------
00006D78                         11758  ; 17. "decodeImmediate" subroutine
00006D78                         11759  ; AUTHOR
00006D78                         11760  ;
00006D78                         11761  ; TODO: DESCRIPTION
00006D78                         11762  ; ------------------------------------------------------------
00006D78                         11763  decodeImmediate:
00006D78  4EB9 0000713C          11764          JSR     outputData
00006D7E  4241                   11765          CLR     D1
00006D80  4246                   11766          CLR     D6
00006D82  364A                   11767          MOVEA   A2, A3
00006D84  381A                   11768          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
00006D86                         11769m         prepareAdrMode  #$1,(A3)  
00006D86  3C3C 0001              11770m         MOVE.W  #$1, D6      ; INPUT VALUE
00006D8A  3213                   11771m         MOVE.W  (A3), D1
00006D8C  BC3C 0001              11772m         CMP.B   #$01, D6
00006D90  6700 000C              11773m         BEQ     ADRSOURCE_937    
00006D94                         11774m ADRDEST_937:
00006D94  EF49                   11775m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00006D96  E049                   11776m         LSR     #$08, D1
00006D98  EA49                   11777m         LSR     #$05, D1
00006D9A  6000 000A              11778m         BRA     COMPLETE_937 
00006D9E                         11779m ADRSOURCE_937:                
00006D9E  E149                   11780m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006DA0  E549                   11781m         LSL     #$02, D1
00006DA2  E049                   11782m         LSR     #$08, D1
00006DA4  EA49                   11783m         LSR     #$05, D1
00006DA6                         11784m COMPLETE_937:  ; OPCODE HAS BEEN VERIFIED
00006DA6                         11785m         ENDM        
00006DA6                         11786m         decodeSizeLow   (A3)
00006DA6  3613                   11787m         MOVE.W  (A3), D3      ; INPUT VALUE   
00006DA8  4246                   11788m         CLR     D6   
00006DAA                         11789m CHECKFORBORW_938: 
00006DAA  0803 0007              11790m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006DAE  6600 0006              11791m         BNE     CHECKFORL_938 ; IF NOT GO TO LONGWORD SIZE         
00006DB2  6000 0006              11792m         BRA     COMPLETE_938  
00006DB6                         11793m CHECKFORL_938:
00006DB6  1C3C 0001              11794m         MOVE.B  #$1, D6
00006DBA                         11795m COMPLETE_938:  ; SIZE HAS BEEN CHECEKED
00006DBA                         11796m         ENDM
00006DBA  1E01                   11797          MOVE.B  D1, D7
00006DBC  BC3C 0001              11798          CMP.B   #1, D6
00006DC0  6700 009C              11799          BEQ     decodeImmediateL
00006DC4                         11800m         space
00006DC4  43F8 00DD              11801m         LEA     OBLANK, A1
00006DC8  103C 000E              11802m         MOVE.B  #14,D0          
00006DCC  4E4F                   11803m         TRAP    #15
00006DCE                         11804m         ENDM
00006DCE                         11805m         adrOut
00006DCE  103C 0006              11806m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006DD2  3212                   11807m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006DD4  E049                   11808m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006DD6  E849                   11809m         LSR.W   #4, D1      
00006DD8                         11810mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006DD8  0C01 0009              11811mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006DDC  6E00 000A              11812mm         BGT     ALPHA_941
00006DE0  0601 0030              11813mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006DE4  6000 0006              11814mm         BRA     DONE_941
00006DE8  0601 0037              11815mm ALPHA_941: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006DEC  4E71                   11816mm DONE_941: NOP
00006DEE                         11817mm         ENDM
00006DEE  4E4F                   11818m         TRAP    #15         ; EXECUTE OUTPUT
00006DF0                         11819m         
00006DF0  3212                   11820m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006DF2  E949                   11821m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006DF4  E049                   11822m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006DF6  E849                   11823m         LSR.W   #4, D1      
00006DF8                         11824mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006DF8  0C01 0009              11825mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006DFC  6E00 000A              11826mm         BGT     ALPHA_942
00006E00  0601 0030              11827mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E04  6000 0006              11828mm         BRA     DONE_942
00006E08  0601 0037              11829mm ALPHA_942: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E0C  4E71                   11830mm DONE_942: NOP
00006E0E                         11831mm         ENDM
00006E0E  4E4F                   11832m         TRAP    #15         ; EXECUTE OUTPUT
00006E10                         11833m         
00006E10  3212                   11834m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E12  E149                   11835m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E14  E049                   11836m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E16  E849                   11837m         LSR.W   #4, D1      
00006E18                         11838mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E18  0C01 0009              11839mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E1C  6E00 000A              11840mm         BGT     ALPHA_943
00006E20  0601 0030              11841mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E24  6000 0006              11842mm         BRA     DONE_943
00006E28  0601 0037              11843mm ALPHA_943: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E2C  4E71                   11844mm DONE_943: NOP
00006E2E                         11845mm         ENDM
00006E2E  4E4F                   11846m         TRAP    #15         ; EXECUTE OUTPUT
00006E30                         11847m         
00006E30  3212                   11848m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E32  E149                   11849m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E34  E949                   11850m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006E36  E049                   11851m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E38  E849                   11852m         LSR.W   #4, D1      
00006E3A                         11853mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E3A  0C01 0009              11854mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E3E  6E00 000A              11855mm         BGT     ALPHA_944
00006E42  0601 0030              11856mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E46  6000 0006              11857mm         BRA     DONE_944
00006E4A  0601 0037              11858mm ALPHA_944: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E4E  4E71                   11859mm DONE_944: NOP
00006E50                         11860mm         ENDM
00006E50  4E4F                   11861m         TRAP    #15         ; EXECUTE OUTPUT       
00006E52                         11862m         ENDM 
00006E52                         11863          
00006E52  BE3C 0007              11864          CMP.B   #$07, D7
00006E56  6700 0130              11865          BEQ     decodeImmediateDest
00006E5A                         11866          
00006E5A  6000 02DE              11867          BRA     decodeImmediateComp
00006E5E                         11868  decodeImmediateL:
00006E5E                         11869m         space
00006E5E  43F8 00DD              11870m         LEA     OBLANK, A1
00006E62  103C 000E              11871m         MOVE.B  #14,D0          
00006E66  4E4F                   11872m         TRAP    #15
00006E68                         11873m         ENDM
00006E68                         11874m         adrOut
00006E68  103C 0006              11875m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E6C  3212                   11876m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E6E  E049                   11877m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E70  E849                   11878m         LSR.W   #4, D1      
00006E72                         11879mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E72  0C01 0009              11880mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E76  6E00 000A              11881mm         BGT     ALPHA_947
00006E7A  0601 0030              11882mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E7E  6000 0006              11883mm         BRA     DONE_947
00006E82  0601 0037              11884mm ALPHA_947: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E86  4E71                   11885mm DONE_947: NOP
00006E88                         11886mm         ENDM
00006E88  4E4F                   11887m         TRAP    #15         ; EXECUTE OUTPUT
00006E8A                         11888m         
00006E8A  3212                   11889m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E8C  E949                   11890m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006E8E  E049                   11891m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E90  E849                   11892m         LSR.W   #4, D1      
00006E92                         11893mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E92  0C01 0009              11894mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E96  6E00 000A              11895mm         BGT     ALPHA_948
00006E9A  0601 0030              11896mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E9E  6000 0006              11897mm         BRA     DONE_948
00006EA2  0601 0037              11898mm ALPHA_948: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EA6  4E71                   11899mm DONE_948: NOP
00006EA8                         11900mm         ENDM
00006EA8  4E4F                   11901m         TRAP    #15         ; EXECUTE OUTPUT
00006EAA                         11902m         
00006EAA  3212                   11903m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EAC  E149                   11904m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006EAE  E049                   11905m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006EB0  E849                   11906m         LSR.W   #4, D1      
00006EB2                         11907mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006EB2  0C01 0009              11908mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EB6  6E00 000A              11909mm         BGT     ALPHA_949
00006EBA  0601 0030              11910mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EBE  6000 0006              11911mm         BRA     DONE_949
00006EC2  0601 0037              11912mm ALPHA_949: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EC6  4E71                   11913mm DONE_949: NOP
00006EC8                         11914mm         ENDM
00006EC8  4E4F                   11915m         TRAP    #15         ; EXECUTE OUTPUT
00006ECA                         11916m         
00006ECA  3212                   11917m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006ECC  E149                   11918m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ECE  E949                   11919m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006ED0  E049                   11920m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006ED2  E849                   11921m         LSR.W   #4, D1      
00006ED4                         11922mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ED4  0C01 0009              11923mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006ED8  6E00 000A              11924mm         BGT     ALPHA_950
00006EDC  0601 0030              11925mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EE0  6000 0006              11926mm         BRA     DONE_950
00006EE4  0601 0037              11927mm ALPHA_950: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EE8  4E71                   11928mm DONE_950: NOP
00006EEA                         11929mm         ENDM
00006EEA  4E4F                   11930m         TRAP    #15         ; EXECUTE OUTPUT       
00006EEC                         11931m         ENDM 
00006EEC                         11932m         space
00006EEC  43F8 00DD              11933m         LEA     OBLANK, A1
00006EF0  103C 000E              11934m         MOVE.B  #14,D0          
00006EF4  4E4F                   11935m         TRAP    #15
00006EF6                         11936m         ENDM
00006EF6  381A                   11937          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
00006EF8                         11938m         adrOut
00006EF8  103C 0006              11939m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006EFC  3212                   11940m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EFE  E049                   11941m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F00  E849                   11942m         LSR.W   #4, D1      
00006F02                         11943mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F02  0C01 0009              11944mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F06  6E00 000A              11945mm         BGT     ALPHA_953
00006F0A  0601 0030              11946mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F0E  6000 0006              11947mm         BRA     DONE_953
00006F12  0601 0037              11948mm ALPHA_953: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F16  4E71                   11949mm DONE_953: NOP
00006F18                         11950mm         ENDM
00006F18  4E4F                   11951m         TRAP    #15         ; EXECUTE OUTPUT
00006F1A                         11952m         
00006F1A  3212                   11953m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F1C  E949                   11954m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006F1E  E049                   11955m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F20  E849                   11956m         LSR.W   #4, D1      
00006F22                         11957mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F22  0C01 0009              11958mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F26  6E00 000A              11959mm         BGT     ALPHA_954
00006F2A  0601 0030              11960mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F2E  6000 0006              11961mm         BRA     DONE_954
00006F32  0601 0037              11962mm ALPHA_954: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F36  4E71                   11963mm DONE_954: NOP
00006F38                         11964mm         ENDM
00006F38  4E4F                   11965m         TRAP    #15         ; EXECUTE OUTPUT
00006F3A                         11966m         
00006F3A  3212                   11967m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F3C  E149                   11968m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F3E  E049                   11969m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F40  E849                   11970m         LSR.W   #4, D1      
00006F42                         11971mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F42  0C01 0009              11972mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F46  6E00 000A              11973mm         BGT     ALPHA_955
00006F4A  0601 0030              11974mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F4E  6000 0006              11975mm         BRA     DONE_955
00006F52  0601 0037              11976mm ALPHA_955: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F56  4E71                   11977mm DONE_955: NOP
00006F58                         11978mm         ENDM
00006F58  4E4F                   11979m         TRAP    #15         ; EXECUTE OUTPUT
00006F5A                         11980m         
00006F5A  3212                   11981m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F5C  E149                   11982m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F5E  E949                   11983m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006F60  E049                   11984m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F62  E849                   11985m         LSR.W   #4, D1      
00006F64                         11986mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F64  0C01 0009              11987mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F68  6E00 000A              11988mm         BGT     ALPHA_956
00006F6C  0601 0030              11989mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F70  6000 0006              11990mm         BRA     DONE_956
00006F74  0601 0037              11991mm ALPHA_956: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F78  4E71                   11992mm DONE_956: NOP
00006F7A                         11993mm         ENDM
00006F7A  4E4F                   11994m         TRAP    #15         ; EXECUTE OUTPUT       
00006F7C                         11995m         ENDM 
00006F7C                         11996          
00006F7C  BE3C 0007              11997          CMP.B   #$07, D7
00006F80  6700 0006              11998          BEQ     decodeImmediateDest
00006F84                         11999  
00006F84  6000 01B4              12000          BRA     decodeImmediateComp
00006F88                         12001  decodeImmediateDest:
00006F88  3E13                   12002          MOVE.W  (A3), D7
00006F8A  381A                   12003          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
00006F8C  0807 0000              12004          BTST    #0, D7
00006F90  6600 0094              12005          BNE     decodeImmediateDestL
00006F94                         12006  decodeImmediateDestW:        
00006F94                         12007m         space
00006F94  43F8 00DD              12008m         LEA     OBLANK, A1
00006F98  103C 000E              12009m         MOVE.B  #14,D0          
00006F9C  4E4F                   12010m         TRAP    #15
00006F9E                         12011m         ENDM
00006F9E                         12012m         adrOut 
00006F9E  103C 0006              12013m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006FA2  3212                   12014m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FA4  E049                   12015m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FA6  E849                   12016m         LSR.W   #4, D1      
00006FA8                         12017mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FA8  0C01 0009              12018mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FAC  6E00 000A              12019mm         BGT     ALPHA_959
00006FB0  0601 0030              12020mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FB4  6000 0006              12021mm         BRA     DONE_959
00006FB8  0601 0037              12022mm ALPHA_959: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FBC  4E71                   12023mm DONE_959: NOP
00006FBE                         12024mm         ENDM
00006FBE  4E4F                   12025m         TRAP    #15         ; EXECUTE OUTPUT
00006FC0                         12026m         
00006FC0  3212                   12027m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FC2  E949                   12028m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006FC4  E049                   12029m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FC6  E849                   12030m         LSR.W   #4, D1      
00006FC8                         12031mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FC8  0C01 0009              12032mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FCC  6E00 000A              12033mm         BGT     ALPHA_960
00006FD0  0601 0030              12034mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FD4  6000 0006              12035mm         BRA     DONE_960
00006FD8  0601 0037              12036mm ALPHA_960: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FDC  4E71                   12037mm DONE_960: NOP
00006FDE                         12038mm         ENDM
00006FDE  4E4F                   12039m         TRAP    #15         ; EXECUTE OUTPUT
00006FE0                         12040m         
00006FE0  3212                   12041m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FE2  E149                   12042m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006FE4  E049                   12043m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FE6  E849                   12044m         LSR.W   #4, D1      
00006FE8                         12045mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FE8  0C01 0009              12046mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FEC  6E00 000A              12047mm         BGT     ALPHA_961
00006FF0  0601 0030              12048mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FF4  6000 0006              12049mm         BRA     DONE_961
00006FF8  0601 0037              12050mm ALPHA_961: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FFC  4E71                   12051mm DONE_961: NOP
00006FFE                         12052mm         ENDM
00006FFE  4E4F                   12053m         TRAP    #15         ; EXECUTE OUTPUT
00007000                         12054m         
00007000  3212                   12055m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007002  E149                   12056m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007004  E949                   12057m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007006  E049                   12058m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007008  E849                   12059m         LSR.W   #4, D1      
0000700A                         12060mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000700A  0C01 0009              12061mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000700E  6E00 000A              12062mm         BGT     ALPHA_962
00007012  0601 0030              12063mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007016  6000 0006              12064mm         BRA     DONE_962
0000701A  0601 0037              12065mm ALPHA_962: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000701E  4E71                   12066mm DONE_962: NOP
00007020                         12067mm         ENDM
00007020  4E4F                   12068m         TRAP    #15         ; EXECUTE OUTPUT       
00007022                         12069m         ENDM 
00007022  6000 0116              12070          BRA     decodeImmediateComp
00007026                         12071  decodeImmediateDestL:
00007026                         12072m         space
00007026  43F8 00DD              12073m         LEA     OBLANK, A1
0000702A  103C 000E              12074m         MOVE.B  #14,D0          
0000702E  4E4F                   12075m         TRAP    #15
00007030                         12076m         ENDM
00007030                         12077m         adrOut
00007030  103C 0006              12078m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007034  3212                   12079m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007036  E049                   12080m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007038  E849                   12081m         LSR.W   #4, D1      
0000703A                         12082mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000703A  0C01 0009              12083mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000703E  6E00 000A              12084mm         BGT     ALPHA_965
00007042  0601 0030              12085mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007046  6000 0006              12086mm         BRA     DONE_965
0000704A  0601 0037              12087mm ALPHA_965: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000704E  4E71                   12088mm DONE_965: NOP
00007050                         12089mm         ENDM
00007050  4E4F                   12090m         TRAP    #15         ; EXECUTE OUTPUT
00007052                         12091m         
00007052  3212                   12092m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007054  E949                   12093m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007056  E049                   12094m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007058  E849                   12095m         LSR.W   #4, D1      
0000705A                         12096mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000705A  0C01 0009              12097mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000705E  6E00 000A              12098mm         BGT     ALPHA_966
00007062  0601 0030              12099mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007066  6000 0006              12100mm         BRA     DONE_966
0000706A  0601 0037              12101mm ALPHA_966: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000706E  4E71                   12102mm DONE_966: NOP
00007070                         12103mm         ENDM
00007070  4E4F                   12104m         TRAP    #15         ; EXECUTE OUTPUT
00007072                         12105m         
00007072  3212                   12106m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007074  E149                   12107m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007076  E049                   12108m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007078  E849                   12109m         LSR.W   #4, D1      
0000707A                         12110mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000707A  0C01 0009              12111mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000707E  6E00 000A              12112mm         BGT     ALPHA_967
00007082  0601 0030              12113mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007086  6000 0006              12114mm         BRA     DONE_967
0000708A  0601 0037              12115mm ALPHA_967: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000708E  4E71                   12116mm DONE_967: NOP
00007090                         12117mm         ENDM
00007090  4E4F                   12118m         TRAP    #15         ; EXECUTE OUTPUT
00007092                         12119m         
00007092  3212                   12120m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007094  E149                   12121m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007096  E949                   12122m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007098  E049                   12123m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000709A  E849                   12124m         LSR.W   #4, D1      
0000709C                         12125mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000709C  0C01 0009              12126mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070A0  6E00 000A              12127mm         BGT     ALPHA_968
000070A4  0601 0030              12128mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070A8  6000 0006              12129mm         BRA     DONE_968
000070AC  0601 0037              12130mm ALPHA_968: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070B0  4E71                   12131mm DONE_968: NOP
000070B2                         12132mm         ENDM
000070B2  4E4F                   12133m         TRAP    #15         ; EXECUTE OUTPUT       
000070B4                         12134m         ENDM 
000070B4  381A                   12135          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
000070B6                         12136m         adrOut
000070B6  103C 0006              12137m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000070BA  3212                   12138m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070BC  E049                   12139m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070BE  E849                   12140m         LSR.W   #4, D1      
000070C0                         12141mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070C0  0C01 0009              12142mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070C4  6E00 000A              12143mm         BGT     ALPHA_970
000070C8  0601 0030              12144mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070CC  6000 0006              12145mm         BRA     DONE_970
000070D0  0601 0037              12146mm ALPHA_970: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070D4  4E71                   12147mm DONE_970: NOP
000070D6                         12148mm         ENDM
000070D6  4E4F                   12149m         TRAP    #15         ; EXECUTE OUTPUT
000070D8                         12150m         
000070D8  3212                   12151m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070DA  E949                   12152m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000070DC  E049                   12153m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070DE  E849                   12154m         LSR.W   #4, D1      
000070E0                         12155mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070E0  0C01 0009              12156mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070E4  6E00 000A              12157mm         BGT     ALPHA_971
000070E8  0601 0030              12158mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070EC  6000 0006              12159mm         BRA     DONE_971
000070F0  0601 0037              12160mm ALPHA_971: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070F4  4E71                   12161mm DONE_971: NOP
000070F6                         12162mm         ENDM
000070F6  4E4F                   12163m         TRAP    #15         ; EXECUTE OUTPUT
000070F8                         12164m         
000070F8  3212                   12165m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070FA  E149                   12166m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000070FC  E049                   12167m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070FE  E849                   12168m         LSR.W   #4, D1      
00007100                         12169mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007100  0C01 0009              12170mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007104  6E00 000A              12171mm         BGT     ALPHA_972
00007108  0601 0030              12172mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000710C  6000 0006              12173mm         BRA     DONE_972
00007110  0601 0037              12174mm ALPHA_972: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007114  4E71                   12175mm DONE_972: NOP
00007116                         12176mm         ENDM
00007116  4E4F                   12177m         TRAP    #15         ; EXECUTE OUTPUT
00007118                         12178m         
00007118  3212                   12179m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000711A  E149                   12180m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000711C  E949                   12181m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000711E  E049                   12182m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007120  E849                   12183m         LSR.W   #4, D1      
00007122                         12184mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007122  0C01 0009              12185mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007126  6E00 000A              12186mm         BGT     ALPHA_973
0000712A  0601 0030              12187mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000712E  6000 0006              12188mm         BRA     DONE_973
00007132  0601 0037              12189mm ALPHA_973: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007136  4E71                   12190mm DONE_973: NOP
00007138                         12191mm         ENDM
00007138  4E4F                   12192m         TRAP    #15         ; EXECUTE OUTPUT       
0000713A                         12193m         ENDM 
0000713A                         12194          
0000713A                         12195  decodeImmediateComp:
0000713A  4E75                   12196          RTS                 ; Return from decodeDIVU subroutine
0000713C                         12197  
0000713C                         12198  ; ========================================================================
0000713C                         12199  ; Generic Helper Functions
0000713C                         12200  ; 
0000713C                         12201  ; Set of subroutines which do various tasks which are repeated frequently.
0000713C                         12202  ; Each helper function should be commented with required input and output.
0000713C                         12203  ; 
0000713C                         12204  ; If input is required, request through D0, D1, etc
0000713C                         12205  ; Return using D0
0000713C                         12206  ; ========================================================================
0000713C                         12207  
0000713C                         12208  ; ------------------------------------------------------------
0000713C                         12209  ; outputData
0000713C                         12210  ; Jonathan
0000713C                         12211  ;
0000713C                         12212  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000713C                         12213  ; ------------------------------------------------------------
0000713C                         12214  outputData:
0000713C  103C 0006              12215          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00007140  323C 003D              12216          MOVE.W  #61, D1     ; An = sign
00007144  4E4F                   12217          TRAP    #15         ; Output = sign
00007146                         12218          
00007146  3212                   12219          MOVE.W  (A2), D1    ; Move A2 into D1
00007148  E049                   12220          LSR.W   #8, D1      ; Get the first hex digit of D1
0000714A  E849                   12221          LSR.W   #4, D1      
0000714C                         12222m         ConvertHtoA D1      ; Convert D1 to a character
0000714C  0C01 0009              12223m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007150  6E00 000A              12224m         BGT     ALPHA_974
00007154  0601 0030              12225m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007158  6000 0006              12226m         BRA     DONE_974
0000715C  0601 0037              12227m ALPHA_974: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007160  4E71                   12228m DONE_974: NOP
00007162                         12229m         ENDM
00007162  4E4F                   12230          TRAP    #15         ; Execute output
00007164                         12231          
00007164  3212                   12232          MOVE.W  (A2), D1    ; Move A2 into D1
00007166  E949                   12233          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00007168  E049                   12234          LSR.W   #8, D1      ; Get the first hex digit of D1
0000716A  E849                   12235          LSR.W   #4, D1      
0000716C                         12236m         ConvertHtoA D1      ; Convert D1 to a character
0000716C  0C01 0009              12237m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007170  6E00 000A              12238m         BGT     ALPHA_975
00007174  0601 0030              12239m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007178  6000 0006              12240m         BRA     DONE_975
0000717C  0601 0037              12241m ALPHA_975: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007180  4E71                   12242m DONE_975: NOP
00007182                         12243m         ENDM
00007182  4E4F                   12244          TRAP    #15         ; Execute output
00007184                         12245          
00007184  3212                   12246          MOVE.W  (A2), D1    ; Move A2 into D1
00007186  E149                   12247          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00007188  E049                   12248          LSR.W   #8, D1      ; Get the first hex digit of D1
0000718A  E849                   12249          LSR.W   #4, D1      
0000718C                         12250m         ConvertHtoA D1      ; Convert D1 to a character
0000718C  0C01 0009              12251m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007190  6E00 000A              12252m         BGT     ALPHA_976
00007194  0601 0030              12253m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007198  6000 0006              12254m         BRA     DONE_976
0000719C  0601 0037              12255m ALPHA_976: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000071A0  4E71                   12256m DONE_976: NOP
000071A2                         12257m         ENDM
000071A2  4E4F                   12258          TRAP    #15         ; Execute output
000071A4                         12259          
000071A4  3212                   12260          MOVE.W  (A2), D1    ; Move A2 into D1
000071A6  E149                   12261          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
000071A8  E949                   12262          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
000071AA  E049                   12263          LSR.W   #8, D1      ; Get the first hex digit of D1
000071AC  E849                   12264          LSR.W   #4, D1      
000071AE                         12265m         ConvertHtoA D1      ; Convert D1 to a character
000071AE  0C01 0009              12266m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000071B2  6E00 000A              12267m         BGT     ALPHA_977
000071B6  0601 0030              12268m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000071BA  6000 0006              12269m         BRA     DONE_977
000071BE  0601 0037              12270m ALPHA_977: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000071C2  4E71                   12271m DONE_977: NOP
000071C4                         12272m         ENDM
000071C4  4E4F                   12273          TRAP    #15         ; Execute output
000071C6  4E75                   12274          RTS
000071C8                         12275  
000071C8                         12276  
000071C8                         12277  
000071C8                         12278  
000071C8                         12279  
000071C8                         12280  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
000071C8                         12281                              ; End of Code
000071C8                         12282          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_161  238C
ADRABSOLUTEDST_225  2978
ADRABSOLUTEDST_25   162E
ADRABSOLUTEDST_297  30C8
ADRABSOLUTEDST_361  36B4
ADRABSOLUTEDST_428  3D08
ADRABSOLUTEDST_495  435C
ADRABSOLUTEDST_562  49BA
ADRABSOLUTEDST_634  510A
ADRABSOLUTEDST_698  56F6
ADRABSOLUTEDST_766  5D86
ADRABSOLUTEDST_868  691E
ADRABSOLUTEDST_90   1C20
ADRABSOLUTEL_161    2606
ADRABSOLUTEL_225    2BF2
ADRABSOLUTEL_25     18A8
ADRABSOLUTEL_297    3342
ADRABSOLUTEL_361    392E
ADRABSOLUTEL_428    3F82
ADRABSOLUTEL_495    45D6
ADRABSOLUTEL_562    4C34
ADRABSOLUTEL_634    5384
ADRABSOLUTEL_698    5970
ADRABSOLUTEL_766    6000
ADRABSOLUTEL_868    6B98
ADRABSOLUTEL_90     1E9A
ADRABSOLUTEW_161    2570
ADRABSOLUTEW_225    2B5C
ADRABSOLUTEW_25     1812
ADRABSOLUTEW_297    32AC
ADRABSOLUTEW_361    3898
ADRABSOLUTEW_428    3EEC
ADRABSOLUTEW_495    4540
ADRABSOLUTEW_562    4B9E
ADRABSOLUTEW_634    52EE
ADRABSOLUTEW_698    58DA
ADRABSOLUTEW_766    5F6A
ADRABSOLUTEW_868    6B02
ADRABSOLUTEW_90     1E04
ADRABSOLUTE_161     236E
ADRABSOLUTE_225     295A
ADRABSOLUTE_25      1610
ADRABSOLUTE_297     30AA
ADRABSOLUTE_361     3696
ADRABSOLUTE_428     3CEA
ADRABSOLUTE_495     433E
ADRABSOLUTE_562     499C
ADRABSOLUTE_634     50EC
ADRABSOLUTE_698     56D8
ADRABSOLUTE_766     5D68
ADRABSOLUTE_868     6900
ADRABSOLUTE_90      1C02
ADRDEST_160         2144
ADRDEST_224         2730
ADRDEST_24          13E6
ADRDEST_296         2E80
ADRDEST_360         346C
ADRDEST_427         3AC0
ADRDEST_494         4114
ADRDEST_561         4772
ADRDEST_633         4EC2
ADRDEST_697         54AE
ADRDEST_765         5B3E
ADRDEST_867         66D6
ADRDEST_89          19D8
ADRDEST_937         6D94
ADRIMMEDIATEL_161   244A
ADRIMMEDIATEL_225   2A36
ADRIMMEDIATEL_25    16EC
ADRIMMEDIATEL_297   3186
ADRIMMEDIATEL_361   3772
ADRIMMEDIATEL_428   3DC6
ADRIMMEDIATEL_495   441A
ADRIMMEDIATEL_562   4A78
ADRIMMEDIATEL_634   51C8
ADRIMMEDIATEL_698   57B4
ADRIMMEDIATEL_766   5E44
ADRIMMEDIATEL_868   69DC
ADRIMMEDIATEL_90    1CDE
ADRIMMEDIATEW_161   23AA
ADRIMMEDIATEW_225   2996
ADRIMMEDIATEW_25    164C
ADRIMMEDIATEW_297   30E6
ADRIMMEDIATEW_361   36D2
ADRIMMEDIATEW_428   3D26
ADRIMMEDIATEW_495   437A
ADRIMMEDIATEW_562   49D8
ADRIMMEDIATEW_634   5128
ADRIMMEDIATEW_698   5714
ADRIMMEDIATEW_766   5DA4
ADRIMMEDIATEW_868   693C
ADRIMMEDIATEW_90    1C3E
ADRIMMEDIATE_161    23A2
ADRIMMEDIATE_225    298E
ADRIMMEDIATE_25     1644
ADRIMMEDIATE_297    30DE
ADRIMMEDIATE_361    36CA
ADRIMMEDIATE_428    3D1E
ADRIMMEDIATE_495    4372
ADRIMMEDIATE_562    49D0
ADRIMMEDIATE_634    5120
ADRIMMEDIATE_698    570C
ADRIMMEDIATE_766    5D9C
ADRIMMEDIATE_868    6934
ADRIMMEDIATE_90     1C36
ADROUT              580
ADRREGDIRECTDEST_161  21CE
ADRREGDIRECTDEST_225  27BA
ADRREGDIRECTDEST_25  1470
ADRREGDIRECTDEST_297  2F0A
ADRREGDIRECTDEST_361  34F6
ADRREGDIRECTDEST_428  3B4A
ADRREGDIRECTDEST_495  419E
ADRREGDIRECTDEST_562  47FC
ADRREGDIRECTDEST_634  4F4C
ADRREGDIRECTDEST_698  5538
ADRREGDIRECTDEST_766  5BC8
ADRREGDIRECTDEST_868  6760
ADRREGDIRECTDEST_90  1A62
ADRREGDIRECTSRC_161  21EA
ADRREGDIRECTSRC_225  27D6
ADRREGDIRECTSRC_25  148C
ADRREGDIRECTSRC_297  2F26
ADRREGDIRECTSRC_361  3512
ADRREGDIRECTSRC_428  3B66
ADRREGDIRECTSRC_495  41BA
ADRREGDIRECTSRC_562  4818
ADRREGDIRECTSRC_634  4F68
ADRREGDIRECTSRC_698  5554
ADRREGDIRECTSRC_766  5BE4
ADRREGDIRECTSRC_868  677C
ADRREGDIRECTSRC_90  1A7E
ADRREGDIRECT_161    21C6
ADRREGDIRECT_225    27B2
ADRREGDIRECT_25     1468
ADRREGDIRECT_297    2F02
ADRREGDIRECT_361    34EE
ADRREGDIRECT_428    3B42
ADRREGDIRECT_495    4196
ADRREGDIRECT_562    47F4
ADRREGDIRECT_634    4F44
ADRREGDIRECT_698    5530
ADRREGDIRECT_766    5BC0
ADRREGDIRECT_868    6758
ADRREGDIRECT_90     1A5A
ADRREGINDIRECTDEST_161  2210
ADRREGINDIRECTDEST_225  27FC
ADRREGINDIRECTDEST_25  14B2
ADRREGINDIRECTDEST_297  2F4C
ADRREGINDIRECTDEST_361  3538
ADRREGINDIRECTDEST_428  3B8C
ADRREGINDIRECTDEST_495  41E0
ADRREGINDIRECTDEST_562  483E
ADRREGINDIRECTDEST_634  4F8E
ADRREGINDIRECTDEST_698  557A
ADRREGINDIRECTDEST_766  5C0A
ADRREGINDIRECTDEST_868  67A2
ADRREGINDIRECTDEST_90  1AA4
ADRREGINDIRECTSRC_161  2240
ADRREGINDIRECTSRC_225  282C
ADRREGINDIRECTSRC_25  14E2
ADRREGINDIRECTSRC_297  2F7C
ADRREGINDIRECTSRC_361  3568
ADRREGINDIRECTSRC_428  3BBC
ADRREGINDIRECTSRC_495  4210
ADRREGINDIRECTSRC_562  486E
ADRREGINDIRECTSRC_634  4FBE
ADRREGINDIRECTSRC_698  55AA
ADRREGINDIRECTSRC_766  5C3A
ADRREGINDIRECTSRC_868  67D2
ADRREGINDIRECTSRC_90  1AD4
ADRREGINDIRECT_161  2208
ADRREGINDIRECT_225  27F4
ADRREGINDIRECT_25   14AA
ADRREGINDIRECT_297  2F44
ADRREGINDIRECT_361  3530
ADRREGINDIRECT_428  3B84
ADRREGINDIRECT_495  41D8
ADRREGINDIRECT_562  4836
ADRREGINDIRECT_634  4F86
ADRREGINDIRECT_698  5572
ADRREGINDIRECT_766  5C02
ADRREGINDIRECT_868  679A
ADRREGINDIRECT_90   1A9C
ADRREGPOSTINCDEST_161  227A
ADRREGPOSTINCDEST_225  2866
ADRREGPOSTINCDEST_25  151C
ADRREGPOSTINCDEST_297  2FB6
ADRREGPOSTINCDEST_361  35A2
ADRREGPOSTINCDEST_428  3BF6
ADRREGPOSTINCDEST_495  424A
ADRREGPOSTINCDEST_562  48A8
ADRREGPOSTINCDEST_634  4FF8
ADRREGPOSTINCDEST_698  55E4
ADRREGPOSTINCDEST_766  5C74
ADRREGPOSTINCDEST_868  680C
ADRREGPOSTINCDEST_90  1B0E
ADRREGPOSTINCSRC_161  22B4
ADRREGPOSTINCSRC_225  28A0
ADRREGPOSTINCSRC_25  1556
ADRREGPOSTINCSRC_297  2FF0
ADRREGPOSTINCSRC_361  35DC
ADRREGPOSTINCSRC_428  3C30
ADRREGPOSTINCSRC_495  4284
ADRREGPOSTINCSRC_562  48E2
ADRREGPOSTINCSRC_634  5032
ADRREGPOSTINCSRC_698  561E
ADRREGPOSTINCSRC_766  5CAE
ADRREGPOSTINCSRC_868  6846
ADRREGPOSTINCSRC_90  1B48
ADRREGPOSTINC_161   2272
ADRREGPOSTINC_225   285E
ADRREGPOSTINC_25    1514
ADRREGPOSTINC_297   2FAE
ADRREGPOSTINC_361   359A
ADRREGPOSTINC_428   3BEE
ADRREGPOSTINC_495   4242
ADRREGPOSTINC_562   48A0
ADRREGPOSTINC_634   4FF0
ADRREGPOSTINC_698   55DC
ADRREGPOSTINC_766   5C6C
ADRREGPOSTINC_868   6804
ADRREGPOSTINC_90    1B06
ADRREGPREDECDEST_161  22F8
ADRREGPREDECDEST_225  28E4
ADRREGPREDECDEST_25  159A
ADRREGPREDECDEST_297  3034
ADRREGPREDECDEST_361  3620
ADRREGPREDECDEST_428  3C74
ADRREGPREDECDEST_495  42C8
ADRREGPREDECDEST_562  4926
ADRREGPREDECDEST_634  5076
ADRREGPREDECDEST_698  5662
ADRREGPREDECDEST_766  5CF2
ADRREGPREDECDEST_868  688A
ADRREGPREDECDEST_90  1B8C
ADRREGPREDECSRC_161  2332
ADRREGPREDECSRC_225  291E
ADRREGPREDECSRC_25  15D4
ADRREGPREDECSRC_297  306E
ADRREGPREDECSRC_361  365A
ADRREGPREDECSRC_428  3CAE
ADRREGPREDECSRC_495  4302
ADRREGPREDECSRC_562  4960
ADRREGPREDECSRC_634  50B0
ADRREGPREDECSRC_698  569C
ADRREGPREDECSRC_766  5D2C
ADRREGPREDECSRC_868  68C4
ADRREGPREDECSRC_90  1BC6
ADRREGPREDEC_161    22F0
ADRREGPREDEC_225    28DC
ADRREGPREDEC_25     1592
ADRREGPREDEC_297    302C
ADRREGPREDEC_361    3618
ADRREGPREDEC_428    3C6C
ADRREGPREDEC_495    42C0
ADRREGPREDEC_562    491E
ADRREGPREDEC_634    506E
ADRREGPREDEC_698    565A
ADRREGPREDEC_766    5CEA
ADRREGPREDEC_868    6882
ADRREGPREDEC_90     1B84
ADRSOURCE_160       214E
ADRSOURCE_224       273A
ADRSOURCE_24        13F0
ADRSOURCE_296       2E8A
ADRSOURCE_360       3476
ADRSOURCE_427       3ACA
ADRSOURCE_494       411E
ADRSOURCE_561       477C
ADRSOURCE_633       4ECC
ADRSOURCE_697       54B8
ADRSOURCE_765       5B48
ADRSOURCE_867       66E0
ADRSOURCE_89        19E2
ADRSOURCE_937       6D9E
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_120           1C6E
ALPHA_121           1C8E
ALPHA_122           1CAE
ALPHA_123           1CD0
ALPHA_127           1D0E
ALPHA_128           1D2E
ALPHA_129           1D4E
ALPHA_130           1D70
ALPHA_132           1D94
ALPHA_133           1DB4
ALPHA_134           1DD4
ALPHA_135           1DF6
ALPHA_138           1E2A
ALPHA_139           1E4A
ALPHA_140           1E6A
ALPHA_141           1E8C
ALPHA_144           1EC0
ALPHA_145           1EE0
ALPHA_146           1F00
ALPHA_147           1F22
ALPHA_149           1F46
ALPHA_15            1160
ALPHA_150           1F66
ALPHA_151           1F86
ALPHA_152           1FA8
ALPHA_16            1184
ALPHA_17            11A8
ALPHA_18            11CE
ALPHA_191           23DA
ALPHA_192           23FA
ALPHA_193           241A
ALPHA_194           243C
ALPHA_198           247A
ALPHA_199           249A
ALPHA_2             1020
ALPHA_200           24BA
ALPHA_201           24DC
ALPHA_203           2500
ALPHA_204           2520
ALPHA_205           2540
ALPHA_206           2562
ALPHA_209           2596
ALPHA_210           25B6
ALPHA_211           25D6
ALPHA_212           25F8
ALPHA_215           262C
ALPHA_216           264C
ALPHA_217           266C
ALPHA_218           268E
ALPHA_220           26B2
ALPHA_221           26D2
ALPHA_222           26F2
ALPHA_223           2714
ALPHA_255           29C6
ALPHA_256           29E6
ALPHA_257           2A06
ALPHA_258           2A28
ALPHA_262           2A66
ALPHA_263           2A86
ALPHA_264           2AA6
ALPHA_265           2AC8
ALPHA_267           2AEC
ALPHA_268           2B0C
ALPHA_269           2B2C
ALPHA_270           2B4E
ALPHA_273           2B82
ALPHA_274           2BA2
ALPHA_275           2BC2
ALPHA_276           2BE4
ALPHA_279           2C18
ALPHA_280           2C38
ALPHA_281           2C58
ALPHA_282           2C7A
ALPHA_284           2C9E
ALPHA_285           2CBE
ALPHA_286           2CDE
ALPHA_287           2D00
ALPHA_3             1042
ALPHA_327           3116
ALPHA_328           3136
ALPHA_329           3156
ALPHA_330           3178
ALPHA_334           31B6
ALPHA_335           31D6
ALPHA_336           31F6
ALPHA_337           3218
ALPHA_339           323C
ALPHA_340           325C
ALPHA_341           327C
ALPHA_342           329E
ALPHA_345           32D2
ALPHA_346           32F2
ALPHA_347           3312
ALPHA_348           3334
ALPHA_351           3368
ALPHA_352           3388
ALPHA_353           33A8
ALPHA_354           33CA
ALPHA_356           33EE
ALPHA_357           340E
ALPHA_358           342E
ALPHA_359           3450
ALPHA_391           3702
ALPHA_392           3722
ALPHA_393           3742
ALPHA_394           3764
ALPHA_398           37A2
ALPHA_399           37C2
ALPHA_4             1062
ALPHA_400           37E2
ALPHA_401           3804
ALPHA_403           3828
ALPHA_404           3848
ALPHA_405           3868
ALPHA_406           388A
ALPHA_409           38BE
ALPHA_410           38DE
ALPHA_411           38FE
ALPHA_412           3920
ALPHA_415           3954
ALPHA_416           3974
ALPHA_417           3994
ALPHA_418           39B6
ALPHA_420           39DA
ALPHA_421           39FA
ALPHA_422           3A1A
ALPHA_423           3A3C
ALPHA_458           3D56
ALPHA_459           3D76
ALPHA_460           3D96
ALPHA_461           3DB8
ALPHA_465           3DF6
ALPHA_466           3E16
ALPHA_467           3E36
ALPHA_468           3E58
ALPHA_470           3E7C
ALPHA_471           3E9C
ALPHA_472           3EBC
ALPHA_473           3EDE
ALPHA_476           3F12
ALPHA_477           3F32
ALPHA_478           3F52
ALPHA_479           3F74
ALPHA_482           3FA8
ALPHA_483           3FC8
ALPHA_484           3FE8
ALPHA_485           400A
ALPHA_487           402E
ALPHA_488           404E
ALPHA_489           406E
ALPHA_490           4090
ALPHA_5             1082
ALPHA_525           43AA
ALPHA_526           43CA
ALPHA_527           43EA
ALPHA_528           440C
ALPHA_532           444A
ALPHA_533           446A
ALPHA_534           448A
ALPHA_535           44AC
ALPHA_537           44D0
ALPHA_538           44F0
ALPHA_539           4510
ALPHA_540           4532
ALPHA_543           4566
ALPHA_544           4586
ALPHA_545           45A6
ALPHA_546           45C8
ALPHA_549           45FC
ALPHA_55            167C
ALPHA_550           461C
ALPHA_551           463C
ALPHA_552           465E
ALPHA_554           4682
ALPHA_555           46A2
ALPHA_556           46C2
ALPHA_557           46E4
ALPHA_56            169C
ALPHA_57            16BC
ALPHA_58            16DE
ALPHA_592           4A08
ALPHA_593           4A28
ALPHA_594           4A48
ALPHA_595           4A6A
ALPHA_599           4AA8
ALPHA_600           4AC8
ALPHA_601           4AE8
ALPHA_602           4B0A
ALPHA_604           4B2E
ALPHA_605           4B4E
ALPHA_606           4B6E
ALPHA_607           4B90
ALPHA_610           4BC4
ALPHA_611           4BE4
ALPHA_612           4C04
ALPHA_613           4C26
ALPHA_616           4C5A
ALPHA_617           4C7A
ALPHA_618           4C9A
ALPHA_619           4CBC
ALPHA_62            171C
ALPHA_621           4CE0
ALPHA_622           4D00
ALPHA_623           4D20
ALPHA_624           4D42
ALPHA_63            173C
ALPHA_64            175C
ALPHA_65            177E
ALPHA_664           5158
ALPHA_665           5178
ALPHA_666           5198
ALPHA_667           51BA
ALPHA_67            17A2
ALPHA_671           51F8
ALPHA_672           5218
ALPHA_673           5238
ALPHA_674           525A
ALPHA_676           527E
ALPHA_677           529E
ALPHA_678           52BE
ALPHA_679           52E0
ALPHA_68            17C2
ALPHA_682           5314
ALPHA_683           5334
ALPHA_684           5354
ALPHA_685           5376
ALPHA_688           53AA
ALPHA_689           53CA
ALPHA_69            17E2
ALPHA_690           53EA
ALPHA_691           540C
ALPHA_693           5430
ALPHA_694           5450
ALPHA_695           5470
ALPHA_696           5492
ALPHA_70            1804
ALPHA_728           5744
ALPHA_729           5764
ALPHA_73            1838
ALPHA_730           5784
ALPHA_731           57A6
ALPHA_735           57E4
ALPHA_736           5804
ALPHA_737           5824
ALPHA_738           5846
ALPHA_74            1858
ALPHA_740           586A
ALPHA_741           588A
ALPHA_742           58AA
ALPHA_743           58CC
ALPHA_746           5900
ALPHA_747           5920
ALPHA_748           5940
ALPHA_749           5962
ALPHA_75            1878
ALPHA_752           5996
ALPHA_753           59B6
ALPHA_754           59D6
ALPHA_755           59F8
ALPHA_757           5A1C
ALPHA_758           5A3C
ALPHA_759           5A5C
ALPHA_76            189A
ALPHA_760           5A7E
ALPHA_79            18CE
ALPHA_796           5DD4
ALPHA_797           5DF4
ALPHA_798           5E14
ALPHA_799           5E36
ALPHA_8             10B8
ALPHA_80            18EE
ALPHA_803           5E74
ALPHA_804           5E94
ALPHA_805           5EB4
ALPHA_806           5ED6
ALPHA_808           5EFA
ALPHA_809           5F1A
ALPHA_81            190E
ALPHA_810           5F3A
ALPHA_811           5F5C
ALPHA_814           5F90
ALPHA_815           5FB0
ALPHA_816           5FD0
ALPHA_817           5FF2
ALPHA_82            1930
ALPHA_820           6026
ALPHA_821           6046
ALPHA_822           6066
ALPHA_823           6088
ALPHA_825           60AC
ALPHA_826           60CC
ALPHA_827           60EC
ALPHA_828           610E
ALPHA_84            1954
ALPHA_85            1974
ALPHA_855           656E
ALPHA_86            1994
ALPHA_860           65EC
ALPHA_865           666A
ALPHA_87            19B6
ALPHA_898           696C
ALPHA_899           698C
ALPHA_9             10DA
ALPHA_900           69AC
ALPHA_901           69CE
ALPHA_905           6A0C
ALPHA_906           6A2C
ALPHA_907           6A4C
ALPHA_908           6A6E
ALPHA_910           6A92
ALPHA_911           6AB2
ALPHA_912           6AD2
ALPHA_913           6AF4
ALPHA_916           6B28
ALPHA_917           6B48
ALPHA_918           6B68
ALPHA_919           6B8A
ALPHA_922           6BBE
ALPHA_923           6BDE
ALPHA_924           6BFE
ALPHA_925           6C20
ALPHA_927           6C44
ALPHA_928           6C64
ALPHA_929           6C84
ALPHA_930           6CA6
ALPHA_936           6D6A
ALPHA_941           6DE8
ALPHA_942           6E08
ALPHA_943           6E28
ALPHA_944           6E4A
ALPHA_947           6E82
ALPHA_948           6EA2
ALPHA_949           6EC2
ALPHA_950           6EE4
ALPHA_953           6F12
ALPHA_954           6F32
ALPHA_955           6F52
ALPHA_956           6F74
ALPHA_959           6FB8
ALPHA_960           6FD8
ALPHA_961           6FF8
ALPHA_962           701A
ALPHA_965           704A
ALPHA_966           706A
ALPHA_967           708A
ALPHA_968           70AC
ALPHA_970           70D0
ALPHA_971           70F0
ALPHA_972           7110
ALPHA_973           7132
ALPHA_974           715C
ALPHA_975           717C
ALPHA_976           719C
ALPHA_977           71BE
AREG_M              6368
AREG_R              6442
ARIREG              1308
ARISHIFT            12FC
ASL_M               6350
ASL_R               642A
ASR_M               635E
ASR_R               6438
CHECKFOR0_153       1FD2
CHECKFOR0_154       2010
CHECKFOR0_21        132A
CHECKFOR0_22        1372
CHECKFOR0_290       2D4C
CHECKFOR0_426       3A88
CHECKFOR0_493       40DC
CHECKFOR0_560       4730
CHECKFOR0_627       4D8E
CHECKFOR0_763       5ACA
CHECKFOR0_829       6138
CHECKFOR0_834       6212
CHECKFOR0_839       62EC
CHECKFOR0_840       632A
CHECKFOR0_845       6404
CHECKFOR0_850       64DE
CHECKFOR0_851       651C
CHECKFOR0_856       659A
CHECKFOR0_861       6618
CHECKFOR0_866       6696
CHECKFOR0_931       6CD0
CHECKFOR0_932       6D18
CHECKFOR1_153       1FDC
CHECKFOR1_154       201A
CHECKFOR1_21        1334
CHECKFOR1_22        137C
CHECKFOR1_290       2D56
CHECKFOR1_426       3A92
CHECKFOR1_493       40E6
CHECKFOR1_560       473A
CHECKFOR1_627       4D98
CHECKFOR1_763       5AD4
CHECKFOR1_829       6142
CHECKFOR1_834       621C
CHECKFOR1_839       62F6
CHECKFOR1_840       6334
CHECKFOR1_845       640E
CHECKFOR1_850       64E8
CHECKFOR1_851       6526
CHECKFOR1_856       65A4
CHECKFOR1_861       6622
CHECKFOR1_866       66A0
CHECKFOR1_931       6CDA
CHECKFOR1_932       6D22
CHECKFORBORW_938    6DAA
CHECKFORB_23        139E
CHECKFORB_764       5AF6
CHECKFORB_830       617A
CHECKFORB_835       6254
CHECKFORB_841       636C
CHECKFORB_846       6446
CHECKFORDESTDN_155  2042
CHECKFORDESTDN_291  2D7E
CHECKFORDESTDN_628  4DC0
CHECKFORL_23        13CA
CHECKFORL_764       5B22
CHECKFORL_830       61A6
CHECKFORL_835       6280
CHECKFORL_841       6398
CHECKFORL_846       6472
CHECKFORL_938       6DB6
CHECKFORSRCDN_155   2092
CHECKFORSRCDN_291   2DCE
CHECKFORSRCDN_628   4E10
CHECKFORW_23        13B4
CHECKFORW_764       5B14
CHECKFORW_830       6198
CHECKFORW_835       6272
CHECKFORW_841       638A
CHECKFORW_846       6464
COMPLETE_153        1FF0
COMPLETE_154        202E
COMPLETE_155        2124
COMPLETE_160        2156
COMPLETE_161        271E
COMPLETE_21         1348
COMPLETE_22         1390
COMPLETE_224        2742
COMPLETE_225        2D0A
COMPLETE_23         13D8
COMPLETE_24         13F8
COMPLETE_25         19C0
COMPLETE_290        2D6A
COMPLETE_291        2E60
COMPLETE_296        2E92
COMPLETE_297        345A
COMPLETE_360        347E
COMPLETE_361        3A46
COMPLETE_426        3AA6
COMPLETE_427        3AD2
COMPLETE_428        409A
COMPLETE_493        40FA
COMPLETE_494        4126
COMPLETE_495        46EE
COMPLETE_560        474E
COMPLETE_561        4784
COMPLETE_562        4D4C
COMPLETE_627        4DAC
COMPLETE_628        4EA2
COMPLETE_633        4ED4
COMPLETE_634        549C
COMPLETE_697        54C0
COMPLETE_698        5A88
COMPLETE_763        5AE8
COMPLETE_764        5B30
COMPLETE_765        5B50
COMPLETE_766        6118
COMPLETE_829        6156
COMPLETE_830        61B4
COMPLETE_834        6230
COMPLETE_835        628E
COMPLETE_839        630A
COMPLETE_840        6348
COMPLETE_841        63A6
COMPLETE_845        6422
COMPLETE_846        6480
COMPLETE_850        64FC
COMPLETE_851        653A
COMPLETE_856        65B8
COMPLETE_861        6636
COMPLETE_866        66B4
COMPLETE_867        66E8
COMPLETE_868        6CB0
COMPLETE_89         19EA
COMPLETE_90         1FB2
COMPLETE_931        6CEE
COMPLETE_932        6D36
COMPLETE_937        6DA6
COMPLETE_938        6DBA
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_161  218A
DATAREGDIRECTDEST_225  2776
DATAREGDIRECTDEST_25  142C
DATAREGDIRECTDEST_297  2EC6
DATAREGDIRECTDEST_361  34B2
DATAREGDIRECTDEST_428  3B06
DATAREGDIRECTDEST_495  415A
DATAREGDIRECTDEST_562  47B8
DATAREGDIRECTDEST_634  4F08
DATAREGDIRECTDEST_698  54F4
DATAREGDIRECTDEST_766  5B84
DATAREGDIRECTDEST_868  671C
DATAREGDIRECTDEST_90  1A1E
DATAREGDIRECTSRC_161  21A6
DATAREGDIRECTSRC_225  2792
DATAREGDIRECTSRC_25  1448
DATAREGDIRECTSRC_297  2EE2
DATAREGDIRECTSRC_361  34CE
DATAREGDIRECTSRC_428  3B22
DATAREGDIRECTSRC_495  4176
DATAREGDIRECTSRC_562  47D4
DATAREGDIRECTSRC_634  4F24
DATAREGDIRECTSRC_698  5510
DATAREGDIRECTSRC_766  5BA0
DATAREGDIRECTSRC_868  6738
DATAREGDIRECTSRC_90  1A3A
DATAREGDIRECT_161   2182
DATAREGDIRECT_225   276E
DATAREGDIRECT_25    1424
DATAREGDIRECT_297   2EBE
DATAREGDIRECT_361   34AA
DATAREGDIRECT_428   3AFE
DATAREGDIRECT_495   4152
DATAREGDIRECT_562   47B0
DATAREGDIRECT_634   4F00
DATAREGDIRECT_698   54EC
DATAREGDIRECT_766   5B7C
DATAREGDIRECT_868   6714
DATAREGDIRECT_90    1A16
DECODEADD           1FF2
DECODEADDCOMP       2D2C
DECODEADDDESTOP     2722
DECODEADRMODE       208F
DECODEAND           4D70
DECODEANDCOMP       5AAA
DECODEANDDESTOP     54A0
DECODEASX_M         630C
DECODEASX_R         63E6
DECODEASX_S         64C0
DECODEBEQ           64FE
DECODEBGE           657C
DECODEBLT           65FA
DECODEBRA           6CFA
DECODEDIVU          40BE
DECODEIMMEDIATE     6D78
DECODEIMMEDIATECOMP  713A
DECODEIMMEDIATEDEST  6F88
DECODEIMMEDIATEDESTL  7026
DECODEIMMEDIATEDESTW  6F94
DECODEIMMEDIATEL    6E5E
DECODEJSR           6678
DECODELEA           4712
DECODELSX_M         611A
DECODELSX_R         61F4
DECODELSX_S         62CE
DECODEMOVE          1354
DECODEMOVEM         1FB4
DECODEMULS          3A6A
DECODENOP           130C
DECODENOT           5AAC
DECODERTS           6CB2
DECODESIZELOW       1625
DECODESUB           2D2E
DECODESUBCOMP       3A68
DECODESUBDESTOP     345E
DESTDNB_155         2084
DESTDNB_291         2DC0
DESTDNB_628         4E02
DESTDNL_155         2058
DESTDNL_291         2D94
DESTDNL_628         4DD6
DESTDNW_155         206A
DESTDNW_291         2DA6
DESTDNW_628         4DE8
DONE_10             10FE
DONE_11             111E
DONE_120            1C72
DONE_121            1C92
DONE_122            1CB2
DONE_123            1CD4
DONE_127            1D12
DONE_128            1D32
DONE_129            1D52
DONE_130            1D74
DONE_132            1D98
DONE_133            1DB8
DONE_134            1DD8
DONE_135            1DFA
DONE_138            1E2E
DONE_139            1E4E
DONE_140            1E6E
DONE_141            1E90
DONE_144            1EC4
DONE_145            1EE4
DONE_146            1F04
DONE_147            1F26
DONE_149            1F4A
DONE_15             1164
DONE_150            1F6A
DONE_151            1F8A
DONE_152            1FAC
DONE_16             1188
DONE_17             11AC
DONE_18             11D2
DONE_191            23DE
DONE_192            23FE
DONE_193            241E
DONE_194            2440
DONE_198            247E
DONE_199            249E
DONE_2              1024
DONE_200            24BE
DONE_201            24E0
DONE_203            2504
DONE_204            2524
DONE_205            2544
DONE_206            2566
DONE_209            259A
DONE_210            25BA
DONE_211            25DA
DONE_212            25FC
DONE_215            2630
DONE_216            2650
DONE_217            2670
DONE_218            2692
DONE_220            26B6
DONE_221            26D6
DONE_222            26F6
DONE_223            2718
DONE_255            29CA
DONE_256            29EA
DONE_257            2A0A
DONE_258            2A2C
DONE_262            2A6A
DONE_263            2A8A
DONE_264            2AAA
DONE_265            2ACC
DONE_267            2AF0
DONE_268            2B10
DONE_269            2B30
DONE_270            2B52
DONE_273            2B86
DONE_274            2BA6
DONE_275            2BC6
DONE_276            2BE8
DONE_279            2C1C
DONE_280            2C3C
DONE_281            2C5C
DONE_282            2C7E
DONE_284            2CA2
DONE_285            2CC2
DONE_286            2CE2
DONE_287            2D04
DONE_3              1046
DONE_327            311A
DONE_328            313A
DONE_329            315A
DONE_330            317C
DONE_334            31BA
DONE_335            31DA
DONE_336            31FA
DONE_337            321C
DONE_339            3240
DONE_340            3260
DONE_341            3280
DONE_342            32A2
DONE_345            32D6
DONE_346            32F6
DONE_347            3316
DONE_348            3338
DONE_351            336C
DONE_352            338C
DONE_353            33AC
DONE_354            33CE
DONE_356            33F2
DONE_357            3412
DONE_358            3432
DONE_359            3454
DONE_391            3706
DONE_392            3726
DONE_393            3746
DONE_394            3768
DONE_398            37A6
DONE_399            37C6
DONE_4              1066
DONE_400            37E6
DONE_401            3808
DONE_403            382C
DONE_404            384C
DONE_405            386C
DONE_406            388E
DONE_409            38C2
DONE_410            38E2
DONE_411            3902
DONE_412            3924
DONE_415            3958
DONE_416            3978
DONE_417            3998
DONE_418            39BA
DONE_420            39DE
DONE_421            39FE
DONE_422            3A1E
DONE_423            3A40
DONE_458            3D5A
DONE_459            3D7A
DONE_460            3D9A
DONE_461            3DBC
DONE_465            3DFA
DONE_466            3E1A
DONE_467            3E3A
DONE_468            3E5C
DONE_470            3E80
DONE_471            3EA0
DONE_472            3EC0
DONE_473            3EE2
DONE_476            3F16
DONE_477            3F36
DONE_478            3F56
DONE_479            3F78
DONE_482            3FAC
DONE_483            3FCC
DONE_484            3FEC
DONE_485            400E
DONE_487            4032
DONE_488            4052
DONE_489            4072
DONE_490            4094
DONE_5              1086
DONE_525            43AE
DONE_526            43CE
DONE_527            43EE
DONE_528            4410
DONE_532            444E
DONE_533            446E
DONE_534            448E
DONE_535            44B0
DONE_537            44D4
DONE_538            44F4
DONE_539            4514
DONE_540            4536
DONE_543            456A
DONE_544            458A
DONE_545            45AA
DONE_546            45CC
DONE_549            4600
DONE_55             1680
DONE_550            4620
DONE_551            4640
DONE_552            4662
DONE_554            4686
DONE_555            46A6
DONE_556            46C6
DONE_557            46E8
DONE_56             16A0
DONE_57             16C0
DONE_58             16E2
DONE_592            4A0C
DONE_593            4A2C
DONE_594            4A4C
DONE_595            4A6E
DONE_599            4AAC
DONE_600            4ACC
DONE_601            4AEC
DONE_602            4B0E
DONE_604            4B32
DONE_605            4B52
DONE_606            4B72
DONE_607            4B94
DONE_610            4BC8
DONE_611            4BE8
DONE_612            4C08
DONE_613            4C2A
DONE_616            4C5E
DONE_617            4C7E
DONE_618            4C9E
DONE_619            4CC0
DONE_62             1720
DONE_621            4CE4
DONE_622            4D04
DONE_623            4D24
DONE_624            4D46
DONE_63             1740
DONE_64             1760
DONE_65             1782
DONE_664            515C
DONE_665            517C
DONE_666            519C
DONE_667            51BE
DONE_67             17A6
DONE_671            51FC
DONE_672            521C
DONE_673            523C
DONE_674            525E
DONE_676            5282
DONE_677            52A2
DONE_678            52C2
DONE_679            52E4
DONE_68             17C6
DONE_682            5318
DONE_683            5338
DONE_684            5358
DONE_685            537A
DONE_688            53AE
DONE_689            53CE
DONE_69             17E6
DONE_690            53EE
DONE_691            5410
DONE_693            5434
DONE_694            5454
DONE_695            5474
DONE_696            5496
DONE_70             1808
DONE_728            5748
DONE_729            5768
DONE_73             183C
DONE_730            5788
DONE_731            57AA
DONE_735            57E8
DONE_736            5808
DONE_737            5828
DONE_738            584A
DONE_74             185C
DONE_740            586E
DONE_741            588E
DONE_742            58AE
DONE_743            58D0
DONE_746            5904
DONE_747            5924
DONE_748            5944
DONE_749            5966
DONE_75             187C
DONE_752            599A
DONE_753            59BA
DONE_754            59DA
DONE_755            59FC
DONE_757            5A20
DONE_758            5A40
DONE_759            5A60
DONE_76             189E
DONE_760            5A82
DONE_79             18D2
DONE_796            5DD8
DONE_797            5DF8
DONE_798            5E18
DONE_799            5E3A
DONE_8              10BC
DONE_80             18F2
DONE_803            5E78
DONE_804            5E98
DONE_805            5EB8
DONE_806            5EDA
DONE_808            5EFE
DONE_809            5F1E
DONE_81             1912
DONE_810            5F3E
DONE_811            5F60
DONE_814            5F94
DONE_815            5FB4
DONE_816            5FD4
DONE_817            5FF6
DONE_82             1934
DONE_820            602A
DONE_821            604A
DONE_822            606A
DONE_823            608C
DONE_825            60B0
DONE_826            60D0
DONE_827            60F0
DONE_828            6112
DONE_84             1958
DONE_85             1978
DONE_855            6572
DONE_86             1998
DONE_860            65F0
DONE_865            666E
DONE_87             19BA
DONE_898            6970
DONE_899            6990
DONE_9              10DE
DONE_900            69B0
DONE_901            69D2
DONE_905            6A10
DONE_906            6A30
DONE_907            6A50
DONE_908            6A72
DONE_910            6A96
DONE_911            6AB6
DONE_912            6AD6
DONE_913            6AF8
DONE_916            6B2C
DONE_917            6B4C
DONE_918            6B6C
DONE_919            6B8E
DONE_922            6BC2
DONE_923            6BE2
DONE_924            6C02
DONE_925            6C24
DONE_927            6C48
DONE_928            6C68
DONE_929            6C88
DONE_930            6CAA
DONE_936            6D6E
DONE_941            6DEC
DONE_942            6E0C
DONE_943            6E2C
DONE_944            6E4E
DONE_947            6E86
DONE_948            6EA6
DONE_949            6EC6
DONE_950            6EE8
DONE_953            6F16
DONE_954            6F36
DONE_955            6F56
DONE_956            6F78
DONE_959            6FBC
DONE_960            6FDC
DONE_961            6FFC
DONE_962            701E
DONE_965            704E
DONE_966            706E
DONE_967            708E
DONE_968            70B0
DONE_970            70D4
DONE_971            70F4
DONE_972            7114
DONE_973            7136
DONE_974            7160
DONE_975            7180
DONE_976            71A0
DONE_977            71C2
ENDSIM              11FA
GOLOOP              113C
IDENTIFYOPCODE      11FE
LOGREG              12F0
LOOP_153            1FBE
LOOP_154            1FFC
LOOP_21             1316
LOOP_22             135E
LOOP_290            2D38
LOOP_426            3A74
LOOP_493            40C8
LOOP_560            471C
LOOP_627            4D7A
LOOP_763            5AB6
LOOP_829            6124
LOOP_834            61FE
LOOP_839            62D8
LOOP_840            6316
LOOP_845            63F0
LOOP_850            64CA
LOOP_851            6508
LOOP_856            6586
LOOP_861            6604
LOOP_866            6682
LOOP_931            6CBC
LOOP_932            6D04
LSL_M               615E
LSL_R               6238
LSR_M               616C
LSR_R               6246
MAIN                1000
NEWLINE             3C59
NEXT_153            1FE2
NEXT_154            2020
NEXT_155            2120
NEXT_21             133A
NEXT_22             1382
NEXT_290            2D5C
NEXT_291            2E5C
NEXT_426            3A98
NEXT_493            40EC
NEXT_560            4740
NEXT_627            4D9E
NEXT_628            4E9E
NEXT_763            5ADA
NEXT_829            6148
NEXT_834            6222
NEXT_839            62FC
NEXT_840            633A
NEXT_845            6414
NEXT_850            64EE
NEXT_851            652C
NEXT_856            65AA
NEXT_861            6628
NEXT_866            66A6
NEXT_931            6CE0
NEXT_932            6D28
OADD                6F
OADDI               73
OAN                 CE
OAND                90
OASL                A0
OASR                A4
OBEQ                A8
OBGE                AC
OBLANK              DD
OBLT                B0
OBRA                BC
OBSIZE              C0
OCOMMA              D4
ODIVU               84
ODN                 CC
OHASH               DB
OJSR                B4
OLB                 D0
OLEA                8C
OLSIZE              C8
OLSL                98
OLSR                9C
OMOVE               64
OMOVEM              69
OMULS               7C
ONOP                60
ONOT                94
OPREDEC             D7
OPSTINC             D9
ORB                 D2
ORTS                B8
OSUB                78
OTAB                DF
OUTPUTDATA          713C
OWELCOME            E3
OWSIZE              C4
PADD                12E
PAND                183
PASX_M              1D8
PASX_R              1E9
PASX_S              1FA
PBEQ                20B
PBGE                21C
PBLT                22D
PBRA                260
PDIVU               161
PJSR                23E
PLEA                172
PLSX_M              1A5
PLSX_R              1B6
PLSX_S              1C7
PMOVE               10C
PMOVEM              11D
PMULS               150
PNOP                FB
PNOT                194
PREPAREADRMODE      1E82
PRINTADR            3265
PRINTANDEST         303D
PRINTANSRC          313C
PRINTBRANCH         176C
PRINTCOMMA          3837
PRINTCOUNT          2CD8
PRINTDNDEST         2DED
PRINTDNSRC          2F00
PRINTHASH           3AE5
PRINTLB             396B
PRINTOPMODE         1827
PRINTPD             3904
PRINTPI             389D
PRINTRB             39CE
PRINTSIGN           3A31
PRINTSIZE           F5E
PRINTSIZELOW        12CF
PRTS                24F
PSUB                13F
READINPUT           F4
REG_M               6176
REG_R               6250
REND                31
RSTART              0
SPACE               3B99
SPLIT0              120C
SPLIT000            1218
SPLIT01             122C
SPLIT0100           1238
SPLIT0100111        1254
SPLIT0110           1268
SPLIT01100          1274
SPLIT01101          1288
SPLIT1              1294
SPLIT10             12A0
SPLIT11             12AC
SPLIT110            12B8
SPLIT111            12DC
SRCDNB_155          20FA
SRCDNB_291          2E36
SRCDNB_628          4E78
SRCDNL_155          209E
SRCDNL_291          2DDA
SRCDNL_628          4E1C
SRCDNW_155          20C8
SRCDNW_291          2E04
SRCDNW_628          4E46
TAB                 3BFA
VERIFYOPCODE        AEB
