00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/4/2021 10:28:32 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 41 44 44 49 00           102  oADDI:  DC.B    'ADDI',0
00000078= 53 55 42 00              103  oSUB:   DC.B    'SUB',0
0000007C= 4D 55 4C 53 2E 57 ...    104  oMULS:  DC.B    'MULS.W ',0
00000084= 44 49 56 55 2E 57 ...    105  oDIVU:  DC.B    'DIVU.W ',0
0000008C= 4C 45 41 00              106  oLEA:   DC.B    'LEA',0
00000090= 41 4E 44 00              107  oAND:   DC.B    'AND',0
00000094= 4E 4F 54 00              108  oNOT:   DC.B    'NOT',0
00000098= 4C 53 4C 00              109  oLSL:   DC.B    'LSL',0
0000009C= 4C 53 52 00              110  oLSR:   DC.B    'LSR',0
000000A0= 41 53 4C 00              111  oASL:   DC.B    'ASL',0
000000A4= 41 53 52 00              112  oASR:   DC.B    'ASR',0
000000A8= 42 45 51 00              113  oBEQ:   DC.B    'BEQ',0
000000AC= 42 47 45 00              114  oBGE:   DC.B    'BGE',0
000000B0= 42 4C 54 00              115  oBLT:   DC.B    'BLT',0
000000B4= 4A 53 52 00              116  oJSR:   DC.B    'JSR',0
000000B8= 52 54 53 00              117  oRTS:   DC.B    'RTS',0
000000BC= 42 52 41 00              118  oBRA:   DC.B    'BRA',0
000000C0= 2E 42 20 00              119  oBSize  DC.B    '.B ',0
000000C4= 2E 57 20 00              120  oWSize  DC.B    '.W ',0
000000C8= 2E 4C 20 00              121  oLSize  DC.B    '.L ',0
000000CC= 44 00                    122  oDn     DC.B    'D',0
000000CE= 41 00                    123  oAn     DC.B    'A',0
000000D0= 28 00                    124  oLB     DC.B    '(',0
000000D2= 29 00                    125  oRB     DC.B    ')',0
000000D4= 2C 20 00                 126  oComma  DC.B    ', ',0
000000D7= 2D 00                    127  oPreDec DC.B    '-',0
000000D9= 2B 00                    128  oPstInc DC.B    '+',0
000000DB= 23 00                    129  oHash   DC.B    '#',0
000000DD= 20 00                    130  oBlank  DC.B    ' ',0
000000DF= 20 20 20 00              131  oTab  DC.B    '   ',0
000000E3= 57 65 6C 63 6F 6D ...    132  oWelcome DC.B   'Welcome to our 68k DASM!'
000000FB                           133  ; ------------------------------------------------------------
000000FB                           134  ; "Pattern" Variables
000000FB                           135  ; Jonathan
000000FB                           136  ; 
000000FB                           137  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000FB                           138  ; and the opcode isn't actually data
000000FB                           139  ; ------------------------------------------------------------
000000FB= 30 31 30 30 31 31 ...    140  pNOP:   DC.B    '0100111001110001',0
0000010C= 30 30 2E 2E 2E 2E ...    141  pMOVE:  DC.B    '00..............',0
0000011D= 30 31 30 30 31 2E ...    142  pMOVEM: DC.B    '01001.001.......',0
0000012E= 31 31 30 31 2E 2E ...    143  pADD:   DC.B    '1101............',0
0000013F= 31 30 30 31 2E 2E ...    144  pSUB:   DC.B    '1001............',0
00000150= 31 31 30 30 2E 2E ...    145  pMULS:  DC.B    '1100...111......',0
00000161= 31 30 30 30 2E 2E ...    146  pDIVU:  DC.B    '1000...011......',0
00000172= 30 31 30 30 2E 2E ...    147  pLEA:   DC.B    '0100...111......',0
00000183= 31 31 30 30 2E 2E ...    148  pAND:   DC.B    '1100............',0
00000194= 30 31 30 30 30 31 ...    149  pNOT:   DC.B    '01000110........',0
000001A5= 31 31 31 30 2E 2E ...    150  pLSx_M: DC.B    '1110......001...',0
000001B6= 31 31 31 30 2E 2E ...    151  pLSx_R: DC.B    '1110......101...',0
000001C7= 31 31 31 30 2E 2E ...    152  pLSx_S: DC.B    '1110......100...',0
000001D8= 31 31 31 30 2E 2E ...    153  pASx_M: DC.B    '1110......000...',0
000001E9= 31 31 31 30 2E 2E ...    154  pASx_R: DC.B    '1110......100...',0
000001FA= 31 31 31 30 2E 2E ...    155  pASx_S: DC.B    '1110......100...',0
0000020B= 30 31 31 30 30 31 ...    156  pBEQ:   DC.B    '01100111........',0
0000021C= 30 31 31 30 31 31 ...    157  pBGE:   DC.B    '01101100........',0
0000022D= 30 31 31 30 31 31 ...    158  pBLT:   DC.B    '01101101........',0
0000023E= 30 31 30 30 31 31 ...    159  pJSR:   DC.B    '0100111010......',0
0000024F= 30 31 30 30 31 31 ...    160  pRTS:   DC.B    '0100111001110101',0
00000260= 30 31 31 30 30 30 ...    161  pBRA:   DC.B    '01100000........',0
00000271                           162  
00000271                           163  
00000271                           164  ; ========================================================================
00000271                           165  ; Macros
00000271                           166  ; ========================================================================
00000271                           167  ; ------------------------------------------------------------
00000271                           168  ; "convertHtoA" Helper
00000271                           169  ; Jonathan
00000271                           170  ;
00000271                           171  ; 1st argument is a data register containing a single digit of a hex number.
00000271                           172  ;
00000271                           173  ; Converts the argument from a hex digit to an ascii character
00000271                           174  ; ------------------------------------------------------------
00000271                           175  convertHtoA:    MACRO
00000271                           176          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
00000271                           177          BGT     alpha\@
00000271                           178          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
00000271                           179          BRA     done\@
00000271                           180  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
00000271                           181  done\@: NOP
00000271                           182          ENDM
00000271                           183  ; ------------------------------------------------------------
00000271                           184  ; adrOut
00000271                           185  ; Gary
00000271                           186  ;
00000271                           187  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00000271                           188  ; ------------------------------------------------------------
00000271                           189  adrOut:         MACRO
00000271                           190          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           191          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           192          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           193          LSR.W   #4, D1      
00000271                           194          ConvertHtoA D1      ; Convert D1 to a character
00000271                           195          TRAP    #15         ; Execute output
00000271                           196          
00000271                           197          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           198          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000271                           199          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           200          LSR.W   #4, D1      
00000271                           201          ConvertHtoA D1      ; Convert D1 to a character
00000271                           202          TRAP    #15         ; Execute output
00000271                           203          
00000271                           204          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           205          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           206          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           207          LSR.W   #4, D1      
00000271                           208          ConvertHtoA D1      ; Convert D1 to a character
00000271                           209          TRAP    #15         ; Execute output
00000271                           210          
00000271                           211          MOVE.W  (A2), D1    ; Move A2 into D1
00000271                           212          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           213          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000271                           214          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           215          LSR.W   #4, D1      
00000271                           216          ConvertHtoA D1      ; Convert D1 to a character
00000271                           217          TRAP    #15         ; Execute output       
00000271                           218          ENDM 
00000271                           219  adrOutInput:         MACRO
00000271                           220          MOVE.L   \1, D7
00000271                           221          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           222          MOVE.W  D7, D1    ; Move A2 into D1
00000271                           223          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           224          LSR.W   #4, D1      
00000271                           225          ConvertHtoA D1      ; Convert D1 to a character
00000271                           226          TRAP    #15         ; Execute output
00000271                           227          
00000271                           228          MOVE.W  D7, D1    ; Move A2 into D1    ; Move A2 into D1
00000271                           229          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000271                           230          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           231          LSR.W   #4, D1      
00000271                           232          ConvertHtoA D1      ; Convert D1 to a character
00000271                           233          TRAP    #15         ; Execute output
00000271                           234          
00000271                           235          MOVE.W  D7, D1    ; Move A2 into D1   ; Move A2 into D1
00000271                           236          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           237          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           238          LSR.W   #4, D1      
00000271                           239          ConvertHtoA D1      ; Convert D1 to a character
00000271                           240          TRAP    #15         ; Execute output
00000271                           241          
00000271                           242          MOVE.W  D7, D1    ; Move A2 into D1    ; Move A2 into D1
00000271                           243          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           244          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000271                           245          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           246          LSR.W   #4, D1      
00000271                           247          ConvertHtoA D1      ; Convert D1 to a character
00000271                           248          TRAP    #15         ; Execute output       
00000271                           249          ENDM 
00000271                           250  ; ------------------------------------------------------------
00000271                           251  ; "verifyOpcode" Helper
00000271                           252  ; Jonathan
00000271                           253  ;
00000271                           254  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
00000271                           255  ; 2nd argument is a data register to check against the template
00000271                           256  ;
00000271                           257  ; Verifies that the opcode passed through \2 matches the pattern of \1
00000271                           258  ; If they do not match, branches to outputData
00000271                           259  ; ------------------------------------------------------------
00000271                           260  verifyOpcode:  MACRO
00000271                           261          LEA     \1, A1      ; Input pattern string
00000271                           262          MOVE.W  \2, D3      ; input value
00000271                           263          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
00000271                           264          
00000271                           265  loop\@: 
00000271                           266          CMP.B   #$30, (A1)  ; Check if the template wants a 0
00000271                           267          BEQ     checkFor0\@
00000271                           268          CMP.B   #$31, (A1)  ; Check if the template wants a 1
00000271                           269          BEQ     checkFor1\@
00000271                           270          BRA     next\@      ; Template has a wildcard, go to next iteration
00000271                           271          
00000271                           272  checkFor0\@: 
00000271                           273          BTST    D1, D3      ; Check if contains 0
00000271                           274          BNE     outputData  ; Missing a 0 -> Not a valid opcode
00000271                           275          BRA     next\@
00000271                           276  
00000271                           277  checkFor1\@:
00000271                           278          BTST    D1, D3      ; Check if contains 1
00000271                           279          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
00000271                           280  
00000271                           281  next\@: 
00000271                           282          CMP.B   #0, D1      ; Compare bit counter to 0
00000271                           283          BEQ     complete\@  ; Branch to complete if bit counter reached 0
00000271                           284          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000271                           285          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
00000271                           286          BRA     loop\@      ; Begin loop again
00000271                           287  
00000271                           288  complete\@:  ; Opcode has been verified
00000271                           289          ENDM
00000271                           290          
00000271                           291  ; ------------------------------------------------------------
00000271                           292  ; "printSize" Helper
00000271                           293  ; Gary
00000271                           294  ;
00000271                           295  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           296  ;
00000271                           297  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
00000271                           298  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
00000271                           299  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
00000271                           300  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
00000271                           301  ; ------------------------------------------------------------
00000271                           302  printSize:  MACRO
00000271                           303          MOVE.W  \1, D3      ; input value
00000271                           304          CLR     D7      
00000271                           305  checkForB\@: 
00000271                           306          BTST    #13, D3      ; Check if contains 0
00000271                           307          BNE     checkForW\@  ; If not go to word size
00000271                           308          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
00000271                           309          MOVE.B  #14,D0          
00000271                           310          TRAP    #15
00000271                           311          BRA     complete\@      
00000271                           312  checkForW\@: 
00000271                           313          BTST    #12, D3      ; Check if contains 1
00000271                           314          BEQ     checkForL\@  ; If not, size cannot be word
00000271                           315          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
00000271                           316          MOVE.B  #14,D0          
00000271                           317          TRAP    #15
00000271                           318          BRA     complete\@  
00000271                           319  checkForL\@:
00000271                           320          MOVE.B  #$1, D7
00000271                           321          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
00000271                           322          MOVE.B  #14,D0          
00000271                           323          TRAP    #15
00000271                           324  complete\@:  ; Size has been printed
00000271                           325          ENDM
00000271                           326          
00000271                           327  ; ------------------------------------------------------------
00000271                           328  ; "printSizeLow" Helper
00000271                           329  ; Gary
00000271                           330  ;
00000271                           331  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           332  ;
00000271                           333  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000271                           334  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000271                           335  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000271                           336  ; Once matched, size is printed and appended to already printed opcode, macro exits.
00000271                           337  ; ------------------------------------------------------------
00000271                           338  printSizeLow:  MACRO
00000271                           339          MOVE.W  \1, D3      ; input value   
00000271                           340          CLR     D7   
00000271                           341  checkForB\@: 
00000271                           342          BTST    #6,  D3      ; Check if contains 0
00000271                           343          BNE     checkForW\@  ; If not go to word size
00000271                           344          BTST    #7, D3      ; Check if contains 0
00000271                           345          BNE     checkForL\@ ; If not go to longword size
00000271                           346          LEA     oBSize, A1     
00000271                           347          MOVE.B  #14,D0       ; Print and end macro  
00000271                           348          TRAP    #15
00000271                           349          BRA     complete\@      
00000271                           350  checkForW\@: 
00000271                           351          LEA     oWSize, A1     
00000271                           352          MOVE.B  #14,D0       ; Print and end macro       
00000271                           353          TRAP    #15
00000271                           354          BRA     complete\@  
00000271                           355  checkForL\@:
00000271                           356          MOVE.B  #$1, D7
00000271                           357          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
00000271                           358          MOVE.B  #14,D0       ; Print and end macro  
00000271                           359          TRAP    #15
00000271                           360  complete\@:  ; Size has been printed
00000271                           361          ENDM
00000271                           362  ; ------------------------------------------------------------
00000271                           363  ; "decodeSizeLow" Helper
00000271                           364  ; Gary
00000271                           365  ;
00000271                           366  ; 1st argument is the data register with opcode whose size is being decoded
00000271                           367  ;
00000271                           368  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
00000271                           369  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
00000271                           370  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
00000271                           371  ; Once matched, size is printed and appended to already printed opcode, macro exits.
00000271                           372  ; ------------------------------------------------------------
00000271                           373  decodeSizeLow:  MACRO
00000271                           374          MOVE.W  \1, D3      ; input value   
00000271                           375          CLR     D6   
00000271                           376  checkForBorW\@: 
00000271                           377          BTST    #7, D3      ; Check if contains 0
00000271                           378          BNE     checkForL\@ ; If not go to longword size         
00000271                           379          BRA     complete\@  
00000271                           380  checkForL\@:
00000271                           381          MOVE.B  #$1, D6
00000271                           382  complete\@:  ; Size has been checeked
00000271                           383          ENDM 
00000271                           384   ; ------------------------------------------------------------
00000271                           385  ; "decodeDisplacement" Helper
00000271                           386  ; Gary
00000271                           387  ; 
00000271                           388  ; Executes after prepare macro on D1 which contains only adressing mode
00000271                           389  ; bits. 
00000271                           390  ; ------------------------------------------------------------
00000271                           391  decodeDisplacement:  MACRO
00000271                           392          MOVE.W \1, D3
00000271                           393          CLR     D1
00000271                           394          MOVE.W  A2, D7
00000271                           395          CMP.B   $00, D3
00000271                           396          BEQ     Sbit\@
00000271                           397          CMP.B   $FF, D3
00000271                           398          BEQ     Tbit\@
00000271                           399  Ebit\@:   
00000271                           400          LSL     #08, D3
00000271                           401          LSR     #08, D3
00000271                           402          EXT.L   D3
00000271                           403          ADD.L   D3, D7
00000271                           404          ADD.L   #2, D7
00000271                           405          adrOutInput D7     
00000271                           406          BRA     decodeDisplacement\@
00000271                           407  Sbit\@:  
00000271                           408          MOVE.W  (A2)+, D3  ; Increment A2 (D4 isn't relevant)
00000271                           409          EXT.L    D3
00000271                           410          ADD.L   D3, D7
00000271                           411          ADD.L   #2, D7
00000271                           412          adrOutInput D7
00000271                           413          BRA     decodeDisplacement\@
00000271                           414  Tbit\@:  
00000271                           415          MOVE.W  (A2)+, D3  ; Increment A2 (D4 isn't relevant)
00000271                           416          EXT.L   D3
00000271                           417          SWAP    D3
00000271                           418          MOVE.W  (A2)+, D3   ; Increment A2 (D4 isn't relevant)
00000271                           419          ADD.L   D3, D7
00000271                           420          ADD.L   #2, D7
00000271                           421          adrOutInput D7
00000271                           422  decodeDisplacement\@:
00000271                           423          ENDM        
00000271                           424                 
00000271                           425  ; ------------------------------------------------------------
00000271                           426  ; "printOpMode" Helper
00000271                           427  ; Gary
00000271                           428  ;
00000271                           429  ; 1st argument holds opcode whose opmode is being decoded
00000271                           430  ;
00000271                           431  ; With the opcode in D3, D1 is designated as the bit tracker. Split
00000271                           432  ; into two sorting mechanisms: first, the macro determines whether
00000271                           433  ; the register is a source or a destination. Then, the macro determines
00000271                           434  ; the size and appends it to printed opcode in a similar manner to printSize.
00000271                           435  ; ------------------------------------------------------------
00000271                           436  printOpMode:  MACRO
00000271                           437          MOVE.W  \1, D3      
00000271                           438          MOVE.B  #8, D1    
00000271                           439          CLR     D6
00000271                           440          CLR     D7
00000271                           441  checkForDestDn\@: 
00000271                           442          BTST    D1, D3      
00000271                           443          BNE     checkForSrcDn\@
00000271                           444          JSR     next\@
00000271                           445          MOVE.B  #$1, D6
00000271                           446          BTST    D1, D3      
00000271                           447          BEQ     DestDnW\@
00000271                           448  DestDnL\@:        
00000271                           449          LEA     oLSize, A1     
00000271                           450          MOVE.B  #14,D0          
00000271                           451          TRAP    #15
00000271                           452          MOVE.B  #$1, D7
00000271                           453          BRA     complete\@ 
00000271                           454  DestDnW\@: 
00000271                           455          JSR     next\@
00000271                           456          BTST    D1, D3      
00000271                           457          BEQ     DestDnB\@
00000271                           458          LEA     oWSize, A1     
00000271                           459          MOVE.B  #14,D0          
00000271                           460          TRAP    #15
00000271                           461          BRA     complete\@ 
00000271                           462  DestDnB\@: 
00000271                           463          LEA     oBSize, A1     
00000271                           464          MOVE.B  #14,D0          
00000271                           465          TRAP    #15
00000271                           466          BRA     complete\@ 
00000271                           467  checkForSrcDn\@: 
00000271                           468          JSR     next\@
00000271                           469          BTST    D1, D3      
00000271                           470          BEQ     SrcDnW\@
00000271                           471  SrcDnL\@:        
00000271                           472          LEA     oLSize, A1     
00000271                           473          MOVE.B  #14,D0          
00000271                           474          TRAP    #15
00000271                           475          MOVE.B  #$1, D7
00000271                           476          printDnDest D3
00000271                           477          BRA     complete\@ 
00000271                           478  SrcDnW\@:
00000271                           479          JSR     next\@
00000271                           480          BTST    D1, D3     
00000271                           481          BEQ     SrcDnB\@
00000271                           482          LEA     oWSize, A1     
00000271                           483          MOVE.B  #14,D0          
00000271                           484          TRAP    #15
00000271                           485          printDnDest D3
00000271                           486          BRA     complete\@ 
00000271                           487  SrcDnB\@: 
00000271                           488          LEA     oBSize, A1     
00000271                           489          MOVE.B  #14,D0          
00000271                           490          TRAP    #15
00000271                           491          printDnDest D3
00000271                           492          BRA     complete\@ 
00000271                           493  
00000271                           494  next\@:
00000271                           495          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
00000271                           496          RTS                
00000271                           497  
00000271                           498  complete\@:  ; Opcode has been verified
00000271                           499          ENDM
00000271                           500  ; ------------------------------------------------------------
00000271                           501  ; "prepareAdrMode" Helper
00000271                           502  ; Gary
00000271                           503  ; 
00000271                           504  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
00000271                           505  ; ------------------------------------------------------------
00000271                           506  prepareAdrMode: MACRO
00000271                           507          MOVE.W  \1, D6      ; input value
00000271                           508          MOVE.W  \2, D1
00000271                           509          CMP.B   #$01, D6
00000271                           510          BEQ     AdrSource\@    
00000271                           511  AdrDest\@:
00000271                           512          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
00000271                           513          LSR     #$08, D1
00000271                           514          LSR     #$05, D1
00000271                           515          BRA     complete\@ 
00000271                           516  AdrSource\@:                
00000271                           517          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
00000271                           518          LSL     #$02, D1
00000271                           519          LSR     #$08, D1
00000271                           520          LSR     #$05, D1
00000271                           521  complete\@:  ; Opcode has been verified
00000271                           522          ENDM        
00000271                           523          
00000271                           524  ; ------------------------------------------------------------
00000271                           525  ; "decodeAdrMode" Helper
00000271                           526  ; Gary
00000271                           527  ; 
00000271                           528  ; Executes after prepare macro on D1 which contains only adressing mode
00000271                           529  ; bits. 
00000271                           530  ; ------------------------------------------------------------
00000271                           531  decodeAdrMode:  MACRO
00000271                           532          MOVE.W  \1, D3      ; holds full opcode
00000271                           533          MOVE.W  \2, D1      ; holds just opmode
00000271                           534  
00000271                           535          CMP.B   #$01, D1
00000271                           536          BEQ     AdrRegDirect\@    
00000271                           537          CMP.B   #$02, D1
00000271                           538          BEQ     AdrRegInDirect\@  
00000271                           539          CMP.B   #$03, D1
00000271                           540          BEQ     AdrRegPostInc\@  
00000271                           541          CMP.B   #$04, D1
00000271                           542          BEQ     AdrRegPreDec\@
00000271                           543          CMP.B   #$07, D1
00000271                           544          BEQ     AdrAbsolute\@    
00000271                           545          
00000271                           546  dataRegDirect\@: 
00000271                           547          CMP.B   #$01, D6
00000271                           548          BEQ     dataRegDirectSrc\@   
00000271                           549  dataRegDirectDest\@: 
00000271                           550          printDnDest D3 
00000271                           551          BRA     complete\@ 
00000271                           552  dataRegDirectSrc\@: 
00000271                           553          printDnSrc D3 
00000271                           554          BRA     complete\@   
00000271                           555          
00000271                           556  AdrRegDirect\@: 
00000271                           557          CMP.B   #$01, D6
00000271                           558          BEQ     AdrRegDirectSrc\@   
00000271                           559  AdrRegDirectDest\@:
00000271                           560          printAnDest D3
00000271                           561          BRA     complete\@   
00000271                           562  AdrRegDirectSrc\@:
00000271                           563          printAnSrc D3
00000271                           564          BRA     complete\@   
00000271                           565         
00000271                           566  AdrRegInDirect\@:   
00000271                           567          CMP.B   #$01, D6
00000271                           568          BEQ     AdrRegInDirectSrc\@   
00000271                           569  AdrRegInDirectDest\@:
00000271                           570          printLB
00000271                           571          printAnDest D3  
00000271                           572          printRB
00000271                           573          BRA     complete\@     
00000271                           574  AdrRegInDirectSrc\@:   
00000271                           575          printLB
00000271                           576          printAnSrc D3  
00000271                           577          printRB
00000271                           578          BRA     complete\@   
00000271                           579          
00000271                           580  AdrRegPostInc\@:   
00000271                           581          CMP.B   #$01, D6
00000271                           582          BEQ     AdrRegPostIncSrc\@   
00000271                           583  AdrRegPostIncDest\@: 
00000271                           584          printLB
00000271                           585          printAnDest D3  
00000271                           586          printRB
00000271                           587          printPI
00000271                           588          BRA     complete\@  
00000271                           589  AdrRegPostIncSrc\@:           
00000271                           590          printLB
00000271                           591          printAnSrc D3  
00000271                           592          printRB
00000271                           593          printPI
00000271                           594          BRA     complete\@  
00000271                           595  AdrRegPreDec\@: 
00000271                           596          CMP.B   #$01, D6
00000271                           597          BEQ     AdrRegPreDecSrc\@   
00000271                           598  AdrRegPreDecDest\@:
00000271                           599          printPD  
00000271                           600          printLB
00000271                           601          printAnDest D3  
00000271                           602          printRB
00000271                           603          BRA     complete\@   
00000271                           604  AdrRegPreDecSrc\@: 
00000271                           605          printPD  
00000271                           606          printLB
00000271                           607          printAnSrc D3  
00000271                           608          printRB
00000271                           609          BRA     complete\@
00000271                           610         
00000271                           611  AdrAbsolute\@:
00000271                           612          CMP.B   #$01, D6
00000271                           613          BNE     AdrAbsoluteDst\@ 
00000271                           614          
00000271                           615          MOVE.W  D3, D5
00000271                           616          BTST    #2, D3
00000271                           617          BNE     AdrImmediate\@
00000271                           618          BTST    #0, D3
00000271                           619          BNE     AdrAbsoluteL\@
00000271                           620          BRA     AdrAbsoluteW\@
00000271                           621  AdrAbsoluteDst\@:
00000271                           622          MOVE.W  D3, D5
00000271                           623          BTST    #$B, D3
00000271                           624          BNE     AdrImmediate\@
00000271                           625          BTST    #$09, D3
00000271                           626          BNE     AdrAbsoluteL\@
00000271                           627          BRA     AdrAbsoluteW\@
00000271                           628  AdrImmediate\@:
00000271                           629          CMP.B   #1, D7
00000271                           630          BEQ     AdrImmediateL\@
00000271                           631  AdrImmediateW\@:
00000271                           632          MOVE.W  (A2)+, D3
00000271                           633          printHash
00000271                           634          printSign
00000271                           635          adrOut
00000271                           636          MOVE.W  D5, D3
00000271                           637          BRA     complete\@
00000271                           638  AdrImmediateL\@:
00000271                           639          MOVE.W  (A2)+, D3
00000271                           640          printHash
00000271                           641          printSign
00000271                           642          adrOut 
00000271                           643          MOVE.W  (A2)+, D3
00000271                           644          adrOut
00000271                           645          MOVE.W  D5, D3
00000271                           646          BRA     complete\@ 
00000271                           647  AdrAbsoluteW\@:     
00000271                           648          MOVE.W  (A2)+, D3
00000271                           649          printSign
00000271                           650          adrOut
00000271                           651          MOVE.W  D5, D3
00000271                           652          BRA     complete\@  
00000271                           653  AdrAbsoluteL\@:  
00000271                           654          MOVE.W  (A2)+, D3
00000271                           655          printSign
00000271                           656          adrOut 
00000271                           657          MOVE.W  (A2)+, D3
00000271                           658          adrOut
00000271                           659          MOVE.W  D5, D3
00000271                           660  
00000271                           661  complete\@:  ; Opcode has been verified
00000271                           662          ENDM
00000271                           663  
00000271                           664  printCount:     MACRO
00000271                           665          MOVE.W  \1, D1      ; bits 9 to 11
00000271                           666          LSL     #$04, D1
00000271                           667          LSR     #$08, D1
00000271                           668          LSR     #$05, D1
00000271                           669          LEA     oHash, A1     
00000271                           670          MOVE.B  #14,D0          
00000271                           671          TRAP    #15
00000271                           672          MOVE.B  #3,D0          
00000271                           673          TRAP    #15
00000271                           674          ENDM
00000271                           675  
00000271                           676  printDnDest:    MACRO 
00000271                           677          MOVE.W  \1, D1      ; bits 9 to 11
00000271                           678          LSL     #$04, D1
00000271                           679          LSR     #$08, D1
00000271                           680          LSR     #$05, D1
00000271                           681          LEA     oDn, A1     
00000271                           682          MOVE.B  #14,D0          
00000271                           683          TRAP    #15
00000271                           684          MOVE.B  #3,D0          
00000271                           685          TRAP    #15
00000271                           686          ENDM
00000271                           687  printDnSrc:    MACRO   
00000271                           688          CLR.L   D1
00000271                           689          MOVE.W  \1, D1   ; bits 0 to 2
00000271                           690          LSL     #$08, D1
00000271                           691          LSL     #$05, D1
00000271                           692          LSR     #$08, D1
00000271                           693          LSR     #$05, D1
00000271                           694          LEA     oDn, A1     
00000271                           695          MOVE.B  #14,D0          
00000271                           696          TRAP    #15
00000271                           697          MOVE.B  #3,D0          
00000271                           698          TRAP    #15
00000271                           699          ENDM
00000271                           700  printAnDest:    MACRO
00000271                           701          MOVE.W  \1, D1
00000271                           702          LSL     #$04, D1
00000271                           703          LSR     #$08, D1
00000271                           704          LSR     #$05, D1
00000271                           705          LEA     oAn, A1     
00000271                           706          MOVE.B  #14,D0          
00000271                           707          TRAP    #15
00000271                           708          MOVE.B  #3,D0          
00000271                           709          TRAP    #15
00000271                           710          ENDM
00000271                           711  printAnSrc:    MACRO   
00000271                           712          MOVE.W  \1, D1   ; bits 0 to 2
00000271                           713          LSL     #$08, D1
00000271                           714          LSL     #$05, D1
00000271                           715          LSR     #$08, D1
00000271                           716          LSR     #$05, D1
00000271                           717          LEA     oAn, A1     
00000271                           718          MOVE.B  #14,D0          
00000271                           719          TRAP    #15
00000271                           720          MOVE.B  #3,D0          
00000271                           721          TRAP    #15
00000271                           722          ENDM
00000271                           723  printAdr:      MACRO
00000271                           724          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           725          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           726          LSR.W   #4, D1      
00000271                           727          ConvertHtoA D1      ; Convert D1 to a character
00000271                           728          MOVE.B  #6, D0      ; Read first digit
00000271                           729          TRAP    #15         ; Execute output
00000271                           730          
00000271                           731          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           732          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00000271                           733          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           734          LSR.W   #4, D1      
00000271                           735          ConvertHtoA D1      ; Convert D1 to a character
00000271                           736          MOVE.B  #6, D0      ; Read first digit
00000271                           737          TRAP    #15         ; Execute output
00000271                           738          
00000271                           739          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           740          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           741          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           742          LSR.W   #4, D1      
00000271                           743          ConvertHtoA D1      ; Convert D1 to a character
00000271                           744          MOVE.B  #6, D0      ; Read first digit
00000271                           745          TRAP    #15         ; Execute output
00000271                           746          
00000271                           747          MOVE.W  A2, D1    ; Move A2 into D1
00000271                           748          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00000271                           749          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00000271                           750          LSR.W   #8, D1      ; Get the first hex digit of D1
00000271                           751          LSR.W   #4, D1      
00000271                           752          ConvertHtoA D1      ; Convert D1 to a character
00000271                           753          MOVE.B  #6, D0      ; Read first digit
00000271                           754          TRAP    #15         ; Execute output       
00000271                           755          ENDM
00000271                           756  printComma:    MACRO
00000271                           757          LEA     oComma, A1     
00000271                           758          MOVE.B  #14,D0          
00000271                           759          TRAP    #15
00000271                           760          ENDM
00000271                           761  printPI:    MACRO
00000271                           762          LEA     oPstInc, A1     
00000271                           763          MOVE.B  #14,D0          
00000271                           764          TRAP    #15
00000271                           765          ENDM
00000271                           766  printPD:    MACRO
00000271                           767          LEA     oPreDec, A1     
00000271                           768          MOVE.B  #14,D0          
00000271                           769          TRAP    #15
00000271                           770          ENDM
00000271                           771  
00000271                           772  printLB:    MACRO
00000271                           773          LEA     oLB, A1     
00000271                           774          MOVE.B  #14,D0          
00000271                           775          TRAP    #15
00000271                           776          ENDM
00000271                           777  printRB:    MACRO
00000271                           778          LEA     oRB, A1     
00000271                           779          MOVE.B  #14,D0          
00000271                           780          TRAP    #15
00000271                           781          ENDM
00000271                           782  printSign:  MACRO
00000271                           783          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           784          MOVE.W  #36, D1     ; An = sign
00000271                           785          TRAP    #15         ; Output = sign
00000271                           786          ENDM
00000271                           787  printHash:  MACRO
00000271                           788          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00000271                           789          MOVE.W  #35, D1     ; An = sign
00000271                           790          TRAP    #15         ; Output = sign
00000271                           791          ENDM
00000271                           792          
00000271                           793  space:      MACRO
00000271                           794          LEA     oBlank, A1
00000271                           795          MOVE.B  #14,D0          
00000271                           796          TRAP    #15
00000271                           797          ENDM
00000271                           798  tab:       MACRO
00000271                           799          LEA     oTab, A1
00000271                           800          MOVE.B  #14,D0          
00000271                           801          TRAP    #15
00000271                           802          ENDM
00000271                           803          
00000271                           804  newLine:    MACRO
00000271                           805          LEA     oBlank, A1
00000271                           806          MOVE.B  #13,D0          
00000271                           807          TRAP    #15
00000271                           808          ENDM
00000271                           809  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00000271                           810  ; "main" routine
00000271                           811  ; Dylan, Gary
00000271                           812  ; 
00000271                           813  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
00000271                           814  ; ========================================================================
00001000                           815          ORG     $1000
00001000                           816          OPT     MEX
00001000                           817          
00001000  43F8 0000                818  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                819          MOVE.B  #13, D0
00001008  4E4F                     820          TRAP    #15
0000100A                           821m         readInput   D2      ; Read 4 digit hex input
0000100A                           822m         ; READ USER's input
0000100A  103C 0005                823m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     824m         TRAP    #15
00001010                           825mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                826mm         CMPI.B  #$39, D1
00001014  6E00 000A                827mm         BGT     ALPHA_2
00001018  0401 0030                828mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                829mm         BRA     DONE_2
00001020  0401 0037                830mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     831mm DONE_2: NOP
00001026                           832mm         ENDM
00001026  E149                     833m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     834m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     835m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           836m         
0000102C  323C 0000                837m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     838m         TRAP    #15         ; READ SECOND DIGIT
00001032                           839mm         CONVERTATOH D1
00001032  0C01 0039                840mm         CMPI.B  #$39, D1
00001036  6E00 000A                841mm         BGT     ALPHA_3
0000103A  0401 0030                842mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                843mm         BRA     DONE_3
00001042  0401 0037                844mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     845mm DONE_3: NOP
00001048                           846mm         ENDM
00001048  E149                     847m         LSL.W   #8, D1      
0000104A  D441                     848m         ADD.W   D1, D2
0000104C                           849m         
0000104C  323C 0000                850m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     851m         TRAP    #15         ; READ THIRD DIGIT
00001052                           852mm         CONVERTATOH D1
00001052  0C01 0039                853mm         CMPI.B  #$39, D1
00001056  6E00 000A                854mm         BGT     ALPHA_4
0000105A  0401 0030                855mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                856mm         BRA     DONE_4
00001062  0401 0037                857mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     858mm DONE_4: NOP
00001068                           859mm         ENDM
00001068  E949                     860m         LSL.W   #4, D1      
0000106A  D441                     861m         ADD.W   D1, D2
0000106C                           862m         
0000106C  323C 0000                863m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     864m         TRAP    #15         ; READ FINAL DIGIT
00001072                           865mm         CONVERTATOH D1     
00001072  0C01 0039                866mm         CMPI.B  #$39, D1
00001076  6E00 000A                867mm         BGT     ALPHA_5
0000107A  0401 0030                868mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                869mm         BRA     DONE_5
00001082  0401 0037                870mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     871mm DONE_5: NOP
00001088                           872mm         ENDM
00001088  D441                     873m         ADD.W   D1, D2
0000108A  3402                     874m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           875m         ENDM
0000108C  3442                     876          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           877m         newline
0000108E  43F8 00DD                878m         LEA     OBLANK, A1
00001092  103C 000D                879m         MOVE.B  #13,D0          
00001096  4E4F                     880m         TRAP    #15
00001098                           881m         ENDM
00001098                           882          
00001098  43F8 0031                883          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                884          MOVE.B  #13, D0
000010A0  4E4F                     885          TRAP    #15
000010A2                           886m         readInput   D2      ; Read 4 digit hex input
000010A2                           887m         ; READ USER's input
000010A2  103C 0005                888m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     889m         TRAP    #15
000010A8                           890mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                891mm         CMPI.B  #$39, D1
000010AC  6E00 000A                892mm         BGT     ALPHA_8
000010B0  0401 0030                893mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                894mm         BRA     DONE_8
000010B8  0401 0037                895mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     896mm DONE_8: NOP
000010BE                           897mm         ENDM
000010BE  E149                     898m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     899m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     900m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           901m         
000010C4  323C 0000                902m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     903m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           904mm         CONVERTATOH D1
000010CA  0C01 0039                905mm         CMPI.B  #$39, D1
000010CE  6E00 000A                906mm         BGT     ALPHA_9
000010D2  0401 0030                907mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                908mm         BRA     DONE_9
000010DA  0401 0037                909mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     910mm DONE_9: NOP
000010E0                           911mm         ENDM
000010E0  E149                     912m         LSL.W   #8, D1      
000010E2  D441                     913m         ADD.W   D1, D2
000010E4                           914m         
000010E4  323C 0000                915m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     916m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           917mm         CONVERTATOH D1
000010EA  0C01 0039                918mm         CMPI.B  #$39, D1
000010EE  6E00 000A                919mm         BGT     ALPHA_10
000010F2  0401 0030                920mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                921mm         BRA     DONE_10
000010FA  0401 0037                922mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     923mm DONE_10: NOP
00001100                           924mm         ENDM
00001100  E949                     925m         LSL.W   #4, D1      
00001102  D441                     926m         ADD.W   D1, D2
00001104                           927m         
00001104  323C 0000                928m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     929m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           930mm         CONVERTATOH D1     
0000110A  0C01 0039                931mm         CMPI.B  #$39, D1
0000110E  6E00 000A                932mm         BGT     ALPHA_11
00001112  0401 0030                933mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                934mm         BRA     DONE_11
0000111A  0401 0037                935mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     936mm DONE_11: NOP
00001120                           937mm         ENDM
00001120  D441                     938m         ADD.W   D1, D2
00001122  3402                     939m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           940m         ENDM
00001124  31C2 0990                941          MOVE.W  D2, ($990)  ; Store at mem location $990
00001128                           942m         newline
00001128  43F8 00DD                943m         LEA     OBLANK, A1
0000112C  103C 000D                944m         MOVE.B  #13,D0          
00001130  4E4F                     945m         TRAP    #15
00001132                           946m         ENDM
00001132                           947m         newline
00001132  43F8 00DD                948m         LEA     OBLANK, A1
00001136  103C 000D                949m         MOVE.B  #13,D0          
0000113A  4E4F                     950m         TRAP    #15
0000113C                           951m         ENDM
0000113C                           952          
0000113C  7200                     953  goLoop: MOVE.L  #0, D1
0000113E  3238 0990                954          MOVE.W  ($990), D1
00001142  240A                     955          MOVE.L  A2, D2
00001144  B282                     956          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 00B2                957          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A                           958m         printAdr
0000114A  320A                     959m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000114C  E049                     960m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000114E  E849                     961m         LSR.W   #4, D1      
00001150                           962mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001150  0C01 0009                963mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001154  6E00 000A                964mm         BGT     ALPHA_15
00001158  0601 0030                965mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000115C  6000 0006                966mm         BRA     DONE_15
00001160  0601 0037                967mm ALPHA_15: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001164  4E71                     968mm DONE_15: NOP
00001166                           969mm         ENDM
00001166  103C 0006                970m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000116A  4E4F                     971m         TRAP    #15         ; EXECUTE OUTPUT
0000116C                           972m         
0000116C  320A                     973m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000116E  E949                     974m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001170  E049                     975m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001172  E849                     976m         LSR.W   #4, D1      
00001174                           977mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001174  0C01 0009                978mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001178  6E00 000A                979mm         BGT     ALPHA_16
0000117C  0601 0030                980mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001180  6000 0006                981mm         BRA     DONE_16
00001184  0601 0037                982mm ALPHA_16: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001188  4E71                     983mm DONE_16: NOP
0000118A                           984mm         ENDM
0000118A  103C 0006                985m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000118E  4E4F                     986m         TRAP    #15         ; EXECUTE OUTPUT
00001190                           987m         
00001190  320A                     988m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
00001192  E149                     989m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001194  E049                     990m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001196  E849                     991m         LSR.W   #4, D1      
00001198                           992mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001198  0C01 0009                993mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000119C  6E00 000A                994mm         BGT     ALPHA_17
000011A0  0601 0030                995mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011A4  6000 0006                996mm         BRA     DONE_17
000011A8  0601 0037                997mm ALPHA_17: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011AC  4E71                     998mm DONE_17: NOP
000011AE                           999mm         ENDM
000011AE  103C 0006               1000m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011B2  4E4F                    1001m         TRAP    #15         ; EXECUTE OUTPUT
000011B4                          1002m         
000011B4  320A                    1003m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
000011B6  E149                    1004m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000011B8  E949                    1005m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000011BA  E049                    1006m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000011BC  E849                    1007m         LSR.W   #4, D1      
000011BE                          1008mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000011BE  0C01 0009               1009mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000011C2  6E00 000A               1010mm         BGT     ALPHA_18
000011C6  0601 0030               1011mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011CA  6000 0006               1012mm         BRA     DONE_18
000011CE  0601 0037               1013mm ALPHA_18: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011D2  4E71                    1014mm DONE_18: NOP
000011D4                          1015mm         ENDM
000011D4  103C 0006               1016m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011D8  4E4F                    1017m         TRAP    #15         ; EXECUTE OUTPUT       
000011DA                          1018m         ENDM
000011DA                          1019m         tab
000011DA  43F8 00DF               1020m         LEA     OTAB, A1
000011DE  103C 000E               1021m         MOVE.B  #14,D0          
000011E2  4E4F                    1022m         TRAP    #15
000011E4                          1023m         ENDM
000011E4  4EB9 000011FE           1024          JSR     identifyOpcode  ; Decode what is at A2
000011EA  381A                    1025          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
000011EC                          1026m         newline
000011EC  43F8 00DD               1027m         LEA     OBLANK, A1
000011F0  103C 000D               1028m         MOVE.B  #13,D0          
000011F4  4E4F                    1029m         TRAP    #15
000011F6                          1030m         ENDM
000011F6  6000 FF44               1031          BRA     goLoop
000011FA                          1032          
000011FA                          1033          
000011FA                          1034          
000011FA  FFFF FFFF               1035  endSim: SIMHALT             ; halt simulator
000011FE                          1036          
000011FE                          1037          
000011FE                          1038  ; ========================================================================
000011FE                          1039  ; "identifyOpcode" subroutine
000011FE                          1040  ; Jonathan
000011FE                          1041  ; 
000011FE                          1042  ; Reads the Word at A2 and determines which opcode it represents.
000011FE                          1043  ; When the opcode is identified, the appropriate "decodeX" subroutine
000011FE                          1044  ; is invoked.
000011FE                          1045  ;
000011FE                          1046  ; Uses a generated Trie structure to determine where to split on which bits
000011FE                          1047  ; in order to efficiently identify the exact opcode
000011FE                          1048  ; ========================================================================
000011FE                          1049  identifyOpcode:
000011FE  3612                    1050          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001200  0803 000F               1051          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001204  6700 0006               1052          BEQ     split0      ; Split based on the first bit
00001208  6000 008A               1053          BRA     split1
0000120C                          1054  
0000120C                          1055  split0: 
0000120C  0803 000E               1056          BTST    #$E, D3     ; Check the 2nd bit
00001210  6700 0006               1057          BEQ     split000    ; MOVE follows 00+        
00001214  6000 0016               1058          BRA     split01
00001218                          1059          
00001218                          1060  split000:        
00001218  0803 000D               1061          BTST    #$D, D3     ; Check the 3rd bit
0000121C  6600 0136               1062          BNE     decodeMOVE
00001220  0803 000C               1063          BTST    #$C, D3     ; Check the 3rd bit
00001224  6600 012E               1064          BNE     decodeMOVE
00001228  6000 618C               1065          BRA     decodeImmediate
0000122C                          1066  split01:
0000122C  0803 000D               1067          BTST    #$D, D3     ; Check the 3rd bit
00001230  6700 0006               1068          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001234  6000 0032               1069          BRA     split0110   ; Code is 011, but all subcodes are 0110        
00001238                          1070  
00001238                          1071  split0100:
00001238  0803 0008               1072          BTST    #$8, D3     ; Check the 8th bit for LEA
0000123C  6600 34DE               1073          BNE     decodeLEA   ; LEA follows 0100XXX1+
00001240  0803 000B               1074          BTST    #$B, D3     ; Check the 5th bit for NOT
00001244  6700 4870               1075          BEQ     decodeNOT   ; NOT follows 01000+
00001248  0803 0009               1076          BTST    #$9, D3     ; Check the 7th bit
0000124C  6700 0D66               1077          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
00001250  6000 0002               1078          BRA     split0100111
00001254                          1079  
00001254                          1080  split0100111:
00001254  0803 0007               1081          BTST    #$7, D3     ; Check the 9th bit for JSR
00001258  6600 58B0               1082          BNE     decodeJSR   ; JSR follows 010011101+
0000125C  0803 0002               1083          BTST    #$2, D3     ; Check the 14th bit
00001260  6700 00AA               1084          BEQ     decodeNOP   ; NOP follows 01001110011100+
00001264  6000 5EDE               1085          BRA     decodeRTS   ; RTS follows 01001110011101+
00001268                          1086  
00001268                          1087  split0110:
00001268  0803 000B               1088          BTST    #$B, D3     ; Check the 5th bit
0000126C  6700 0006               1089          BEQ     split01100
00001270  6000 0016               1090          BRA     split01101
00001274                          1091  
00001274                          1092  split01100:
00001274  0803 000A               1093          BTST    #$A, D3     ; Check the 6th bit
00001278  6700 5F12               1094          BEQ     decodeBRA   ; BRA starts with 011000
0000127C  0803 000C               1095          BTST    #$C, D3     ; Check the 6th bit
00001280  6600 64F8               1096          BNE     outputData  ; MOVEQ
00001284  6000 5206               1097          BRA     decodeBEQ   ; BEQ starts with 011001
00001288                          1098          
00001288                          1099  split01101:
00001288  0803 0008               1100          BTST    #$8, D3     ; Check the 8th bit
0000128C  6700 5428               1101          BEQ     decodeBGE   ; BGE starts with 01101100
00001290  6000 564E               1102          BRA     decodeBLT   ; BLT starts with 01101101
00001294                          1103          
00001294                          1104  split1: 
00001294  0803 000E               1105          BTST    #$E, D3     ; Check the 2nd bit
00001298  6700 0006               1106          BEQ     split10
0000129C  6000 000E               1107          BRA     split11
000012A0                          1108  
000012A0                          1109  split10:
000012A0  0803 000C               1110          BTST    #$C, D3     ; Check the 4th bit
000012A4  6700 2E22               1111          BEQ     decodeDIVU  ; DIVU follows 1000+
000012A8  6000 1A8E               1112          BRA     decodeSUB   ; SUB follows 1001+
000012AC                          1113  
000012AC                          1114  split11:
000012AC  0803 000D               1115          BTST    #$D, D3     ; Check the 3rd bit
000012B0  6700 0006               1116          BEQ     split110
000012B4  6000 0026               1117          BRA     split111
000012B8                          1118  
000012B8                          1119  split110:
000012B8  0803 000C               1120          BTST    #$C, D3     ; Check the 4th bit for ADD
000012BC  6600 0D3E               1121          BNE     decodeADD   ; ADD follows 1101+
000012C0  0803 0008               1122          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
000012C4  6700 3AB4               1123          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
000012C8  0803 0007               1124          BTST    #$7, D3
000012CC  6700 3AAC               1125          BEQ     decodeAND
000012D0  0803 0006               1126          BTST    #$6, D3
000012D4  6700 3AA4               1127          BEQ     decodeAND
000012D8  6000 279A               1128          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
000012DC                          1129  
000012DC                          1130  split111: 
000012DC  0803 0003               1131          BTST    #$3, D3     ; Check 13th bit
000012E0  6700 001A               1132          BEQ     ariShift    ; ASL_ASR Memory Shift follows 1110000x11+
000012E4                          1133     
000012E4  0803 0005               1134          BTST    #$5, D3     
000012E8  6600 0006               1135          BNE     logReg     
000012EC  6000 4E36               1136          BRA     decodeLSx_M
000012F0  0803 000C               1137  logReg: BTST    #12, D3         
000012F4  6700 4F08               1138          BEQ     decodeLSx_R
000012F8  6000 6480               1139          BRA     outputData
000012FC                          1140  
000012FC                          1141  ariShift:                   ; Special split specifically for Arithmetic Shift
000012FC  0803 0005               1142          BTST    #$5, D3     
00001300  6600 0006               1143          BNE     ariReg
00001304  6000 4FD2               1144          BRA     decodeASx_M    
00001308  6000 50A8               1145  ariReg: BRA     decodeASx_R
0000130C                          1146              
0000130C                          1147  
0000130C                          1148  ; ========================================================================
0000130C                          1149  ; "decodeX" subroutines
0000130C                          1150  ; Gary
0000130C                          1151  ; 
0000130C                          1152  ; Set of subroutines which are invoked by identifyOpcode.
0000130C                          1153  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
0000130C                          1154  ; the instruction.
0000130C                          1155  ;
0000130C                          1156  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
0000130C                          1157  ; opcode) to record the parameters (such as destination register). If the
0000130C                          1158  ; opcode indicates that the next word represents a destination address, then
0000130C                          1159  ; decodeLEA will advance A2 to the next word and decode that.
0000130C                          1160  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
0000130C                          1161  ; ========================================================================
0000130C                          1162  
0000130C                          1163  ; ------------------------------------------------------------
0000130C                          1164  ; 1. "decodeNOP" subroutine
0000130C                          1165  ; Gary
0000130C                          1166  ;
0000130C                          1167  ; Decodes NOP opcode by verifying then printing
0000130C                          1168  ; ------------------------------------------------------------
0000130C                          1169  decodeNOP:
0000130C                          1170m         verifyOpcode    pNOP, (A2)
0000130C  43F8 00FB               1171m         LEA     PNOP, A1      ; INPUT PATTERN STRING
00001310  3612                    1172m         MOVE.W  (A2), D3      ; INPUT VALUE
00001312  123C 000F               1173m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001316                          1174m         
00001316                          1175m LOOP_21: 
00001316  0C11 0030               1176m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000131A  6700 000E               1177m         BEQ     CHECKFOR0_21
0000131E  0C11 0031               1178m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001322  6700 0010               1179m         BEQ     CHECKFOR1_21
00001326  6000 0012               1180m         BRA     NEXT_21      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000132A                          1181m         
0000132A                          1182m CHECKFOR0_21: 
0000132A  0303                    1183m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000132C  6600 644C               1184m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001330  6000 0008               1185m         BRA     NEXT_21
00001334                          1186m 
00001334                          1187m CHECKFOR1_21:
00001334  0303                    1188m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001336  6700 6442               1189m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000133A                          1190m 
0000133A                          1191m NEXT_21: 
0000133A  B23C 0000               1192m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000133E  6700 0008               1193m         BEQ     COMPLETE_21  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001342  5301                    1194m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001344  1819                    1195m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001346  60CE                    1196m         BRA     LOOP_21      ; BEGIN LOOP AGAIN
00001348                          1197m 
00001348                          1198m COMPLETE_21:  ; OPCODE HAS BEEN VERIFIED
00001348                          1199m         ENDM
00001348  43F8 0060               1200          LEA     oNOP, A1     ; Loads byteVAR
0000134C  103C 000E               1201          MOVE.B  #14,D0          
00001350  4E4F                    1202          TRAP    #15
00001352  4E75                    1203          RTS                 ; Return from decodeNOP subroutine
00001354                          1204  
00001354                          1205  
00001354                          1206  ; ------------------------------------------------------------
00001354                          1207  ; 2. "decodeMOVE" subroutine
00001354                          1208  ; Gary
00001354                          1209  ;
00001354                          1210  ; Decodes MOVE opcode by verifying, checking size and adressing mode
00001354                          1211  ; then printing both.
00001354                          1212  ; ------------------------------------------------------------
00001354                          1213  decodeMOVE:
00001354                          1214m         verifyOpcode    pMOVE, (A2)
00001354  43F8 010C               1215m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
00001358  3612                    1216m         MOVE.W  (A2), D3      ; INPUT VALUE
0000135A  123C 000F               1217m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000135E                          1218m         
0000135E                          1219m LOOP_22: 
0000135E  0C11 0030               1220m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001362  6700 000E               1221m         BEQ     CHECKFOR0_22
00001366  0C11 0031               1222m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000136A  6700 0010               1223m         BEQ     CHECKFOR1_22
0000136E  6000 0012               1224m         BRA     NEXT_22      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001372                          1225m         
00001372                          1226m CHECKFOR0_22: 
00001372  0303                    1227m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001374  6600 6404               1228m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001378  6000 0008               1229m         BRA     NEXT_22
0000137C                          1230m 
0000137C                          1231m CHECKFOR1_22:
0000137C  0303                    1232m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000137E  6700 63FA               1233m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001382                          1234m 
00001382                          1235m NEXT_22: 
00001382  B23C 0000               1236m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001386  6700 0008               1237m         BEQ     COMPLETE_22  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000138A  5301                    1238m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000138C  1819                    1239m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000138E  60CE                    1240m         BRA     LOOP_22      ; BEGIN LOOP AGAIN
00001390                          1241m 
00001390                          1242m COMPLETE_22:  ; OPCODE HAS BEEN VERIFIED
00001390                          1243m         ENDM
00001390  43F8 0064               1244          LEA     oMOVE, A1     
00001394  103C 000E               1245          MOVE.B  #14,D0          
00001398  4E4F                    1246          TRAP    #15
0000139A                          1247m         printSize       (A2)
0000139A  3612                    1248m         MOVE.W  (A2), D3      ; INPUT VALUE
0000139C  4247                    1249m         CLR     D7      
0000139E                          1250m CHECKFORB_23: 
0000139E  0803 000D               1251m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000013A2  6600 0010               1252m         BNE     CHECKFORW_23  ; IF NOT GO TO WORD SIZE
000013A6  43F8 00C0               1253m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000013AA  103C 000E               1254m         MOVE.B  #14,D0          
000013AE  4E4F                    1255m         TRAP    #15
000013B0  6000 0026               1256m         BRA     COMPLETE_23      
000013B4                          1257m CHECKFORW_23: 
000013B4  0803 000C               1258m         BTST    #12, D3      ; CHECK IF CONTAINS 1
000013B8  6700 0010               1259m         BEQ     CHECKFORL_23  ; IF NOT, SIZE CANNOT BE WORD
000013BC  43F8 00C4               1260m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
000013C0  103C 000E               1261m         MOVE.B  #14,D0          
000013C4  4E4F                    1262m         TRAP    #15
000013C6  6000 0010               1263m         BRA     COMPLETE_23  
000013CA                          1264m CHECKFORL_23:
000013CA  1E3C 0001               1265m         MOVE.B  #$1, D7
000013CE  43F8 00C8               1266m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000013D2  103C 000E               1267m         MOVE.B  #14,D0          
000013D6  4E4F                    1268m         TRAP    #15
000013D8                          1269m COMPLETE_23:  ; SIZE HAS BEEN PRINTED
000013D8                          1270m         ENDM
000013D8                          1271m         prepareAdrMode  #$1, (A2)
000013D8  3C3C 0001               1272m         MOVE.W  #$1, D6      ; INPUT VALUE
000013DC  3212                    1273m         MOVE.W  (A2), D1
000013DE  BC3C 0001               1274m         CMP.B   #$01, D6
000013E2  6700 000C               1275m         BEQ     ADRSOURCE_24    
000013E6                          1276m ADRDEST_24:
000013E6  EF49                    1277m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000013E8  E049                    1278m         LSR     #$08, D1
000013EA  EA49                    1279m         LSR     #$05, D1
000013EC  6000 000A               1280m         BRA     COMPLETE_24 
000013F0                          1281m ADRSOURCE_24:                
000013F0  E149                    1282m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000013F2  E549                    1283m         LSL     #$02, D1
000013F4  E049                    1284m         LSR     #$08, D1
000013F6  EA49                    1285m         LSR     #$05, D1
000013F8                          1286m COMPLETE_24:  ; OPCODE HAS BEEN VERIFIED
000013F8                          1287m         ENDM        
000013F8                          1288m         decodeAdrMode   (A2), D1
000013F8  3612                    1289m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000013FA  3201                    1290m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000013FC                          1291m 
000013FC  B23C 0001               1292m         CMP.B   #$01, D1
00001400  6700 0066               1293m         BEQ     ADRREGDIRECT_25    
00001404  B23C 0002               1294m         CMP.B   #$02, D1
00001408  6700 00A0               1295m         BEQ     ADRREGINDIRECT_25  
0000140C  B23C 0003               1296m         CMP.B   #$03, D1
00001410  6700 0102               1297m         BEQ     ADRREGPOSTINC_25  
00001414  B23C 0004               1298m         CMP.B   #$04, D1
00001418  6700 0178               1299m         BEQ     ADRREGPREDEC_25
0000141C  B23C 0007               1300m         CMP.B   #$07, D1
00001420  6700 01EE               1301m         BEQ     ADRABSOLUTE_25    
00001424                          1302m         
00001424                          1303m DATAREGDIRECT_25: 
00001424  BC3C 0001               1304m         CMP.B   #$01, D6
00001428  6700 001E               1305m         BEQ     DATAREGDIRECTSRC_25   
0000142C                          1306m DATAREGDIRECTDEST_25: 
0000142C                          1307mm         PRINTDNDEST D3 
0000142C  3203                    1308mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000142E  E949                    1309mm         LSL     #$04, D1
00001430  E049                    1310mm         LSR     #$08, D1
00001432  EA49                    1311mm         LSR     #$05, D1
00001434  43F8 00CC               1312mm         LEA     ODN, A1     
00001438  103C 000E               1313mm         MOVE.B  #14,D0          
0000143C  4E4F                    1314mm         TRAP    #15
0000143E  103C 0003               1315mm         MOVE.B  #3,D0          
00001442  4E4F                    1316mm         TRAP    #15
00001444                          1317mm         ENDM
00001444  6000 057A               1318m         BRA     COMPLETE_25 
00001448                          1319m DATAREGDIRECTSRC_25: 
00001448                          1320mm         PRINTDNSRC D3 
00001448  4281                    1321mm         CLR.L   D1
0000144A  3203                    1322mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144C  E149                    1323mm         LSL     #$08, D1
0000144E  EB49                    1324mm         LSL     #$05, D1
00001450  E049                    1325mm         LSR     #$08, D1
00001452  EA49                    1326mm         LSR     #$05, D1
00001454  43F8 00CC               1327mm         LEA     ODN, A1     
00001458  103C 000E               1328mm         MOVE.B  #14,D0          
0000145C  4E4F                    1329mm         TRAP    #15
0000145E  103C 0003               1330mm         MOVE.B  #3,D0          
00001462  4E4F                    1331mm         TRAP    #15
00001464                          1332mm         ENDM
00001464  6000 055A               1333m         BRA     COMPLETE_25   
00001468                          1334m         
00001468                          1335m ADRREGDIRECT_25: 
00001468  BC3C 0001               1336m         CMP.B   #$01, D6
0000146C  6700 001E               1337m         BEQ     ADRREGDIRECTSRC_25   
00001470                          1338m ADRREGDIRECTDEST_25:
00001470                          1339mm         PRINTANDEST D3
00001470  3203                    1340mm         MOVE.W  D3, D1
00001472  E949                    1341mm         LSL     #$04, D1
00001474  E049                    1342mm         LSR     #$08, D1
00001476  EA49                    1343mm         LSR     #$05, D1
00001478  43F8 00CE               1344mm         LEA     OAN, A1     
0000147C  103C 000E               1345mm         MOVE.B  #14,D0          
00001480  4E4F                    1346mm         TRAP    #15
00001482  103C 0003               1347mm         MOVE.B  #3,D0          
00001486  4E4F                    1348mm         TRAP    #15
00001488                          1349mm         ENDM
00001488  6000 0536               1350m         BRA     COMPLETE_25   
0000148C                          1351m ADRREGDIRECTSRC_25:
0000148C                          1352mm         PRINTANSRC D3
0000148C  3203                    1353mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000148E  E149                    1354mm         LSL     #$08, D1
00001490  EB49                    1355mm         LSL     #$05, D1
00001492  E049                    1356mm         LSR     #$08, D1
00001494  EA49                    1357mm         LSR     #$05, D1
00001496  43F8 00CE               1358mm         LEA     OAN, A1     
0000149A  103C 000E               1359mm         MOVE.B  #14,D0          
0000149E  4E4F                    1360mm         TRAP    #15
000014A0  103C 0003               1361mm         MOVE.B  #3,D0          
000014A4  4E4F                    1362mm         TRAP    #15
000014A6                          1363mm         ENDM
000014A6  6000 0518               1364m         BRA     COMPLETE_25   
000014AA                          1365m        
000014AA                          1366m ADRREGINDIRECT_25:   
000014AA  BC3C 0001               1367m         CMP.B   #$01, D6
000014AE  6700 0032               1368m         BEQ     ADRREGINDIRECTSRC_25   
000014B2                          1369m ADRREGINDIRECTDEST_25:
000014B2                          1370mm         PRINTLB
000014B2  43F8 00D0               1371mm         LEA     OLB, A1     
000014B6  103C 000E               1372mm         MOVE.B  #14,D0          
000014BA  4E4F                    1373mm         TRAP    #15
000014BC                          1374mm         ENDM
000014BC                          1375mm         PRINTANDEST D3  
000014BC  3203                    1376mm         MOVE.W  D3, D1
000014BE  E949                    1377mm         LSL     #$04, D1
000014C0  E049                    1378mm         LSR     #$08, D1
000014C2  EA49                    1379mm         LSR     #$05, D1
000014C4  43F8 00CE               1380mm         LEA     OAN, A1     
000014C8  103C 000E               1381mm         MOVE.B  #14,D0          
000014CC  4E4F                    1382mm         TRAP    #15
000014CE  103C 0003               1383mm         MOVE.B  #3,D0          
000014D2  4E4F                    1384mm         TRAP    #15
000014D4                          1385mm         ENDM
000014D4                          1386mm         PRINTRB
000014D4  43F8 00D2               1387mm         LEA     ORB, A1     
000014D8  103C 000E               1388mm         MOVE.B  #14,D0          
000014DC  4E4F                    1389mm         TRAP    #15
000014DE                          1390mm         ENDM
000014DE  6000 04E0               1391m         BRA     COMPLETE_25     
000014E2                          1392m ADRREGINDIRECTSRC_25:   
000014E2                          1393mm         PRINTLB
000014E2  43F8 00D0               1394mm         LEA     OLB, A1     
000014E6  103C 000E               1395mm         MOVE.B  #14,D0          
000014EA  4E4F                    1396mm         TRAP    #15
000014EC                          1397mm         ENDM
000014EC                          1398mm         PRINTANSRC D3  
000014EC  3203                    1399mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014EE  E149                    1400mm         LSL     #$08, D1
000014F0  EB49                    1401mm         LSL     #$05, D1
000014F2  E049                    1402mm         LSR     #$08, D1
000014F4  EA49                    1403mm         LSR     #$05, D1
000014F6  43F8 00CE               1404mm         LEA     OAN, A1     
000014FA  103C 000E               1405mm         MOVE.B  #14,D0          
000014FE  4E4F                    1406mm         TRAP    #15
00001500  103C 0003               1407mm         MOVE.B  #3,D0          
00001504  4E4F                    1408mm         TRAP    #15
00001506                          1409mm         ENDM
00001506                          1410mm         PRINTRB
00001506  43F8 00D2               1411mm         LEA     ORB, A1     
0000150A  103C 000E               1412mm         MOVE.B  #14,D0          
0000150E  4E4F                    1413mm         TRAP    #15
00001510                          1414mm         ENDM
00001510  6000 04AE               1415m         BRA     COMPLETE_25   
00001514                          1416m         
00001514                          1417m ADRREGPOSTINC_25:   
00001514  BC3C 0001               1418m         CMP.B   #$01, D6
00001518  6700 003C               1419m         BEQ     ADRREGPOSTINCSRC_25   
0000151C                          1420m ADRREGPOSTINCDEST_25: 
0000151C                          1421mm         PRINTLB
0000151C  43F8 00D0               1422mm         LEA     OLB, A1     
00001520  103C 000E               1423mm         MOVE.B  #14,D0          
00001524  4E4F                    1424mm         TRAP    #15
00001526                          1425mm         ENDM
00001526                          1426mm         PRINTANDEST D3  
00001526  3203                    1427mm         MOVE.W  D3, D1
00001528  E949                    1428mm         LSL     #$04, D1
0000152A  E049                    1429mm         LSR     #$08, D1
0000152C  EA49                    1430mm         LSR     #$05, D1
0000152E  43F8 00CE               1431mm         LEA     OAN, A1     
00001532  103C 000E               1432mm         MOVE.B  #14,D0          
00001536  4E4F                    1433mm         TRAP    #15
00001538  103C 0003               1434mm         MOVE.B  #3,D0          
0000153C  4E4F                    1435mm         TRAP    #15
0000153E                          1436mm         ENDM
0000153E                          1437mm         PRINTRB
0000153E  43F8 00D2               1438mm         LEA     ORB, A1     
00001542  103C 000E               1439mm         MOVE.B  #14,D0          
00001546  4E4F                    1440mm         TRAP    #15
00001548                          1441mm         ENDM
00001548                          1442mm         PRINTPI
00001548  43F8 00D9               1443mm         LEA     OPSTINC, A1     
0000154C  103C 000E               1444mm         MOVE.B  #14,D0          
00001550  4E4F                    1445mm         TRAP    #15
00001552                          1446mm         ENDM
00001552  6000 046C               1447m         BRA     COMPLETE_25  
00001556                          1448m ADRREGPOSTINCSRC_25:           
00001556                          1449mm         PRINTLB
00001556  43F8 00D0               1450mm         LEA     OLB, A1     
0000155A  103C 000E               1451mm         MOVE.B  #14,D0          
0000155E  4E4F                    1452mm         TRAP    #15
00001560                          1453mm         ENDM
00001560                          1454mm         PRINTANSRC D3  
00001560  3203                    1455mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001562  E149                    1456mm         LSL     #$08, D1
00001564  EB49                    1457mm         LSL     #$05, D1
00001566  E049                    1458mm         LSR     #$08, D1
00001568  EA49                    1459mm         LSR     #$05, D1
0000156A  43F8 00CE               1460mm         LEA     OAN, A1     
0000156E  103C 000E               1461mm         MOVE.B  #14,D0          
00001572  4E4F                    1462mm         TRAP    #15
00001574  103C 0003               1463mm         MOVE.B  #3,D0          
00001578  4E4F                    1464mm         TRAP    #15
0000157A                          1465mm         ENDM
0000157A                          1466mm         PRINTRB
0000157A  43F8 00D2               1467mm         LEA     ORB, A1     
0000157E  103C 000E               1468mm         MOVE.B  #14,D0          
00001582  4E4F                    1469mm         TRAP    #15
00001584                          1470mm         ENDM
00001584                          1471mm         PRINTPI
00001584  43F8 00D9               1472mm         LEA     OPSTINC, A1     
00001588  103C 000E               1473mm         MOVE.B  #14,D0          
0000158C  4E4F                    1474mm         TRAP    #15
0000158E                          1475mm         ENDM
0000158E  6000 0430               1476m         BRA     COMPLETE_25  
00001592                          1477m ADRREGPREDEC_25: 
00001592  BC3C 0001               1478m         CMP.B   #$01, D6
00001596  6700 003C               1479m         BEQ     ADRREGPREDECSRC_25   
0000159A                          1480m ADRREGPREDECDEST_25:
0000159A                          1481mm         PRINTPD  
0000159A  43F8 00D7               1482mm         LEA     OPREDEC, A1     
0000159E  103C 000E               1483mm         MOVE.B  #14,D0          
000015A2  4E4F                    1484mm         TRAP    #15
000015A4                          1485mm         ENDM
000015A4                          1486mm         PRINTLB
000015A4  43F8 00D0               1487mm         LEA     OLB, A1     
000015A8  103C 000E               1488mm         MOVE.B  #14,D0          
000015AC  4E4F                    1489mm         TRAP    #15
000015AE                          1490mm         ENDM
000015AE                          1491mm         PRINTANDEST D3  
000015AE  3203                    1492mm         MOVE.W  D3, D1
000015B0  E949                    1493mm         LSL     #$04, D1
000015B2  E049                    1494mm         LSR     #$08, D1
000015B4  EA49                    1495mm         LSR     #$05, D1
000015B6  43F8 00CE               1496mm         LEA     OAN, A1     
000015BA  103C 000E               1497mm         MOVE.B  #14,D0          
000015BE  4E4F                    1498mm         TRAP    #15
000015C0  103C 0003               1499mm         MOVE.B  #3,D0          
000015C4  4E4F                    1500mm         TRAP    #15
000015C6                          1501mm         ENDM
000015C6                          1502mm         PRINTRB
000015C6  43F8 00D2               1503mm         LEA     ORB, A1     
000015CA  103C 000E               1504mm         MOVE.B  #14,D0          
000015CE  4E4F                    1505mm         TRAP    #15
000015D0                          1506mm         ENDM
000015D0  6000 03EE               1507m         BRA     COMPLETE_25   
000015D4                          1508m ADRREGPREDECSRC_25: 
000015D4                          1509mm         PRINTPD  
000015D4  43F8 00D7               1510mm         LEA     OPREDEC, A1     
000015D8  103C 000E               1511mm         MOVE.B  #14,D0          
000015DC  4E4F                    1512mm         TRAP    #15
000015DE                          1513mm         ENDM
000015DE                          1514mm         PRINTLB
000015DE  43F8 00D0               1515mm         LEA     OLB, A1     
000015E2  103C 000E               1516mm         MOVE.B  #14,D0          
000015E6  4E4F                    1517mm         TRAP    #15
000015E8                          1518mm         ENDM
000015E8                          1519mm         PRINTANSRC D3  
000015E8  3203                    1520mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000015EA  E149                    1521mm         LSL     #$08, D1
000015EC  EB49                    1522mm         LSL     #$05, D1
000015EE  E049                    1523mm         LSR     #$08, D1
000015F0  EA49                    1524mm         LSR     #$05, D1
000015F2  43F8 00CE               1525mm         LEA     OAN, A1     
000015F6  103C 000E               1526mm         MOVE.B  #14,D0          
000015FA  4E4F                    1527mm         TRAP    #15
000015FC  103C 0003               1528mm         MOVE.B  #3,D0          
00001600  4E4F                    1529mm         TRAP    #15
00001602                          1530mm         ENDM
00001602                          1531mm         PRINTRB
00001602  43F8 00D2               1532mm         LEA     ORB, A1     
00001606  103C 000E               1533mm         MOVE.B  #14,D0          
0000160A  4E4F                    1534mm         TRAP    #15
0000160C                          1535mm         ENDM
0000160C  6000 03B2               1536m         BRA     COMPLETE_25
00001610                          1537m        
00001610                          1538m ADRABSOLUTE_25:
00001610  BC3C 0001               1539m         CMP.B   #$01, D6
00001614  6600 0018               1540m         BNE     ADRABSOLUTEDST_25 
00001618                          1541m         
00001618  3A03                    1542m         MOVE.W  D3, D5
0000161A  0803 0002               1543m         BTST    #2, D3
0000161E  6600 0024               1544m         BNE     ADRIMMEDIATE_25
00001622  0803 0000               1545m         BTST    #0, D3
00001626  6600 0280               1546m         BNE     ADRABSOLUTEL_25
0000162A  6000 01E6               1547m         BRA     ADRABSOLUTEW_25
0000162E                          1548m ADRABSOLUTEDST_25:
0000162E  3A03                    1549m         MOVE.W  D3, D5
00001630  0803 000B               1550m         BTST    #$B, D3
00001634  6600 000E               1551m         BNE     ADRIMMEDIATE_25
00001638  0803 0009               1552m         BTST    #$09, D3
0000163C  6600 026A               1553m         BNE     ADRABSOLUTEL_25
00001640  6000 01D0               1554m         BRA     ADRABSOLUTEW_25
00001644                          1555m ADRIMMEDIATE_25:
00001644  BE3C 0001               1556m         CMP.B   #1, D7
00001648  6700 00A2               1557m         BEQ     ADRIMMEDIATEL_25
0000164C                          1558m ADRIMMEDIATEW_25:
0000164C  361A                    1559m         MOVE.W  (A2)+, D3
0000164E                          1560mm         PRINTHASH
0000164E  103C 0006               1561mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001652  323C 0023               1562mm         MOVE.W  #35, D1     ; AN = SIGN
00001656  4E4F                    1563mm         TRAP    #15         ; OUTPUT = SIGN
00001658                          1564mm         ENDM
00001658                          1565mm         PRINTSIGN
00001658  103C 0006               1566mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000165C  323C 0024               1567mm         MOVE.W  #36, D1     ; AN = SIGN
00001660  4E4F                    1568mm         TRAP    #15         ; OUTPUT = SIGN
00001662                          1569mm         ENDM
00001662                          1570mm         ADROUT
00001662  103C 0006               1571mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001666  3212                    1572mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001668  E049                    1573mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000166A  E849                    1574mm         LSR.W   #4, D1      
0000166C                          1575mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000166C  0C01 0009               1576mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001670  6E00 000A               1577mmm         BGT     ALPHA_55
00001674  0601 0030               1578mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001678  6000 0006               1579mmm         BRA     DONE_55
0000167C  0601 0037               1580mmm ALPHA_55: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001680  4E71                    1581mmm DONE_55: NOP
00001682                          1582mmm         ENDM
00001682  4E4F                    1583mm         TRAP    #15         ; EXECUTE OUTPUT
00001684                          1584mm         
00001684  3212                    1585mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001686  E949                    1586mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001688  E049                    1587mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000168A  E849                    1588mm         LSR.W   #4, D1      
0000168C                          1589mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000168C  0C01 0009               1590mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001690  6E00 000A               1591mmm         BGT     ALPHA_56
00001694  0601 0030               1592mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001698  6000 0006               1593mmm         BRA     DONE_56
0000169C  0601 0037               1594mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016A0  4E71                    1595mmm DONE_56: NOP
000016A2                          1596mmm         ENDM
000016A2  4E4F                    1597mm         TRAP    #15         ; EXECUTE OUTPUT
000016A4                          1598mm         
000016A4  3212                    1599mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016A6  E149                    1600mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016A8  E049                    1601mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016AA  E849                    1602mm         LSR.W   #4, D1      
000016AC                          1603mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016AC  0C01 0009               1604mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016B0  6E00 000A               1605mmm         BGT     ALPHA_57
000016B4  0601 0030               1606mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016B8  6000 0006               1607mmm         BRA     DONE_57
000016BC  0601 0037               1608mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016C0  4E71                    1609mmm DONE_57: NOP
000016C2                          1610mmm         ENDM
000016C2  4E4F                    1611mm         TRAP    #15         ; EXECUTE OUTPUT
000016C4                          1612mm         
000016C4  3212                    1613mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016C6  E149                    1614mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016C8  E949                    1615mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016CA  E049                    1616mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016CC  E849                    1617mm         LSR.W   #4, D1      
000016CE                          1618mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016CE  0C01 0009               1619mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016D2  6E00 000A               1620mmm         BGT     ALPHA_58
000016D6  0601 0030               1621mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016DA  6000 0006               1622mmm         BRA     DONE_58
000016DE  0601 0037               1623mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016E2  4E71                    1624mmm DONE_58: NOP
000016E4                          1625mmm         ENDM
000016E4  4E4F                    1626mm         TRAP    #15         ; EXECUTE OUTPUT       
000016E6                          1627mm         ENDM 
000016E6  3605                    1628m         MOVE.W  D5, D3
000016E8  6000 02D6               1629m         BRA     COMPLETE_25
000016EC                          1630m ADRIMMEDIATEL_25:
000016EC  361A                    1631m         MOVE.W  (A2)+, D3
000016EE                          1632mm         PRINTHASH
000016EE  103C 0006               1633mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016F2  323C 0023               1634mm         MOVE.W  #35, D1     ; AN = SIGN
000016F6  4E4F                    1635mm         TRAP    #15         ; OUTPUT = SIGN
000016F8                          1636mm         ENDM
000016F8                          1637mm         PRINTSIGN
000016F8  103C 0006               1638mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016FC  323C 0024               1639mm         MOVE.W  #36, D1     ; AN = SIGN
00001700  4E4F                    1640mm         TRAP    #15         ; OUTPUT = SIGN
00001702                          1641mm         ENDM
00001702                          1642mm         ADROUT 
00001702  103C 0006               1643mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001706  3212                    1644mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001708  E049                    1645mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000170A  E849                    1646mm         LSR.W   #4, D1      
0000170C                          1647mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000170C  0C01 0009               1648mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001710  6E00 000A               1649mmm         BGT     ALPHA_62
00001714  0601 0030               1650mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001718  6000 0006               1651mmm         BRA     DONE_62
0000171C  0601 0037               1652mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001720  4E71                    1653mmm DONE_62: NOP
00001722                          1654mmm         ENDM
00001722  4E4F                    1655mm         TRAP    #15         ; EXECUTE OUTPUT
00001724                          1656mm         
00001724  3212                    1657mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001726  E949                    1658mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001728  E049                    1659mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000172A  E849                    1660mm         LSR.W   #4, D1      
0000172C                          1661mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000172C  0C01 0009               1662mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001730  6E00 000A               1663mmm         BGT     ALPHA_63
00001734  0601 0030               1664mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001738  6000 0006               1665mmm         BRA     DONE_63
0000173C  0601 0037               1666mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001740  4E71                    1667mmm DONE_63: NOP
00001742                          1668mmm         ENDM
00001742  4E4F                    1669mm         TRAP    #15         ; EXECUTE OUTPUT
00001744                          1670mm         
00001744  3212                    1671mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001746  E149                    1672mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001748  E049                    1673mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000174A  E849                    1674mm         LSR.W   #4, D1      
0000174C                          1675mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000174C  0C01 0009               1676mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001750  6E00 000A               1677mmm         BGT     ALPHA_64
00001754  0601 0030               1678mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001758  6000 0006               1679mmm         BRA     DONE_64
0000175C  0601 0037               1680mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001760  4E71                    1681mmm DONE_64: NOP
00001762                          1682mmm         ENDM
00001762  4E4F                    1683mm         TRAP    #15         ; EXECUTE OUTPUT
00001764                          1684mm         
00001764  3212                    1685mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001766  E149                    1686mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001768  E949                    1687mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000176A  E049                    1688mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000176C  E849                    1689mm         LSR.W   #4, D1      
0000176E                          1690mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000176E  0C01 0009               1691mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001772  6E00 000A               1692mmm         BGT     ALPHA_65
00001776  0601 0030               1693mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000177A  6000 0006               1694mmm         BRA     DONE_65
0000177E  0601 0037               1695mmm ALPHA_65: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001782  4E71                    1696mmm DONE_65: NOP
00001784                          1697mmm         ENDM
00001784  4E4F                    1698mm         TRAP    #15         ; EXECUTE OUTPUT       
00001786                          1699mm         ENDM 
00001786  361A                    1700m         MOVE.W  (A2)+, D3
00001788                          1701mm         ADROUT
00001788  103C 0006               1702mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000178C  3212                    1703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000178E  E049                    1704mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001790  E849                    1705mm         LSR.W   #4, D1      
00001792                          1706mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001792  0C01 0009               1707mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001796  6E00 000A               1708mmm         BGT     ALPHA_67
0000179A  0601 0030               1709mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000179E  6000 0006               1710mmm         BRA     DONE_67
000017A2  0601 0037               1711mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017A6  4E71                    1712mmm DONE_67: NOP
000017A8                          1713mmm         ENDM
000017A8  4E4F                    1714mm         TRAP    #15         ; EXECUTE OUTPUT
000017AA                          1715mm         
000017AA  3212                    1716mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AC  E949                    1717mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000017AE  E049                    1718mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B0  E849                    1719mm         LSR.W   #4, D1      
000017B2                          1720mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B2  0C01 0009               1721mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B6  6E00 000A               1722mmm         BGT     ALPHA_68
000017BA  0601 0030               1723mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017BE  6000 0006               1724mmm         BRA     DONE_68
000017C2  0601 0037               1725mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C6  4E71                    1726mmm DONE_68: NOP
000017C8                          1727mmm         ENDM
000017C8  4E4F                    1728mm         TRAP    #15         ; EXECUTE OUTPUT
000017CA                          1729mm         
000017CA  3212                    1730mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017CC  E149                    1731mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017CE  E049                    1732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D0  E849                    1733mm         LSR.W   #4, D1      
000017D2                          1734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D2  0C01 0009               1735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017D6  6E00 000A               1736mmm         BGT     ALPHA_69
000017DA  0601 0030               1737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017DE  6000 0006               1738mmm         BRA     DONE_69
000017E2  0601 0037               1739mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017E6  4E71                    1740mmm DONE_69: NOP
000017E8                          1741mmm         ENDM
000017E8  4E4F                    1742mm         TRAP    #15         ; EXECUTE OUTPUT
000017EA                          1743mm         
000017EA  3212                    1744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017EC  E149                    1745mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017EE  E949                    1746mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017F0  E049                    1747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017F2  E849                    1748mm         LSR.W   #4, D1      
000017F4                          1749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017F4  0C01 0009               1750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017F8  6E00 000A               1751mmm         BGT     ALPHA_70
000017FC  0601 0030               1752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001800  6000 0006               1753mmm         BRA     DONE_70
00001804  0601 0037               1754mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001808  4E71                    1755mmm DONE_70: NOP
0000180A                          1756mmm         ENDM
0000180A  4E4F                    1757mm         TRAP    #15         ; EXECUTE OUTPUT       
0000180C                          1758mm         ENDM 
0000180C  3605                    1759m         MOVE.W  D5, D3
0000180E  6000 01B0               1760m         BRA     COMPLETE_25 
00001812                          1761m ADRABSOLUTEW_25:     
00001812  361A                    1762m         MOVE.W  (A2)+, D3
00001814                          1763mm         PRINTSIGN
00001814  103C 0006               1764mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001818  323C 0024               1765mm         MOVE.W  #36, D1     ; AN = SIGN
0000181C  4E4F                    1766mm         TRAP    #15         ; OUTPUT = SIGN
0000181E                          1767mm         ENDM
0000181E                          1768mm         ADROUT
0000181E  103C 0006               1769mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001822  3212                    1770mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001824  E049                    1771mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001826  E849                    1772mm         LSR.W   #4, D1      
00001828                          1773mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001828  0C01 0009               1774mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182C  6E00 000A               1775mmm         BGT     ALPHA_73
00001830  0601 0030               1776mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001834  6000 0006               1777mmm         BRA     DONE_73
00001838  0601 0037               1778mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183C  4E71                    1779mmm DONE_73: NOP
0000183E                          1780mmm         ENDM
0000183E  4E4F                    1781mm         TRAP    #15         ; EXECUTE OUTPUT
00001840                          1782mm         
00001840  3212                    1783mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001842  E949                    1784mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001844  E049                    1785mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001846  E849                    1786mm         LSR.W   #4, D1      
00001848                          1787mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001848  0C01 0009               1788mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184C  6E00 000A               1789mmm         BGT     ALPHA_74
00001850  0601 0030               1790mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001854  6000 0006               1791mmm         BRA     DONE_74
00001858  0601 0037               1792mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185C  4E71                    1793mmm DONE_74: NOP
0000185E                          1794mmm         ENDM
0000185E  4E4F                    1795mm         TRAP    #15         ; EXECUTE OUTPUT
00001860                          1796mm         
00001860  3212                    1797mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001862  E149                    1798mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001864  E049                    1799mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001866  E849                    1800mm         LSR.W   #4, D1      
00001868                          1801mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001868  0C01 0009               1802mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186C  6E00 000A               1803mmm         BGT     ALPHA_75
00001870  0601 0030               1804mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001874  6000 0006               1805mmm         BRA     DONE_75
00001878  0601 0037               1806mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187C  4E71                    1807mmm DONE_75: NOP
0000187E                          1808mmm         ENDM
0000187E  4E4F                    1809mm         TRAP    #15         ; EXECUTE OUTPUT
00001880                          1810mm         
00001880  3212                    1811mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001882  E149                    1812mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001884  E949                    1813mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001886  E049                    1814mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001888  E849                    1815mm         LSR.W   #4, D1      
0000188A                          1816mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000188A  0C01 0009               1817mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188E  6E00 000A               1818mmm         BGT     ALPHA_76
00001892  0601 0030               1819mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001896  6000 0006               1820mmm         BRA     DONE_76
0000189A  0601 0037               1821mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189E  4E71                    1822mmm DONE_76: NOP
000018A0                          1823mmm         ENDM
000018A0  4E4F                    1824mm         TRAP    #15         ; EXECUTE OUTPUT       
000018A2                          1825mm         ENDM 
000018A2  3605                    1826m         MOVE.W  D5, D3
000018A4  6000 011A               1827m         BRA     COMPLETE_25  
000018A8                          1828m ADRABSOLUTEL_25:  
000018A8  361A                    1829m         MOVE.W  (A2)+, D3
000018AA                          1830mm         PRINTSIGN
000018AA  103C 0006               1831mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018AE  323C 0024               1832mm         MOVE.W  #36, D1     ; AN = SIGN
000018B2  4E4F                    1833mm         TRAP    #15         ; OUTPUT = SIGN
000018B4                          1834mm         ENDM
000018B4                          1835mm         ADROUT 
000018B4  103C 0006               1836mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000018B8  3212                    1837mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018BA  E049                    1838mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018BC  E849                    1839mm         LSR.W   #4, D1      
000018BE                          1840mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018BE  0C01 0009               1841mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018C2  6E00 000A               1842mmm         BGT     ALPHA_79
000018C6  0601 0030               1843mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018CA  6000 0006               1844mmm         BRA     DONE_79
000018CE  0601 0037               1845mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018D2  4E71                    1846mmm DONE_79: NOP
000018D4                          1847mmm         ENDM
000018D4  4E4F                    1848mm         TRAP    #15         ; EXECUTE OUTPUT
000018D6                          1849mm         
000018D6  3212                    1850mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018D8  E949                    1851mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018DA  E049                    1852mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018DC  E849                    1853mm         LSR.W   #4, D1      
000018DE                          1854mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018DE  0C01 0009               1855mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018E2  6E00 000A               1856mmm         BGT     ALPHA_80
000018E6  0601 0030               1857mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018EA  6000 0006               1858mmm         BRA     DONE_80
000018EE  0601 0037               1859mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018F2  4E71                    1860mmm DONE_80: NOP
000018F4                          1861mmm         ENDM
000018F4  4E4F                    1862mm         TRAP    #15         ; EXECUTE OUTPUT
000018F6                          1863mm         
000018F6  3212                    1864mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018F8  E149                    1865mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018FA  E049                    1866mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018FC  E849                    1867mm         LSR.W   #4, D1      
000018FE                          1868mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018FE  0C01 0009               1869mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001902  6E00 000A               1870mmm         BGT     ALPHA_81
00001906  0601 0030               1871mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000190A  6000 0006               1872mmm         BRA     DONE_81
0000190E  0601 0037               1873mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001912  4E71                    1874mmm DONE_81: NOP
00001914                          1875mmm         ENDM
00001914  4E4F                    1876mm         TRAP    #15         ; EXECUTE OUTPUT
00001916                          1877mm         
00001916  3212                    1878mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001918  E149                    1879mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000191A  E949                    1880mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000191C  E049                    1881mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000191E  E849                    1882mm         LSR.W   #4, D1      
00001920                          1883mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001920  0C01 0009               1884mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001924  6E00 000A               1885mmm         BGT     ALPHA_82
00001928  0601 0030               1886mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000192C  6000 0006               1887mmm         BRA     DONE_82
00001930  0601 0037               1888mmm ALPHA_82: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001934  4E71                    1889mmm DONE_82: NOP
00001936                          1890mmm         ENDM
00001936  4E4F                    1891mm         TRAP    #15         ; EXECUTE OUTPUT       
00001938                          1892mm         ENDM 
00001938  361A                    1893m         MOVE.W  (A2)+, D3
0000193A                          1894mm         ADROUT
0000193A  103C 0006               1895mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000193E  3212                    1896mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001940  E049                    1897mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001942  E849                    1898mm         LSR.W   #4, D1      
00001944                          1899mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001944  0C01 0009               1900mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001948  6E00 000A               1901mmm         BGT     ALPHA_84
0000194C  0601 0030               1902mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001950  6000 0006               1903mmm         BRA     DONE_84
00001954  0601 0037               1904mmm ALPHA_84: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001958  4E71                    1905mmm DONE_84: NOP
0000195A                          1906mmm         ENDM
0000195A  4E4F                    1907mm         TRAP    #15         ; EXECUTE OUTPUT
0000195C                          1908mm         
0000195C  3212                    1909mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000195E  E949                    1910mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001960  E049                    1911mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001962  E849                    1912mm         LSR.W   #4, D1      
00001964                          1913mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001964  0C01 0009               1914mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001968  6E00 000A               1915mmm         BGT     ALPHA_85
0000196C  0601 0030               1916mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001970  6000 0006               1917mmm         BRA     DONE_85
00001974  0601 0037               1918mmm ALPHA_85: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001978  4E71                    1919mmm DONE_85: NOP
0000197A                          1920mmm         ENDM
0000197A  4E4F                    1921mm         TRAP    #15         ; EXECUTE OUTPUT
0000197C                          1922mm         
0000197C  3212                    1923mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000197E  E149                    1924mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001980  E049                    1925mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001982  E849                    1926mm         LSR.W   #4, D1      
00001984                          1927mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001984  0C01 0009               1928mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001988  6E00 000A               1929mmm         BGT     ALPHA_86
0000198C  0601 0030               1930mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001990  6000 0006               1931mmm         BRA     DONE_86
00001994  0601 0037               1932mmm ALPHA_86: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001998  4E71                    1933mmm DONE_86: NOP
0000199A                          1934mmm         ENDM
0000199A  4E4F                    1935mm         TRAP    #15         ; EXECUTE OUTPUT
0000199C                          1936mm         
0000199C  3212                    1937mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000199E  E149                    1938mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000019A0  E949                    1939mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000019A2  E049                    1940mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000019A4  E849                    1941mm         LSR.W   #4, D1      
000019A6                          1942mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000019A6  0C01 0009               1943mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000019AA  6E00 000A               1944mmm         BGT     ALPHA_87
000019AE  0601 0030               1945mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000019B2  6000 0006               1946mmm         BRA     DONE_87
000019B6  0601 0037               1947mmm ALPHA_87: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000019BA  4E71                    1948mmm DONE_87: NOP
000019BC                          1949mmm         ENDM
000019BC  4E4F                    1950mm         TRAP    #15         ; EXECUTE OUTPUT       
000019BE                          1951mm         ENDM 
000019BE  3605                    1952m         MOVE.W  D5, D3
000019C0                          1953m 
000019C0                          1954m COMPLETE_25:  ; OPCODE HAS BEEN VERIFIED
000019C0                          1955m         ENDM
000019C0                          1956m         printComma
000019C0  43F8 00D4               1957m         LEA     OCOMMA, A1     
000019C4  103C 000E               1958m         MOVE.B  #14,D0          
000019C8  4E4F                    1959m         TRAP    #15
000019CA                          1960m         ENDM
000019CA                          1961m         prepareAdrMode  #$0,  D3
000019CA  3C3C 0000               1962m         MOVE.W  #$0, D6      ; INPUT VALUE
000019CE  3203                    1963m         MOVE.W  D3, D1
000019D0  BC3C 0001               1964m         CMP.B   #$01, D6
000019D4  6700 000C               1965m         BEQ     ADRSOURCE_89    
000019D8                          1966m ADRDEST_89:
000019D8  EF49                    1967m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000019DA  E049                    1968m         LSR     #$08, D1
000019DC  EA49                    1969m         LSR     #$05, D1
000019DE  6000 000A               1970m         BRA     COMPLETE_89 
000019E2                          1971m ADRSOURCE_89:                
000019E2  E149                    1972m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000019E4  E549                    1973m         LSL     #$02, D1
000019E6  E049                    1974m         LSR     #$08, D1
000019E8  EA49                    1975m         LSR     #$05, D1
000019EA                          1976m COMPLETE_89:  ; OPCODE HAS BEEN VERIFIED
000019EA                          1977m         ENDM        
000019EA                          1978m         decodeAdrMode   D3, D1
000019EA  3603                    1979m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
000019EC  3201                    1980m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000019EE                          1981m 
000019EE  B23C 0001               1982m         CMP.B   #$01, D1
000019F2  6700 0066               1983m         BEQ     ADRREGDIRECT_90    
000019F6  B23C 0002               1984m         CMP.B   #$02, D1
000019FA  6700 00A0               1985m         BEQ     ADRREGINDIRECT_90  
000019FE  B23C 0003               1986m         CMP.B   #$03, D1
00001A02  6700 0102               1987m         BEQ     ADRREGPOSTINC_90  
00001A06  B23C 0004               1988m         CMP.B   #$04, D1
00001A0A  6700 0178               1989m         BEQ     ADRREGPREDEC_90
00001A0E  B23C 0007               1990m         CMP.B   #$07, D1
00001A12  6700 01EE               1991m         BEQ     ADRABSOLUTE_90    
00001A16                          1992m         
00001A16                          1993m DATAREGDIRECT_90: 
00001A16  BC3C 0001               1994m         CMP.B   #$01, D6
00001A1A  6700 001E               1995m         BEQ     DATAREGDIRECTSRC_90   
00001A1E                          1996m DATAREGDIRECTDEST_90: 
00001A1E                          1997mm         PRINTDNDEST D3 
00001A1E  3203                    1998mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001A20  E949                    1999mm         LSL     #$04, D1
00001A22  E049                    2000mm         LSR     #$08, D1
00001A24  EA49                    2001mm         LSR     #$05, D1
00001A26  43F8 00CC               2002mm         LEA     ODN, A1     
00001A2A  103C 000E               2003mm         MOVE.B  #14,D0          
00001A2E  4E4F                    2004mm         TRAP    #15
00001A30  103C 0003               2005mm         MOVE.B  #3,D0          
00001A34  4E4F                    2006mm         TRAP    #15
00001A36                          2007mm         ENDM
00001A36  6000 057A               2008m         BRA     COMPLETE_90 
00001A3A                          2009m DATAREGDIRECTSRC_90: 
00001A3A                          2010mm         PRINTDNSRC D3 
00001A3A  4281                    2011mm         CLR.L   D1
00001A3C  3203                    2012mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A3E  E149                    2013mm         LSL     #$08, D1
00001A40  EB49                    2014mm         LSL     #$05, D1
00001A42  E049                    2015mm         LSR     #$08, D1
00001A44  EA49                    2016mm         LSR     #$05, D1
00001A46  43F8 00CC               2017mm         LEA     ODN, A1     
00001A4A  103C 000E               2018mm         MOVE.B  #14,D0          
00001A4E  4E4F                    2019mm         TRAP    #15
00001A50  103C 0003               2020mm         MOVE.B  #3,D0          
00001A54  4E4F                    2021mm         TRAP    #15
00001A56                          2022mm         ENDM
00001A56  6000 055A               2023m         BRA     COMPLETE_90   
00001A5A                          2024m         
00001A5A                          2025m ADRREGDIRECT_90: 
00001A5A  BC3C 0001               2026m         CMP.B   #$01, D6
00001A5E  6700 001E               2027m         BEQ     ADRREGDIRECTSRC_90   
00001A62                          2028m ADRREGDIRECTDEST_90:
00001A62                          2029mm         PRINTANDEST D3
00001A62  3203                    2030mm         MOVE.W  D3, D1
00001A64  E949                    2031mm         LSL     #$04, D1
00001A66  E049                    2032mm         LSR     #$08, D1
00001A68  EA49                    2033mm         LSR     #$05, D1
00001A6A  43F8 00CE               2034mm         LEA     OAN, A1     
00001A6E  103C 000E               2035mm         MOVE.B  #14,D0          
00001A72  4E4F                    2036mm         TRAP    #15
00001A74  103C 0003               2037mm         MOVE.B  #3,D0          
00001A78  4E4F                    2038mm         TRAP    #15
00001A7A                          2039mm         ENDM
00001A7A  6000 0536               2040m         BRA     COMPLETE_90   
00001A7E                          2041m ADRREGDIRECTSRC_90:
00001A7E                          2042mm         PRINTANSRC D3
00001A7E  3203                    2043mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A80  E149                    2044mm         LSL     #$08, D1
00001A82  EB49                    2045mm         LSL     #$05, D1
00001A84  E049                    2046mm         LSR     #$08, D1
00001A86  EA49                    2047mm         LSR     #$05, D1
00001A88  43F8 00CE               2048mm         LEA     OAN, A1     
00001A8C  103C 000E               2049mm         MOVE.B  #14,D0          
00001A90  4E4F                    2050mm         TRAP    #15
00001A92  103C 0003               2051mm         MOVE.B  #3,D0          
00001A96  4E4F                    2052mm         TRAP    #15
00001A98                          2053mm         ENDM
00001A98  6000 0518               2054m         BRA     COMPLETE_90   
00001A9C                          2055m        
00001A9C                          2056m ADRREGINDIRECT_90:   
00001A9C  BC3C 0001               2057m         CMP.B   #$01, D6
00001AA0  6700 0032               2058m         BEQ     ADRREGINDIRECTSRC_90   
00001AA4                          2059m ADRREGINDIRECTDEST_90:
00001AA4                          2060mm         PRINTLB
00001AA4  43F8 00D0               2061mm         LEA     OLB, A1     
00001AA8  103C 000E               2062mm         MOVE.B  #14,D0          
00001AAC  4E4F                    2063mm         TRAP    #15
00001AAE                          2064mm         ENDM
00001AAE                          2065mm         PRINTANDEST D3  
00001AAE  3203                    2066mm         MOVE.W  D3, D1
00001AB0  E949                    2067mm         LSL     #$04, D1
00001AB2  E049                    2068mm         LSR     #$08, D1
00001AB4  EA49                    2069mm         LSR     #$05, D1
00001AB6  43F8 00CE               2070mm         LEA     OAN, A1     
00001ABA  103C 000E               2071mm         MOVE.B  #14,D0          
00001ABE  4E4F                    2072mm         TRAP    #15
00001AC0  103C 0003               2073mm         MOVE.B  #3,D0          
00001AC4  4E4F                    2074mm         TRAP    #15
00001AC6                          2075mm         ENDM
00001AC6                          2076mm         PRINTRB
00001AC6  43F8 00D2               2077mm         LEA     ORB, A1     
00001ACA  103C 000E               2078mm         MOVE.B  #14,D0          
00001ACE  4E4F                    2079mm         TRAP    #15
00001AD0                          2080mm         ENDM
00001AD0  6000 04E0               2081m         BRA     COMPLETE_90     
00001AD4                          2082m ADRREGINDIRECTSRC_90:   
00001AD4                          2083mm         PRINTLB
00001AD4  43F8 00D0               2084mm         LEA     OLB, A1     
00001AD8  103C 000E               2085mm         MOVE.B  #14,D0          
00001ADC  4E4F                    2086mm         TRAP    #15
00001ADE                          2087mm         ENDM
00001ADE                          2088mm         PRINTANSRC D3  
00001ADE  3203                    2089mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001AE0  E149                    2090mm         LSL     #$08, D1
00001AE2  EB49                    2091mm         LSL     #$05, D1
00001AE4  E049                    2092mm         LSR     #$08, D1
00001AE6  EA49                    2093mm         LSR     #$05, D1
00001AE8  43F8 00CE               2094mm         LEA     OAN, A1     
00001AEC  103C 000E               2095mm         MOVE.B  #14,D0          
00001AF0  4E4F                    2096mm         TRAP    #15
00001AF2  103C 0003               2097mm         MOVE.B  #3,D0          
00001AF6  4E4F                    2098mm         TRAP    #15
00001AF8                          2099mm         ENDM
00001AF8                          2100mm         PRINTRB
00001AF8  43F8 00D2               2101mm         LEA     ORB, A1     
00001AFC  103C 000E               2102mm         MOVE.B  #14,D0          
00001B00  4E4F                    2103mm         TRAP    #15
00001B02                          2104mm         ENDM
00001B02  6000 04AE               2105m         BRA     COMPLETE_90   
00001B06                          2106m         
00001B06                          2107m ADRREGPOSTINC_90:   
00001B06  BC3C 0001               2108m         CMP.B   #$01, D6
00001B0A  6700 003C               2109m         BEQ     ADRREGPOSTINCSRC_90   
00001B0E                          2110m ADRREGPOSTINCDEST_90: 
00001B0E                          2111mm         PRINTLB
00001B0E  43F8 00D0               2112mm         LEA     OLB, A1     
00001B12  103C 000E               2113mm         MOVE.B  #14,D0          
00001B16  4E4F                    2114mm         TRAP    #15
00001B18                          2115mm         ENDM
00001B18                          2116mm         PRINTANDEST D3  
00001B18  3203                    2117mm         MOVE.W  D3, D1
00001B1A  E949                    2118mm         LSL     #$04, D1
00001B1C  E049                    2119mm         LSR     #$08, D1
00001B1E  EA49                    2120mm         LSR     #$05, D1
00001B20  43F8 00CE               2121mm         LEA     OAN, A1     
00001B24  103C 000E               2122mm         MOVE.B  #14,D0          
00001B28  4E4F                    2123mm         TRAP    #15
00001B2A  103C 0003               2124mm         MOVE.B  #3,D0          
00001B2E  4E4F                    2125mm         TRAP    #15
00001B30                          2126mm         ENDM
00001B30                          2127mm         PRINTRB
00001B30  43F8 00D2               2128mm         LEA     ORB, A1     
00001B34  103C 000E               2129mm         MOVE.B  #14,D0          
00001B38  4E4F                    2130mm         TRAP    #15
00001B3A                          2131mm         ENDM
00001B3A                          2132mm         PRINTPI
00001B3A  43F8 00D9               2133mm         LEA     OPSTINC, A1     
00001B3E  103C 000E               2134mm         MOVE.B  #14,D0          
00001B42  4E4F                    2135mm         TRAP    #15
00001B44                          2136mm         ENDM
00001B44  6000 046C               2137m         BRA     COMPLETE_90  
00001B48                          2138m ADRREGPOSTINCSRC_90:           
00001B48                          2139mm         PRINTLB
00001B48  43F8 00D0               2140mm         LEA     OLB, A1     
00001B4C  103C 000E               2141mm         MOVE.B  #14,D0          
00001B50  4E4F                    2142mm         TRAP    #15
00001B52                          2143mm         ENDM
00001B52                          2144mm         PRINTANSRC D3  
00001B52  3203                    2145mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B54  E149                    2146mm         LSL     #$08, D1
00001B56  EB49                    2147mm         LSL     #$05, D1
00001B58  E049                    2148mm         LSR     #$08, D1
00001B5A  EA49                    2149mm         LSR     #$05, D1
00001B5C  43F8 00CE               2150mm         LEA     OAN, A1     
00001B60  103C 000E               2151mm         MOVE.B  #14,D0          
00001B64  4E4F                    2152mm         TRAP    #15
00001B66  103C 0003               2153mm         MOVE.B  #3,D0          
00001B6A  4E4F                    2154mm         TRAP    #15
00001B6C                          2155mm         ENDM
00001B6C                          2156mm         PRINTRB
00001B6C  43F8 00D2               2157mm         LEA     ORB, A1     
00001B70  103C 000E               2158mm         MOVE.B  #14,D0          
00001B74  4E4F                    2159mm         TRAP    #15
00001B76                          2160mm         ENDM
00001B76                          2161mm         PRINTPI
00001B76  43F8 00D9               2162mm         LEA     OPSTINC, A1     
00001B7A  103C 000E               2163mm         MOVE.B  #14,D0          
00001B7E  4E4F                    2164mm         TRAP    #15
00001B80                          2165mm         ENDM
00001B80  6000 0430               2166m         BRA     COMPLETE_90  
00001B84                          2167m ADRREGPREDEC_90: 
00001B84  BC3C 0001               2168m         CMP.B   #$01, D6
00001B88  6700 003C               2169m         BEQ     ADRREGPREDECSRC_90   
00001B8C                          2170m ADRREGPREDECDEST_90:
00001B8C                          2171mm         PRINTPD  
00001B8C  43F8 00D7               2172mm         LEA     OPREDEC, A1     
00001B90  103C 000E               2173mm         MOVE.B  #14,D0          
00001B94  4E4F                    2174mm         TRAP    #15
00001B96                          2175mm         ENDM
00001B96                          2176mm         PRINTLB
00001B96  43F8 00D0               2177mm         LEA     OLB, A1     
00001B9A  103C 000E               2178mm         MOVE.B  #14,D0          
00001B9E  4E4F                    2179mm         TRAP    #15
00001BA0                          2180mm         ENDM
00001BA0                          2181mm         PRINTANDEST D3  
00001BA0  3203                    2182mm         MOVE.W  D3, D1
00001BA2  E949                    2183mm         LSL     #$04, D1
00001BA4  E049                    2184mm         LSR     #$08, D1
00001BA6  EA49                    2185mm         LSR     #$05, D1
00001BA8  43F8 00CE               2186mm         LEA     OAN, A1     
00001BAC  103C 000E               2187mm         MOVE.B  #14,D0          
00001BB0  4E4F                    2188mm         TRAP    #15
00001BB2  103C 0003               2189mm         MOVE.B  #3,D0          
00001BB6  4E4F                    2190mm         TRAP    #15
00001BB8                          2191mm         ENDM
00001BB8                          2192mm         PRINTRB
00001BB8  43F8 00D2               2193mm         LEA     ORB, A1     
00001BBC  103C 000E               2194mm         MOVE.B  #14,D0          
00001BC0  4E4F                    2195mm         TRAP    #15
00001BC2                          2196mm         ENDM
00001BC2  6000 03EE               2197m         BRA     COMPLETE_90   
00001BC6                          2198m ADRREGPREDECSRC_90: 
00001BC6                          2199mm         PRINTPD  
00001BC6  43F8 00D7               2200mm         LEA     OPREDEC, A1     
00001BCA  103C 000E               2201mm         MOVE.B  #14,D0          
00001BCE  4E4F                    2202mm         TRAP    #15
00001BD0                          2203mm         ENDM
00001BD0                          2204mm         PRINTLB
00001BD0  43F8 00D0               2205mm         LEA     OLB, A1     
00001BD4  103C 000E               2206mm         MOVE.B  #14,D0          
00001BD8  4E4F                    2207mm         TRAP    #15
00001BDA                          2208mm         ENDM
00001BDA                          2209mm         PRINTANSRC D3  
00001BDA  3203                    2210mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001BDC  E149                    2211mm         LSL     #$08, D1
00001BDE  EB49                    2212mm         LSL     #$05, D1
00001BE0  E049                    2213mm         LSR     #$08, D1
00001BE2  EA49                    2214mm         LSR     #$05, D1
00001BE4  43F8 00CE               2215mm         LEA     OAN, A1     
00001BE8  103C 000E               2216mm         MOVE.B  #14,D0          
00001BEC  4E4F                    2217mm         TRAP    #15
00001BEE  103C 0003               2218mm         MOVE.B  #3,D0          
00001BF2  4E4F                    2219mm         TRAP    #15
00001BF4                          2220mm         ENDM
00001BF4                          2221mm         PRINTRB
00001BF4  43F8 00D2               2222mm         LEA     ORB, A1     
00001BF8  103C 000E               2223mm         MOVE.B  #14,D0          
00001BFC  4E4F                    2224mm         TRAP    #15
00001BFE                          2225mm         ENDM
00001BFE  6000 03B2               2226m         BRA     COMPLETE_90
00001C02                          2227m        
00001C02                          2228m ADRABSOLUTE_90:
00001C02  BC3C 0001               2229m         CMP.B   #$01, D6
00001C06  6600 0018               2230m         BNE     ADRABSOLUTEDST_90 
00001C0A                          2231m         
00001C0A  3A03                    2232m         MOVE.W  D3, D5
00001C0C  0803 0002               2233m         BTST    #2, D3
00001C10  6600 0024               2234m         BNE     ADRIMMEDIATE_90
00001C14  0803 0000               2235m         BTST    #0, D3
00001C18  6600 0280               2236m         BNE     ADRABSOLUTEL_90
00001C1C  6000 01E6               2237m         BRA     ADRABSOLUTEW_90
00001C20                          2238m ADRABSOLUTEDST_90:
00001C20  3A03                    2239m         MOVE.W  D3, D5
00001C22  0803 000B               2240m         BTST    #$B, D3
00001C26  6600 000E               2241m         BNE     ADRIMMEDIATE_90
00001C2A  0803 0009               2242m         BTST    #$09, D3
00001C2E  6600 026A               2243m         BNE     ADRABSOLUTEL_90
00001C32  6000 01D0               2244m         BRA     ADRABSOLUTEW_90
00001C36                          2245m ADRIMMEDIATE_90:
00001C36  BE3C 0001               2246m         CMP.B   #1, D7
00001C3A  6700 00A2               2247m         BEQ     ADRIMMEDIATEL_90
00001C3E                          2248m ADRIMMEDIATEW_90:
00001C3E  361A                    2249m         MOVE.W  (A2)+, D3
00001C40                          2250mm         PRINTHASH
00001C40  103C 0006               2251mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C44  323C 0023               2252mm         MOVE.W  #35, D1     ; AN = SIGN
00001C48  4E4F                    2253mm         TRAP    #15         ; OUTPUT = SIGN
00001C4A                          2254mm         ENDM
00001C4A                          2255mm         PRINTSIGN
00001C4A  103C 0006               2256mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C4E  323C 0024               2257mm         MOVE.W  #36, D1     ; AN = SIGN
00001C52  4E4F                    2258mm         TRAP    #15         ; OUTPUT = SIGN
00001C54                          2259mm         ENDM
00001C54                          2260mm         ADROUT
00001C54  103C 0006               2261mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C58  3212                    2262mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C5A  E049                    2263mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C5C  E849                    2264mm         LSR.W   #4, D1      
00001C5E                          2265mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5E  0C01 0009               2266mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C62  6E00 000A               2267mmm         BGT     ALPHA_120
00001C66  0601 0030               2268mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C6A  6000 0006               2269mmm         BRA     DONE_120
00001C6E  0601 0037               2270mmm ALPHA_120: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C72  4E71                    2271mmm DONE_120: NOP
00001C74                          2272mmm         ENDM
00001C74  4E4F                    2273mm         TRAP    #15         ; EXECUTE OUTPUT
00001C76                          2274mm         
00001C76  3212                    2275mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C78  E949                    2276mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C7A  E049                    2277mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C7C  E849                    2278mm         LSR.W   #4, D1      
00001C7E                          2279mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7E  0C01 0009               2280mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C82  6E00 000A               2281mmm         BGT     ALPHA_121
00001C86  0601 0030               2282mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C8A  6000 0006               2283mmm         BRA     DONE_121
00001C8E  0601 0037               2284mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C92  4E71                    2285mmm DONE_121: NOP
00001C94                          2286mmm         ENDM
00001C94  4E4F                    2287mm         TRAP    #15         ; EXECUTE OUTPUT
00001C96                          2288mm         
00001C96  3212                    2289mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C98  E149                    2290mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C9A  E049                    2291mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9C  E849                    2292mm         LSR.W   #4, D1      
00001C9E                          2293mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9E  0C01 0009               2294mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA2  6E00 000A               2295mmm         BGT     ALPHA_122
00001CA6  0601 0030               2296mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CAA  6000 0006               2297mmm         BRA     DONE_122
00001CAE  0601 0037               2298mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB2  4E71                    2299mmm DONE_122: NOP
00001CB4                          2300mmm         ENDM
00001CB4  4E4F                    2301mm         TRAP    #15         ; EXECUTE OUTPUT
00001CB6                          2302mm         
00001CB6  3212                    2303mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB8  E149                    2304mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CBA  E949                    2305mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001CBC  E049                    2306mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBE  E849                    2307mm         LSR.W   #4, D1      
00001CC0                          2308mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CC0  0C01 0009               2309mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC4  6E00 000A               2310mmm         BGT     ALPHA_123
00001CC8  0601 0030               2311mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CCC  6000 0006               2312mmm         BRA     DONE_123
00001CD0  0601 0037               2313mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD4  4E71                    2314mmm DONE_123: NOP
00001CD6                          2315mmm         ENDM
00001CD6  4E4F                    2316mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CD8                          2317mm         ENDM 
00001CD8  3605                    2318m         MOVE.W  D5, D3
00001CDA  6000 02D6               2319m         BRA     COMPLETE_90
00001CDE                          2320m ADRIMMEDIATEL_90:
00001CDE  361A                    2321m         MOVE.W  (A2)+, D3
00001CE0                          2322mm         PRINTHASH
00001CE0  103C 0006               2323mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CE4  323C 0023               2324mm         MOVE.W  #35, D1     ; AN = SIGN
00001CE8  4E4F                    2325mm         TRAP    #15         ; OUTPUT = SIGN
00001CEA                          2326mm         ENDM
00001CEA                          2327mm         PRINTSIGN
00001CEA  103C 0006               2328mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CEE  323C 0024               2329mm         MOVE.W  #36, D1     ; AN = SIGN
00001CF2  4E4F                    2330mm         TRAP    #15         ; OUTPUT = SIGN
00001CF4                          2331mm         ENDM
00001CF4                          2332mm         ADROUT 
00001CF4  103C 0006               2333mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CF8  3212                    2334mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CFA  E049                    2335mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFC  E849                    2336mm         LSR.W   #4, D1      
00001CFE                          2337mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFE  0C01 0009               2338mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D02  6E00 000A               2339mmm         BGT     ALPHA_127
00001D06  0601 0030               2340mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D0A  6000 0006               2341mmm         BRA     DONE_127
00001D0E  0601 0037               2342mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D12  4E71                    2343mmm DONE_127: NOP
00001D14                          2344mmm         ENDM
00001D14  4E4F                    2345mm         TRAP    #15         ; EXECUTE OUTPUT
00001D16                          2346mm         
00001D16  3212                    2347mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D18  E949                    2348mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D1A  E049                    2349mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2350mm         LSR.W   #4, D1      
00001D1E                          2351mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2352mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2353mmm         BGT     ALPHA_128
00001D26  0601 0030               2354mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2355mmm         BRA     DONE_128
00001D2E  0601 0037               2356mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2357mmm DONE_128: NOP
00001D34                          2358mmm         ENDM
00001D34  4E4F                    2359mm         TRAP    #15         ; EXECUTE OUTPUT
00001D36                          2360mm         
00001D36  3212                    2361mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D38  E149                    2362mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D3A  E049                    2363mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D3C  E849                    2364mm         LSR.W   #4, D1      
00001D3E                          2365mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D3E  0C01 0009               2366mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D42  6E00 000A               2367mmm         BGT     ALPHA_129
00001D46  0601 0030               2368mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D4A  6000 0006               2369mmm         BRA     DONE_129
00001D4E  0601 0037               2370mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D52  4E71                    2371mmm DONE_129: NOP
00001D54                          2372mmm         ENDM
00001D54  4E4F                    2373mm         TRAP    #15         ; EXECUTE OUTPUT
00001D56                          2374mm         
00001D56  3212                    2375mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D58  E149                    2376mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D5A  E949                    2377mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D5C  E049                    2378mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D5E  E849                    2379mm         LSR.W   #4, D1      
00001D60                          2380mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D60  0C01 0009               2381mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D64  6E00 000A               2382mmm         BGT     ALPHA_130
00001D68  0601 0030               2383mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D6C  6000 0006               2384mmm         BRA     DONE_130
00001D70  0601 0037               2385mmm ALPHA_130: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D74  4E71                    2386mmm DONE_130: NOP
00001D76                          2387mmm         ENDM
00001D76  4E4F                    2388mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D78                          2389mm         ENDM 
00001D78  361A                    2390m         MOVE.W  (A2)+, D3
00001D7A                          2391mm         ADROUT
00001D7A  103C 0006               2392mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D7E  3212                    2393mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D80  E049                    2394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D82  E849                    2395mm         LSR.W   #4, D1      
00001D84                          2396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D84  0C01 0009               2397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D88  6E00 000A               2398mmm         BGT     ALPHA_132
00001D8C  0601 0030               2399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D90  6000 0006               2400mmm         BRA     DONE_132
00001D94  0601 0037               2401mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D98  4E71                    2402mmm DONE_132: NOP
00001D9A                          2403mmm         ENDM
00001D9A  4E4F                    2404mm         TRAP    #15         ; EXECUTE OUTPUT
00001D9C                          2405mm         
00001D9C  3212                    2406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D9E  E949                    2407mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DA0  E049                    2408mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DA2  E849                    2409mm         LSR.W   #4, D1      
00001DA4                          2410mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DA4  0C01 0009               2411mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DA8  6E00 000A               2412mmm         BGT     ALPHA_133
00001DAC  0601 0030               2413mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DB0  6000 0006               2414mmm         BRA     DONE_133
00001DB4  0601 0037               2415mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DB8  4E71                    2416mmm DONE_133: NOP
00001DBA                          2417mmm         ENDM
00001DBA  4E4F                    2418mm         TRAP    #15         ; EXECUTE OUTPUT
00001DBC                          2419mm         
00001DBC  3212                    2420mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DBE  E149                    2421mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DC0  E049                    2422mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DC2  E849                    2423mm         LSR.W   #4, D1      
00001DC4                          2424mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DC4  0C01 0009               2425mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DC8  6E00 000A               2426mmm         BGT     ALPHA_134
00001DCC  0601 0030               2427mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DD0  6000 0006               2428mmm         BRA     DONE_134
00001DD4  0601 0037               2429mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DD8  4E71                    2430mmm DONE_134: NOP
00001DDA                          2431mmm         ENDM
00001DDA  4E4F                    2432mm         TRAP    #15         ; EXECUTE OUTPUT
00001DDC                          2433mm         
00001DDC  3212                    2434mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDE  E149                    2435mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DE0  E949                    2436mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DE2  E049                    2437mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DE4  E849                    2438mm         LSR.W   #4, D1      
00001DE6                          2439mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE6  0C01 0009               2440mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DEA  6E00 000A               2441mmm         BGT     ALPHA_135
00001DEE  0601 0030               2442mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DF2  6000 0006               2443mmm         BRA     DONE_135
00001DF6  0601 0037               2444mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DFA  4E71                    2445mmm DONE_135: NOP
00001DFC                          2446mmm         ENDM
00001DFC  4E4F                    2447mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DFE                          2448mm         ENDM 
00001DFE  3605                    2449m         MOVE.W  D5, D3
00001E00  6000 01B0               2450m         BRA     COMPLETE_90 
00001E04                          2451m ADRABSOLUTEW_90:     
00001E04  361A                    2452m         MOVE.W  (A2)+, D3
00001E06                          2453mm         PRINTSIGN
00001E06  103C 0006               2454mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E0A  323C 0024               2455mm         MOVE.W  #36, D1     ; AN = SIGN
00001E0E  4E4F                    2456mm         TRAP    #15         ; OUTPUT = SIGN
00001E10                          2457mm         ENDM
00001E10                          2458mm         ADROUT
00001E10  103C 0006               2459mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E14  3212                    2460mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E16  E049                    2461mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E18  E849                    2462mm         LSR.W   #4, D1      
00001E1A                          2463mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E1A  0C01 0009               2464mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E1E  6E00 000A               2465mmm         BGT     ALPHA_138
00001E22  0601 0030               2466mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E26  6000 0006               2467mmm         BRA     DONE_138
00001E2A  0601 0037               2468mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E2E  4E71                    2469mmm DONE_138: NOP
00001E30                          2470mmm         ENDM
00001E30  4E4F                    2471mm         TRAP    #15         ; EXECUTE OUTPUT
00001E32                          2472mm         
00001E32  3212                    2473mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E34  E949                    2474mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E36  E049                    2475mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E38  E849                    2476mm         LSR.W   #4, D1      
00001E3A                          2477mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E3A  0C01 0009               2478mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E3E  6E00 000A               2479mmm         BGT     ALPHA_139
00001E42  0601 0030               2480mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E46  6000 0006               2481mmm         BRA     DONE_139
00001E4A  0601 0037               2482mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E4E  4E71                    2483mmm DONE_139: NOP
00001E50                          2484mmm         ENDM
00001E50  4E4F                    2485mm         TRAP    #15         ; EXECUTE OUTPUT
00001E52                          2486mm         
00001E52  3212                    2487mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E54  E149                    2488mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E56  E049                    2489mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E58  E849                    2490mm         LSR.W   #4, D1      
00001E5A                          2491mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E5A  0C01 0009               2492mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E5E  6E00 000A               2493mmm         BGT     ALPHA_140
00001E62  0601 0030               2494mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E66  6000 0006               2495mmm         BRA     DONE_140
00001E6A  0601 0037               2496mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E6E  4E71                    2497mmm DONE_140: NOP
00001E70                          2498mmm         ENDM
00001E70  4E4F                    2499mm         TRAP    #15         ; EXECUTE OUTPUT
00001E72                          2500mm         
00001E72  3212                    2501mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E74  E149                    2502mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E76  E949                    2503mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E78  E049                    2504mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E7A  E849                    2505mm         LSR.W   #4, D1      
00001E7C                          2506mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E7C  0C01 0009               2507mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E80  6E00 000A               2508mmm         BGT     ALPHA_141
00001E84  0601 0030               2509mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E88  6000 0006               2510mmm         BRA     DONE_141
00001E8C  0601 0037               2511mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E90  4E71                    2512mmm DONE_141: NOP
00001E92                          2513mmm         ENDM
00001E92  4E4F                    2514mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E94                          2515mm         ENDM 
00001E94  3605                    2516m         MOVE.W  D5, D3
00001E96  6000 011A               2517m         BRA     COMPLETE_90  
00001E9A                          2518m ADRABSOLUTEL_90:  
00001E9A  361A                    2519m         MOVE.W  (A2)+, D3
00001E9C                          2520mm         PRINTSIGN
00001E9C  103C 0006               2521mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EA0  323C 0024               2522mm         MOVE.W  #36, D1     ; AN = SIGN
00001EA4  4E4F                    2523mm         TRAP    #15         ; OUTPUT = SIGN
00001EA6                          2524mm         ENDM
00001EA6                          2525mm         ADROUT 
00001EA6  103C 0006               2526mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001EAA  3212                    2527mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EAC  E049                    2528mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EAE  E849                    2529mm         LSR.W   #4, D1      
00001EB0                          2530mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EB0  0C01 0009               2531mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EB4  6E00 000A               2532mmm         BGT     ALPHA_144
00001EB8  0601 0030               2533mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EBC  6000 0006               2534mmm         BRA     DONE_144
00001EC0  0601 0037               2535mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EC4  4E71                    2536mmm DONE_144: NOP
00001EC6                          2537mmm         ENDM
00001EC6  4E4F                    2538mm         TRAP    #15         ; EXECUTE OUTPUT
00001EC8                          2539mm         
00001EC8  3212                    2540mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001ECA  E949                    2541mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001ECC  E049                    2542mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001ECE  E849                    2543mm         LSR.W   #4, D1      
00001ED0                          2544mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001ED0  0C01 0009               2545mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001ED4  6E00 000A               2546mmm         BGT     ALPHA_145
00001ED8  0601 0030               2547mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EDC  6000 0006               2548mmm         BRA     DONE_145
00001EE0  0601 0037               2549mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EE4  4E71                    2550mmm DONE_145: NOP
00001EE6                          2551mmm         ENDM
00001EE6  4E4F                    2552mm         TRAP    #15         ; EXECUTE OUTPUT
00001EE8                          2553mm         
00001EE8  3212                    2554mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EEA  E149                    2555mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EEC  E049                    2556mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EEE  E849                    2557mm         LSR.W   #4, D1      
00001EF0                          2558mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EF0  0C01 0009               2559mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EF4  6E00 000A               2560mmm         BGT     ALPHA_146
00001EF8  0601 0030               2561mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EFC  6000 0006               2562mmm         BRA     DONE_146
00001F00  0601 0037               2563mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F04  4E71                    2564mmm DONE_146: NOP
00001F06                          2565mmm         ENDM
00001F06  4E4F                    2566mm         TRAP    #15         ; EXECUTE OUTPUT
00001F08                          2567mm         
00001F08  3212                    2568mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F0A  E149                    2569mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F0C  E949                    2570mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F0E  E049                    2571mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F10  E849                    2572mm         LSR.W   #4, D1      
00001F12                          2573mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F12  0C01 0009               2574mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F16  6E00 000A               2575mmm         BGT     ALPHA_147
00001F1A  0601 0030               2576mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F1E  6000 0006               2577mmm         BRA     DONE_147
00001F22  0601 0037               2578mmm ALPHA_147: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F26  4E71                    2579mmm DONE_147: NOP
00001F28                          2580mmm         ENDM
00001F28  4E4F                    2581mm         TRAP    #15         ; EXECUTE OUTPUT       
00001F2A                          2582mm         ENDM 
00001F2A  361A                    2583m         MOVE.W  (A2)+, D3
00001F2C                          2584mm         ADROUT
00001F2C  103C 0006               2585mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001F30  3212                    2586mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F32  E049                    2587mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F34  E849                    2588mm         LSR.W   #4, D1      
00001F36                          2589mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F36  0C01 0009               2590mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F3A  6E00 000A               2591mmm         BGT     ALPHA_149
00001F3E  0601 0030               2592mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F42  6000 0006               2593mmm         BRA     DONE_149
00001F46  0601 0037               2594mmm ALPHA_149: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F4A  4E71                    2595mmm DONE_149: NOP
00001F4C                          2596mmm         ENDM
00001F4C  4E4F                    2597mm         TRAP    #15         ; EXECUTE OUTPUT
00001F4E                          2598mm         
00001F4E  3212                    2599mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F50  E949                    2600mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001F52  E049                    2601mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F54  E849                    2602mm         LSR.W   #4, D1      
00001F56                          2603mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F56  0C01 0009               2604mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F5A  6E00 000A               2605mmm         BGT     ALPHA_150
00001F5E  0601 0030               2606mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F62  6000 0006               2607mmm         BRA     DONE_150
00001F66  0601 0037               2608mmm ALPHA_150: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F6A  4E71                    2609mmm DONE_150: NOP
00001F6C                          2610mmm         ENDM
00001F6C  4E4F                    2611mm         TRAP    #15         ; EXECUTE OUTPUT
00001F6E                          2612mm         
00001F6E  3212                    2613mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F70  E149                    2614mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F72  E049                    2615mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F74  E849                    2616mm         LSR.W   #4, D1      
00001F76                          2617mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F76  0C01 0009               2618mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F7A  6E00 000A               2619mmm         BGT     ALPHA_151
00001F7E  0601 0030               2620mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F82  6000 0006               2621mmm         BRA     DONE_151
00001F86  0601 0037               2622mmm ALPHA_151: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F8A  4E71                    2623mmm DONE_151: NOP
00001F8C                          2624mmm         ENDM
00001F8C  4E4F                    2625mm         TRAP    #15         ; EXECUTE OUTPUT
00001F8E                          2626mm         
00001F8E  3212                    2627mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F90  E149                    2628mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F92  E949                    2629mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F94  E049                    2630mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F96  E849                    2631mm         LSR.W   #4, D1      
00001F98                          2632mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F98  0C01 0009               2633mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F9C  6E00 000A               2634mmm         BGT     ALPHA_152
00001FA0  0601 0030               2635mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001FA4  6000 0006               2636mmm         BRA     DONE_152
00001FA8  0601 0037               2637mmm ALPHA_152: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001FAC  4E71                    2638mmm DONE_152: NOP
00001FAE                          2639mmm         ENDM
00001FAE  4E4F                    2640mm         TRAP    #15         ; EXECUTE OUTPUT       
00001FB0                          2641mm         ENDM 
00001FB0  3605                    2642m         MOVE.W  D5, D3
00001FB2                          2643m 
00001FB2                          2644m COMPLETE_90:  ; OPCODE HAS BEEN VERIFIED
00001FB2                          2645m         ENDM
00001FB2  4E75                    2646          RTS                 ; Return from decodeMOVE subroutine
00001FB4                          2647  
00001FB4                          2648  
00001FB4                          2649  ; ------------------------------------------------------------
00001FB4                          2650  ; 3. "decodeMOVEM" subroutine
00001FB4                          2651  ; Dylan
00001FB4                          2652  ;
00001FB4                          2653  ; TODO: DESCRIPTION
00001FB4                          2654  ; ------------------------------------------------------------
00001FB4                          2655  decodeMOVEM:
00001FB4                          2656m         verifyOpcode    pMOVEM, (A2)
00001FB4  43F8 011D               2657m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001FB8  3612                    2658m         MOVE.W  (A2), D3      ; INPUT VALUE
00001FBA  123C 000F               2659m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001FBE                          2660m         
00001FBE                          2661m LOOP_153: 
00001FBE  0C11 0030               2662m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001FC2  6700 000E               2663m         BEQ     CHECKFOR0_153
00001FC6  0C11 0031               2664m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001FCA  6700 0010               2665m         BEQ     CHECKFOR1_153
00001FCE  6000 0012               2666m         BRA     NEXT_153      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001FD2                          2667m         
00001FD2                          2668m CHECKFOR0_153: 
00001FD2  0303                    2669m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001FD4  6600 57A4               2670m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001FD8  6000 0008               2671m         BRA     NEXT_153
00001FDC                          2672m 
00001FDC                          2673m CHECKFOR1_153:
00001FDC  0303                    2674m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001FDE  6700 579A               2675m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001FE2                          2676m 
00001FE2                          2677m NEXT_153: 
00001FE2  B23C 0000               2678m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001FE6  6700 0008               2679m         BEQ     COMPLETE_153  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001FEA  5301                    2680m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001FEC  1819                    2681m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001FEE  60CE                    2682m         BRA     LOOP_153      ; BEGIN LOOP AGAIN
00001FF0                          2683m 
00001FF0                          2684m COMPLETE_153:  ; OPCODE HAS BEEN VERIFIED
00001FF0                          2685m         ENDM
00001FF0  43F8 0069               2686          LEA     oMOVEM, A1     
00001FF4  103C 000E               2687          MOVE.B  #14,D0          
00001FF8  4E4F                    2688          TRAP    #15
00001FFA  4E75                    2689          RTS                 ; Return from decodeMOVEM subroutine
00001FFC                          2690  
00001FFC                          2691  
00001FFC                          2692  ; ------------------------------------------------------------
00001FFC                          2693  ; 4. "decodeADD" subroutine
00001FFC                          2694  ; Gary
00001FFC                          2695  ;
00001FFC                          2696  ; Decodes add by verifying, printing, checking the opmode(and size),
00001FFC                          2697  ; and decoding the adressing modes used.
00001FFC                          2698  ; ------------------------------------------------------------
00001FFC                          2699  decodeADD:
00001FFC                          2700m         verifyOpcode    pADD, (A2)
00001FFC  43F8 012E               2701m         LEA     PADD, A1      ; INPUT PATTERN STRING
00002000  3612                    2702m         MOVE.W  (A2), D3      ; INPUT VALUE
00002002  123C 000F               2703m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002006                          2704m         
00002006                          2705m LOOP_154: 
00002006  0C11 0030               2706m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000200A  6700 000E               2707m         BEQ     CHECKFOR0_154
0000200E  0C11 0031               2708m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002012  6700 0010               2709m         BEQ     CHECKFOR1_154
00002016  6000 0012               2710m         BRA     NEXT_154      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000201A                          2711m         
0000201A                          2712m CHECKFOR0_154: 
0000201A  0303                    2713m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000201C  6600 575C               2714m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002020  6000 0008               2715m         BRA     NEXT_154
00002024                          2716m 
00002024                          2717m CHECKFOR1_154:
00002024  0303                    2718m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002026  6700 5752               2719m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000202A                          2720m 
0000202A                          2721m NEXT_154: 
0000202A  B23C 0000               2722m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000202E  6700 0008               2723m         BEQ     COMPLETE_154  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002032  5301                    2724m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002034  1819                    2725m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002036  60CE                    2726m         BRA     LOOP_154      ; BEGIN LOOP AGAIN
00002038                          2727m 
00002038                          2728m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
00002038                          2729m         ENDM
00002038  43F8 006F               2730          LEA     oADD, A1     
0000203C  103C 000E               2731          MOVE.B  #14,D0          
00002040  4E4F                    2732          TRAP    #15
00002042                          2733m         printOpMode     (A2)
00002042  3612                    2734m         MOVE.W  (A2), D3      
00002044  123C 0008               2735m         MOVE.B  #8, D1    
00002048  4246                    2736m         CLR     D6
0000204A  4247                    2737m         CLR     D7
0000204C                          2738m CHECKFORDESTDN_155: 
0000204C  0303                    2739m         BTST    D1, D3      
0000204E  6600 004C               2740m         BNE     CHECKFORSRCDN_155
00002052  4EB9 0000212A           2741m         JSR     NEXT_155
00002058  1C3C 0001               2742m         MOVE.B  #$1, D6
0000205C  0303                    2743m         BTST    D1, D3      
0000205E  6700 0014               2744m         BEQ     DESTDNW_155
00002062                          2745m DESTDNL_155:        
00002062  43F8 00C8               2746m         LEA     OLSIZE, A1     
00002066  103C 000E               2747m         MOVE.B  #14,D0          
0000206A  4E4F                    2748m         TRAP    #15
0000206C  1E3C 0001               2749m         MOVE.B  #$1, D7
00002070  6000 00BC               2750m         BRA     COMPLETE_155 
00002074                          2751m DESTDNW_155: 
00002074  4EB9 0000212A           2752m         JSR     NEXT_155
0000207A  0303                    2753m         BTST    D1, D3      
0000207C  6700 0010               2754m         BEQ     DESTDNB_155
00002080  43F8 00C4               2755m         LEA     OWSIZE, A1     
00002084  103C 000E               2756m         MOVE.B  #14,D0          
00002088  4E4F                    2757m         TRAP    #15
0000208A  6000 00A2               2758m         BRA     COMPLETE_155 
0000208E                          2759m DESTDNB_155: 
0000208E  43F8 00C0               2760m         LEA     OBSIZE, A1     
00002092  103C 000E               2761m         MOVE.B  #14,D0          
00002096  4E4F                    2762m         TRAP    #15
00002098  6000 0094               2763m         BRA     COMPLETE_155 
0000209C                          2764m CHECKFORSRCDN_155: 
0000209C  4EB9 0000212A           2765m         JSR     NEXT_155
000020A2  0303                    2766m         BTST    D1, D3      
000020A4  6700 002C               2767m         BEQ     SRCDNW_155
000020A8                          2768m SRCDNL_155:        
000020A8  43F8 00C8               2769m         LEA     OLSIZE, A1     
000020AC  103C 000E               2770m         MOVE.B  #14,D0          
000020B0  4E4F                    2771m         TRAP    #15
000020B2  1E3C 0001               2772m         MOVE.B  #$1, D7
000020B6                          2773mm         PRINTDNDEST D3
000020B6  3203                    2774mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020B8  E949                    2775mm         LSL     #$04, D1
000020BA  E049                    2776mm         LSR     #$08, D1
000020BC  EA49                    2777mm         LSR     #$05, D1
000020BE  43F8 00CC               2778mm         LEA     ODN, A1     
000020C2  103C 000E               2779mm         MOVE.B  #14,D0          
000020C6  4E4F                    2780mm         TRAP    #15
000020C8  103C 0003               2781mm         MOVE.B  #3,D0          
000020CC  4E4F                    2782mm         TRAP    #15
000020CE                          2783mm         ENDM
000020CE  6000 005E               2784m         BRA     COMPLETE_155 
000020D2                          2785m SRCDNW_155:
000020D2  4EB9 0000212A           2786m         JSR     NEXT_155
000020D8  0303                    2787m         BTST    D1, D3     
000020DA  6700 0028               2788m         BEQ     SRCDNB_155
000020DE  43F8 00C4               2789m         LEA     OWSIZE, A1     
000020E2  103C 000E               2790m         MOVE.B  #14,D0          
000020E6  4E4F                    2791m         TRAP    #15
000020E8                          2792mm         PRINTDNDEST D3
000020E8  3203                    2793mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020EA  E949                    2794mm         LSL     #$04, D1
000020EC  E049                    2795mm         LSR     #$08, D1
000020EE  EA49                    2796mm         LSR     #$05, D1
000020F0  43F8 00CC               2797mm         LEA     ODN, A1     
000020F4  103C 000E               2798mm         MOVE.B  #14,D0          
000020F8  4E4F                    2799mm         TRAP    #15
000020FA  103C 0003               2800mm         MOVE.B  #3,D0          
000020FE  4E4F                    2801mm         TRAP    #15
00002100                          2802mm         ENDM
00002100  6000 002C               2803m         BRA     COMPLETE_155 
00002104                          2804m SRCDNB_155: 
00002104  43F8 00C0               2805m         LEA     OBSIZE, A1     
00002108  103C 000E               2806m         MOVE.B  #14,D0          
0000210C  4E4F                    2807m         TRAP    #15
0000210E                          2808mm         PRINTDNDEST D3
0000210E  3203                    2809mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002110  E949                    2810mm         LSL     #$04, D1
00002112  E049                    2811mm         LSR     #$08, D1
00002114  EA49                    2812mm         LSR     #$05, D1
00002116  43F8 00CC               2813mm         LEA     ODN, A1     
0000211A  103C 000E               2814mm         MOVE.B  #14,D0          
0000211E  4E4F                    2815mm         TRAP    #15
00002120  103C 0003               2816mm         MOVE.B  #3,D0          
00002124  4E4F                    2817mm         TRAP    #15
00002126                          2818mm         ENDM
00002126  6000 0006               2819m         BRA     COMPLETE_155 
0000212A                          2820m 
0000212A                          2821m NEXT_155:
0000212A  5301                    2822m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000212C  4E75                    2823m         RTS                
0000212E                          2824m 
0000212E                          2825m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
0000212E                          2826m         ENDM
0000212E  BC3C 0001               2827          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002132  6700 05F8               2828          BEQ     decodeAddDestOp
00002136                          2829m         printComma
00002136  43F8 00D4               2830m         LEA     OCOMMA, A1     
0000213A  103C 000E               2831m         MOVE.B  #14,D0          
0000213E  4E4F                    2832m         TRAP    #15
00002140                          2833m         ENDM
00002140                          2834m         prepareAdrMode  #$1, (A2)
00002140  3C3C 0001               2835m         MOVE.W  #$1, D6      ; INPUT VALUE
00002144  3212                    2836m         MOVE.W  (A2), D1
00002146  BC3C 0001               2837m         CMP.B   #$01, D6
0000214A  6700 000C               2838m         BEQ     ADRSOURCE_160    
0000214E                          2839m ADRDEST_160:
0000214E  EF49                    2840m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002150  E049                    2841m         LSR     #$08, D1
00002152  EA49                    2842m         LSR     #$05, D1
00002154  6000 000A               2843m         BRA     COMPLETE_160 
00002158                          2844m ADRSOURCE_160:                
00002158  E149                    2845m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000215A  E549                    2846m         LSL     #$02, D1
0000215C  E049                    2847m         LSR     #$08, D1
0000215E  EA49                    2848m         LSR     #$05, D1
00002160                          2849m COMPLETE_160:  ; OPCODE HAS BEEN VERIFIED
00002160                          2850m         ENDM        
00002160                          2851m         decodeAdrMode   (A2), D1
00002160  3612                    2852m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002162  3201                    2853m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002164                          2854m 
00002164  B23C 0001               2855m         CMP.B   #$01, D1
00002168  6700 0066               2856m         BEQ     ADRREGDIRECT_161    
0000216C  B23C 0002               2857m         CMP.B   #$02, D1
00002170  6700 00A0               2858m         BEQ     ADRREGINDIRECT_161  
00002174  B23C 0003               2859m         CMP.B   #$03, D1
00002178  6700 0102               2860m         BEQ     ADRREGPOSTINC_161  
0000217C  B23C 0004               2861m         CMP.B   #$04, D1
00002180  6700 0178               2862m         BEQ     ADRREGPREDEC_161
00002184  B23C 0007               2863m         CMP.B   #$07, D1
00002188  6700 01EE               2864m         BEQ     ADRABSOLUTE_161    
0000218C                          2865m         
0000218C                          2866m DATAREGDIRECT_161: 
0000218C  BC3C 0001               2867m         CMP.B   #$01, D6
00002190  6700 001E               2868m         BEQ     DATAREGDIRECTSRC_161   
00002194                          2869m DATAREGDIRECTDEST_161: 
00002194                          2870mm         PRINTDNDEST D3 
00002194  3203                    2871mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002196  E949                    2872mm         LSL     #$04, D1
00002198  E049                    2873mm         LSR     #$08, D1
0000219A  EA49                    2874mm         LSR     #$05, D1
0000219C  43F8 00CC               2875mm         LEA     ODN, A1     
000021A0  103C 000E               2876mm         MOVE.B  #14,D0          
000021A4  4E4F                    2877mm         TRAP    #15
000021A6  103C 0003               2878mm         MOVE.B  #3,D0          
000021AA  4E4F                    2879mm         TRAP    #15
000021AC                          2880mm         ENDM
000021AC  6000 057A               2881m         BRA     COMPLETE_161 
000021B0                          2882m DATAREGDIRECTSRC_161: 
000021B0                          2883mm         PRINTDNSRC D3 
000021B0  4281                    2884mm         CLR.L   D1
000021B2  3203                    2885mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021B4  E149                    2886mm         LSL     #$08, D1
000021B6  EB49                    2887mm         LSL     #$05, D1
000021B8  E049                    2888mm         LSR     #$08, D1
000021BA  EA49                    2889mm         LSR     #$05, D1
000021BC  43F8 00CC               2890mm         LEA     ODN, A1     
000021C0  103C 000E               2891mm         MOVE.B  #14,D0          
000021C4  4E4F                    2892mm         TRAP    #15
000021C6  103C 0003               2893mm         MOVE.B  #3,D0          
000021CA  4E4F                    2894mm         TRAP    #15
000021CC                          2895mm         ENDM
000021CC  6000 055A               2896m         BRA     COMPLETE_161   
000021D0                          2897m         
000021D0                          2898m ADRREGDIRECT_161: 
000021D0  BC3C 0001               2899m         CMP.B   #$01, D6
000021D4  6700 001E               2900m         BEQ     ADRREGDIRECTSRC_161   
000021D8                          2901m ADRREGDIRECTDEST_161:
000021D8                          2902mm         PRINTANDEST D3
000021D8  3203                    2903mm         MOVE.W  D3, D1
000021DA  E949                    2904mm         LSL     #$04, D1
000021DC  E049                    2905mm         LSR     #$08, D1
000021DE  EA49                    2906mm         LSR     #$05, D1
000021E0  43F8 00CE               2907mm         LEA     OAN, A1     
000021E4  103C 000E               2908mm         MOVE.B  #14,D0          
000021E8  4E4F                    2909mm         TRAP    #15
000021EA  103C 0003               2910mm         MOVE.B  #3,D0          
000021EE  4E4F                    2911mm         TRAP    #15
000021F0                          2912mm         ENDM
000021F0  6000 0536               2913m         BRA     COMPLETE_161   
000021F4                          2914m ADRREGDIRECTSRC_161:
000021F4                          2915mm         PRINTANSRC D3
000021F4  3203                    2916mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021F6  E149                    2917mm         LSL     #$08, D1
000021F8  EB49                    2918mm         LSL     #$05, D1
000021FA  E049                    2919mm         LSR     #$08, D1
000021FC  EA49                    2920mm         LSR     #$05, D1
000021FE  43F8 00CE               2921mm         LEA     OAN, A1     
00002202  103C 000E               2922mm         MOVE.B  #14,D0          
00002206  4E4F                    2923mm         TRAP    #15
00002208  103C 0003               2924mm         MOVE.B  #3,D0          
0000220C  4E4F                    2925mm         TRAP    #15
0000220E                          2926mm         ENDM
0000220E  6000 0518               2927m         BRA     COMPLETE_161   
00002212                          2928m        
00002212                          2929m ADRREGINDIRECT_161:   
00002212  BC3C 0001               2930m         CMP.B   #$01, D6
00002216  6700 0032               2931m         BEQ     ADRREGINDIRECTSRC_161   
0000221A                          2932m ADRREGINDIRECTDEST_161:
0000221A                          2933mm         PRINTLB
0000221A  43F8 00D0               2934mm         LEA     OLB, A1     
0000221E  103C 000E               2935mm         MOVE.B  #14,D0          
00002222  4E4F                    2936mm         TRAP    #15
00002224                          2937mm         ENDM
00002224                          2938mm         PRINTANDEST D3  
00002224  3203                    2939mm         MOVE.W  D3, D1
00002226  E949                    2940mm         LSL     #$04, D1
00002228  E049                    2941mm         LSR     #$08, D1
0000222A  EA49                    2942mm         LSR     #$05, D1
0000222C  43F8 00CE               2943mm         LEA     OAN, A1     
00002230  103C 000E               2944mm         MOVE.B  #14,D0          
00002234  4E4F                    2945mm         TRAP    #15
00002236  103C 0003               2946mm         MOVE.B  #3,D0          
0000223A  4E4F                    2947mm         TRAP    #15
0000223C                          2948mm         ENDM
0000223C                          2949mm         PRINTRB
0000223C  43F8 00D2               2950mm         LEA     ORB, A1     
00002240  103C 000E               2951mm         MOVE.B  #14,D0          
00002244  4E4F                    2952mm         TRAP    #15
00002246                          2953mm         ENDM
00002246  6000 04E0               2954m         BRA     COMPLETE_161     
0000224A                          2955m ADRREGINDIRECTSRC_161:   
0000224A                          2956mm         PRINTLB
0000224A  43F8 00D0               2957mm         LEA     OLB, A1     
0000224E  103C 000E               2958mm         MOVE.B  #14,D0          
00002252  4E4F                    2959mm         TRAP    #15
00002254                          2960mm         ENDM
00002254                          2961mm         PRINTANSRC D3  
00002254  3203                    2962mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002256  E149                    2963mm         LSL     #$08, D1
00002258  EB49                    2964mm         LSL     #$05, D1
0000225A  E049                    2965mm         LSR     #$08, D1
0000225C  EA49                    2966mm         LSR     #$05, D1
0000225E  43F8 00CE               2967mm         LEA     OAN, A1     
00002262  103C 000E               2968mm         MOVE.B  #14,D0          
00002266  4E4F                    2969mm         TRAP    #15
00002268  103C 0003               2970mm         MOVE.B  #3,D0          
0000226C  4E4F                    2971mm         TRAP    #15
0000226E                          2972mm         ENDM
0000226E                          2973mm         PRINTRB
0000226E  43F8 00D2               2974mm         LEA     ORB, A1     
00002272  103C 000E               2975mm         MOVE.B  #14,D0          
00002276  4E4F                    2976mm         TRAP    #15
00002278                          2977mm         ENDM
00002278  6000 04AE               2978m         BRA     COMPLETE_161   
0000227C                          2979m         
0000227C                          2980m ADRREGPOSTINC_161:   
0000227C  BC3C 0001               2981m         CMP.B   #$01, D6
00002280  6700 003C               2982m         BEQ     ADRREGPOSTINCSRC_161   
00002284                          2983m ADRREGPOSTINCDEST_161: 
00002284                          2984mm         PRINTLB
00002284  43F8 00D0               2985mm         LEA     OLB, A1     
00002288  103C 000E               2986mm         MOVE.B  #14,D0          
0000228C  4E4F                    2987mm         TRAP    #15
0000228E                          2988mm         ENDM
0000228E                          2989mm         PRINTANDEST D3  
0000228E  3203                    2990mm         MOVE.W  D3, D1
00002290  E949                    2991mm         LSL     #$04, D1
00002292  E049                    2992mm         LSR     #$08, D1
00002294  EA49                    2993mm         LSR     #$05, D1
00002296  43F8 00CE               2994mm         LEA     OAN, A1     
0000229A  103C 000E               2995mm         MOVE.B  #14,D0          
0000229E  4E4F                    2996mm         TRAP    #15
000022A0  103C 0003               2997mm         MOVE.B  #3,D0          
000022A4  4E4F                    2998mm         TRAP    #15
000022A6                          2999mm         ENDM
000022A6                          3000mm         PRINTRB
000022A6  43F8 00D2               3001mm         LEA     ORB, A1     
000022AA  103C 000E               3002mm         MOVE.B  #14,D0          
000022AE  4E4F                    3003mm         TRAP    #15
000022B0                          3004mm         ENDM
000022B0                          3005mm         PRINTPI
000022B0  43F8 00D9               3006mm         LEA     OPSTINC, A1     
000022B4  103C 000E               3007mm         MOVE.B  #14,D0          
000022B8  4E4F                    3008mm         TRAP    #15
000022BA                          3009mm         ENDM
000022BA  6000 046C               3010m         BRA     COMPLETE_161  
000022BE                          3011m ADRREGPOSTINCSRC_161:           
000022BE                          3012mm         PRINTLB
000022BE  43F8 00D0               3013mm         LEA     OLB, A1     
000022C2  103C 000E               3014mm         MOVE.B  #14,D0          
000022C6  4E4F                    3015mm         TRAP    #15
000022C8                          3016mm         ENDM
000022C8                          3017mm         PRINTANSRC D3  
000022C8  3203                    3018mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000022CA  E149                    3019mm         LSL     #$08, D1
000022CC  EB49                    3020mm         LSL     #$05, D1
000022CE  E049                    3021mm         LSR     #$08, D1
000022D0  EA49                    3022mm         LSR     #$05, D1
000022D2  43F8 00CE               3023mm         LEA     OAN, A1     
000022D6  103C 000E               3024mm         MOVE.B  #14,D0          
000022DA  4E4F                    3025mm         TRAP    #15
000022DC  103C 0003               3026mm         MOVE.B  #3,D0          
000022E0  4E4F                    3027mm         TRAP    #15
000022E2                          3028mm         ENDM
000022E2                          3029mm         PRINTRB
000022E2  43F8 00D2               3030mm         LEA     ORB, A1     
000022E6  103C 000E               3031mm         MOVE.B  #14,D0          
000022EA  4E4F                    3032mm         TRAP    #15
000022EC                          3033mm         ENDM
000022EC                          3034mm         PRINTPI
000022EC  43F8 00D9               3035mm         LEA     OPSTINC, A1     
000022F0  103C 000E               3036mm         MOVE.B  #14,D0          
000022F4  4E4F                    3037mm         TRAP    #15
000022F6                          3038mm         ENDM
000022F6  6000 0430               3039m         BRA     COMPLETE_161  
000022FA                          3040m ADRREGPREDEC_161: 
000022FA  BC3C 0001               3041m         CMP.B   #$01, D6
000022FE  6700 003C               3042m         BEQ     ADRREGPREDECSRC_161   
00002302                          3043m ADRREGPREDECDEST_161:
00002302                          3044mm         PRINTPD  
00002302  43F8 00D7               3045mm         LEA     OPREDEC, A1     
00002306  103C 000E               3046mm         MOVE.B  #14,D0          
0000230A  4E4F                    3047mm         TRAP    #15
0000230C                          3048mm         ENDM
0000230C                          3049mm         PRINTLB
0000230C  43F8 00D0               3050mm         LEA     OLB, A1     
00002310  103C 000E               3051mm         MOVE.B  #14,D0          
00002314  4E4F                    3052mm         TRAP    #15
00002316                          3053mm         ENDM
00002316                          3054mm         PRINTANDEST D3  
00002316  3203                    3055mm         MOVE.W  D3, D1
00002318  E949                    3056mm         LSL     #$04, D1
0000231A  E049                    3057mm         LSR     #$08, D1
0000231C  EA49                    3058mm         LSR     #$05, D1
0000231E  43F8 00CE               3059mm         LEA     OAN, A1     
00002322  103C 000E               3060mm         MOVE.B  #14,D0          
00002326  4E4F                    3061mm         TRAP    #15
00002328  103C 0003               3062mm         MOVE.B  #3,D0          
0000232C  4E4F                    3063mm         TRAP    #15
0000232E                          3064mm         ENDM
0000232E                          3065mm         PRINTRB
0000232E  43F8 00D2               3066mm         LEA     ORB, A1     
00002332  103C 000E               3067mm         MOVE.B  #14,D0          
00002336  4E4F                    3068mm         TRAP    #15
00002338                          3069mm         ENDM
00002338  6000 03EE               3070m         BRA     COMPLETE_161   
0000233C                          3071m ADRREGPREDECSRC_161: 
0000233C                          3072mm         PRINTPD  
0000233C  43F8 00D7               3073mm         LEA     OPREDEC, A1     
00002340  103C 000E               3074mm         MOVE.B  #14,D0          
00002344  4E4F                    3075mm         TRAP    #15
00002346                          3076mm         ENDM
00002346                          3077mm         PRINTLB
00002346  43F8 00D0               3078mm         LEA     OLB, A1     
0000234A  103C 000E               3079mm         MOVE.B  #14,D0          
0000234E  4E4F                    3080mm         TRAP    #15
00002350                          3081mm         ENDM
00002350                          3082mm         PRINTANSRC D3  
00002350  3203                    3083mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002352  E149                    3084mm         LSL     #$08, D1
00002354  EB49                    3085mm         LSL     #$05, D1
00002356  E049                    3086mm         LSR     #$08, D1
00002358  EA49                    3087mm         LSR     #$05, D1
0000235A  43F8 00CE               3088mm         LEA     OAN, A1     
0000235E  103C 000E               3089mm         MOVE.B  #14,D0          
00002362  4E4F                    3090mm         TRAP    #15
00002364  103C 0003               3091mm         MOVE.B  #3,D0          
00002368  4E4F                    3092mm         TRAP    #15
0000236A                          3093mm         ENDM
0000236A                          3094mm         PRINTRB
0000236A  43F8 00D2               3095mm         LEA     ORB, A1     
0000236E  103C 000E               3096mm         MOVE.B  #14,D0          
00002372  4E4F                    3097mm         TRAP    #15
00002374                          3098mm         ENDM
00002374  6000 03B2               3099m         BRA     COMPLETE_161
00002378                          3100m        
00002378                          3101m ADRABSOLUTE_161:
00002378  BC3C 0001               3102m         CMP.B   #$01, D6
0000237C  6600 0018               3103m         BNE     ADRABSOLUTEDST_161 
00002380                          3104m         
00002380  3A03                    3105m         MOVE.W  D3, D5
00002382  0803 0002               3106m         BTST    #2, D3
00002386  6600 0024               3107m         BNE     ADRIMMEDIATE_161
0000238A  0803 0000               3108m         BTST    #0, D3
0000238E  6600 0280               3109m         BNE     ADRABSOLUTEL_161
00002392  6000 01E6               3110m         BRA     ADRABSOLUTEW_161
00002396                          3111m ADRABSOLUTEDST_161:
00002396  3A03                    3112m         MOVE.W  D3, D5
00002398  0803 000B               3113m         BTST    #$B, D3
0000239C  6600 000E               3114m         BNE     ADRIMMEDIATE_161
000023A0  0803 0009               3115m         BTST    #$09, D3
000023A4  6600 026A               3116m         BNE     ADRABSOLUTEL_161
000023A8  6000 01D0               3117m         BRA     ADRABSOLUTEW_161
000023AC                          3118m ADRIMMEDIATE_161:
000023AC  BE3C 0001               3119m         CMP.B   #1, D7
000023B0  6700 00A2               3120m         BEQ     ADRIMMEDIATEL_161
000023B4                          3121m ADRIMMEDIATEW_161:
000023B4  361A                    3122m         MOVE.W  (A2)+, D3
000023B6                          3123mm         PRINTHASH
000023B6  103C 0006               3124mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023BA  323C 0023               3125mm         MOVE.W  #35, D1     ; AN = SIGN
000023BE  4E4F                    3126mm         TRAP    #15         ; OUTPUT = SIGN
000023C0                          3127mm         ENDM
000023C0                          3128mm         PRINTSIGN
000023C0  103C 0006               3129mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023C4  323C 0024               3130mm         MOVE.W  #36, D1     ; AN = SIGN
000023C8  4E4F                    3131mm         TRAP    #15         ; OUTPUT = SIGN
000023CA                          3132mm         ENDM
000023CA                          3133mm         ADROUT
000023CA  103C 0006               3134mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000023CE  3212                    3135mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023D0  E049                    3136mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023D2  E849                    3137mm         LSR.W   #4, D1      
000023D4                          3138mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023D4  0C01 0009               3139mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023D8  6E00 000A               3140mmm         BGT     ALPHA_191
000023DC  0601 0030               3141mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023E0  6000 0006               3142mmm         BRA     DONE_191
000023E4  0601 0037               3143mmm ALPHA_191: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023E8  4E71                    3144mmm DONE_191: NOP
000023EA                          3145mmm         ENDM
000023EA  4E4F                    3146mm         TRAP    #15         ; EXECUTE OUTPUT
000023EC                          3147mm         
000023EC  3212                    3148mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023EE  E949                    3149mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023F0  E049                    3150mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023F2  E849                    3151mm         LSR.W   #4, D1      
000023F4                          3152mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023F4  0C01 0009               3153mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023F8  6E00 000A               3154mmm         BGT     ALPHA_192
000023FC  0601 0030               3155mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002400  6000 0006               3156mmm         BRA     DONE_192
00002404  0601 0037               3157mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002408  4E71                    3158mmm DONE_192: NOP
0000240A                          3159mmm         ENDM
0000240A  4E4F                    3160mm         TRAP    #15         ; EXECUTE OUTPUT
0000240C                          3161mm         
0000240C  3212                    3162mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000240E  E149                    3163mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002410  E049                    3164mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002412  E849                    3165mm         LSR.W   #4, D1      
00002414                          3166mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002414  0C01 0009               3167mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002418  6E00 000A               3168mmm         BGT     ALPHA_193
0000241C  0601 0030               3169mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002420  6000 0006               3170mmm         BRA     DONE_193
00002424  0601 0037               3171mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002428  4E71                    3172mmm DONE_193: NOP
0000242A                          3173mmm         ENDM
0000242A  4E4F                    3174mm         TRAP    #15         ; EXECUTE OUTPUT
0000242C                          3175mm         
0000242C  3212                    3176mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000242E  E149                    3177mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002430  E949                    3178mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002432  E049                    3179mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002434  E849                    3180mm         LSR.W   #4, D1      
00002436                          3181mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002436  0C01 0009               3182mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000243A  6E00 000A               3183mmm         BGT     ALPHA_194
0000243E  0601 0030               3184mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002442  6000 0006               3185mmm         BRA     DONE_194
00002446  0601 0037               3186mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000244A  4E71                    3187mmm DONE_194: NOP
0000244C                          3188mmm         ENDM
0000244C  4E4F                    3189mm         TRAP    #15         ; EXECUTE OUTPUT       
0000244E                          3190mm         ENDM 
0000244E  3605                    3191m         MOVE.W  D5, D3
00002450  6000 02D6               3192m         BRA     COMPLETE_161
00002454                          3193m ADRIMMEDIATEL_161:
00002454  361A                    3194m         MOVE.W  (A2)+, D3
00002456                          3195mm         PRINTHASH
00002456  103C 0006               3196mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000245A  323C 0023               3197mm         MOVE.W  #35, D1     ; AN = SIGN
0000245E  4E4F                    3198mm         TRAP    #15         ; OUTPUT = SIGN
00002460                          3199mm         ENDM
00002460                          3200mm         PRINTSIGN
00002460  103C 0006               3201mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002464  323C 0024               3202mm         MOVE.W  #36, D1     ; AN = SIGN
00002468  4E4F                    3203mm         TRAP    #15         ; OUTPUT = SIGN
0000246A                          3204mm         ENDM
0000246A                          3205mm         ADROUT 
0000246A  103C 0006               3206mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000246E  3212                    3207mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002470  E049                    3208mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002472  E849                    3209mm         LSR.W   #4, D1      
00002474                          3210mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002474  0C01 0009               3211mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002478  6E00 000A               3212mmm         BGT     ALPHA_198
0000247C  0601 0030               3213mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002480  6000 0006               3214mmm         BRA     DONE_198
00002484  0601 0037               3215mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002488  4E71                    3216mmm DONE_198: NOP
0000248A                          3217mmm         ENDM
0000248A  4E4F                    3218mm         TRAP    #15         ; EXECUTE OUTPUT
0000248C                          3219mm         
0000248C  3212                    3220mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000248E  E949                    3221mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002490  E049                    3222mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002492  E849                    3223mm         LSR.W   #4, D1      
00002494                          3224mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002494  0C01 0009               3225mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002498  6E00 000A               3226mmm         BGT     ALPHA_199
0000249C  0601 0030               3227mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024A0  6000 0006               3228mmm         BRA     DONE_199
000024A4  0601 0037               3229mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024A8  4E71                    3230mmm DONE_199: NOP
000024AA                          3231mmm         ENDM
000024AA  4E4F                    3232mm         TRAP    #15         ; EXECUTE OUTPUT
000024AC                          3233mm         
000024AC  3212                    3234mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024AE  E149                    3235mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024B0  E049                    3236mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024B2  E849                    3237mm         LSR.W   #4, D1      
000024B4                          3238mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024B4  0C01 0009               3239mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024B8  6E00 000A               3240mmm         BGT     ALPHA_200
000024BC  0601 0030               3241mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024C0  6000 0006               3242mmm         BRA     DONE_200
000024C4  0601 0037               3243mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024C8  4E71                    3244mmm DONE_200: NOP
000024CA                          3245mmm         ENDM
000024CA  4E4F                    3246mm         TRAP    #15         ; EXECUTE OUTPUT
000024CC                          3247mm         
000024CC  3212                    3248mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024CE  E149                    3249mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024D0  E949                    3250mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024D2  E049                    3251mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024D4  E849                    3252mm         LSR.W   #4, D1      
000024D6                          3253mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024D6  0C01 0009               3254mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024DA  6E00 000A               3255mmm         BGT     ALPHA_201
000024DE  0601 0030               3256mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024E2  6000 0006               3257mmm         BRA     DONE_201
000024E6  0601 0037               3258mmm ALPHA_201: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024EA  4E71                    3259mmm DONE_201: NOP
000024EC                          3260mmm         ENDM
000024EC  4E4F                    3261mm         TRAP    #15         ; EXECUTE OUTPUT       
000024EE                          3262mm         ENDM 
000024EE  361A                    3263m         MOVE.W  (A2)+, D3
000024F0                          3264mm         ADROUT
000024F0  103C 0006               3265mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000024F4  3212                    3266mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024F6  E049                    3267mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024F8  E849                    3268mm         LSR.W   #4, D1      
000024FA                          3269mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024FA  0C01 0009               3270mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024FE  6E00 000A               3271mmm         BGT     ALPHA_203
00002502  0601 0030               3272mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002506  6000 0006               3273mmm         BRA     DONE_203
0000250A  0601 0037               3274mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000250E  4E71                    3275mmm DONE_203: NOP
00002510                          3276mmm         ENDM
00002510  4E4F                    3277mm         TRAP    #15         ; EXECUTE OUTPUT
00002512                          3278mm         
00002512  3212                    3279mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002514  E949                    3280mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002516  E049                    3281mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002518  E849                    3282mm         LSR.W   #4, D1      
0000251A                          3283mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000251A  0C01 0009               3284mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000251E  6E00 000A               3285mmm         BGT     ALPHA_204
00002522  0601 0030               3286mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002526  6000 0006               3287mmm         BRA     DONE_204
0000252A  0601 0037               3288mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000252E  4E71                    3289mmm DONE_204: NOP
00002530                          3290mmm         ENDM
00002530  4E4F                    3291mm         TRAP    #15         ; EXECUTE OUTPUT
00002532                          3292mm         
00002532  3212                    3293mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002534  E149                    3294mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002536  E049                    3295mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002538  E849                    3296mm         LSR.W   #4, D1      
0000253A                          3297mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000253A  0C01 0009               3298mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000253E  6E00 000A               3299mmm         BGT     ALPHA_205
00002542  0601 0030               3300mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002546  6000 0006               3301mmm         BRA     DONE_205
0000254A  0601 0037               3302mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000254E  4E71                    3303mmm DONE_205: NOP
00002550                          3304mmm         ENDM
00002550  4E4F                    3305mm         TRAP    #15         ; EXECUTE OUTPUT
00002552                          3306mm         
00002552  3212                    3307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002554  E149                    3308mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002556  E949                    3309mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002558  E049                    3310mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000255A  E849                    3311mm         LSR.W   #4, D1      
0000255C                          3312mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000255C  0C01 0009               3313mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002560  6E00 000A               3314mmm         BGT     ALPHA_206
00002564  0601 0030               3315mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002568  6000 0006               3316mmm         BRA     DONE_206
0000256C  0601 0037               3317mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002570  4E71                    3318mmm DONE_206: NOP
00002572                          3319mmm         ENDM
00002572  4E4F                    3320mm         TRAP    #15         ; EXECUTE OUTPUT       
00002574                          3321mm         ENDM 
00002574  3605                    3322m         MOVE.W  D5, D3
00002576  6000 01B0               3323m         BRA     COMPLETE_161 
0000257A                          3324m ADRABSOLUTEW_161:     
0000257A  361A                    3325m         MOVE.W  (A2)+, D3
0000257C                          3326mm         PRINTSIGN
0000257C  103C 0006               3327mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002580  323C 0024               3328mm         MOVE.W  #36, D1     ; AN = SIGN
00002584  4E4F                    3329mm         TRAP    #15         ; OUTPUT = SIGN
00002586                          3330mm         ENDM
00002586                          3331mm         ADROUT
00002586  103C 0006               3332mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000258A  3212                    3333mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000258C  E049                    3334mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000258E  E849                    3335mm         LSR.W   #4, D1      
00002590                          3336mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002590  0C01 0009               3337mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002594  6E00 000A               3338mmm         BGT     ALPHA_209
00002598  0601 0030               3339mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000259C  6000 0006               3340mmm         BRA     DONE_209
000025A0  0601 0037               3341mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025A4  4E71                    3342mmm DONE_209: NOP
000025A6                          3343mmm         ENDM
000025A6  4E4F                    3344mm         TRAP    #15         ; EXECUTE OUTPUT
000025A8                          3345mm         
000025A8  3212                    3346mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025AA  E949                    3347mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025AC  E049                    3348mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025AE  E849                    3349mm         LSR.W   #4, D1      
000025B0                          3350mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025B0  0C01 0009               3351mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025B4  6E00 000A               3352mmm         BGT     ALPHA_210
000025B8  0601 0030               3353mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025BC  6000 0006               3354mmm         BRA     DONE_210
000025C0  0601 0037               3355mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025C4  4E71                    3356mmm DONE_210: NOP
000025C6                          3357mmm         ENDM
000025C6  4E4F                    3358mm         TRAP    #15         ; EXECUTE OUTPUT
000025C8                          3359mm         
000025C8  3212                    3360mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025CA  E149                    3361mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025CC  E049                    3362mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025CE  E849                    3363mm         LSR.W   #4, D1      
000025D0                          3364mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025D0  0C01 0009               3365mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025D4  6E00 000A               3366mmm         BGT     ALPHA_211
000025D8  0601 0030               3367mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025DC  6000 0006               3368mmm         BRA     DONE_211
000025E0  0601 0037               3369mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025E4  4E71                    3370mmm DONE_211: NOP
000025E6                          3371mmm         ENDM
000025E6  4E4F                    3372mm         TRAP    #15         ; EXECUTE OUTPUT
000025E8                          3373mm         
000025E8  3212                    3374mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025EA  E149                    3375mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025EC  E949                    3376mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000025EE  E049                    3377mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025F0  E849                    3378mm         LSR.W   #4, D1      
000025F2                          3379mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025F2  0C01 0009               3380mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025F6  6E00 000A               3381mmm         BGT     ALPHA_212
000025FA  0601 0030               3382mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025FE  6000 0006               3383mmm         BRA     DONE_212
00002602  0601 0037               3384mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002606  4E71                    3385mmm DONE_212: NOP
00002608                          3386mmm         ENDM
00002608  4E4F                    3387mm         TRAP    #15         ; EXECUTE OUTPUT       
0000260A                          3388mm         ENDM 
0000260A  3605                    3389m         MOVE.W  D5, D3
0000260C  6000 011A               3390m         BRA     COMPLETE_161  
00002610                          3391m ADRABSOLUTEL_161:  
00002610  361A                    3392m         MOVE.W  (A2)+, D3
00002612                          3393mm         PRINTSIGN
00002612  103C 0006               3394mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002616  323C 0024               3395mm         MOVE.W  #36, D1     ; AN = SIGN
0000261A  4E4F                    3396mm         TRAP    #15         ; OUTPUT = SIGN
0000261C                          3397mm         ENDM
0000261C                          3398mm         ADROUT 
0000261C  103C 0006               3399mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002620  3212                    3400mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002622  E049                    3401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002624  E849                    3402mm         LSR.W   #4, D1      
00002626                          3403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002626  0C01 0009               3404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000262A  6E00 000A               3405mmm         BGT     ALPHA_215
0000262E  0601 0030               3406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002632  6000 0006               3407mmm         BRA     DONE_215
00002636  0601 0037               3408mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000263A  4E71                    3409mmm DONE_215: NOP
0000263C                          3410mmm         ENDM
0000263C  4E4F                    3411mm         TRAP    #15         ; EXECUTE OUTPUT
0000263E                          3412mm         
0000263E  3212                    3413mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002640  E949                    3414mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002642  E049                    3415mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002644  E849                    3416mm         LSR.W   #4, D1      
00002646                          3417mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002646  0C01 0009               3418mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000264A  6E00 000A               3419mmm         BGT     ALPHA_216
0000264E  0601 0030               3420mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002652  6000 0006               3421mmm         BRA     DONE_216
00002656  0601 0037               3422mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000265A  4E71                    3423mmm DONE_216: NOP
0000265C                          3424mmm         ENDM
0000265C  4E4F                    3425mm         TRAP    #15         ; EXECUTE OUTPUT
0000265E                          3426mm         
0000265E  3212                    3427mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002660  E149                    3428mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002662  E049                    3429mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002664  E849                    3430mm         LSR.W   #4, D1      
00002666                          3431mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002666  0C01 0009               3432mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000266A  6E00 000A               3433mmm         BGT     ALPHA_217
0000266E  0601 0030               3434mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002672  6000 0006               3435mmm         BRA     DONE_217
00002676  0601 0037               3436mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000267A  4E71                    3437mmm DONE_217: NOP
0000267C                          3438mmm         ENDM
0000267C  4E4F                    3439mm         TRAP    #15         ; EXECUTE OUTPUT
0000267E                          3440mm         
0000267E  3212                    3441mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002680  E149                    3442mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002682  E949                    3443mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002684  E049                    3444mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002686  E849                    3445mm         LSR.W   #4, D1      
00002688                          3446mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002688  0C01 0009               3447mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000268C  6E00 000A               3448mmm         BGT     ALPHA_218
00002690  0601 0030               3449mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002694  6000 0006               3450mmm         BRA     DONE_218
00002698  0601 0037               3451mmm ALPHA_218: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000269C  4E71                    3452mmm DONE_218: NOP
0000269E                          3453mmm         ENDM
0000269E  4E4F                    3454mm         TRAP    #15         ; EXECUTE OUTPUT       
000026A0                          3455mm         ENDM 
000026A0  361A                    3456m         MOVE.W  (A2)+, D3
000026A2                          3457mm         ADROUT
000026A2  103C 0006               3458mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000026A6  3212                    3459mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026A8  E049                    3460mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026AA  E849                    3461mm         LSR.W   #4, D1      
000026AC                          3462mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026AC  0C01 0009               3463mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026B0  6E00 000A               3464mmm         BGT     ALPHA_220
000026B4  0601 0030               3465mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026B8  6000 0006               3466mmm         BRA     DONE_220
000026BC  0601 0037               3467mmm ALPHA_220: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026C0  4E71                    3468mmm DONE_220: NOP
000026C2                          3469mmm         ENDM
000026C2  4E4F                    3470mm         TRAP    #15         ; EXECUTE OUTPUT
000026C4                          3471mm         
000026C4  3212                    3472mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026C6  E949                    3473mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000026C8  E049                    3474mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026CA  E849                    3475mm         LSR.W   #4, D1      
000026CC                          3476mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026CC  0C01 0009               3477mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026D0  6E00 000A               3478mmm         BGT     ALPHA_221
000026D4  0601 0030               3479mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026D8  6000 0006               3480mmm         BRA     DONE_221
000026DC  0601 0037               3481mmm ALPHA_221: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026E0  4E71                    3482mmm DONE_221: NOP
000026E2                          3483mmm         ENDM
000026E2  4E4F                    3484mm         TRAP    #15         ; EXECUTE OUTPUT
000026E4                          3485mm         
000026E4  3212                    3486mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026E6  E149                    3487mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000026E8  E049                    3488mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026EA  E849                    3489mm         LSR.W   #4, D1      
000026EC                          3490mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026EC  0C01 0009               3491mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026F0  6E00 000A               3492mmm         BGT     ALPHA_222
000026F4  0601 0030               3493mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026F8  6000 0006               3494mmm         BRA     DONE_222
000026FC  0601 0037               3495mmm ALPHA_222: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002700  4E71                    3496mmm DONE_222: NOP
00002702                          3497mmm         ENDM
00002702  4E4F                    3498mm         TRAP    #15         ; EXECUTE OUTPUT
00002704                          3499mm         
00002704  3212                    3500mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002706  E149                    3501mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002708  E949                    3502mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000270A  E049                    3503mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000270C  E849                    3504mm         LSR.W   #4, D1      
0000270E                          3505mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000270E  0C01 0009               3506mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002712  6E00 000A               3507mmm         BGT     ALPHA_223
00002716  0601 0030               3508mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000271A  6000 0006               3509mmm         BRA     DONE_223
0000271E  0601 0037               3510mmm ALPHA_223: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002722  4E71                    3511mmm DONE_223: NOP
00002724                          3512mmm         ENDM
00002724  4E4F                    3513mm         TRAP    #15         ; EXECUTE OUTPUT       
00002726                          3514mm         ENDM 
00002726  3605                    3515m         MOVE.W  D5, D3
00002728                          3516m 
00002728                          3517m COMPLETE_161:  ; OPCODE HAS BEEN VERIFIED
00002728                          3518m         ENDM
00002728  6000 060C               3519          BRA     decodeADDcomp
0000272C                          3520  decodeAddDestOp:
0000272C                          3521m         prepareAdrMode  #$1,(A2)
0000272C  3C3C 0001               3522m         MOVE.W  #$1, D6      ; INPUT VALUE
00002730  3212                    3523m         MOVE.W  (A2), D1
00002732  BC3C 0001               3524m         CMP.B   #$01, D6
00002736  6700 000C               3525m         BEQ     ADRSOURCE_224    
0000273A                          3526m ADRDEST_224:
0000273A  EF49                    3527m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000273C  E049                    3528m         LSR     #$08, D1
0000273E  EA49                    3529m         LSR     #$05, D1
00002740  6000 000A               3530m         BRA     COMPLETE_224 
00002744                          3531m ADRSOURCE_224:                
00002744  E149                    3532m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002746  E549                    3533m         LSL     #$02, D1
00002748  E049                    3534m         LSR     #$08, D1
0000274A  EA49                    3535m         LSR     #$05, D1
0000274C                          3536m COMPLETE_224:  ; OPCODE HAS BEEN VERIFIED
0000274C                          3537m         ENDM        
0000274C                          3538m         decodeAdrMode   (A2), D1
0000274C  3612                    3539m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000274E  3201                    3540m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002750                          3541m 
00002750  B23C 0001               3542m         CMP.B   #$01, D1
00002754  6700 0066               3543m         BEQ     ADRREGDIRECT_225    
00002758  B23C 0002               3544m         CMP.B   #$02, D1
0000275C  6700 00A0               3545m         BEQ     ADRREGINDIRECT_225  
00002760  B23C 0003               3546m         CMP.B   #$03, D1
00002764  6700 0102               3547m         BEQ     ADRREGPOSTINC_225  
00002768  B23C 0004               3548m         CMP.B   #$04, D1
0000276C  6700 0178               3549m         BEQ     ADRREGPREDEC_225
00002770  B23C 0007               3550m         CMP.B   #$07, D1
00002774  6700 01EE               3551m         BEQ     ADRABSOLUTE_225    
00002778                          3552m         
00002778                          3553m DATAREGDIRECT_225: 
00002778  BC3C 0001               3554m         CMP.B   #$01, D6
0000277C  6700 001E               3555m         BEQ     DATAREGDIRECTSRC_225   
00002780                          3556m DATAREGDIRECTDEST_225: 
00002780                          3557mm         PRINTDNDEST D3 
00002780  3203                    3558mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002782  E949                    3559mm         LSL     #$04, D1
00002784  E049                    3560mm         LSR     #$08, D1
00002786  EA49                    3561mm         LSR     #$05, D1
00002788  43F8 00CC               3562mm         LEA     ODN, A1     
0000278C  103C 000E               3563mm         MOVE.B  #14,D0          
00002790  4E4F                    3564mm         TRAP    #15
00002792  103C 0003               3565mm         MOVE.B  #3,D0          
00002796  4E4F                    3566mm         TRAP    #15
00002798                          3567mm         ENDM
00002798  6000 057A               3568m         BRA     COMPLETE_225 
0000279C                          3569m DATAREGDIRECTSRC_225: 
0000279C                          3570mm         PRINTDNSRC D3 
0000279C  4281                    3571mm         CLR.L   D1
0000279E  3203                    3572mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027A0  E149                    3573mm         LSL     #$08, D1
000027A2  EB49                    3574mm         LSL     #$05, D1
000027A4  E049                    3575mm         LSR     #$08, D1
000027A6  EA49                    3576mm         LSR     #$05, D1
000027A8  43F8 00CC               3577mm         LEA     ODN, A1     
000027AC  103C 000E               3578mm         MOVE.B  #14,D0          
000027B0  4E4F                    3579mm         TRAP    #15
000027B2  103C 0003               3580mm         MOVE.B  #3,D0          
000027B6  4E4F                    3581mm         TRAP    #15
000027B8                          3582mm         ENDM
000027B8  6000 055A               3583m         BRA     COMPLETE_225   
000027BC                          3584m         
000027BC                          3585m ADRREGDIRECT_225: 
000027BC  BC3C 0001               3586m         CMP.B   #$01, D6
000027C0  6700 001E               3587m         BEQ     ADRREGDIRECTSRC_225   
000027C4                          3588m ADRREGDIRECTDEST_225:
000027C4                          3589mm         PRINTANDEST D3
000027C4  3203                    3590mm         MOVE.W  D3, D1
000027C6  E949                    3591mm         LSL     #$04, D1
000027C8  E049                    3592mm         LSR     #$08, D1
000027CA  EA49                    3593mm         LSR     #$05, D1
000027CC  43F8 00CE               3594mm         LEA     OAN, A1     
000027D0  103C 000E               3595mm         MOVE.B  #14,D0          
000027D4  4E4F                    3596mm         TRAP    #15
000027D6  103C 0003               3597mm         MOVE.B  #3,D0          
000027DA  4E4F                    3598mm         TRAP    #15
000027DC                          3599mm         ENDM
000027DC  6000 0536               3600m         BRA     COMPLETE_225   
000027E0                          3601m ADRREGDIRECTSRC_225:
000027E0                          3602mm         PRINTANSRC D3
000027E0  3203                    3603mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027E2  E149                    3604mm         LSL     #$08, D1
000027E4  EB49                    3605mm         LSL     #$05, D1
000027E6  E049                    3606mm         LSR     #$08, D1
000027E8  EA49                    3607mm         LSR     #$05, D1
000027EA  43F8 00CE               3608mm         LEA     OAN, A1     
000027EE  103C 000E               3609mm         MOVE.B  #14,D0          
000027F2  4E4F                    3610mm         TRAP    #15
000027F4  103C 0003               3611mm         MOVE.B  #3,D0          
000027F8  4E4F                    3612mm         TRAP    #15
000027FA                          3613mm         ENDM
000027FA  6000 0518               3614m         BRA     COMPLETE_225   
000027FE                          3615m        
000027FE                          3616m ADRREGINDIRECT_225:   
000027FE  BC3C 0001               3617m         CMP.B   #$01, D6
00002802  6700 0032               3618m         BEQ     ADRREGINDIRECTSRC_225   
00002806                          3619m ADRREGINDIRECTDEST_225:
00002806                          3620mm         PRINTLB
00002806  43F8 00D0               3621mm         LEA     OLB, A1     
0000280A  103C 000E               3622mm         MOVE.B  #14,D0          
0000280E  4E4F                    3623mm         TRAP    #15
00002810                          3624mm         ENDM
00002810                          3625mm         PRINTANDEST D3  
00002810  3203                    3626mm         MOVE.W  D3, D1
00002812  E949                    3627mm         LSL     #$04, D1
00002814  E049                    3628mm         LSR     #$08, D1
00002816  EA49                    3629mm         LSR     #$05, D1
00002818  43F8 00CE               3630mm         LEA     OAN, A1     
0000281C  103C 000E               3631mm         MOVE.B  #14,D0          
00002820  4E4F                    3632mm         TRAP    #15
00002822  103C 0003               3633mm         MOVE.B  #3,D0          
00002826  4E4F                    3634mm         TRAP    #15
00002828                          3635mm         ENDM
00002828                          3636mm         PRINTRB
00002828  43F8 00D2               3637mm         LEA     ORB, A1     
0000282C  103C 000E               3638mm         MOVE.B  #14,D0          
00002830  4E4F                    3639mm         TRAP    #15
00002832                          3640mm         ENDM
00002832  6000 04E0               3641m         BRA     COMPLETE_225     
00002836                          3642m ADRREGINDIRECTSRC_225:   
00002836                          3643mm         PRINTLB
00002836  43F8 00D0               3644mm         LEA     OLB, A1     
0000283A  103C 000E               3645mm         MOVE.B  #14,D0          
0000283E  4E4F                    3646mm         TRAP    #15
00002840                          3647mm         ENDM
00002840                          3648mm         PRINTANSRC D3  
00002840  3203                    3649mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002842  E149                    3650mm         LSL     #$08, D1
00002844  EB49                    3651mm         LSL     #$05, D1
00002846  E049                    3652mm         LSR     #$08, D1
00002848  EA49                    3653mm         LSR     #$05, D1
0000284A  43F8 00CE               3654mm         LEA     OAN, A1     
0000284E  103C 000E               3655mm         MOVE.B  #14,D0          
00002852  4E4F                    3656mm         TRAP    #15
00002854  103C 0003               3657mm         MOVE.B  #3,D0          
00002858  4E4F                    3658mm         TRAP    #15
0000285A                          3659mm         ENDM
0000285A                          3660mm         PRINTRB
0000285A  43F8 00D2               3661mm         LEA     ORB, A1     
0000285E  103C 000E               3662mm         MOVE.B  #14,D0          
00002862  4E4F                    3663mm         TRAP    #15
00002864                          3664mm         ENDM
00002864  6000 04AE               3665m         BRA     COMPLETE_225   
00002868                          3666m         
00002868                          3667m ADRREGPOSTINC_225:   
00002868  BC3C 0001               3668m         CMP.B   #$01, D6
0000286C  6700 003C               3669m         BEQ     ADRREGPOSTINCSRC_225   
00002870                          3670m ADRREGPOSTINCDEST_225: 
00002870                          3671mm         PRINTLB
00002870  43F8 00D0               3672mm         LEA     OLB, A1     
00002874  103C 000E               3673mm         MOVE.B  #14,D0          
00002878  4E4F                    3674mm         TRAP    #15
0000287A                          3675mm         ENDM
0000287A                          3676mm         PRINTANDEST D3  
0000287A  3203                    3677mm         MOVE.W  D3, D1
0000287C  E949                    3678mm         LSL     #$04, D1
0000287E  E049                    3679mm         LSR     #$08, D1
00002880  EA49                    3680mm         LSR     #$05, D1
00002882  43F8 00CE               3681mm         LEA     OAN, A1     
00002886  103C 000E               3682mm         MOVE.B  #14,D0          
0000288A  4E4F                    3683mm         TRAP    #15
0000288C  103C 0003               3684mm         MOVE.B  #3,D0          
00002890  4E4F                    3685mm         TRAP    #15
00002892                          3686mm         ENDM
00002892                          3687mm         PRINTRB
00002892  43F8 00D2               3688mm         LEA     ORB, A1     
00002896  103C 000E               3689mm         MOVE.B  #14,D0          
0000289A  4E4F                    3690mm         TRAP    #15
0000289C                          3691mm         ENDM
0000289C                          3692mm         PRINTPI
0000289C  43F8 00D9               3693mm         LEA     OPSTINC, A1     
000028A0  103C 000E               3694mm         MOVE.B  #14,D0          
000028A4  4E4F                    3695mm         TRAP    #15
000028A6                          3696mm         ENDM
000028A6  6000 046C               3697m         BRA     COMPLETE_225  
000028AA                          3698m ADRREGPOSTINCSRC_225:           
000028AA                          3699mm         PRINTLB
000028AA  43F8 00D0               3700mm         LEA     OLB, A1     
000028AE  103C 000E               3701mm         MOVE.B  #14,D0          
000028B2  4E4F                    3702mm         TRAP    #15
000028B4                          3703mm         ENDM
000028B4                          3704mm         PRINTANSRC D3  
000028B4  3203                    3705mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000028B6  E149                    3706mm         LSL     #$08, D1
000028B8  EB49                    3707mm         LSL     #$05, D1
000028BA  E049                    3708mm         LSR     #$08, D1
000028BC  EA49                    3709mm         LSR     #$05, D1
000028BE  43F8 00CE               3710mm         LEA     OAN, A1     
000028C2  103C 000E               3711mm         MOVE.B  #14,D0          
000028C6  4E4F                    3712mm         TRAP    #15
000028C8  103C 0003               3713mm         MOVE.B  #3,D0          
000028CC  4E4F                    3714mm         TRAP    #15
000028CE                          3715mm         ENDM
000028CE                          3716mm         PRINTRB
000028CE  43F8 00D2               3717mm         LEA     ORB, A1     
000028D2  103C 000E               3718mm         MOVE.B  #14,D0          
000028D6  4E4F                    3719mm         TRAP    #15
000028D8                          3720mm         ENDM
000028D8                          3721mm         PRINTPI
000028D8  43F8 00D9               3722mm         LEA     OPSTINC, A1     
000028DC  103C 000E               3723mm         MOVE.B  #14,D0          
000028E0  4E4F                    3724mm         TRAP    #15
000028E2                          3725mm         ENDM
000028E2  6000 0430               3726m         BRA     COMPLETE_225  
000028E6                          3727m ADRREGPREDEC_225: 
000028E6  BC3C 0001               3728m         CMP.B   #$01, D6
000028EA  6700 003C               3729m         BEQ     ADRREGPREDECSRC_225   
000028EE                          3730m ADRREGPREDECDEST_225:
000028EE                          3731mm         PRINTPD  
000028EE  43F8 00D7               3732mm         LEA     OPREDEC, A1     
000028F2  103C 000E               3733mm         MOVE.B  #14,D0          
000028F6  4E4F                    3734mm         TRAP    #15
000028F8                          3735mm         ENDM
000028F8                          3736mm         PRINTLB
000028F8  43F8 00D0               3737mm         LEA     OLB, A1     
000028FC  103C 000E               3738mm         MOVE.B  #14,D0          
00002900  4E4F                    3739mm         TRAP    #15
00002902                          3740mm         ENDM
00002902                          3741mm         PRINTANDEST D3  
00002902  3203                    3742mm         MOVE.W  D3, D1
00002904  E949                    3743mm         LSL     #$04, D1
00002906  E049                    3744mm         LSR     #$08, D1
00002908  EA49                    3745mm         LSR     #$05, D1
0000290A  43F8 00CE               3746mm         LEA     OAN, A1     
0000290E  103C 000E               3747mm         MOVE.B  #14,D0          
00002912  4E4F                    3748mm         TRAP    #15
00002914  103C 0003               3749mm         MOVE.B  #3,D0          
00002918  4E4F                    3750mm         TRAP    #15
0000291A                          3751mm         ENDM
0000291A                          3752mm         PRINTRB
0000291A  43F8 00D2               3753mm         LEA     ORB, A1     
0000291E  103C 000E               3754mm         MOVE.B  #14,D0          
00002922  4E4F                    3755mm         TRAP    #15
00002924                          3756mm         ENDM
00002924  6000 03EE               3757m         BRA     COMPLETE_225   
00002928                          3758m ADRREGPREDECSRC_225: 
00002928                          3759mm         PRINTPD  
00002928  43F8 00D7               3760mm         LEA     OPREDEC, A1     
0000292C  103C 000E               3761mm         MOVE.B  #14,D0          
00002930  4E4F                    3762mm         TRAP    #15
00002932                          3763mm         ENDM
00002932                          3764mm         PRINTLB
00002932  43F8 00D0               3765mm         LEA     OLB, A1     
00002936  103C 000E               3766mm         MOVE.B  #14,D0          
0000293A  4E4F                    3767mm         TRAP    #15
0000293C                          3768mm         ENDM
0000293C                          3769mm         PRINTANSRC D3  
0000293C  3203                    3770mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000293E  E149                    3771mm         LSL     #$08, D1
00002940  EB49                    3772mm         LSL     #$05, D1
00002942  E049                    3773mm         LSR     #$08, D1
00002944  EA49                    3774mm         LSR     #$05, D1
00002946  43F8 00CE               3775mm         LEA     OAN, A1     
0000294A  103C 000E               3776mm         MOVE.B  #14,D0          
0000294E  4E4F                    3777mm         TRAP    #15
00002950  103C 0003               3778mm         MOVE.B  #3,D0          
00002954  4E4F                    3779mm         TRAP    #15
00002956                          3780mm         ENDM
00002956                          3781mm         PRINTRB
00002956  43F8 00D2               3782mm         LEA     ORB, A1     
0000295A  103C 000E               3783mm         MOVE.B  #14,D0          
0000295E  4E4F                    3784mm         TRAP    #15
00002960                          3785mm         ENDM
00002960  6000 03B2               3786m         BRA     COMPLETE_225
00002964                          3787m        
00002964                          3788m ADRABSOLUTE_225:
00002964  BC3C 0001               3789m         CMP.B   #$01, D6
00002968  6600 0018               3790m         BNE     ADRABSOLUTEDST_225 
0000296C                          3791m         
0000296C  3A03                    3792m         MOVE.W  D3, D5
0000296E  0803 0002               3793m         BTST    #2, D3
00002972  6600 0024               3794m         BNE     ADRIMMEDIATE_225
00002976  0803 0000               3795m         BTST    #0, D3
0000297A  6600 0280               3796m         BNE     ADRABSOLUTEL_225
0000297E  6000 01E6               3797m         BRA     ADRABSOLUTEW_225
00002982                          3798m ADRABSOLUTEDST_225:
00002982  3A03                    3799m         MOVE.W  D3, D5
00002984  0803 000B               3800m         BTST    #$B, D3
00002988  6600 000E               3801m         BNE     ADRIMMEDIATE_225
0000298C  0803 0009               3802m         BTST    #$09, D3
00002990  6600 026A               3803m         BNE     ADRABSOLUTEL_225
00002994  6000 01D0               3804m         BRA     ADRABSOLUTEW_225
00002998                          3805m ADRIMMEDIATE_225:
00002998  BE3C 0001               3806m         CMP.B   #1, D7
0000299C  6700 00A2               3807m         BEQ     ADRIMMEDIATEL_225
000029A0                          3808m ADRIMMEDIATEW_225:
000029A0  361A                    3809m         MOVE.W  (A2)+, D3
000029A2                          3810mm         PRINTHASH
000029A2  103C 0006               3811mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029A6  323C 0023               3812mm         MOVE.W  #35, D1     ; AN = SIGN
000029AA  4E4F                    3813mm         TRAP    #15         ; OUTPUT = SIGN
000029AC                          3814mm         ENDM
000029AC                          3815mm         PRINTSIGN
000029AC  103C 0006               3816mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029B0  323C 0024               3817mm         MOVE.W  #36, D1     ; AN = SIGN
000029B4  4E4F                    3818mm         TRAP    #15         ; OUTPUT = SIGN
000029B6                          3819mm         ENDM
000029B6                          3820mm         ADROUT
000029B6  103C 0006               3821mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029BA  3212                    3822mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029BC  E049                    3823mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029BE  E849                    3824mm         LSR.W   #4, D1      
000029C0                          3825mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029C0  0C01 0009               3826mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029C4  6E00 000A               3827mmm         BGT     ALPHA_255
000029C8  0601 0030               3828mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029CC  6000 0006               3829mmm         BRA     DONE_255
000029D0  0601 0037               3830mmm ALPHA_255: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029D4  4E71                    3831mmm DONE_255: NOP
000029D6                          3832mmm         ENDM
000029D6  4E4F                    3833mm         TRAP    #15         ; EXECUTE OUTPUT
000029D8                          3834mm         
000029D8  3212                    3835mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029DA  E949                    3836mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029DC  E049                    3837mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029DE  E849                    3838mm         LSR.W   #4, D1      
000029E0                          3839mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029E0  0C01 0009               3840mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029E4  6E00 000A               3841mmm         BGT     ALPHA_256
000029E8  0601 0030               3842mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029EC  6000 0006               3843mmm         BRA     DONE_256
000029F0  0601 0037               3844mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029F4  4E71                    3845mmm DONE_256: NOP
000029F6                          3846mmm         ENDM
000029F6  4E4F                    3847mm         TRAP    #15         ; EXECUTE OUTPUT
000029F8                          3848mm         
000029F8  3212                    3849mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029FA  E149                    3850mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029FC  E049                    3851mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029FE  E849                    3852mm         LSR.W   #4, D1      
00002A00                          3853mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A00  0C01 0009               3854mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A04  6E00 000A               3855mmm         BGT     ALPHA_257
00002A08  0601 0030               3856mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A0C  6000 0006               3857mmm         BRA     DONE_257
00002A10  0601 0037               3858mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A14  4E71                    3859mmm DONE_257: NOP
00002A16                          3860mmm         ENDM
00002A16  4E4F                    3861mm         TRAP    #15         ; EXECUTE OUTPUT
00002A18                          3862mm         
00002A18  3212                    3863mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A1A  E149                    3864mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A1C  E949                    3865mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A1E  E049                    3866mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A20  E849                    3867mm         LSR.W   #4, D1      
00002A22                          3868mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A22  0C01 0009               3869mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A26  6E00 000A               3870mmm         BGT     ALPHA_258
00002A2A  0601 0030               3871mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A2E  6000 0006               3872mmm         BRA     DONE_258
00002A32  0601 0037               3873mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A36  4E71                    3874mmm DONE_258: NOP
00002A38                          3875mmm         ENDM
00002A38  4E4F                    3876mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A3A                          3877mm         ENDM 
00002A3A  3605                    3878m         MOVE.W  D5, D3
00002A3C  6000 02D6               3879m         BRA     COMPLETE_225
00002A40                          3880m ADRIMMEDIATEL_225:
00002A40  361A                    3881m         MOVE.W  (A2)+, D3
00002A42                          3882mm         PRINTHASH
00002A42  103C 0006               3883mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A46  323C 0023               3884mm         MOVE.W  #35, D1     ; AN = SIGN
00002A4A  4E4F                    3885mm         TRAP    #15         ; OUTPUT = SIGN
00002A4C                          3886mm         ENDM
00002A4C                          3887mm         PRINTSIGN
00002A4C  103C 0006               3888mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A50  323C 0024               3889mm         MOVE.W  #36, D1     ; AN = SIGN
00002A54  4E4F                    3890mm         TRAP    #15         ; OUTPUT = SIGN
00002A56                          3891mm         ENDM
00002A56                          3892mm         ADROUT 
00002A56  103C 0006               3893mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A5A  3212                    3894mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A5C  E049                    3895mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A5E  E849                    3896mm         LSR.W   #4, D1      
00002A60                          3897mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A60  0C01 0009               3898mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A64  6E00 000A               3899mmm         BGT     ALPHA_262
00002A68  0601 0030               3900mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A6C  6000 0006               3901mmm         BRA     DONE_262
00002A70  0601 0037               3902mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A74  4E71                    3903mmm DONE_262: NOP
00002A76                          3904mmm         ENDM
00002A76  4E4F                    3905mm         TRAP    #15         ; EXECUTE OUTPUT
00002A78                          3906mm         
00002A78  3212                    3907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A7A  E949                    3908mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A7C  E049                    3909mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A7E  E849                    3910mm         LSR.W   #4, D1      
00002A80                          3911mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A80  0C01 0009               3912mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A84  6E00 000A               3913mmm         BGT     ALPHA_263
00002A88  0601 0030               3914mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A8C  6000 0006               3915mmm         BRA     DONE_263
00002A90  0601 0037               3916mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A94  4E71                    3917mmm DONE_263: NOP
00002A96                          3918mmm         ENDM
00002A96  4E4F                    3919mm         TRAP    #15         ; EXECUTE OUTPUT
00002A98                          3920mm         
00002A98  3212                    3921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A9A  E149                    3922mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A9C  E049                    3923mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A9E  E849                    3924mm         LSR.W   #4, D1      
00002AA0                          3925mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AA0  0C01 0009               3926mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AA4  6E00 000A               3927mmm         BGT     ALPHA_264
00002AA8  0601 0030               3928mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AAC  6000 0006               3929mmm         BRA     DONE_264
00002AB0  0601 0037               3930mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AB4  4E71                    3931mmm DONE_264: NOP
00002AB6                          3932mmm         ENDM
00002AB6  4E4F                    3933mm         TRAP    #15         ; EXECUTE OUTPUT
00002AB8                          3934mm         
00002AB8  3212                    3935mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002ABA  E149                    3936mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002ABC  E949                    3937mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002ABE  E049                    3938mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AC0  E849                    3939mm         LSR.W   #4, D1      
00002AC2                          3940mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AC2  0C01 0009               3941mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AC6  6E00 000A               3942mmm         BGT     ALPHA_265
00002ACA  0601 0030               3943mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002ACE  6000 0006               3944mmm         BRA     DONE_265
00002AD2  0601 0037               3945mmm ALPHA_265: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AD6  4E71                    3946mmm DONE_265: NOP
00002AD8                          3947mmm         ENDM
00002AD8  4E4F                    3948mm         TRAP    #15         ; EXECUTE OUTPUT       
00002ADA                          3949mm         ENDM 
00002ADA  361A                    3950m         MOVE.W  (A2)+, D3
00002ADC                          3951mm         ADROUT
00002ADC  103C 0006               3952mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AE0  3212                    3953mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AE2  E049                    3954mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AE4  E849                    3955mm         LSR.W   #4, D1      
00002AE6                          3956mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AE6  0C01 0009               3957mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AEA  6E00 000A               3958mmm         BGT     ALPHA_267
00002AEE  0601 0030               3959mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AF2  6000 0006               3960mmm         BRA     DONE_267
00002AF6  0601 0037               3961mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AFA  4E71                    3962mmm DONE_267: NOP
00002AFC                          3963mmm         ENDM
00002AFC  4E4F                    3964mm         TRAP    #15         ; EXECUTE OUTPUT
00002AFE                          3965mm         
00002AFE  3212                    3966mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B00  E949                    3967mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B02  E049                    3968mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B04  E849                    3969mm         LSR.W   #4, D1      
00002B06                          3970mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B06  0C01 0009               3971mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B0A  6E00 000A               3972mmm         BGT     ALPHA_268
00002B0E  0601 0030               3973mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B12  6000 0006               3974mmm         BRA     DONE_268
00002B16  0601 0037               3975mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B1A  4E71                    3976mmm DONE_268: NOP
00002B1C                          3977mmm         ENDM
00002B1C  4E4F                    3978mm         TRAP    #15         ; EXECUTE OUTPUT
00002B1E                          3979mm         
00002B1E  3212                    3980mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B20  E149                    3981mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B22  E049                    3982mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B24  E849                    3983mm         LSR.W   #4, D1      
00002B26                          3984mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B26  0C01 0009               3985mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B2A  6E00 000A               3986mmm         BGT     ALPHA_269
00002B2E  0601 0030               3987mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B32  6000 0006               3988mmm         BRA     DONE_269
00002B36  0601 0037               3989mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B3A  4E71                    3990mmm DONE_269: NOP
00002B3C                          3991mmm         ENDM
00002B3C  4E4F                    3992mm         TRAP    #15         ; EXECUTE OUTPUT
00002B3E                          3993mm         
00002B3E  3212                    3994mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B40  E149                    3995mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B42  E949                    3996mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B44  E049                    3997mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B46  E849                    3998mm         LSR.W   #4, D1      
00002B48                          3999mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B48  0C01 0009               4000mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B4C  6E00 000A               4001mmm         BGT     ALPHA_270
00002B50  0601 0030               4002mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B54  6000 0006               4003mmm         BRA     DONE_270
00002B58  0601 0037               4004mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B5C  4E71                    4005mmm DONE_270: NOP
00002B5E                          4006mmm         ENDM
00002B5E  4E4F                    4007mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B60                          4008mm         ENDM 
00002B60  3605                    4009m         MOVE.W  D5, D3
00002B62  6000 01B0               4010m         BRA     COMPLETE_225 
00002B66                          4011m ADRABSOLUTEW_225:     
00002B66  361A                    4012m         MOVE.W  (A2)+, D3
00002B68                          4013mm         PRINTSIGN
00002B68  103C 0006               4014mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B6C  323C 0024               4015mm         MOVE.W  #36, D1     ; AN = SIGN
00002B70  4E4F                    4016mm         TRAP    #15         ; OUTPUT = SIGN
00002B72                          4017mm         ENDM
00002B72                          4018mm         ADROUT
00002B72  103C 0006               4019mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B76  3212                    4020mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B78  E049                    4021mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7A  E849                    4022mm         LSR.W   #4, D1      
00002B7C                          4023mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B7C  0C01 0009               4024mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B80  6E00 000A               4025mmm         BGT     ALPHA_273
00002B84  0601 0030               4026mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B88  6000 0006               4027mmm         BRA     DONE_273
00002B8C  0601 0037               4028mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B90  4E71                    4029mmm DONE_273: NOP
00002B92                          4030mmm         ENDM
00002B92  4E4F                    4031mm         TRAP    #15         ; EXECUTE OUTPUT
00002B94                          4032mm         
00002B94  3212                    4033mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B96  E949                    4034mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B98  E049                    4035mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B9A  E849                    4036mm         LSR.W   #4, D1      
00002B9C                          4037mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B9C  0C01 0009               4038mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BA0  6E00 000A               4039mmm         BGT     ALPHA_274
00002BA4  0601 0030               4040mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BA8  6000 0006               4041mmm         BRA     DONE_274
00002BAC  0601 0037               4042mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BB0  4E71                    4043mmm DONE_274: NOP
00002BB2                          4044mmm         ENDM
00002BB2  4E4F                    4045mm         TRAP    #15         ; EXECUTE OUTPUT
00002BB4                          4046mm         
00002BB4  3212                    4047mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BB6  E149                    4048mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BB8  E049                    4049mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BBA  E849                    4050mm         LSR.W   #4, D1      
00002BBC                          4051mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BBC  0C01 0009               4052mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BC0  6E00 000A               4053mmm         BGT     ALPHA_275
00002BC4  0601 0030               4054mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BC8  6000 0006               4055mmm         BRA     DONE_275
00002BCC  0601 0037               4056mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BD0  4E71                    4057mmm DONE_275: NOP
00002BD2                          4058mmm         ENDM
00002BD2  4E4F                    4059mm         TRAP    #15         ; EXECUTE OUTPUT
00002BD4                          4060mm         
00002BD4  3212                    4061mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BD6  E149                    4062mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BD8  E949                    4063mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BDA  E049                    4064mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BDC  E849                    4065mm         LSR.W   #4, D1      
00002BDE                          4066mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BDE  0C01 0009               4067mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BE2  6E00 000A               4068mmm         BGT     ALPHA_276
00002BE6  0601 0030               4069mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BEA  6000 0006               4070mmm         BRA     DONE_276
00002BEE  0601 0037               4071mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BF2  4E71                    4072mmm DONE_276: NOP
00002BF4                          4073mmm         ENDM
00002BF4  4E4F                    4074mm         TRAP    #15         ; EXECUTE OUTPUT       
00002BF6                          4075mm         ENDM 
00002BF6  3605                    4076m         MOVE.W  D5, D3
00002BF8  6000 011A               4077m         BRA     COMPLETE_225  
00002BFC                          4078m ADRABSOLUTEL_225:  
00002BFC  361A                    4079m         MOVE.W  (A2)+, D3
00002BFE                          4080mm         PRINTSIGN
00002BFE  103C 0006               4081mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C02  323C 0024               4082mm         MOVE.W  #36, D1     ; AN = SIGN
00002C06  4E4F                    4083mm         TRAP    #15         ; OUTPUT = SIGN
00002C08                          4084mm         ENDM
00002C08                          4085mm         ADROUT 
00002C08  103C 0006               4086mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C0C  3212                    4087mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C0E  E049                    4088mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C10  E849                    4089mm         LSR.W   #4, D1      
00002C12                          4090mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C12  0C01 0009               4091mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C16  6E00 000A               4092mmm         BGT     ALPHA_279
00002C1A  0601 0030               4093mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C1E  6000 0006               4094mmm         BRA     DONE_279
00002C22  0601 0037               4095mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C26  4E71                    4096mmm DONE_279: NOP
00002C28                          4097mmm         ENDM
00002C28  4E4F                    4098mm         TRAP    #15         ; EXECUTE OUTPUT
00002C2A                          4099mm         
00002C2A  3212                    4100mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C2C  E949                    4101mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002C2E  E049                    4102mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C30  E849                    4103mm         LSR.W   #4, D1      
00002C32                          4104mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C32  0C01 0009               4105mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C36  6E00 000A               4106mmm         BGT     ALPHA_280
00002C3A  0601 0030               4107mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C3E  6000 0006               4108mmm         BRA     DONE_280
00002C42  0601 0037               4109mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C46  4E71                    4110mmm DONE_280: NOP
00002C48                          4111mmm         ENDM
00002C48  4E4F                    4112mm         TRAP    #15         ; EXECUTE OUTPUT
00002C4A                          4113mm         
00002C4A  3212                    4114mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C4C  E149                    4115mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C4E  E049                    4116mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C50  E849                    4117mm         LSR.W   #4, D1      
00002C52                          4118mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C52  0C01 0009               4119mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C56  6E00 000A               4120mmm         BGT     ALPHA_281
00002C5A  0601 0030               4121mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C5E  6000 0006               4122mmm         BRA     DONE_281
00002C62  0601 0037               4123mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C66  4E71                    4124mmm DONE_281: NOP
00002C68                          4125mmm         ENDM
00002C68  4E4F                    4126mm         TRAP    #15         ; EXECUTE OUTPUT
00002C6A                          4127mm         
00002C6A  3212                    4128mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C6C  E149                    4129mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C6E  E949                    4130mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002C70  E049                    4131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C72  E849                    4132mm         LSR.W   #4, D1      
00002C74                          4133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C74  0C01 0009               4134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C78  6E00 000A               4135mmm         BGT     ALPHA_282
00002C7C  0601 0030               4136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C80  6000 0006               4137mmm         BRA     DONE_282
00002C84  0601 0037               4138mmm ALPHA_282: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C88  4E71                    4139mmm DONE_282: NOP
00002C8A                          4140mmm         ENDM
00002C8A  4E4F                    4141mm         TRAP    #15         ; EXECUTE OUTPUT       
00002C8C                          4142mm         ENDM 
00002C8C  361A                    4143m         MOVE.W  (A2)+, D3
00002C8E                          4144mm         ADROUT
00002C8E  103C 0006               4145mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002C92  3212                    4146mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C94  E049                    4147mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C96  E849                    4148mm         LSR.W   #4, D1      
00002C98                          4149mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C98  0C01 0009               4150mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C9C  6E00 000A               4151mmm         BGT     ALPHA_284
00002CA0  0601 0030               4152mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CA4  6000 0006               4153mmm         BRA     DONE_284
00002CA8  0601 0037               4154mmm ALPHA_284: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CAC  4E71                    4155mmm DONE_284: NOP
00002CAE                          4156mmm         ENDM
00002CAE  4E4F                    4157mm         TRAP    #15         ; EXECUTE OUTPUT
00002CB0                          4158mm         
00002CB0  3212                    4159mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CB2  E949                    4160mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002CB4  E049                    4161mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CB6  E849                    4162mm         LSR.W   #4, D1      
00002CB8                          4163mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CB8  0C01 0009               4164mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CBC  6E00 000A               4165mmm         BGT     ALPHA_285
00002CC0  0601 0030               4166mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CC4  6000 0006               4167mmm         BRA     DONE_285
00002CC8  0601 0037               4168mmm ALPHA_285: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CCC  4E71                    4169mmm DONE_285: NOP
00002CCE                          4170mmm         ENDM
00002CCE  4E4F                    4171mm         TRAP    #15         ; EXECUTE OUTPUT
00002CD0                          4172mm         
00002CD0  3212                    4173mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CD2  E149                    4174mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002CD4  E049                    4175mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CD6  E849                    4176mm         LSR.W   #4, D1      
00002CD8                          4177mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CD8  0C01 0009               4178mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CDC  6E00 000A               4179mmm         BGT     ALPHA_286
00002CE0  0601 0030               4180mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002CE4  6000 0006               4181mmm         BRA     DONE_286
00002CE8  0601 0037               4182mmm ALPHA_286: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CEC  4E71                    4183mmm DONE_286: NOP
00002CEE                          4184mmm         ENDM
00002CEE  4E4F                    4185mm         TRAP    #15         ; EXECUTE OUTPUT
00002CF0                          4186mm         
00002CF0  3212                    4187mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002CF2  E149                    4188mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002CF4  E949                    4189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002CF6  E049                    4190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002CF8  E849                    4191mm         LSR.W   #4, D1      
00002CFA                          4192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002CFA  0C01 0009               4193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002CFE  6E00 000A               4194mmm         BGT     ALPHA_287
00002D02  0601 0030               4195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002D06  6000 0006               4196mmm         BRA     DONE_287
00002D0A  0601 0037               4197mmm ALPHA_287: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002D0E  4E71                    4198mmm DONE_287: NOP
00002D10                          4199mmm         ENDM
00002D10  4E4F                    4200mm         TRAP    #15         ; EXECUTE OUTPUT       
00002D12                          4201mm         ENDM 
00002D12  3605                    4202m         MOVE.W  D5, D3
00002D14                          4203m 
00002D14                          4204m COMPLETE_225:  ; OPCODE HAS BEEN VERIFIED
00002D14                          4205m         ENDM
00002D14                          4206m         printComma
00002D14  43F8 00D4               4207m         LEA     OCOMMA, A1     
00002D18  103C 000E               4208m         MOVE.B  #14,D0          
00002D1C  4E4F                    4209m         TRAP    #15
00002D1E                          4210m         ENDM
00002D1E                          4211m         printDnDest     D3
00002D1E  3203                    4212m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D20  E949                    4213m         LSL     #$04, D1
00002D22  E049                    4214m         LSR     #$08, D1
00002D24  EA49                    4215m         LSR     #$05, D1
00002D26  43F8 00CC               4216m         LEA     ODN, A1     
00002D2A  103C 000E               4217m         MOVE.B  #14,D0          
00002D2E  4E4F                    4218m         TRAP    #15
00002D30  103C 0003               4219m         MOVE.B  #3,D0          
00002D34  4E4F                    4220m         TRAP    #15
00002D36                          4221m         ENDM
00002D36                          4222  decodeADDcomp:
00002D36  4E75                    4223          RTS                ; Return from decodeADD subroutine
00002D38                          4224  
00002D38                          4225  
00002D38                          4226  ; ------------------------------------------------------------
00002D38                          4227  ; 5. "decodeSUB" subroutine
00002D38                          4228  ; Gary
00002D38                          4229  ;
00002D38                          4230  ; Decodes sub by verifying, printing, checking the opmode(and size),
00002D38                          4231  ; and decoding the adressing modes used.
00002D38                          4232  ; ------------------------------------------------------------
00002D38                          4233  decodeSUB:
00002D38                          4234m         verifyOpcode    pSUB, (A2)
00002D38  43F8 013F               4235m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002D3C  3612                    4236m         MOVE.W  (A2), D3      ; INPUT VALUE
00002D3E  123C 000F               4237m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002D42                          4238m         
00002D42                          4239m LOOP_290: 
00002D42  0C11 0030               4240m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002D46  6700 000E               4241m         BEQ     CHECKFOR0_290
00002D4A  0C11 0031               4242m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002D4E  6700 0010               4243m         BEQ     CHECKFOR1_290
00002D52  6000 0012               4244m         BRA     NEXT_290      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002D56                          4245m         
00002D56                          4246m CHECKFOR0_290: 
00002D56  0303                    4247m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002D58  6600 4A20               4248m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002D5C  6000 0008               4249m         BRA     NEXT_290
00002D60                          4250m 
00002D60                          4251m CHECKFOR1_290:
00002D60  0303                    4252m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002D62  6700 4A16               4253m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002D66                          4254m 
00002D66                          4255m NEXT_290: 
00002D66  B23C 0000               4256m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002D6A  6700 0008               4257m         BEQ     COMPLETE_290  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002D6E  5301                    4258m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D70  1819                    4259m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002D72  60CE                    4260m         BRA     LOOP_290      ; BEGIN LOOP AGAIN
00002D74                          4261m 
00002D74                          4262m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D74                          4263m         ENDM
00002D74  43F8 0078               4264          LEA     oSUB, A1     
00002D78  103C 000E               4265          MOVE.B  #14,D0          
00002D7C  4E4F                    4266          TRAP    #15
00002D7E                          4267m         printOpMode     (A2)
00002D7E  3612                    4268m         MOVE.W  (A2), D3      
00002D80  123C 0008               4269m         MOVE.B  #8, D1    
00002D84  4246                    4270m         CLR     D6
00002D86  4247                    4271m         CLR     D7
00002D88                          4272m CHECKFORDESTDN_291: 
00002D88  0303                    4273m         BTST    D1, D3      
00002D8A  6600 004C               4274m         BNE     CHECKFORSRCDN_291
00002D8E  4EB9 00002E66           4275m         JSR     NEXT_291
00002D94  1C3C 0001               4276m         MOVE.B  #$1, D6
00002D98  0303                    4277m         BTST    D1, D3      
00002D9A  6700 0014               4278m         BEQ     DESTDNW_291
00002D9E                          4279m DESTDNL_291:        
00002D9E  43F8 00C8               4280m         LEA     OLSIZE, A1     
00002DA2  103C 000E               4281m         MOVE.B  #14,D0          
00002DA6  4E4F                    4282m         TRAP    #15
00002DA8  1E3C 0001               4283m         MOVE.B  #$1, D7
00002DAC  6000 00BC               4284m         BRA     COMPLETE_291 
00002DB0                          4285m DESTDNW_291: 
00002DB0  4EB9 00002E66           4286m         JSR     NEXT_291
00002DB6  0303                    4287m         BTST    D1, D3      
00002DB8  6700 0010               4288m         BEQ     DESTDNB_291
00002DBC  43F8 00C4               4289m         LEA     OWSIZE, A1     
00002DC0  103C 000E               4290m         MOVE.B  #14,D0          
00002DC4  4E4F                    4291m         TRAP    #15
00002DC6  6000 00A2               4292m         BRA     COMPLETE_291 
00002DCA                          4293m DESTDNB_291: 
00002DCA  43F8 00C0               4294m         LEA     OBSIZE, A1     
00002DCE  103C 000E               4295m         MOVE.B  #14,D0          
00002DD2  4E4F                    4296m         TRAP    #15
00002DD4  6000 0094               4297m         BRA     COMPLETE_291 
00002DD8                          4298m CHECKFORSRCDN_291: 
00002DD8  4EB9 00002E66           4299m         JSR     NEXT_291
00002DDE  0303                    4300m         BTST    D1, D3      
00002DE0  6700 002C               4301m         BEQ     SRCDNW_291
00002DE4                          4302m SRCDNL_291:        
00002DE4  43F8 00C8               4303m         LEA     OLSIZE, A1     
00002DE8  103C 000E               4304m         MOVE.B  #14,D0          
00002DEC  4E4F                    4305m         TRAP    #15
00002DEE  1E3C 0001               4306m         MOVE.B  #$1, D7
00002DF2                          4307mm         PRINTDNDEST D3
00002DF2  3203                    4308mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DF4  E949                    4309mm         LSL     #$04, D1
00002DF6  E049                    4310mm         LSR     #$08, D1
00002DF8  EA49                    4311mm         LSR     #$05, D1
00002DFA  43F8 00CC               4312mm         LEA     ODN, A1     
00002DFE  103C 000E               4313mm         MOVE.B  #14,D0          
00002E02  4E4F                    4314mm         TRAP    #15
00002E04  103C 0003               4315mm         MOVE.B  #3,D0          
00002E08  4E4F                    4316mm         TRAP    #15
00002E0A                          4317mm         ENDM
00002E0A  6000 005E               4318m         BRA     COMPLETE_291 
00002E0E                          4319m SRCDNW_291:
00002E0E  4EB9 00002E66           4320m         JSR     NEXT_291
00002E14  0303                    4321m         BTST    D1, D3     
00002E16  6700 0028               4322m         BEQ     SRCDNB_291
00002E1A  43F8 00C4               4323m         LEA     OWSIZE, A1     
00002E1E  103C 000E               4324m         MOVE.B  #14,D0          
00002E22  4E4F                    4325m         TRAP    #15
00002E24                          4326mm         PRINTDNDEST D3
00002E24  3203                    4327mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E26  E949                    4328mm         LSL     #$04, D1
00002E28  E049                    4329mm         LSR     #$08, D1
00002E2A  EA49                    4330mm         LSR     #$05, D1
00002E2C  43F8 00CC               4331mm         LEA     ODN, A1     
00002E30  103C 000E               4332mm         MOVE.B  #14,D0          
00002E34  4E4F                    4333mm         TRAP    #15
00002E36  103C 0003               4334mm         MOVE.B  #3,D0          
00002E3A  4E4F                    4335mm         TRAP    #15
00002E3C                          4336mm         ENDM
00002E3C  6000 002C               4337m         BRA     COMPLETE_291 
00002E40                          4338m SRCDNB_291: 
00002E40  43F8 00C0               4339m         LEA     OBSIZE, A1     
00002E44  103C 000E               4340m         MOVE.B  #14,D0          
00002E48  4E4F                    4341m         TRAP    #15
00002E4A                          4342mm         PRINTDNDEST D3
00002E4A  3203                    4343mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E4C  E949                    4344mm         LSL     #$04, D1
00002E4E  E049                    4345mm         LSR     #$08, D1
00002E50  EA49                    4346mm         LSR     #$05, D1
00002E52  43F8 00CC               4347mm         LEA     ODN, A1     
00002E56  103C 000E               4348mm         MOVE.B  #14,D0          
00002E5A  4E4F                    4349mm         TRAP    #15
00002E5C  103C 0003               4350mm         MOVE.B  #3,D0          
00002E60  4E4F                    4351mm         TRAP    #15
00002E62                          4352mm         ENDM
00002E62  6000 0006               4353m         BRA     COMPLETE_291 
00002E66                          4354m 
00002E66                          4355m NEXT_291:
00002E66  5301                    4356m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002E68  4E75                    4357m         RTS                
00002E6A                          4358m 
00002E6A                          4359m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
00002E6A                          4360m         ENDM
00002E6A  BC3C 0001               4361          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002E6E  6700 05F8               4362          BEQ     decodeSubDestOp
00002E72                          4363m         printComma
00002E72  43F8 00D4               4364m         LEA     OCOMMA, A1     
00002E76  103C 000E               4365m         MOVE.B  #14,D0          
00002E7A  4E4F                    4366m         TRAP    #15
00002E7C                          4367m         ENDM
00002E7C                          4368m         prepareAdrMode  #$1, (A2)
00002E7C  3C3C 0001               4369m         MOVE.W  #$1, D6      ; INPUT VALUE
00002E80  3212                    4370m         MOVE.W  (A2), D1
00002E82  BC3C 0001               4371m         CMP.B   #$01, D6
00002E86  6700 000C               4372m         BEQ     ADRSOURCE_296    
00002E8A                          4373m ADRDEST_296:
00002E8A  EF49                    4374m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002E8C  E049                    4375m         LSR     #$08, D1
00002E8E  EA49                    4376m         LSR     #$05, D1
00002E90  6000 000A               4377m         BRA     COMPLETE_296 
00002E94                          4378m ADRSOURCE_296:                
00002E94  E149                    4379m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002E96  E549                    4380m         LSL     #$02, D1
00002E98  E049                    4381m         LSR     #$08, D1
00002E9A  EA49                    4382m         LSR     #$05, D1
00002E9C                          4383m COMPLETE_296:  ; OPCODE HAS BEEN VERIFIED
00002E9C                          4384m         ENDM        
00002E9C                          4385m         decodeAdrMode   (A2), D1
00002E9C  3612                    4386m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002E9E  3201                    4387m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002EA0                          4388m 
00002EA0  B23C 0001               4389m         CMP.B   #$01, D1
00002EA4  6700 0066               4390m         BEQ     ADRREGDIRECT_297    
00002EA8  B23C 0002               4391m         CMP.B   #$02, D1
00002EAC  6700 00A0               4392m         BEQ     ADRREGINDIRECT_297  
00002EB0  B23C 0003               4393m         CMP.B   #$03, D1
00002EB4  6700 0102               4394m         BEQ     ADRREGPOSTINC_297  
00002EB8  B23C 0004               4395m         CMP.B   #$04, D1
00002EBC  6700 0178               4396m         BEQ     ADRREGPREDEC_297
00002EC0  B23C 0007               4397m         CMP.B   #$07, D1
00002EC4  6700 01EE               4398m         BEQ     ADRABSOLUTE_297    
00002EC8                          4399m         
00002EC8                          4400m DATAREGDIRECT_297: 
00002EC8  BC3C 0001               4401m         CMP.B   #$01, D6
00002ECC  6700 001E               4402m         BEQ     DATAREGDIRECTSRC_297   
00002ED0                          4403m DATAREGDIRECTDEST_297: 
00002ED0                          4404mm         PRINTDNDEST D3 
00002ED0  3203                    4405mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002ED2  E949                    4406mm         LSL     #$04, D1
00002ED4  E049                    4407mm         LSR     #$08, D1
00002ED6  EA49                    4408mm         LSR     #$05, D1
00002ED8  43F8 00CC               4409mm         LEA     ODN, A1     
00002EDC  103C 000E               4410mm         MOVE.B  #14,D0          
00002EE0  4E4F                    4411mm         TRAP    #15
00002EE2  103C 0003               4412mm         MOVE.B  #3,D0          
00002EE6  4E4F                    4413mm         TRAP    #15
00002EE8                          4414mm         ENDM
00002EE8  6000 057A               4415m         BRA     COMPLETE_297 
00002EEC                          4416m DATAREGDIRECTSRC_297: 
00002EEC                          4417mm         PRINTDNSRC D3 
00002EEC  4281                    4418mm         CLR.L   D1
00002EEE  3203                    4419mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EF0  E149                    4420mm         LSL     #$08, D1
00002EF2  EB49                    4421mm         LSL     #$05, D1
00002EF4  E049                    4422mm         LSR     #$08, D1
00002EF6  EA49                    4423mm         LSR     #$05, D1
00002EF8  43F8 00CC               4424mm         LEA     ODN, A1     
00002EFC  103C 000E               4425mm         MOVE.B  #14,D0          
00002F00  4E4F                    4426mm         TRAP    #15
00002F02  103C 0003               4427mm         MOVE.B  #3,D0          
00002F06  4E4F                    4428mm         TRAP    #15
00002F08                          4429mm         ENDM
00002F08  6000 055A               4430m         BRA     COMPLETE_297   
00002F0C                          4431m         
00002F0C                          4432m ADRREGDIRECT_297: 
00002F0C  BC3C 0001               4433m         CMP.B   #$01, D6
00002F10  6700 001E               4434m         BEQ     ADRREGDIRECTSRC_297   
00002F14                          4435m ADRREGDIRECTDEST_297:
00002F14                          4436mm         PRINTANDEST D3
00002F14  3203                    4437mm         MOVE.W  D3, D1
00002F16  E949                    4438mm         LSL     #$04, D1
00002F18  E049                    4439mm         LSR     #$08, D1
00002F1A  EA49                    4440mm         LSR     #$05, D1
00002F1C  43F8 00CE               4441mm         LEA     OAN, A1     
00002F20  103C 000E               4442mm         MOVE.B  #14,D0          
00002F24  4E4F                    4443mm         TRAP    #15
00002F26  103C 0003               4444mm         MOVE.B  #3,D0          
00002F2A  4E4F                    4445mm         TRAP    #15
00002F2C                          4446mm         ENDM
00002F2C  6000 0536               4447m         BRA     COMPLETE_297   
00002F30                          4448m ADRREGDIRECTSRC_297:
00002F30                          4449mm         PRINTANSRC D3
00002F30  3203                    4450mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F32  E149                    4451mm         LSL     #$08, D1
00002F34  EB49                    4452mm         LSL     #$05, D1
00002F36  E049                    4453mm         LSR     #$08, D1
00002F38  EA49                    4454mm         LSR     #$05, D1
00002F3A  43F8 00CE               4455mm         LEA     OAN, A1     
00002F3E  103C 000E               4456mm         MOVE.B  #14,D0          
00002F42  4E4F                    4457mm         TRAP    #15
00002F44  103C 0003               4458mm         MOVE.B  #3,D0          
00002F48  4E4F                    4459mm         TRAP    #15
00002F4A                          4460mm         ENDM
00002F4A  6000 0518               4461m         BRA     COMPLETE_297   
00002F4E                          4462m        
00002F4E                          4463m ADRREGINDIRECT_297:   
00002F4E  BC3C 0001               4464m         CMP.B   #$01, D6
00002F52  6700 0032               4465m         BEQ     ADRREGINDIRECTSRC_297   
00002F56                          4466m ADRREGINDIRECTDEST_297:
00002F56                          4467mm         PRINTLB
00002F56  43F8 00D0               4468mm         LEA     OLB, A1     
00002F5A  103C 000E               4469mm         MOVE.B  #14,D0          
00002F5E  4E4F                    4470mm         TRAP    #15
00002F60                          4471mm         ENDM
00002F60                          4472mm         PRINTANDEST D3  
00002F60  3203                    4473mm         MOVE.W  D3, D1
00002F62  E949                    4474mm         LSL     #$04, D1
00002F64  E049                    4475mm         LSR     #$08, D1
00002F66  EA49                    4476mm         LSR     #$05, D1
00002F68  43F8 00CE               4477mm         LEA     OAN, A1     
00002F6C  103C 000E               4478mm         MOVE.B  #14,D0          
00002F70  4E4F                    4479mm         TRAP    #15
00002F72  103C 0003               4480mm         MOVE.B  #3,D0          
00002F76  4E4F                    4481mm         TRAP    #15
00002F78                          4482mm         ENDM
00002F78                          4483mm         PRINTRB
00002F78  43F8 00D2               4484mm         LEA     ORB, A1     
00002F7C  103C 000E               4485mm         MOVE.B  #14,D0          
00002F80  4E4F                    4486mm         TRAP    #15
00002F82                          4487mm         ENDM
00002F82  6000 04E0               4488m         BRA     COMPLETE_297     
00002F86                          4489m ADRREGINDIRECTSRC_297:   
00002F86                          4490mm         PRINTLB
00002F86  43F8 00D0               4491mm         LEA     OLB, A1     
00002F8A  103C 000E               4492mm         MOVE.B  #14,D0          
00002F8E  4E4F                    4493mm         TRAP    #15
00002F90                          4494mm         ENDM
00002F90                          4495mm         PRINTANSRC D3  
00002F90  3203                    4496mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F92  E149                    4497mm         LSL     #$08, D1
00002F94  EB49                    4498mm         LSL     #$05, D1
00002F96  E049                    4499mm         LSR     #$08, D1
00002F98  EA49                    4500mm         LSR     #$05, D1
00002F9A  43F8 00CE               4501mm         LEA     OAN, A1     
00002F9E  103C 000E               4502mm         MOVE.B  #14,D0          
00002FA2  4E4F                    4503mm         TRAP    #15
00002FA4  103C 0003               4504mm         MOVE.B  #3,D0          
00002FA8  4E4F                    4505mm         TRAP    #15
00002FAA                          4506mm         ENDM
00002FAA                          4507mm         PRINTRB
00002FAA  43F8 00D2               4508mm         LEA     ORB, A1     
00002FAE  103C 000E               4509mm         MOVE.B  #14,D0          
00002FB2  4E4F                    4510mm         TRAP    #15
00002FB4                          4511mm         ENDM
00002FB4  6000 04AE               4512m         BRA     COMPLETE_297   
00002FB8                          4513m         
00002FB8                          4514m ADRREGPOSTINC_297:   
00002FB8  BC3C 0001               4515m         CMP.B   #$01, D6
00002FBC  6700 003C               4516m         BEQ     ADRREGPOSTINCSRC_297   
00002FC0                          4517m ADRREGPOSTINCDEST_297: 
00002FC0                          4518mm         PRINTLB
00002FC0  43F8 00D0               4519mm         LEA     OLB, A1     
00002FC4  103C 000E               4520mm         MOVE.B  #14,D0          
00002FC8  4E4F                    4521mm         TRAP    #15
00002FCA                          4522mm         ENDM
00002FCA                          4523mm         PRINTANDEST D3  
00002FCA  3203                    4524mm         MOVE.W  D3, D1
00002FCC  E949                    4525mm         LSL     #$04, D1
00002FCE  E049                    4526mm         LSR     #$08, D1
00002FD0  EA49                    4527mm         LSR     #$05, D1
00002FD2  43F8 00CE               4528mm         LEA     OAN, A1     
00002FD6  103C 000E               4529mm         MOVE.B  #14,D0          
00002FDA  4E4F                    4530mm         TRAP    #15
00002FDC  103C 0003               4531mm         MOVE.B  #3,D0          
00002FE0  4E4F                    4532mm         TRAP    #15
00002FE2                          4533mm         ENDM
00002FE2                          4534mm         PRINTRB
00002FE2  43F8 00D2               4535mm         LEA     ORB, A1     
00002FE6  103C 000E               4536mm         MOVE.B  #14,D0          
00002FEA  4E4F                    4537mm         TRAP    #15
00002FEC                          4538mm         ENDM
00002FEC                          4539mm         PRINTPI
00002FEC  43F8 00D9               4540mm         LEA     OPSTINC, A1     
00002FF0  103C 000E               4541mm         MOVE.B  #14,D0          
00002FF4  4E4F                    4542mm         TRAP    #15
00002FF6                          4543mm         ENDM
00002FF6  6000 046C               4544m         BRA     COMPLETE_297  
00002FFA                          4545m ADRREGPOSTINCSRC_297:           
00002FFA                          4546mm         PRINTLB
00002FFA  43F8 00D0               4547mm         LEA     OLB, A1     
00002FFE  103C 000E               4548mm         MOVE.B  #14,D0          
00003002  4E4F                    4549mm         TRAP    #15
00003004                          4550mm         ENDM
00003004                          4551mm         PRINTANSRC D3  
00003004  3203                    4552mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003006  E149                    4553mm         LSL     #$08, D1
00003008  EB49                    4554mm         LSL     #$05, D1
0000300A  E049                    4555mm         LSR     #$08, D1
0000300C  EA49                    4556mm         LSR     #$05, D1
0000300E  43F8 00CE               4557mm         LEA     OAN, A1     
00003012  103C 000E               4558mm         MOVE.B  #14,D0          
00003016  4E4F                    4559mm         TRAP    #15
00003018  103C 0003               4560mm         MOVE.B  #3,D0          
0000301C  4E4F                    4561mm         TRAP    #15
0000301E                          4562mm         ENDM
0000301E                          4563mm         PRINTRB
0000301E  43F8 00D2               4564mm         LEA     ORB, A1     
00003022  103C 000E               4565mm         MOVE.B  #14,D0          
00003026  4E4F                    4566mm         TRAP    #15
00003028                          4567mm         ENDM
00003028                          4568mm         PRINTPI
00003028  43F8 00D9               4569mm         LEA     OPSTINC, A1     
0000302C  103C 000E               4570mm         MOVE.B  #14,D0          
00003030  4E4F                    4571mm         TRAP    #15
00003032                          4572mm         ENDM
00003032  6000 0430               4573m         BRA     COMPLETE_297  
00003036                          4574m ADRREGPREDEC_297: 
00003036  BC3C 0001               4575m         CMP.B   #$01, D6
0000303A  6700 003C               4576m         BEQ     ADRREGPREDECSRC_297   
0000303E                          4577m ADRREGPREDECDEST_297:
0000303E                          4578mm         PRINTPD  
0000303E  43F8 00D7               4579mm         LEA     OPREDEC, A1     
00003042  103C 000E               4580mm         MOVE.B  #14,D0          
00003046  4E4F                    4581mm         TRAP    #15
00003048                          4582mm         ENDM
00003048                          4583mm         PRINTLB
00003048  43F8 00D0               4584mm         LEA     OLB, A1     
0000304C  103C 000E               4585mm         MOVE.B  #14,D0          
00003050  4E4F                    4586mm         TRAP    #15
00003052                          4587mm         ENDM
00003052                          4588mm         PRINTANDEST D3  
00003052  3203                    4589mm         MOVE.W  D3, D1
00003054  E949                    4590mm         LSL     #$04, D1
00003056  E049                    4591mm         LSR     #$08, D1
00003058  EA49                    4592mm         LSR     #$05, D1
0000305A  43F8 00CE               4593mm         LEA     OAN, A1     
0000305E  103C 000E               4594mm         MOVE.B  #14,D0          
00003062  4E4F                    4595mm         TRAP    #15
00003064  103C 0003               4596mm         MOVE.B  #3,D0          
00003068  4E4F                    4597mm         TRAP    #15
0000306A                          4598mm         ENDM
0000306A                          4599mm         PRINTRB
0000306A  43F8 00D2               4600mm         LEA     ORB, A1     
0000306E  103C 000E               4601mm         MOVE.B  #14,D0          
00003072  4E4F                    4602mm         TRAP    #15
00003074                          4603mm         ENDM
00003074  6000 03EE               4604m         BRA     COMPLETE_297   
00003078                          4605m ADRREGPREDECSRC_297: 
00003078                          4606mm         PRINTPD  
00003078  43F8 00D7               4607mm         LEA     OPREDEC, A1     
0000307C  103C 000E               4608mm         MOVE.B  #14,D0          
00003080  4E4F                    4609mm         TRAP    #15
00003082                          4610mm         ENDM
00003082                          4611mm         PRINTLB
00003082  43F8 00D0               4612mm         LEA     OLB, A1     
00003086  103C 000E               4613mm         MOVE.B  #14,D0          
0000308A  4E4F                    4614mm         TRAP    #15
0000308C                          4615mm         ENDM
0000308C                          4616mm         PRINTANSRC D3  
0000308C  3203                    4617mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000308E  E149                    4618mm         LSL     #$08, D1
00003090  EB49                    4619mm         LSL     #$05, D1
00003092  E049                    4620mm         LSR     #$08, D1
00003094  EA49                    4621mm         LSR     #$05, D1
00003096  43F8 00CE               4622mm         LEA     OAN, A1     
0000309A  103C 000E               4623mm         MOVE.B  #14,D0          
0000309E  4E4F                    4624mm         TRAP    #15
000030A0  103C 0003               4625mm         MOVE.B  #3,D0          
000030A4  4E4F                    4626mm         TRAP    #15
000030A6                          4627mm         ENDM
000030A6                          4628mm         PRINTRB
000030A6  43F8 00D2               4629mm         LEA     ORB, A1     
000030AA  103C 000E               4630mm         MOVE.B  #14,D0          
000030AE  4E4F                    4631mm         TRAP    #15
000030B0                          4632mm         ENDM
000030B0  6000 03B2               4633m         BRA     COMPLETE_297
000030B4                          4634m        
000030B4                          4635m ADRABSOLUTE_297:
000030B4  BC3C 0001               4636m         CMP.B   #$01, D6
000030B8  6600 0018               4637m         BNE     ADRABSOLUTEDST_297 
000030BC                          4638m         
000030BC  3A03                    4639m         MOVE.W  D3, D5
000030BE  0803 0002               4640m         BTST    #2, D3
000030C2  6600 0024               4641m         BNE     ADRIMMEDIATE_297
000030C6  0803 0000               4642m         BTST    #0, D3
000030CA  6600 0280               4643m         BNE     ADRABSOLUTEL_297
000030CE  6000 01E6               4644m         BRA     ADRABSOLUTEW_297
000030D2                          4645m ADRABSOLUTEDST_297:
000030D2  3A03                    4646m         MOVE.W  D3, D5
000030D4  0803 000B               4647m         BTST    #$B, D3
000030D8  6600 000E               4648m         BNE     ADRIMMEDIATE_297
000030DC  0803 0009               4649m         BTST    #$09, D3
000030E0  6600 026A               4650m         BNE     ADRABSOLUTEL_297
000030E4  6000 01D0               4651m         BRA     ADRABSOLUTEW_297
000030E8                          4652m ADRIMMEDIATE_297:
000030E8  BE3C 0001               4653m         CMP.B   #1, D7
000030EC  6700 00A2               4654m         BEQ     ADRIMMEDIATEL_297
000030F0                          4655m ADRIMMEDIATEW_297:
000030F0  361A                    4656m         MOVE.W  (A2)+, D3
000030F2                          4657mm         PRINTHASH
000030F2  103C 0006               4658mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000030F6  323C 0023               4659mm         MOVE.W  #35, D1     ; AN = SIGN
000030FA  4E4F                    4660mm         TRAP    #15         ; OUTPUT = SIGN
000030FC                          4661mm         ENDM
000030FC                          4662mm         PRINTSIGN
000030FC  103C 0006               4663mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003100  323C 0024               4664mm         MOVE.W  #36, D1     ; AN = SIGN
00003104  4E4F                    4665mm         TRAP    #15         ; OUTPUT = SIGN
00003106                          4666mm         ENDM
00003106                          4667mm         ADROUT
00003106  103C 0006               4668mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000310A  3212                    4669mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000310C  E049                    4670mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000310E  E849                    4671mm         LSR.W   #4, D1      
00003110                          4672mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003110  0C01 0009               4673mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003114  6E00 000A               4674mmm         BGT     ALPHA_327
00003118  0601 0030               4675mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000311C  6000 0006               4676mmm         BRA     DONE_327
00003120  0601 0037               4677mmm ALPHA_327: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003124  4E71                    4678mmm DONE_327: NOP
00003126                          4679mmm         ENDM
00003126  4E4F                    4680mm         TRAP    #15         ; EXECUTE OUTPUT
00003128                          4681mm         
00003128  3212                    4682mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000312A  E949                    4683mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000312C  E049                    4684mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000312E  E849                    4685mm         LSR.W   #4, D1      
00003130                          4686mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003130  0C01 0009               4687mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003134  6E00 000A               4688mmm         BGT     ALPHA_328
00003138  0601 0030               4689mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000313C  6000 0006               4690mmm         BRA     DONE_328
00003140  0601 0037               4691mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003144  4E71                    4692mmm DONE_328: NOP
00003146                          4693mmm         ENDM
00003146  4E4F                    4694mm         TRAP    #15         ; EXECUTE OUTPUT
00003148                          4695mm         
00003148  3212                    4696mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000314A  E149                    4697mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000314C  E049                    4698mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000314E  E849                    4699mm         LSR.W   #4, D1      
00003150                          4700mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003150  0C01 0009               4701mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003154  6E00 000A               4702mmm         BGT     ALPHA_329
00003158  0601 0030               4703mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000315C  6000 0006               4704mmm         BRA     DONE_329
00003160  0601 0037               4705mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003164  4E71                    4706mmm DONE_329: NOP
00003166                          4707mmm         ENDM
00003166  4E4F                    4708mm         TRAP    #15         ; EXECUTE OUTPUT
00003168                          4709mm         
00003168  3212                    4710mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000316A  E149                    4711mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000316C  E949                    4712mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000316E  E049                    4713mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003170  E849                    4714mm         LSR.W   #4, D1      
00003172                          4715mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003172  0C01 0009               4716mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003176  6E00 000A               4717mmm         BGT     ALPHA_330
0000317A  0601 0030               4718mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000317E  6000 0006               4719mmm         BRA     DONE_330
00003182  0601 0037               4720mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003186  4E71                    4721mmm DONE_330: NOP
00003188                          4722mmm         ENDM
00003188  4E4F                    4723mm         TRAP    #15         ; EXECUTE OUTPUT       
0000318A                          4724mm         ENDM 
0000318A  3605                    4725m         MOVE.W  D5, D3
0000318C  6000 02D6               4726m         BRA     COMPLETE_297
00003190                          4727m ADRIMMEDIATEL_297:
00003190  361A                    4728m         MOVE.W  (A2)+, D3
00003192                          4729mm         PRINTHASH
00003192  103C 0006               4730mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003196  323C 0023               4731mm         MOVE.W  #35, D1     ; AN = SIGN
0000319A  4E4F                    4732mm         TRAP    #15         ; OUTPUT = SIGN
0000319C                          4733mm         ENDM
0000319C                          4734mm         PRINTSIGN
0000319C  103C 0006               4735mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031A0  323C 0024               4736mm         MOVE.W  #36, D1     ; AN = SIGN
000031A4  4E4F                    4737mm         TRAP    #15         ; OUTPUT = SIGN
000031A6                          4738mm         ENDM
000031A6                          4739mm         ADROUT 
000031A6  103C 0006               4740mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000031AA  3212                    4741mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031AC  E049                    4742mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031AE  E849                    4743mm         LSR.W   #4, D1      
000031B0                          4744mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031B0  0C01 0009               4745mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031B4  6E00 000A               4746mmm         BGT     ALPHA_334
000031B8  0601 0030               4747mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031BC  6000 0006               4748mmm         BRA     DONE_334
000031C0  0601 0037               4749mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031C4  4E71                    4750mmm DONE_334: NOP
000031C6                          4751mmm         ENDM
000031C6  4E4F                    4752mm         TRAP    #15         ; EXECUTE OUTPUT
000031C8                          4753mm         
000031C8  3212                    4754mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031CA  E949                    4755mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031CC  E049                    4756mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031CE  E849                    4757mm         LSR.W   #4, D1      
000031D0                          4758mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031D0  0C01 0009               4759mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031D4  6E00 000A               4760mmm         BGT     ALPHA_335
000031D8  0601 0030               4761mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031DC  6000 0006               4762mmm         BRA     DONE_335
000031E0  0601 0037               4763mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031E4  4E71                    4764mmm DONE_335: NOP
000031E6                          4765mmm         ENDM
000031E6  4E4F                    4766mm         TRAP    #15         ; EXECUTE OUTPUT
000031E8                          4767mm         
000031E8  3212                    4768mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031EA  E149                    4769mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031EC  E049                    4770mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031EE  E849                    4771mm         LSR.W   #4, D1      
000031F0                          4772mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031F0  0C01 0009               4773mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031F4  6E00 000A               4774mmm         BGT     ALPHA_336
000031F8  0601 0030               4775mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031FC  6000 0006               4776mmm         BRA     DONE_336
00003200  0601 0037               4777mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003204  4E71                    4778mmm DONE_336: NOP
00003206                          4779mmm         ENDM
00003206  4E4F                    4780mm         TRAP    #15         ; EXECUTE OUTPUT
00003208                          4781mm         
00003208  3212                    4782mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000320A  E149                    4783mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000320C  E949                    4784mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000320E  E049                    4785mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003210  E849                    4786mm         LSR.W   #4, D1      
00003212                          4787mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003212  0C01 0009               4788mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003216  6E00 000A               4789mmm         BGT     ALPHA_337
0000321A  0601 0030               4790mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000321E  6000 0006               4791mmm         BRA     DONE_337
00003222  0601 0037               4792mmm ALPHA_337: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003226  4E71                    4793mmm DONE_337: NOP
00003228                          4794mmm         ENDM
00003228  4E4F                    4795mm         TRAP    #15         ; EXECUTE OUTPUT       
0000322A                          4796mm         ENDM 
0000322A  361A                    4797m         MOVE.W  (A2)+, D3
0000322C                          4798mm         ADROUT
0000322C  103C 0006               4799mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003230  3212                    4800mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003232  E049                    4801mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003234  E849                    4802mm         LSR.W   #4, D1      
00003236                          4803mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003236  0C01 0009               4804mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000323A  6E00 000A               4805mmm         BGT     ALPHA_339
0000323E  0601 0030               4806mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003242  6000 0006               4807mmm         BRA     DONE_339
00003246  0601 0037               4808mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000324A  4E71                    4809mmm DONE_339: NOP
0000324C                          4810mmm         ENDM
0000324C  4E4F                    4811mm         TRAP    #15         ; EXECUTE OUTPUT
0000324E                          4812mm         
0000324E  3212                    4813mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003250  E949                    4814mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003252  E049                    4815mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003254  E849                    4816mm         LSR.W   #4, D1      
00003256                          4817mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003256  0C01 0009               4818mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000325A  6E00 000A               4819mmm         BGT     ALPHA_340
0000325E  0601 0030               4820mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003262  6000 0006               4821mmm         BRA     DONE_340
00003266  0601 0037               4822mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000326A  4E71                    4823mmm DONE_340: NOP
0000326C                          4824mmm         ENDM
0000326C  4E4F                    4825mm         TRAP    #15         ; EXECUTE OUTPUT
0000326E                          4826mm         
0000326E  3212                    4827mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003270  E149                    4828mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003272  E049                    4829mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003274  E849                    4830mm         LSR.W   #4, D1      
00003276                          4831mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003276  0C01 0009               4832mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000327A  6E00 000A               4833mmm         BGT     ALPHA_341
0000327E  0601 0030               4834mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003282  6000 0006               4835mmm         BRA     DONE_341
00003286  0601 0037               4836mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000328A  4E71                    4837mmm DONE_341: NOP
0000328C                          4838mmm         ENDM
0000328C  4E4F                    4839mm         TRAP    #15         ; EXECUTE OUTPUT
0000328E                          4840mm         
0000328E  3212                    4841mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003290  E149                    4842mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003292  E949                    4843mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003294  E049                    4844mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003296  E849                    4845mm         LSR.W   #4, D1      
00003298                          4846mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003298  0C01 0009               4847mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000329C  6E00 000A               4848mmm         BGT     ALPHA_342
000032A0  0601 0030               4849mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032A4  6000 0006               4850mmm         BRA     DONE_342
000032A8  0601 0037               4851mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032AC  4E71                    4852mmm DONE_342: NOP
000032AE                          4853mmm         ENDM
000032AE  4E4F                    4854mm         TRAP    #15         ; EXECUTE OUTPUT       
000032B0                          4855mm         ENDM 
000032B0  3605                    4856m         MOVE.W  D5, D3
000032B2  6000 01B0               4857m         BRA     COMPLETE_297 
000032B6                          4858m ADRABSOLUTEW_297:     
000032B6  361A                    4859m         MOVE.W  (A2)+, D3
000032B8                          4860mm         PRINTSIGN
000032B8  103C 0006               4861mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032BC  323C 0024               4862mm         MOVE.W  #36, D1     ; AN = SIGN
000032C0  4E4F                    4863mm         TRAP    #15         ; OUTPUT = SIGN
000032C2                          4864mm         ENDM
000032C2                          4865mm         ADROUT
000032C2  103C 0006               4866mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032C6  3212                    4867mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032C8  E049                    4868mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032CA  E849                    4869mm         LSR.W   #4, D1      
000032CC                          4870mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032CC  0C01 0009               4871mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032D0  6E00 000A               4872mmm         BGT     ALPHA_345
000032D4  0601 0030               4873mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032D8  6000 0006               4874mmm         BRA     DONE_345
000032DC  0601 0037               4875mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032E0  4E71                    4876mmm DONE_345: NOP
000032E2                          4877mmm         ENDM
000032E2  4E4F                    4878mm         TRAP    #15         ; EXECUTE OUTPUT
000032E4                          4879mm         
000032E4  3212                    4880mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E6  E949                    4881mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032E8  E049                    4882mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032EA  E849                    4883mm         LSR.W   #4, D1      
000032EC                          4884mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032EC  0C01 0009               4885mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032F0  6E00 000A               4886mmm         BGT     ALPHA_346
000032F4  0601 0030               4887mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032F8  6000 0006               4888mmm         BRA     DONE_346
000032FC  0601 0037               4889mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003300  4E71                    4890mmm DONE_346: NOP
00003302                          4891mmm         ENDM
00003302  4E4F                    4892mm         TRAP    #15         ; EXECUTE OUTPUT
00003304                          4893mm         
00003304  3212                    4894mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003306  E149                    4895mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003308  E049                    4896mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000330A  E849                    4897mm         LSR.W   #4, D1      
0000330C                          4898mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000330C  0C01 0009               4899mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003310  6E00 000A               4900mmm         BGT     ALPHA_347
00003314  0601 0030               4901mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003318  6000 0006               4902mmm         BRA     DONE_347
0000331C  0601 0037               4903mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003320  4E71                    4904mmm DONE_347: NOP
00003322                          4905mmm         ENDM
00003322  4E4F                    4906mm         TRAP    #15         ; EXECUTE OUTPUT
00003324                          4907mm         
00003324  3212                    4908mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003326  E149                    4909mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003328  E949                    4910mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000332A  E049                    4911mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000332C  E849                    4912mm         LSR.W   #4, D1      
0000332E                          4913mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000332E  0C01 0009               4914mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003332  6E00 000A               4915mmm         BGT     ALPHA_348
00003336  0601 0030               4916mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000333A  6000 0006               4917mmm         BRA     DONE_348
0000333E  0601 0037               4918mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003342  4E71                    4919mmm DONE_348: NOP
00003344                          4920mmm         ENDM
00003344  4E4F                    4921mm         TRAP    #15         ; EXECUTE OUTPUT       
00003346                          4922mm         ENDM 
00003346  3605                    4923m         MOVE.W  D5, D3
00003348  6000 011A               4924m         BRA     COMPLETE_297  
0000334C                          4925m ADRABSOLUTEL_297:  
0000334C  361A                    4926m         MOVE.W  (A2)+, D3
0000334E                          4927mm         PRINTSIGN
0000334E  103C 0006               4928mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003352  323C 0024               4929mm         MOVE.W  #36, D1     ; AN = SIGN
00003356  4E4F                    4930mm         TRAP    #15         ; OUTPUT = SIGN
00003358                          4931mm         ENDM
00003358                          4932mm         ADROUT 
00003358  103C 0006               4933mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000335C  3212                    4934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000335E  E049                    4935mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003360  E849                    4936mm         LSR.W   #4, D1      
00003362                          4937mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003362  0C01 0009               4938mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003366  6E00 000A               4939mmm         BGT     ALPHA_351
0000336A  0601 0030               4940mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000336E  6000 0006               4941mmm         BRA     DONE_351
00003372  0601 0037               4942mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003376  4E71                    4943mmm DONE_351: NOP
00003378                          4944mmm         ENDM
00003378  4E4F                    4945mm         TRAP    #15         ; EXECUTE OUTPUT
0000337A                          4946mm         
0000337A  3212                    4947mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000337C  E949                    4948mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000337E  E049                    4949mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003380  E849                    4950mm         LSR.W   #4, D1      
00003382                          4951mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003382  0C01 0009               4952mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003386  6E00 000A               4953mmm         BGT     ALPHA_352
0000338A  0601 0030               4954mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000338E  6000 0006               4955mmm         BRA     DONE_352
00003392  0601 0037               4956mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003396  4E71                    4957mmm DONE_352: NOP
00003398                          4958mmm         ENDM
00003398  4E4F                    4959mm         TRAP    #15         ; EXECUTE OUTPUT
0000339A                          4960mm         
0000339A  3212                    4961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000339C  E149                    4962mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000339E  E049                    4963mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033A0  E849                    4964mm         LSR.W   #4, D1      
000033A2                          4965mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033A2  0C01 0009               4966mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033A6  6E00 000A               4967mmm         BGT     ALPHA_353
000033AA  0601 0030               4968mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033AE  6000 0006               4969mmm         BRA     DONE_353
000033B2  0601 0037               4970mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033B6  4E71                    4971mmm DONE_353: NOP
000033B8                          4972mmm         ENDM
000033B8  4E4F                    4973mm         TRAP    #15         ; EXECUTE OUTPUT
000033BA                          4974mm         
000033BA  3212                    4975mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033BC  E149                    4976mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033BE  E949                    4977mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000033C0  E049                    4978mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033C2  E849                    4979mm         LSR.W   #4, D1      
000033C4                          4980mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033C4  0C01 0009               4981mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033C8  6E00 000A               4982mmm         BGT     ALPHA_354
000033CC  0601 0030               4983mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033D0  6000 0006               4984mmm         BRA     DONE_354
000033D4  0601 0037               4985mmm ALPHA_354: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033D8  4E71                    4986mmm DONE_354: NOP
000033DA                          4987mmm         ENDM
000033DA  4E4F                    4988mm         TRAP    #15         ; EXECUTE OUTPUT       
000033DC                          4989mm         ENDM 
000033DC  361A                    4990m         MOVE.W  (A2)+, D3
000033DE                          4991mm         ADROUT
000033DE  103C 0006               4992mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000033E2  3212                    4993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033E4  E049                    4994mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033E6  E849                    4995mm         LSR.W   #4, D1      
000033E8                          4996mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033E8  0C01 0009               4997mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033EC  6E00 000A               4998mmm         BGT     ALPHA_356
000033F0  0601 0030               4999mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033F4  6000 0006               5000mmm         BRA     DONE_356
000033F8  0601 0037               5001mmm ALPHA_356: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033FC  4E71                    5002mmm DONE_356: NOP
000033FE                          5003mmm         ENDM
000033FE  4E4F                    5004mm         TRAP    #15         ; EXECUTE OUTPUT
00003400                          5005mm         
00003400  3212                    5006mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003402  E949                    5007mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003404  E049                    5008mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003406  E849                    5009mm         LSR.W   #4, D1      
00003408                          5010mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003408  0C01 0009               5011mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000340C  6E00 000A               5012mmm         BGT     ALPHA_357
00003410  0601 0030               5013mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003414  6000 0006               5014mmm         BRA     DONE_357
00003418  0601 0037               5015mmm ALPHA_357: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000341C  4E71                    5016mmm DONE_357: NOP
0000341E                          5017mmm         ENDM
0000341E  4E4F                    5018mm         TRAP    #15         ; EXECUTE OUTPUT
00003420                          5019mm         
00003420  3212                    5020mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003422  E149                    5021mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003424  E049                    5022mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003426  E849                    5023mm         LSR.W   #4, D1      
00003428                          5024mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003428  0C01 0009               5025mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000342C  6E00 000A               5026mmm         BGT     ALPHA_358
00003430  0601 0030               5027mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003434  6000 0006               5028mmm         BRA     DONE_358
00003438  0601 0037               5029mmm ALPHA_358: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000343C  4E71                    5030mmm DONE_358: NOP
0000343E                          5031mmm         ENDM
0000343E  4E4F                    5032mm         TRAP    #15         ; EXECUTE OUTPUT
00003440                          5033mm         
00003440  3212                    5034mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003442  E149                    5035mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003444  E949                    5036mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003446  E049                    5037mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003448  E849                    5038mm         LSR.W   #4, D1      
0000344A                          5039mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000344A  0C01 0009               5040mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000344E  6E00 000A               5041mmm         BGT     ALPHA_359
00003452  0601 0030               5042mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003456  6000 0006               5043mmm         BRA     DONE_359
0000345A  0601 0037               5044mmm ALPHA_359: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000345E  4E71                    5045mmm DONE_359: NOP
00003460                          5046mmm         ENDM
00003460  4E4F                    5047mm         TRAP    #15         ; EXECUTE OUTPUT       
00003462                          5048mm         ENDM 
00003462  3605                    5049m         MOVE.W  D5, D3
00003464                          5050m 
00003464                          5051m COMPLETE_297:  ; OPCODE HAS BEEN VERIFIED
00003464                          5052m         ENDM
00003464  6000 060C               5053          BRA     decodeSUBcomp
00003468                          5054  decodeSubDestOp:
00003468                          5055m         prepareAdrMode  #$1,(A2)
00003468  3C3C 0001               5056m         MOVE.W  #$1, D6      ; INPUT VALUE
0000346C  3212                    5057m         MOVE.W  (A2), D1
0000346E  BC3C 0001               5058m         CMP.B   #$01, D6
00003472  6700 000C               5059m         BEQ     ADRSOURCE_360    
00003476                          5060m ADRDEST_360:
00003476  EF49                    5061m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003478  E049                    5062m         LSR     #$08, D1
0000347A  EA49                    5063m         LSR     #$05, D1
0000347C  6000 000A               5064m         BRA     COMPLETE_360 
00003480                          5065m ADRSOURCE_360:                
00003480  E149                    5066m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003482  E549                    5067m         LSL     #$02, D1
00003484  E049                    5068m         LSR     #$08, D1
00003486  EA49                    5069m         LSR     #$05, D1
00003488                          5070m COMPLETE_360:  ; OPCODE HAS BEEN VERIFIED
00003488                          5071m         ENDM        
00003488                          5072m         decodeAdrMode   (A2), D1
00003488  3612                    5073m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000348A  3201                    5074m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000348C                          5075m 
0000348C  B23C 0001               5076m         CMP.B   #$01, D1
00003490  6700 0066               5077m         BEQ     ADRREGDIRECT_361    
00003494  B23C 0002               5078m         CMP.B   #$02, D1
00003498  6700 00A0               5079m         BEQ     ADRREGINDIRECT_361  
0000349C  B23C 0003               5080m         CMP.B   #$03, D1
000034A0  6700 0102               5081m         BEQ     ADRREGPOSTINC_361  
000034A4  B23C 0004               5082m         CMP.B   #$04, D1
000034A8  6700 0178               5083m         BEQ     ADRREGPREDEC_361
000034AC  B23C 0007               5084m         CMP.B   #$07, D1
000034B0  6700 01EE               5085m         BEQ     ADRABSOLUTE_361    
000034B4                          5086m         
000034B4                          5087m DATAREGDIRECT_361: 
000034B4  BC3C 0001               5088m         CMP.B   #$01, D6
000034B8  6700 001E               5089m         BEQ     DATAREGDIRECTSRC_361   
000034BC                          5090m DATAREGDIRECTDEST_361: 
000034BC                          5091mm         PRINTDNDEST D3 
000034BC  3203                    5092mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000034BE  E949                    5093mm         LSL     #$04, D1
000034C0  E049                    5094mm         LSR     #$08, D1
000034C2  EA49                    5095mm         LSR     #$05, D1
000034C4  43F8 00CC               5096mm         LEA     ODN, A1     
000034C8  103C 000E               5097mm         MOVE.B  #14,D0          
000034CC  4E4F                    5098mm         TRAP    #15
000034CE  103C 0003               5099mm         MOVE.B  #3,D0          
000034D2  4E4F                    5100mm         TRAP    #15
000034D4                          5101mm         ENDM
000034D4  6000 057A               5102m         BRA     COMPLETE_361 
000034D8                          5103m DATAREGDIRECTSRC_361: 
000034D8                          5104mm         PRINTDNSRC D3 
000034D8  4281                    5105mm         CLR.L   D1
000034DA  3203                    5106mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034DC  E149                    5107mm         LSL     #$08, D1
000034DE  EB49                    5108mm         LSL     #$05, D1
000034E0  E049                    5109mm         LSR     #$08, D1
000034E2  EA49                    5110mm         LSR     #$05, D1
000034E4  43F8 00CC               5111mm         LEA     ODN, A1     
000034E8  103C 000E               5112mm         MOVE.B  #14,D0          
000034EC  4E4F                    5113mm         TRAP    #15
000034EE  103C 0003               5114mm         MOVE.B  #3,D0          
000034F2  4E4F                    5115mm         TRAP    #15
000034F4                          5116mm         ENDM
000034F4  6000 055A               5117m         BRA     COMPLETE_361   
000034F8                          5118m         
000034F8                          5119m ADRREGDIRECT_361: 
000034F8  BC3C 0001               5120m         CMP.B   #$01, D6
000034FC  6700 001E               5121m         BEQ     ADRREGDIRECTSRC_361   
00003500                          5122m ADRREGDIRECTDEST_361:
00003500                          5123mm         PRINTANDEST D3
00003500  3203                    5124mm         MOVE.W  D3, D1
00003502  E949                    5125mm         LSL     #$04, D1
00003504  E049                    5126mm         LSR     #$08, D1
00003506  EA49                    5127mm         LSR     #$05, D1
00003508  43F8 00CE               5128mm         LEA     OAN, A1     
0000350C  103C 000E               5129mm         MOVE.B  #14,D0          
00003510  4E4F                    5130mm         TRAP    #15
00003512  103C 0003               5131mm         MOVE.B  #3,D0          
00003516  4E4F                    5132mm         TRAP    #15
00003518                          5133mm         ENDM
00003518  6000 0536               5134m         BRA     COMPLETE_361   
0000351C                          5135m ADRREGDIRECTSRC_361:
0000351C                          5136mm         PRINTANSRC D3
0000351C  3203                    5137mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000351E  E149                    5138mm         LSL     #$08, D1
00003520  EB49                    5139mm         LSL     #$05, D1
00003522  E049                    5140mm         LSR     #$08, D1
00003524  EA49                    5141mm         LSR     #$05, D1
00003526  43F8 00CE               5142mm         LEA     OAN, A1     
0000352A  103C 000E               5143mm         MOVE.B  #14,D0          
0000352E  4E4F                    5144mm         TRAP    #15
00003530  103C 0003               5145mm         MOVE.B  #3,D0          
00003534  4E4F                    5146mm         TRAP    #15
00003536                          5147mm         ENDM
00003536  6000 0518               5148m         BRA     COMPLETE_361   
0000353A                          5149m        
0000353A                          5150m ADRREGINDIRECT_361:   
0000353A  BC3C 0001               5151m         CMP.B   #$01, D6
0000353E  6700 0032               5152m         BEQ     ADRREGINDIRECTSRC_361   
00003542                          5153m ADRREGINDIRECTDEST_361:
00003542                          5154mm         PRINTLB
00003542  43F8 00D0               5155mm         LEA     OLB, A1     
00003546  103C 000E               5156mm         MOVE.B  #14,D0          
0000354A  4E4F                    5157mm         TRAP    #15
0000354C                          5158mm         ENDM
0000354C                          5159mm         PRINTANDEST D3  
0000354C  3203                    5160mm         MOVE.W  D3, D1
0000354E  E949                    5161mm         LSL     #$04, D1
00003550  E049                    5162mm         LSR     #$08, D1
00003552  EA49                    5163mm         LSR     #$05, D1
00003554  43F8 00CE               5164mm         LEA     OAN, A1     
00003558  103C 000E               5165mm         MOVE.B  #14,D0          
0000355C  4E4F                    5166mm         TRAP    #15
0000355E  103C 0003               5167mm         MOVE.B  #3,D0          
00003562  4E4F                    5168mm         TRAP    #15
00003564                          5169mm         ENDM
00003564                          5170mm         PRINTRB
00003564  43F8 00D2               5171mm         LEA     ORB, A1     
00003568  103C 000E               5172mm         MOVE.B  #14,D0          
0000356C  4E4F                    5173mm         TRAP    #15
0000356E                          5174mm         ENDM
0000356E  6000 04E0               5175m         BRA     COMPLETE_361     
00003572                          5176m ADRREGINDIRECTSRC_361:   
00003572                          5177mm         PRINTLB
00003572  43F8 00D0               5178mm         LEA     OLB, A1     
00003576  103C 000E               5179mm         MOVE.B  #14,D0          
0000357A  4E4F                    5180mm         TRAP    #15
0000357C                          5181mm         ENDM
0000357C                          5182mm         PRINTANSRC D3  
0000357C  3203                    5183mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000357E  E149                    5184mm         LSL     #$08, D1
00003580  EB49                    5185mm         LSL     #$05, D1
00003582  E049                    5186mm         LSR     #$08, D1
00003584  EA49                    5187mm         LSR     #$05, D1
00003586  43F8 00CE               5188mm         LEA     OAN, A1     
0000358A  103C 000E               5189mm         MOVE.B  #14,D0          
0000358E  4E4F                    5190mm         TRAP    #15
00003590  103C 0003               5191mm         MOVE.B  #3,D0          
00003594  4E4F                    5192mm         TRAP    #15
00003596                          5193mm         ENDM
00003596                          5194mm         PRINTRB
00003596  43F8 00D2               5195mm         LEA     ORB, A1     
0000359A  103C 000E               5196mm         MOVE.B  #14,D0          
0000359E  4E4F                    5197mm         TRAP    #15
000035A0                          5198mm         ENDM
000035A0  6000 04AE               5199m         BRA     COMPLETE_361   
000035A4                          5200m         
000035A4                          5201m ADRREGPOSTINC_361:   
000035A4  BC3C 0001               5202m         CMP.B   #$01, D6
000035A8  6700 003C               5203m         BEQ     ADRREGPOSTINCSRC_361   
000035AC                          5204m ADRREGPOSTINCDEST_361: 
000035AC                          5205mm         PRINTLB
000035AC  43F8 00D0               5206mm         LEA     OLB, A1     
000035B0  103C 000E               5207mm         MOVE.B  #14,D0          
000035B4  4E4F                    5208mm         TRAP    #15
000035B6                          5209mm         ENDM
000035B6                          5210mm         PRINTANDEST D3  
000035B6  3203                    5211mm         MOVE.W  D3, D1
000035B8  E949                    5212mm         LSL     #$04, D1
000035BA  E049                    5213mm         LSR     #$08, D1
000035BC  EA49                    5214mm         LSR     #$05, D1
000035BE  43F8 00CE               5215mm         LEA     OAN, A1     
000035C2  103C 000E               5216mm         MOVE.B  #14,D0          
000035C6  4E4F                    5217mm         TRAP    #15
000035C8  103C 0003               5218mm         MOVE.B  #3,D0          
000035CC  4E4F                    5219mm         TRAP    #15
000035CE                          5220mm         ENDM
000035CE                          5221mm         PRINTRB
000035CE  43F8 00D2               5222mm         LEA     ORB, A1     
000035D2  103C 000E               5223mm         MOVE.B  #14,D0          
000035D6  4E4F                    5224mm         TRAP    #15
000035D8                          5225mm         ENDM
000035D8                          5226mm         PRINTPI
000035D8  43F8 00D9               5227mm         LEA     OPSTINC, A1     
000035DC  103C 000E               5228mm         MOVE.B  #14,D0          
000035E0  4E4F                    5229mm         TRAP    #15
000035E2                          5230mm         ENDM
000035E2  6000 046C               5231m         BRA     COMPLETE_361  
000035E6                          5232m ADRREGPOSTINCSRC_361:           
000035E6                          5233mm         PRINTLB
000035E6  43F8 00D0               5234mm         LEA     OLB, A1     
000035EA  103C 000E               5235mm         MOVE.B  #14,D0          
000035EE  4E4F                    5236mm         TRAP    #15
000035F0                          5237mm         ENDM
000035F0                          5238mm         PRINTANSRC D3  
000035F0  3203                    5239mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000035F2  E149                    5240mm         LSL     #$08, D1
000035F4  EB49                    5241mm         LSL     #$05, D1
000035F6  E049                    5242mm         LSR     #$08, D1
000035F8  EA49                    5243mm         LSR     #$05, D1
000035FA  43F8 00CE               5244mm         LEA     OAN, A1     
000035FE  103C 000E               5245mm         MOVE.B  #14,D0          
00003602  4E4F                    5246mm         TRAP    #15
00003604  103C 0003               5247mm         MOVE.B  #3,D0          
00003608  4E4F                    5248mm         TRAP    #15
0000360A                          5249mm         ENDM
0000360A                          5250mm         PRINTRB
0000360A  43F8 00D2               5251mm         LEA     ORB, A1     
0000360E  103C 000E               5252mm         MOVE.B  #14,D0          
00003612  4E4F                    5253mm         TRAP    #15
00003614                          5254mm         ENDM
00003614                          5255mm         PRINTPI
00003614  43F8 00D9               5256mm         LEA     OPSTINC, A1     
00003618  103C 000E               5257mm         MOVE.B  #14,D0          
0000361C  4E4F                    5258mm         TRAP    #15
0000361E                          5259mm         ENDM
0000361E  6000 0430               5260m         BRA     COMPLETE_361  
00003622                          5261m ADRREGPREDEC_361: 
00003622  BC3C 0001               5262m         CMP.B   #$01, D6
00003626  6700 003C               5263m         BEQ     ADRREGPREDECSRC_361   
0000362A                          5264m ADRREGPREDECDEST_361:
0000362A                          5265mm         PRINTPD  
0000362A  43F8 00D7               5266mm         LEA     OPREDEC, A1     
0000362E  103C 000E               5267mm         MOVE.B  #14,D0          
00003632  4E4F                    5268mm         TRAP    #15
00003634                          5269mm         ENDM
00003634                          5270mm         PRINTLB
00003634  43F8 00D0               5271mm         LEA     OLB, A1     
00003638  103C 000E               5272mm         MOVE.B  #14,D0          
0000363C  4E4F                    5273mm         TRAP    #15
0000363E                          5274mm         ENDM
0000363E                          5275mm         PRINTANDEST D3  
0000363E  3203                    5276mm         MOVE.W  D3, D1
00003640  E949                    5277mm         LSL     #$04, D1
00003642  E049                    5278mm         LSR     #$08, D1
00003644  EA49                    5279mm         LSR     #$05, D1
00003646  43F8 00CE               5280mm         LEA     OAN, A1     
0000364A  103C 000E               5281mm         MOVE.B  #14,D0          
0000364E  4E4F                    5282mm         TRAP    #15
00003650  103C 0003               5283mm         MOVE.B  #3,D0          
00003654  4E4F                    5284mm         TRAP    #15
00003656                          5285mm         ENDM
00003656                          5286mm         PRINTRB
00003656  43F8 00D2               5287mm         LEA     ORB, A1     
0000365A  103C 000E               5288mm         MOVE.B  #14,D0          
0000365E  4E4F                    5289mm         TRAP    #15
00003660                          5290mm         ENDM
00003660  6000 03EE               5291m         BRA     COMPLETE_361   
00003664                          5292m ADRREGPREDECSRC_361: 
00003664                          5293mm         PRINTPD  
00003664  43F8 00D7               5294mm         LEA     OPREDEC, A1     
00003668  103C 000E               5295mm         MOVE.B  #14,D0          
0000366C  4E4F                    5296mm         TRAP    #15
0000366E                          5297mm         ENDM
0000366E                          5298mm         PRINTLB
0000366E  43F8 00D0               5299mm         LEA     OLB, A1     
00003672  103C 000E               5300mm         MOVE.B  #14,D0          
00003676  4E4F                    5301mm         TRAP    #15
00003678                          5302mm         ENDM
00003678                          5303mm         PRINTANSRC D3  
00003678  3203                    5304mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000367A  E149                    5305mm         LSL     #$08, D1
0000367C  EB49                    5306mm         LSL     #$05, D1
0000367E  E049                    5307mm         LSR     #$08, D1
00003680  EA49                    5308mm         LSR     #$05, D1
00003682  43F8 00CE               5309mm         LEA     OAN, A1     
00003686  103C 000E               5310mm         MOVE.B  #14,D0          
0000368A  4E4F                    5311mm         TRAP    #15
0000368C  103C 0003               5312mm         MOVE.B  #3,D0          
00003690  4E4F                    5313mm         TRAP    #15
00003692                          5314mm         ENDM
00003692                          5315mm         PRINTRB
00003692  43F8 00D2               5316mm         LEA     ORB, A1     
00003696  103C 000E               5317mm         MOVE.B  #14,D0          
0000369A  4E4F                    5318mm         TRAP    #15
0000369C                          5319mm         ENDM
0000369C  6000 03B2               5320m         BRA     COMPLETE_361
000036A0                          5321m        
000036A0                          5322m ADRABSOLUTE_361:
000036A0  BC3C 0001               5323m         CMP.B   #$01, D6
000036A4  6600 0018               5324m         BNE     ADRABSOLUTEDST_361 
000036A8                          5325m         
000036A8  3A03                    5326m         MOVE.W  D3, D5
000036AA  0803 0002               5327m         BTST    #2, D3
000036AE  6600 0024               5328m         BNE     ADRIMMEDIATE_361
000036B2  0803 0000               5329m         BTST    #0, D3
000036B6  6600 0280               5330m         BNE     ADRABSOLUTEL_361
000036BA  6000 01E6               5331m         BRA     ADRABSOLUTEW_361
000036BE                          5332m ADRABSOLUTEDST_361:
000036BE  3A03                    5333m         MOVE.W  D3, D5
000036C0  0803 000B               5334m         BTST    #$B, D3
000036C4  6600 000E               5335m         BNE     ADRIMMEDIATE_361
000036C8  0803 0009               5336m         BTST    #$09, D3
000036CC  6600 026A               5337m         BNE     ADRABSOLUTEL_361
000036D0  6000 01D0               5338m         BRA     ADRABSOLUTEW_361
000036D4                          5339m ADRIMMEDIATE_361:
000036D4  BE3C 0001               5340m         CMP.B   #1, D7
000036D8  6700 00A2               5341m         BEQ     ADRIMMEDIATEL_361
000036DC                          5342m ADRIMMEDIATEW_361:
000036DC  361A                    5343m         MOVE.W  (A2)+, D3
000036DE                          5344mm         PRINTHASH
000036DE  103C 0006               5345mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036E2  323C 0023               5346mm         MOVE.W  #35, D1     ; AN = SIGN
000036E6  4E4F                    5347mm         TRAP    #15         ; OUTPUT = SIGN
000036E8                          5348mm         ENDM
000036E8                          5349mm         PRINTSIGN
000036E8  103C 0006               5350mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036EC  323C 0024               5351mm         MOVE.W  #36, D1     ; AN = SIGN
000036F0  4E4F                    5352mm         TRAP    #15         ; OUTPUT = SIGN
000036F2                          5353mm         ENDM
000036F2                          5354mm         ADROUT
000036F2  103C 0006               5355mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036F6  3212                    5356mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036F8  E049                    5357mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036FA  E849                    5358mm         LSR.W   #4, D1      
000036FC                          5359mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036FC  0C01 0009               5360mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003700  6E00 000A               5361mmm         BGT     ALPHA_391
00003704  0601 0030               5362mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003708  6000 0006               5363mmm         BRA     DONE_391
0000370C  0601 0037               5364mmm ALPHA_391: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003710  4E71                    5365mmm DONE_391: NOP
00003712                          5366mmm         ENDM
00003712  4E4F                    5367mm         TRAP    #15         ; EXECUTE OUTPUT
00003714                          5368mm         
00003714  3212                    5369mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003716  E949                    5370mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003718  E049                    5371mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000371A  E849                    5372mm         LSR.W   #4, D1      
0000371C                          5373mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000371C  0C01 0009               5374mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003720  6E00 000A               5375mmm         BGT     ALPHA_392
00003724  0601 0030               5376mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003728  6000 0006               5377mmm         BRA     DONE_392
0000372C  0601 0037               5378mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003730  4E71                    5379mmm DONE_392: NOP
00003732                          5380mmm         ENDM
00003732  4E4F                    5381mm         TRAP    #15         ; EXECUTE OUTPUT
00003734                          5382mm         
00003734  3212                    5383mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003736  E149                    5384mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003738  E049                    5385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000373A  E849                    5386mm         LSR.W   #4, D1      
0000373C                          5387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000373C  0C01 0009               5388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003740  6E00 000A               5389mmm         BGT     ALPHA_393
00003744  0601 0030               5390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003748  6000 0006               5391mmm         BRA     DONE_393
0000374C  0601 0037               5392mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003750  4E71                    5393mmm DONE_393: NOP
00003752                          5394mmm         ENDM
00003752  4E4F                    5395mm         TRAP    #15         ; EXECUTE OUTPUT
00003754                          5396mm         
00003754  3212                    5397mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003756  E149                    5398mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003758  E949                    5399mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000375A  E049                    5400mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000375C  E849                    5401mm         LSR.W   #4, D1      
0000375E                          5402mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000375E  0C01 0009               5403mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003762  6E00 000A               5404mmm         BGT     ALPHA_394
00003766  0601 0030               5405mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000376A  6000 0006               5406mmm         BRA     DONE_394
0000376E  0601 0037               5407mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003772  4E71                    5408mmm DONE_394: NOP
00003774                          5409mmm         ENDM
00003774  4E4F                    5410mm         TRAP    #15         ; EXECUTE OUTPUT       
00003776                          5411mm         ENDM 
00003776  3605                    5412m         MOVE.W  D5, D3
00003778  6000 02D6               5413m         BRA     COMPLETE_361
0000377C                          5414m ADRIMMEDIATEL_361:
0000377C  361A                    5415m         MOVE.W  (A2)+, D3
0000377E                          5416mm         PRINTHASH
0000377E  103C 0006               5417mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003782  323C 0023               5418mm         MOVE.W  #35, D1     ; AN = SIGN
00003786  4E4F                    5419mm         TRAP    #15         ; OUTPUT = SIGN
00003788                          5420mm         ENDM
00003788                          5421mm         PRINTSIGN
00003788  103C 0006               5422mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000378C  323C 0024               5423mm         MOVE.W  #36, D1     ; AN = SIGN
00003790  4E4F                    5424mm         TRAP    #15         ; OUTPUT = SIGN
00003792                          5425mm         ENDM
00003792                          5426mm         ADROUT 
00003792  103C 0006               5427mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003796  3212                    5428mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003798  E049                    5429mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000379A  E849                    5430mm         LSR.W   #4, D1      
0000379C                          5431mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000379C  0C01 0009               5432mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037A0  6E00 000A               5433mmm         BGT     ALPHA_398
000037A4  0601 0030               5434mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037A8  6000 0006               5435mmm         BRA     DONE_398
000037AC  0601 0037               5436mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037B0  4E71                    5437mmm DONE_398: NOP
000037B2                          5438mmm         ENDM
000037B2  4E4F                    5439mm         TRAP    #15         ; EXECUTE OUTPUT
000037B4                          5440mm         
000037B4  3212                    5441mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037B6  E949                    5442mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000037B8  E049                    5443mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037BA  E849                    5444mm         LSR.W   #4, D1      
000037BC                          5445mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037BC  0C01 0009               5446mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037C0  6E00 000A               5447mmm         BGT     ALPHA_399
000037C4  0601 0030               5448mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037C8  6000 0006               5449mmm         BRA     DONE_399
000037CC  0601 0037               5450mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037D0  4E71                    5451mmm DONE_399: NOP
000037D2                          5452mmm         ENDM
000037D2  4E4F                    5453mm         TRAP    #15         ; EXECUTE OUTPUT
000037D4                          5454mm         
000037D4  3212                    5455mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037D6  E149                    5456mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037D8  E049                    5457mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037DA  E849                    5458mm         LSR.W   #4, D1      
000037DC                          5459mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037DC  0C01 0009               5460mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037E0  6E00 000A               5461mmm         BGT     ALPHA_400
000037E4  0601 0030               5462mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037E8  6000 0006               5463mmm         BRA     DONE_400
000037EC  0601 0037               5464mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037F0  4E71                    5465mmm DONE_400: NOP
000037F2                          5466mmm         ENDM
000037F2  4E4F                    5467mm         TRAP    #15         ; EXECUTE OUTPUT
000037F4                          5468mm         
000037F4  3212                    5469mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037F6  E149                    5470mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037F8  E949                    5471mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037FA  E049                    5472mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037FC  E849                    5473mm         LSR.W   #4, D1      
000037FE                          5474mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037FE  0C01 0009               5475mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003802  6E00 000A               5476mmm         BGT     ALPHA_401
00003806  0601 0030               5477mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000380A  6000 0006               5478mmm         BRA     DONE_401
0000380E  0601 0037               5479mmm ALPHA_401: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003812  4E71                    5480mmm DONE_401: NOP
00003814                          5481mmm         ENDM
00003814  4E4F                    5482mm         TRAP    #15         ; EXECUTE OUTPUT       
00003816                          5483mm         ENDM 
00003816  361A                    5484m         MOVE.W  (A2)+, D3
00003818                          5485mm         ADROUT
00003818  103C 0006               5486mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000381C  3212                    5487mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000381E  E049                    5488mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003820  E849                    5489mm         LSR.W   #4, D1      
00003822                          5490mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003822  0C01 0009               5491mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003826  6E00 000A               5492mmm         BGT     ALPHA_403
0000382A  0601 0030               5493mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000382E  6000 0006               5494mmm         BRA     DONE_403
00003832  0601 0037               5495mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003836  4E71                    5496mmm DONE_403: NOP
00003838                          5497mmm         ENDM
00003838  4E4F                    5498mm         TRAP    #15         ; EXECUTE OUTPUT
0000383A                          5499mm         
0000383A  3212                    5500mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000383C  E949                    5501mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000383E  E049                    5502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003840  E849                    5503mm         LSR.W   #4, D1      
00003842                          5504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003842  0C01 0009               5505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003846  6E00 000A               5506mmm         BGT     ALPHA_404
0000384A  0601 0030               5507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000384E  6000 0006               5508mmm         BRA     DONE_404
00003852  0601 0037               5509mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003856  4E71                    5510mmm DONE_404: NOP
00003858                          5511mmm         ENDM
00003858  4E4F                    5512mm         TRAP    #15         ; EXECUTE OUTPUT
0000385A                          5513mm         
0000385A  3212                    5514mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000385C  E149                    5515mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000385E  E049                    5516mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003860  E849                    5517mm         LSR.W   #4, D1      
00003862                          5518mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003862  0C01 0009               5519mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003866  6E00 000A               5520mmm         BGT     ALPHA_405
0000386A  0601 0030               5521mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000386E  6000 0006               5522mmm         BRA     DONE_405
00003872  0601 0037               5523mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003876  4E71                    5524mmm DONE_405: NOP
00003878                          5525mmm         ENDM
00003878  4E4F                    5526mm         TRAP    #15         ; EXECUTE OUTPUT
0000387A                          5527mm         
0000387A  3212                    5528mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000387C  E149                    5529mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000387E  E949                    5530mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003880  E049                    5531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003882  E849                    5532mm         LSR.W   #4, D1      
00003884                          5533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003884  0C01 0009               5534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003888  6E00 000A               5535mmm         BGT     ALPHA_406
0000388C  0601 0030               5536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003890  6000 0006               5537mmm         BRA     DONE_406
00003894  0601 0037               5538mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003898  4E71                    5539mmm DONE_406: NOP
0000389A                          5540mmm         ENDM
0000389A  4E4F                    5541mm         TRAP    #15         ; EXECUTE OUTPUT       
0000389C                          5542mm         ENDM 
0000389C  3605                    5543m         MOVE.W  D5, D3
0000389E  6000 01B0               5544m         BRA     COMPLETE_361 
000038A2                          5545m ADRABSOLUTEW_361:     
000038A2  361A                    5546m         MOVE.W  (A2)+, D3
000038A4                          5547mm         PRINTSIGN
000038A4  103C 0006               5548mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038A8  323C 0024               5549mm         MOVE.W  #36, D1     ; AN = SIGN
000038AC  4E4F                    5550mm         TRAP    #15         ; OUTPUT = SIGN
000038AE                          5551mm         ENDM
000038AE                          5552mm         ADROUT
000038AE  103C 0006               5553mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038B2  3212                    5554mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038B4  E049                    5555mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038B6  E849                    5556mm         LSR.W   #4, D1      
000038B8                          5557mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038B8  0C01 0009               5558mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038BC  6E00 000A               5559mmm         BGT     ALPHA_409
000038C0  0601 0030               5560mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038C4  6000 0006               5561mmm         BRA     DONE_409
000038C8  0601 0037               5562mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038CC  4E71                    5563mmm DONE_409: NOP
000038CE                          5564mmm         ENDM
000038CE  4E4F                    5565mm         TRAP    #15         ; EXECUTE OUTPUT
000038D0                          5566mm         
000038D0  3212                    5567mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038D2  E949                    5568mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000038D4  E049                    5569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038D6  E849                    5570mm         LSR.W   #4, D1      
000038D8                          5571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038D8  0C01 0009               5572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038DC  6E00 000A               5573mmm         BGT     ALPHA_410
000038E0  0601 0030               5574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038E4  6000 0006               5575mmm         BRA     DONE_410
000038E8  0601 0037               5576mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038EC  4E71                    5577mmm DONE_410: NOP
000038EE                          5578mmm         ENDM
000038EE  4E4F                    5579mm         TRAP    #15         ; EXECUTE OUTPUT
000038F0                          5580mm         
000038F0  3212                    5581mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038F2  E149                    5582mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038F4  E049                    5583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038F6  E849                    5584mm         LSR.W   #4, D1      
000038F8                          5585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038F8  0C01 0009               5586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038FC  6E00 000A               5587mmm         BGT     ALPHA_411
00003900  0601 0030               5588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003904  6000 0006               5589mmm         BRA     DONE_411
00003908  0601 0037               5590mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000390C  4E71                    5591mmm DONE_411: NOP
0000390E                          5592mmm         ENDM
0000390E  4E4F                    5593mm         TRAP    #15         ; EXECUTE OUTPUT
00003910                          5594mm         
00003910  3212                    5595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003912  E149                    5596mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003914  E949                    5597mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003916  E049                    5598mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003918  E849                    5599mm         LSR.W   #4, D1      
0000391A                          5600mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000391A  0C01 0009               5601mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000391E  6E00 000A               5602mmm         BGT     ALPHA_412
00003922  0601 0030               5603mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003926  6000 0006               5604mmm         BRA     DONE_412
0000392A  0601 0037               5605mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000392E  4E71                    5606mmm DONE_412: NOP
00003930                          5607mmm         ENDM
00003930  4E4F                    5608mm         TRAP    #15         ; EXECUTE OUTPUT       
00003932                          5609mm         ENDM 
00003932  3605                    5610m         MOVE.W  D5, D3
00003934  6000 011A               5611m         BRA     COMPLETE_361  
00003938                          5612m ADRABSOLUTEL_361:  
00003938  361A                    5613m         MOVE.W  (A2)+, D3
0000393A                          5614mm         PRINTSIGN
0000393A  103C 0006               5615mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000393E  323C 0024               5616mm         MOVE.W  #36, D1     ; AN = SIGN
00003942  4E4F                    5617mm         TRAP    #15         ; OUTPUT = SIGN
00003944                          5618mm         ENDM
00003944                          5619mm         ADROUT 
00003944  103C 0006               5620mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003948  3212                    5621mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000394A  E049                    5622mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000394C  E849                    5623mm         LSR.W   #4, D1      
0000394E                          5624mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000394E  0C01 0009               5625mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003952  6E00 000A               5626mmm         BGT     ALPHA_415
00003956  0601 0030               5627mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000395A  6000 0006               5628mmm         BRA     DONE_415
0000395E  0601 0037               5629mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003962  4E71                    5630mmm DONE_415: NOP
00003964                          5631mmm         ENDM
00003964  4E4F                    5632mm         TRAP    #15         ; EXECUTE OUTPUT
00003966                          5633mm         
00003966  3212                    5634mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003968  E949                    5635mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000396A  E049                    5636mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000396C  E849                    5637mm         LSR.W   #4, D1      
0000396E                          5638mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000396E  0C01 0009               5639mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003972  6E00 000A               5640mmm         BGT     ALPHA_416
00003976  0601 0030               5641mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000397A  6000 0006               5642mmm         BRA     DONE_416
0000397E  0601 0037               5643mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003982  4E71                    5644mmm DONE_416: NOP
00003984                          5645mmm         ENDM
00003984  4E4F                    5646mm         TRAP    #15         ; EXECUTE OUTPUT
00003986                          5647mm         
00003986  3212                    5648mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003988  E149                    5649mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000398A  E049                    5650mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000398C  E849                    5651mm         LSR.W   #4, D1      
0000398E                          5652mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000398E  0C01 0009               5653mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003992  6E00 000A               5654mmm         BGT     ALPHA_417
00003996  0601 0030               5655mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000399A  6000 0006               5656mmm         BRA     DONE_417
0000399E  0601 0037               5657mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039A2  4E71                    5658mmm DONE_417: NOP
000039A4                          5659mmm         ENDM
000039A4  4E4F                    5660mm         TRAP    #15         ; EXECUTE OUTPUT
000039A6                          5661mm         
000039A6  3212                    5662mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039A8  E149                    5663mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000039AA  E949                    5664mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000039AC  E049                    5665mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039AE  E849                    5666mm         LSR.W   #4, D1      
000039B0                          5667mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039B0  0C01 0009               5668mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039B4  6E00 000A               5669mmm         BGT     ALPHA_418
000039B8  0601 0030               5670mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039BC  6000 0006               5671mmm         BRA     DONE_418
000039C0  0601 0037               5672mmm ALPHA_418: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039C4  4E71                    5673mmm DONE_418: NOP
000039C6                          5674mmm         ENDM
000039C6  4E4F                    5675mm         TRAP    #15         ; EXECUTE OUTPUT       
000039C8                          5676mm         ENDM 
000039C8  361A                    5677m         MOVE.W  (A2)+, D3
000039CA                          5678mm         ADROUT
000039CA  103C 0006               5679mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000039CE  3212                    5680mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039D0  E049                    5681mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039D2  E849                    5682mm         LSR.W   #4, D1      
000039D4                          5683mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039D4  0C01 0009               5684mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039D8  6E00 000A               5685mmm         BGT     ALPHA_420
000039DC  0601 0030               5686mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039E0  6000 0006               5687mmm         BRA     DONE_420
000039E4  0601 0037               5688mmm ALPHA_420: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039E8  4E71                    5689mmm DONE_420: NOP
000039EA                          5690mmm         ENDM
000039EA  4E4F                    5691mm         TRAP    #15         ; EXECUTE OUTPUT
000039EC                          5692mm         
000039EC  3212                    5693mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000039EE  E949                    5694mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000039F0  E049                    5695mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000039F2  E849                    5696mm         LSR.W   #4, D1      
000039F4                          5697mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000039F4  0C01 0009               5698mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039F8  6E00 000A               5699mmm         BGT     ALPHA_421
000039FC  0601 0030               5700mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A00  6000 0006               5701mmm         BRA     DONE_421
00003A04  0601 0037               5702mmm ALPHA_421: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A08  4E71                    5703mmm DONE_421: NOP
00003A0A                          5704mmm         ENDM
00003A0A  4E4F                    5705mm         TRAP    #15         ; EXECUTE OUTPUT
00003A0C                          5706mm         
00003A0C  3212                    5707mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A0E  E149                    5708mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A10  E049                    5709mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A12  E849                    5710mm         LSR.W   #4, D1      
00003A14                          5711mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A14  0C01 0009               5712mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A18  6E00 000A               5713mmm         BGT     ALPHA_422
00003A1C  0601 0030               5714mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A20  6000 0006               5715mmm         BRA     DONE_422
00003A24  0601 0037               5716mmm ALPHA_422: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A28  4E71                    5717mmm DONE_422: NOP
00003A2A                          5718mmm         ENDM
00003A2A  4E4F                    5719mm         TRAP    #15         ; EXECUTE OUTPUT
00003A2C                          5720mm         
00003A2C  3212                    5721mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003A2E  E149                    5722mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003A30  E949                    5723mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003A32  E049                    5724mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003A34  E849                    5725mm         LSR.W   #4, D1      
00003A36                          5726mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003A36  0C01 0009               5727mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003A3A  6E00 000A               5728mmm         BGT     ALPHA_423
00003A3E  0601 0030               5729mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003A42  6000 0006               5730mmm         BRA     DONE_423
00003A46  0601 0037               5731mmm ALPHA_423: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003A4A  4E71                    5732mmm DONE_423: NOP
00003A4C                          5733mmm         ENDM
00003A4C  4E4F                    5734mm         TRAP    #15         ; EXECUTE OUTPUT       
00003A4E                          5735mm         ENDM 
00003A4E  3605                    5736m         MOVE.W  D5, D3
00003A50                          5737m 
00003A50                          5738m COMPLETE_361:  ; OPCODE HAS BEEN VERIFIED
00003A50                          5739m         ENDM
00003A50                          5740m         printComma
00003A50  43F8 00D4               5741m         LEA     OCOMMA, A1     
00003A54  103C 000E               5742m         MOVE.B  #14,D0          
00003A58  4E4F                    5743m         TRAP    #15
00003A5A                          5744m         ENDM
00003A5A                          5745m         printDnDest     D3
00003A5A  3203                    5746m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003A5C  E949                    5747m         LSL     #$04, D1
00003A5E  E049                    5748m         LSR     #$08, D1
00003A60  EA49                    5749m         LSR     #$05, D1
00003A62  43F8 00CC               5750m         LEA     ODN, A1     
00003A66  103C 000E               5751m         MOVE.B  #14,D0          
00003A6A  4E4F                    5752m         TRAP    #15
00003A6C  103C 0003               5753m         MOVE.B  #3,D0          
00003A70  4E4F                    5754m         TRAP    #15
00003A72                          5755m         ENDM
00003A72                          5756  decodeSUBcomp:
00003A72  4E75                    5757          RTS                ; Return from decodeSUBcomp subroutine
00003A74                          5758  
00003A74                          5759  
00003A74                          5760  ; ------------------------------------------------------------
00003A74                          5761  ; 6. "decodeMULS" subroutine
00003A74                          5762  ; Gary
00003A74                          5763  ;
00003A74                          5764  ; Decodes muls by verifying, printing, then checking adressing
00003A74                          5765  ; modes and printing them in a formatted form.
00003A74                          5766  ; ------------------------------------------------------------
00003A74                          5767  decodeMULS:
00003A74                          5768m         verifyOpcode    pMULS, (A2)
00003A74  43F8 0150               5769m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003A78  3612                    5770m         MOVE.W  (A2), D3      ; INPUT VALUE
00003A7A  123C 000F               5771m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003A7E                          5772m         
00003A7E                          5773m LOOP_426: 
00003A7E  0C11 0030               5774m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003A82  6700 000E               5775m         BEQ     CHECKFOR0_426
00003A86  0C11 0031               5776m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003A8A  6700 0010               5777m         BEQ     CHECKFOR1_426
00003A8E  6000 0012               5778m         BRA     NEXT_426      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003A92                          5779m         
00003A92                          5780m CHECKFOR0_426: 
00003A92  0303                    5781m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003A94  6600 3CE4               5782m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003A98  6000 0008               5783m         BRA     NEXT_426
00003A9C                          5784m 
00003A9C                          5785m CHECKFOR1_426:
00003A9C  0303                    5786m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003A9E  6700 3CDA               5787m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003AA2                          5788m 
00003AA2                          5789m NEXT_426: 
00003AA2  B23C 0000               5790m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003AA6  6700 0008               5791m         BEQ     COMPLETE_426  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003AAA  5301                    5792m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003AAC  1819                    5793m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003AAE  60CE                    5794m         BRA     LOOP_426      ; BEGIN LOOP AGAIN
00003AB0                          5795m 
00003AB0                          5796m COMPLETE_426:  ; OPCODE HAS BEEN VERIFIED
00003AB0                          5797m         ENDM
00003AB0  43F8 007C               5798          LEA     oMULS, A1     
00003AB4  103C 000E               5799          MOVE.B  #14,D0          
00003AB8  4E4F                    5800          TRAP    #15
00003ABA  4247                    5801          CLR     D7
00003ABC                          5802m         prepareAdrMode  #$1, (A2)
00003ABC  3C3C 0001               5803m         MOVE.W  #$1, D6      ; INPUT VALUE
00003AC0  3212                    5804m         MOVE.W  (A2), D1
00003AC2  BC3C 0001               5805m         CMP.B   #$01, D6
00003AC6  6700 000C               5806m         BEQ     ADRSOURCE_427    
00003ACA                          5807m ADRDEST_427:
00003ACA  EF49                    5808m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003ACC  E049                    5809m         LSR     #$08, D1
00003ACE  EA49                    5810m         LSR     #$05, D1
00003AD0  6000 000A               5811m         BRA     COMPLETE_427 
00003AD4                          5812m ADRSOURCE_427:                
00003AD4  E149                    5813m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003AD6  E549                    5814m         LSL     #$02, D1
00003AD8  E049                    5815m         LSR     #$08, D1
00003ADA  EA49                    5816m         LSR     #$05, D1
00003ADC                          5817m COMPLETE_427:  ; OPCODE HAS BEEN VERIFIED
00003ADC                          5818m         ENDM        
00003ADC                          5819m         decodeAdrMode   (A2), D1
00003ADC  3612                    5820m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003ADE  3201                    5821m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003AE0                          5822m 
00003AE0  B23C 0001               5823m         CMP.B   #$01, D1
00003AE4  6700 0066               5824m         BEQ     ADRREGDIRECT_428    
00003AE8  B23C 0002               5825m         CMP.B   #$02, D1
00003AEC  6700 00A0               5826m         BEQ     ADRREGINDIRECT_428  
00003AF0  B23C 0003               5827m         CMP.B   #$03, D1
00003AF4  6700 0102               5828m         BEQ     ADRREGPOSTINC_428  
00003AF8  B23C 0004               5829m         CMP.B   #$04, D1
00003AFC  6700 0178               5830m         BEQ     ADRREGPREDEC_428
00003B00  B23C 0007               5831m         CMP.B   #$07, D1
00003B04  6700 01EE               5832m         BEQ     ADRABSOLUTE_428    
00003B08                          5833m         
00003B08                          5834m DATAREGDIRECT_428: 
00003B08  BC3C 0001               5835m         CMP.B   #$01, D6
00003B0C  6700 001E               5836m         BEQ     DATAREGDIRECTSRC_428   
00003B10                          5837m DATAREGDIRECTDEST_428: 
00003B10                          5838mm         PRINTDNDEST D3 
00003B10  3203                    5839mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003B12  E949                    5840mm         LSL     #$04, D1
00003B14  E049                    5841mm         LSR     #$08, D1
00003B16  EA49                    5842mm         LSR     #$05, D1
00003B18  43F8 00CC               5843mm         LEA     ODN, A1     
00003B1C  103C 000E               5844mm         MOVE.B  #14,D0          
00003B20  4E4F                    5845mm         TRAP    #15
00003B22  103C 0003               5846mm         MOVE.B  #3,D0          
00003B26  4E4F                    5847mm         TRAP    #15
00003B28                          5848mm         ENDM
00003B28  6000 057A               5849m         BRA     COMPLETE_428 
00003B2C                          5850m DATAREGDIRECTSRC_428: 
00003B2C                          5851mm         PRINTDNSRC D3 
00003B2C  4281                    5852mm         CLR.L   D1
00003B2E  3203                    5853mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B30  E149                    5854mm         LSL     #$08, D1
00003B32  EB49                    5855mm         LSL     #$05, D1
00003B34  E049                    5856mm         LSR     #$08, D1
00003B36  EA49                    5857mm         LSR     #$05, D1
00003B38  43F8 00CC               5858mm         LEA     ODN, A1     
00003B3C  103C 000E               5859mm         MOVE.B  #14,D0          
00003B40  4E4F                    5860mm         TRAP    #15
00003B42  103C 0003               5861mm         MOVE.B  #3,D0          
00003B46  4E4F                    5862mm         TRAP    #15
00003B48                          5863mm         ENDM
00003B48  6000 055A               5864m         BRA     COMPLETE_428   
00003B4C                          5865m         
00003B4C                          5866m ADRREGDIRECT_428: 
00003B4C  BC3C 0001               5867m         CMP.B   #$01, D6
00003B50  6700 001E               5868m         BEQ     ADRREGDIRECTSRC_428   
00003B54                          5869m ADRREGDIRECTDEST_428:
00003B54                          5870mm         PRINTANDEST D3
00003B54  3203                    5871mm         MOVE.W  D3, D1
00003B56  E949                    5872mm         LSL     #$04, D1
00003B58  E049                    5873mm         LSR     #$08, D1
00003B5A  EA49                    5874mm         LSR     #$05, D1
00003B5C  43F8 00CE               5875mm         LEA     OAN, A1     
00003B60  103C 000E               5876mm         MOVE.B  #14,D0          
00003B64  4E4F                    5877mm         TRAP    #15
00003B66  103C 0003               5878mm         MOVE.B  #3,D0          
00003B6A  4E4F                    5879mm         TRAP    #15
00003B6C                          5880mm         ENDM
00003B6C  6000 0536               5881m         BRA     COMPLETE_428   
00003B70                          5882m ADRREGDIRECTSRC_428:
00003B70                          5883mm         PRINTANSRC D3
00003B70  3203                    5884mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B72  E149                    5885mm         LSL     #$08, D1
00003B74  EB49                    5886mm         LSL     #$05, D1
00003B76  E049                    5887mm         LSR     #$08, D1
00003B78  EA49                    5888mm         LSR     #$05, D1
00003B7A  43F8 00CE               5889mm         LEA     OAN, A1     
00003B7E  103C 000E               5890mm         MOVE.B  #14,D0          
00003B82  4E4F                    5891mm         TRAP    #15
00003B84  103C 0003               5892mm         MOVE.B  #3,D0          
00003B88  4E4F                    5893mm         TRAP    #15
00003B8A                          5894mm         ENDM
00003B8A  6000 0518               5895m         BRA     COMPLETE_428   
00003B8E                          5896m        
00003B8E                          5897m ADRREGINDIRECT_428:   
00003B8E  BC3C 0001               5898m         CMP.B   #$01, D6
00003B92  6700 0032               5899m         BEQ     ADRREGINDIRECTSRC_428   
00003B96                          5900m ADRREGINDIRECTDEST_428:
00003B96                          5901mm         PRINTLB
00003B96  43F8 00D0               5902mm         LEA     OLB, A1     
00003B9A  103C 000E               5903mm         MOVE.B  #14,D0          
00003B9E  4E4F                    5904mm         TRAP    #15
00003BA0                          5905mm         ENDM
00003BA0                          5906mm         PRINTANDEST D3  
00003BA0  3203                    5907mm         MOVE.W  D3, D1
00003BA2  E949                    5908mm         LSL     #$04, D1
00003BA4  E049                    5909mm         LSR     #$08, D1
00003BA6  EA49                    5910mm         LSR     #$05, D1
00003BA8  43F8 00CE               5911mm         LEA     OAN, A1     
00003BAC  103C 000E               5912mm         MOVE.B  #14,D0          
00003BB0  4E4F                    5913mm         TRAP    #15
00003BB2  103C 0003               5914mm         MOVE.B  #3,D0          
00003BB6  4E4F                    5915mm         TRAP    #15
00003BB8                          5916mm         ENDM
00003BB8                          5917mm         PRINTRB
00003BB8  43F8 00D2               5918mm         LEA     ORB, A1     
00003BBC  103C 000E               5919mm         MOVE.B  #14,D0          
00003BC0  4E4F                    5920mm         TRAP    #15
00003BC2                          5921mm         ENDM
00003BC2  6000 04E0               5922m         BRA     COMPLETE_428     
00003BC6                          5923m ADRREGINDIRECTSRC_428:   
00003BC6                          5924mm         PRINTLB
00003BC6  43F8 00D0               5925mm         LEA     OLB, A1     
00003BCA  103C 000E               5926mm         MOVE.B  #14,D0          
00003BCE  4E4F                    5927mm         TRAP    #15
00003BD0                          5928mm         ENDM
00003BD0                          5929mm         PRINTANSRC D3  
00003BD0  3203                    5930mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BD2  E149                    5931mm         LSL     #$08, D1
00003BD4  EB49                    5932mm         LSL     #$05, D1
00003BD6  E049                    5933mm         LSR     #$08, D1
00003BD8  EA49                    5934mm         LSR     #$05, D1
00003BDA  43F8 00CE               5935mm         LEA     OAN, A1     
00003BDE  103C 000E               5936mm         MOVE.B  #14,D0          
00003BE2  4E4F                    5937mm         TRAP    #15
00003BE4  103C 0003               5938mm         MOVE.B  #3,D0          
00003BE8  4E4F                    5939mm         TRAP    #15
00003BEA                          5940mm         ENDM
00003BEA                          5941mm         PRINTRB
00003BEA  43F8 00D2               5942mm         LEA     ORB, A1     
00003BEE  103C 000E               5943mm         MOVE.B  #14,D0          
00003BF2  4E4F                    5944mm         TRAP    #15
00003BF4                          5945mm         ENDM
00003BF4  6000 04AE               5946m         BRA     COMPLETE_428   
00003BF8                          5947m         
00003BF8                          5948m ADRREGPOSTINC_428:   
00003BF8  BC3C 0001               5949m         CMP.B   #$01, D6
00003BFC  6700 003C               5950m         BEQ     ADRREGPOSTINCSRC_428   
00003C00                          5951m ADRREGPOSTINCDEST_428: 
00003C00                          5952mm         PRINTLB
00003C00  43F8 00D0               5953mm         LEA     OLB, A1     
00003C04  103C 000E               5954mm         MOVE.B  #14,D0          
00003C08  4E4F                    5955mm         TRAP    #15
00003C0A                          5956mm         ENDM
00003C0A                          5957mm         PRINTANDEST D3  
00003C0A  3203                    5958mm         MOVE.W  D3, D1
00003C0C  E949                    5959mm         LSL     #$04, D1
00003C0E  E049                    5960mm         LSR     #$08, D1
00003C10  EA49                    5961mm         LSR     #$05, D1
00003C12  43F8 00CE               5962mm         LEA     OAN, A1     
00003C16  103C 000E               5963mm         MOVE.B  #14,D0          
00003C1A  4E4F                    5964mm         TRAP    #15
00003C1C  103C 0003               5965mm         MOVE.B  #3,D0          
00003C20  4E4F                    5966mm         TRAP    #15
00003C22                          5967mm         ENDM
00003C22                          5968mm         PRINTRB
00003C22  43F8 00D2               5969mm         LEA     ORB, A1     
00003C26  103C 000E               5970mm         MOVE.B  #14,D0          
00003C2A  4E4F                    5971mm         TRAP    #15
00003C2C                          5972mm         ENDM
00003C2C                          5973mm         PRINTPI
00003C2C  43F8 00D9               5974mm         LEA     OPSTINC, A1     
00003C30  103C 000E               5975mm         MOVE.B  #14,D0          
00003C34  4E4F                    5976mm         TRAP    #15
00003C36                          5977mm         ENDM
00003C36  6000 046C               5978m         BRA     COMPLETE_428  
00003C3A                          5979m ADRREGPOSTINCSRC_428:           
00003C3A                          5980mm         PRINTLB
00003C3A  43F8 00D0               5981mm         LEA     OLB, A1     
00003C3E  103C 000E               5982mm         MOVE.B  #14,D0          
00003C42  4E4F                    5983mm         TRAP    #15
00003C44                          5984mm         ENDM
00003C44                          5985mm         PRINTANSRC D3  
00003C44  3203                    5986mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003C46  E149                    5987mm         LSL     #$08, D1
00003C48  EB49                    5988mm         LSL     #$05, D1
00003C4A  E049                    5989mm         LSR     #$08, D1
00003C4C  EA49                    5990mm         LSR     #$05, D1
00003C4E  43F8 00CE               5991mm         LEA     OAN, A1     
00003C52  103C 000E               5992mm         MOVE.B  #14,D0          
00003C56  4E4F                    5993mm         TRAP    #15
00003C58  103C 0003               5994mm         MOVE.B  #3,D0          
00003C5C  4E4F                    5995mm         TRAP    #15
00003C5E                          5996mm         ENDM
00003C5E                          5997mm         PRINTRB
00003C5E  43F8 00D2               5998mm         LEA     ORB, A1     
00003C62  103C 000E               5999mm         MOVE.B  #14,D0          
00003C66  4E4F                    6000mm         TRAP    #15
00003C68                          6001mm         ENDM
00003C68                          6002mm         PRINTPI
00003C68  43F8 00D9               6003mm         LEA     OPSTINC, A1     
00003C6C  103C 000E               6004mm         MOVE.B  #14,D0          
00003C70  4E4F                    6005mm         TRAP    #15
00003C72                          6006mm         ENDM
00003C72  6000 0430               6007m         BRA     COMPLETE_428  
00003C76                          6008m ADRREGPREDEC_428: 
00003C76  BC3C 0001               6009m         CMP.B   #$01, D6
00003C7A  6700 003C               6010m         BEQ     ADRREGPREDECSRC_428   
00003C7E                          6011m ADRREGPREDECDEST_428:
00003C7E                          6012mm         PRINTPD  
00003C7E  43F8 00D7               6013mm         LEA     OPREDEC, A1     
00003C82  103C 000E               6014mm         MOVE.B  #14,D0          
00003C86  4E4F                    6015mm         TRAP    #15
00003C88                          6016mm         ENDM
00003C88                          6017mm         PRINTLB
00003C88  43F8 00D0               6018mm         LEA     OLB, A1     
00003C8C  103C 000E               6019mm         MOVE.B  #14,D0          
00003C90  4E4F                    6020mm         TRAP    #15
00003C92                          6021mm         ENDM
00003C92                          6022mm         PRINTANDEST D3  
00003C92  3203                    6023mm         MOVE.W  D3, D1
00003C94  E949                    6024mm         LSL     #$04, D1
00003C96  E049                    6025mm         LSR     #$08, D1
00003C98  EA49                    6026mm         LSR     #$05, D1
00003C9A  43F8 00CE               6027mm         LEA     OAN, A1     
00003C9E  103C 000E               6028mm         MOVE.B  #14,D0          
00003CA2  4E4F                    6029mm         TRAP    #15
00003CA4  103C 0003               6030mm         MOVE.B  #3,D0          
00003CA8  4E4F                    6031mm         TRAP    #15
00003CAA                          6032mm         ENDM
00003CAA                          6033mm         PRINTRB
00003CAA  43F8 00D2               6034mm         LEA     ORB, A1     
00003CAE  103C 000E               6035mm         MOVE.B  #14,D0          
00003CB2  4E4F                    6036mm         TRAP    #15
00003CB4                          6037mm         ENDM
00003CB4  6000 03EE               6038m         BRA     COMPLETE_428   
00003CB8                          6039m ADRREGPREDECSRC_428: 
00003CB8                          6040mm         PRINTPD  
00003CB8  43F8 00D7               6041mm         LEA     OPREDEC, A1     
00003CBC  103C 000E               6042mm         MOVE.B  #14,D0          
00003CC0  4E4F                    6043mm         TRAP    #15
00003CC2                          6044mm         ENDM
00003CC2                          6045mm         PRINTLB
00003CC2  43F8 00D0               6046mm         LEA     OLB, A1     
00003CC6  103C 000E               6047mm         MOVE.B  #14,D0          
00003CCA  4E4F                    6048mm         TRAP    #15
00003CCC                          6049mm         ENDM
00003CCC                          6050mm         PRINTANSRC D3  
00003CCC  3203                    6051mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003CCE  E149                    6052mm         LSL     #$08, D1
00003CD0  EB49                    6053mm         LSL     #$05, D1
00003CD2  E049                    6054mm         LSR     #$08, D1
00003CD4  EA49                    6055mm         LSR     #$05, D1
00003CD6  43F8 00CE               6056mm         LEA     OAN, A1     
00003CDA  103C 000E               6057mm         MOVE.B  #14,D0          
00003CDE  4E4F                    6058mm         TRAP    #15
00003CE0  103C 0003               6059mm         MOVE.B  #3,D0          
00003CE4  4E4F                    6060mm         TRAP    #15
00003CE6                          6061mm         ENDM
00003CE6                          6062mm         PRINTRB
00003CE6  43F8 00D2               6063mm         LEA     ORB, A1     
00003CEA  103C 000E               6064mm         MOVE.B  #14,D0          
00003CEE  4E4F                    6065mm         TRAP    #15
00003CF0                          6066mm         ENDM
00003CF0  6000 03B2               6067m         BRA     COMPLETE_428
00003CF4                          6068m        
00003CF4                          6069m ADRABSOLUTE_428:
00003CF4  BC3C 0001               6070m         CMP.B   #$01, D6
00003CF8  6600 0018               6071m         BNE     ADRABSOLUTEDST_428 
00003CFC                          6072m         
00003CFC  3A03                    6073m         MOVE.W  D3, D5
00003CFE  0803 0002               6074m         BTST    #2, D3
00003D02  6600 0024               6075m         BNE     ADRIMMEDIATE_428
00003D06  0803 0000               6076m         BTST    #0, D3
00003D0A  6600 0280               6077m         BNE     ADRABSOLUTEL_428
00003D0E  6000 01E6               6078m         BRA     ADRABSOLUTEW_428
00003D12                          6079m ADRABSOLUTEDST_428:
00003D12  3A03                    6080m         MOVE.W  D3, D5
00003D14  0803 000B               6081m         BTST    #$B, D3
00003D18  6600 000E               6082m         BNE     ADRIMMEDIATE_428
00003D1C  0803 0009               6083m         BTST    #$09, D3
00003D20  6600 026A               6084m         BNE     ADRABSOLUTEL_428
00003D24  6000 01D0               6085m         BRA     ADRABSOLUTEW_428
00003D28                          6086m ADRIMMEDIATE_428:
00003D28  BE3C 0001               6087m         CMP.B   #1, D7
00003D2C  6700 00A2               6088m         BEQ     ADRIMMEDIATEL_428
00003D30                          6089m ADRIMMEDIATEW_428:
00003D30  361A                    6090m         MOVE.W  (A2)+, D3
00003D32                          6091mm         PRINTHASH
00003D32  103C 0006               6092mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D36  323C 0023               6093mm         MOVE.W  #35, D1     ; AN = SIGN
00003D3A  4E4F                    6094mm         TRAP    #15         ; OUTPUT = SIGN
00003D3C                          6095mm         ENDM
00003D3C                          6096mm         PRINTSIGN
00003D3C  103C 0006               6097mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D40  323C 0024               6098mm         MOVE.W  #36, D1     ; AN = SIGN
00003D44  4E4F                    6099mm         TRAP    #15         ; OUTPUT = SIGN
00003D46                          6100mm         ENDM
00003D46                          6101mm         ADROUT
00003D46  103C 0006               6102mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D4A  3212                    6103mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D4C  E049                    6104mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D4E  E849                    6105mm         LSR.W   #4, D1      
00003D50                          6106mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D50  0C01 0009               6107mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D54  6E00 000A               6108mmm         BGT     ALPHA_458
00003D58  0601 0030               6109mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D5C  6000 0006               6110mmm         BRA     DONE_458
00003D60  0601 0037               6111mmm ALPHA_458: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D64  4E71                    6112mmm DONE_458: NOP
00003D66                          6113mmm         ENDM
00003D66  4E4F                    6114mm         TRAP    #15         ; EXECUTE OUTPUT
00003D68                          6115mm         
00003D68  3212                    6116mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D6A  E949                    6117mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D6C  E049                    6118mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D6E  E849                    6119mm         LSR.W   #4, D1      
00003D70                          6120mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D70  0C01 0009               6121mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D74  6E00 000A               6122mmm         BGT     ALPHA_459
00003D78  0601 0030               6123mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D7C  6000 0006               6124mmm         BRA     DONE_459
00003D80  0601 0037               6125mmm ALPHA_459: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D84  4E71                    6126mmm DONE_459: NOP
00003D86                          6127mmm         ENDM
00003D86  4E4F                    6128mm         TRAP    #15         ; EXECUTE OUTPUT
00003D88                          6129mm         
00003D88  3212                    6130mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D8A  E149                    6131mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D8C  E049                    6132mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D8E  E849                    6133mm         LSR.W   #4, D1      
00003D90                          6134mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D90  0C01 0009               6135mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D94  6E00 000A               6136mmm         BGT     ALPHA_460
00003D98  0601 0030               6137mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D9C  6000 0006               6138mmm         BRA     DONE_460
00003DA0  0601 0037               6139mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DA4  4E71                    6140mmm DONE_460: NOP
00003DA6                          6141mmm         ENDM
00003DA6  4E4F                    6142mm         TRAP    #15         ; EXECUTE OUTPUT
00003DA8                          6143mm         
00003DA8  3212                    6144mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DAA  E149                    6145mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DAC  E949                    6146mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DAE  E049                    6147mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DB0  E849                    6148mm         LSR.W   #4, D1      
00003DB2                          6149mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DB2  0C01 0009               6150mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DB6  6E00 000A               6151mmm         BGT     ALPHA_461
00003DBA  0601 0030               6152mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DBE  6000 0006               6153mmm         BRA     DONE_461
00003DC2  0601 0037               6154mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DC6  4E71                    6155mmm DONE_461: NOP
00003DC8                          6156mmm         ENDM
00003DC8  4E4F                    6157mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DCA                          6158mm         ENDM 
00003DCA  3605                    6159m         MOVE.W  D5, D3
00003DCC  6000 02D6               6160m         BRA     COMPLETE_428
00003DD0                          6161m ADRIMMEDIATEL_428:
00003DD0  361A                    6162m         MOVE.W  (A2)+, D3
00003DD2                          6163mm         PRINTHASH
00003DD2  103C 0006               6164mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DD6  323C 0023               6165mm         MOVE.W  #35, D1     ; AN = SIGN
00003DDA  4E4F                    6166mm         TRAP    #15         ; OUTPUT = SIGN
00003DDC                          6167mm         ENDM
00003DDC                          6168mm         PRINTSIGN
00003DDC  103C 0006               6169mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DE0  323C 0024               6170mm         MOVE.W  #36, D1     ; AN = SIGN
00003DE4  4E4F                    6171mm         TRAP    #15         ; OUTPUT = SIGN
00003DE6                          6172mm         ENDM
00003DE6                          6173mm         ADROUT 
00003DE6  103C 0006               6174mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DEA  3212                    6175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DEC  E049                    6176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DEE  E849                    6177mm         LSR.W   #4, D1      
00003DF0                          6178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DF0  0C01 0009               6179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DF4  6E00 000A               6180mmm         BGT     ALPHA_465
00003DF8  0601 0030               6181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DFC  6000 0006               6182mmm         BRA     DONE_465
00003E00  0601 0037               6183mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E04  4E71                    6184mmm DONE_465: NOP
00003E06                          6185mmm         ENDM
00003E06  4E4F                    6186mm         TRAP    #15         ; EXECUTE OUTPUT
00003E08                          6187mm         
00003E08  3212                    6188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E0A  E949                    6189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E0C  E049                    6190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E0E  E849                    6191mm         LSR.W   #4, D1      
00003E10                          6192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E10  0C01 0009               6193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E14  6E00 000A               6194mmm         BGT     ALPHA_466
00003E18  0601 0030               6195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E1C  6000 0006               6196mmm         BRA     DONE_466
00003E20  0601 0037               6197mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E24  4E71                    6198mmm DONE_466: NOP
00003E26                          6199mmm         ENDM
00003E26  4E4F                    6200mm         TRAP    #15         ; EXECUTE OUTPUT
00003E28                          6201mm         
00003E28  3212                    6202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E2A  E149                    6203mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E2C  E049                    6204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E2E  E849                    6205mm         LSR.W   #4, D1      
00003E30                          6206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E30  0C01 0009               6207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E34  6E00 000A               6208mmm         BGT     ALPHA_467
00003E38  0601 0030               6209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E3C  6000 0006               6210mmm         BRA     DONE_467
00003E40  0601 0037               6211mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E44  4E71                    6212mmm DONE_467: NOP
00003E46                          6213mmm         ENDM
00003E46  4E4F                    6214mm         TRAP    #15         ; EXECUTE OUTPUT
00003E48                          6215mm         
00003E48  3212                    6216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E4A  E149                    6217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E4C  E949                    6218mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E4E  E049                    6219mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E50  E849                    6220mm         LSR.W   #4, D1      
00003E52                          6221mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E52  0C01 0009               6222mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E56  6E00 000A               6223mmm         BGT     ALPHA_468
00003E5A  0601 0030               6224mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E5E  6000 0006               6225mmm         BRA     DONE_468
00003E62  0601 0037               6226mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E66  4E71                    6227mmm DONE_468: NOP
00003E68                          6228mmm         ENDM
00003E68  4E4F                    6229mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E6A                          6230mm         ENDM 
00003E6A  361A                    6231m         MOVE.W  (A2)+, D3
00003E6C                          6232mm         ADROUT
00003E6C  103C 0006               6233mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E70  3212                    6234mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E72  E049                    6235mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E74  E849                    6236mm         LSR.W   #4, D1      
00003E76                          6237mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E76  0C01 0009               6238mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E7A  6E00 000A               6239mmm         BGT     ALPHA_470
00003E7E  0601 0030               6240mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E82  6000 0006               6241mmm         BRA     DONE_470
00003E86  0601 0037               6242mmm ALPHA_470: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E8A  4E71                    6243mmm DONE_470: NOP
00003E8C                          6244mmm         ENDM
00003E8C  4E4F                    6245mm         TRAP    #15         ; EXECUTE OUTPUT
00003E8E                          6246mm         
00003E8E  3212                    6247mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E90  E949                    6248mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E92  E049                    6249mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E94  E849                    6250mm         LSR.W   #4, D1      
00003E96                          6251mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E96  0C01 0009               6252mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E9A  6E00 000A               6253mmm         BGT     ALPHA_471
00003E9E  0601 0030               6254mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EA2  6000 0006               6255mmm         BRA     DONE_471
00003EA6  0601 0037               6256mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EAA  4E71                    6257mmm DONE_471: NOP
00003EAC                          6258mmm         ENDM
00003EAC  4E4F                    6259mm         TRAP    #15         ; EXECUTE OUTPUT
00003EAE                          6260mm         
00003EAE  3212                    6261mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EB0  E149                    6262mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EB2  E049                    6263mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EB4  E849                    6264mm         LSR.W   #4, D1      
00003EB6                          6265mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EB6  0C01 0009               6266mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EBA  6E00 000A               6267mmm         BGT     ALPHA_472
00003EBE  0601 0030               6268mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EC2  6000 0006               6269mmm         BRA     DONE_472
00003EC6  0601 0037               6270mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ECA  4E71                    6271mmm DONE_472: NOP
00003ECC                          6272mmm         ENDM
00003ECC  4E4F                    6273mm         TRAP    #15         ; EXECUTE OUTPUT
00003ECE                          6274mm         
00003ECE  3212                    6275mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003ED0  E149                    6276mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003ED2  E949                    6277mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003ED4  E049                    6278mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ED6  E849                    6279mm         LSR.W   #4, D1      
00003ED8                          6280mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003ED8  0C01 0009               6281mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EDC  6E00 000A               6282mmm         BGT     ALPHA_473
00003EE0  0601 0030               6283mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EE4  6000 0006               6284mmm         BRA     DONE_473
00003EE8  0601 0037               6285mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EEC  4E71                    6286mmm DONE_473: NOP
00003EEE                          6287mmm         ENDM
00003EEE  4E4F                    6288mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EF0                          6289mm         ENDM 
00003EF0  3605                    6290m         MOVE.W  D5, D3
00003EF2  6000 01B0               6291m         BRA     COMPLETE_428 
00003EF6                          6292m ADRABSOLUTEW_428:     
00003EF6  361A                    6293m         MOVE.W  (A2)+, D3
00003EF8                          6294mm         PRINTSIGN
00003EF8  103C 0006               6295mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003EFC  323C 0024               6296mm         MOVE.W  #36, D1     ; AN = SIGN
00003F00  4E4F                    6297mm         TRAP    #15         ; OUTPUT = SIGN
00003F02                          6298mm         ENDM
00003F02                          6299mm         ADROUT
00003F02  103C 0006               6300mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F06  3212                    6301mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F08  E049                    6302mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F0A  E849                    6303mm         LSR.W   #4, D1      
00003F0C                          6304mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F0C  0C01 0009               6305mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F10  6E00 000A               6306mmm         BGT     ALPHA_476
00003F14  0601 0030               6307mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F18  6000 0006               6308mmm         BRA     DONE_476
00003F1C  0601 0037               6309mmm ALPHA_476: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F20  4E71                    6310mmm DONE_476: NOP
00003F22                          6311mmm         ENDM
00003F22  4E4F                    6312mm         TRAP    #15         ; EXECUTE OUTPUT
00003F24                          6313mm         
00003F24  3212                    6314mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F26  E949                    6315mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F28  E049                    6316mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F2A  E849                    6317mm         LSR.W   #4, D1      
00003F2C                          6318mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F2C  0C01 0009               6319mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F30  6E00 000A               6320mmm         BGT     ALPHA_477
00003F34  0601 0030               6321mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F38  6000 0006               6322mmm         BRA     DONE_477
00003F3C  0601 0037               6323mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F40  4E71                    6324mmm DONE_477: NOP
00003F42                          6325mmm         ENDM
00003F42  4E4F                    6326mm         TRAP    #15         ; EXECUTE OUTPUT
00003F44                          6327mm         
00003F44  3212                    6328mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F46  E149                    6329mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F48  E049                    6330mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F4A  E849                    6331mm         LSR.W   #4, D1      
00003F4C                          6332mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F4C  0C01 0009               6333mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F50  6E00 000A               6334mmm         BGT     ALPHA_478
00003F54  0601 0030               6335mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F58  6000 0006               6336mmm         BRA     DONE_478
00003F5C  0601 0037               6337mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F60  4E71                    6338mmm DONE_478: NOP
00003F62                          6339mmm         ENDM
00003F62  4E4F                    6340mm         TRAP    #15         ; EXECUTE OUTPUT
00003F64                          6341mm         
00003F64  3212                    6342mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F66  E149                    6343mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F68  E949                    6344mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F6A  E049                    6345mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F6C  E849                    6346mm         LSR.W   #4, D1      
00003F6E                          6347mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F6E  0C01 0009               6348mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F72  6E00 000A               6349mmm         BGT     ALPHA_479
00003F76  0601 0030               6350mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F7A  6000 0006               6351mmm         BRA     DONE_479
00003F7E  0601 0037               6352mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F82  4E71                    6353mmm DONE_479: NOP
00003F84                          6354mmm         ENDM
00003F84  4E4F                    6355mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F86                          6356mm         ENDM 
00003F86  3605                    6357m         MOVE.W  D5, D3
00003F88  6000 011A               6358m         BRA     COMPLETE_428  
00003F8C                          6359m ADRABSOLUTEL_428:  
00003F8C  361A                    6360m         MOVE.W  (A2)+, D3
00003F8E                          6361mm         PRINTSIGN
00003F8E  103C 0006               6362mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F92  323C 0024               6363mm         MOVE.W  #36, D1     ; AN = SIGN
00003F96  4E4F                    6364mm         TRAP    #15         ; OUTPUT = SIGN
00003F98                          6365mm         ENDM
00003F98                          6366mm         ADROUT 
00003F98  103C 0006               6367mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003F9C  3212                    6368mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F9E  E049                    6369mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FA0  E849                    6370mm         LSR.W   #4, D1      
00003FA2                          6371mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FA2  0C01 0009               6372mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FA6  6E00 000A               6373mmm         BGT     ALPHA_482
00003FAA  0601 0030               6374mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FAE  6000 0006               6375mmm         BRA     DONE_482
00003FB2  0601 0037               6376mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FB6  4E71                    6377mmm DONE_482: NOP
00003FB8                          6378mmm         ENDM
00003FB8  4E4F                    6379mm         TRAP    #15         ; EXECUTE OUTPUT
00003FBA                          6380mm         
00003FBA  3212                    6381mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FBC  E949                    6382mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003FBE  E049                    6383mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FC0  E849                    6384mm         LSR.W   #4, D1      
00003FC2                          6385mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FC2  0C01 0009               6386mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FC6  6E00 000A               6387mmm         BGT     ALPHA_483
00003FCA  0601 0030               6388mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FCE  6000 0006               6389mmm         BRA     DONE_483
00003FD2  0601 0037               6390mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FD6  4E71                    6391mmm DONE_483: NOP
00003FD8                          6392mmm         ENDM
00003FD8  4E4F                    6393mm         TRAP    #15         ; EXECUTE OUTPUT
00003FDA                          6394mm         
00003FDA  3212                    6395mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FDC  E149                    6396mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FDE  E049                    6397mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FE0  E849                    6398mm         LSR.W   #4, D1      
00003FE2                          6399mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FE2  0C01 0009               6400mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FE6  6E00 000A               6401mmm         BGT     ALPHA_484
00003FEA  0601 0030               6402mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FEE  6000 0006               6403mmm         BRA     DONE_484
00003FF2  0601 0037               6404mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FF6  4E71                    6405mmm DONE_484: NOP
00003FF8                          6406mmm         ENDM
00003FF8  4E4F                    6407mm         TRAP    #15         ; EXECUTE OUTPUT
00003FFA                          6408mm         
00003FFA  3212                    6409mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FFC  E149                    6410mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FFE  E949                    6411mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004000  E049                    6412mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004002  E849                    6413mm         LSR.W   #4, D1      
00004004                          6414mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004004  0C01 0009               6415mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004008  6E00 000A               6416mmm         BGT     ALPHA_485
0000400C  0601 0030               6417mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004010  6000 0006               6418mmm         BRA     DONE_485
00004014  0601 0037               6419mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004018  4E71                    6420mmm DONE_485: NOP
0000401A                          6421mmm         ENDM
0000401A  4E4F                    6422mm         TRAP    #15         ; EXECUTE OUTPUT       
0000401C                          6423mm         ENDM 
0000401C  361A                    6424m         MOVE.W  (A2)+, D3
0000401E                          6425mm         ADROUT
0000401E  103C 0006               6426mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004022  3212                    6427mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004024  E049                    6428mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004026  E849                    6429mm         LSR.W   #4, D1      
00004028                          6430mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004028  0C01 0009               6431mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000402C  6E00 000A               6432mmm         BGT     ALPHA_487
00004030  0601 0030               6433mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004034  6000 0006               6434mmm         BRA     DONE_487
00004038  0601 0037               6435mmm ALPHA_487: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000403C  4E71                    6436mmm DONE_487: NOP
0000403E                          6437mmm         ENDM
0000403E  4E4F                    6438mm         TRAP    #15         ; EXECUTE OUTPUT
00004040                          6439mm         
00004040  3212                    6440mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004042  E949                    6441mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004044  E049                    6442mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004046  E849                    6443mm         LSR.W   #4, D1      
00004048                          6444mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004048  0C01 0009               6445mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000404C  6E00 000A               6446mmm         BGT     ALPHA_488
00004050  0601 0030               6447mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004054  6000 0006               6448mmm         BRA     DONE_488
00004058  0601 0037               6449mmm ALPHA_488: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000405C  4E71                    6450mmm DONE_488: NOP
0000405E                          6451mmm         ENDM
0000405E  4E4F                    6452mm         TRAP    #15         ; EXECUTE OUTPUT
00004060                          6453mm         
00004060  3212                    6454mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004062  E149                    6455mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004064  E049                    6456mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004066  E849                    6457mm         LSR.W   #4, D1      
00004068                          6458mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004068  0C01 0009               6459mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000406C  6E00 000A               6460mmm         BGT     ALPHA_489
00004070  0601 0030               6461mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004074  6000 0006               6462mmm         BRA     DONE_489
00004078  0601 0037               6463mmm ALPHA_489: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000407C  4E71                    6464mmm DONE_489: NOP
0000407E                          6465mmm         ENDM
0000407E  4E4F                    6466mm         TRAP    #15         ; EXECUTE OUTPUT
00004080                          6467mm         
00004080  3212                    6468mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004082  E149                    6469mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004084  E949                    6470mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004086  E049                    6471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004088  E849                    6472mm         LSR.W   #4, D1      
0000408A                          6473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000408A  0C01 0009               6474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000408E  6E00 000A               6475mmm         BGT     ALPHA_490
00004092  0601 0030               6476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004096  6000 0006               6477mmm         BRA     DONE_490
0000409A  0601 0037               6478mmm ALPHA_490: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000409E  4E71                    6479mmm DONE_490: NOP
000040A0                          6480mmm         ENDM
000040A0  4E4F                    6481mm         TRAP    #15         ; EXECUTE OUTPUT       
000040A2                          6482mm         ENDM 
000040A2  3605                    6483m         MOVE.W  D5, D3
000040A4                          6484m 
000040A4                          6485m COMPLETE_428:  ; OPCODE HAS BEEN VERIFIED
000040A4                          6486m         ENDM
000040A4                          6487m         printComma
000040A4  43F8 00D4               6488m         LEA     OCOMMA, A1     
000040A8  103C 000E               6489m         MOVE.B  #14,D0          
000040AC  4E4F                    6490m         TRAP    #15
000040AE                          6491m         ENDM
000040AE                          6492m         printDnDest     D3
000040AE  3203                    6493m         MOVE.W  D3, D1      ; BITS 9 TO 11
000040B0  E949                    6494m         LSL     #$04, D1
000040B2  E049                    6495m         LSR     #$08, D1
000040B4  EA49                    6496m         LSR     #$05, D1
000040B6  43F8 00CC               6497m         LEA     ODN, A1     
000040BA  103C 000E               6498m         MOVE.B  #14,D0          
000040BE  4E4F                    6499m         TRAP    #15
000040C0  103C 0003               6500m         MOVE.B  #3,D0          
000040C4  4E4F                    6501m         TRAP    #15
000040C6                          6502m         ENDM
000040C6  4E75                    6503          RTS                 ; Return from decodeMULS subroutine
000040C8                          6504          
000040C8                          6505  ; ------------------------------------------------------------
000040C8                          6506  ; 7. "decodeDIVU" subroutine
000040C8                          6507  ; Gary
000040C8                          6508  ;
000040C8                          6509  ; Decodes divu by verifying, printing, then checking adressing
000040C8                          6510  ; modes and printing them in a formatted form.
000040C8                          6511  ; ------------------------------------------------------------
000040C8                          6512  decodeDIVU:
000040C8                          6513m         verifyOpcode    pDIVU, (A2)
000040C8  43F8 0161               6514m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
000040CC  3612                    6515m         MOVE.W  (A2), D3      ; INPUT VALUE
000040CE  123C 000F               6516m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000040D2                          6517m         
000040D2                          6518m LOOP_493: 
000040D2  0C11 0030               6519m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000040D6  6700 000E               6520m         BEQ     CHECKFOR0_493
000040DA  0C11 0031               6521m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000040DE  6700 0010               6522m         BEQ     CHECKFOR1_493
000040E2  6000 0012               6523m         BRA     NEXT_493      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000040E6                          6524m         
000040E6                          6525m CHECKFOR0_493: 
000040E6  0303                    6526m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000040E8  6600 3690               6527m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000040EC  6000 0008               6528m         BRA     NEXT_493
000040F0                          6529m 
000040F0                          6530m CHECKFOR1_493:
000040F0  0303                    6531m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000040F2  6700 3686               6532m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000040F6                          6533m 
000040F6                          6534m NEXT_493: 
000040F6  B23C 0000               6535m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000040FA  6700 0008               6536m         BEQ     COMPLETE_493  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000040FE  5301                    6537m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004100  1819                    6538m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004102  60CE                    6539m         BRA     LOOP_493      ; BEGIN LOOP AGAIN
00004104                          6540m 
00004104                          6541m COMPLETE_493:  ; OPCODE HAS BEEN VERIFIED
00004104                          6542m         ENDM
00004104  43F8 0084               6543          LEA     oDIVU, A1     
00004108  103C 000E               6544          MOVE.B  #14,D0          
0000410C  4E4F                    6545          TRAP    #15
0000410E  4247                    6546          CLR     D7
00004110                          6547m         prepareAdrMode  #$1, (A2)
00004110  3C3C 0001               6548m         MOVE.W  #$1, D6      ; INPUT VALUE
00004114  3212                    6549m         MOVE.W  (A2), D1
00004116  BC3C 0001               6550m         CMP.B   #$01, D6
0000411A  6700 000C               6551m         BEQ     ADRSOURCE_494    
0000411E                          6552m ADRDEST_494:
0000411E  EF49                    6553m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004120  E049                    6554m         LSR     #$08, D1
00004122  EA49                    6555m         LSR     #$05, D1
00004124  6000 000A               6556m         BRA     COMPLETE_494 
00004128                          6557m ADRSOURCE_494:                
00004128  E149                    6558m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000412A  E549                    6559m         LSL     #$02, D1
0000412C  E049                    6560m         LSR     #$08, D1
0000412E  EA49                    6561m         LSR     #$05, D1
00004130                          6562m COMPLETE_494:  ; OPCODE HAS BEEN VERIFIED
00004130                          6563m         ENDM        
00004130                          6564m         decodeAdrMode   (A2), D1
00004130  3612                    6565m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004132  3201                    6566m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004134                          6567m 
00004134  B23C 0001               6568m         CMP.B   #$01, D1
00004138  6700 0066               6569m         BEQ     ADRREGDIRECT_495    
0000413C  B23C 0002               6570m         CMP.B   #$02, D1
00004140  6700 00A0               6571m         BEQ     ADRREGINDIRECT_495  
00004144  B23C 0003               6572m         CMP.B   #$03, D1
00004148  6700 0102               6573m         BEQ     ADRREGPOSTINC_495  
0000414C  B23C 0004               6574m         CMP.B   #$04, D1
00004150  6700 0178               6575m         BEQ     ADRREGPREDEC_495
00004154  B23C 0007               6576m         CMP.B   #$07, D1
00004158  6700 01EE               6577m         BEQ     ADRABSOLUTE_495    
0000415C                          6578m         
0000415C                          6579m DATAREGDIRECT_495: 
0000415C  BC3C 0001               6580m         CMP.B   #$01, D6
00004160  6700 001E               6581m         BEQ     DATAREGDIRECTSRC_495   
00004164                          6582m DATAREGDIRECTDEST_495: 
00004164                          6583mm         PRINTDNDEST D3 
00004164  3203                    6584mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004166  E949                    6585mm         LSL     #$04, D1
00004168  E049                    6586mm         LSR     #$08, D1
0000416A  EA49                    6587mm         LSR     #$05, D1
0000416C  43F8 00CC               6588mm         LEA     ODN, A1     
00004170  103C 000E               6589mm         MOVE.B  #14,D0          
00004174  4E4F                    6590mm         TRAP    #15
00004176  103C 0003               6591mm         MOVE.B  #3,D0          
0000417A  4E4F                    6592mm         TRAP    #15
0000417C                          6593mm         ENDM
0000417C  6000 057A               6594m         BRA     COMPLETE_495 
00004180                          6595m DATAREGDIRECTSRC_495: 
00004180                          6596mm         PRINTDNSRC D3 
00004180  4281                    6597mm         CLR.L   D1
00004182  3203                    6598mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004184  E149                    6599mm         LSL     #$08, D1
00004186  EB49                    6600mm         LSL     #$05, D1
00004188  E049                    6601mm         LSR     #$08, D1
0000418A  EA49                    6602mm         LSR     #$05, D1
0000418C  43F8 00CC               6603mm         LEA     ODN, A1     
00004190  103C 000E               6604mm         MOVE.B  #14,D0          
00004194  4E4F                    6605mm         TRAP    #15
00004196  103C 0003               6606mm         MOVE.B  #3,D0          
0000419A  4E4F                    6607mm         TRAP    #15
0000419C                          6608mm         ENDM
0000419C  6000 055A               6609m         BRA     COMPLETE_495   
000041A0                          6610m         
000041A0                          6611m ADRREGDIRECT_495: 
000041A0  BC3C 0001               6612m         CMP.B   #$01, D6
000041A4  6700 001E               6613m         BEQ     ADRREGDIRECTSRC_495   
000041A8                          6614m ADRREGDIRECTDEST_495:
000041A8                          6615mm         PRINTANDEST D3
000041A8  3203                    6616mm         MOVE.W  D3, D1
000041AA  E949                    6617mm         LSL     #$04, D1
000041AC  E049                    6618mm         LSR     #$08, D1
000041AE  EA49                    6619mm         LSR     #$05, D1
000041B0  43F8 00CE               6620mm         LEA     OAN, A1     
000041B4  103C 000E               6621mm         MOVE.B  #14,D0          
000041B8  4E4F                    6622mm         TRAP    #15
000041BA  103C 0003               6623mm         MOVE.B  #3,D0          
000041BE  4E4F                    6624mm         TRAP    #15
000041C0                          6625mm         ENDM
000041C0  6000 0536               6626m         BRA     COMPLETE_495   
000041C4                          6627m ADRREGDIRECTSRC_495:
000041C4                          6628mm         PRINTANSRC D3
000041C4  3203                    6629mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041C6  E149                    6630mm         LSL     #$08, D1
000041C8  EB49                    6631mm         LSL     #$05, D1
000041CA  E049                    6632mm         LSR     #$08, D1
000041CC  EA49                    6633mm         LSR     #$05, D1
000041CE  43F8 00CE               6634mm         LEA     OAN, A1     
000041D2  103C 000E               6635mm         MOVE.B  #14,D0          
000041D6  4E4F                    6636mm         TRAP    #15
000041D8  103C 0003               6637mm         MOVE.B  #3,D0          
000041DC  4E4F                    6638mm         TRAP    #15
000041DE                          6639mm         ENDM
000041DE  6000 0518               6640m         BRA     COMPLETE_495   
000041E2                          6641m        
000041E2                          6642m ADRREGINDIRECT_495:   
000041E2  BC3C 0001               6643m         CMP.B   #$01, D6
000041E6  6700 0032               6644m         BEQ     ADRREGINDIRECTSRC_495   
000041EA                          6645m ADRREGINDIRECTDEST_495:
000041EA                          6646mm         PRINTLB
000041EA  43F8 00D0               6647mm         LEA     OLB, A1     
000041EE  103C 000E               6648mm         MOVE.B  #14,D0          
000041F2  4E4F                    6649mm         TRAP    #15
000041F4                          6650mm         ENDM
000041F4                          6651mm         PRINTANDEST D3  
000041F4  3203                    6652mm         MOVE.W  D3, D1
000041F6  E949                    6653mm         LSL     #$04, D1
000041F8  E049                    6654mm         LSR     #$08, D1
000041FA  EA49                    6655mm         LSR     #$05, D1
000041FC  43F8 00CE               6656mm         LEA     OAN, A1     
00004200  103C 000E               6657mm         MOVE.B  #14,D0          
00004204  4E4F                    6658mm         TRAP    #15
00004206  103C 0003               6659mm         MOVE.B  #3,D0          
0000420A  4E4F                    6660mm         TRAP    #15
0000420C                          6661mm         ENDM
0000420C                          6662mm         PRINTRB
0000420C  43F8 00D2               6663mm         LEA     ORB, A1     
00004210  103C 000E               6664mm         MOVE.B  #14,D0          
00004214  4E4F                    6665mm         TRAP    #15
00004216                          6666mm         ENDM
00004216  6000 04E0               6667m         BRA     COMPLETE_495     
0000421A                          6668m ADRREGINDIRECTSRC_495:   
0000421A                          6669mm         PRINTLB
0000421A  43F8 00D0               6670mm         LEA     OLB, A1     
0000421E  103C 000E               6671mm         MOVE.B  #14,D0          
00004222  4E4F                    6672mm         TRAP    #15
00004224                          6673mm         ENDM
00004224                          6674mm         PRINTANSRC D3  
00004224  3203                    6675mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004226  E149                    6676mm         LSL     #$08, D1
00004228  EB49                    6677mm         LSL     #$05, D1
0000422A  E049                    6678mm         LSR     #$08, D1
0000422C  EA49                    6679mm         LSR     #$05, D1
0000422E  43F8 00CE               6680mm         LEA     OAN, A1     
00004232  103C 000E               6681mm         MOVE.B  #14,D0          
00004236  4E4F                    6682mm         TRAP    #15
00004238  103C 0003               6683mm         MOVE.B  #3,D0          
0000423C  4E4F                    6684mm         TRAP    #15
0000423E                          6685mm         ENDM
0000423E                          6686mm         PRINTRB
0000423E  43F8 00D2               6687mm         LEA     ORB, A1     
00004242  103C 000E               6688mm         MOVE.B  #14,D0          
00004246  4E4F                    6689mm         TRAP    #15
00004248                          6690mm         ENDM
00004248  6000 04AE               6691m         BRA     COMPLETE_495   
0000424C                          6692m         
0000424C                          6693m ADRREGPOSTINC_495:   
0000424C  BC3C 0001               6694m         CMP.B   #$01, D6
00004250  6700 003C               6695m         BEQ     ADRREGPOSTINCSRC_495   
00004254                          6696m ADRREGPOSTINCDEST_495: 
00004254                          6697mm         PRINTLB
00004254  43F8 00D0               6698mm         LEA     OLB, A1     
00004258  103C 000E               6699mm         MOVE.B  #14,D0          
0000425C  4E4F                    6700mm         TRAP    #15
0000425E                          6701mm         ENDM
0000425E                          6702mm         PRINTANDEST D3  
0000425E  3203                    6703mm         MOVE.W  D3, D1
00004260  E949                    6704mm         LSL     #$04, D1
00004262  E049                    6705mm         LSR     #$08, D1
00004264  EA49                    6706mm         LSR     #$05, D1
00004266  43F8 00CE               6707mm         LEA     OAN, A1     
0000426A  103C 000E               6708mm         MOVE.B  #14,D0          
0000426E  4E4F                    6709mm         TRAP    #15
00004270  103C 0003               6710mm         MOVE.B  #3,D0          
00004274  4E4F                    6711mm         TRAP    #15
00004276                          6712mm         ENDM
00004276                          6713mm         PRINTRB
00004276  43F8 00D2               6714mm         LEA     ORB, A1     
0000427A  103C 000E               6715mm         MOVE.B  #14,D0          
0000427E  4E4F                    6716mm         TRAP    #15
00004280                          6717mm         ENDM
00004280                          6718mm         PRINTPI
00004280  43F8 00D9               6719mm         LEA     OPSTINC, A1     
00004284  103C 000E               6720mm         MOVE.B  #14,D0          
00004288  4E4F                    6721mm         TRAP    #15
0000428A                          6722mm         ENDM
0000428A  6000 046C               6723m         BRA     COMPLETE_495  
0000428E                          6724m ADRREGPOSTINCSRC_495:           
0000428E                          6725mm         PRINTLB
0000428E  43F8 00D0               6726mm         LEA     OLB, A1     
00004292  103C 000E               6727mm         MOVE.B  #14,D0          
00004296  4E4F                    6728mm         TRAP    #15
00004298                          6729mm         ENDM
00004298                          6730mm         PRINTANSRC D3  
00004298  3203                    6731mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000429A  E149                    6732mm         LSL     #$08, D1
0000429C  EB49                    6733mm         LSL     #$05, D1
0000429E  E049                    6734mm         LSR     #$08, D1
000042A0  EA49                    6735mm         LSR     #$05, D1
000042A2  43F8 00CE               6736mm         LEA     OAN, A1     
000042A6  103C 000E               6737mm         MOVE.B  #14,D0          
000042AA  4E4F                    6738mm         TRAP    #15
000042AC  103C 0003               6739mm         MOVE.B  #3,D0          
000042B0  4E4F                    6740mm         TRAP    #15
000042B2                          6741mm         ENDM
000042B2                          6742mm         PRINTRB
000042B2  43F8 00D2               6743mm         LEA     ORB, A1     
000042B6  103C 000E               6744mm         MOVE.B  #14,D0          
000042BA  4E4F                    6745mm         TRAP    #15
000042BC                          6746mm         ENDM
000042BC                          6747mm         PRINTPI
000042BC  43F8 00D9               6748mm         LEA     OPSTINC, A1     
000042C0  103C 000E               6749mm         MOVE.B  #14,D0          
000042C4  4E4F                    6750mm         TRAP    #15
000042C6                          6751mm         ENDM
000042C6  6000 0430               6752m         BRA     COMPLETE_495  
000042CA                          6753m ADRREGPREDEC_495: 
000042CA  BC3C 0001               6754m         CMP.B   #$01, D6
000042CE  6700 003C               6755m         BEQ     ADRREGPREDECSRC_495   
000042D2                          6756m ADRREGPREDECDEST_495:
000042D2                          6757mm         PRINTPD  
000042D2  43F8 00D7               6758mm         LEA     OPREDEC, A1     
000042D6  103C 000E               6759mm         MOVE.B  #14,D0          
000042DA  4E4F                    6760mm         TRAP    #15
000042DC                          6761mm         ENDM
000042DC                          6762mm         PRINTLB
000042DC  43F8 00D0               6763mm         LEA     OLB, A1     
000042E0  103C 000E               6764mm         MOVE.B  #14,D0          
000042E4  4E4F                    6765mm         TRAP    #15
000042E6                          6766mm         ENDM
000042E6                          6767mm         PRINTANDEST D3  
000042E6  3203                    6768mm         MOVE.W  D3, D1
000042E8  E949                    6769mm         LSL     #$04, D1
000042EA  E049                    6770mm         LSR     #$08, D1
000042EC  EA49                    6771mm         LSR     #$05, D1
000042EE  43F8 00CE               6772mm         LEA     OAN, A1     
000042F2  103C 000E               6773mm         MOVE.B  #14,D0          
000042F6  4E4F                    6774mm         TRAP    #15
000042F8  103C 0003               6775mm         MOVE.B  #3,D0          
000042FC  4E4F                    6776mm         TRAP    #15
000042FE                          6777mm         ENDM
000042FE                          6778mm         PRINTRB
000042FE  43F8 00D2               6779mm         LEA     ORB, A1     
00004302  103C 000E               6780mm         MOVE.B  #14,D0          
00004306  4E4F                    6781mm         TRAP    #15
00004308                          6782mm         ENDM
00004308  6000 03EE               6783m         BRA     COMPLETE_495   
0000430C                          6784m ADRREGPREDECSRC_495: 
0000430C                          6785mm         PRINTPD  
0000430C  43F8 00D7               6786mm         LEA     OPREDEC, A1     
00004310  103C 000E               6787mm         MOVE.B  #14,D0          
00004314  4E4F                    6788mm         TRAP    #15
00004316                          6789mm         ENDM
00004316                          6790mm         PRINTLB
00004316  43F8 00D0               6791mm         LEA     OLB, A1     
0000431A  103C 000E               6792mm         MOVE.B  #14,D0          
0000431E  4E4F                    6793mm         TRAP    #15
00004320                          6794mm         ENDM
00004320                          6795mm         PRINTANSRC D3  
00004320  3203                    6796mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004322  E149                    6797mm         LSL     #$08, D1
00004324  EB49                    6798mm         LSL     #$05, D1
00004326  E049                    6799mm         LSR     #$08, D1
00004328  EA49                    6800mm         LSR     #$05, D1
0000432A  43F8 00CE               6801mm         LEA     OAN, A1     
0000432E  103C 000E               6802mm         MOVE.B  #14,D0          
00004332  4E4F                    6803mm         TRAP    #15
00004334  103C 0003               6804mm         MOVE.B  #3,D0          
00004338  4E4F                    6805mm         TRAP    #15
0000433A                          6806mm         ENDM
0000433A                          6807mm         PRINTRB
0000433A  43F8 00D2               6808mm         LEA     ORB, A1     
0000433E  103C 000E               6809mm         MOVE.B  #14,D0          
00004342  4E4F                    6810mm         TRAP    #15
00004344                          6811mm         ENDM
00004344  6000 03B2               6812m         BRA     COMPLETE_495
00004348                          6813m        
00004348                          6814m ADRABSOLUTE_495:
00004348  BC3C 0001               6815m         CMP.B   #$01, D6
0000434C  6600 0018               6816m         BNE     ADRABSOLUTEDST_495 
00004350                          6817m         
00004350  3A03                    6818m         MOVE.W  D3, D5
00004352  0803 0002               6819m         BTST    #2, D3
00004356  6600 0024               6820m         BNE     ADRIMMEDIATE_495
0000435A  0803 0000               6821m         BTST    #0, D3
0000435E  6600 0280               6822m         BNE     ADRABSOLUTEL_495
00004362  6000 01E6               6823m         BRA     ADRABSOLUTEW_495
00004366                          6824m ADRABSOLUTEDST_495:
00004366  3A03                    6825m         MOVE.W  D3, D5
00004368  0803 000B               6826m         BTST    #$B, D3
0000436C  6600 000E               6827m         BNE     ADRIMMEDIATE_495
00004370  0803 0009               6828m         BTST    #$09, D3
00004374  6600 026A               6829m         BNE     ADRABSOLUTEL_495
00004378  6000 01D0               6830m         BRA     ADRABSOLUTEW_495
0000437C                          6831m ADRIMMEDIATE_495:
0000437C  BE3C 0001               6832m         CMP.B   #1, D7
00004380  6700 00A2               6833m         BEQ     ADRIMMEDIATEL_495
00004384                          6834m ADRIMMEDIATEW_495:
00004384  361A                    6835m         MOVE.W  (A2)+, D3
00004386                          6836mm         PRINTHASH
00004386  103C 0006               6837mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000438A  323C 0023               6838mm         MOVE.W  #35, D1     ; AN = SIGN
0000438E  4E4F                    6839mm         TRAP    #15         ; OUTPUT = SIGN
00004390                          6840mm         ENDM
00004390                          6841mm         PRINTSIGN
00004390  103C 0006               6842mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004394  323C 0024               6843mm         MOVE.W  #36, D1     ; AN = SIGN
00004398  4E4F                    6844mm         TRAP    #15         ; OUTPUT = SIGN
0000439A                          6845mm         ENDM
0000439A                          6846mm         ADROUT
0000439A  103C 0006               6847mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000439E  3212                    6848mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A0  E049                    6849mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043A2  E849                    6850mm         LSR.W   #4, D1      
000043A4                          6851mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043A4  0C01 0009               6852mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043A8  6E00 000A               6853mmm         BGT     ALPHA_525
000043AC  0601 0030               6854mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B0  6000 0006               6855mmm         BRA     DONE_525
000043B4  0601 0037               6856mmm ALPHA_525: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043B8  4E71                    6857mmm DONE_525: NOP
000043BA                          6858mmm         ENDM
000043BA  4E4F                    6859mm         TRAP    #15         ; EXECUTE OUTPUT
000043BC                          6860mm         
000043BC  3212                    6861mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043BE  E949                    6862mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043C0  E049                    6863mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043C2  E849                    6864mm         LSR.W   #4, D1      
000043C4                          6865mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043C4  0C01 0009               6866mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043C8  6E00 000A               6867mmm         BGT     ALPHA_526
000043CC  0601 0030               6868mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D0  6000 0006               6869mmm         BRA     DONE_526
000043D4  0601 0037               6870mmm ALPHA_526: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043D8  4E71                    6871mmm DONE_526: NOP
000043DA                          6872mmm         ENDM
000043DA  4E4F                    6873mm         TRAP    #15         ; EXECUTE OUTPUT
000043DC                          6874mm         
000043DC  3212                    6875mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043DE  E149                    6876mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043E0  E049                    6877mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043E2  E849                    6878mm         LSR.W   #4, D1      
000043E4                          6879mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043E4  0C01 0009               6880mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043E8  6E00 000A               6881mmm         BGT     ALPHA_527
000043EC  0601 0030               6882mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F0  6000 0006               6883mmm         BRA     DONE_527
000043F4  0601 0037               6884mmm ALPHA_527: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043F8  4E71                    6885mmm DONE_527: NOP
000043FA                          6886mmm         ENDM
000043FA  4E4F                    6887mm         TRAP    #15         ; EXECUTE OUTPUT
000043FC                          6888mm         
000043FC  3212                    6889mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043FE  E149                    6890mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004400  E949                    6891mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004402  E049                    6892mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004404  E849                    6893mm         LSR.W   #4, D1      
00004406                          6894mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004406  0C01 0009               6895mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000440A  6E00 000A               6896mmm         BGT     ALPHA_528
0000440E  0601 0030               6897mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004412  6000 0006               6898mmm         BRA     DONE_528
00004416  0601 0037               6899mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000441A  4E71                    6900mmm DONE_528: NOP
0000441C                          6901mmm         ENDM
0000441C  4E4F                    6902mm         TRAP    #15         ; EXECUTE OUTPUT       
0000441E                          6903mm         ENDM 
0000441E  3605                    6904m         MOVE.W  D5, D3
00004420  6000 02D6               6905m         BRA     COMPLETE_495
00004424                          6906m ADRIMMEDIATEL_495:
00004424  361A                    6907m         MOVE.W  (A2)+, D3
00004426                          6908mm         PRINTHASH
00004426  103C 0006               6909mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000442A  323C 0023               6910mm         MOVE.W  #35, D1     ; AN = SIGN
0000442E  4E4F                    6911mm         TRAP    #15         ; OUTPUT = SIGN
00004430                          6912mm         ENDM
00004430                          6913mm         PRINTSIGN
00004430  103C 0006               6914mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004434  323C 0024               6915mm         MOVE.W  #36, D1     ; AN = SIGN
00004438  4E4F                    6916mm         TRAP    #15         ; OUTPUT = SIGN
0000443A                          6917mm         ENDM
0000443A                          6918mm         ADROUT 
0000443A  103C 0006               6919mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000443E  3212                    6920mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004440  E049                    6921mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004442  E849                    6922mm         LSR.W   #4, D1      
00004444                          6923mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004444  0C01 0009               6924mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004448  6E00 000A               6925mmm         BGT     ALPHA_532
0000444C  0601 0030               6926mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004450  6000 0006               6927mmm         BRA     DONE_532
00004454  0601 0037               6928mmm ALPHA_532: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004458  4E71                    6929mmm DONE_532: NOP
0000445A                          6930mmm         ENDM
0000445A  4E4F                    6931mm         TRAP    #15         ; EXECUTE OUTPUT
0000445C                          6932mm         
0000445C  3212                    6933mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000445E  E949                    6934mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004460  E049                    6935mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004462  E849                    6936mm         LSR.W   #4, D1      
00004464                          6937mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004464  0C01 0009               6938mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004468  6E00 000A               6939mmm         BGT     ALPHA_533
0000446C  0601 0030               6940mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004470  6000 0006               6941mmm         BRA     DONE_533
00004474  0601 0037               6942mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004478  4E71                    6943mmm DONE_533: NOP
0000447A                          6944mmm         ENDM
0000447A  4E4F                    6945mm         TRAP    #15         ; EXECUTE OUTPUT
0000447C                          6946mm         
0000447C  3212                    6947mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000447E  E149                    6948mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004480  E049                    6949mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004482  E849                    6950mm         LSR.W   #4, D1      
00004484                          6951mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004484  0C01 0009               6952mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004488  6E00 000A               6953mmm         BGT     ALPHA_534
0000448C  0601 0030               6954mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004490  6000 0006               6955mmm         BRA     DONE_534
00004494  0601 0037               6956mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004498  4E71                    6957mmm DONE_534: NOP
0000449A                          6958mmm         ENDM
0000449A  4E4F                    6959mm         TRAP    #15         ; EXECUTE OUTPUT
0000449C                          6960mm         
0000449C  3212                    6961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000449E  E149                    6962mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044A0  E949                    6963mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044A2  E049                    6964mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044A4  E849                    6965mm         LSR.W   #4, D1      
000044A6                          6966mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044A6  0C01 0009               6967mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044AA  6E00 000A               6968mmm         BGT     ALPHA_535
000044AE  0601 0030               6969mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044B2  6000 0006               6970mmm         BRA     DONE_535
000044B6  0601 0037               6971mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044BA  4E71                    6972mmm DONE_535: NOP
000044BC                          6973mmm         ENDM
000044BC  4E4F                    6974mm         TRAP    #15         ; EXECUTE OUTPUT       
000044BE                          6975mm         ENDM 
000044BE  361A                    6976m         MOVE.W  (A2)+, D3
000044C0                          6977mm         ADROUT
000044C0  103C 0006               6978mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044C4  3212                    6979mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044C6  E049                    6980mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044C8  E849                    6981mm         LSR.W   #4, D1      
000044CA                          6982mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044CA  0C01 0009               6983mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044CE  6E00 000A               6984mmm         BGT     ALPHA_537
000044D2  0601 0030               6985mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044D6  6000 0006               6986mmm         BRA     DONE_537
000044DA  0601 0037               6987mmm ALPHA_537: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044DE  4E71                    6988mmm DONE_537: NOP
000044E0                          6989mmm         ENDM
000044E0  4E4F                    6990mm         TRAP    #15         ; EXECUTE OUTPUT
000044E2                          6991mm         
000044E2  3212                    6992mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044E4  E949                    6993mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000044E6  E049                    6994mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044E8  E849                    6995mm         LSR.W   #4, D1      
000044EA                          6996mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044EA  0C01 0009               6997mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044EE  6E00 000A               6998mmm         BGT     ALPHA_538
000044F2  0601 0030               6999mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044F6  6000 0006               7000mmm         BRA     DONE_538
000044FA  0601 0037               7001mmm ALPHA_538: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044FE  4E71                    7002mmm DONE_538: NOP
00004500                          7003mmm         ENDM
00004500  4E4F                    7004mm         TRAP    #15         ; EXECUTE OUTPUT
00004502                          7005mm         
00004502  3212                    7006mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004504  E149                    7007mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004506  E049                    7008mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004508  E849                    7009mm         LSR.W   #4, D1      
0000450A                          7010mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000450A  0C01 0009               7011mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000450E  6E00 000A               7012mmm         BGT     ALPHA_539
00004512  0601 0030               7013mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004516  6000 0006               7014mmm         BRA     DONE_539
0000451A  0601 0037               7015mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000451E  4E71                    7016mmm DONE_539: NOP
00004520                          7017mmm         ENDM
00004520  4E4F                    7018mm         TRAP    #15         ; EXECUTE OUTPUT
00004522                          7019mm         
00004522  3212                    7020mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004524  E149                    7021mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004526  E949                    7022mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004528  E049                    7023mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000452A  E849                    7024mm         LSR.W   #4, D1      
0000452C                          7025mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000452C  0C01 0009               7026mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004530  6E00 000A               7027mmm         BGT     ALPHA_540
00004534  0601 0030               7028mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004538  6000 0006               7029mmm         BRA     DONE_540
0000453C  0601 0037               7030mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004540  4E71                    7031mmm DONE_540: NOP
00004542                          7032mmm         ENDM
00004542  4E4F                    7033mm         TRAP    #15         ; EXECUTE OUTPUT       
00004544                          7034mm         ENDM 
00004544  3605                    7035m         MOVE.W  D5, D3
00004546  6000 01B0               7036m         BRA     COMPLETE_495 
0000454A                          7037m ADRABSOLUTEW_495:     
0000454A  361A                    7038m         MOVE.W  (A2)+, D3
0000454C                          7039mm         PRINTSIGN
0000454C  103C 0006               7040mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004550  323C 0024               7041mm         MOVE.W  #36, D1     ; AN = SIGN
00004554  4E4F                    7042mm         TRAP    #15         ; OUTPUT = SIGN
00004556                          7043mm         ENDM
00004556                          7044mm         ADROUT
00004556  103C 0006               7045mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000455A  3212                    7046mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000455C  E049                    7047mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000455E  E849                    7048mm         LSR.W   #4, D1      
00004560                          7049mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004560  0C01 0009               7050mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004564  6E00 000A               7051mmm         BGT     ALPHA_543
00004568  0601 0030               7052mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000456C  6000 0006               7053mmm         BRA     DONE_543
00004570  0601 0037               7054mmm ALPHA_543: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004574  4E71                    7055mmm DONE_543: NOP
00004576                          7056mmm         ENDM
00004576  4E4F                    7057mm         TRAP    #15         ; EXECUTE OUTPUT
00004578                          7058mm         
00004578  3212                    7059mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000457A  E949                    7060mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000457C  E049                    7061mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000457E  E849                    7062mm         LSR.W   #4, D1      
00004580                          7063mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004580  0C01 0009               7064mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004584  6E00 000A               7065mmm         BGT     ALPHA_544
00004588  0601 0030               7066mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000458C  6000 0006               7067mmm         BRA     DONE_544
00004590  0601 0037               7068mmm ALPHA_544: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004594  4E71                    7069mmm DONE_544: NOP
00004596                          7070mmm         ENDM
00004596  4E4F                    7071mm         TRAP    #15         ; EXECUTE OUTPUT
00004598                          7072mm         
00004598  3212                    7073mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000459A  E149                    7074mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000459C  E049                    7075mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000459E  E849                    7076mm         LSR.W   #4, D1      
000045A0                          7077mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045A0  0C01 0009               7078mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045A4  6E00 000A               7079mmm         BGT     ALPHA_545
000045A8  0601 0030               7080mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045AC  6000 0006               7081mmm         BRA     DONE_545
000045B0  0601 0037               7082mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045B4  4E71                    7083mmm DONE_545: NOP
000045B6                          7084mmm         ENDM
000045B6  4E4F                    7085mm         TRAP    #15         ; EXECUTE OUTPUT
000045B8                          7086mm         
000045B8  3212                    7087mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045BA  E149                    7088mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045BC  E949                    7089mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045BE  E049                    7090mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045C0  E849                    7091mm         LSR.W   #4, D1      
000045C2                          7092mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045C2  0C01 0009               7093mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045C6  6E00 000A               7094mmm         BGT     ALPHA_546
000045CA  0601 0030               7095mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045CE  6000 0006               7096mmm         BRA     DONE_546
000045D2  0601 0037               7097mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045D6  4E71                    7098mmm DONE_546: NOP
000045D8                          7099mmm         ENDM
000045D8  4E4F                    7100mm         TRAP    #15         ; EXECUTE OUTPUT       
000045DA                          7101mm         ENDM 
000045DA  3605                    7102m         MOVE.W  D5, D3
000045DC  6000 011A               7103m         BRA     COMPLETE_495  
000045E0                          7104m ADRABSOLUTEL_495:  
000045E0  361A                    7105m         MOVE.W  (A2)+, D3
000045E2                          7106mm         PRINTSIGN
000045E2  103C 0006               7107mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000045E6  323C 0024               7108mm         MOVE.W  #36, D1     ; AN = SIGN
000045EA  4E4F                    7109mm         TRAP    #15         ; OUTPUT = SIGN
000045EC                          7110mm         ENDM
000045EC                          7111mm         ADROUT 
000045EC  103C 0006               7112mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000045F0  3212                    7113mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045F2  E049                    7114mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045F4  E849                    7115mm         LSR.W   #4, D1      
000045F6                          7116mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045F6  0C01 0009               7117mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045FA  6E00 000A               7118mmm         BGT     ALPHA_549
000045FE  0601 0030               7119mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004602  6000 0006               7120mmm         BRA     DONE_549
00004606  0601 0037               7121mmm ALPHA_549: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000460A  4E71                    7122mmm DONE_549: NOP
0000460C                          7123mmm         ENDM
0000460C  4E4F                    7124mm         TRAP    #15         ; EXECUTE OUTPUT
0000460E                          7125mm         
0000460E  3212                    7126mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004610  E949                    7127mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004612  E049                    7128mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004614  E849                    7129mm         LSR.W   #4, D1      
00004616                          7130mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004616  0C01 0009               7131mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000461A  6E00 000A               7132mmm         BGT     ALPHA_550
0000461E  0601 0030               7133mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004622  6000 0006               7134mmm         BRA     DONE_550
00004626  0601 0037               7135mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000462A  4E71                    7136mmm DONE_550: NOP
0000462C                          7137mmm         ENDM
0000462C  4E4F                    7138mm         TRAP    #15         ; EXECUTE OUTPUT
0000462E                          7139mm         
0000462E  3212                    7140mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004630  E149                    7141mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004632  E049                    7142mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004634  E849                    7143mm         LSR.W   #4, D1      
00004636                          7144mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004636  0C01 0009               7145mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000463A  6E00 000A               7146mmm         BGT     ALPHA_551
0000463E  0601 0030               7147mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004642  6000 0006               7148mmm         BRA     DONE_551
00004646  0601 0037               7149mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000464A  4E71                    7150mmm DONE_551: NOP
0000464C                          7151mmm         ENDM
0000464C  4E4F                    7152mm         TRAP    #15         ; EXECUTE OUTPUT
0000464E                          7153mm         
0000464E  3212                    7154mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004650  E149                    7155mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004652  E949                    7156mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004654  E049                    7157mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004656  E849                    7158mm         LSR.W   #4, D1      
00004658                          7159mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004658  0C01 0009               7160mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000465C  6E00 000A               7161mmm         BGT     ALPHA_552
00004660  0601 0030               7162mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004664  6000 0006               7163mmm         BRA     DONE_552
00004668  0601 0037               7164mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000466C  4E71                    7165mmm DONE_552: NOP
0000466E                          7166mmm         ENDM
0000466E  4E4F                    7167mm         TRAP    #15         ; EXECUTE OUTPUT       
00004670                          7168mm         ENDM 
00004670  361A                    7169m         MOVE.W  (A2)+, D3
00004672                          7170mm         ADROUT
00004672  103C 0006               7171mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004676  3212                    7172mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004678  E049                    7173mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000467A  E849                    7174mm         LSR.W   #4, D1      
0000467C                          7175mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000467C  0C01 0009               7176mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004680  6E00 000A               7177mmm         BGT     ALPHA_554
00004684  0601 0030               7178mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004688  6000 0006               7179mmm         BRA     DONE_554
0000468C  0601 0037               7180mmm ALPHA_554: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004690  4E71                    7181mmm DONE_554: NOP
00004692                          7182mmm         ENDM
00004692  4E4F                    7183mm         TRAP    #15         ; EXECUTE OUTPUT
00004694                          7184mm         
00004694  3212                    7185mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004696  E949                    7186mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004698  E049                    7187mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000469A  E849                    7188mm         LSR.W   #4, D1      
0000469C                          7189mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000469C  0C01 0009               7190mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046A0  6E00 000A               7191mmm         BGT     ALPHA_555
000046A4  0601 0030               7192mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046A8  6000 0006               7193mmm         BRA     DONE_555
000046AC  0601 0037               7194mmm ALPHA_555: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046B0  4E71                    7195mmm DONE_555: NOP
000046B2                          7196mmm         ENDM
000046B2  4E4F                    7197mm         TRAP    #15         ; EXECUTE OUTPUT
000046B4                          7198mm         
000046B4  3212                    7199mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046B6  E149                    7200mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046B8  E049                    7201mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046BA  E849                    7202mm         LSR.W   #4, D1      
000046BC                          7203mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046BC  0C01 0009               7204mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046C0  6E00 000A               7205mmm         BGT     ALPHA_556
000046C4  0601 0030               7206mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046C8  6000 0006               7207mmm         BRA     DONE_556
000046CC  0601 0037               7208mmm ALPHA_556: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046D0  4E71                    7209mmm DONE_556: NOP
000046D2                          7210mmm         ENDM
000046D2  4E4F                    7211mm         TRAP    #15         ; EXECUTE OUTPUT
000046D4                          7212mm         
000046D4  3212                    7213mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000046D6  E149                    7214mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000046D8  E949                    7215mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000046DA  E049                    7216mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000046DC  E849                    7217mm         LSR.W   #4, D1      
000046DE                          7218mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000046DE  0C01 0009               7219mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000046E2  6E00 000A               7220mmm         BGT     ALPHA_557
000046E6  0601 0030               7221mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000046EA  6000 0006               7222mmm         BRA     DONE_557
000046EE  0601 0037               7223mmm ALPHA_557: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000046F2  4E71                    7224mmm DONE_557: NOP
000046F4                          7225mmm         ENDM
000046F4  4E4F                    7226mm         TRAP    #15         ; EXECUTE OUTPUT       
000046F6                          7227mm         ENDM 
000046F6  3605                    7228m         MOVE.W  D5, D3
000046F8                          7229m 
000046F8                          7230m COMPLETE_495:  ; OPCODE HAS BEEN VERIFIED
000046F8                          7231m         ENDM
000046F8                          7232m         printComma
000046F8  43F8 00D4               7233m         LEA     OCOMMA, A1     
000046FC  103C 000E               7234m         MOVE.B  #14,D0          
00004700  4E4F                    7235m         TRAP    #15
00004702                          7236m         ENDM
00004702                          7237m         printDnDest     D3
00004702  3203                    7238m         MOVE.W  D3, D1      ; BITS 9 TO 11
00004704  E949                    7239m         LSL     #$04, D1
00004706  E049                    7240m         LSR     #$08, D1
00004708  EA49                    7241m         LSR     #$05, D1
0000470A  43F8 00CC               7242m         LEA     ODN, A1     
0000470E  103C 000E               7243m         MOVE.B  #14,D0          
00004712  4E4F                    7244m         TRAP    #15
00004714  103C 0003               7245m         MOVE.B  #3,D0          
00004718  4E4F                    7246m         TRAP    #15
0000471A                          7247m         ENDM
0000471A  4E75                    7248          RTS                 ; Return from decodeDIVU subroutine
0000471C                          7249  
0000471C                          7250  
0000471C                          7251  ; ------------------------------------------------------------
0000471C                          7252  ; 8. "decodeLEA" subroutine
0000471C                          7253  ; Gary
0000471C                          7254  ;
0000471C                          7255  ; Decodes lea by verifying, printing in a formatted form,
0000471C                          7256  ; then decoding adressing modes and outputing them in formatted form.
0000471C                          7257  ; ------------------------------------------------------------
0000471C                          7258  decodeLEA:
0000471C                          7259m         verifyOpcode    pLEA, (A2)
0000471C  43F8 0172               7260m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004720  3612                    7261m         MOVE.W  (A2), D3      ; INPUT VALUE
00004722  123C 000F               7262m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004726                          7263m         
00004726                          7264m LOOP_560: 
00004726  0C11 0030               7265m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000472A  6700 000E               7266m         BEQ     CHECKFOR0_560
0000472E  0C11 0031               7267m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004732  6700 0010               7268m         BEQ     CHECKFOR1_560
00004736  6000 0012               7269m         BRA     NEXT_560      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000473A                          7270m         
0000473A                          7271m CHECKFOR0_560: 
0000473A  0303                    7272m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000473C  6600 303C               7273m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004740  6000 0008               7274m         BRA     NEXT_560
00004744                          7275m 
00004744                          7276m CHECKFOR1_560:
00004744  0303                    7277m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004746  6700 3032               7278m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000474A                          7279m 
0000474A                          7280m NEXT_560: 
0000474A  B23C 0000               7281m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000474E  6700 0008               7282m         BEQ     COMPLETE_560  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004752  5301                    7283m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004754  1819                    7284m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004756  60CE                    7285m         BRA     LOOP_560      ; BEGIN LOOP AGAIN
00004758                          7286m 
00004758                          7287m COMPLETE_560:  ; OPCODE HAS BEEN VERIFIED
00004758                          7288m         ENDM
00004758  43F8 008C               7289          LEA     oLEA, A1     
0000475C  103C 000E               7290          MOVE.B  #14,D0          
00004760  4E4F                    7291          TRAP    #15
00004762  43F8 00DD               7292          LEA     oBlank, A1     
00004766  103C 000E               7293          MOVE.B  #14,D0          
0000476A  4E4F                    7294          TRAP    #15
0000476C  3A12                    7295          MOVE.W  (A2), D5
0000476E                          7296m         prepareAdrMode  #$1, (A2)
0000476E  3C3C 0001               7297m         MOVE.W  #$1, D6      ; INPUT VALUE
00004772  3212                    7298m         MOVE.W  (A2), D1
00004774  BC3C 0001               7299m         CMP.B   #$01, D6
00004778  6700 000C               7300m         BEQ     ADRSOURCE_561    
0000477C                          7301m ADRDEST_561:
0000477C  EF49                    7302m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000477E  E049                    7303m         LSR     #$08, D1
00004780  EA49                    7304m         LSR     #$05, D1
00004782  6000 000A               7305m         BRA     COMPLETE_561 
00004786                          7306m ADRSOURCE_561:                
00004786  E149                    7307m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004788  E549                    7308m         LSL     #$02, D1
0000478A  E049                    7309m         LSR     #$08, D1
0000478C  EA49                    7310m         LSR     #$05, D1
0000478E                          7311m COMPLETE_561:  ; OPCODE HAS BEEN VERIFIED
0000478E                          7312m         ENDM        
0000478E                          7313m         decodeAdrMode   (A2), D1
0000478E  3612                    7314m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004790  3201                    7315m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004792                          7316m 
00004792  B23C 0001               7317m         CMP.B   #$01, D1
00004796  6700 0066               7318m         BEQ     ADRREGDIRECT_562    
0000479A  B23C 0002               7319m         CMP.B   #$02, D1
0000479E  6700 00A0               7320m         BEQ     ADRREGINDIRECT_562  
000047A2  B23C 0003               7321m         CMP.B   #$03, D1
000047A6  6700 0102               7322m         BEQ     ADRREGPOSTINC_562  
000047AA  B23C 0004               7323m         CMP.B   #$04, D1
000047AE  6700 0178               7324m         BEQ     ADRREGPREDEC_562
000047B2  B23C 0007               7325m         CMP.B   #$07, D1
000047B6  6700 01EE               7326m         BEQ     ADRABSOLUTE_562    
000047BA                          7327m         
000047BA                          7328m DATAREGDIRECT_562: 
000047BA  BC3C 0001               7329m         CMP.B   #$01, D6
000047BE  6700 001E               7330m         BEQ     DATAREGDIRECTSRC_562   
000047C2                          7331m DATAREGDIRECTDEST_562: 
000047C2                          7332mm         PRINTDNDEST D3 
000047C2  3203                    7333mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000047C4  E949                    7334mm         LSL     #$04, D1
000047C6  E049                    7335mm         LSR     #$08, D1
000047C8  EA49                    7336mm         LSR     #$05, D1
000047CA  43F8 00CC               7337mm         LEA     ODN, A1     
000047CE  103C 000E               7338mm         MOVE.B  #14,D0          
000047D2  4E4F                    7339mm         TRAP    #15
000047D4  103C 0003               7340mm         MOVE.B  #3,D0          
000047D8  4E4F                    7341mm         TRAP    #15
000047DA                          7342mm         ENDM
000047DA  6000 057A               7343m         BRA     COMPLETE_562 
000047DE                          7344m DATAREGDIRECTSRC_562: 
000047DE                          7345mm         PRINTDNSRC D3 
000047DE  4281                    7346mm         CLR.L   D1
000047E0  3203                    7347mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047E2  E149                    7348mm         LSL     #$08, D1
000047E4  EB49                    7349mm         LSL     #$05, D1
000047E6  E049                    7350mm         LSR     #$08, D1
000047E8  EA49                    7351mm         LSR     #$05, D1
000047EA  43F8 00CC               7352mm         LEA     ODN, A1     
000047EE  103C 000E               7353mm         MOVE.B  #14,D0          
000047F2  4E4F                    7354mm         TRAP    #15
000047F4  103C 0003               7355mm         MOVE.B  #3,D0          
000047F8  4E4F                    7356mm         TRAP    #15
000047FA                          7357mm         ENDM
000047FA  6000 055A               7358m         BRA     COMPLETE_562   
000047FE                          7359m         
000047FE                          7360m ADRREGDIRECT_562: 
000047FE  BC3C 0001               7361m         CMP.B   #$01, D6
00004802  6700 001E               7362m         BEQ     ADRREGDIRECTSRC_562   
00004806                          7363m ADRREGDIRECTDEST_562:
00004806                          7364mm         PRINTANDEST D3
00004806  3203                    7365mm         MOVE.W  D3, D1
00004808  E949                    7366mm         LSL     #$04, D1
0000480A  E049                    7367mm         LSR     #$08, D1
0000480C  EA49                    7368mm         LSR     #$05, D1
0000480E  43F8 00CE               7369mm         LEA     OAN, A1     
00004812  103C 000E               7370mm         MOVE.B  #14,D0          
00004816  4E4F                    7371mm         TRAP    #15
00004818  103C 0003               7372mm         MOVE.B  #3,D0          
0000481C  4E4F                    7373mm         TRAP    #15
0000481E                          7374mm         ENDM
0000481E  6000 0536               7375m         BRA     COMPLETE_562   
00004822                          7376m ADRREGDIRECTSRC_562:
00004822                          7377mm         PRINTANSRC D3
00004822  3203                    7378mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004824  E149                    7379mm         LSL     #$08, D1
00004826  EB49                    7380mm         LSL     #$05, D1
00004828  E049                    7381mm         LSR     #$08, D1
0000482A  EA49                    7382mm         LSR     #$05, D1
0000482C  43F8 00CE               7383mm         LEA     OAN, A1     
00004830  103C 000E               7384mm         MOVE.B  #14,D0          
00004834  4E4F                    7385mm         TRAP    #15
00004836  103C 0003               7386mm         MOVE.B  #3,D0          
0000483A  4E4F                    7387mm         TRAP    #15
0000483C                          7388mm         ENDM
0000483C  6000 0518               7389m         BRA     COMPLETE_562   
00004840                          7390m        
00004840                          7391m ADRREGINDIRECT_562:   
00004840  BC3C 0001               7392m         CMP.B   #$01, D6
00004844  6700 0032               7393m         BEQ     ADRREGINDIRECTSRC_562   
00004848                          7394m ADRREGINDIRECTDEST_562:
00004848                          7395mm         PRINTLB
00004848  43F8 00D0               7396mm         LEA     OLB, A1     
0000484C  103C 000E               7397mm         MOVE.B  #14,D0          
00004850  4E4F                    7398mm         TRAP    #15
00004852                          7399mm         ENDM
00004852                          7400mm         PRINTANDEST D3  
00004852  3203                    7401mm         MOVE.W  D3, D1
00004854  E949                    7402mm         LSL     #$04, D1
00004856  E049                    7403mm         LSR     #$08, D1
00004858  EA49                    7404mm         LSR     #$05, D1
0000485A  43F8 00CE               7405mm         LEA     OAN, A1     
0000485E  103C 000E               7406mm         MOVE.B  #14,D0          
00004862  4E4F                    7407mm         TRAP    #15
00004864  103C 0003               7408mm         MOVE.B  #3,D0          
00004868  4E4F                    7409mm         TRAP    #15
0000486A                          7410mm         ENDM
0000486A                          7411mm         PRINTRB
0000486A  43F8 00D2               7412mm         LEA     ORB, A1     
0000486E  103C 000E               7413mm         MOVE.B  #14,D0          
00004872  4E4F                    7414mm         TRAP    #15
00004874                          7415mm         ENDM
00004874  6000 04E0               7416m         BRA     COMPLETE_562     
00004878                          7417m ADRREGINDIRECTSRC_562:   
00004878                          7418mm         PRINTLB
00004878  43F8 00D0               7419mm         LEA     OLB, A1     
0000487C  103C 000E               7420mm         MOVE.B  #14,D0          
00004880  4E4F                    7421mm         TRAP    #15
00004882                          7422mm         ENDM
00004882                          7423mm         PRINTANSRC D3  
00004882  3203                    7424mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004884  E149                    7425mm         LSL     #$08, D1
00004886  EB49                    7426mm         LSL     #$05, D1
00004888  E049                    7427mm         LSR     #$08, D1
0000488A  EA49                    7428mm         LSR     #$05, D1
0000488C  43F8 00CE               7429mm         LEA     OAN, A1     
00004890  103C 000E               7430mm         MOVE.B  #14,D0          
00004894  4E4F                    7431mm         TRAP    #15
00004896  103C 0003               7432mm         MOVE.B  #3,D0          
0000489A  4E4F                    7433mm         TRAP    #15
0000489C                          7434mm         ENDM
0000489C                          7435mm         PRINTRB
0000489C  43F8 00D2               7436mm         LEA     ORB, A1     
000048A0  103C 000E               7437mm         MOVE.B  #14,D0          
000048A4  4E4F                    7438mm         TRAP    #15
000048A6                          7439mm         ENDM
000048A6  6000 04AE               7440m         BRA     COMPLETE_562   
000048AA                          7441m         
000048AA                          7442m ADRREGPOSTINC_562:   
000048AA  BC3C 0001               7443m         CMP.B   #$01, D6
000048AE  6700 003C               7444m         BEQ     ADRREGPOSTINCSRC_562   
000048B2                          7445m ADRREGPOSTINCDEST_562: 
000048B2                          7446mm         PRINTLB
000048B2  43F8 00D0               7447mm         LEA     OLB, A1     
000048B6  103C 000E               7448mm         MOVE.B  #14,D0          
000048BA  4E4F                    7449mm         TRAP    #15
000048BC                          7450mm         ENDM
000048BC                          7451mm         PRINTANDEST D3  
000048BC  3203                    7452mm         MOVE.W  D3, D1
000048BE  E949                    7453mm         LSL     #$04, D1
000048C0  E049                    7454mm         LSR     #$08, D1
000048C2  EA49                    7455mm         LSR     #$05, D1
000048C4  43F8 00CE               7456mm         LEA     OAN, A1     
000048C8  103C 000E               7457mm         MOVE.B  #14,D0          
000048CC  4E4F                    7458mm         TRAP    #15
000048CE  103C 0003               7459mm         MOVE.B  #3,D0          
000048D2  4E4F                    7460mm         TRAP    #15
000048D4                          7461mm         ENDM
000048D4                          7462mm         PRINTRB
000048D4  43F8 00D2               7463mm         LEA     ORB, A1     
000048D8  103C 000E               7464mm         MOVE.B  #14,D0          
000048DC  4E4F                    7465mm         TRAP    #15
000048DE                          7466mm         ENDM
000048DE                          7467mm         PRINTPI
000048DE  43F8 00D9               7468mm         LEA     OPSTINC, A1     
000048E2  103C 000E               7469mm         MOVE.B  #14,D0          
000048E6  4E4F                    7470mm         TRAP    #15
000048E8                          7471mm         ENDM
000048E8  6000 046C               7472m         BRA     COMPLETE_562  
000048EC                          7473m ADRREGPOSTINCSRC_562:           
000048EC                          7474mm         PRINTLB
000048EC  43F8 00D0               7475mm         LEA     OLB, A1     
000048F0  103C 000E               7476mm         MOVE.B  #14,D0          
000048F4  4E4F                    7477mm         TRAP    #15
000048F6                          7478mm         ENDM
000048F6                          7479mm         PRINTANSRC D3  
000048F6  3203                    7480mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000048F8  E149                    7481mm         LSL     #$08, D1
000048FA  EB49                    7482mm         LSL     #$05, D1
000048FC  E049                    7483mm         LSR     #$08, D1
000048FE  EA49                    7484mm         LSR     #$05, D1
00004900  43F8 00CE               7485mm         LEA     OAN, A1     
00004904  103C 000E               7486mm         MOVE.B  #14,D0          
00004908  4E4F                    7487mm         TRAP    #15
0000490A  103C 0003               7488mm         MOVE.B  #3,D0          
0000490E  4E4F                    7489mm         TRAP    #15
00004910                          7490mm         ENDM
00004910                          7491mm         PRINTRB
00004910  43F8 00D2               7492mm         LEA     ORB, A1     
00004914  103C 000E               7493mm         MOVE.B  #14,D0          
00004918  4E4F                    7494mm         TRAP    #15
0000491A                          7495mm         ENDM
0000491A                          7496mm         PRINTPI
0000491A  43F8 00D9               7497mm         LEA     OPSTINC, A1     
0000491E  103C 000E               7498mm         MOVE.B  #14,D0          
00004922  4E4F                    7499mm         TRAP    #15
00004924                          7500mm         ENDM
00004924  6000 0430               7501m         BRA     COMPLETE_562  
00004928                          7502m ADRREGPREDEC_562: 
00004928  BC3C 0001               7503m         CMP.B   #$01, D6
0000492C  6700 003C               7504m         BEQ     ADRREGPREDECSRC_562   
00004930                          7505m ADRREGPREDECDEST_562:
00004930                          7506mm         PRINTPD  
00004930  43F8 00D7               7507mm         LEA     OPREDEC, A1     
00004934  103C 000E               7508mm         MOVE.B  #14,D0          
00004938  4E4F                    7509mm         TRAP    #15
0000493A                          7510mm         ENDM
0000493A                          7511mm         PRINTLB
0000493A  43F8 00D0               7512mm         LEA     OLB, A1     
0000493E  103C 000E               7513mm         MOVE.B  #14,D0          
00004942  4E4F                    7514mm         TRAP    #15
00004944                          7515mm         ENDM
00004944                          7516mm         PRINTANDEST D3  
00004944  3203                    7517mm         MOVE.W  D3, D1
00004946  E949                    7518mm         LSL     #$04, D1
00004948  E049                    7519mm         LSR     #$08, D1
0000494A  EA49                    7520mm         LSR     #$05, D1
0000494C  43F8 00CE               7521mm         LEA     OAN, A1     
00004950  103C 000E               7522mm         MOVE.B  #14,D0          
00004954  4E4F                    7523mm         TRAP    #15
00004956  103C 0003               7524mm         MOVE.B  #3,D0          
0000495A  4E4F                    7525mm         TRAP    #15
0000495C                          7526mm         ENDM
0000495C                          7527mm         PRINTRB
0000495C  43F8 00D2               7528mm         LEA     ORB, A1     
00004960  103C 000E               7529mm         MOVE.B  #14,D0          
00004964  4E4F                    7530mm         TRAP    #15
00004966                          7531mm         ENDM
00004966  6000 03EE               7532m         BRA     COMPLETE_562   
0000496A                          7533m ADRREGPREDECSRC_562: 
0000496A                          7534mm         PRINTPD  
0000496A  43F8 00D7               7535mm         LEA     OPREDEC, A1     
0000496E  103C 000E               7536mm         MOVE.B  #14,D0          
00004972  4E4F                    7537mm         TRAP    #15
00004974                          7538mm         ENDM
00004974                          7539mm         PRINTLB
00004974  43F8 00D0               7540mm         LEA     OLB, A1     
00004978  103C 000E               7541mm         MOVE.B  #14,D0          
0000497C  4E4F                    7542mm         TRAP    #15
0000497E                          7543mm         ENDM
0000497E                          7544mm         PRINTANSRC D3  
0000497E  3203                    7545mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004980  E149                    7546mm         LSL     #$08, D1
00004982  EB49                    7547mm         LSL     #$05, D1
00004984  E049                    7548mm         LSR     #$08, D1
00004986  EA49                    7549mm         LSR     #$05, D1
00004988  43F8 00CE               7550mm         LEA     OAN, A1     
0000498C  103C 000E               7551mm         MOVE.B  #14,D0          
00004990  4E4F                    7552mm         TRAP    #15
00004992  103C 0003               7553mm         MOVE.B  #3,D0          
00004996  4E4F                    7554mm         TRAP    #15
00004998                          7555mm         ENDM
00004998                          7556mm         PRINTRB
00004998  43F8 00D2               7557mm         LEA     ORB, A1     
0000499C  103C 000E               7558mm         MOVE.B  #14,D0          
000049A0  4E4F                    7559mm         TRAP    #15
000049A2                          7560mm         ENDM
000049A2  6000 03B2               7561m         BRA     COMPLETE_562
000049A6                          7562m        
000049A6                          7563m ADRABSOLUTE_562:
000049A6  BC3C 0001               7564m         CMP.B   #$01, D6
000049AA  6600 0018               7565m         BNE     ADRABSOLUTEDST_562 
000049AE                          7566m         
000049AE  3A03                    7567m         MOVE.W  D3, D5
000049B0  0803 0002               7568m         BTST    #2, D3
000049B4  6600 0024               7569m         BNE     ADRIMMEDIATE_562
000049B8  0803 0000               7570m         BTST    #0, D3
000049BC  6600 0280               7571m         BNE     ADRABSOLUTEL_562
000049C0  6000 01E6               7572m         BRA     ADRABSOLUTEW_562
000049C4                          7573m ADRABSOLUTEDST_562:
000049C4  3A03                    7574m         MOVE.W  D3, D5
000049C6  0803 000B               7575m         BTST    #$B, D3
000049CA  6600 000E               7576m         BNE     ADRIMMEDIATE_562
000049CE  0803 0009               7577m         BTST    #$09, D3
000049D2  6600 026A               7578m         BNE     ADRABSOLUTEL_562
000049D6  6000 01D0               7579m         BRA     ADRABSOLUTEW_562
000049DA                          7580m ADRIMMEDIATE_562:
000049DA  BE3C 0001               7581m         CMP.B   #1, D7
000049DE  6700 00A2               7582m         BEQ     ADRIMMEDIATEL_562
000049E2                          7583m ADRIMMEDIATEW_562:
000049E2  361A                    7584m         MOVE.W  (A2)+, D3
000049E4                          7585mm         PRINTHASH
000049E4  103C 0006               7586mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049E8  323C 0023               7587mm         MOVE.W  #35, D1     ; AN = SIGN
000049EC  4E4F                    7588mm         TRAP    #15         ; OUTPUT = SIGN
000049EE                          7589mm         ENDM
000049EE                          7590mm         PRINTSIGN
000049EE  103C 0006               7591mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049F2  323C 0024               7592mm         MOVE.W  #36, D1     ; AN = SIGN
000049F6  4E4F                    7593mm         TRAP    #15         ; OUTPUT = SIGN
000049F8                          7594mm         ENDM
000049F8                          7595mm         ADROUT
000049F8  103C 0006               7596mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049FC  3212                    7597mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049FE  E049                    7598mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A00  E849                    7599mm         LSR.W   #4, D1      
00004A02                          7600mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A02  0C01 0009               7601mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A06  6E00 000A               7602mmm         BGT     ALPHA_592
00004A0A  0601 0030               7603mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A0E  6000 0006               7604mmm         BRA     DONE_592
00004A12  0601 0037               7605mmm ALPHA_592: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A16  4E71                    7606mmm DONE_592: NOP
00004A18                          7607mmm         ENDM
00004A18  4E4F                    7608mm         TRAP    #15         ; EXECUTE OUTPUT
00004A1A                          7609mm         
00004A1A  3212                    7610mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A1C  E949                    7611mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A1E  E049                    7612mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A20  E849                    7613mm         LSR.W   #4, D1      
00004A22                          7614mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A22  0C01 0009               7615mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A26  6E00 000A               7616mmm         BGT     ALPHA_593
00004A2A  0601 0030               7617mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A2E  6000 0006               7618mmm         BRA     DONE_593
00004A32  0601 0037               7619mmm ALPHA_593: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A36  4E71                    7620mmm DONE_593: NOP
00004A38                          7621mmm         ENDM
00004A38  4E4F                    7622mm         TRAP    #15         ; EXECUTE OUTPUT
00004A3A                          7623mm         
00004A3A  3212                    7624mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A3C  E149                    7625mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A3E  E049                    7626mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A40  E849                    7627mm         LSR.W   #4, D1      
00004A42                          7628mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A42  0C01 0009               7629mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A46  6E00 000A               7630mmm         BGT     ALPHA_594
00004A4A  0601 0030               7631mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A4E  6000 0006               7632mmm         BRA     DONE_594
00004A52  0601 0037               7633mmm ALPHA_594: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A56  4E71                    7634mmm DONE_594: NOP
00004A58                          7635mmm         ENDM
00004A58  4E4F                    7636mm         TRAP    #15         ; EXECUTE OUTPUT
00004A5A                          7637mm         
00004A5A  3212                    7638mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A5C  E149                    7639mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A5E  E949                    7640mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A60  E049                    7641mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A62  E849                    7642mm         LSR.W   #4, D1      
00004A64                          7643mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A64  0C01 0009               7644mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A68  6E00 000A               7645mmm         BGT     ALPHA_595
00004A6C  0601 0030               7646mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A70  6000 0006               7647mmm         BRA     DONE_595
00004A74  0601 0037               7648mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A78  4E71                    7649mmm DONE_595: NOP
00004A7A                          7650mmm         ENDM
00004A7A  4E4F                    7651mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A7C                          7652mm         ENDM 
00004A7C  3605                    7653m         MOVE.W  D5, D3
00004A7E  6000 02D6               7654m         BRA     COMPLETE_562
00004A82                          7655m ADRIMMEDIATEL_562:
00004A82  361A                    7656m         MOVE.W  (A2)+, D3
00004A84                          7657mm         PRINTHASH
00004A84  103C 0006               7658mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A88  323C 0023               7659mm         MOVE.W  #35, D1     ; AN = SIGN
00004A8C  4E4F                    7660mm         TRAP    #15         ; OUTPUT = SIGN
00004A8E                          7661mm         ENDM
00004A8E                          7662mm         PRINTSIGN
00004A8E  103C 0006               7663mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A92  323C 0024               7664mm         MOVE.W  #36, D1     ; AN = SIGN
00004A96  4E4F                    7665mm         TRAP    #15         ; OUTPUT = SIGN
00004A98                          7666mm         ENDM
00004A98                          7667mm         ADROUT 
00004A98  103C 0006               7668mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A9C  3212                    7669mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A9E  E049                    7670mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AA0  E849                    7671mm         LSR.W   #4, D1      
00004AA2                          7672mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AA2  0C01 0009               7673mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AA6  6E00 000A               7674mmm         BGT     ALPHA_599
00004AAA  0601 0030               7675mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AAE  6000 0006               7676mmm         BRA     DONE_599
00004AB2  0601 0037               7677mmm ALPHA_599: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AB6  4E71                    7678mmm DONE_599: NOP
00004AB8                          7679mmm         ENDM
00004AB8  4E4F                    7680mm         TRAP    #15         ; EXECUTE OUTPUT
00004ABA                          7681mm         
00004ABA  3212                    7682mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ABC  E949                    7683mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004ABE  E049                    7684mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AC0  E849                    7685mm         LSR.W   #4, D1      
00004AC2                          7686mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AC2  0C01 0009               7687mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AC6  6E00 000A               7688mmm         BGT     ALPHA_600
00004ACA  0601 0030               7689mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004ACE  6000 0006               7690mmm         BRA     DONE_600
00004AD2  0601 0037               7691mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AD6  4E71                    7692mmm DONE_600: NOP
00004AD8                          7693mmm         ENDM
00004AD8  4E4F                    7694mm         TRAP    #15         ; EXECUTE OUTPUT
00004ADA                          7695mm         
00004ADA  3212                    7696mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ADC  E149                    7697mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004ADE  E049                    7698mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AE0  E849                    7699mm         LSR.W   #4, D1      
00004AE2                          7700mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AE2  0C01 0009               7701mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AE6  6E00 000A               7702mmm         BGT     ALPHA_601
00004AEA  0601 0030               7703mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AEE  6000 0006               7704mmm         BRA     DONE_601
00004AF2  0601 0037               7705mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AF6  4E71                    7706mmm DONE_601: NOP
00004AF8                          7707mmm         ENDM
00004AF8  4E4F                    7708mm         TRAP    #15         ; EXECUTE OUTPUT
00004AFA                          7709mm         
00004AFA  3212                    7710mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AFC  E149                    7711mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AFE  E949                    7712mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B00  E049                    7713mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B02  E849                    7714mm         LSR.W   #4, D1      
00004B04                          7715mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B04  0C01 0009               7716mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B08  6E00 000A               7717mmm         BGT     ALPHA_602
00004B0C  0601 0030               7718mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B10  6000 0006               7719mmm         BRA     DONE_602
00004B14  0601 0037               7720mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B18  4E71                    7721mmm DONE_602: NOP
00004B1A                          7722mmm         ENDM
00004B1A  4E4F                    7723mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B1C                          7724mm         ENDM 
00004B1C  361A                    7725m         MOVE.W  (A2)+, D3
00004B1E                          7726mm         ADROUT
00004B1E  103C 0006               7727mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B22  3212                    7728mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B24  E049                    7729mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B26  E849                    7730mm         LSR.W   #4, D1      
00004B28                          7731mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B28  0C01 0009               7732mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B2C  6E00 000A               7733mmm         BGT     ALPHA_604
00004B30  0601 0030               7734mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B34  6000 0006               7735mmm         BRA     DONE_604
00004B38  0601 0037               7736mmm ALPHA_604: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B3C  4E71                    7737mmm DONE_604: NOP
00004B3E                          7738mmm         ENDM
00004B3E  4E4F                    7739mm         TRAP    #15         ; EXECUTE OUTPUT
00004B40                          7740mm         
00004B40  3212                    7741mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B42  E949                    7742mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B44  E049                    7743mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B46  E849                    7744mm         LSR.W   #4, D1      
00004B48                          7745mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B48  0C01 0009               7746mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B4C  6E00 000A               7747mmm         BGT     ALPHA_605
00004B50  0601 0030               7748mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B54  6000 0006               7749mmm         BRA     DONE_605
00004B58  0601 0037               7750mmm ALPHA_605: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B5C  4E71                    7751mmm DONE_605: NOP
00004B5E                          7752mmm         ENDM
00004B5E  4E4F                    7753mm         TRAP    #15         ; EXECUTE OUTPUT
00004B60                          7754mm         
00004B60  3212                    7755mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B62  E149                    7756mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B64  E049                    7757mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B66  E849                    7758mm         LSR.W   #4, D1      
00004B68                          7759mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B68  0C01 0009               7760mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B6C  6E00 000A               7761mmm         BGT     ALPHA_606
00004B70  0601 0030               7762mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B74  6000 0006               7763mmm         BRA     DONE_606
00004B78  0601 0037               7764mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B7C  4E71                    7765mmm DONE_606: NOP
00004B7E                          7766mmm         ENDM
00004B7E  4E4F                    7767mm         TRAP    #15         ; EXECUTE OUTPUT
00004B80                          7768mm         
00004B80  3212                    7769mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B82  E149                    7770mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B84  E949                    7771mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B86  E049                    7772mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B88  E849                    7773mm         LSR.W   #4, D1      
00004B8A                          7774mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B8A  0C01 0009               7775mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B8E  6E00 000A               7776mmm         BGT     ALPHA_607
00004B92  0601 0030               7777mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B96  6000 0006               7778mmm         BRA     DONE_607
00004B9A  0601 0037               7779mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B9E  4E71                    7780mmm DONE_607: NOP
00004BA0                          7781mmm         ENDM
00004BA0  4E4F                    7782mm         TRAP    #15         ; EXECUTE OUTPUT       
00004BA2                          7783mm         ENDM 
00004BA2  3605                    7784m         MOVE.W  D5, D3
00004BA4  6000 01B0               7785m         BRA     COMPLETE_562 
00004BA8                          7786m ADRABSOLUTEW_562:     
00004BA8  361A                    7787m         MOVE.W  (A2)+, D3
00004BAA                          7788mm         PRINTSIGN
00004BAA  103C 0006               7789mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BAE  323C 0024               7790mm         MOVE.W  #36, D1     ; AN = SIGN
00004BB2  4E4F                    7791mm         TRAP    #15         ; OUTPUT = SIGN
00004BB4                          7792mm         ENDM
00004BB4                          7793mm         ADROUT
00004BB4  103C 0006               7794mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004BB8  3212                    7795mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BBA  E049                    7796mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BBC  E849                    7797mm         LSR.W   #4, D1      
00004BBE                          7798mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BBE  0C01 0009               7799mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BC2  6E00 000A               7800mmm         BGT     ALPHA_610
00004BC6  0601 0030               7801mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BCA  6000 0006               7802mmm         BRA     DONE_610
00004BCE  0601 0037               7803mmm ALPHA_610: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BD2  4E71                    7804mmm DONE_610: NOP
00004BD4                          7805mmm         ENDM
00004BD4  4E4F                    7806mm         TRAP    #15         ; EXECUTE OUTPUT
00004BD6                          7807mm         
00004BD6  3212                    7808mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD8  E949                    7809mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BDA  E049                    7810mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BDC  E849                    7811mm         LSR.W   #4, D1      
00004BDE                          7812mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BDE  0C01 0009               7813mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BE2  6E00 000A               7814mmm         BGT     ALPHA_611
00004BE6  0601 0030               7815mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BEA  6000 0006               7816mmm         BRA     DONE_611
00004BEE  0601 0037               7817mmm ALPHA_611: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BF2  4E71                    7818mmm DONE_611: NOP
00004BF4                          7819mmm         ENDM
00004BF4  4E4F                    7820mm         TRAP    #15         ; EXECUTE OUTPUT
00004BF6                          7821mm         
00004BF6  3212                    7822mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF8  E149                    7823mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BFA  E049                    7824mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BFC  E849                    7825mm         LSR.W   #4, D1      
00004BFE                          7826mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BFE  0C01 0009               7827mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C02  6E00 000A               7828mmm         BGT     ALPHA_612
00004C06  0601 0030               7829mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C0A  6000 0006               7830mmm         BRA     DONE_612
00004C0E  0601 0037               7831mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C12  4E71                    7832mmm DONE_612: NOP
00004C14                          7833mmm         ENDM
00004C14  4E4F                    7834mm         TRAP    #15         ; EXECUTE OUTPUT
00004C16                          7835mm         
00004C16  3212                    7836mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C18  E149                    7837mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C1A  E949                    7838mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C1C  E049                    7839mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C1E  E849                    7840mm         LSR.W   #4, D1      
00004C20                          7841mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C20  0C01 0009               7842mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C24  6E00 000A               7843mmm         BGT     ALPHA_613
00004C28  0601 0030               7844mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C2C  6000 0006               7845mmm         BRA     DONE_613
00004C30  0601 0037               7846mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C34  4E71                    7847mmm DONE_613: NOP
00004C36                          7848mmm         ENDM
00004C36  4E4F                    7849mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C38                          7850mm         ENDM 
00004C38  3605                    7851m         MOVE.W  D5, D3
00004C3A  6000 011A               7852m         BRA     COMPLETE_562  
00004C3E                          7853m ADRABSOLUTEL_562:  
00004C3E  361A                    7854m         MOVE.W  (A2)+, D3
00004C40                          7855mm         PRINTSIGN
00004C40  103C 0006               7856mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C44  323C 0024               7857mm         MOVE.W  #36, D1     ; AN = SIGN
00004C48  4E4F                    7858mm         TRAP    #15         ; OUTPUT = SIGN
00004C4A                          7859mm         ENDM
00004C4A                          7860mm         ADROUT 
00004C4A  103C 0006               7861mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004C4E  3212                    7862mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C50  E049                    7863mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C52  E849                    7864mm         LSR.W   #4, D1      
00004C54                          7865mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C54  0C01 0009               7866mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C58  6E00 000A               7867mmm         BGT     ALPHA_616
00004C5C  0601 0030               7868mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C60  6000 0006               7869mmm         BRA     DONE_616
00004C64  0601 0037               7870mmm ALPHA_616: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C68  4E71                    7871mmm DONE_616: NOP
00004C6A                          7872mmm         ENDM
00004C6A  4E4F                    7873mm         TRAP    #15         ; EXECUTE OUTPUT
00004C6C                          7874mm         
00004C6C  3212                    7875mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C6E  E949                    7876mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004C70  E049                    7877mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C72  E849                    7878mm         LSR.W   #4, D1      
00004C74                          7879mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C74  0C01 0009               7880mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C78  6E00 000A               7881mmm         BGT     ALPHA_617
00004C7C  0601 0030               7882mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C80  6000 0006               7883mmm         BRA     DONE_617
00004C84  0601 0037               7884mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C88  4E71                    7885mmm DONE_617: NOP
00004C8A                          7886mmm         ENDM
00004C8A  4E4F                    7887mm         TRAP    #15         ; EXECUTE OUTPUT
00004C8C                          7888mm         
00004C8C  3212                    7889mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C8E  E149                    7890mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C90  E049                    7891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C92  E849                    7892mm         LSR.W   #4, D1      
00004C94                          7893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C94  0C01 0009               7894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C98  6E00 000A               7895mmm         BGT     ALPHA_618
00004C9C  0601 0030               7896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CA0  6000 0006               7897mmm         BRA     DONE_618
00004CA4  0601 0037               7898mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CA8  4E71                    7899mmm DONE_618: NOP
00004CAA                          7900mmm         ENDM
00004CAA  4E4F                    7901mm         TRAP    #15         ; EXECUTE OUTPUT
00004CAC                          7902mm         
00004CAC  3212                    7903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CAE  E149                    7904mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004CB0  E949                    7905mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004CB2  E049                    7906mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CB4  E849                    7907mm         LSR.W   #4, D1      
00004CB6                          7908mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CB6  0C01 0009               7909mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CBA  6E00 000A               7910mmm         BGT     ALPHA_619
00004CBE  0601 0030               7911mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CC2  6000 0006               7912mmm         BRA     DONE_619
00004CC6  0601 0037               7913mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CCA  4E71                    7914mmm DONE_619: NOP
00004CCC                          7915mmm         ENDM
00004CCC  4E4F                    7916mm         TRAP    #15         ; EXECUTE OUTPUT       
00004CCE                          7917mm         ENDM 
00004CCE  361A                    7918m         MOVE.W  (A2)+, D3
00004CD0                          7919mm         ADROUT
00004CD0  103C 0006               7920mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004CD4  3212                    7921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CD6  E049                    7922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CD8  E849                    7923mm         LSR.W   #4, D1      
00004CDA                          7924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CDA  0C01 0009               7925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CDE  6E00 000A               7926mmm         BGT     ALPHA_621
00004CE2  0601 0030               7927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004CE6  6000 0006               7928mmm         BRA     DONE_621
00004CEA  0601 0037               7929mmm ALPHA_621: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004CEE  4E71                    7930mmm DONE_621: NOP
00004CF0                          7931mmm         ENDM
00004CF0  4E4F                    7932mm         TRAP    #15         ; EXECUTE OUTPUT
00004CF2                          7933mm         
00004CF2  3212                    7934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004CF4  E949                    7935mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004CF6  E049                    7936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004CF8  E849                    7937mm         LSR.W   #4, D1      
00004CFA                          7938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004CFA  0C01 0009               7939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004CFE  6E00 000A               7940mmm         BGT     ALPHA_622
00004D02  0601 0030               7941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D06  6000 0006               7942mmm         BRA     DONE_622
00004D0A  0601 0037               7943mmm ALPHA_622: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D0E  4E71                    7944mmm DONE_622: NOP
00004D10                          7945mmm         ENDM
00004D10  4E4F                    7946mm         TRAP    #15         ; EXECUTE OUTPUT
00004D12                          7947mm         
00004D12  3212                    7948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D14  E149                    7949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D16  E049                    7950mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D18  E849                    7951mm         LSR.W   #4, D1      
00004D1A                          7952mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D1A  0C01 0009               7953mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D1E  6E00 000A               7954mmm         BGT     ALPHA_623
00004D22  0601 0030               7955mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D26  6000 0006               7956mmm         BRA     DONE_623
00004D2A  0601 0037               7957mmm ALPHA_623: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D2E  4E71                    7958mmm DONE_623: NOP
00004D30                          7959mmm         ENDM
00004D30  4E4F                    7960mm         TRAP    #15         ; EXECUTE OUTPUT
00004D32                          7961mm         
00004D32  3212                    7962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004D34  E149                    7963mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004D36  E949                    7964mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004D38  E049                    7965mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004D3A  E849                    7966mm         LSR.W   #4, D1      
00004D3C                          7967mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004D3C  0C01 0009               7968mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004D40  6E00 000A               7969mmm         BGT     ALPHA_624
00004D44  0601 0030               7970mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004D48  6000 0006               7971mmm         BRA     DONE_624
00004D4C  0601 0037               7972mmm ALPHA_624: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004D50  4E71                    7973mmm DONE_624: NOP
00004D52                          7974mmm         ENDM
00004D52  4E4F                    7975mm         TRAP    #15         ; EXECUTE OUTPUT       
00004D54                          7976mm         ENDM 
00004D54  3605                    7977m         MOVE.W  D5, D3
00004D56                          7978m 
00004D56                          7979m COMPLETE_562:  ; OPCODE HAS BEEN VERIFIED
00004D56                          7980m         ENDM
00004D56                          7981m         printComma
00004D56  43F8 00D4               7982m         LEA     OCOMMA, A1     
00004D5A  103C 000E               7983m         MOVE.B  #14,D0          
00004D5E  4E4F                    7984m         TRAP    #15
00004D60                          7985m         ENDM
00004D60                          7986m         printAnDest     D5
00004D60  3205                    7987m         MOVE.W  D5, D1
00004D62  E949                    7988m         LSL     #$04, D1
00004D64  E049                    7989m         LSR     #$08, D1
00004D66  EA49                    7990m         LSR     #$05, D1
00004D68  43F8 00CE               7991m         LEA     OAN, A1     
00004D6C  103C 000E               7992m         MOVE.B  #14,D0          
00004D70  4E4F                    7993m         TRAP    #15
00004D72  103C 0003               7994m         MOVE.B  #3,D0          
00004D76  4E4F                    7995m         TRAP    #15
00004D78                          7996m         ENDM
00004D78  4E75                    7997          RTS                 ; Return from decodeLEA subroutine
00004D7A                          7998  
00004D7A                          7999  
00004D7A                          8000  ; ------------------------------------------------------------
00004D7A                          8001  ; 9. "decodeAND" subroutine
00004D7A                          8002  ; Gary
00004D7A                          8003  ;
00004D7A                          8004  ; Decodes and by verifying, printing in a formatted form,
00004D7A                          8005  ; then decoding adressing modes and outputing them in formatted form.
00004D7A                          8006  ; ------------------------------------------------------------
00004D7A                          8007  decodeAND:
00004D7A                          8008m         verifyOpcode    pAND, (A2)
00004D7A  43F8 0183               8009m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004D7E  3612                    8010m         MOVE.W  (A2), D3      ; INPUT VALUE
00004D80  123C 000F               8011m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004D84                          8012m         
00004D84                          8013m LOOP_627: 
00004D84  0C11 0030               8014m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004D88  6700 000E               8015m         BEQ     CHECKFOR0_627
00004D8C  0C11 0031               8016m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004D90  6700 0010               8017m         BEQ     CHECKFOR1_627
00004D94  6000 0012               8018m         BRA     NEXT_627      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004D98                          8019m         
00004D98                          8020m CHECKFOR0_627: 
00004D98  0303                    8021m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004D9A  6600 29DE               8022m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004D9E  6000 0008               8023m         BRA     NEXT_627
00004DA2                          8024m 
00004DA2                          8025m CHECKFOR1_627:
00004DA2  0303                    8026m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004DA4  6700 29D4               8027m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004DA8                          8028m 
00004DA8                          8029m NEXT_627: 
00004DA8  B23C 0000               8030m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004DAC  6700 0008               8031m         BEQ     COMPLETE_627  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004DB0  5301                    8032m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004DB2  1819                    8033m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004DB4  60CE                    8034m         BRA     LOOP_627      ; BEGIN LOOP AGAIN
00004DB6                          8035m 
00004DB6                          8036m COMPLETE_627:  ; OPCODE HAS BEEN VERIFIED
00004DB6                          8037m         ENDM
00004DB6  43F8 0090               8038          LEA     oAND, A1     
00004DBA  103C 000E               8039          MOVE.B  #14,D0          
00004DBE  4E4F                    8040          TRAP    #15
00004DC0                          8041m         printOpMode     (A2)
00004DC0  3612                    8042m         MOVE.W  (A2), D3      
00004DC2  123C 0008               8043m         MOVE.B  #8, D1    
00004DC6  4246                    8044m         CLR     D6
00004DC8  4247                    8045m         CLR     D7
00004DCA                          8046m CHECKFORDESTDN_628: 
00004DCA  0303                    8047m         BTST    D1, D3      
00004DCC  6600 004C               8048m         BNE     CHECKFORSRCDN_628
00004DD0  4EB9 00004EA8           8049m         JSR     NEXT_628
00004DD6  1C3C 0001               8050m         MOVE.B  #$1, D6
00004DDA  0303                    8051m         BTST    D1, D3      
00004DDC  6700 0014               8052m         BEQ     DESTDNW_628
00004DE0                          8053m DESTDNL_628:        
00004DE0  43F8 00C8               8054m         LEA     OLSIZE, A1     
00004DE4  103C 000E               8055m         MOVE.B  #14,D0          
00004DE8  4E4F                    8056m         TRAP    #15
00004DEA  1E3C 0001               8057m         MOVE.B  #$1, D7
00004DEE  6000 00BC               8058m         BRA     COMPLETE_628 
00004DF2                          8059m DESTDNW_628: 
00004DF2  4EB9 00004EA8           8060m         JSR     NEXT_628
00004DF8  0303                    8061m         BTST    D1, D3      
00004DFA  6700 0010               8062m         BEQ     DESTDNB_628
00004DFE  43F8 00C4               8063m         LEA     OWSIZE, A1     
00004E02  103C 000E               8064m         MOVE.B  #14,D0          
00004E06  4E4F                    8065m         TRAP    #15
00004E08  6000 00A2               8066m         BRA     COMPLETE_628 
00004E0C                          8067m DESTDNB_628: 
00004E0C  43F8 00C0               8068m         LEA     OBSIZE, A1     
00004E10  103C 000E               8069m         MOVE.B  #14,D0          
00004E14  4E4F                    8070m         TRAP    #15
00004E16  6000 0094               8071m         BRA     COMPLETE_628 
00004E1A                          8072m CHECKFORSRCDN_628: 
00004E1A  4EB9 00004EA8           8073m         JSR     NEXT_628
00004E20  0303                    8074m         BTST    D1, D3      
00004E22  6700 002C               8075m         BEQ     SRCDNW_628
00004E26                          8076m SRCDNL_628:        
00004E26  43F8 00C8               8077m         LEA     OLSIZE, A1     
00004E2A  103C 000E               8078m         MOVE.B  #14,D0          
00004E2E  4E4F                    8079m         TRAP    #15
00004E30  1E3C 0001               8080m         MOVE.B  #$1, D7
00004E34                          8081mm         PRINTDNDEST D3
00004E34  3203                    8082mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E36  E949                    8083mm         LSL     #$04, D1
00004E38  E049                    8084mm         LSR     #$08, D1
00004E3A  EA49                    8085mm         LSR     #$05, D1
00004E3C  43F8 00CC               8086mm         LEA     ODN, A1     
00004E40  103C 000E               8087mm         MOVE.B  #14,D0          
00004E44  4E4F                    8088mm         TRAP    #15
00004E46  103C 0003               8089mm         MOVE.B  #3,D0          
00004E4A  4E4F                    8090mm         TRAP    #15
00004E4C                          8091mm         ENDM
00004E4C  6000 005E               8092m         BRA     COMPLETE_628 
00004E50                          8093m SRCDNW_628:
00004E50  4EB9 00004EA8           8094m         JSR     NEXT_628
00004E56  0303                    8095m         BTST    D1, D3     
00004E58  6700 0028               8096m         BEQ     SRCDNB_628
00004E5C  43F8 00C4               8097m         LEA     OWSIZE, A1     
00004E60  103C 000E               8098m         MOVE.B  #14,D0          
00004E64  4E4F                    8099m         TRAP    #15
00004E66                          8100mm         PRINTDNDEST D3
00004E66  3203                    8101mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E68  E949                    8102mm         LSL     #$04, D1
00004E6A  E049                    8103mm         LSR     #$08, D1
00004E6C  EA49                    8104mm         LSR     #$05, D1
00004E6E  43F8 00CC               8105mm         LEA     ODN, A1     
00004E72  103C 000E               8106mm         MOVE.B  #14,D0          
00004E76  4E4F                    8107mm         TRAP    #15
00004E78  103C 0003               8108mm         MOVE.B  #3,D0          
00004E7C  4E4F                    8109mm         TRAP    #15
00004E7E                          8110mm         ENDM
00004E7E  6000 002C               8111m         BRA     COMPLETE_628 
00004E82                          8112m SRCDNB_628: 
00004E82  43F8 00C0               8113m         LEA     OBSIZE, A1     
00004E86  103C 000E               8114m         MOVE.B  #14,D0          
00004E8A  4E4F                    8115m         TRAP    #15
00004E8C                          8116mm         PRINTDNDEST D3
00004E8C  3203                    8117mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E8E  E949                    8118mm         LSL     #$04, D1
00004E90  E049                    8119mm         LSR     #$08, D1
00004E92  EA49                    8120mm         LSR     #$05, D1
00004E94  43F8 00CC               8121mm         LEA     ODN, A1     
00004E98  103C 000E               8122mm         MOVE.B  #14,D0          
00004E9C  4E4F                    8123mm         TRAP    #15
00004E9E  103C 0003               8124mm         MOVE.B  #3,D0          
00004EA2  4E4F                    8125mm         TRAP    #15
00004EA4                          8126mm         ENDM
00004EA4  6000 0006               8127m         BRA     COMPLETE_628 
00004EA8                          8128m 
00004EA8                          8129m NEXT_628:
00004EA8  5301                    8130m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004EAA  4E75                    8131m         RTS                
00004EAC                          8132m 
00004EAC                          8133m COMPLETE_628:  ; OPCODE HAS BEEN VERIFIED
00004EAC                          8134m         ENDM
00004EAC  BC3C 0001               8135          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004EB0  6700 05F8               8136          BEQ     decodeAndDestOp
00004EB4                          8137m         printComma
00004EB4  43F8 00D4               8138m         LEA     OCOMMA, A1     
00004EB8  103C 000E               8139m         MOVE.B  #14,D0          
00004EBC  4E4F                    8140m         TRAP    #15
00004EBE                          8141m         ENDM
00004EBE                          8142m         prepareAdrMode  #$1, (A2)
00004EBE  3C3C 0001               8143m         MOVE.W  #$1, D6      ; INPUT VALUE
00004EC2  3212                    8144m         MOVE.W  (A2), D1
00004EC4  BC3C 0001               8145m         CMP.B   #$01, D6
00004EC8  6700 000C               8146m         BEQ     ADRSOURCE_633    
00004ECC                          8147m ADRDEST_633:
00004ECC  EF49                    8148m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004ECE  E049                    8149m         LSR     #$08, D1
00004ED0  EA49                    8150m         LSR     #$05, D1
00004ED2  6000 000A               8151m         BRA     COMPLETE_633 
00004ED6                          8152m ADRSOURCE_633:                
00004ED6  E149                    8153m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004ED8  E549                    8154m         LSL     #$02, D1
00004EDA  E049                    8155m         LSR     #$08, D1
00004EDC  EA49                    8156m         LSR     #$05, D1
00004EDE                          8157m COMPLETE_633:  ; OPCODE HAS BEEN VERIFIED
00004EDE                          8158m         ENDM        
00004EDE                          8159m         decodeAdrMode   (A2), D1
00004EDE  3612                    8160m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004EE0  3201                    8161m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004EE2                          8162m 
00004EE2  B23C 0001               8163m         CMP.B   #$01, D1
00004EE6  6700 0066               8164m         BEQ     ADRREGDIRECT_634    
00004EEA  B23C 0002               8165m         CMP.B   #$02, D1
00004EEE  6700 00A0               8166m         BEQ     ADRREGINDIRECT_634  
00004EF2  B23C 0003               8167m         CMP.B   #$03, D1
00004EF6  6700 0102               8168m         BEQ     ADRREGPOSTINC_634  
00004EFA  B23C 0004               8169m         CMP.B   #$04, D1
00004EFE  6700 0178               8170m         BEQ     ADRREGPREDEC_634
00004F02  B23C 0007               8171m         CMP.B   #$07, D1
00004F06  6700 01EE               8172m         BEQ     ADRABSOLUTE_634    
00004F0A                          8173m         
00004F0A                          8174m DATAREGDIRECT_634: 
00004F0A  BC3C 0001               8175m         CMP.B   #$01, D6
00004F0E  6700 001E               8176m         BEQ     DATAREGDIRECTSRC_634   
00004F12                          8177m DATAREGDIRECTDEST_634: 
00004F12                          8178mm         PRINTDNDEST D3 
00004F12  3203                    8179mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004F14  E949                    8180mm         LSL     #$04, D1
00004F16  E049                    8181mm         LSR     #$08, D1
00004F18  EA49                    8182mm         LSR     #$05, D1
00004F1A  43F8 00CC               8183mm         LEA     ODN, A1     
00004F1E  103C 000E               8184mm         MOVE.B  #14,D0          
00004F22  4E4F                    8185mm         TRAP    #15
00004F24  103C 0003               8186mm         MOVE.B  #3,D0          
00004F28  4E4F                    8187mm         TRAP    #15
00004F2A                          8188mm         ENDM
00004F2A  6000 057A               8189m         BRA     COMPLETE_634 
00004F2E                          8190m DATAREGDIRECTSRC_634: 
00004F2E                          8191mm         PRINTDNSRC D3 
00004F2E  4281                    8192mm         CLR.L   D1
00004F30  3203                    8193mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F32  E149                    8194mm         LSL     #$08, D1
00004F34  EB49                    8195mm         LSL     #$05, D1
00004F36  E049                    8196mm         LSR     #$08, D1
00004F38  EA49                    8197mm         LSR     #$05, D1
00004F3A  43F8 00CC               8198mm         LEA     ODN, A1     
00004F3E  103C 000E               8199mm         MOVE.B  #14,D0          
00004F42  4E4F                    8200mm         TRAP    #15
00004F44  103C 0003               8201mm         MOVE.B  #3,D0          
00004F48  4E4F                    8202mm         TRAP    #15
00004F4A                          8203mm         ENDM
00004F4A  6000 055A               8204m         BRA     COMPLETE_634   
00004F4E                          8205m         
00004F4E                          8206m ADRREGDIRECT_634: 
00004F4E  BC3C 0001               8207m         CMP.B   #$01, D6
00004F52  6700 001E               8208m         BEQ     ADRREGDIRECTSRC_634   
00004F56                          8209m ADRREGDIRECTDEST_634:
00004F56                          8210mm         PRINTANDEST D3
00004F56  3203                    8211mm         MOVE.W  D3, D1
00004F58  E949                    8212mm         LSL     #$04, D1
00004F5A  E049                    8213mm         LSR     #$08, D1
00004F5C  EA49                    8214mm         LSR     #$05, D1
00004F5E  43F8 00CE               8215mm         LEA     OAN, A1     
00004F62  103C 000E               8216mm         MOVE.B  #14,D0          
00004F66  4E4F                    8217mm         TRAP    #15
00004F68  103C 0003               8218mm         MOVE.B  #3,D0          
00004F6C  4E4F                    8219mm         TRAP    #15
00004F6E                          8220mm         ENDM
00004F6E  6000 0536               8221m         BRA     COMPLETE_634   
00004F72                          8222m ADRREGDIRECTSRC_634:
00004F72                          8223mm         PRINTANSRC D3
00004F72  3203                    8224mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F74  E149                    8225mm         LSL     #$08, D1
00004F76  EB49                    8226mm         LSL     #$05, D1
00004F78  E049                    8227mm         LSR     #$08, D1
00004F7A  EA49                    8228mm         LSR     #$05, D1
00004F7C  43F8 00CE               8229mm         LEA     OAN, A1     
00004F80  103C 000E               8230mm         MOVE.B  #14,D0          
00004F84  4E4F                    8231mm         TRAP    #15
00004F86  103C 0003               8232mm         MOVE.B  #3,D0          
00004F8A  4E4F                    8233mm         TRAP    #15
00004F8C                          8234mm         ENDM
00004F8C  6000 0518               8235m         BRA     COMPLETE_634   
00004F90                          8236m        
00004F90                          8237m ADRREGINDIRECT_634:   
00004F90  BC3C 0001               8238m         CMP.B   #$01, D6
00004F94  6700 0032               8239m         BEQ     ADRREGINDIRECTSRC_634   
00004F98                          8240m ADRREGINDIRECTDEST_634:
00004F98                          8241mm         PRINTLB
00004F98  43F8 00D0               8242mm         LEA     OLB, A1     
00004F9C  103C 000E               8243mm         MOVE.B  #14,D0          
00004FA0  4E4F                    8244mm         TRAP    #15
00004FA2                          8245mm         ENDM
00004FA2                          8246mm         PRINTANDEST D3  
00004FA2  3203                    8247mm         MOVE.W  D3, D1
00004FA4  E949                    8248mm         LSL     #$04, D1
00004FA6  E049                    8249mm         LSR     #$08, D1
00004FA8  EA49                    8250mm         LSR     #$05, D1
00004FAA  43F8 00CE               8251mm         LEA     OAN, A1     
00004FAE  103C 000E               8252mm         MOVE.B  #14,D0          
00004FB2  4E4F                    8253mm         TRAP    #15
00004FB4  103C 0003               8254mm         MOVE.B  #3,D0          
00004FB8  4E4F                    8255mm         TRAP    #15
00004FBA                          8256mm         ENDM
00004FBA                          8257mm         PRINTRB
00004FBA  43F8 00D2               8258mm         LEA     ORB, A1     
00004FBE  103C 000E               8259mm         MOVE.B  #14,D0          
00004FC2  4E4F                    8260mm         TRAP    #15
00004FC4                          8261mm         ENDM
00004FC4  6000 04E0               8262m         BRA     COMPLETE_634     
00004FC8                          8263m ADRREGINDIRECTSRC_634:   
00004FC8                          8264mm         PRINTLB
00004FC8  43F8 00D0               8265mm         LEA     OLB, A1     
00004FCC  103C 000E               8266mm         MOVE.B  #14,D0          
00004FD0  4E4F                    8267mm         TRAP    #15
00004FD2                          8268mm         ENDM
00004FD2                          8269mm         PRINTANSRC D3  
00004FD2  3203                    8270mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FD4  E149                    8271mm         LSL     #$08, D1
00004FD6  EB49                    8272mm         LSL     #$05, D1
00004FD8  E049                    8273mm         LSR     #$08, D1
00004FDA  EA49                    8274mm         LSR     #$05, D1
00004FDC  43F8 00CE               8275mm         LEA     OAN, A1     
00004FE0  103C 000E               8276mm         MOVE.B  #14,D0          
00004FE4  4E4F                    8277mm         TRAP    #15
00004FE6  103C 0003               8278mm         MOVE.B  #3,D0          
00004FEA  4E4F                    8279mm         TRAP    #15
00004FEC                          8280mm         ENDM
00004FEC                          8281mm         PRINTRB
00004FEC  43F8 00D2               8282mm         LEA     ORB, A1     
00004FF0  103C 000E               8283mm         MOVE.B  #14,D0          
00004FF4  4E4F                    8284mm         TRAP    #15
00004FF6                          8285mm         ENDM
00004FF6  6000 04AE               8286m         BRA     COMPLETE_634   
00004FFA                          8287m         
00004FFA                          8288m ADRREGPOSTINC_634:   
00004FFA  BC3C 0001               8289m         CMP.B   #$01, D6
00004FFE  6700 003C               8290m         BEQ     ADRREGPOSTINCSRC_634   
00005002                          8291m ADRREGPOSTINCDEST_634: 
00005002                          8292mm         PRINTLB
00005002  43F8 00D0               8293mm         LEA     OLB, A1     
00005006  103C 000E               8294mm         MOVE.B  #14,D0          
0000500A  4E4F                    8295mm         TRAP    #15
0000500C                          8296mm         ENDM
0000500C                          8297mm         PRINTANDEST D3  
0000500C  3203                    8298mm         MOVE.W  D3, D1
0000500E  E949                    8299mm         LSL     #$04, D1
00005010  E049                    8300mm         LSR     #$08, D1
00005012  EA49                    8301mm         LSR     #$05, D1
00005014  43F8 00CE               8302mm         LEA     OAN, A1     
00005018  103C 000E               8303mm         MOVE.B  #14,D0          
0000501C  4E4F                    8304mm         TRAP    #15
0000501E  103C 0003               8305mm         MOVE.B  #3,D0          
00005022  4E4F                    8306mm         TRAP    #15
00005024                          8307mm         ENDM
00005024                          8308mm         PRINTRB
00005024  43F8 00D2               8309mm         LEA     ORB, A1     
00005028  103C 000E               8310mm         MOVE.B  #14,D0          
0000502C  4E4F                    8311mm         TRAP    #15
0000502E                          8312mm         ENDM
0000502E                          8313mm         PRINTPI
0000502E  43F8 00D9               8314mm         LEA     OPSTINC, A1     
00005032  103C 000E               8315mm         MOVE.B  #14,D0          
00005036  4E4F                    8316mm         TRAP    #15
00005038                          8317mm         ENDM
00005038  6000 046C               8318m         BRA     COMPLETE_634  
0000503C                          8319m ADRREGPOSTINCSRC_634:           
0000503C                          8320mm         PRINTLB
0000503C  43F8 00D0               8321mm         LEA     OLB, A1     
00005040  103C 000E               8322mm         MOVE.B  #14,D0          
00005044  4E4F                    8323mm         TRAP    #15
00005046                          8324mm         ENDM
00005046                          8325mm         PRINTANSRC D3  
00005046  3203                    8326mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005048  E149                    8327mm         LSL     #$08, D1
0000504A  EB49                    8328mm         LSL     #$05, D1
0000504C  E049                    8329mm         LSR     #$08, D1
0000504E  EA49                    8330mm         LSR     #$05, D1
00005050  43F8 00CE               8331mm         LEA     OAN, A1     
00005054  103C 000E               8332mm         MOVE.B  #14,D0          
00005058  4E4F                    8333mm         TRAP    #15
0000505A  103C 0003               8334mm         MOVE.B  #3,D0          
0000505E  4E4F                    8335mm         TRAP    #15
00005060                          8336mm         ENDM
00005060                          8337mm         PRINTRB
00005060  43F8 00D2               8338mm         LEA     ORB, A1     
00005064  103C 000E               8339mm         MOVE.B  #14,D0          
00005068  4E4F                    8340mm         TRAP    #15
0000506A                          8341mm         ENDM
0000506A                          8342mm         PRINTPI
0000506A  43F8 00D9               8343mm         LEA     OPSTINC, A1     
0000506E  103C 000E               8344mm         MOVE.B  #14,D0          
00005072  4E4F                    8345mm         TRAP    #15
00005074                          8346mm         ENDM
00005074  6000 0430               8347m         BRA     COMPLETE_634  
00005078                          8348m ADRREGPREDEC_634: 
00005078  BC3C 0001               8349m         CMP.B   #$01, D6
0000507C  6700 003C               8350m         BEQ     ADRREGPREDECSRC_634   
00005080                          8351m ADRREGPREDECDEST_634:
00005080                          8352mm         PRINTPD  
00005080  43F8 00D7               8353mm         LEA     OPREDEC, A1     
00005084  103C 000E               8354mm         MOVE.B  #14,D0          
00005088  4E4F                    8355mm         TRAP    #15
0000508A                          8356mm         ENDM
0000508A                          8357mm         PRINTLB
0000508A  43F8 00D0               8358mm         LEA     OLB, A1     
0000508E  103C 000E               8359mm         MOVE.B  #14,D0          
00005092  4E4F                    8360mm         TRAP    #15
00005094                          8361mm         ENDM
00005094                          8362mm         PRINTANDEST D3  
00005094  3203                    8363mm         MOVE.W  D3, D1
00005096  E949                    8364mm         LSL     #$04, D1
00005098  E049                    8365mm         LSR     #$08, D1
0000509A  EA49                    8366mm         LSR     #$05, D1
0000509C  43F8 00CE               8367mm         LEA     OAN, A1     
000050A0  103C 000E               8368mm         MOVE.B  #14,D0          
000050A4  4E4F                    8369mm         TRAP    #15
000050A6  103C 0003               8370mm         MOVE.B  #3,D0          
000050AA  4E4F                    8371mm         TRAP    #15
000050AC                          8372mm         ENDM
000050AC                          8373mm         PRINTRB
000050AC  43F8 00D2               8374mm         LEA     ORB, A1     
000050B0  103C 000E               8375mm         MOVE.B  #14,D0          
000050B4  4E4F                    8376mm         TRAP    #15
000050B6                          8377mm         ENDM
000050B6  6000 03EE               8378m         BRA     COMPLETE_634   
000050BA                          8379m ADRREGPREDECSRC_634: 
000050BA                          8380mm         PRINTPD  
000050BA  43F8 00D7               8381mm         LEA     OPREDEC, A1     
000050BE  103C 000E               8382mm         MOVE.B  #14,D0          
000050C2  4E4F                    8383mm         TRAP    #15
000050C4                          8384mm         ENDM
000050C4                          8385mm         PRINTLB
000050C4  43F8 00D0               8386mm         LEA     OLB, A1     
000050C8  103C 000E               8387mm         MOVE.B  #14,D0          
000050CC  4E4F                    8388mm         TRAP    #15
000050CE                          8389mm         ENDM
000050CE                          8390mm         PRINTANSRC D3  
000050CE  3203                    8391mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000050D0  E149                    8392mm         LSL     #$08, D1
000050D2  EB49                    8393mm         LSL     #$05, D1
000050D4  E049                    8394mm         LSR     #$08, D1
000050D6  EA49                    8395mm         LSR     #$05, D1
000050D8  43F8 00CE               8396mm         LEA     OAN, A1     
000050DC  103C 000E               8397mm         MOVE.B  #14,D0          
000050E0  4E4F                    8398mm         TRAP    #15
000050E2  103C 0003               8399mm         MOVE.B  #3,D0          
000050E6  4E4F                    8400mm         TRAP    #15
000050E8                          8401mm         ENDM
000050E8                          8402mm         PRINTRB
000050E8  43F8 00D2               8403mm         LEA     ORB, A1     
000050EC  103C 000E               8404mm         MOVE.B  #14,D0          
000050F0  4E4F                    8405mm         TRAP    #15
000050F2                          8406mm         ENDM
000050F2  6000 03B2               8407m         BRA     COMPLETE_634
000050F6                          8408m        
000050F6                          8409m ADRABSOLUTE_634:
000050F6  BC3C 0001               8410m         CMP.B   #$01, D6
000050FA  6600 0018               8411m         BNE     ADRABSOLUTEDST_634 
000050FE                          8412m         
000050FE  3A03                    8413m         MOVE.W  D3, D5
00005100  0803 0002               8414m         BTST    #2, D3
00005104  6600 0024               8415m         BNE     ADRIMMEDIATE_634
00005108  0803 0000               8416m         BTST    #0, D3
0000510C  6600 0280               8417m         BNE     ADRABSOLUTEL_634
00005110  6000 01E6               8418m         BRA     ADRABSOLUTEW_634
00005114                          8419m ADRABSOLUTEDST_634:
00005114  3A03                    8420m         MOVE.W  D3, D5
00005116  0803 000B               8421m         BTST    #$B, D3
0000511A  6600 000E               8422m         BNE     ADRIMMEDIATE_634
0000511E  0803 0009               8423m         BTST    #$09, D3
00005122  6600 026A               8424m         BNE     ADRABSOLUTEL_634
00005126  6000 01D0               8425m         BRA     ADRABSOLUTEW_634
0000512A                          8426m ADRIMMEDIATE_634:
0000512A  BE3C 0001               8427m         CMP.B   #1, D7
0000512E  6700 00A2               8428m         BEQ     ADRIMMEDIATEL_634
00005132                          8429m ADRIMMEDIATEW_634:
00005132  361A                    8430m         MOVE.W  (A2)+, D3
00005134                          8431mm         PRINTHASH
00005134  103C 0006               8432mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005138  323C 0023               8433mm         MOVE.W  #35, D1     ; AN = SIGN
0000513C  4E4F                    8434mm         TRAP    #15         ; OUTPUT = SIGN
0000513E                          8435mm         ENDM
0000513E                          8436mm         PRINTSIGN
0000513E  103C 0006               8437mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005142  323C 0024               8438mm         MOVE.W  #36, D1     ; AN = SIGN
00005146  4E4F                    8439mm         TRAP    #15         ; OUTPUT = SIGN
00005148                          8440mm         ENDM
00005148                          8441mm         ADROUT
00005148  103C 0006               8442mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000514C  3212                    8443mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000514E  E049                    8444mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005150  E849                    8445mm         LSR.W   #4, D1      
00005152                          8446mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005152  0C01 0009               8447mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005156  6E00 000A               8448mmm         BGT     ALPHA_664
0000515A  0601 0030               8449mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000515E  6000 0006               8450mmm         BRA     DONE_664
00005162  0601 0037               8451mmm ALPHA_664: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005166  4E71                    8452mmm DONE_664: NOP
00005168                          8453mmm         ENDM
00005168  4E4F                    8454mm         TRAP    #15         ; EXECUTE OUTPUT
0000516A                          8455mm         
0000516A  3212                    8456mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000516C  E949                    8457mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000516E  E049                    8458mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005170  E849                    8459mm         LSR.W   #4, D1      
00005172                          8460mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005172  0C01 0009               8461mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005176  6E00 000A               8462mmm         BGT     ALPHA_665
0000517A  0601 0030               8463mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000517E  6000 0006               8464mmm         BRA     DONE_665
00005182  0601 0037               8465mmm ALPHA_665: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005186  4E71                    8466mmm DONE_665: NOP
00005188                          8467mmm         ENDM
00005188  4E4F                    8468mm         TRAP    #15         ; EXECUTE OUTPUT
0000518A                          8469mm         
0000518A  3212                    8470mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000518C  E149                    8471mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000518E  E049                    8472mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005190  E849                    8473mm         LSR.W   #4, D1      
00005192                          8474mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005192  0C01 0009               8475mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005196  6E00 000A               8476mmm         BGT     ALPHA_666
0000519A  0601 0030               8477mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000519E  6000 0006               8478mmm         BRA     DONE_666
000051A2  0601 0037               8479mmm ALPHA_666: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051A6  4E71                    8480mmm DONE_666: NOP
000051A8                          8481mmm         ENDM
000051A8  4E4F                    8482mm         TRAP    #15         ; EXECUTE OUTPUT
000051AA                          8483mm         
000051AA  3212                    8484mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051AC  E149                    8485mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051AE  E949                    8486mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000051B0  E049                    8487mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051B2  E849                    8488mm         LSR.W   #4, D1      
000051B4                          8489mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051B4  0C01 0009               8490mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051B8  6E00 000A               8491mmm         BGT     ALPHA_667
000051BC  0601 0030               8492mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051C0  6000 0006               8493mmm         BRA     DONE_667
000051C4  0601 0037               8494mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051C8  4E71                    8495mmm DONE_667: NOP
000051CA                          8496mmm         ENDM
000051CA  4E4F                    8497mm         TRAP    #15         ; EXECUTE OUTPUT       
000051CC                          8498mm         ENDM 
000051CC  3605                    8499m         MOVE.W  D5, D3
000051CE  6000 02D6               8500m         BRA     COMPLETE_634
000051D2                          8501m ADRIMMEDIATEL_634:
000051D2  361A                    8502m         MOVE.W  (A2)+, D3
000051D4                          8503mm         PRINTHASH
000051D4  103C 0006               8504mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051D8  323C 0023               8505mm         MOVE.W  #35, D1     ; AN = SIGN
000051DC  4E4F                    8506mm         TRAP    #15         ; OUTPUT = SIGN
000051DE                          8507mm         ENDM
000051DE                          8508mm         PRINTSIGN
000051DE  103C 0006               8509mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051E2  323C 0024               8510mm         MOVE.W  #36, D1     ; AN = SIGN
000051E6  4E4F                    8511mm         TRAP    #15         ; OUTPUT = SIGN
000051E8                          8512mm         ENDM
000051E8                          8513mm         ADROUT 
000051E8  103C 0006               8514mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051EC  3212                    8515mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051EE  E049                    8516mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051F0  E849                    8517mm         LSR.W   #4, D1      
000051F2                          8518mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051F2  0C01 0009               8519mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F6  6E00 000A               8520mmm         BGT     ALPHA_671
000051FA  0601 0030               8521mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051FE  6000 0006               8522mmm         BRA     DONE_671
00005202  0601 0037               8523mmm ALPHA_671: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005206  4E71                    8524mmm DONE_671: NOP
00005208                          8525mmm         ENDM
00005208  4E4F                    8526mm         TRAP    #15         ; EXECUTE OUTPUT
0000520A                          8527mm         
0000520A  3212                    8528mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000520C  E949                    8529mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000520E  E049                    8530mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005210  E849                    8531mm         LSR.W   #4, D1      
00005212                          8532mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005212  0C01 0009               8533mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005216  6E00 000A               8534mmm         BGT     ALPHA_672
0000521A  0601 0030               8535mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000521E  6000 0006               8536mmm         BRA     DONE_672
00005222  0601 0037               8537mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005226  4E71                    8538mmm DONE_672: NOP
00005228                          8539mmm         ENDM
00005228  4E4F                    8540mm         TRAP    #15         ; EXECUTE OUTPUT
0000522A                          8541mm         
0000522A  3212                    8542mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000522C  E149                    8543mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000522E  E049                    8544mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005230  E849                    8545mm         LSR.W   #4, D1      
00005232                          8546mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005232  0C01 0009               8547mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005236  6E00 000A               8548mmm         BGT     ALPHA_673
0000523A  0601 0030               8549mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000523E  6000 0006               8550mmm         BRA     DONE_673
00005242  0601 0037               8551mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005246  4E71                    8552mmm DONE_673: NOP
00005248                          8553mmm         ENDM
00005248  4E4F                    8554mm         TRAP    #15         ; EXECUTE OUTPUT
0000524A                          8555mm         
0000524A  3212                    8556mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000524C  E149                    8557mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000524E  E949                    8558mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005250  E049                    8559mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005252  E849                    8560mm         LSR.W   #4, D1      
00005254                          8561mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005254  0C01 0009               8562mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005258  6E00 000A               8563mmm         BGT     ALPHA_674
0000525C  0601 0030               8564mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005260  6000 0006               8565mmm         BRA     DONE_674
00005264  0601 0037               8566mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005268  4E71                    8567mmm DONE_674: NOP
0000526A                          8568mmm         ENDM
0000526A  4E4F                    8569mm         TRAP    #15         ; EXECUTE OUTPUT       
0000526C                          8570mm         ENDM 
0000526C  361A                    8571m         MOVE.W  (A2)+, D3
0000526E                          8572mm         ADROUT
0000526E  103C 0006               8573mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005272  3212                    8574mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005274  E049                    8575mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005276  E849                    8576mm         LSR.W   #4, D1      
00005278                          8577mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005278  0C01 0009               8578mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000527C  6E00 000A               8579mmm         BGT     ALPHA_676
00005280  0601 0030               8580mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005284  6000 0006               8581mmm         BRA     DONE_676
00005288  0601 0037               8582mmm ALPHA_676: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000528C  4E71                    8583mmm DONE_676: NOP
0000528E                          8584mmm         ENDM
0000528E  4E4F                    8585mm         TRAP    #15         ; EXECUTE OUTPUT
00005290                          8586mm         
00005290  3212                    8587mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005292  E949                    8588mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005294  E049                    8589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005296  E849                    8590mm         LSR.W   #4, D1      
00005298                          8591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005298  0C01 0009               8592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000529C  6E00 000A               8593mmm         BGT     ALPHA_677
000052A0  0601 0030               8594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052A4  6000 0006               8595mmm         BRA     DONE_677
000052A8  0601 0037               8596mmm ALPHA_677: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052AC  4E71                    8597mmm DONE_677: NOP
000052AE                          8598mmm         ENDM
000052AE  4E4F                    8599mm         TRAP    #15         ; EXECUTE OUTPUT
000052B0                          8600mm         
000052B0  3212                    8601mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052B2  E149                    8602mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052B4  E049                    8603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052B6  E849                    8604mm         LSR.W   #4, D1      
000052B8                          8605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052B8  0C01 0009               8606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052BC  6E00 000A               8607mmm         BGT     ALPHA_678
000052C0  0601 0030               8608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052C4  6000 0006               8609mmm         BRA     DONE_678
000052C8  0601 0037               8610mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052CC  4E71                    8611mmm DONE_678: NOP
000052CE                          8612mmm         ENDM
000052CE  4E4F                    8613mm         TRAP    #15         ; EXECUTE OUTPUT
000052D0                          8614mm         
000052D0  3212                    8615mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052D2  E149                    8616mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052D4  E949                    8617mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052D6  E049                    8618mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052D8  E849                    8619mm         LSR.W   #4, D1      
000052DA                          8620mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052DA  0C01 0009               8621mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052DE  6E00 000A               8622mmm         BGT     ALPHA_679
000052E2  0601 0030               8623mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052E6  6000 0006               8624mmm         BRA     DONE_679
000052EA  0601 0037               8625mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052EE  4E71                    8626mmm DONE_679: NOP
000052F0                          8627mmm         ENDM
000052F0  4E4F                    8628mm         TRAP    #15         ; EXECUTE OUTPUT       
000052F2                          8629mm         ENDM 
000052F2  3605                    8630m         MOVE.W  D5, D3
000052F4  6000 01B0               8631m         BRA     COMPLETE_634 
000052F8                          8632m ADRABSOLUTEW_634:     
000052F8  361A                    8633m         MOVE.W  (A2)+, D3
000052FA                          8634mm         PRINTSIGN
000052FA  103C 0006               8635mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000052FE  323C 0024               8636mm         MOVE.W  #36, D1     ; AN = SIGN
00005302  4E4F                    8637mm         TRAP    #15         ; OUTPUT = SIGN
00005304                          8638mm         ENDM
00005304                          8639mm         ADROUT
00005304  103C 0006               8640mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005308  3212                    8641mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000530A  E049                    8642mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000530C  E849                    8643mm         LSR.W   #4, D1      
0000530E                          8644mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000530E  0C01 0009               8645mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005312  6E00 000A               8646mmm         BGT     ALPHA_682
00005316  0601 0030               8647mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000531A  6000 0006               8648mmm         BRA     DONE_682
0000531E  0601 0037               8649mmm ALPHA_682: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005322  4E71                    8650mmm DONE_682: NOP
00005324                          8651mmm         ENDM
00005324  4E4F                    8652mm         TRAP    #15         ; EXECUTE OUTPUT
00005326                          8653mm         
00005326  3212                    8654mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005328  E949                    8655mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000532A  E049                    8656mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000532C  E849                    8657mm         LSR.W   #4, D1      
0000532E                          8658mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000532E  0C01 0009               8659mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005332  6E00 000A               8660mmm         BGT     ALPHA_683
00005336  0601 0030               8661mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000533A  6000 0006               8662mmm         BRA     DONE_683
0000533E  0601 0037               8663mmm ALPHA_683: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005342  4E71                    8664mmm DONE_683: NOP
00005344                          8665mmm         ENDM
00005344  4E4F                    8666mm         TRAP    #15         ; EXECUTE OUTPUT
00005346                          8667mm         
00005346  3212                    8668mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005348  E149                    8669mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000534A  E049                    8670mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000534C  E849                    8671mm         LSR.W   #4, D1      
0000534E                          8672mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000534E  0C01 0009               8673mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005352  6E00 000A               8674mmm         BGT     ALPHA_684
00005356  0601 0030               8675mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000535A  6000 0006               8676mmm         BRA     DONE_684
0000535E  0601 0037               8677mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005362  4E71                    8678mmm DONE_684: NOP
00005364                          8679mmm         ENDM
00005364  4E4F                    8680mm         TRAP    #15         ; EXECUTE OUTPUT
00005366                          8681mm         
00005366  3212                    8682mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005368  E149                    8683mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000536A  E949                    8684mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000536C  E049                    8685mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000536E  E849                    8686mm         LSR.W   #4, D1      
00005370                          8687mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005370  0C01 0009               8688mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005374  6E00 000A               8689mmm         BGT     ALPHA_685
00005378  0601 0030               8690mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000537C  6000 0006               8691mmm         BRA     DONE_685
00005380  0601 0037               8692mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005384  4E71                    8693mmm DONE_685: NOP
00005386                          8694mmm         ENDM
00005386  4E4F                    8695mm         TRAP    #15         ; EXECUTE OUTPUT       
00005388                          8696mm         ENDM 
00005388  3605                    8697m         MOVE.W  D5, D3
0000538A  6000 011A               8698m         BRA     COMPLETE_634  
0000538E                          8699m ADRABSOLUTEL_634:  
0000538E  361A                    8700m         MOVE.W  (A2)+, D3
00005390                          8701mm         PRINTSIGN
00005390  103C 0006               8702mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005394  323C 0024               8703mm         MOVE.W  #36, D1     ; AN = SIGN
00005398  4E4F                    8704mm         TRAP    #15         ; OUTPUT = SIGN
0000539A                          8705mm         ENDM
0000539A                          8706mm         ADROUT 
0000539A  103C 0006               8707mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000539E  3212                    8708mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053A0  E049                    8709mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053A2  E849                    8710mm         LSR.W   #4, D1      
000053A4                          8711mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053A4  0C01 0009               8712mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053A8  6E00 000A               8713mmm         BGT     ALPHA_688
000053AC  0601 0030               8714mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053B0  6000 0006               8715mmm         BRA     DONE_688
000053B4  0601 0037               8716mmm ALPHA_688: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053B8  4E71                    8717mmm DONE_688: NOP
000053BA                          8718mmm         ENDM
000053BA  4E4F                    8719mm         TRAP    #15         ; EXECUTE OUTPUT
000053BC                          8720mm         
000053BC  3212                    8721mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053BE  E949                    8722mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000053C0  E049                    8723mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053C2  E849                    8724mm         LSR.W   #4, D1      
000053C4                          8725mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053C4  0C01 0009               8726mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053C8  6E00 000A               8727mmm         BGT     ALPHA_689
000053CC  0601 0030               8728mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053D0  6000 0006               8729mmm         BRA     DONE_689
000053D4  0601 0037               8730mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053D8  4E71                    8731mmm DONE_689: NOP
000053DA                          8732mmm         ENDM
000053DA  4E4F                    8733mm         TRAP    #15         ; EXECUTE OUTPUT
000053DC                          8734mm         
000053DC  3212                    8735mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053DE  E149                    8736mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000053E0  E049                    8737mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000053E2  E849                    8738mm         LSR.W   #4, D1      
000053E4                          8739mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000053E4  0C01 0009               8740mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000053E8  6E00 000A               8741mmm         BGT     ALPHA_690
000053EC  0601 0030               8742mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000053F0  6000 0006               8743mmm         BRA     DONE_690
000053F4  0601 0037               8744mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053F8  4E71                    8745mmm DONE_690: NOP
000053FA                          8746mmm         ENDM
000053FA  4E4F                    8747mm         TRAP    #15         ; EXECUTE OUTPUT
000053FC                          8748mm         
000053FC  3212                    8749mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000053FE  E149                    8750mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005400  E949                    8751mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005402  E049                    8752mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005404  E849                    8753mm         LSR.W   #4, D1      
00005406                          8754mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005406  0C01 0009               8755mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000540A  6E00 000A               8756mmm         BGT     ALPHA_691
0000540E  0601 0030               8757mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005412  6000 0006               8758mmm         BRA     DONE_691
00005416  0601 0037               8759mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000541A  4E71                    8760mmm DONE_691: NOP
0000541C                          8761mmm         ENDM
0000541C  4E4F                    8762mm         TRAP    #15         ; EXECUTE OUTPUT       
0000541E                          8763mm         ENDM 
0000541E  361A                    8764m         MOVE.W  (A2)+, D3
00005420                          8765mm         ADROUT
00005420  103C 0006               8766mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005424  3212                    8767mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005426  E049                    8768mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005428  E849                    8769mm         LSR.W   #4, D1      
0000542A                          8770mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000542A  0C01 0009               8771mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000542E  6E00 000A               8772mmm         BGT     ALPHA_693
00005432  0601 0030               8773mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005436  6000 0006               8774mmm         BRA     DONE_693
0000543A  0601 0037               8775mmm ALPHA_693: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000543E  4E71                    8776mmm DONE_693: NOP
00005440                          8777mmm         ENDM
00005440  4E4F                    8778mm         TRAP    #15         ; EXECUTE OUTPUT
00005442                          8779mm         
00005442  3212                    8780mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005444  E949                    8781mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005446  E049                    8782mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005448  E849                    8783mm         LSR.W   #4, D1      
0000544A                          8784mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000544A  0C01 0009               8785mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000544E  6E00 000A               8786mmm         BGT     ALPHA_694
00005452  0601 0030               8787mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005456  6000 0006               8788mmm         BRA     DONE_694
0000545A  0601 0037               8789mmm ALPHA_694: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000545E  4E71                    8790mmm DONE_694: NOP
00005460                          8791mmm         ENDM
00005460  4E4F                    8792mm         TRAP    #15         ; EXECUTE OUTPUT
00005462                          8793mm         
00005462  3212                    8794mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005464  E149                    8795mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005466  E049                    8796mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005468  E849                    8797mm         LSR.W   #4, D1      
0000546A                          8798mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000546A  0C01 0009               8799mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000546E  6E00 000A               8800mmm         BGT     ALPHA_695
00005472  0601 0030               8801mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005476  6000 0006               8802mmm         BRA     DONE_695
0000547A  0601 0037               8803mmm ALPHA_695: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000547E  4E71                    8804mmm DONE_695: NOP
00005480                          8805mmm         ENDM
00005480  4E4F                    8806mm         TRAP    #15         ; EXECUTE OUTPUT
00005482                          8807mm         
00005482  3212                    8808mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005484  E149                    8809mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005486  E949                    8810mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005488  E049                    8811mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000548A  E849                    8812mm         LSR.W   #4, D1      
0000548C                          8813mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000548C  0C01 0009               8814mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005490  6E00 000A               8815mmm         BGT     ALPHA_696
00005494  0601 0030               8816mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005498  6000 0006               8817mmm         BRA     DONE_696
0000549C  0601 0037               8818mmm ALPHA_696: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000054A0  4E71                    8819mmm DONE_696: NOP
000054A2                          8820mmm         ENDM
000054A2  4E4F                    8821mm         TRAP    #15         ; EXECUTE OUTPUT       
000054A4                          8822mm         ENDM 
000054A4  3605                    8823m         MOVE.W  D5, D3
000054A6                          8824m 
000054A6                          8825m COMPLETE_634:  ; OPCODE HAS BEEN VERIFIED
000054A6                          8826m         ENDM
000054A6  6000 060C               8827          BRA     decodeANDcomp
000054AA                          8828  decodeAndDestOp:
000054AA                          8829m         prepareAdrMode  #$1,(A2)
000054AA  3C3C 0001               8830m         MOVE.W  #$1, D6      ; INPUT VALUE
000054AE  3212                    8831m         MOVE.W  (A2), D1
000054B0  BC3C 0001               8832m         CMP.B   #$01, D6
000054B4  6700 000C               8833m         BEQ     ADRSOURCE_697    
000054B8                          8834m ADRDEST_697:
000054B8  EF49                    8835m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000054BA  E049                    8836m         LSR     #$08, D1
000054BC  EA49                    8837m         LSR     #$05, D1
000054BE  6000 000A               8838m         BRA     COMPLETE_697 
000054C2                          8839m ADRSOURCE_697:                
000054C2  E149                    8840m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000054C4  E549                    8841m         LSL     #$02, D1
000054C6  E049                    8842m         LSR     #$08, D1
000054C8  EA49                    8843m         LSR     #$05, D1
000054CA                          8844m COMPLETE_697:  ; OPCODE HAS BEEN VERIFIED
000054CA                          8845m         ENDM        
000054CA                          8846m         decodeAdrMode   (A2), D1
000054CA  3612                    8847m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000054CC  3201                    8848m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000054CE                          8849m 
000054CE  B23C 0001               8850m         CMP.B   #$01, D1
000054D2  6700 0066               8851m         BEQ     ADRREGDIRECT_698    
000054D6  B23C 0002               8852m         CMP.B   #$02, D1
000054DA  6700 00A0               8853m         BEQ     ADRREGINDIRECT_698  
000054DE  B23C 0003               8854m         CMP.B   #$03, D1
000054E2  6700 0102               8855m         BEQ     ADRREGPOSTINC_698  
000054E6  B23C 0004               8856m         CMP.B   #$04, D1
000054EA  6700 0178               8857m         BEQ     ADRREGPREDEC_698
000054EE  B23C 0007               8858m         CMP.B   #$07, D1
000054F2  6700 01EE               8859m         BEQ     ADRABSOLUTE_698    
000054F6                          8860m         
000054F6                          8861m DATAREGDIRECT_698: 
000054F6  BC3C 0001               8862m         CMP.B   #$01, D6
000054FA  6700 001E               8863m         BEQ     DATAREGDIRECTSRC_698   
000054FE                          8864m DATAREGDIRECTDEST_698: 
000054FE                          8865mm         PRINTDNDEST D3 
000054FE  3203                    8866mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005500  E949                    8867mm         LSL     #$04, D1
00005502  E049                    8868mm         LSR     #$08, D1
00005504  EA49                    8869mm         LSR     #$05, D1
00005506  43F8 00CC               8870mm         LEA     ODN, A1     
0000550A  103C 000E               8871mm         MOVE.B  #14,D0          
0000550E  4E4F                    8872mm         TRAP    #15
00005510  103C 0003               8873mm         MOVE.B  #3,D0          
00005514  4E4F                    8874mm         TRAP    #15
00005516                          8875mm         ENDM
00005516  6000 057A               8876m         BRA     COMPLETE_698 
0000551A                          8877m DATAREGDIRECTSRC_698: 
0000551A                          8878mm         PRINTDNSRC D3 
0000551A  4281                    8879mm         CLR.L   D1
0000551C  3203                    8880mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000551E  E149                    8881mm         LSL     #$08, D1
00005520  EB49                    8882mm         LSL     #$05, D1
00005522  E049                    8883mm         LSR     #$08, D1
00005524  EA49                    8884mm         LSR     #$05, D1
00005526  43F8 00CC               8885mm         LEA     ODN, A1     
0000552A  103C 000E               8886mm         MOVE.B  #14,D0          
0000552E  4E4F                    8887mm         TRAP    #15
00005530  103C 0003               8888mm         MOVE.B  #3,D0          
00005534  4E4F                    8889mm         TRAP    #15
00005536                          8890mm         ENDM
00005536  6000 055A               8891m         BRA     COMPLETE_698   
0000553A                          8892m         
0000553A                          8893m ADRREGDIRECT_698: 
0000553A  BC3C 0001               8894m         CMP.B   #$01, D6
0000553E  6700 001E               8895m         BEQ     ADRREGDIRECTSRC_698   
00005542                          8896m ADRREGDIRECTDEST_698:
00005542                          8897mm         PRINTANDEST D3
00005542  3203                    8898mm         MOVE.W  D3, D1
00005544  E949                    8899mm         LSL     #$04, D1
00005546  E049                    8900mm         LSR     #$08, D1
00005548  EA49                    8901mm         LSR     #$05, D1
0000554A  43F8 00CE               8902mm         LEA     OAN, A1     
0000554E  103C 000E               8903mm         MOVE.B  #14,D0          
00005552  4E4F                    8904mm         TRAP    #15
00005554  103C 0003               8905mm         MOVE.B  #3,D0          
00005558  4E4F                    8906mm         TRAP    #15
0000555A                          8907mm         ENDM
0000555A  6000 0536               8908m         BRA     COMPLETE_698   
0000555E                          8909m ADRREGDIRECTSRC_698:
0000555E                          8910mm         PRINTANSRC D3
0000555E  3203                    8911mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005560  E149                    8912mm         LSL     #$08, D1
00005562  EB49                    8913mm         LSL     #$05, D1
00005564  E049                    8914mm         LSR     #$08, D1
00005566  EA49                    8915mm         LSR     #$05, D1
00005568  43F8 00CE               8916mm         LEA     OAN, A1     
0000556C  103C 000E               8917mm         MOVE.B  #14,D0          
00005570  4E4F                    8918mm         TRAP    #15
00005572  103C 0003               8919mm         MOVE.B  #3,D0          
00005576  4E4F                    8920mm         TRAP    #15
00005578                          8921mm         ENDM
00005578  6000 0518               8922m         BRA     COMPLETE_698   
0000557C                          8923m        
0000557C                          8924m ADRREGINDIRECT_698:   
0000557C  BC3C 0001               8925m         CMP.B   #$01, D6
00005580  6700 0032               8926m         BEQ     ADRREGINDIRECTSRC_698   
00005584                          8927m ADRREGINDIRECTDEST_698:
00005584                          8928mm         PRINTLB
00005584  43F8 00D0               8929mm         LEA     OLB, A1     
00005588  103C 000E               8930mm         MOVE.B  #14,D0          
0000558C  4E4F                    8931mm         TRAP    #15
0000558E                          8932mm         ENDM
0000558E                          8933mm         PRINTANDEST D3  
0000558E  3203                    8934mm         MOVE.W  D3, D1
00005590  E949                    8935mm         LSL     #$04, D1
00005592  E049                    8936mm         LSR     #$08, D1
00005594  EA49                    8937mm         LSR     #$05, D1
00005596  43F8 00CE               8938mm         LEA     OAN, A1     
0000559A  103C 000E               8939mm         MOVE.B  #14,D0          
0000559E  4E4F                    8940mm         TRAP    #15
000055A0  103C 0003               8941mm         MOVE.B  #3,D0          
000055A4  4E4F                    8942mm         TRAP    #15
000055A6                          8943mm         ENDM
000055A6                          8944mm         PRINTRB
000055A6  43F8 00D2               8945mm         LEA     ORB, A1     
000055AA  103C 000E               8946mm         MOVE.B  #14,D0          
000055AE  4E4F                    8947mm         TRAP    #15
000055B0                          8948mm         ENDM
000055B0  6000 04E0               8949m         BRA     COMPLETE_698     
000055B4                          8950m ADRREGINDIRECTSRC_698:   
000055B4                          8951mm         PRINTLB
000055B4  43F8 00D0               8952mm         LEA     OLB, A1     
000055B8  103C 000E               8953mm         MOVE.B  #14,D0          
000055BC  4E4F                    8954mm         TRAP    #15
000055BE                          8955mm         ENDM
000055BE                          8956mm         PRINTANSRC D3  
000055BE  3203                    8957mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000055C0  E149                    8958mm         LSL     #$08, D1
000055C2  EB49                    8959mm         LSL     #$05, D1
000055C4  E049                    8960mm         LSR     #$08, D1
000055C6  EA49                    8961mm         LSR     #$05, D1
000055C8  43F8 00CE               8962mm         LEA     OAN, A1     
000055CC  103C 000E               8963mm         MOVE.B  #14,D0          
000055D0  4E4F                    8964mm         TRAP    #15
000055D2  103C 0003               8965mm         MOVE.B  #3,D0          
000055D6  4E4F                    8966mm         TRAP    #15
000055D8                          8967mm         ENDM
000055D8                          8968mm         PRINTRB
000055D8  43F8 00D2               8969mm         LEA     ORB, A1     
000055DC  103C 000E               8970mm         MOVE.B  #14,D0          
000055E0  4E4F                    8971mm         TRAP    #15
000055E2                          8972mm         ENDM
000055E2  6000 04AE               8973m         BRA     COMPLETE_698   
000055E6                          8974m         
000055E6                          8975m ADRREGPOSTINC_698:   
000055E6  BC3C 0001               8976m         CMP.B   #$01, D6
000055EA  6700 003C               8977m         BEQ     ADRREGPOSTINCSRC_698   
000055EE                          8978m ADRREGPOSTINCDEST_698: 
000055EE                          8979mm         PRINTLB
000055EE  43F8 00D0               8980mm         LEA     OLB, A1     
000055F2  103C 000E               8981mm         MOVE.B  #14,D0          
000055F6  4E4F                    8982mm         TRAP    #15
000055F8                          8983mm         ENDM
000055F8                          8984mm         PRINTANDEST D3  
000055F8  3203                    8985mm         MOVE.W  D3, D1
000055FA  E949                    8986mm         LSL     #$04, D1
000055FC  E049                    8987mm         LSR     #$08, D1
000055FE  EA49                    8988mm         LSR     #$05, D1
00005600  43F8 00CE               8989mm         LEA     OAN, A1     
00005604  103C 000E               8990mm         MOVE.B  #14,D0          
00005608  4E4F                    8991mm         TRAP    #15
0000560A  103C 0003               8992mm         MOVE.B  #3,D0          
0000560E  4E4F                    8993mm         TRAP    #15
00005610                          8994mm         ENDM
00005610                          8995mm         PRINTRB
00005610  43F8 00D2               8996mm         LEA     ORB, A1     
00005614  103C 000E               8997mm         MOVE.B  #14,D0          
00005618  4E4F                    8998mm         TRAP    #15
0000561A                          8999mm         ENDM
0000561A                          9000mm         PRINTPI
0000561A  43F8 00D9               9001mm         LEA     OPSTINC, A1     
0000561E  103C 000E               9002mm         MOVE.B  #14,D0          
00005622  4E4F                    9003mm         TRAP    #15
00005624                          9004mm         ENDM
00005624  6000 046C               9005m         BRA     COMPLETE_698  
00005628                          9006m ADRREGPOSTINCSRC_698:           
00005628                          9007mm         PRINTLB
00005628  43F8 00D0               9008mm         LEA     OLB, A1     
0000562C  103C 000E               9009mm         MOVE.B  #14,D0          
00005630  4E4F                    9010mm         TRAP    #15
00005632                          9011mm         ENDM
00005632                          9012mm         PRINTANSRC D3  
00005632  3203                    9013mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005634  E149                    9014mm         LSL     #$08, D1
00005636  EB49                    9015mm         LSL     #$05, D1
00005638  E049                    9016mm         LSR     #$08, D1
0000563A  EA49                    9017mm         LSR     #$05, D1
0000563C  43F8 00CE               9018mm         LEA     OAN, A1     
00005640  103C 000E               9019mm         MOVE.B  #14,D0          
00005644  4E4F                    9020mm         TRAP    #15
00005646  103C 0003               9021mm         MOVE.B  #3,D0          
0000564A  4E4F                    9022mm         TRAP    #15
0000564C                          9023mm         ENDM
0000564C                          9024mm         PRINTRB
0000564C  43F8 00D2               9025mm         LEA     ORB, A1     
00005650  103C 000E               9026mm         MOVE.B  #14,D0          
00005654  4E4F                    9027mm         TRAP    #15
00005656                          9028mm         ENDM
00005656                          9029mm         PRINTPI
00005656  43F8 00D9               9030mm         LEA     OPSTINC, A1     
0000565A  103C 000E               9031mm         MOVE.B  #14,D0          
0000565E  4E4F                    9032mm         TRAP    #15
00005660                          9033mm         ENDM
00005660  6000 0430               9034m         BRA     COMPLETE_698  
00005664                          9035m ADRREGPREDEC_698: 
00005664  BC3C 0001               9036m         CMP.B   #$01, D6
00005668  6700 003C               9037m         BEQ     ADRREGPREDECSRC_698   
0000566C                          9038m ADRREGPREDECDEST_698:
0000566C                          9039mm         PRINTPD  
0000566C  43F8 00D7               9040mm         LEA     OPREDEC, A1     
00005670  103C 000E               9041mm         MOVE.B  #14,D0          
00005674  4E4F                    9042mm         TRAP    #15
00005676                          9043mm         ENDM
00005676                          9044mm         PRINTLB
00005676  43F8 00D0               9045mm         LEA     OLB, A1     
0000567A  103C 000E               9046mm         MOVE.B  #14,D0          
0000567E  4E4F                    9047mm         TRAP    #15
00005680                          9048mm         ENDM
00005680                          9049mm         PRINTANDEST D3  
00005680  3203                    9050mm         MOVE.W  D3, D1
00005682  E949                    9051mm         LSL     #$04, D1
00005684  E049                    9052mm         LSR     #$08, D1
00005686  EA49                    9053mm         LSR     #$05, D1
00005688  43F8 00CE               9054mm         LEA     OAN, A1     
0000568C  103C 000E               9055mm         MOVE.B  #14,D0          
00005690  4E4F                    9056mm         TRAP    #15
00005692  103C 0003               9057mm         MOVE.B  #3,D0          
00005696  4E4F                    9058mm         TRAP    #15
00005698                          9059mm         ENDM
00005698                          9060mm         PRINTRB
00005698  43F8 00D2               9061mm         LEA     ORB, A1     
0000569C  103C 000E               9062mm         MOVE.B  #14,D0          
000056A0  4E4F                    9063mm         TRAP    #15
000056A2                          9064mm         ENDM
000056A2  6000 03EE               9065m         BRA     COMPLETE_698   
000056A6                          9066m ADRREGPREDECSRC_698: 
000056A6                          9067mm         PRINTPD  
000056A6  43F8 00D7               9068mm         LEA     OPREDEC, A1     
000056AA  103C 000E               9069mm         MOVE.B  #14,D0          
000056AE  4E4F                    9070mm         TRAP    #15
000056B0                          9071mm         ENDM
000056B0                          9072mm         PRINTLB
000056B0  43F8 00D0               9073mm         LEA     OLB, A1     
000056B4  103C 000E               9074mm         MOVE.B  #14,D0          
000056B8  4E4F                    9075mm         TRAP    #15
000056BA                          9076mm         ENDM
000056BA                          9077mm         PRINTANSRC D3  
000056BA  3203                    9078mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000056BC  E149                    9079mm         LSL     #$08, D1
000056BE  EB49                    9080mm         LSL     #$05, D1
000056C0  E049                    9081mm         LSR     #$08, D1
000056C2  EA49                    9082mm         LSR     #$05, D1
000056C4  43F8 00CE               9083mm         LEA     OAN, A1     
000056C8  103C 000E               9084mm         MOVE.B  #14,D0          
000056CC  4E4F                    9085mm         TRAP    #15
000056CE  103C 0003               9086mm         MOVE.B  #3,D0          
000056D2  4E4F                    9087mm         TRAP    #15
000056D4                          9088mm         ENDM
000056D4                          9089mm         PRINTRB
000056D4  43F8 00D2               9090mm         LEA     ORB, A1     
000056D8  103C 000E               9091mm         MOVE.B  #14,D0          
000056DC  4E4F                    9092mm         TRAP    #15
000056DE                          9093mm         ENDM
000056DE  6000 03B2               9094m         BRA     COMPLETE_698
000056E2                          9095m        
000056E2                          9096m ADRABSOLUTE_698:
000056E2  BC3C 0001               9097m         CMP.B   #$01, D6
000056E6  6600 0018               9098m         BNE     ADRABSOLUTEDST_698 
000056EA                          9099m         
000056EA  3A03                    9100m         MOVE.W  D3, D5
000056EC  0803 0002               9101m         BTST    #2, D3
000056F0  6600 0024               9102m         BNE     ADRIMMEDIATE_698
000056F4  0803 0000               9103m         BTST    #0, D3
000056F8  6600 0280               9104m         BNE     ADRABSOLUTEL_698
000056FC  6000 01E6               9105m         BRA     ADRABSOLUTEW_698
00005700                          9106m ADRABSOLUTEDST_698:
00005700  3A03                    9107m         MOVE.W  D3, D5
00005702  0803 000B               9108m         BTST    #$B, D3
00005706  6600 000E               9109m         BNE     ADRIMMEDIATE_698
0000570A  0803 0009               9110m         BTST    #$09, D3
0000570E  6600 026A               9111m         BNE     ADRABSOLUTEL_698
00005712  6000 01D0               9112m         BRA     ADRABSOLUTEW_698
00005716                          9113m ADRIMMEDIATE_698:
00005716  BE3C 0001               9114m         CMP.B   #1, D7
0000571A  6700 00A2               9115m         BEQ     ADRIMMEDIATEL_698
0000571E                          9116m ADRIMMEDIATEW_698:
0000571E  361A                    9117m         MOVE.W  (A2)+, D3
00005720                          9118mm         PRINTHASH
00005720  103C 0006               9119mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005724  323C 0023               9120mm         MOVE.W  #35, D1     ; AN = SIGN
00005728  4E4F                    9121mm         TRAP    #15         ; OUTPUT = SIGN
0000572A                          9122mm         ENDM
0000572A                          9123mm         PRINTSIGN
0000572A  103C 0006               9124mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000572E  323C 0024               9125mm         MOVE.W  #36, D1     ; AN = SIGN
00005732  4E4F                    9126mm         TRAP    #15         ; OUTPUT = SIGN
00005734                          9127mm         ENDM
00005734                          9128mm         ADROUT
00005734  103C 0006               9129mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005738  3212                    9130mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000573A  E049                    9131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000573C  E849                    9132mm         LSR.W   #4, D1      
0000573E                          9133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000573E  0C01 0009               9134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005742  6E00 000A               9135mmm         BGT     ALPHA_728
00005746  0601 0030               9136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000574A  6000 0006               9137mmm         BRA     DONE_728
0000574E  0601 0037               9138mmm ALPHA_728: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005752  4E71                    9139mmm DONE_728: NOP
00005754                          9140mmm         ENDM
00005754  4E4F                    9141mm         TRAP    #15         ; EXECUTE OUTPUT
00005756                          9142mm         
00005756  3212                    9143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005758  E949                    9144mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000575A  E049                    9145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000575C  E849                    9146mm         LSR.W   #4, D1      
0000575E                          9147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000575E  0C01 0009               9148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005762  6E00 000A               9149mmm         BGT     ALPHA_729
00005766  0601 0030               9150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000576A  6000 0006               9151mmm         BRA     DONE_729
0000576E  0601 0037               9152mmm ALPHA_729: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005772  4E71                    9153mmm DONE_729: NOP
00005774                          9154mmm         ENDM
00005774  4E4F                    9155mm         TRAP    #15         ; EXECUTE OUTPUT
00005776                          9156mm         
00005776  3212                    9157mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005778  E149                    9158mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000577A  E049                    9159mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000577C  E849                    9160mm         LSR.W   #4, D1      
0000577E                          9161mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000577E  0C01 0009               9162mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005782  6E00 000A               9163mmm         BGT     ALPHA_730
00005786  0601 0030               9164mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000578A  6000 0006               9165mmm         BRA     DONE_730
0000578E  0601 0037               9166mmm ALPHA_730: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005792  4E71                    9167mmm DONE_730: NOP
00005794                          9168mmm         ENDM
00005794  4E4F                    9169mm         TRAP    #15         ; EXECUTE OUTPUT
00005796                          9170mm         
00005796  3212                    9171mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005798  E149                    9172mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000579A  E949                    9173mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000579C  E049                    9174mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000579E  E849                    9175mm         LSR.W   #4, D1      
000057A0                          9176mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057A0  0C01 0009               9177mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057A4  6E00 000A               9178mmm         BGT     ALPHA_731
000057A8  0601 0030               9179mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057AC  6000 0006               9180mmm         BRA     DONE_731
000057B0  0601 0037               9181mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057B4  4E71                    9182mmm DONE_731: NOP
000057B6                          9183mmm         ENDM
000057B6  4E4F                    9184mm         TRAP    #15         ; EXECUTE OUTPUT       
000057B8                          9185mm         ENDM 
000057B8  3605                    9186m         MOVE.W  D5, D3
000057BA  6000 02D6               9187m         BRA     COMPLETE_698
000057BE                          9188m ADRIMMEDIATEL_698:
000057BE  361A                    9189m         MOVE.W  (A2)+, D3
000057C0                          9190mm         PRINTHASH
000057C0  103C 0006               9191mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057C4  323C 0023               9192mm         MOVE.W  #35, D1     ; AN = SIGN
000057C8  4E4F                    9193mm         TRAP    #15         ; OUTPUT = SIGN
000057CA                          9194mm         ENDM
000057CA                          9195mm         PRINTSIGN
000057CA  103C 0006               9196mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057CE  323C 0024               9197mm         MOVE.W  #36, D1     ; AN = SIGN
000057D2  4E4F                    9198mm         TRAP    #15         ; OUTPUT = SIGN
000057D4                          9199mm         ENDM
000057D4                          9200mm         ADROUT 
000057D4  103C 0006               9201mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057D8  3212                    9202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057DA  E049                    9203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057DC  E849                    9204mm         LSR.W   #4, D1      
000057DE                          9205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057DE  0C01 0009               9206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057E2  6E00 000A               9207mmm         BGT     ALPHA_735
000057E6  0601 0030               9208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057EA  6000 0006               9209mmm         BRA     DONE_735
000057EE  0601 0037               9210mmm ALPHA_735: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057F2  4E71                    9211mmm DONE_735: NOP
000057F4                          9212mmm         ENDM
000057F4  4E4F                    9213mm         TRAP    #15         ; EXECUTE OUTPUT
000057F6                          9214mm         
000057F6  3212                    9215mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057F8  E949                    9216mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000057FA  E049                    9217mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057FC  E849                    9218mm         LSR.W   #4, D1      
000057FE                          9219mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057FE  0C01 0009               9220mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005802  6E00 000A               9221mmm         BGT     ALPHA_736
00005806  0601 0030               9222mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000580A  6000 0006               9223mmm         BRA     DONE_736
0000580E  0601 0037               9224mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005812  4E71                    9225mmm DONE_736: NOP
00005814                          9226mmm         ENDM
00005814  4E4F                    9227mm         TRAP    #15         ; EXECUTE OUTPUT
00005816                          9228mm         
00005816  3212                    9229mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005818  E149                    9230mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000581A  E049                    9231mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000581C  E849                    9232mm         LSR.W   #4, D1      
0000581E                          9233mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000581E  0C01 0009               9234mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005822  6E00 000A               9235mmm         BGT     ALPHA_737
00005826  0601 0030               9236mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000582A  6000 0006               9237mmm         BRA     DONE_737
0000582E  0601 0037               9238mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005832  4E71                    9239mmm DONE_737: NOP
00005834                          9240mmm         ENDM
00005834  4E4F                    9241mm         TRAP    #15         ; EXECUTE OUTPUT
00005836                          9242mm         
00005836  3212                    9243mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005838  E149                    9244mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000583A  E949                    9245mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000583C  E049                    9246mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000583E  E849                    9247mm         LSR.W   #4, D1      
00005840                          9248mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005840  0C01 0009               9249mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005844  6E00 000A               9250mmm         BGT     ALPHA_738
00005848  0601 0030               9251mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000584C  6000 0006               9252mmm         BRA     DONE_738
00005850  0601 0037               9253mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005854  4E71                    9254mmm DONE_738: NOP
00005856                          9255mmm         ENDM
00005856  4E4F                    9256mm         TRAP    #15         ; EXECUTE OUTPUT       
00005858                          9257mm         ENDM 
00005858  361A                    9258m         MOVE.W  (A2)+, D3
0000585A                          9259mm         ADROUT
0000585A  103C 0006               9260mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000585E  3212                    9261mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005860  E049                    9262mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005862  E849                    9263mm         LSR.W   #4, D1      
00005864                          9264mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005864  0C01 0009               9265mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005868  6E00 000A               9266mmm         BGT     ALPHA_740
0000586C  0601 0030               9267mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005870  6000 0006               9268mmm         BRA     DONE_740
00005874  0601 0037               9269mmm ALPHA_740: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005878  4E71                    9270mmm DONE_740: NOP
0000587A                          9271mmm         ENDM
0000587A  4E4F                    9272mm         TRAP    #15         ; EXECUTE OUTPUT
0000587C                          9273mm         
0000587C  3212                    9274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000587E  E949                    9275mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005880  E049                    9276mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005882  E849                    9277mm         LSR.W   #4, D1      
00005884                          9278mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005884  0C01 0009               9279mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005888  6E00 000A               9280mmm         BGT     ALPHA_741
0000588C  0601 0030               9281mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005890  6000 0006               9282mmm         BRA     DONE_741
00005894  0601 0037               9283mmm ALPHA_741: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005898  4E71                    9284mmm DONE_741: NOP
0000589A                          9285mmm         ENDM
0000589A  4E4F                    9286mm         TRAP    #15         ; EXECUTE OUTPUT
0000589C                          9287mm         
0000589C  3212                    9288mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000589E  E149                    9289mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058A0  E049                    9290mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058A2  E849                    9291mm         LSR.W   #4, D1      
000058A4                          9292mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058A4  0C01 0009               9293mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058A8  6E00 000A               9294mmm         BGT     ALPHA_742
000058AC  0601 0030               9295mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058B0  6000 0006               9296mmm         BRA     DONE_742
000058B4  0601 0037               9297mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058B8  4E71                    9298mmm DONE_742: NOP
000058BA                          9299mmm         ENDM
000058BA  4E4F                    9300mm         TRAP    #15         ; EXECUTE OUTPUT
000058BC                          9301mm         
000058BC  3212                    9302mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058BE  E149                    9303mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058C0  E949                    9304mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000058C2  E049                    9305mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058C4  E849                    9306mm         LSR.W   #4, D1      
000058C6                          9307mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058C6  0C01 0009               9308mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058CA  6E00 000A               9309mmm         BGT     ALPHA_743
000058CE  0601 0030               9310mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058D2  6000 0006               9311mmm         BRA     DONE_743
000058D6  0601 0037               9312mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058DA  4E71                    9313mmm DONE_743: NOP
000058DC                          9314mmm         ENDM
000058DC  4E4F                    9315mm         TRAP    #15         ; EXECUTE OUTPUT       
000058DE                          9316mm         ENDM 
000058DE  3605                    9317m         MOVE.W  D5, D3
000058E0  6000 01B0               9318m         BRA     COMPLETE_698 
000058E4                          9319m ADRABSOLUTEW_698:     
000058E4  361A                    9320m         MOVE.W  (A2)+, D3
000058E6                          9321mm         PRINTSIGN
000058E6  103C 0006               9322mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000058EA  323C 0024               9323mm         MOVE.W  #36, D1     ; AN = SIGN
000058EE  4E4F                    9324mm         TRAP    #15         ; OUTPUT = SIGN
000058F0                          9325mm         ENDM
000058F0                          9326mm         ADROUT
000058F0  103C 0006               9327mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000058F4  3212                    9328mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058F6  E049                    9329mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058F8  E849                    9330mm         LSR.W   #4, D1      
000058FA                          9331mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058FA  0C01 0009               9332mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058FE  6E00 000A               9333mmm         BGT     ALPHA_746
00005902  0601 0030               9334mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005906  6000 0006               9335mmm         BRA     DONE_746
0000590A  0601 0037               9336mmm ALPHA_746: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000590E  4E71                    9337mmm DONE_746: NOP
00005910                          9338mmm         ENDM
00005910  4E4F                    9339mm         TRAP    #15         ; EXECUTE OUTPUT
00005912                          9340mm         
00005912  3212                    9341mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005914  E949                    9342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005916  E049                    9343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005918  E849                    9344mm         LSR.W   #4, D1      
0000591A                          9345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000591A  0C01 0009               9346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000591E  6E00 000A               9347mmm         BGT     ALPHA_747
00005922  0601 0030               9348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005926  6000 0006               9349mmm         BRA     DONE_747
0000592A  0601 0037               9350mmm ALPHA_747: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000592E  4E71                    9351mmm DONE_747: NOP
00005930                          9352mmm         ENDM
00005930  4E4F                    9353mm         TRAP    #15         ; EXECUTE OUTPUT
00005932                          9354mm         
00005932  3212                    9355mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005934  E149                    9356mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005936  E049                    9357mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005938  E849                    9358mm         LSR.W   #4, D1      
0000593A                          9359mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000593A  0C01 0009               9360mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000593E  6E00 000A               9361mmm         BGT     ALPHA_748
00005942  0601 0030               9362mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005946  6000 0006               9363mmm         BRA     DONE_748
0000594A  0601 0037               9364mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000594E  4E71                    9365mmm DONE_748: NOP
00005950                          9366mmm         ENDM
00005950  4E4F                    9367mm         TRAP    #15         ; EXECUTE OUTPUT
00005952                          9368mm         
00005952  3212                    9369mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005954  E149                    9370mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005956  E949                    9371mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005958  E049                    9372mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000595A  E849                    9373mm         LSR.W   #4, D1      
0000595C                          9374mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000595C  0C01 0009               9375mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005960  6E00 000A               9376mmm         BGT     ALPHA_749
00005964  0601 0030               9377mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005968  6000 0006               9378mmm         BRA     DONE_749
0000596C  0601 0037               9379mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005970  4E71                    9380mmm DONE_749: NOP
00005972                          9381mmm         ENDM
00005972  4E4F                    9382mm         TRAP    #15         ; EXECUTE OUTPUT       
00005974                          9383mm         ENDM 
00005974  3605                    9384m         MOVE.W  D5, D3
00005976  6000 011A               9385m         BRA     COMPLETE_698  
0000597A                          9386m ADRABSOLUTEL_698:  
0000597A  361A                    9387m         MOVE.W  (A2)+, D3
0000597C                          9388mm         PRINTSIGN
0000597C  103C 0006               9389mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005980  323C 0024               9390mm         MOVE.W  #36, D1     ; AN = SIGN
00005984  4E4F                    9391mm         TRAP    #15         ; OUTPUT = SIGN
00005986                          9392mm         ENDM
00005986                          9393mm         ADROUT 
00005986  103C 0006               9394mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000598A  3212                    9395mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000598C  E049                    9396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000598E  E849                    9397mm         LSR.W   #4, D1      
00005990                          9398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005990  0C01 0009               9399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005994  6E00 000A               9400mmm         BGT     ALPHA_752
00005998  0601 0030               9401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000599C  6000 0006               9402mmm         BRA     DONE_752
000059A0  0601 0037               9403mmm ALPHA_752: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059A4  4E71                    9404mmm DONE_752: NOP
000059A6                          9405mmm         ENDM
000059A6  4E4F                    9406mm         TRAP    #15         ; EXECUTE OUTPUT
000059A8                          9407mm         
000059A8  3212                    9408mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059AA  E949                    9409mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000059AC  E049                    9410mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059AE  E849                    9411mm         LSR.W   #4, D1      
000059B0                          9412mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059B0  0C01 0009               9413mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059B4  6E00 000A               9414mmm         BGT     ALPHA_753
000059B8  0601 0030               9415mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059BC  6000 0006               9416mmm         BRA     DONE_753
000059C0  0601 0037               9417mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059C4  4E71                    9418mmm DONE_753: NOP
000059C6                          9419mmm         ENDM
000059C6  4E4F                    9420mm         TRAP    #15         ; EXECUTE OUTPUT
000059C8                          9421mm         
000059C8  3212                    9422mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059CA  E149                    9423mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000059CC  E049                    9424mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059CE  E849                    9425mm         LSR.W   #4, D1      
000059D0                          9426mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059D0  0C01 0009               9427mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059D4  6E00 000A               9428mmm         BGT     ALPHA_754
000059D8  0601 0030               9429mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059DC  6000 0006               9430mmm         BRA     DONE_754
000059E0  0601 0037               9431mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000059E4  4E71                    9432mmm DONE_754: NOP
000059E6                          9433mmm         ENDM
000059E6  4E4F                    9434mm         TRAP    #15         ; EXECUTE OUTPUT
000059E8                          9435mm         
000059E8  3212                    9436mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000059EA  E149                    9437mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000059EC  E949                    9438mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000059EE  E049                    9439mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000059F0  E849                    9440mm         LSR.W   #4, D1      
000059F2                          9441mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000059F2  0C01 0009               9442mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000059F6  6E00 000A               9443mmm         BGT     ALPHA_755
000059FA  0601 0030               9444mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000059FE  6000 0006               9445mmm         BRA     DONE_755
00005A02  0601 0037               9446mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A06  4E71                    9447mmm DONE_755: NOP
00005A08                          9448mmm         ENDM
00005A08  4E4F                    9449mm         TRAP    #15         ; EXECUTE OUTPUT       
00005A0A                          9450mm         ENDM 
00005A0A  361A                    9451m         MOVE.W  (A2)+, D3
00005A0C                          9452mm         ADROUT
00005A0C  103C 0006               9453mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005A10  3212                    9454mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A12  E049                    9455mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A14  E849                    9456mm         LSR.W   #4, D1      
00005A16                          9457mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A16  0C01 0009               9458mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A1A  6E00 000A               9459mmm         BGT     ALPHA_757
00005A1E  0601 0030               9460mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A22  6000 0006               9461mmm         BRA     DONE_757
00005A26  0601 0037               9462mmm ALPHA_757: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A2A  4E71                    9463mmm DONE_757: NOP
00005A2C                          9464mmm         ENDM
00005A2C  4E4F                    9465mm         TRAP    #15         ; EXECUTE OUTPUT
00005A2E                          9466mm         
00005A2E  3212                    9467mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A30  E949                    9468mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005A32  E049                    9469mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A34  E849                    9470mm         LSR.W   #4, D1      
00005A36                          9471mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A36  0C01 0009               9472mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A3A  6E00 000A               9473mmm         BGT     ALPHA_758
00005A3E  0601 0030               9474mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A42  6000 0006               9475mmm         BRA     DONE_758
00005A46  0601 0037               9476mmm ALPHA_758: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A4A  4E71                    9477mmm DONE_758: NOP
00005A4C                          9478mmm         ENDM
00005A4C  4E4F                    9479mm         TRAP    #15         ; EXECUTE OUTPUT
00005A4E                          9480mm         
00005A4E  3212                    9481mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A50  E149                    9482mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A52  E049                    9483mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A54  E849                    9484mm         LSR.W   #4, D1      
00005A56                          9485mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A56  0C01 0009               9486mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A5A  6E00 000A               9487mmm         BGT     ALPHA_759
00005A5E  0601 0030               9488mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A62  6000 0006               9489mmm         BRA     DONE_759
00005A66  0601 0037               9490mmm ALPHA_759: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A6A  4E71                    9491mmm DONE_759: NOP
00005A6C                          9492mmm         ENDM
00005A6C  4E4F                    9493mm         TRAP    #15         ; EXECUTE OUTPUT
00005A6E                          9494mm         
00005A6E  3212                    9495mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005A70  E149                    9496mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005A72  E949                    9497mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005A74  E049                    9498mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005A76  E849                    9499mm         LSR.W   #4, D1      
00005A78                          9500mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005A78  0C01 0009               9501mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005A7C  6E00 000A               9502mmm         BGT     ALPHA_760
00005A80  0601 0030               9503mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005A84  6000 0006               9504mmm         BRA     DONE_760
00005A88  0601 0037               9505mmm ALPHA_760: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005A8C  4E71                    9506mmm DONE_760: NOP
00005A8E                          9507mmm         ENDM
00005A8E  4E4F                    9508mm         TRAP    #15         ; EXECUTE OUTPUT       
00005A90                          9509mm         ENDM 
00005A90  3605                    9510m         MOVE.W  D5, D3
00005A92                          9511m 
00005A92                          9512m COMPLETE_698:  ; OPCODE HAS BEEN VERIFIED
00005A92                          9513m         ENDM
00005A92                          9514m         printComma
00005A92  43F8 00D4               9515m         LEA     OCOMMA, A1     
00005A96  103C 000E               9516m         MOVE.B  #14,D0          
00005A9A  4E4F                    9517m         TRAP    #15
00005A9C                          9518m         ENDM
00005A9C                          9519m         printDnDest     (A2)
00005A9C  3212                    9520m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005A9E  E949                    9521m         LSL     #$04, D1
00005AA0  E049                    9522m         LSR     #$08, D1
00005AA2  EA49                    9523m         LSR     #$05, D1
00005AA4  43F8 00CC               9524m         LEA     ODN, A1     
00005AA8  103C 000E               9525m         MOVE.B  #14,D0          
00005AAC  4E4F                    9526m         TRAP    #15
00005AAE  103C 0003               9527m         MOVE.B  #3,D0          
00005AB2  4E4F                    9528m         TRAP    #15
00005AB4                          9529m         ENDM
00005AB4                          9530  decodeANDcomp:
00005AB4  4E75                    9531          RTS                ; Return from decodeANDcomp subroutine
00005AB6                          9532  
00005AB6                          9533  
00005AB6                          9534  ; ------------------------------------------------------------
00005AB6                          9535  ; 10. "decodeNOT" subroutine
00005AB6                          9536  ; Gary
00005AB6                          9537  ;
00005AB6                          9538  ; Decodes not by verifying, printing in a formatted form,
00005AB6                          9539  ; then decoding adressing modes and outputing them in formatted form.
00005AB6                          9540  ; ------------------------------------------------------------
00005AB6                          9541  decodeNOT:
00005AB6                          9542m         verifyOpcode    pNOT, (A2)
00005AB6  43F8 0194               9543m         LEA     PNOT, A1      ; INPUT PATTERN STRING
00005ABA  3612                    9544m         MOVE.W  (A2), D3      ; INPUT VALUE
00005ABC  123C 000F               9545m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005AC0                          9546m         
00005AC0                          9547m LOOP_763: 
00005AC0  0C11 0030               9548m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005AC4  6700 000E               9549m         BEQ     CHECKFOR0_763
00005AC8  0C11 0031               9550m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005ACC  6700 0010               9551m         BEQ     CHECKFOR1_763
00005AD0  6000 0012               9552m         BRA     NEXT_763      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005AD4                          9553m         
00005AD4                          9554m CHECKFOR0_763: 
00005AD4  0303                    9555m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005AD6  6600 1CA2               9556m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005ADA  6000 0008               9557m         BRA     NEXT_763
00005ADE                          9558m 
00005ADE                          9559m CHECKFOR1_763:
00005ADE  0303                    9560m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005AE0  6700 1C98               9561m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005AE4                          9562m 
00005AE4                          9563m NEXT_763: 
00005AE4  B23C 0000               9564m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005AE8  6700 0008               9565m         BEQ     COMPLETE_763  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005AEC  5301                    9566m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005AEE  1819                    9567m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005AF0  60CE                    9568m         BRA     LOOP_763      ; BEGIN LOOP AGAIN
00005AF2                          9569m 
00005AF2                          9570m COMPLETE_763:  ; OPCODE HAS BEEN VERIFIED
00005AF2                          9571m         ENDM
00005AF2  43F8 0094               9572          LEA     oNOT, A1     
00005AF6  103C 000E               9573          MOVE.B  #14,D0          
00005AFA  4E4F                    9574          TRAP    #15
00005AFC                          9575m         printSizeLow       (A2)
00005AFC  3612                    9576m         MOVE.W  (A2), D3      ; INPUT VALUE   
00005AFE  4247                    9577m         CLR     D7   
00005B00                          9578m CHECKFORB_764: 
00005B00  0803 0006               9579m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00005B04  6600 0018               9580m         BNE     CHECKFORW_764  ; IF NOT GO TO WORD SIZE
00005B08  0803 0007               9581m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00005B0C  6600 001E               9582m         BNE     CHECKFORL_764 ; IF NOT GO TO LONGWORD SIZE
00005B10  43F8 00C0               9583m         LEA     OBSIZE, A1     
00005B14  103C 000E               9584m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B18  4E4F                    9585m         TRAP    #15
00005B1A  6000 001E               9586m         BRA     COMPLETE_764      
00005B1E                          9587m CHECKFORW_764: 
00005B1E  43F8 00C4               9588m         LEA     OWSIZE, A1     
00005B22  103C 000E               9589m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00005B26  4E4F                    9590m         TRAP    #15
00005B28  6000 0010               9591m         BRA     COMPLETE_764  
00005B2C                          9592m CHECKFORL_764:
00005B2C  1E3C 0001               9593m         MOVE.B  #$1, D7
00005B30  43F8 00C8               9594m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00005B34  103C 000E               9595m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005B38  4E4F                    9596m         TRAP    #15
00005B3A                          9597m COMPLETE_764:  ; SIZE HAS BEEN PRINTED
00005B3A                          9598m         ENDM
00005B3A                          9599m         prepareAdrMode  #$1, (A2)
00005B3A  3C3C 0001               9600m         MOVE.W  #$1, D6      ; INPUT VALUE
00005B3E  3212                    9601m         MOVE.W  (A2), D1
00005B40  BC3C 0001               9602m         CMP.B   #$01, D6
00005B44  6700 000C               9603m         BEQ     ADRSOURCE_765    
00005B48                          9604m ADRDEST_765:
00005B48  EF49                    9605m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005B4A  E049                    9606m         LSR     #$08, D1
00005B4C  EA49                    9607m         LSR     #$05, D1
00005B4E  6000 000A               9608m         BRA     COMPLETE_765 
00005B52                          9609m ADRSOURCE_765:                
00005B52  E149                    9610m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00005B54  E549                    9611m         LSL     #$02, D1
00005B56  E049                    9612m         LSR     #$08, D1
00005B58  EA49                    9613m         LSR     #$05, D1
00005B5A                          9614m COMPLETE_765:  ; OPCODE HAS BEEN VERIFIED
00005B5A                          9615m         ENDM        
00005B5A                          9616m         decodeAdrMode   (A2), D1
00005B5A  3612                    9617m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005B5C  3201                    9618m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005B5E                          9619m 
00005B5E  B23C 0001               9620m         CMP.B   #$01, D1
00005B62  6700 0066               9621m         BEQ     ADRREGDIRECT_766    
00005B66  B23C 0002               9622m         CMP.B   #$02, D1
00005B6A  6700 00A0               9623m         BEQ     ADRREGINDIRECT_766  
00005B6E  B23C 0003               9624m         CMP.B   #$03, D1
00005B72  6700 0102               9625m         BEQ     ADRREGPOSTINC_766  
00005B76  B23C 0004               9626m         CMP.B   #$04, D1
00005B7A  6700 0178               9627m         BEQ     ADRREGPREDEC_766
00005B7E  B23C 0007               9628m         CMP.B   #$07, D1
00005B82  6700 01EE               9629m         BEQ     ADRABSOLUTE_766    
00005B86                          9630m         
00005B86                          9631m DATAREGDIRECT_766: 
00005B86  BC3C 0001               9632m         CMP.B   #$01, D6
00005B8A  6700 001E               9633m         BEQ     DATAREGDIRECTSRC_766   
00005B8E                          9634m DATAREGDIRECTDEST_766: 
00005B8E                          9635mm         PRINTDNDEST D3 
00005B8E  3203                    9636mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005B90  E949                    9637mm         LSL     #$04, D1
00005B92  E049                    9638mm         LSR     #$08, D1
00005B94  EA49                    9639mm         LSR     #$05, D1
00005B96  43F8 00CC               9640mm         LEA     ODN, A1     
00005B9A  103C 000E               9641mm         MOVE.B  #14,D0          
00005B9E  4E4F                    9642mm         TRAP    #15
00005BA0  103C 0003               9643mm         MOVE.B  #3,D0          
00005BA4  4E4F                    9644mm         TRAP    #15
00005BA6                          9645mm         ENDM
00005BA6  6000 057A               9646m         BRA     COMPLETE_766 
00005BAA                          9647m DATAREGDIRECTSRC_766: 
00005BAA                          9648mm         PRINTDNSRC D3 
00005BAA  4281                    9649mm         CLR.L   D1
00005BAC  3203                    9650mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BAE  E149                    9651mm         LSL     #$08, D1
00005BB0  EB49                    9652mm         LSL     #$05, D1
00005BB2  E049                    9653mm         LSR     #$08, D1
00005BB4  EA49                    9654mm         LSR     #$05, D1
00005BB6  43F8 00CC               9655mm         LEA     ODN, A1     
00005BBA  103C 000E               9656mm         MOVE.B  #14,D0          
00005BBE  4E4F                    9657mm         TRAP    #15
00005BC0  103C 0003               9658mm         MOVE.B  #3,D0          
00005BC4  4E4F                    9659mm         TRAP    #15
00005BC6                          9660mm         ENDM
00005BC6  6000 055A               9661m         BRA     COMPLETE_766   
00005BCA                          9662m         
00005BCA                          9663m ADRREGDIRECT_766: 
00005BCA  BC3C 0001               9664m         CMP.B   #$01, D6
00005BCE  6700 001E               9665m         BEQ     ADRREGDIRECTSRC_766   
00005BD2                          9666m ADRREGDIRECTDEST_766:
00005BD2                          9667mm         PRINTANDEST D3
00005BD2  3203                    9668mm         MOVE.W  D3, D1
00005BD4  E949                    9669mm         LSL     #$04, D1
00005BD6  E049                    9670mm         LSR     #$08, D1
00005BD8  EA49                    9671mm         LSR     #$05, D1
00005BDA  43F8 00CE               9672mm         LEA     OAN, A1     
00005BDE  103C 000E               9673mm         MOVE.B  #14,D0          
00005BE2  4E4F                    9674mm         TRAP    #15
00005BE4  103C 0003               9675mm         MOVE.B  #3,D0          
00005BE8  4E4F                    9676mm         TRAP    #15
00005BEA                          9677mm         ENDM
00005BEA  6000 0536               9678m         BRA     COMPLETE_766   
00005BEE                          9679m ADRREGDIRECTSRC_766:
00005BEE                          9680mm         PRINTANSRC D3
00005BEE  3203                    9681mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BF0  E149                    9682mm         LSL     #$08, D1
00005BF2  EB49                    9683mm         LSL     #$05, D1
00005BF4  E049                    9684mm         LSR     #$08, D1
00005BF6  EA49                    9685mm         LSR     #$05, D1
00005BF8  43F8 00CE               9686mm         LEA     OAN, A1     
00005BFC  103C 000E               9687mm         MOVE.B  #14,D0          
00005C00  4E4F                    9688mm         TRAP    #15
00005C02  103C 0003               9689mm         MOVE.B  #3,D0          
00005C06  4E4F                    9690mm         TRAP    #15
00005C08                          9691mm         ENDM
00005C08  6000 0518               9692m         BRA     COMPLETE_766   
00005C0C                          9693m        
00005C0C                          9694m ADRREGINDIRECT_766:   
00005C0C  BC3C 0001               9695m         CMP.B   #$01, D6
00005C10  6700 0032               9696m         BEQ     ADRREGINDIRECTSRC_766   
00005C14                          9697m ADRREGINDIRECTDEST_766:
00005C14                          9698mm         PRINTLB
00005C14  43F8 00D0               9699mm         LEA     OLB, A1     
00005C18  103C 000E               9700mm         MOVE.B  #14,D0          
00005C1C  4E4F                    9701mm         TRAP    #15
00005C1E                          9702mm         ENDM
00005C1E                          9703mm         PRINTANDEST D3  
00005C1E  3203                    9704mm         MOVE.W  D3, D1
00005C20  E949                    9705mm         LSL     #$04, D1
00005C22  E049                    9706mm         LSR     #$08, D1
00005C24  EA49                    9707mm         LSR     #$05, D1
00005C26  43F8 00CE               9708mm         LEA     OAN, A1     
00005C2A  103C 000E               9709mm         MOVE.B  #14,D0          
00005C2E  4E4F                    9710mm         TRAP    #15
00005C30  103C 0003               9711mm         MOVE.B  #3,D0          
00005C34  4E4F                    9712mm         TRAP    #15
00005C36                          9713mm         ENDM
00005C36                          9714mm         PRINTRB
00005C36  43F8 00D2               9715mm         LEA     ORB, A1     
00005C3A  103C 000E               9716mm         MOVE.B  #14,D0          
00005C3E  4E4F                    9717mm         TRAP    #15
00005C40                          9718mm         ENDM
00005C40  6000 04E0               9719m         BRA     COMPLETE_766     
00005C44                          9720m ADRREGINDIRECTSRC_766:   
00005C44                          9721mm         PRINTLB
00005C44  43F8 00D0               9722mm         LEA     OLB, A1     
00005C48  103C 000E               9723mm         MOVE.B  #14,D0          
00005C4C  4E4F                    9724mm         TRAP    #15
00005C4E                          9725mm         ENDM
00005C4E                          9726mm         PRINTANSRC D3  
00005C4E  3203                    9727mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C50  E149                    9728mm         LSL     #$08, D1
00005C52  EB49                    9729mm         LSL     #$05, D1
00005C54  E049                    9730mm         LSR     #$08, D1
00005C56  EA49                    9731mm         LSR     #$05, D1
00005C58  43F8 00CE               9732mm         LEA     OAN, A1     
00005C5C  103C 000E               9733mm         MOVE.B  #14,D0          
00005C60  4E4F                    9734mm         TRAP    #15
00005C62  103C 0003               9735mm         MOVE.B  #3,D0          
00005C66  4E4F                    9736mm         TRAP    #15
00005C68                          9737mm         ENDM
00005C68                          9738mm         PRINTRB
00005C68  43F8 00D2               9739mm         LEA     ORB, A1     
00005C6C  103C 000E               9740mm         MOVE.B  #14,D0          
00005C70  4E4F                    9741mm         TRAP    #15
00005C72                          9742mm         ENDM
00005C72  6000 04AE               9743m         BRA     COMPLETE_766   
00005C76                          9744m         
00005C76                          9745m ADRREGPOSTINC_766:   
00005C76  BC3C 0001               9746m         CMP.B   #$01, D6
00005C7A  6700 003C               9747m         BEQ     ADRREGPOSTINCSRC_766   
00005C7E                          9748m ADRREGPOSTINCDEST_766: 
00005C7E                          9749mm         PRINTLB
00005C7E  43F8 00D0               9750mm         LEA     OLB, A1     
00005C82  103C 000E               9751mm         MOVE.B  #14,D0          
00005C86  4E4F                    9752mm         TRAP    #15
00005C88                          9753mm         ENDM
00005C88                          9754mm         PRINTANDEST D3  
00005C88  3203                    9755mm         MOVE.W  D3, D1
00005C8A  E949                    9756mm         LSL     #$04, D1
00005C8C  E049                    9757mm         LSR     #$08, D1
00005C8E  EA49                    9758mm         LSR     #$05, D1
00005C90  43F8 00CE               9759mm         LEA     OAN, A1     
00005C94  103C 000E               9760mm         MOVE.B  #14,D0          
00005C98  4E4F                    9761mm         TRAP    #15
00005C9A  103C 0003               9762mm         MOVE.B  #3,D0          
00005C9E  4E4F                    9763mm         TRAP    #15
00005CA0                          9764mm         ENDM
00005CA0                          9765mm         PRINTRB
00005CA0  43F8 00D2               9766mm         LEA     ORB, A1     
00005CA4  103C 000E               9767mm         MOVE.B  #14,D0          
00005CA8  4E4F                    9768mm         TRAP    #15
00005CAA                          9769mm         ENDM
00005CAA                          9770mm         PRINTPI
00005CAA  43F8 00D9               9771mm         LEA     OPSTINC, A1     
00005CAE  103C 000E               9772mm         MOVE.B  #14,D0          
00005CB2  4E4F                    9773mm         TRAP    #15
00005CB4                          9774mm         ENDM
00005CB4  6000 046C               9775m         BRA     COMPLETE_766  
00005CB8                          9776m ADRREGPOSTINCSRC_766:           
00005CB8                          9777mm         PRINTLB
00005CB8  43F8 00D0               9778mm         LEA     OLB, A1     
00005CBC  103C 000E               9779mm         MOVE.B  #14,D0          
00005CC0  4E4F                    9780mm         TRAP    #15
00005CC2                          9781mm         ENDM
00005CC2                          9782mm         PRINTANSRC D3  
00005CC2  3203                    9783mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005CC4  E149                    9784mm         LSL     #$08, D1
00005CC6  EB49                    9785mm         LSL     #$05, D1
00005CC8  E049                    9786mm         LSR     #$08, D1
00005CCA  EA49                    9787mm         LSR     #$05, D1
00005CCC  43F8 00CE               9788mm         LEA     OAN, A1     
00005CD0  103C 000E               9789mm         MOVE.B  #14,D0          
00005CD4  4E4F                    9790mm         TRAP    #15
00005CD6  103C 0003               9791mm         MOVE.B  #3,D0          
00005CDA  4E4F                    9792mm         TRAP    #15
00005CDC                          9793mm         ENDM
00005CDC                          9794mm         PRINTRB
00005CDC  43F8 00D2               9795mm         LEA     ORB, A1     
00005CE0  103C 000E               9796mm         MOVE.B  #14,D0          
00005CE4  4E4F                    9797mm         TRAP    #15
00005CE6                          9798mm         ENDM
00005CE6                          9799mm         PRINTPI
00005CE6  43F8 00D9               9800mm         LEA     OPSTINC, A1     
00005CEA  103C 000E               9801mm         MOVE.B  #14,D0          
00005CEE  4E4F                    9802mm         TRAP    #15
00005CF0                          9803mm         ENDM
00005CF0  6000 0430               9804m         BRA     COMPLETE_766  
00005CF4                          9805m ADRREGPREDEC_766: 
00005CF4  BC3C 0001               9806m         CMP.B   #$01, D6
00005CF8  6700 003C               9807m         BEQ     ADRREGPREDECSRC_766   
00005CFC                          9808m ADRREGPREDECDEST_766:
00005CFC                          9809mm         PRINTPD  
00005CFC  43F8 00D7               9810mm         LEA     OPREDEC, A1     
00005D00  103C 000E               9811mm         MOVE.B  #14,D0          
00005D04  4E4F                    9812mm         TRAP    #15
00005D06                          9813mm         ENDM
00005D06                          9814mm         PRINTLB
00005D06  43F8 00D0               9815mm         LEA     OLB, A1     
00005D0A  103C 000E               9816mm         MOVE.B  #14,D0          
00005D0E  4E4F                    9817mm         TRAP    #15
00005D10                          9818mm         ENDM
00005D10                          9819mm         PRINTANDEST D3  
00005D10  3203                    9820mm         MOVE.W  D3, D1
00005D12  E949                    9821mm         LSL     #$04, D1
00005D14  E049                    9822mm         LSR     #$08, D1
00005D16  EA49                    9823mm         LSR     #$05, D1
00005D18  43F8 00CE               9824mm         LEA     OAN, A1     
00005D1C  103C 000E               9825mm         MOVE.B  #14,D0          
00005D20  4E4F                    9826mm         TRAP    #15
00005D22  103C 0003               9827mm         MOVE.B  #3,D0          
00005D26  4E4F                    9828mm         TRAP    #15
00005D28                          9829mm         ENDM
00005D28                          9830mm         PRINTRB
00005D28  43F8 00D2               9831mm         LEA     ORB, A1     
00005D2C  103C 000E               9832mm         MOVE.B  #14,D0          
00005D30  4E4F                    9833mm         TRAP    #15
00005D32                          9834mm         ENDM
00005D32  6000 03EE               9835m         BRA     COMPLETE_766   
00005D36                          9836m ADRREGPREDECSRC_766: 
00005D36                          9837mm         PRINTPD  
00005D36  43F8 00D7               9838mm         LEA     OPREDEC, A1     
00005D3A  103C 000E               9839mm         MOVE.B  #14,D0          
00005D3E  4E4F                    9840mm         TRAP    #15
00005D40                          9841mm         ENDM
00005D40                          9842mm         PRINTLB
00005D40  43F8 00D0               9843mm         LEA     OLB, A1     
00005D44  103C 000E               9844mm         MOVE.B  #14,D0          
00005D48  4E4F                    9845mm         TRAP    #15
00005D4A                          9846mm         ENDM
00005D4A                          9847mm         PRINTANSRC D3  
00005D4A  3203                    9848mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005D4C  E149                    9849mm         LSL     #$08, D1
00005D4E  EB49                    9850mm         LSL     #$05, D1
00005D50  E049                    9851mm         LSR     #$08, D1
00005D52  EA49                    9852mm         LSR     #$05, D1
00005D54  43F8 00CE               9853mm         LEA     OAN, A1     
00005D58  103C 000E               9854mm         MOVE.B  #14,D0          
00005D5C  4E4F                    9855mm         TRAP    #15
00005D5E  103C 0003               9856mm         MOVE.B  #3,D0          
00005D62  4E4F                    9857mm         TRAP    #15
00005D64                          9858mm         ENDM
00005D64                          9859mm         PRINTRB
00005D64  43F8 00D2               9860mm         LEA     ORB, A1     
00005D68  103C 000E               9861mm         MOVE.B  #14,D0          
00005D6C  4E4F                    9862mm         TRAP    #15
00005D6E                          9863mm         ENDM
00005D6E  6000 03B2               9864m         BRA     COMPLETE_766
00005D72                          9865m        
00005D72                          9866m ADRABSOLUTE_766:
00005D72  BC3C 0001               9867m         CMP.B   #$01, D6
00005D76  6600 0018               9868m         BNE     ADRABSOLUTEDST_766 
00005D7A                          9869m         
00005D7A  3A03                    9870m         MOVE.W  D3, D5
00005D7C  0803 0002               9871m         BTST    #2, D3
00005D80  6600 0024               9872m         BNE     ADRIMMEDIATE_766
00005D84  0803 0000               9873m         BTST    #0, D3
00005D88  6600 0280               9874m         BNE     ADRABSOLUTEL_766
00005D8C  6000 01E6               9875m         BRA     ADRABSOLUTEW_766
00005D90                          9876m ADRABSOLUTEDST_766:
00005D90  3A03                    9877m         MOVE.W  D3, D5
00005D92  0803 000B               9878m         BTST    #$B, D3
00005D96  6600 000E               9879m         BNE     ADRIMMEDIATE_766
00005D9A  0803 0009               9880m         BTST    #$09, D3
00005D9E  6600 026A               9881m         BNE     ADRABSOLUTEL_766
00005DA2  6000 01D0               9882m         BRA     ADRABSOLUTEW_766
00005DA6                          9883m ADRIMMEDIATE_766:
00005DA6  BE3C 0001               9884m         CMP.B   #1, D7
00005DAA  6700 00A2               9885m         BEQ     ADRIMMEDIATEL_766
00005DAE                          9886m ADRIMMEDIATEW_766:
00005DAE  361A                    9887m         MOVE.W  (A2)+, D3
00005DB0                          9888mm         PRINTHASH
00005DB0  103C 0006               9889mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DB4  323C 0023               9890mm         MOVE.W  #35, D1     ; AN = SIGN
00005DB8  4E4F                    9891mm         TRAP    #15         ; OUTPUT = SIGN
00005DBA                          9892mm         ENDM
00005DBA                          9893mm         PRINTSIGN
00005DBA  103C 0006               9894mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DBE  323C 0024               9895mm         MOVE.W  #36, D1     ; AN = SIGN
00005DC2  4E4F                    9896mm         TRAP    #15         ; OUTPUT = SIGN
00005DC4                          9897mm         ENDM
00005DC4                          9898mm         ADROUT
00005DC4  103C 0006               9899mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005DC8  3212                    9900mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DCA  E049                    9901mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DCC  E849                    9902mm         LSR.W   #4, D1      
00005DCE                          9903mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DCE  0C01 0009               9904mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DD2  6E00 000A               9905mmm         BGT     ALPHA_796
00005DD6  0601 0030               9906mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DDA  6000 0006               9907mmm         BRA     DONE_796
00005DDE  0601 0037               9908mmm ALPHA_796: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DE2  4E71                    9909mmm DONE_796: NOP
00005DE4                          9910mmm         ENDM
00005DE4  4E4F                    9911mm         TRAP    #15         ; EXECUTE OUTPUT
00005DE6                          9912mm         
00005DE6  3212                    9913mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DE8  E949                    9914mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DEA  E049                    9915mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DEC  E849                    9916mm         LSR.W   #4, D1      
00005DEE                          9917mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DEE  0C01 0009               9918mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DF2  6E00 000A               9919mmm         BGT     ALPHA_797
00005DF6  0601 0030               9920mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DFA  6000 0006               9921mmm         BRA     DONE_797
00005DFE  0601 0037               9922mmm ALPHA_797: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E02  4E71                    9923mmm DONE_797: NOP
00005E04                          9924mmm         ENDM
00005E04  4E4F                    9925mm         TRAP    #15         ; EXECUTE OUTPUT
00005E06                          9926mm         
00005E06  3212                    9927mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E08  E149                    9928mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E0A  E049                    9929mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E0C  E849                    9930mm         LSR.W   #4, D1      
00005E0E                          9931mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E0E  0C01 0009               9932mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E12  6E00 000A               9933mmm         BGT     ALPHA_798
00005E16  0601 0030               9934mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E1A  6000 0006               9935mmm         BRA     DONE_798
00005E1E  0601 0037               9936mmm ALPHA_798: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E22  4E71                    9937mmm DONE_798: NOP
00005E24                          9938mmm         ENDM
00005E24  4E4F                    9939mm         TRAP    #15         ; EXECUTE OUTPUT
00005E26                          9940mm         
00005E26  3212                    9941mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E28  E149                    9942mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E2A  E949                    9943mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E2C  E049                    9944mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E2E  E849                    9945mm         LSR.W   #4, D1      
00005E30                          9946mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E30  0C01 0009               9947mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E34  6E00 000A               9948mmm         BGT     ALPHA_799
00005E38  0601 0030               9949mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E3C  6000 0006               9950mmm         BRA     DONE_799
00005E40  0601 0037               9951mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E44  4E71                    9952mmm DONE_799: NOP
00005E46                          9953mmm         ENDM
00005E46  4E4F                    9954mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E48                          9955mm         ENDM 
00005E48  3605                    9956m         MOVE.W  D5, D3
00005E4A  6000 02D6               9957m         BRA     COMPLETE_766
00005E4E                          9958m ADRIMMEDIATEL_766:
00005E4E  361A                    9959m         MOVE.W  (A2)+, D3
00005E50                          9960mm         PRINTHASH
00005E50  103C 0006               9961mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E54  323C 0023               9962mm         MOVE.W  #35, D1     ; AN = SIGN
00005E58  4E4F                    9963mm         TRAP    #15         ; OUTPUT = SIGN
00005E5A                          9964mm         ENDM
00005E5A                          9965mm         PRINTSIGN
00005E5A  103C 0006               9966mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E5E  323C 0024               9967mm         MOVE.W  #36, D1     ; AN = SIGN
00005E62  4E4F                    9968mm         TRAP    #15         ; OUTPUT = SIGN
00005E64                          9969mm         ENDM
00005E64                          9970mm         ADROUT 
00005E64  103C 0006               9971mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E68  3212                    9972mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E6A  E049                    9973mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E6C  E849                    9974mm         LSR.W   #4, D1      
00005E6E                          9975mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E6E  0C01 0009               9976mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E72  6E00 000A               9977mmm         BGT     ALPHA_803
00005E76  0601 0030               9978mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E7A  6000 0006               9979mmm         BRA     DONE_803
00005E7E  0601 0037               9980mmm ALPHA_803: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E82  4E71                    9981mmm DONE_803: NOP
00005E84                          9982mmm         ENDM
00005E84  4E4F                    9983mm         TRAP    #15         ; EXECUTE OUTPUT
00005E86                          9984mm         
00005E86  3212                    9985mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E88  E949                    9986mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E8A  E049                    9987mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E8C  E849                    9988mm         LSR.W   #4, D1      
00005E8E                          9989mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E8E  0C01 0009               9990mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E92  6E00 000A               9991mmm         BGT     ALPHA_804
00005E96  0601 0030               9992mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E9A  6000 0006               9993mmm         BRA     DONE_804
00005E9E  0601 0037               9994mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EA2  4E71                    9995mmm DONE_804: NOP
00005EA4                          9996mmm         ENDM
00005EA4  4E4F                    9997mm         TRAP    #15         ; EXECUTE OUTPUT
00005EA6                          9998mm         
00005EA6  3212                    9999mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA8  E149                   10000mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EAA  E049                   10001mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EAC  E849                   10002mm         LSR.W   #4, D1      
00005EAE                         10003mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EAE  0C01 0009              10004mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EB2  6E00 000A              10005mmm         BGT     ALPHA_805
00005EB6  0601 0030              10006mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EBA  6000 0006              10007mmm         BRA     DONE_805
00005EBE  0601 0037              10008mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EC2  4E71                   10009mmm DONE_805: NOP
00005EC4                         10010mmm         ENDM
00005EC4  4E4F                   10011mm         TRAP    #15         ; EXECUTE OUTPUT
00005EC6                         10012mm         
00005EC6  3212                   10013mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC8  E149                   10014mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005ECA  E949                   10015mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005ECC  E049                   10016mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005ECE  E849                   10017mm         LSR.W   #4, D1      
00005ED0                         10018mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005ED0  0C01 0009              10019mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ED4  6E00 000A              10020mmm         BGT     ALPHA_806
00005ED8  0601 0030              10021mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EDC  6000 0006              10022mmm         BRA     DONE_806
00005EE0  0601 0037              10023mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EE4  4E71                   10024mmm DONE_806: NOP
00005EE6                         10025mmm         ENDM
00005EE6  4E4F                   10026mm         TRAP    #15         ; EXECUTE OUTPUT       
00005EE8                         10027mm         ENDM 
00005EE8  361A                   10028m         MOVE.W  (A2)+, D3
00005EEA                         10029mm         ADROUT
00005EEA  103C 0006              10030mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005EEE  3212                   10031mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EF0  E049                   10032mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EF2  E849                   10033mm         LSR.W   #4, D1      
00005EF4                         10034mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EF4  0C01 0009              10035mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EF8  6E00 000A              10036mmm         BGT     ALPHA_808
00005EFC  0601 0030              10037mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F00  6000 0006              10038mmm         BRA     DONE_808
00005F04  0601 0037              10039mmm ALPHA_808: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F08  4E71                   10040mmm DONE_808: NOP
00005F0A                         10041mmm         ENDM
00005F0A  4E4F                   10042mm         TRAP    #15         ; EXECUTE OUTPUT
00005F0C                         10043mm         
00005F0C  3212                   10044mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F0E  E949                   10045mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F10  E049                   10046mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F12  E849                   10047mm         LSR.W   #4, D1      
00005F14                         10048mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F14  0C01 0009              10049mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F18  6E00 000A              10050mmm         BGT     ALPHA_809
00005F1C  0601 0030              10051mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F20  6000 0006              10052mmm         BRA     DONE_809
00005F24  0601 0037              10053mmm ALPHA_809: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F28  4E71                   10054mmm DONE_809: NOP
00005F2A                         10055mmm         ENDM
00005F2A  4E4F                   10056mm         TRAP    #15         ; EXECUTE OUTPUT
00005F2C                         10057mm         
00005F2C  3212                   10058mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F2E  E149                   10059mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F30  E049                   10060mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F32  E849                   10061mm         LSR.W   #4, D1      
00005F34                         10062mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F34  0C01 0009              10063mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F38  6E00 000A              10064mmm         BGT     ALPHA_810
00005F3C  0601 0030              10065mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F40  6000 0006              10066mmm         BRA     DONE_810
00005F44  0601 0037              10067mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F48  4E71                   10068mmm DONE_810: NOP
00005F4A                         10069mmm         ENDM
00005F4A  4E4F                   10070mm         TRAP    #15         ; EXECUTE OUTPUT
00005F4C                         10071mm         
00005F4C  3212                   10072mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F4E  E149                   10073mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F50  E949                   10074mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F52  E049                   10075mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F54  E849                   10076mm         LSR.W   #4, D1      
00005F56                         10077mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F56  0C01 0009              10078mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F5A  6E00 000A              10079mmm         BGT     ALPHA_811
00005F5E  0601 0030              10080mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F62  6000 0006              10081mmm         BRA     DONE_811
00005F66  0601 0037              10082mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F6A  4E71                   10083mmm DONE_811: NOP
00005F6C                         10084mmm         ENDM
00005F6C  4E4F                   10085mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F6E                         10086mm         ENDM 
00005F6E  3605                   10087m         MOVE.W  D5, D3
00005F70  6000 01B0              10088m         BRA     COMPLETE_766 
00005F74                         10089m ADRABSOLUTEW_766:     
00005F74  361A                   10090m         MOVE.W  (A2)+, D3
00005F76                         10091mm         PRINTSIGN
00005F76  103C 0006              10092mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F7A  323C 0024              10093mm         MOVE.W  #36, D1     ; AN = SIGN
00005F7E  4E4F                   10094mm         TRAP    #15         ; OUTPUT = SIGN
00005F80                         10095mm         ENDM
00005F80                         10096mm         ADROUT
00005F80  103C 0006              10097mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005F84  3212                   10098mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F86  E049                   10099mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F88  E849                   10100mm         LSR.W   #4, D1      
00005F8A                         10101mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F8A  0C01 0009              10102mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F8E  6E00 000A              10103mmm         BGT     ALPHA_814
00005F92  0601 0030              10104mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F96  6000 0006              10105mmm         BRA     DONE_814
00005F9A  0601 0037              10106mmm ALPHA_814: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F9E  4E71                   10107mmm DONE_814: NOP
00005FA0                         10108mmm         ENDM
00005FA0  4E4F                   10109mm         TRAP    #15         ; EXECUTE OUTPUT
00005FA2                         10110mm         
00005FA2  3212                   10111mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FA4  E949                   10112mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005FA6  E049                   10113mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FA8  E849                   10114mm         LSR.W   #4, D1      
00005FAA                         10115mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FAA  0C01 0009              10116mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FAE  6E00 000A              10117mmm         BGT     ALPHA_815
00005FB2  0601 0030              10118mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FB6  6000 0006              10119mmm         BRA     DONE_815
00005FBA  0601 0037              10120mmm ALPHA_815: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FBE  4E71                   10121mmm DONE_815: NOP
00005FC0                         10122mmm         ENDM
00005FC0  4E4F                   10123mm         TRAP    #15         ; EXECUTE OUTPUT
00005FC2                         10124mm         
00005FC2  3212                   10125mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FC4  E149                   10126mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FC6  E049                   10127mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FC8  E849                   10128mm         LSR.W   #4, D1      
00005FCA                         10129mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FCA  0C01 0009              10130mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FCE  6E00 000A              10131mmm         BGT     ALPHA_816
00005FD2  0601 0030              10132mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FD6  6000 0006              10133mmm         BRA     DONE_816
00005FDA  0601 0037              10134mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FDE  4E71                   10135mmm DONE_816: NOP
00005FE0                         10136mmm         ENDM
00005FE0  4E4F                   10137mm         TRAP    #15         ; EXECUTE OUTPUT
00005FE2                         10138mm         
00005FE2  3212                   10139mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FE4  E149                   10140mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FE6  E949                   10141mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005FE8  E049                   10142mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FEA  E849                   10143mm         LSR.W   #4, D1      
00005FEC                         10144mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FEC  0C01 0009              10145mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FF0  6E00 000A              10146mmm         BGT     ALPHA_817
00005FF4  0601 0030              10147mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FF8  6000 0006              10148mmm         BRA     DONE_817
00005FFC  0601 0037              10149mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006000  4E71                   10150mmm DONE_817: NOP
00006002                         10151mmm         ENDM
00006002  4E4F                   10152mm         TRAP    #15         ; EXECUTE OUTPUT       
00006004                         10153mm         ENDM 
00006004  3605                   10154m         MOVE.W  D5, D3
00006006  6000 011A              10155m         BRA     COMPLETE_766  
0000600A                         10156m ADRABSOLUTEL_766:  
0000600A  361A                   10157m         MOVE.W  (A2)+, D3
0000600C                         10158mm         PRINTSIGN
0000600C  103C 0006              10159mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006010  323C 0024              10160mm         MOVE.W  #36, D1     ; AN = SIGN
00006014  4E4F                   10161mm         TRAP    #15         ; OUTPUT = SIGN
00006016                         10162mm         ENDM
00006016                         10163mm         ADROUT 
00006016  103C 0006              10164mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000601A  3212                   10165mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000601C  E049                   10166mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000601E  E849                   10167mm         LSR.W   #4, D1      
00006020                         10168mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006020  0C01 0009              10169mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006024  6E00 000A              10170mmm         BGT     ALPHA_820
00006028  0601 0030              10171mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000602C  6000 0006              10172mmm         BRA     DONE_820
00006030  0601 0037              10173mmm ALPHA_820: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006034  4E71                   10174mmm DONE_820: NOP
00006036                         10175mmm         ENDM
00006036  4E4F                   10176mm         TRAP    #15         ; EXECUTE OUTPUT
00006038                         10177mm         
00006038  3212                   10178mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000603A  E949                   10179mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000603C  E049                   10180mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000603E  E849                   10181mm         LSR.W   #4, D1      
00006040                         10182mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006040  0C01 0009              10183mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006044  6E00 000A              10184mmm         BGT     ALPHA_821
00006048  0601 0030              10185mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000604C  6000 0006              10186mmm         BRA     DONE_821
00006050  0601 0037              10187mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006054  4E71                   10188mmm DONE_821: NOP
00006056                         10189mmm         ENDM
00006056  4E4F                   10190mm         TRAP    #15         ; EXECUTE OUTPUT
00006058                         10191mm         
00006058  3212                   10192mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000605A  E149                   10193mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000605C  E049                   10194mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000605E  E849                   10195mm         LSR.W   #4, D1      
00006060                         10196mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006060  0C01 0009              10197mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006064  6E00 000A              10198mmm         BGT     ALPHA_822
00006068  0601 0030              10199mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000606C  6000 0006              10200mmm         BRA     DONE_822
00006070  0601 0037              10201mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006074  4E71                   10202mmm DONE_822: NOP
00006076                         10203mmm         ENDM
00006076  4E4F                   10204mm         TRAP    #15         ; EXECUTE OUTPUT
00006078                         10205mm         
00006078  3212                   10206mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000607A  E149                   10207mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000607C  E949                   10208mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000607E  E049                   10209mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006080  E849                   10210mm         LSR.W   #4, D1      
00006082                         10211mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006082  0C01 0009              10212mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006086  6E00 000A              10213mmm         BGT     ALPHA_823
0000608A  0601 0030              10214mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000608E  6000 0006              10215mmm         BRA     DONE_823
00006092  0601 0037              10216mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006096  4E71                   10217mmm DONE_823: NOP
00006098                         10218mmm         ENDM
00006098  4E4F                   10219mm         TRAP    #15         ; EXECUTE OUTPUT       
0000609A                         10220mm         ENDM 
0000609A  361A                   10221m         MOVE.W  (A2)+, D3
0000609C                         10222mm         ADROUT
0000609C  103C 0006              10223mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000060A0  3212                   10224mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060A2  E049                   10225mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060A4  E849                   10226mm         LSR.W   #4, D1      
000060A6                         10227mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060A6  0C01 0009              10228mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060AA  6E00 000A              10229mmm         BGT     ALPHA_825
000060AE  0601 0030              10230mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060B2  6000 0006              10231mmm         BRA     DONE_825
000060B6  0601 0037              10232mmm ALPHA_825: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060BA  4E71                   10233mmm DONE_825: NOP
000060BC                         10234mmm         ENDM
000060BC  4E4F                   10235mm         TRAP    #15         ; EXECUTE OUTPUT
000060BE                         10236mm         
000060BE  3212                   10237mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060C0  E949                   10238mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000060C2  E049                   10239mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060C4  E849                   10240mm         LSR.W   #4, D1      
000060C6                         10241mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060C6  0C01 0009              10242mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060CA  6E00 000A              10243mmm         BGT     ALPHA_826
000060CE  0601 0030              10244mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060D2  6000 0006              10245mmm         BRA     DONE_826
000060D6  0601 0037              10246mmm ALPHA_826: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060DA  4E71                   10247mmm DONE_826: NOP
000060DC                         10248mmm         ENDM
000060DC  4E4F                   10249mm         TRAP    #15         ; EXECUTE OUTPUT
000060DE                         10250mm         
000060DE  3212                   10251mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000060E0  E149                   10252mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000060E2  E049                   10253mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000060E4  E849                   10254mm         LSR.W   #4, D1      
000060E6                         10255mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000060E6  0C01 0009              10256mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000060EA  6E00 000A              10257mmm         BGT     ALPHA_827
000060EE  0601 0030              10258mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000060F2  6000 0006              10259mmm         BRA     DONE_827
000060F6  0601 0037              10260mmm ALPHA_827: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000060FA  4E71                   10261mmm DONE_827: NOP
000060FC                         10262mmm         ENDM
000060FC  4E4F                   10263mm         TRAP    #15         ; EXECUTE OUTPUT
000060FE                         10264mm         
000060FE  3212                   10265mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006100  E149                   10266mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006102  E949                   10267mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006104  E049                   10268mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006106  E849                   10269mm         LSR.W   #4, D1      
00006108                         10270mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006108  0C01 0009              10271mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000610C  6E00 000A              10272mmm         BGT     ALPHA_828
00006110  0601 0030              10273mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006114  6000 0006              10274mmm         BRA     DONE_828
00006118  0601 0037              10275mmm ALPHA_828: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000611C  4E71                   10276mmm DONE_828: NOP
0000611E                         10277mmm         ENDM
0000611E  4E4F                   10278mm         TRAP    #15         ; EXECUTE OUTPUT       
00006120                         10279mm         ENDM 
00006120  3605                   10280m         MOVE.W  D5, D3
00006122                         10281m 
00006122                         10282m COMPLETE_766:  ; OPCODE HAS BEEN VERIFIED
00006122                         10283m         ENDM
00006122  4E75                   10284          RTS                 ; Return from decodeNOT subroutine
00006124                         10285  
00006124                         10286  ; ------------------------------------------------------------
00006124                         10287  ; 11a. "decodeLSx_M" subroutine
00006124                         10288  ; Gary
00006124                         10289  ;
00006124                         10290  ; Decodes Logical Shifts by checking if its memory or registers
00006124                         10291  ; it receives then prints. 
00006124                         10292  ; ------------------------------------------------------------
00006124                         10293  decodeLSx_M:
00006124                         10294m         verifyOpcode    pLSx_M, (A2)
00006124  43F8 01A5              10295m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00006128  3612                   10296m         MOVE.W  (A2), D3      ; INPUT VALUE
0000612A  123C 000F              10297m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000612E                         10298m         
0000612E                         10299m LOOP_829: 
0000612E  0C11 0030              10300m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006132  6700 000E              10301m         BEQ     CHECKFOR0_829
00006136  0C11 0031              10302m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000613A  6700 0010              10303m         BEQ     CHECKFOR1_829
0000613E  6000 0012              10304m         BRA     NEXT_829      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006142                         10305m         
00006142                         10306m CHECKFOR0_829: 
00006142  0303                   10307m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006144  6600 1634              10308m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006148  6000 0008              10309m         BRA     NEXT_829
0000614C                         10310m 
0000614C                         10311m CHECKFOR1_829:
0000614C  0303                   10312m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000614E  6700 162A              10313m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006152                         10314m 
00006152                         10315m NEXT_829: 
00006152  B23C 0000              10316m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006156  6700 0008              10317m         BEQ     COMPLETE_829  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000615A  5301                   10318m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000615C  1819                   10319m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000615E  60CE                   10320m         BRA     LOOP_829      ; BEGIN LOOP AGAIN
00006160                         10321m 
00006160                         10322m COMPLETE_829:  ; OPCODE HAS BEEN VERIFIED
00006160                         10323m         ENDM
00006160  0803 0008              10324          BTST    #$08, D3     ; Check the 8th bit
00006164  6700 0010              10325          BEQ     LSR_M
00006168  43F8 0098              10326  LSL_M:  LEA     oLSL, A1
0000616C  103C 000E              10327          MOVE.B  #14,D0          
00006170  4E4F                   10328          TRAP    #15 
00006172  6000 000C              10329          BRA     reg_M        
00006176                         10330    
00006176  43F8 009C              10331  LSR_M:  LEA     oLSR, A1
0000617A  103C 000E              10332          MOVE.B  #14,D0          
0000617E  4E4F                   10333          TRAP    #15      
00006180                         10334m reg_M:  printSizeLow       (A2) 
00006180  3612                   10335m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006182  4247                   10336m         CLR     D7   
00006184                         10337m CHECKFORB_830: 
00006184  0803 0006              10338m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006188  6600 0018              10339m         BNE     CHECKFORW_830  ; IF NOT GO TO WORD SIZE
0000618C  0803 0007              10340m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006190  6600 001E              10341m         BNE     CHECKFORL_830 ; IF NOT GO TO LONGWORD SIZE
00006194  43F8 00C0              10342m         LEA     OBSIZE, A1     
00006198  103C 000E              10343m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000619C  4E4F                   10344m         TRAP    #15
0000619E  6000 001E              10345m         BRA     COMPLETE_830      
000061A2                         10346m CHECKFORW_830: 
000061A2  43F8 00C4              10347m         LEA     OWSIZE, A1     
000061A6  103C 000E              10348m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000061AA  4E4F                   10349m         TRAP    #15
000061AC  6000 0010              10350m         BRA     COMPLETE_830  
000061B0                         10351m CHECKFORL_830:
000061B0  1E3C 0001              10352m         MOVE.B  #$1, D7
000061B4  43F8 00C8              10353m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000061B8  103C 000E              10354m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061BC  4E4F                   10355m         TRAP    #15
000061BE                         10356m COMPLETE_830:  ; SIZE HAS BEEN PRINTED
000061BE                         10357m         ENDM
000061BE                         10358m         printCount       (A2)
000061BE  3212                   10359m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000061C0  E949                   10360m         LSL     #$04, D1
000061C2  E049                   10361m         LSR     #$08, D1
000061C4  EA49                   10362m         LSR     #$05, D1
000061C6  43F8 00DB              10363m         LEA     OHASH, A1     
000061CA  103C 000E              10364m         MOVE.B  #14,D0          
000061CE  4E4F                   10365m         TRAP    #15
000061D0  103C 0003              10366m         MOVE.B  #3,D0          
000061D4  4E4F                   10367m         TRAP    #15
000061D6                         10368m         ENDM
000061D6                         10369m         printComma
000061D6  43F8 00D4              10370m         LEA     OCOMMA, A1     
000061DA  103C 000E              10371m         MOVE.B  #14,D0          
000061DE  4E4F                   10372m         TRAP    #15
000061E0                         10373m         ENDM
000061E0                         10374m         printDnSrc     (A2)        
000061E0  4281                   10375m         CLR.L   D1
000061E2  3212                   10376m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000061E4  E149                   10377m         LSL     #$08, D1
000061E6  EB49                   10378m         LSL     #$05, D1
000061E8  E049                   10379m         LSR     #$08, D1
000061EA  EA49                   10380m         LSR     #$05, D1
000061EC  43F8 00CC              10381m         LEA     ODN, A1     
000061F0  103C 000E              10382m         MOVE.B  #14,D0          
000061F4  4E4F                   10383m         TRAP    #15
000061F6  103C 0003              10384m         MOVE.B  #3,D0          
000061FA  4E4F                   10385m         TRAP    #15
000061FC                         10386m         ENDM
000061FC  4E75                   10387          RTS                 ; Return from decodeLSx_M subroutine
000061FE                         10388  
000061FE                         10389  
000061FE                         10390  ; ------------------------------------------------------------
000061FE                         10391  ; 11b. "decodeLSx_R" subroutine
000061FE                         10392  ; Gary
000061FE                         10393  ;
000061FE                         10394  ; Decodes Logical Shifts by checking if its memory or registers
000061FE                         10395  ; it receives then prints. 
000061FE                         10396  ; ------------------------------------------------------------
000061FE                         10397  decodeLSx_R:
000061FE                         10398m         verifyOpcode    pLSx_R, (A2)
000061FE  43F8 01B6              10399m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
00006202  3612                   10400m         MOVE.W  (A2), D3      ; INPUT VALUE
00006204  123C 000F              10401m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006208                         10402m         
00006208                         10403m LOOP_834: 
00006208  0C11 0030              10404m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000620C  6700 000E              10405m         BEQ     CHECKFOR0_834
00006210  0C11 0031              10406m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006214  6700 0010              10407m         BEQ     CHECKFOR1_834
00006218  6000 0012              10408m         BRA     NEXT_834      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000621C                         10409m         
0000621C                         10410m CHECKFOR0_834: 
0000621C  0303                   10411m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000621E  6600 155A              10412m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006222  6000 0008              10413m         BRA     NEXT_834
00006226                         10414m 
00006226                         10415m CHECKFOR1_834:
00006226  0303                   10416m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006228  6700 1550              10417m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000622C                         10418m 
0000622C                         10419m NEXT_834: 
0000622C  B23C 0000              10420m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006230  6700 0008              10421m         BEQ     COMPLETE_834  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006234  5301                   10422m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006236  1819                   10423m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006238  60CE                   10424m         BRA     LOOP_834      ; BEGIN LOOP AGAIN
0000623A                         10425m 
0000623A                         10426m COMPLETE_834:  ; OPCODE HAS BEEN VERIFIED
0000623A                         10427m         ENDM
0000623A  0803 0008              10428          BTST    #$08, D3     ; Check the 8th bit
0000623E  6700 0010              10429          BEQ     LSR_R
00006242  43F8 0098              10430  LSL_R:  LEA     oLSL, A1
00006246  103C 000E              10431          MOVE.B  #14,D0          
0000624A  4E4F                   10432          TRAP    #15 
0000624C  6000 000C              10433          BRA     reg_R       
00006250                         10434    
00006250  43F8 009C              10435  LSR_R:  LEA     oLSR, A1
00006254  103C 000E              10436          MOVE.B  #14,D0          
00006258  4E4F                   10437          TRAP    #15      
0000625A                         10438m reg_R:  printSizeLow       (A2)
0000625A  3612                   10439m         MOVE.W  (A2), D3      ; INPUT VALUE   
0000625C  4247                   10440m         CLR     D7   
0000625E                         10441m CHECKFORB_835: 
0000625E  0803 0006              10442m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006262  6600 0018              10443m         BNE     CHECKFORW_835  ; IF NOT GO TO WORD SIZE
00006266  0803 0007              10444m         BTST    #7, D3      ; CHECK IF CONTAINS 0
0000626A  6600 001E              10445m         BNE     CHECKFORL_835 ; IF NOT GO TO LONGWORD SIZE
0000626E  43F8 00C0              10446m         LEA     OBSIZE, A1     
00006272  103C 000E              10447m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006276  4E4F                   10448m         TRAP    #15
00006278  6000 001E              10449m         BRA     COMPLETE_835      
0000627C                         10450m CHECKFORW_835: 
0000627C  43F8 00C4              10451m         LEA     OWSIZE, A1     
00006280  103C 000E              10452m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006284  4E4F                   10453m         TRAP    #15
00006286  6000 0010              10454m         BRA     COMPLETE_835  
0000628A                         10455m CHECKFORL_835:
0000628A  1E3C 0001              10456m         MOVE.B  #$1, D7
0000628E  43F8 00C8              10457m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006292  103C 000E              10458m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006296  4E4F                   10459m         TRAP    #15
00006298                         10460m COMPLETE_835:  ; SIZE HAS BEEN PRINTED
00006298                         10461m         ENDM
00006298                         10462m         printDnDest    (A2)
00006298  3212                   10463m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000629A  E949                   10464m         LSL     #$04, D1
0000629C  E049                   10465m         LSR     #$08, D1
0000629E  EA49                   10466m         LSR     #$05, D1
000062A0  43F8 00CC              10467m         LEA     ODN, A1     
000062A4  103C 000E              10468m         MOVE.B  #14,D0          
000062A8  4E4F                   10469m         TRAP    #15
000062AA  103C 0003              10470m         MOVE.B  #3,D0          
000062AE  4E4F                   10471m         TRAP    #15
000062B0                         10472m         ENDM
000062B0                         10473m         printComma
000062B0  43F8 00D4              10474m         LEA     OCOMMA, A1     
000062B4  103C 000E              10475m         MOVE.B  #14,D0          
000062B8  4E4F                   10476m         TRAP    #15
000062BA                         10477m         ENDM
000062BA                         10478m         printDnSrc     (A2)
000062BA  4281                   10479m         CLR.L   D1
000062BC  3212                   10480m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000062BE  E149                   10481m         LSL     #$08, D1
000062C0  EB49                   10482m         LSL     #$05, D1
000062C2  E049                   10483m         LSR     #$08, D1
000062C4  EA49                   10484m         LSR     #$05, D1
000062C6  43F8 00CC              10485m         LEA     ODN, A1     
000062CA  103C 000E              10486m         MOVE.B  #14,D0          
000062CE  4E4F                   10487m         TRAP    #15
000062D0  103C 0003              10488m         MOVE.B  #3,D0          
000062D4  4E4F                   10489m         TRAP    #15
000062D6                         10490m         ENDM
000062D6  4E75                   10491          RTS                 ; Return from ddecodeLSx_R subroutine
000062D8                         10492          
000062D8                         10493  ; ------------------------------------------------------------
000062D8                         10494  ; 12a. "decodeASx_M" subroutine
000062D8                         10495  ; Gary
000062D8                         10496  ;
000062D8                         10497  ; Decodes Arithmetical Shifts by checking if its memory or registers
000062D8                         10498  ; it receives then prints. 
000062D8                         10499  ; ------------------------------------------------------------
000062D8                         10500  decodeASx_M:
000062D8                         10501m         verifyOpcode    pASx_M, (A2)
000062D8  43F8 01D8              10502m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
000062DC  3612                   10503m         MOVE.W  (A2), D3      ; INPUT VALUE
000062DE  123C 000F              10504m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000062E2                         10505m         
000062E2                         10506m LOOP_839: 
000062E2  0C11 0030              10507m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000062E6  6700 000E              10508m         BEQ     CHECKFOR0_839
000062EA  0C11 0031              10509m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000062EE  6700 0010              10510m         BEQ     CHECKFOR1_839
000062F2  6000 0012              10511m         BRA     NEXT_839      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000062F6                         10512m         
000062F6                         10513m CHECKFOR0_839: 
000062F6  0303                   10514m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000062F8  6600 1480              10515m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000062FC  6000 0008              10516m         BRA     NEXT_839
00006300                         10517m 
00006300                         10518m CHECKFOR1_839:
00006300  0303                   10519m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006302  6700 1476              10520m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006306                         10521m 
00006306                         10522m NEXT_839: 
00006306  B23C 0000              10523m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000630A  6700 0008              10524m         BEQ     COMPLETE_839  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000630E  5301                   10525m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006310  1819                   10526m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006312  60CE                   10527m         BRA     LOOP_839      ; BEGIN LOOP AGAIN
00006314                         10528m 
00006314                         10529m COMPLETE_839:  ; OPCODE HAS BEEN VERIFIED
00006314                         10530m         ENDM
00006314  0803 0008              10531          BTST    #$08, D3     ; Check the 8th bit
00006318  6700 0010              10532          BEQ     ASR_M
0000631C  43F8 00A0              10533  ASL_M:  LEA     oASL, A1
00006320  103C 000E              10534          MOVE.B  #14,D0          
00006324  4E4F                   10535          TRAP    #15 
00006326  6000 000C              10536          BRA     Areg_M        
0000632A                         10537    
0000632A  43F8 00A4              10538  ASR_M:  LEA     oASR, A1
0000632E  103C 000E              10539          MOVE.B  #14,D0          
00006332  4E4F                   10540          TRAP    #15      
00006334                         10541m Areg_M: printSizeLow       (A2) 
00006334  3612                   10542m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006336  4247                   10543m         CLR     D7   
00006338                         10544m CHECKFORB_840: 
00006338  0803 0006              10545m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000633C  6600 0018              10546m         BNE     CHECKFORW_840  ; IF NOT GO TO WORD SIZE
00006340  0803 0007              10547m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006344  6600 001E              10548m         BNE     CHECKFORL_840 ; IF NOT GO TO LONGWORD SIZE
00006348  43F8 00C0              10549m         LEA     OBSIZE, A1     
0000634C  103C 000E              10550m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006350  4E4F                   10551m         TRAP    #15
00006352  6000 001E              10552m         BRA     COMPLETE_840      
00006356                         10553m CHECKFORW_840: 
00006356  43F8 00C4              10554m         LEA     OWSIZE, A1     
0000635A  103C 000E              10555m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000635E  4E4F                   10556m         TRAP    #15
00006360  6000 0010              10557m         BRA     COMPLETE_840  
00006364                         10558m CHECKFORL_840:
00006364  1E3C 0001              10559m         MOVE.B  #$1, D7
00006368  43F8 00C8              10560m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000636C  103C 000E              10561m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006370  4E4F                   10562m         TRAP    #15
00006372                         10563m COMPLETE_840:  ; SIZE HAS BEEN PRINTED
00006372                         10564m         ENDM
00006372                         10565m         printCount       (A2)
00006372  3212                   10566m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006374  E949                   10567m         LSL     #$04, D1
00006376  E049                   10568m         LSR     #$08, D1
00006378  EA49                   10569m         LSR     #$05, D1
0000637A  43F8 00DB              10570m         LEA     OHASH, A1     
0000637E  103C 000E              10571m         MOVE.B  #14,D0          
00006382  4E4F                   10572m         TRAP    #15
00006384  103C 0003              10573m         MOVE.B  #3,D0          
00006388  4E4F                   10574m         TRAP    #15
0000638A                         10575m         ENDM
0000638A                         10576m         printComma
0000638A  43F8 00D4              10577m         LEA     OCOMMA, A1     
0000638E  103C 000E              10578m         MOVE.B  #14,D0          
00006392  4E4F                   10579m         TRAP    #15
00006394                         10580m         ENDM
00006394                         10581m         printDnSrc     (A2)          
00006394  4281                   10582m         CLR.L   D1
00006396  3212                   10583m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006398  E149                   10584m         LSL     #$08, D1
0000639A  EB49                   10585m         LSL     #$05, D1
0000639C  E049                   10586m         LSR     #$08, D1
0000639E  EA49                   10587m         LSR     #$05, D1
000063A0  43F8 00CC              10588m         LEA     ODN, A1     
000063A4  103C 000E              10589m         MOVE.B  #14,D0          
000063A8  4E4F                   10590m         TRAP    #15
000063AA  103C 0003              10591m         MOVE.B  #3,D0          
000063AE  4E4F                   10592m         TRAP    #15
000063B0                         10593m         ENDM
000063B0  4E75                   10594          RTS                 ; Return from decodeASx_M subroutine
000063B2                         10595  
000063B2                         10596  
000063B2                         10597  ; ------------------------------------------------------------
000063B2                         10598  ; 12b. "decodeASx_R" subroutine
000063B2                         10599  ; Gary
000063B2                         10600  ;
000063B2                         10601  ; Decodes Arithmetical Shifts by checking if its memory or registers
000063B2                         10602  ; it receives then prints. 
000063B2                         10603  ; ------------------------------------------------------------
000063B2                         10604  decodeASx_R:
000063B2                         10605m         verifyOpcode    pASx_R, (A2)
000063B2  43F8 01E9              10606m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
000063B6  3612                   10607m         MOVE.W  (A2), D3      ; INPUT VALUE
000063B8  123C 000F              10608m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063BC                         10609m         
000063BC                         10610m LOOP_844: 
000063BC  0C11 0030              10611m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063C0  6700 000E              10612m         BEQ     CHECKFOR0_844
000063C4  0C11 0031              10613m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063C8  6700 0010              10614m         BEQ     CHECKFOR1_844
000063CC  6000 0012              10615m         BRA     NEXT_844      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063D0                         10616m         
000063D0                         10617m CHECKFOR0_844: 
000063D0  0303                   10618m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063D2  6600 13A6              10619m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063D6  6000 0008              10620m         BRA     NEXT_844
000063DA                         10621m 
000063DA                         10622m CHECKFOR1_844:
000063DA  0303                   10623m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000063DC  6700 139C              10624m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063E0                         10625m 
000063E0                         10626m NEXT_844: 
000063E0  B23C 0000              10627m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063E4  6700 0008              10628m         BEQ     COMPLETE_844  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063E8  5301                   10629m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063EA  1819                   10630m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063EC  60CE                   10631m         BRA     LOOP_844      ; BEGIN LOOP AGAIN
000063EE                         10632m 
000063EE                         10633m COMPLETE_844:  ; OPCODE HAS BEEN VERIFIED
000063EE                         10634m         ENDM
000063EE  0803 0008              10635          BTST    #$08, D3     ; Check the 8th bit
000063F2  6700 0010              10636          BEQ     ASR_R
000063F6  43F8 00A0              10637  ASL_R:  LEA     oASL, A1
000063FA  103C 000E              10638          MOVE.B  #14,D0          
000063FE  4E4F                   10639          TRAP    #15 
00006400  6000 000C              10640          BRA     Areg_R       
00006404                         10641    
00006404  43F8 00A4              10642  ASR_R:  LEA     oASR, A1
00006408  103C 000E              10643          MOVE.B  #14,D0          
0000640C  4E4F                   10644          TRAP    #15      
0000640E                         10645m Areg_R: printSizeLow       (A2)
0000640E  3612                   10646m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006410  4247                   10647m         CLR     D7   
00006412                         10648m CHECKFORB_845: 
00006412  0803 0006              10649m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006416  6600 0018              10650m         BNE     CHECKFORW_845  ; IF NOT GO TO WORD SIZE
0000641A  0803 0007              10651m         BTST    #7, D3      ; CHECK IF CONTAINS 0
0000641E  6600 001E              10652m         BNE     CHECKFORL_845 ; IF NOT GO TO LONGWORD SIZE
00006422  43F8 00C0              10653m         LEA     OBSIZE, A1     
00006426  103C 000E              10654m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000642A  4E4F                   10655m         TRAP    #15
0000642C  6000 001E              10656m         BRA     COMPLETE_845      
00006430                         10657m CHECKFORW_845: 
00006430  43F8 00C4              10658m         LEA     OWSIZE, A1     
00006434  103C 000E              10659m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006438  4E4F                   10660m         TRAP    #15
0000643A  6000 0010              10661m         BRA     COMPLETE_845  
0000643E                         10662m CHECKFORL_845:
0000643E  1E3C 0001              10663m         MOVE.B  #$1, D7
00006442  43F8 00C8              10664m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006446  103C 000E              10665m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000644A  4E4F                   10666m         TRAP    #15
0000644C                         10667m COMPLETE_845:  ; SIZE HAS BEEN PRINTED
0000644C                         10668m         ENDM
0000644C                         10669m         printDnDest    (A2)
0000644C  3212                   10670m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000644E  E949                   10671m         LSL     #$04, D1
00006450  E049                   10672m         LSR     #$08, D1
00006452  EA49                   10673m         LSR     #$05, D1
00006454  43F8 00CC              10674m         LEA     ODN, A1     
00006458  103C 000E              10675m         MOVE.B  #14,D0          
0000645C  4E4F                   10676m         TRAP    #15
0000645E  103C 0003              10677m         MOVE.B  #3,D0          
00006462  4E4F                   10678m         TRAP    #15
00006464                         10679m         ENDM
00006464                         10680m         printComma
00006464  43F8 00D4              10681m         LEA     OCOMMA, A1     
00006468  103C 000E              10682m         MOVE.B  #14,D0          
0000646C  4E4F                   10683m         TRAP    #15
0000646E                         10684m         ENDM
0000646E                         10685m         printDnSrc     (A2)
0000646E  4281                   10686m         CLR.L   D1
00006470  3212                   10687m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006472  E149                   10688m         LSL     #$08, D1
00006474  EB49                   10689m         LSL     #$05, D1
00006476  E049                   10690m         LSR     #$08, D1
00006478  EA49                   10691m         LSR     #$05, D1
0000647A  43F8 00CC              10692m         LEA     ODN, A1     
0000647E  103C 000E              10693m         MOVE.B  #14,D0          
00006482  4E4F                   10694m         TRAP    #15
00006484  103C 0003              10695m         MOVE.B  #3,D0          
00006488  4E4F                   10696m         TRAP    #15
0000648A                         10697m         ENDM
0000648A  4E75                   10698          RTS                 ; Return from decodeASx_R subroutine
0000648C                         10699          
0000648C                         10700          ; ------------------------------------------------------------
0000648C                         10701  
0000648C                         10702  
0000648C                         10703  ; ------------------------------------------------------------
0000648C                         10704  ; 13a. "decodeBEQ" subroutine
0000648C                         10705  ; Gary
0000648C                         10706  ;
0000648C                         10707  ; Decodes Branching by verifying then decoding displacement.
0000648C                         10708  ; ------------------------------------------------------------
0000648C                         10709  decodeBEQ:
0000648C                         10710m         verifyOpcode    pBEQ, (A2)
0000648C  43F8 020B              10711m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
00006490  3612                   10712m         MOVE.W  (A2), D3      ; INPUT VALUE
00006492  123C 000F              10713m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006496                         10714m         
00006496                         10715m LOOP_849: 
00006496  0C11 0030              10716m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000649A  6700 000E              10717m         BEQ     CHECKFOR0_849
0000649E  0C11 0031              10718m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000064A2  6700 0010              10719m         BEQ     CHECKFOR1_849
000064A6  6000 0012              10720m         BRA     NEXT_849      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000064AA                         10721m         
000064AA                         10722m CHECKFOR0_849: 
000064AA  0303                   10723m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000064AC  6600 12CC              10724m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000064B0  6000 0008              10725m         BRA     NEXT_849
000064B4                         10726m 
000064B4                         10727m CHECKFOR1_849:
000064B4  0303                   10728m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000064B6  6700 12C2              10729m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000064BA                         10730m 
000064BA                         10731m NEXT_849: 
000064BA  B23C 0000              10732m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000064BE  6700 0008              10733m         BEQ     COMPLETE_849  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000064C2  5301                   10734m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000064C4  1819                   10735m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000064C6  60CE                   10736m         BRA     LOOP_849      ; BEGIN LOOP AGAIN
000064C8                         10737m 
000064C8                         10738m COMPLETE_849:  ; OPCODE HAS BEEN VERIFIED
000064C8                         10739m         ENDM
000064C8  43F8 00A8              10740          LEA     oBEQ, A1     
000064CC  103C 000E              10741          MOVE.B  #14,D0          
000064D0  4E4F                   10742          TRAP    #15
000064D2                         10743m         space
000064D2  43F8 00DD              10744m         LEA     OBLANK, A1
000064D6  103C 000E              10745m         MOVE.B  #14,D0          
000064DA  4E4F                   10746m         TRAP    #15
000064DC                         10747m         ENDM
000064DC                         10748m         printSign
000064DC  103C 0006              10749m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000064E0  323C 0024              10750m         MOVE.W  #36, D1     ; AN = SIGN
000064E4  4E4F                   10751m         TRAP    #15         ; OUTPUT = SIGN
000064E6                         10752m         ENDM
000064E6                         10753m         decodeDisplacement (A2)
000064E6  3612                   10754m         MOVE.W (A2), D3
000064E8  4241                   10755m         CLR     D1
000064EA  3E0A                   10756m         MOVE.W  A2, D7
000064EC  B638 0000              10757m         CMP.B   $00, D3
000064F0  6700 009E              10758m         BEQ     SBIT_852
000064F4  B638 00FF              10759m         CMP.B   $FF, D3
000064F8  6700 0128              10760m         BEQ     TBIT_852
000064FC                         10761m EBIT_852:   
000064FC  E14B                   10762m         LSL     #08, D3
000064FE  E04B                   10763m         LSR     #08, D3
00006500  48C3                   10764m         EXT.L   D3
00006502  DE83                   10765m         ADD.L   D3, D7
00006504  5487                   10766m         ADD.L   #2, D7
00006506                         10767mm         ADROUTINPUT D7     
00006506  2E07                   10768mm         MOVE.L   D7, D7
00006508  103C 0006              10769mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000650C  3207                   10770mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
0000650E  E049                   10771mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006510  E849                   10772mm         LSR.W   #4, D1      
00006512                         10773mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006512  0C01 0009              10774mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006516  6E00 000A              10775mmm         BGT     ALPHA_854
0000651A  0601 0030              10776mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000651E  6000 0006              10777mmm         BRA     DONE_854
00006522  0601 0037              10778mmm ALPHA_854: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006526  4E71                   10779mmm DONE_854: NOP
00006528                         10780mmm         ENDM
00006528  4E4F                   10781mm         TRAP    #15         ; EXECUTE OUTPUT
0000652A                         10782mm         
0000652A  3207                   10783mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
0000652C  E949                   10784mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000652E  E049                   10785mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006530  E849                   10786mm         LSR.W   #4, D1      
00006532                         10787mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006532  0C01 0009              10788mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006536  6E00 000A              10789mmm         BGT     ALPHA_855
0000653A  0601 0030              10790mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000653E  6000 0006              10791mmm         BRA     DONE_855
00006542  0601 0037              10792mmm ALPHA_855: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006546  4E71                   10793mmm DONE_855: NOP
00006548                         10794mmm         ENDM
00006548  4E4F                   10795mm         TRAP    #15         ; EXECUTE OUTPUT
0000654A                         10796mm         
0000654A  3207                   10797mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
0000654C  E149                   10798mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000654E  E049                   10799mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006550  E849                   10800mm         LSR.W   #4, D1      
00006552                         10801mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006552  0C01 0009              10802mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006556  6E00 000A              10803mmm         BGT     ALPHA_856
0000655A  0601 0030              10804mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000655E  6000 0006              10805mmm         BRA     DONE_856
00006562  0601 0037              10806mmm ALPHA_856: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006566  4E71                   10807mmm DONE_856: NOP
00006568                         10808mmm         ENDM
00006568  4E4F                   10809mm         TRAP    #15         ; EXECUTE OUTPUT
0000656A                         10810mm         
0000656A  3207                   10811mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
0000656C  E149                   10812mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000656E  E949                   10813mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006570  E049                   10814mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006572  E849                   10815mm         LSR.W   #4, D1      
00006574                         10816mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006574  0C01 0009              10817mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006578  6E00 000A              10818mmm         BGT     ALPHA_857
0000657C  0601 0030              10819mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006580  6000 0006              10820mmm         BRA     DONE_857
00006584  0601 0037              10821mmm ALPHA_857: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006588  4E71                   10822mmm DONE_857: NOP
0000658A                         10823mmm         ENDM
0000658A  4E4F                   10824mm         TRAP    #15         ; EXECUTE OUTPUT       
0000658C                         10825mm         ENDM 
0000658C  6000 0126              10826m         BRA     DECODEDISPLACEMENT_852
00006590                         10827m SBIT_852:  
00006590  361A                   10828m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006592  48C3                   10829m         EXT.L    D3
00006594  DE83                   10830m         ADD.L   D3, D7
00006596  5487                   10831m         ADD.L   #2, D7
00006598                         10832mm         ADROUTINPUT D7
00006598  2E07                   10833mm         MOVE.L   D7, D7
0000659A  103C 0006              10834mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000659E  3207                   10835mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
000065A0  E049                   10836mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000065A2  E849                   10837mm         LSR.W   #4, D1      
000065A4                         10838mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000065A4  0C01 0009              10839mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065A8  6E00 000A              10840mmm         BGT     ALPHA_859
000065AC  0601 0030              10841mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065B0  6000 0006              10842mmm         BRA     DONE_859
000065B4  0601 0037              10843mmm ALPHA_859: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000065B8  4E71                   10844mmm DONE_859: NOP
000065BA                         10845mmm         ENDM
000065BA  4E4F                   10846mm         TRAP    #15         ; EXECUTE OUTPUT
000065BC                         10847mm         
000065BC  3207                   10848mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000065BE  E949                   10849mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000065C0  E049                   10850mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000065C2  E849                   10851mm         LSR.W   #4, D1      
000065C4                         10852mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000065C4  0C01 0009              10853mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065C8  6E00 000A              10854mmm         BGT     ALPHA_860
000065CC  0601 0030              10855mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065D0  6000 0006              10856mmm         BRA     DONE_860
000065D4  0601 0037              10857mmm ALPHA_860: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000065D8  4E71                   10858mmm DONE_860: NOP
000065DA                         10859mmm         ENDM
000065DA  4E4F                   10860mm         TRAP    #15         ; EXECUTE OUTPUT
000065DC                         10861mm         
000065DC  3207                   10862mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
000065DE  E149                   10863mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000065E0  E049                   10864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000065E2  E849                   10865mm         LSR.W   #4, D1      
000065E4                         10866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000065E4  0C01 0009              10867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000065E8  6E00 000A              10868mmm         BGT     ALPHA_861
000065EC  0601 0030              10869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000065F0  6000 0006              10870mmm         BRA     DONE_861
000065F4  0601 0037              10871mmm ALPHA_861: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000065F8  4E71                   10872mmm DONE_861: NOP
000065FA                         10873mmm         ENDM
000065FA  4E4F                   10874mm         TRAP    #15         ; EXECUTE OUTPUT
000065FC                         10875mm         
000065FC  3207                   10876mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000065FE  E149                   10877mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006600  E949                   10878mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006602  E049                   10879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006604  E849                   10880mm         LSR.W   #4, D1      
00006606                         10881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006606  0C01 0009              10882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000660A  6E00 000A              10883mmm         BGT     ALPHA_862
0000660E  0601 0030              10884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006612  6000 0006              10885mmm         BRA     DONE_862
00006616  0601 0037              10886mmm ALPHA_862: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000661A  4E71                   10887mmm DONE_862: NOP
0000661C                         10888mmm         ENDM
0000661C  4E4F                   10889mm         TRAP    #15         ; EXECUTE OUTPUT       
0000661E                         10890mm         ENDM 
0000661E  6000 0094              10891m         BRA     DECODEDISPLACEMENT_852
00006622                         10892m TBIT_852:  
00006622  361A                   10893m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006624  48C3                   10894m         EXT.L   D3
00006626  4843                   10895m         SWAP    D3
00006628  361A                   10896m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
0000662A  DE83                   10897m         ADD.L   D3, D7
0000662C  5487                   10898m         ADD.L   #2, D7
0000662E                         10899mm         ADROUTINPUT D7
0000662E  2E07                   10900mm         MOVE.L   D7, D7
00006630  103C 0006              10901mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006634  3207                   10902mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00006636  E049                   10903mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006638  E849                   10904mm         LSR.W   #4, D1      
0000663A                         10905mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000663A  0C01 0009              10906mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000663E  6E00 000A              10907mmm         BGT     ALPHA_864
00006642  0601 0030              10908mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006646  6000 0006              10909mmm         BRA     DONE_864
0000664A  0601 0037              10910mmm ALPHA_864: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000664E  4E71                   10911mmm DONE_864: NOP
00006650                         10912mmm         ENDM
00006650  4E4F                   10913mm         TRAP    #15         ; EXECUTE OUTPUT
00006652                         10914mm         
00006652  3207                   10915mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006654  E949                   10916mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006656  E049                   10917mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006658  E849                   10918mm         LSR.W   #4, D1      
0000665A                         10919mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000665A  0C01 0009              10920mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000665E  6E00 000A              10921mmm         BGT     ALPHA_865
00006662  0601 0030              10922mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006666  6000 0006              10923mmm         BRA     DONE_865
0000666A  0601 0037              10924mmm ALPHA_865: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000666E  4E71                   10925mmm DONE_865: NOP
00006670                         10926mmm         ENDM
00006670  4E4F                   10927mm         TRAP    #15         ; EXECUTE OUTPUT
00006672                         10928mm         
00006672  3207                   10929mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00006674  E149                   10930mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006676  E049                   10931mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006678  E849                   10932mm         LSR.W   #4, D1      
0000667A                         10933mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000667A  0C01 0009              10934mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000667E  6E00 000A              10935mmm         BGT     ALPHA_866
00006682  0601 0030              10936mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006686  6000 0006              10937mmm         BRA     DONE_866
0000668A  0601 0037              10938mmm ALPHA_866: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000668E  4E71                   10939mmm DONE_866: NOP
00006690                         10940mmm         ENDM
00006690  4E4F                   10941mm         TRAP    #15         ; EXECUTE OUTPUT
00006692                         10942mm         
00006692  3207                   10943mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006694  E149                   10944mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006696  E949                   10945mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006698  E049                   10946mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000669A  E849                   10947mm         LSR.W   #4, D1      
0000669C                         10948mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000669C  0C01 0009              10949mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000066A0  6E00 000A              10950mmm         BGT     ALPHA_867
000066A4  0601 0030              10951mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000066A8  6000 0006              10952mmm         BRA     DONE_867
000066AC  0601 0037              10953mmm ALPHA_867: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000066B0  4E71                   10954mmm DONE_867: NOP
000066B2                         10955mmm         ENDM
000066B2  4E4F                   10956mm         TRAP    #15         ; EXECUTE OUTPUT       
000066B4                         10957mm         ENDM 
000066B4                         10958m DECODEDISPLACEMENT_852:
000066B4                         10959m         ENDM        
000066B4  4E75                   10960          RTS                 ; Return from decodeBEQ subroutine
000066B6                         10961  
000066B6                         10962  
000066B6                         10963  ; ------------------------------------------------------------
000066B6                         10964  ; 13b. "decodeBGE" subroutine
000066B6                         10965  ; Gary
000066B6                         10966  ;
000066B6                         10967  ; Decodes Branching by verifying then decoding displacement.
000066B6                         10968  ; ------------------------------------------------------------
000066B6                         10969  decodeBGE:
000066B6                         10970m         verifyOpcode    pBGE, (A2)
000066B6  43F8 021C              10971m         LEA     PBGE, A1      ; INPUT PATTERN STRING
000066BA  3612                   10972m         MOVE.W  (A2), D3      ; INPUT VALUE
000066BC  123C 000F              10973m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000066C0                         10974m         
000066C0                         10975m LOOP_868: 
000066C0  0C11 0030              10976m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000066C4  6700 000E              10977m         BEQ     CHECKFOR0_868
000066C8  0C11 0031              10978m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000066CC  6700 0010              10979m         BEQ     CHECKFOR1_868
000066D0  6000 0012              10980m         BRA     NEXT_868      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000066D4                         10981m         
000066D4                         10982m CHECKFOR0_868: 
000066D4  0303                   10983m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000066D6  6600 10A2              10984m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000066DA  6000 0008              10985m         BRA     NEXT_868
000066DE                         10986m 
000066DE                         10987m CHECKFOR1_868:
000066DE  0303                   10988m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000066E0  6700 1098              10989m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000066E4                         10990m 
000066E4                         10991m NEXT_868: 
000066E4  B23C 0000              10992m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000066E8  6700 0008              10993m         BEQ     COMPLETE_868  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000066EC  5301                   10994m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000066EE  1819                   10995m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000066F0  60CE                   10996m         BRA     LOOP_868      ; BEGIN LOOP AGAIN
000066F2                         10997m 
000066F2                         10998m COMPLETE_868:  ; OPCODE HAS BEEN VERIFIED
000066F2                         10999m         ENDM
000066F2  43F8 00AC              11000          LEA     oBGE, A1     
000066F6  103C 000E              11001          MOVE.B  #14,D0          
000066FA  4E4F                   11002          TRAP    #15
000066FC                         11003m         space
000066FC  43F8 00DD              11004m         LEA     OBLANK, A1
00006700  103C 000E              11005m         MOVE.B  #14,D0          
00006704  4E4F                   11006m         TRAP    #15
00006706                         11007m         ENDM
00006706                         11008m         printSign
00006706  103C 0006              11009m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000670A  323C 0024              11010m         MOVE.W  #36, D1     ; AN = SIGN
0000670E  4E4F                   11011m         TRAP    #15         ; OUTPUT = SIGN
00006710                         11012m         ENDM
00006710                         11013m         decodeDisplacement (A2)
00006710  3612                   11014m         MOVE.W (A2), D3
00006712  4241                   11015m         CLR     D1
00006714  3E0A                   11016m         MOVE.W  A2, D7
00006716  B638 0000              11017m         CMP.B   $00, D3
0000671A  6700 009E              11018m         BEQ     SBIT_871
0000671E  B638 00FF              11019m         CMP.B   $FF, D3
00006722  6700 0128              11020m         BEQ     TBIT_871
00006726                         11021m EBIT_871:   
00006726  E14B                   11022m         LSL     #08, D3
00006728  E04B                   11023m         LSR     #08, D3
0000672A  48C3                   11024m         EXT.L   D3
0000672C  DE83                   11025m         ADD.L   D3, D7
0000672E  5487                   11026m         ADD.L   #2, D7
00006730                         11027mm         ADROUTINPUT D7     
00006730  2E07                   11028mm         MOVE.L   D7, D7
00006732  103C 0006              11029mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006736  3207                   11030mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00006738  E049                   11031mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000673A  E849                   11032mm         LSR.W   #4, D1      
0000673C                         11033mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000673C  0C01 0009              11034mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006740  6E00 000A              11035mmm         BGT     ALPHA_873
00006744  0601 0030              11036mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006748  6000 0006              11037mmm         BRA     DONE_873
0000674C  0601 0037              11038mmm ALPHA_873: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006750  4E71                   11039mmm DONE_873: NOP
00006752                         11040mmm         ENDM
00006752  4E4F                   11041mm         TRAP    #15         ; EXECUTE OUTPUT
00006754                         11042mm         
00006754  3207                   11043mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006756  E949                   11044mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006758  E049                   11045mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000675A  E849                   11046mm         LSR.W   #4, D1      
0000675C                         11047mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000675C  0C01 0009              11048mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006760  6E00 000A              11049mmm         BGT     ALPHA_874
00006764  0601 0030              11050mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006768  6000 0006              11051mmm         BRA     DONE_874
0000676C  0601 0037              11052mmm ALPHA_874: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006770  4E71                   11053mmm DONE_874: NOP
00006772                         11054mmm         ENDM
00006772  4E4F                   11055mm         TRAP    #15         ; EXECUTE OUTPUT
00006774                         11056mm         
00006774  3207                   11057mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00006776  E149                   11058mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006778  E049                   11059mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000677A  E849                   11060mm         LSR.W   #4, D1      
0000677C                         11061mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000677C  0C01 0009              11062mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006780  6E00 000A              11063mmm         BGT     ALPHA_875
00006784  0601 0030              11064mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006788  6000 0006              11065mmm         BRA     DONE_875
0000678C  0601 0037              11066mmm ALPHA_875: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006790  4E71                   11067mmm DONE_875: NOP
00006792                         11068mmm         ENDM
00006792  4E4F                   11069mm         TRAP    #15         ; EXECUTE OUTPUT
00006794                         11070mm         
00006794  3207                   11071mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006796  E149                   11072mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006798  E949                   11073mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000679A  E049                   11074mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000679C  E849                   11075mm         LSR.W   #4, D1      
0000679E                         11076mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000679E  0C01 0009              11077mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067A2  6E00 000A              11078mmm         BGT     ALPHA_876
000067A6  0601 0030              11079mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067AA  6000 0006              11080mmm         BRA     DONE_876
000067AE  0601 0037              11081mmm ALPHA_876: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067B2  4E71                   11082mmm DONE_876: NOP
000067B4                         11083mmm         ENDM
000067B4  4E4F                   11084mm         TRAP    #15         ; EXECUTE OUTPUT       
000067B6                         11085mm         ENDM 
000067B6  6000 0126              11086m         BRA     DECODEDISPLACEMENT_871
000067BA                         11087m SBIT_871:  
000067BA  361A                   11088m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
000067BC  48C3                   11089m         EXT.L    D3
000067BE  DE83                   11090m         ADD.L   D3, D7
000067C0  5487                   11091m         ADD.L   #2, D7
000067C2                         11092mm         ADROUTINPUT D7
000067C2  2E07                   11093mm         MOVE.L   D7, D7
000067C4  103C 0006              11094mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000067C8  3207                   11095mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
000067CA  E049                   11096mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067CC  E849                   11097mm         LSR.W   #4, D1      
000067CE                         11098mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067CE  0C01 0009              11099mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067D2  6E00 000A              11100mmm         BGT     ALPHA_878
000067D6  0601 0030              11101mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067DA  6000 0006              11102mmm         BRA     DONE_878
000067DE  0601 0037              11103mmm ALPHA_878: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067E2  4E71                   11104mmm DONE_878: NOP
000067E4                         11105mmm         ENDM
000067E4  4E4F                   11106mm         TRAP    #15         ; EXECUTE OUTPUT
000067E6                         11107mm         
000067E6  3207                   11108mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000067E8  E949                   11109mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000067EA  E049                   11110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067EC  E849                   11111mm         LSR.W   #4, D1      
000067EE                         11112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067EE  0C01 0009              11113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067F2  6E00 000A              11114mmm         BGT     ALPHA_879
000067F6  0601 0030              11115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067FA  6000 0006              11116mmm         BRA     DONE_879
000067FE  0601 0037              11117mmm ALPHA_879: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006802  4E71                   11118mmm DONE_879: NOP
00006804                         11119mmm         ENDM
00006804  4E4F                   11120mm         TRAP    #15         ; EXECUTE OUTPUT
00006806                         11121mm         
00006806  3207                   11122mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00006808  E149                   11123mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000680A  E049                   11124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000680C  E849                   11125mm         LSR.W   #4, D1      
0000680E                         11126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000680E  0C01 0009              11127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006812  6E00 000A              11128mmm         BGT     ALPHA_880
00006816  0601 0030              11129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000681A  6000 0006              11130mmm         BRA     DONE_880
0000681E  0601 0037              11131mmm ALPHA_880: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006822  4E71                   11132mmm DONE_880: NOP
00006824                         11133mmm         ENDM
00006824  4E4F                   11134mm         TRAP    #15         ; EXECUTE OUTPUT
00006826                         11135mm         
00006826  3207                   11136mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006828  E149                   11137mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000682A  E949                   11138mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000682C  E049                   11139mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000682E  E849                   11140mm         LSR.W   #4, D1      
00006830                         11141mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006830  0C01 0009              11142mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006834  6E00 000A              11143mmm         BGT     ALPHA_881
00006838  0601 0030              11144mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000683C  6000 0006              11145mmm         BRA     DONE_881
00006840  0601 0037              11146mmm ALPHA_881: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006844  4E71                   11147mmm DONE_881: NOP
00006846                         11148mmm         ENDM
00006846  4E4F                   11149mm         TRAP    #15         ; EXECUTE OUTPUT       
00006848                         11150mm         ENDM 
00006848  6000 0094              11151m         BRA     DECODEDISPLACEMENT_871
0000684C                         11152m TBIT_871:  
0000684C  361A                   11153m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
0000684E  48C3                   11154m         EXT.L   D3
00006850  4843                   11155m         SWAP    D3
00006852  361A                   11156m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
00006854  DE83                   11157m         ADD.L   D3, D7
00006856  5487                   11158m         ADD.L   #2, D7
00006858                         11159mm         ADROUTINPUT D7
00006858  2E07                   11160mm         MOVE.L   D7, D7
0000685A  103C 0006              11161mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000685E  3207                   11162mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00006860  E049                   11163mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006862  E849                   11164mm         LSR.W   #4, D1      
00006864                         11165mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006864  0C01 0009              11166mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006868  6E00 000A              11167mmm         BGT     ALPHA_883
0000686C  0601 0030              11168mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006870  6000 0006              11169mmm         BRA     DONE_883
00006874  0601 0037              11170mmm ALPHA_883: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006878  4E71                   11171mmm DONE_883: NOP
0000687A                         11172mmm         ENDM
0000687A  4E4F                   11173mm         TRAP    #15         ; EXECUTE OUTPUT
0000687C                         11174mm         
0000687C  3207                   11175mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
0000687E  E949                   11176mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006880  E049                   11177mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006882  E849                   11178mm         LSR.W   #4, D1      
00006884                         11179mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006884  0C01 0009              11180mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006888  6E00 000A              11181mmm         BGT     ALPHA_884
0000688C  0601 0030              11182mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006890  6000 0006              11183mmm         BRA     DONE_884
00006894  0601 0037              11184mmm ALPHA_884: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006898  4E71                   11185mmm DONE_884: NOP
0000689A                         11186mmm         ENDM
0000689A  4E4F                   11187mm         TRAP    #15         ; EXECUTE OUTPUT
0000689C                         11188mm         
0000689C  3207                   11189mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
0000689E  E149                   11190mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068A0  E049                   11191mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068A2  E849                   11192mm         LSR.W   #4, D1      
000068A4                         11193mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068A4  0C01 0009              11194mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068A8  6E00 000A              11195mmm         BGT     ALPHA_885
000068AC  0601 0030              11196mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068B0  6000 0006              11197mmm         BRA     DONE_885
000068B4  0601 0037              11198mmm ALPHA_885: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068B8  4E71                   11199mmm DONE_885: NOP
000068BA                         11200mmm         ENDM
000068BA  4E4F                   11201mm         TRAP    #15         ; EXECUTE OUTPUT
000068BC                         11202mm         
000068BC  3207                   11203mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000068BE  E149                   11204mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068C0  E949                   11205mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000068C2  E049                   11206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068C4  E849                   11207mm         LSR.W   #4, D1      
000068C6                         11208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068C6  0C01 0009              11209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068CA  6E00 000A              11210mmm         BGT     ALPHA_886
000068CE  0601 0030              11211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068D2  6000 0006              11212mmm         BRA     DONE_886
000068D6  0601 0037              11213mmm ALPHA_886: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068DA  4E71                   11214mmm DONE_886: NOP
000068DC                         11215mmm         ENDM
000068DC  4E4F                   11216mm         TRAP    #15         ; EXECUTE OUTPUT       
000068DE                         11217mm         ENDM 
000068DE                         11218m DECODEDISPLACEMENT_871:
000068DE                         11219m         ENDM        
000068DE                         11220  
000068DE  4E75                   11221          RTS                 ; Return from decodeBGE subroutine
000068E0                         11222  
000068E0                         11223  
000068E0                         11224  ; ------------------------------------------------------------
000068E0                         11225  ; 13c. "decodeBLT" subroutine
000068E0                         11226  ; Gary
000068E0                         11227  ;
000068E0                         11228  ; Decodes Branching by verifying then decoding displacement.
000068E0                         11229  ; ------------------------------------------------------------
000068E0                         11230  decodeBLT:
000068E0                         11231m         verifyOpcode    pBLT, (A2)
000068E0  43F8 022D              11232m         LEA     PBLT, A1      ; INPUT PATTERN STRING
000068E4  3612                   11233m         MOVE.W  (A2), D3      ; INPUT VALUE
000068E6  123C 000F              11234m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000068EA                         11235m         
000068EA                         11236m LOOP_887: 
000068EA  0C11 0030              11237m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000068EE  6700 000E              11238m         BEQ     CHECKFOR0_887
000068F2  0C11 0031              11239m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000068F6  6700 0010              11240m         BEQ     CHECKFOR1_887
000068FA  6000 0012              11241m         BRA     NEXT_887      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000068FE                         11242m         
000068FE                         11243m CHECKFOR0_887: 
000068FE  0303                   11244m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006900  6600 0E78              11245m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006904  6000 0008              11246m         BRA     NEXT_887
00006908                         11247m 
00006908                         11248m CHECKFOR1_887:
00006908  0303                   11249m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000690A  6700 0E6E              11250m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000690E                         11251m 
0000690E                         11252m NEXT_887: 
0000690E  B23C 0000              11253m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006912  6700 0008              11254m         BEQ     COMPLETE_887  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006916  5301                   11255m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006918  1819                   11256m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000691A  60CE                   11257m         BRA     LOOP_887      ; BEGIN LOOP AGAIN
0000691C                         11258m 
0000691C                         11259m COMPLETE_887:  ; OPCODE HAS BEEN VERIFIED
0000691C                         11260m         ENDM
0000691C  43F8 00B0              11261          LEA     oBLT, A1     
00006920  103C 000E              11262          MOVE.B  #14,D0          
00006924  4E4F                   11263          TRAP    #15
00006926                         11264m         space
00006926  43F8 00DD              11265m         LEA     OBLANK, A1
0000692A  103C 000E              11266m         MOVE.B  #14,D0          
0000692E  4E4F                   11267m         TRAP    #15
00006930                         11268m         ENDM
00006930                         11269m         printSign
00006930  103C 0006              11270m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006934  323C 0024              11271m         MOVE.W  #36, D1     ; AN = SIGN
00006938  4E4F                   11272m         TRAP    #15         ; OUTPUT = SIGN
0000693A                         11273m         ENDM
0000693A                         11274m         decodeDisplacement (A2)
0000693A  3612                   11275m         MOVE.W (A2), D3
0000693C  4241                   11276m         CLR     D1
0000693E  3E0A                   11277m         MOVE.W  A2, D7
00006940  B638 0000              11278m         CMP.B   $00, D3
00006944  6700 009E              11279m         BEQ     SBIT_890
00006948  B638 00FF              11280m         CMP.B   $FF, D3
0000694C  6700 0128              11281m         BEQ     TBIT_890
00006950                         11282m EBIT_890:   
00006950  E14B                   11283m         LSL     #08, D3
00006952  E04B                   11284m         LSR     #08, D3
00006954  48C3                   11285m         EXT.L   D3
00006956  DE83                   11286m         ADD.L   D3, D7
00006958  5487                   11287m         ADD.L   #2, D7
0000695A                         11288mm         ADROUTINPUT D7     
0000695A  2E07                   11289mm         MOVE.L   D7, D7
0000695C  103C 0006              11290mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006960  3207                   11291mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00006962  E049                   11292mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006964  E849                   11293mm         LSR.W   #4, D1      
00006966                         11294mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006966  0C01 0009              11295mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000696A  6E00 000A              11296mmm         BGT     ALPHA_892
0000696E  0601 0030              11297mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006972  6000 0006              11298mmm         BRA     DONE_892
00006976  0601 0037              11299mmm ALPHA_892: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000697A  4E71                   11300mmm DONE_892: NOP
0000697C                         11301mmm         ENDM
0000697C  4E4F                   11302mm         TRAP    #15         ; EXECUTE OUTPUT
0000697E                         11303mm         
0000697E  3207                   11304mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006980  E949                   11305mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006982  E049                   11306mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006984  E849                   11307mm         LSR.W   #4, D1      
00006986                         11308mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006986  0C01 0009              11309mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000698A  6E00 000A              11310mmm         BGT     ALPHA_893
0000698E  0601 0030              11311mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006992  6000 0006              11312mmm         BRA     DONE_893
00006996  0601 0037              11313mmm ALPHA_893: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000699A  4E71                   11314mmm DONE_893: NOP
0000699C                         11315mmm         ENDM
0000699C  4E4F                   11316mm         TRAP    #15         ; EXECUTE OUTPUT
0000699E                         11317mm         
0000699E  3207                   11318mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
000069A0  E149                   11319mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069A2  E049                   11320mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069A4  E849                   11321mm         LSR.W   #4, D1      
000069A6                         11322mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069A6  0C01 0009              11323mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069AA  6E00 000A              11324mmm         BGT     ALPHA_894
000069AE  0601 0030              11325mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069B2  6000 0006              11326mmm         BRA     DONE_894
000069B6  0601 0037              11327mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069BA  4E71                   11328mmm DONE_894: NOP
000069BC                         11329mmm         ENDM
000069BC  4E4F                   11330mm         TRAP    #15         ; EXECUTE OUTPUT
000069BE                         11331mm         
000069BE  3207                   11332mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000069C0  E149                   11333mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069C2  E949                   11334mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069C4  E049                   11335mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069C6  E849                   11336mm         LSR.W   #4, D1      
000069C8                         11337mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069C8  0C01 0009              11338mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069CC  6E00 000A              11339mmm         BGT     ALPHA_895
000069D0  0601 0030              11340mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069D4  6000 0006              11341mmm         BRA     DONE_895
000069D8  0601 0037              11342mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069DC  4E71                   11343mmm DONE_895: NOP
000069DE                         11344mmm         ENDM
000069DE  4E4F                   11345mm         TRAP    #15         ; EXECUTE OUTPUT       
000069E0                         11346mm         ENDM 
000069E0  6000 0126              11347m         BRA     DECODEDISPLACEMENT_890
000069E4                         11348m SBIT_890:  
000069E4  361A                   11349m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
000069E6  48C3                   11350m         EXT.L    D3
000069E8  DE83                   11351m         ADD.L   D3, D7
000069EA  5487                   11352m         ADD.L   #2, D7
000069EC                         11353mm         ADROUTINPUT D7
000069EC  2E07                   11354mm         MOVE.L   D7, D7
000069EE  103C 0006              11355mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069F2  3207                   11356mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
000069F4  E049                   11357mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069F6  E849                   11358mm         LSR.W   #4, D1      
000069F8                         11359mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069F8  0C01 0009              11360mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069FC  6E00 000A              11361mmm         BGT     ALPHA_897
00006A00  0601 0030              11362mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A04  6000 0006              11363mmm         BRA     DONE_897
00006A08  0601 0037              11364mmm ALPHA_897: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A0C  4E71                   11365mmm DONE_897: NOP
00006A0E                         11366mmm         ENDM
00006A0E  4E4F                   11367mm         TRAP    #15         ; EXECUTE OUTPUT
00006A10                         11368mm         
00006A10  3207                   11369mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006A12  E949                   11370mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A14  E049                   11371mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A16  E849                   11372mm         LSR.W   #4, D1      
00006A18                         11373mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A18  0C01 0009              11374mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A1C  6E00 000A              11375mmm         BGT     ALPHA_898
00006A20  0601 0030              11376mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A24  6000 0006              11377mmm         BRA     DONE_898
00006A28  0601 0037              11378mmm ALPHA_898: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A2C  4E71                   11379mmm DONE_898: NOP
00006A2E                         11380mmm         ENDM
00006A2E  4E4F                   11381mm         TRAP    #15         ; EXECUTE OUTPUT
00006A30                         11382mm         
00006A30  3207                   11383mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00006A32  E149                   11384mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A34  E049                   11385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A36  E849                   11386mm         LSR.W   #4, D1      
00006A38                         11387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A38  0C01 0009              11388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A3C  6E00 000A              11389mmm         BGT     ALPHA_899
00006A40  0601 0030              11390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A44  6000 0006              11391mmm         BRA     DONE_899
00006A48  0601 0037              11392mmm ALPHA_899: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A4C  4E71                   11393mmm DONE_899: NOP
00006A4E                         11394mmm         ENDM
00006A4E  4E4F                   11395mm         TRAP    #15         ; EXECUTE OUTPUT
00006A50                         11396mm         
00006A50  3207                   11397mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006A52  E149                   11398mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A54  E949                   11399mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A56  E049                   11400mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A58  E849                   11401mm         LSR.W   #4, D1      
00006A5A                         11402mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A5A  0C01 0009              11403mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A5E  6E00 000A              11404mmm         BGT     ALPHA_900
00006A62  0601 0030              11405mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A66  6000 0006              11406mmm         BRA     DONE_900
00006A6A  0601 0037              11407mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A6E  4E71                   11408mmm DONE_900: NOP
00006A70                         11409mmm         ENDM
00006A70  4E4F                   11410mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A72                         11411mm         ENDM 
00006A72  6000 0094              11412m         BRA     DECODEDISPLACEMENT_890
00006A76                         11413m TBIT_890:  
00006A76  361A                   11414m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00006A78  48C3                   11415m         EXT.L   D3
00006A7A  4843                   11416m         SWAP    D3
00006A7C  361A                   11417m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
00006A7E  DE83                   11418m         ADD.L   D3, D7
00006A80  5487                   11419m         ADD.L   #2, D7
00006A82                         11420mm         ADROUTINPUT D7
00006A82  2E07                   11421mm         MOVE.L   D7, D7
00006A84  103C 0006              11422mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006A88  3207                   11423mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00006A8A  E049                   11424mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A8C  E849                   11425mm         LSR.W   #4, D1      
00006A8E                         11426mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A8E  0C01 0009              11427mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A92  6E00 000A              11428mmm         BGT     ALPHA_902
00006A96  0601 0030              11429mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A9A  6000 0006              11430mmm         BRA     DONE_902
00006A9E  0601 0037              11431mmm ALPHA_902: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AA2  4E71                   11432mmm DONE_902: NOP
00006AA4                         11433mmm         ENDM
00006AA4  4E4F                   11434mm         TRAP    #15         ; EXECUTE OUTPUT
00006AA6                         11435mm         
00006AA6  3207                   11436mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006AA8  E949                   11437mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006AAA  E049                   11438mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AAC  E849                   11439mm         LSR.W   #4, D1      
00006AAE                         11440mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AAE  0C01 0009              11441mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AB2  6E00 000A              11442mmm         BGT     ALPHA_903
00006AB6  0601 0030              11443mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ABA  6000 0006              11444mmm         BRA     DONE_903
00006ABE  0601 0037              11445mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AC2  4E71                   11446mmm DONE_903: NOP
00006AC4                         11447mmm         ENDM
00006AC4  4E4F                   11448mm         TRAP    #15         ; EXECUTE OUTPUT
00006AC6                         11449mm         
00006AC6  3207                   11450mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00006AC8  E149                   11451mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ACA  E049                   11452mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006ACC  E849                   11453mm         LSR.W   #4, D1      
00006ACE                         11454mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ACE  0C01 0009              11455mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AD2  6E00 000A              11456mmm         BGT     ALPHA_904
00006AD6  0601 0030              11457mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006ADA  6000 0006              11458mmm         BRA     DONE_904
00006ADE  0601 0037              11459mmm ALPHA_904: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AE2  4E71                   11460mmm DONE_904: NOP
00006AE4                         11461mmm         ENDM
00006AE4  4E4F                   11462mm         TRAP    #15         ; EXECUTE OUTPUT
00006AE6                         11463mm         
00006AE6  3207                   11464mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00006AE8  E149                   11465mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AEA  E949                   11466mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006AEC  E049                   11467mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AEE  E849                   11468mm         LSR.W   #4, D1      
00006AF0                         11469mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AF0  0C01 0009              11470mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AF4  6E00 000A              11471mmm         BGT     ALPHA_905
00006AF8  0601 0030              11472mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AFC  6000 0006              11473mmm         BRA     DONE_905
00006B00  0601 0037              11474mmm ALPHA_905: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B04  4E71                   11475mmm DONE_905: NOP
00006B06                         11476mmm         ENDM
00006B06  4E4F                   11477mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B08                         11478mm         ENDM 
00006B08                         11479m DECODEDISPLACEMENT_890:
00006B08                         11480m         ENDM        
00006B08                         11481  
00006B08  4E75                   11482          RTS                 ; Return from decodeBLT subroutine
00006B0A                         11483  
00006B0A                         11484  
00006B0A                         11485  ; ------------------------------------------------------------
00006B0A                         11486  ; 14. "decodeJSR" subroutine
00006B0A                         11487  ; Gary
00006B0A                         11488  ;
00006B0A                         11489  ; Decodes Branching by verifying then decoding displacement.
00006B0A                         11490  ; ------------------------------------------------------------
00006B0A                         11491  decodeJSR:
00006B0A                         11492m         verifyOpcode    pJSR, (A2)
00006B0A  43F8 023E              11493m         LEA     PJSR, A1      ; INPUT PATTERN STRING
00006B0E  3612                   11494m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B10  123C 000F              11495m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B14                         11496m         
00006B14                         11497m LOOP_906: 
00006B14  0C11 0030              11498m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B18  6700 000E              11499m         BEQ     CHECKFOR0_906
00006B1C  0C11 0031              11500m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B20  6700 0010              11501m         BEQ     CHECKFOR1_906
00006B24  6000 0012              11502m         BRA     NEXT_906      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B28                         11503m         
00006B28                         11504m CHECKFOR0_906: 
00006B28  0303                   11505m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B2A  6600 0C4E              11506m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B2E  6000 0008              11507m         BRA     NEXT_906
00006B32                         11508m 
00006B32                         11509m CHECKFOR1_906:
00006B32  0303                   11510m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006B34  6700 0C44              11511m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006B38                         11512m 
00006B38                         11513m NEXT_906: 
00006B38  B23C 0000              11514m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006B3C  6700 0008              11515m         BEQ     COMPLETE_906  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006B40  5301                   11516m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006B42  1819                   11517m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006B44  60CE                   11518m         BRA     LOOP_906      ; BEGIN LOOP AGAIN
00006B46                         11519m 
00006B46                         11520m COMPLETE_906:  ; OPCODE HAS BEEN VERIFIED
00006B46                         11521m         ENDM
00006B46  43F8 00B4              11522          LEA     oJSR, A1     
00006B4A  103C 000E              11523          MOVE.B  #14,D0          
00006B4E  4E4F                   11524          TRAP    #15
00006B50                         11525          
00006B50  43F8 00DD              11526          LEA     oBlank, A1     
00006B54  103C 000E              11527          MOVE.B  #14,D0          
00006B58  4E4F                   11528          TRAP    #15
00006B5A                         11529  
00006B5A                         11530m         prepareAdrMode  #$1, (A2)
00006B5A  3C3C 0001              11531m         MOVE.W  #$1, D6      ; INPUT VALUE
00006B5E  3212                   11532m         MOVE.W  (A2), D1
00006B60  BC3C 0001              11533m         CMP.B   #$01, D6
00006B64  6700 000C              11534m         BEQ     ADRSOURCE_907    
00006B68                         11535m ADRDEST_907:
00006B68  EF49                   11536m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00006B6A  E049                   11537m         LSR     #$08, D1
00006B6C  EA49                   11538m         LSR     #$05, D1
00006B6E  6000 000A              11539m         BRA     COMPLETE_907 
00006B72                         11540m ADRSOURCE_907:                
00006B72  E149                   11541m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006B74  E549                   11542m         LSL     #$02, D1
00006B76  E049                   11543m         LSR     #$08, D1
00006B78  EA49                   11544m         LSR     #$05, D1
00006B7A                         11545m COMPLETE_907:  ; OPCODE HAS BEEN VERIFIED
00006B7A                         11546m         ENDM        
00006B7A                         11547m         decodeAdrMode   (A2), D1        
00006B7A  3612                   11548m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00006B7C  3201                   11549m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00006B7E                         11550m 
00006B7E  B23C 0001              11551m         CMP.B   #$01, D1
00006B82  6700 0066              11552m         BEQ     ADRREGDIRECT_908    
00006B86  B23C 0002              11553m         CMP.B   #$02, D1
00006B8A  6700 00A0              11554m         BEQ     ADRREGINDIRECT_908  
00006B8E  B23C 0003              11555m         CMP.B   #$03, D1
00006B92  6700 0102              11556m         BEQ     ADRREGPOSTINC_908  
00006B96  B23C 0004              11557m         CMP.B   #$04, D1
00006B9A  6700 0178              11558m         BEQ     ADRREGPREDEC_908
00006B9E  B23C 0007              11559m         CMP.B   #$07, D1
00006BA2  6700 01EE              11560m         BEQ     ADRABSOLUTE_908    
00006BA6                         11561m         
00006BA6                         11562m DATAREGDIRECT_908: 
00006BA6  BC3C 0001              11563m         CMP.B   #$01, D6
00006BAA  6700 001E              11564m         BEQ     DATAREGDIRECTSRC_908   
00006BAE                         11565m DATAREGDIRECTDEST_908: 
00006BAE                         11566mm         PRINTDNDEST D3 
00006BAE  3203                   11567mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00006BB0  E949                   11568mm         LSL     #$04, D1
00006BB2  E049                   11569mm         LSR     #$08, D1
00006BB4  EA49                   11570mm         LSR     #$05, D1
00006BB6  43F8 00CC              11571mm         LEA     ODN, A1     
00006BBA  103C 000E              11572mm         MOVE.B  #14,D0          
00006BBE  4E4F                   11573mm         TRAP    #15
00006BC0  103C 0003              11574mm         MOVE.B  #3,D0          
00006BC4  4E4F                   11575mm         TRAP    #15
00006BC6                         11576mm         ENDM
00006BC6  6000 057A              11577m         BRA     COMPLETE_908 
00006BCA                         11578m DATAREGDIRECTSRC_908: 
00006BCA                         11579mm         PRINTDNSRC D3 
00006BCA  4281                   11580mm         CLR.L   D1
00006BCC  3203                   11581mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006BCE  E149                   11582mm         LSL     #$08, D1
00006BD0  EB49                   11583mm         LSL     #$05, D1
00006BD2  E049                   11584mm         LSR     #$08, D1
00006BD4  EA49                   11585mm         LSR     #$05, D1
00006BD6  43F8 00CC              11586mm         LEA     ODN, A1     
00006BDA  103C 000E              11587mm         MOVE.B  #14,D0          
00006BDE  4E4F                   11588mm         TRAP    #15
00006BE0  103C 0003              11589mm         MOVE.B  #3,D0          
00006BE4  4E4F                   11590mm         TRAP    #15
00006BE6                         11591mm         ENDM
00006BE6  6000 055A              11592m         BRA     COMPLETE_908   
00006BEA                         11593m         
00006BEA                         11594m ADRREGDIRECT_908: 
00006BEA  BC3C 0001              11595m         CMP.B   #$01, D6
00006BEE  6700 001E              11596m         BEQ     ADRREGDIRECTSRC_908   
00006BF2                         11597m ADRREGDIRECTDEST_908:
00006BF2                         11598mm         PRINTANDEST D3
00006BF2  3203                   11599mm         MOVE.W  D3, D1
00006BF4  E949                   11600mm         LSL     #$04, D1
00006BF6  E049                   11601mm         LSR     #$08, D1
00006BF8  EA49                   11602mm         LSR     #$05, D1
00006BFA  43F8 00CE              11603mm         LEA     OAN, A1     
00006BFE  103C 000E              11604mm         MOVE.B  #14,D0          
00006C02  4E4F                   11605mm         TRAP    #15
00006C04  103C 0003              11606mm         MOVE.B  #3,D0          
00006C08  4E4F                   11607mm         TRAP    #15
00006C0A                         11608mm         ENDM
00006C0A  6000 0536              11609m         BRA     COMPLETE_908   
00006C0E                         11610m ADRREGDIRECTSRC_908:
00006C0E                         11611mm         PRINTANSRC D3
00006C0E  3203                   11612mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006C10  E149                   11613mm         LSL     #$08, D1
00006C12  EB49                   11614mm         LSL     #$05, D1
00006C14  E049                   11615mm         LSR     #$08, D1
00006C16  EA49                   11616mm         LSR     #$05, D1
00006C18  43F8 00CE              11617mm         LEA     OAN, A1     
00006C1C  103C 000E              11618mm         MOVE.B  #14,D0          
00006C20  4E4F                   11619mm         TRAP    #15
00006C22  103C 0003              11620mm         MOVE.B  #3,D0          
00006C26  4E4F                   11621mm         TRAP    #15
00006C28                         11622mm         ENDM
00006C28  6000 0518              11623m         BRA     COMPLETE_908   
00006C2C                         11624m        
00006C2C                         11625m ADRREGINDIRECT_908:   
00006C2C  BC3C 0001              11626m         CMP.B   #$01, D6
00006C30  6700 0032              11627m         BEQ     ADRREGINDIRECTSRC_908   
00006C34                         11628m ADRREGINDIRECTDEST_908:
00006C34                         11629mm         PRINTLB
00006C34  43F8 00D0              11630mm         LEA     OLB, A1     
00006C38  103C 000E              11631mm         MOVE.B  #14,D0          
00006C3C  4E4F                   11632mm         TRAP    #15
00006C3E                         11633mm         ENDM
00006C3E                         11634mm         PRINTANDEST D3  
00006C3E  3203                   11635mm         MOVE.W  D3, D1
00006C40  E949                   11636mm         LSL     #$04, D1
00006C42  E049                   11637mm         LSR     #$08, D1
00006C44  EA49                   11638mm         LSR     #$05, D1
00006C46  43F8 00CE              11639mm         LEA     OAN, A1     
00006C4A  103C 000E              11640mm         MOVE.B  #14,D0          
00006C4E  4E4F                   11641mm         TRAP    #15
00006C50  103C 0003              11642mm         MOVE.B  #3,D0          
00006C54  4E4F                   11643mm         TRAP    #15
00006C56                         11644mm         ENDM
00006C56                         11645mm         PRINTRB
00006C56  43F8 00D2              11646mm         LEA     ORB, A1     
00006C5A  103C 000E              11647mm         MOVE.B  #14,D0          
00006C5E  4E4F                   11648mm         TRAP    #15
00006C60                         11649mm         ENDM
00006C60  6000 04E0              11650m         BRA     COMPLETE_908     
00006C64                         11651m ADRREGINDIRECTSRC_908:   
00006C64                         11652mm         PRINTLB
00006C64  43F8 00D0              11653mm         LEA     OLB, A1     
00006C68  103C 000E              11654mm         MOVE.B  #14,D0          
00006C6C  4E4F                   11655mm         TRAP    #15
00006C6E                         11656mm         ENDM
00006C6E                         11657mm         PRINTANSRC D3  
00006C6E  3203                   11658mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006C70  E149                   11659mm         LSL     #$08, D1
00006C72  EB49                   11660mm         LSL     #$05, D1
00006C74  E049                   11661mm         LSR     #$08, D1
00006C76  EA49                   11662mm         LSR     #$05, D1
00006C78  43F8 00CE              11663mm         LEA     OAN, A1     
00006C7C  103C 000E              11664mm         MOVE.B  #14,D0          
00006C80  4E4F                   11665mm         TRAP    #15
00006C82  103C 0003              11666mm         MOVE.B  #3,D0          
00006C86  4E4F                   11667mm         TRAP    #15
00006C88                         11668mm         ENDM
00006C88                         11669mm         PRINTRB
00006C88  43F8 00D2              11670mm         LEA     ORB, A1     
00006C8C  103C 000E              11671mm         MOVE.B  #14,D0          
00006C90  4E4F                   11672mm         TRAP    #15
00006C92                         11673mm         ENDM
00006C92  6000 04AE              11674m         BRA     COMPLETE_908   
00006C96                         11675m         
00006C96                         11676m ADRREGPOSTINC_908:   
00006C96  BC3C 0001              11677m         CMP.B   #$01, D6
00006C9A  6700 003C              11678m         BEQ     ADRREGPOSTINCSRC_908   
00006C9E                         11679m ADRREGPOSTINCDEST_908: 
00006C9E                         11680mm         PRINTLB
00006C9E  43F8 00D0              11681mm         LEA     OLB, A1     
00006CA2  103C 000E              11682mm         MOVE.B  #14,D0          
00006CA6  4E4F                   11683mm         TRAP    #15
00006CA8                         11684mm         ENDM
00006CA8                         11685mm         PRINTANDEST D3  
00006CA8  3203                   11686mm         MOVE.W  D3, D1
00006CAA  E949                   11687mm         LSL     #$04, D1
00006CAC  E049                   11688mm         LSR     #$08, D1
00006CAE  EA49                   11689mm         LSR     #$05, D1
00006CB0  43F8 00CE              11690mm         LEA     OAN, A1     
00006CB4  103C 000E              11691mm         MOVE.B  #14,D0          
00006CB8  4E4F                   11692mm         TRAP    #15
00006CBA  103C 0003              11693mm         MOVE.B  #3,D0          
00006CBE  4E4F                   11694mm         TRAP    #15
00006CC0                         11695mm         ENDM
00006CC0                         11696mm         PRINTRB
00006CC0  43F8 00D2              11697mm         LEA     ORB, A1     
00006CC4  103C 000E              11698mm         MOVE.B  #14,D0          
00006CC8  4E4F                   11699mm         TRAP    #15
00006CCA                         11700mm         ENDM
00006CCA                         11701mm         PRINTPI
00006CCA  43F8 00D9              11702mm         LEA     OPSTINC, A1     
00006CCE  103C 000E              11703mm         MOVE.B  #14,D0          
00006CD2  4E4F                   11704mm         TRAP    #15
00006CD4                         11705mm         ENDM
00006CD4  6000 046C              11706m         BRA     COMPLETE_908  
00006CD8                         11707m ADRREGPOSTINCSRC_908:           
00006CD8                         11708mm         PRINTLB
00006CD8  43F8 00D0              11709mm         LEA     OLB, A1     
00006CDC  103C 000E              11710mm         MOVE.B  #14,D0          
00006CE0  4E4F                   11711mm         TRAP    #15
00006CE2                         11712mm         ENDM
00006CE2                         11713mm         PRINTANSRC D3  
00006CE2  3203                   11714mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006CE4  E149                   11715mm         LSL     #$08, D1
00006CE6  EB49                   11716mm         LSL     #$05, D1
00006CE8  E049                   11717mm         LSR     #$08, D1
00006CEA  EA49                   11718mm         LSR     #$05, D1
00006CEC  43F8 00CE              11719mm         LEA     OAN, A1     
00006CF0  103C 000E              11720mm         MOVE.B  #14,D0          
00006CF4  4E4F                   11721mm         TRAP    #15
00006CF6  103C 0003              11722mm         MOVE.B  #3,D0          
00006CFA  4E4F                   11723mm         TRAP    #15
00006CFC                         11724mm         ENDM
00006CFC                         11725mm         PRINTRB
00006CFC  43F8 00D2              11726mm         LEA     ORB, A1     
00006D00  103C 000E              11727mm         MOVE.B  #14,D0          
00006D04  4E4F                   11728mm         TRAP    #15
00006D06                         11729mm         ENDM
00006D06                         11730mm         PRINTPI
00006D06  43F8 00D9              11731mm         LEA     OPSTINC, A1     
00006D0A  103C 000E              11732mm         MOVE.B  #14,D0          
00006D0E  4E4F                   11733mm         TRAP    #15
00006D10                         11734mm         ENDM
00006D10  6000 0430              11735m         BRA     COMPLETE_908  
00006D14                         11736m ADRREGPREDEC_908: 
00006D14  BC3C 0001              11737m         CMP.B   #$01, D6
00006D18  6700 003C              11738m         BEQ     ADRREGPREDECSRC_908   
00006D1C                         11739m ADRREGPREDECDEST_908:
00006D1C                         11740mm         PRINTPD  
00006D1C  43F8 00D7              11741mm         LEA     OPREDEC, A1     
00006D20  103C 000E              11742mm         MOVE.B  #14,D0          
00006D24  4E4F                   11743mm         TRAP    #15
00006D26                         11744mm         ENDM
00006D26                         11745mm         PRINTLB
00006D26  43F8 00D0              11746mm         LEA     OLB, A1     
00006D2A  103C 000E              11747mm         MOVE.B  #14,D0          
00006D2E  4E4F                   11748mm         TRAP    #15
00006D30                         11749mm         ENDM
00006D30                         11750mm         PRINTANDEST D3  
00006D30  3203                   11751mm         MOVE.W  D3, D1
00006D32  E949                   11752mm         LSL     #$04, D1
00006D34  E049                   11753mm         LSR     #$08, D1
00006D36  EA49                   11754mm         LSR     #$05, D1
00006D38  43F8 00CE              11755mm         LEA     OAN, A1     
00006D3C  103C 000E              11756mm         MOVE.B  #14,D0          
00006D40  4E4F                   11757mm         TRAP    #15
00006D42  103C 0003              11758mm         MOVE.B  #3,D0          
00006D46  4E4F                   11759mm         TRAP    #15
00006D48                         11760mm         ENDM
00006D48                         11761mm         PRINTRB
00006D48  43F8 00D2              11762mm         LEA     ORB, A1     
00006D4C  103C 000E              11763mm         MOVE.B  #14,D0          
00006D50  4E4F                   11764mm         TRAP    #15
00006D52                         11765mm         ENDM
00006D52  6000 03EE              11766m         BRA     COMPLETE_908   
00006D56                         11767m ADRREGPREDECSRC_908: 
00006D56                         11768mm         PRINTPD  
00006D56  43F8 00D7              11769mm         LEA     OPREDEC, A1     
00006D5A  103C 000E              11770mm         MOVE.B  #14,D0          
00006D5E  4E4F                   11771mm         TRAP    #15
00006D60                         11772mm         ENDM
00006D60                         11773mm         PRINTLB
00006D60  43F8 00D0              11774mm         LEA     OLB, A1     
00006D64  103C 000E              11775mm         MOVE.B  #14,D0          
00006D68  4E4F                   11776mm         TRAP    #15
00006D6A                         11777mm         ENDM
00006D6A                         11778mm         PRINTANSRC D3  
00006D6A  3203                   11779mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006D6C  E149                   11780mm         LSL     #$08, D1
00006D6E  EB49                   11781mm         LSL     #$05, D1
00006D70  E049                   11782mm         LSR     #$08, D1
00006D72  EA49                   11783mm         LSR     #$05, D1
00006D74  43F8 00CE              11784mm         LEA     OAN, A1     
00006D78  103C 000E              11785mm         MOVE.B  #14,D0          
00006D7C  4E4F                   11786mm         TRAP    #15
00006D7E  103C 0003              11787mm         MOVE.B  #3,D0          
00006D82  4E4F                   11788mm         TRAP    #15
00006D84                         11789mm         ENDM
00006D84                         11790mm         PRINTRB
00006D84  43F8 00D2              11791mm         LEA     ORB, A1     
00006D88  103C 000E              11792mm         MOVE.B  #14,D0          
00006D8C  4E4F                   11793mm         TRAP    #15
00006D8E                         11794mm         ENDM
00006D8E  6000 03B2              11795m         BRA     COMPLETE_908
00006D92                         11796m        
00006D92                         11797m ADRABSOLUTE_908:
00006D92  BC3C 0001              11798m         CMP.B   #$01, D6
00006D96  6600 0018              11799m         BNE     ADRABSOLUTEDST_908 
00006D9A                         11800m         
00006D9A  3A03                   11801m         MOVE.W  D3, D5
00006D9C  0803 0002              11802m         BTST    #2, D3
00006DA0  6600 0024              11803m         BNE     ADRIMMEDIATE_908
00006DA4  0803 0000              11804m         BTST    #0, D3
00006DA8  6600 0280              11805m         BNE     ADRABSOLUTEL_908
00006DAC  6000 01E6              11806m         BRA     ADRABSOLUTEW_908
00006DB0                         11807m ADRABSOLUTEDST_908:
00006DB0  3A03                   11808m         MOVE.W  D3, D5
00006DB2  0803 000B              11809m         BTST    #$B, D3
00006DB6  6600 000E              11810m         BNE     ADRIMMEDIATE_908
00006DBA  0803 0009              11811m         BTST    #$09, D3
00006DBE  6600 026A              11812m         BNE     ADRABSOLUTEL_908
00006DC2  6000 01D0              11813m         BRA     ADRABSOLUTEW_908
00006DC6                         11814m ADRIMMEDIATE_908:
00006DC6  BE3C 0001              11815m         CMP.B   #1, D7
00006DCA  6700 00A2              11816m         BEQ     ADRIMMEDIATEL_908
00006DCE                         11817m ADRIMMEDIATEW_908:
00006DCE  361A                   11818m         MOVE.W  (A2)+, D3
00006DD0                         11819mm         PRINTHASH
00006DD0  103C 0006              11820mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006DD4  323C 0023              11821mm         MOVE.W  #35, D1     ; AN = SIGN
00006DD8  4E4F                   11822mm         TRAP    #15         ; OUTPUT = SIGN
00006DDA                         11823mm         ENDM
00006DDA                         11824mm         PRINTSIGN
00006DDA  103C 0006              11825mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006DDE  323C 0024              11826mm         MOVE.W  #36, D1     ; AN = SIGN
00006DE2  4E4F                   11827mm         TRAP    #15         ; OUTPUT = SIGN
00006DE4                         11828mm         ENDM
00006DE4                         11829mm         ADROUT
00006DE4  103C 0006              11830mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006DE8  3212                   11831mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006DEA  E049                   11832mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006DEC  E849                   11833mm         LSR.W   #4, D1      
00006DEE                         11834mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006DEE  0C01 0009              11835mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006DF2  6E00 000A              11836mmm         BGT     ALPHA_938
00006DF6  0601 0030              11837mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006DFA  6000 0006              11838mmm         BRA     DONE_938
00006DFE  0601 0037              11839mmm ALPHA_938: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E02  4E71                   11840mmm DONE_938: NOP
00006E04                         11841mmm         ENDM
00006E04  4E4F                   11842mm         TRAP    #15         ; EXECUTE OUTPUT
00006E06                         11843mm         
00006E06  3212                   11844mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E08  E949                   11845mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006E0A  E049                   11846mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E0C  E849                   11847mm         LSR.W   #4, D1      
00006E0E                         11848mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E0E  0C01 0009              11849mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E12  6E00 000A              11850mmm         BGT     ALPHA_939
00006E16  0601 0030              11851mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E1A  6000 0006              11852mmm         BRA     DONE_939
00006E1E  0601 0037              11853mmm ALPHA_939: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E22  4E71                   11854mmm DONE_939: NOP
00006E24                         11855mmm         ENDM
00006E24  4E4F                   11856mm         TRAP    #15         ; EXECUTE OUTPUT
00006E26                         11857mm         
00006E26  3212                   11858mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E28  E149                   11859mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E2A  E049                   11860mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E2C  E849                   11861mm         LSR.W   #4, D1      
00006E2E                         11862mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E2E  0C01 0009              11863mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E32  6E00 000A              11864mmm         BGT     ALPHA_940
00006E36  0601 0030              11865mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E3A  6000 0006              11866mmm         BRA     DONE_940
00006E3E  0601 0037              11867mmm ALPHA_940: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E42  4E71                   11868mmm DONE_940: NOP
00006E44                         11869mmm         ENDM
00006E44  4E4F                   11870mm         TRAP    #15         ; EXECUTE OUTPUT
00006E46                         11871mm         
00006E46  3212                   11872mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E48  E149                   11873mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006E4A  E949                   11874mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006E4C  E049                   11875mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E4E  E849                   11876mm         LSR.W   #4, D1      
00006E50                         11877mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E50  0C01 0009              11878mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E54  6E00 000A              11879mmm         BGT     ALPHA_941
00006E58  0601 0030              11880mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E5C  6000 0006              11881mmm         BRA     DONE_941
00006E60  0601 0037              11882mmm ALPHA_941: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006E64  4E71                   11883mmm DONE_941: NOP
00006E66                         11884mmm         ENDM
00006E66  4E4F                   11885mm         TRAP    #15         ; EXECUTE OUTPUT       
00006E68                         11886mm         ENDM 
00006E68  3605                   11887m         MOVE.W  D5, D3
00006E6A  6000 02D6              11888m         BRA     COMPLETE_908
00006E6E                         11889m ADRIMMEDIATEL_908:
00006E6E  361A                   11890m         MOVE.W  (A2)+, D3
00006E70                         11891mm         PRINTHASH
00006E70  103C 0006              11892mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E74  323C 0023              11893mm         MOVE.W  #35, D1     ; AN = SIGN
00006E78  4E4F                   11894mm         TRAP    #15         ; OUTPUT = SIGN
00006E7A                         11895mm         ENDM
00006E7A                         11896mm         PRINTSIGN
00006E7A  103C 0006              11897mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E7E  323C 0024              11898mm         MOVE.W  #36, D1     ; AN = SIGN
00006E82  4E4F                   11899mm         TRAP    #15         ; OUTPUT = SIGN
00006E84                         11900mm         ENDM
00006E84                         11901mm         ADROUT 
00006E84  103C 0006              11902mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006E88  3212                   11903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006E8A  E049                   11904mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006E8C  E849                   11905mm         LSR.W   #4, D1      
00006E8E                         11906mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006E8E  0C01 0009              11907mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006E92  6E00 000A              11908mmm         BGT     ALPHA_945
00006E96  0601 0030              11909mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006E9A  6000 0006              11910mmm         BRA     DONE_945
00006E9E  0601 0037              11911mmm ALPHA_945: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EA2  4E71                   11912mmm DONE_945: NOP
00006EA4                         11913mmm         ENDM
00006EA4  4E4F                   11914mm         TRAP    #15         ; EXECUTE OUTPUT
00006EA6                         11915mm         
00006EA6  3212                   11916mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EA8  E949                   11917mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006EAA  E049                   11918mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006EAC  E849                   11919mm         LSR.W   #4, D1      
00006EAE                         11920mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006EAE  0C01 0009              11921mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EB2  6E00 000A              11922mmm         BGT     ALPHA_946
00006EB6  0601 0030              11923mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EBA  6000 0006              11924mmm         BRA     DONE_946
00006EBE  0601 0037              11925mmm ALPHA_946: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EC2  4E71                   11926mmm DONE_946: NOP
00006EC4                         11927mmm         ENDM
00006EC4  4E4F                   11928mm         TRAP    #15         ; EXECUTE OUTPUT
00006EC6                         11929mm         
00006EC6  3212                   11930mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EC8  E149                   11931mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006ECA  E049                   11932mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006ECC  E849                   11933mm         LSR.W   #4, D1      
00006ECE                         11934mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ECE  0C01 0009              11935mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006ED2  6E00 000A              11936mmm         BGT     ALPHA_947
00006ED6  0601 0030              11937mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EDA  6000 0006              11938mmm         BRA     DONE_947
00006EDE  0601 0037              11939mmm ALPHA_947: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006EE2  4E71                   11940mmm DONE_947: NOP
00006EE4                         11941mmm         ENDM
00006EE4  4E4F                   11942mm         TRAP    #15         ; EXECUTE OUTPUT
00006EE6                         11943mm         
00006EE6  3212                   11944mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006EE8  E149                   11945mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006EEA  E949                   11946mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006EEC  E049                   11947mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006EEE  E849                   11948mm         LSR.W   #4, D1      
00006EF0                         11949mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006EF0  0C01 0009              11950mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006EF4  6E00 000A              11951mmm         BGT     ALPHA_948
00006EF8  0601 0030              11952mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006EFC  6000 0006              11953mmm         BRA     DONE_948
00006F00  0601 0037              11954mmm ALPHA_948: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F04  4E71                   11955mmm DONE_948: NOP
00006F06                         11956mmm         ENDM
00006F06  4E4F                   11957mm         TRAP    #15         ; EXECUTE OUTPUT       
00006F08                         11958mm         ENDM 
00006F08  361A                   11959m         MOVE.W  (A2)+, D3
00006F0A                         11960mm         ADROUT
00006F0A  103C 0006              11961mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006F0E  3212                   11962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F10  E049                   11963mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F12  E849                   11964mm         LSR.W   #4, D1      
00006F14                         11965mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F14  0C01 0009              11966mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F18  6E00 000A              11967mmm         BGT     ALPHA_950
00006F1C  0601 0030              11968mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F20  6000 0006              11969mmm         BRA     DONE_950
00006F24  0601 0037              11970mmm ALPHA_950: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F28  4E71                   11971mmm DONE_950: NOP
00006F2A                         11972mmm         ENDM
00006F2A  4E4F                   11973mm         TRAP    #15         ; EXECUTE OUTPUT
00006F2C                         11974mm         
00006F2C  3212                   11975mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F2E  E949                   11976mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006F30  E049                   11977mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F32  E849                   11978mm         LSR.W   #4, D1      
00006F34                         11979mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F34  0C01 0009              11980mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F38  6E00 000A              11981mmm         BGT     ALPHA_951
00006F3C  0601 0030              11982mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F40  6000 0006              11983mmm         BRA     DONE_951
00006F44  0601 0037              11984mmm ALPHA_951: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F48  4E71                   11985mmm DONE_951: NOP
00006F4A                         11986mmm         ENDM
00006F4A  4E4F                   11987mm         TRAP    #15         ; EXECUTE OUTPUT
00006F4C                         11988mm         
00006F4C  3212                   11989mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F4E  E149                   11990mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F50  E049                   11991mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F52  E849                   11992mm         LSR.W   #4, D1      
00006F54                         11993mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F54  0C01 0009              11994mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F58  6E00 000A              11995mmm         BGT     ALPHA_952
00006F5C  0601 0030              11996mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F60  6000 0006              11997mmm         BRA     DONE_952
00006F64  0601 0037              11998mmm ALPHA_952: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F68  4E71                   11999mmm DONE_952: NOP
00006F6A                         12000mmm         ENDM
00006F6A  4E4F                   12001mm         TRAP    #15         ; EXECUTE OUTPUT
00006F6C                         12002mm         
00006F6C  3212                   12003mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006F6E  E149                   12004mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006F70  E949                   12005mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006F72  E049                   12006mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006F74  E849                   12007mm         LSR.W   #4, D1      
00006F76                         12008mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006F76  0C01 0009              12009mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006F7A  6E00 000A              12010mmm         BGT     ALPHA_953
00006F7E  0601 0030              12011mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006F82  6000 0006              12012mmm         BRA     DONE_953
00006F86  0601 0037              12013mmm ALPHA_953: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006F8A  4E71                   12014mmm DONE_953: NOP
00006F8C                         12015mmm         ENDM
00006F8C  4E4F                   12016mm         TRAP    #15         ; EXECUTE OUTPUT       
00006F8E                         12017mm         ENDM 
00006F8E  3605                   12018m         MOVE.W  D5, D3
00006F90  6000 01B0              12019m         BRA     COMPLETE_908 
00006F94                         12020m ADRABSOLUTEW_908:     
00006F94  361A                   12021m         MOVE.W  (A2)+, D3
00006F96                         12022mm         PRINTSIGN
00006F96  103C 0006              12023mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006F9A  323C 0024              12024mm         MOVE.W  #36, D1     ; AN = SIGN
00006F9E  4E4F                   12025mm         TRAP    #15         ; OUTPUT = SIGN
00006FA0                         12026mm         ENDM
00006FA0                         12027mm         ADROUT
00006FA0  103C 0006              12028mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006FA4  3212                   12029mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FA6  E049                   12030mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FA8  E849                   12031mm         LSR.W   #4, D1      
00006FAA                         12032mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FAA  0C01 0009              12033mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FAE  6E00 000A              12034mmm         BGT     ALPHA_956
00006FB2  0601 0030              12035mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FB6  6000 0006              12036mmm         BRA     DONE_956
00006FBA  0601 0037              12037mmm ALPHA_956: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FBE  4E71                   12038mmm DONE_956: NOP
00006FC0                         12039mmm         ENDM
00006FC0  4E4F                   12040mm         TRAP    #15         ; EXECUTE OUTPUT
00006FC2                         12041mm         
00006FC2  3212                   12042mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FC4  E949                   12043mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006FC6  E049                   12044mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FC8  E849                   12045mm         LSR.W   #4, D1      
00006FCA                         12046mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FCA  0C01 0009              12047mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FCE  6E00 000A              12048mmm         BGT     ALPHA_957
00006FD2  0601 0030              12049mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FD6  6000 0006              12050mmm         BRA     DONE_957
00006FDA  0601 0037              12051mmm ALPHA_957: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FDE  4E71                   12052mmm DONE_957: NOP
00006FE0                         12053mmm         ENDM
00006FE0  4E4F                   12054mm         TRAP    #15         ; EXECUTE OUTPUT
00006FE2                         12055mm         
00006FE2  3212                   12056mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006FE4  E149                   12057mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006FE6  E049                   12058mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006FE8  E849                   12059mm         LSR.W   #4, D1      
00006FEA                         12060mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006FEA  0C01 0009              12061mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006FEE  6E00 000A              12062mmm         BGT     ALPHA_958
00006FF2  0601 0030              12063mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006FF6  6000 0006              12064mmm         BRA     DONE_958
00006FFA  0601 0037              12065mmm ALPHA_958: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006FFE  4E71                   12066mmm DONE_958: NOP
00007000                         12067mmm         ENDM
00007000  4E4F                   12068mm         TRAP    #15         ; EXECUTE OUTPUT
00007002                         12069mm         
00007002  3212                   12070mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007004  E149                   12071mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007006  E949                   12072mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007008  E049                   12073mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000700A  E849                   12074mm         LSR.W   #4, D1      
0000700C                         12075mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000700C  0C01 0009              12076mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007010  6E00 000A              12077mmm         BGT     ALPHA_959
00007014  0601 0030              12078mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007018  6000 0006              12079mmm         BRA     DONE_959
0000701C  0601 0037              12080mmm ALPHA_959: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007020  4E71                   12081mmm DONE_959: NOP
00007022                         12082mmm         ENDM
00007022  4E4F                   12083mm         TRAP    #15         ; EXECUTE OUTPUT       
00007024                         12084mm         ENDM 
00007024  3605                   12085m         MOVE.W  D5, D3
00007026  6000 011A              12086m         BRA     COMPLETE_908  
0000702A                         12087m ADRABSOLUTEL_908:  
0000702A  361A                   12088m         MOVE.W  (A2)+, D3
0000702C                         12089mm         PRINTSIGN
0000702C  103C 0006              12090mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007030  323C 0024              12091mm         MOVE.W  #36, D1     ; AN = SIGN
00007034  4E4F                   12092mm         TRAP    #15         ; OUTPUT = SIGN
00007036                         12093mm         ENDM
00007036                         12094mm         ADROUT 
00007036  103C 0006              12095mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000703A  3212                   12096mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000703C  E049                   12097mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000703E  E849                   12098mm         LSR.W   #4, D1      
00007040                         12099mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007040  0C01 0009              12100mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007044  6E00 000A              12101mmm         BGT     ALPHA_962
00007048  0601 0030              12102mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000704C  6000 0006              12103mmm         BRA     DONE_962
00007050  0601 0037              12104mmm ALPHA_962: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007054  4E71                   12105mmm DONE_962: NOP
00007056                         12106mmm         ENDM
00007056  4E4F                   12107mm         TRAP    #15         ; EXECUTE OUTPUT
00007058                         12108mm         
00007058  3212                   12109mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000705A  E949                   12110mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000705C  E049                   12111mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000705E  E849                   12112mm         LSR.W   #4, D1      
00007060                         12113mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007060  0C01 0009              12114mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007064  6E00 000A              12115mmm         BGT     ALPHA_963
00007068  0601 0030              12116mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000706C  6000 0006              12117mmm         BRA     DONE_963
00007070  0601 0037              12118mmm ALPHA_963: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007074  4E71                   12119mmm DONE_963: NOP
00007076                         12120mmm         ENDM
00007076  4E4F                   12121mm         TRAP    #15         ; EXECUTE OUTPUT
00007078                         12122mm         
00007078  3212                   12123mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000707A  E149                   12124mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000707C  E049                   12125mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000707E  E849                   12126mm         LSR.W   #4, D1      
00007080                         12127mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007080  0C01 0009              12128mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007084  6E00 000A              12129mmm         BGT     ALPHA_964
00007088  0601 0030              12130mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000708C  6000 0006              12131mmm         BRA     DONE_964
00007090  0601 0037              12132mmm ALPHA_964: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007094  4E71                   12133mmm DONE_964: NOP
00007096                         12134mmm         ENDM
00007096  4E4F                   12135mm         TRAP    #15         ; EXECUTE OUTPUT
00007098                         12136mm         
00007098  3212                   12137mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000709A  E149                   12138mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000709C  E949                   12139mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000709E  E049                   12140mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070A0  E849                   12141mm         LSR.W   #4, D1      
000070A2                         12142mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070A2  0C01 0009              12143mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070A6  6E00 000A              12144mmm         BGT     ALPHA_965
000070AA  0601 0030              12145mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070AE  6000 0006              12146mmm         BRA     DONE_965
000070B2  0601 0037              12147mmm ALPHA_965: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070B6  4E71                   12148mmm DONE_965: NOP
000070B8                         12149mmm         ENDM
000070B8  4E4F                   12150mm         TRAP    #15         ; EXECUTE OUTPUT       
000070BA                         12151mm         ENDM 
000070BA  361A                   12152m         MOVE.W  (A2)+, D3
000070BC                         12153mm         ADROUT
000070BC  103C 0006              12154mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000070C0  3212                   12155mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070C2  E049                   12156mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070C4  E849                   12157mm         LSR.W   #4, D1      
000070C6                         12158mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070C6  0C01 0009              12159mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070CA  6E00 000A              12160mmm         BGT     ALPHA_967
000070CE  0601 0030              12161mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070D2  6000 0006              12162mmm         BRA     DONE_967
000070D6  0601 0037              12163mmm ALPHA_967: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070DA  4E71                   12164mmm DONE_967: NOP
000070DC                         12165mmm         ENDM
000070DC  4E4F                   12166mm         TRAP    #15         ; EXECUTE OUTPUT
000070DE                         12167mm         
000070DE  3212                   12168mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000070E0  E949                   12169mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000070E2  E049                   12170mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000070E4  E849                   12171mm         LSR.W   #4, D1      
000070E6                         12172mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000070E6  0C01 0009              12173mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000070EA  6E00 000A              12174mmm         BGT     ALPHA_968
000070EE  0601 0030              12175mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000070F2  6000 0006              12176mmm         BRA     DONE_968
000070F6  0601 0037              12177mmm ALPHA_968: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000070FA  4E71                   12178mmm DONE_968: NOP
000070FC                         12179mmm         ENDM
000070FC  4E4F                   12180mm         TRAP    #15         ; EXECUTE OUTPUT
000070FE                         12181mm         
000070FE  3212                   12182mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007100  E149                   12183mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007102  E049                   12184mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007104  E849                   12185mm         LSR.W   #4, D1      
00007106                         12186mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007106  0C01 0009              12187mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000710A  6E00 000A              12188mmm         BGT     ALPHA_969
0000710E  0601 0030              12189mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007112  6000 0006              12190mmm         BRA     DONE_969
00007116  0601 0037              12191mmm ALPHA_969: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000711A  4E71                   12192mmm DONE_969: NOP
0000711C                         12193mmm         ENDM
0000711C  4E4F                   12194mm         TRAP    #15         ; EXECUTE OUTPUT
0000711E                         12195mm         
0000711E  3212                   12196mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007120  E149                   12197mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007122  E949                   12198mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007124  E049                   12199mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007126  E849                   12200mm         LSR.W   #4, D1      
00007128                         12201mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007128  0C01 0009              12202mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000712C  6E00 000A              12203mmm         BGT     ALPHA_970
00007130  0601 0030              12204mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007134  6000 0006              12205mmm         BRA     DONE_970
00007138  0601 0037              12206mmm ALPHA_970: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000713C  4E71                   12207mmm DONE_970: NOP
0000713E                         12208mmm         ENDM
0000713E  4E4F                   12209mm         TRAP    #15         ; EXECUTE OUTPUT       
00007140                         12210mm         ENDM 
00007140  3605                   12211m         MOVE.W  D5, D3
00007142                         12212m 
00007142                         12213m COMPLETE_908:  ; OPCODE HAS BEEN VERIFIED
00007142                         12214m         ENDM
00007142  4E75                   12215          RTS                 ; Return from decodeJSR subroutine
00007144                         12216  
00007144                         12217  
00007144                         12218  ; ------------------------------------------------------------
00007144                         12219  ; 15. "decodeRTS" subroutine
00007144                         12220  ; Gary
00007144                         12221  ;
00007144                         12222  ; Decodes RTS by verifying then printing
00007144                         12223  ; ------------------------------------------------------------
00007144                         12224  decodeRTS:
00007144                         12225m         verifyOpcode    pRTS, (A2)
00007144  43F8 024F              12226m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00007148  3612                   12227m         MOVE.W  (A2), D3      ; INPUT VALUE
0000714A  123C 000F              12228m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000714E                         12229m         
0000714E                         12230m LOOP_971: 
0000714E  0C11 0030              12231m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00007152  6700 000E              12232m         BEQ     CHECKFOR0_971
00007156  0C11 0031              12233m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000715A  6700 0010              12234m         BEQ     CHECKFOR1_971
0000715E  6000 0012              12235m         BRA     NEXT_971      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00007162                         12236m         
00007162                         12237m CHECKFOR0_971: 
00007162  0303                   12238m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00007164  6600 0614              12239m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00007168  6000 0008              12240m         BRA     NEXT_971
0000716C                         12241m 
0000716C                         12242m CHECKFOR1_971:
0000716C  0303                   12243m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000716E  6700 060A              12244m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00007172                         12245m 
00007172                         12246m NEXT_971: 
00007172  B23C 0000              12247m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00007176  6700 0008              12248m         BEQ     COMPLETE_971  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000717A  5301                   12249m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000717C  1819                   12250m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000717E  60CE                   12251m         BRA     LOOP_971      ; BEGIN LOOP AGAIN
00007180                         12252m 
00007180                         12253m COMPLETE_971:  ; OPCODE HAS BEEN VERIFIED
00007180                         12254m         ENDM
00007180  43F8 00B8              12255          LEA     oRTS, A1     
00007184  103C 000E              12256          MOVE.B  #14,D0          
00007188  4E4F                   12257          TRAP    #15
0000718A  4E75                   12258          RTS                 ; Return from decodeRTS subroutine
0000718C                         12259  
0000718C                         12260  
0000718C                         12261  ; ------------------------------------------------------------
0000718C                         12262  ; 16. "decodeBRA" subroutine
0000718C                         12263  ; Gary
0000718C                         12264  ;
0000718C                         12265  ; Decodes Branching by verifying then decoding displacement.
0000718C                         12266  ; ------------------------------------------------------------
0000718C                         12267  decodeBRA:
0000718C                         12268m         verifyOpcode    pBRA, (A2)
0000718C  43F8 0260              12269m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00007190  3612                   12270m         MOVE.W  (A2), D3      ; INPUT VALUE
00007192  123C 000F              12271m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00007196                         12272m         
00007196                         12273m LOOP_972: 
00007196  0C11 0030              12274m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000719A  6700 000E              12275m         BEQ     CHECKFOR0_972
0000719E  0C11 0031              12276m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000071A2  6700 0010              12277m         BEQ     CHECKFOR1_972
000071A6  6000 0012              12278m         BRA     NEXT_972      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000071AA                         12279m         
000071AA                         12280m CHECKFOR0_972: 
000071AA  0303                   12281m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000071AC  6600 05CC              12282m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000071B0  6000 0008              12283m         BRA     NEXT_972
000071B4                         12284m 
000071B4                         12285m CHECKFOR1_972:
000071B4  0303                   12286m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000071B6  6700 05C2              12287m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000071BA                         12288m 
000071BA                         12289m NEXT_972: 
000071BA  B23C 0000              12290m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000071BE  6700 0008              12291m         BEQ     COMPLETE_972  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000071C2  5301                   12292m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000071C4  1819                   12293m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000071C6  60CE                   12294m         BRA     LOOP_972      ; BEGIN LOOP AGAIN
000071C8                         12295m 
000071C8                         12296m COMPLETE_972:  ; OPCODE HAS BEEN VERIFIED
000071C8                         12297m         ENDM
000071C8  43F8 00BC              12298          LEA     oBRA, A1     
000071CC  103C 000E              12299          MOVE.B  #14,D0          
000071D0  4E4F                   12300          TRAP    #15
000071D2                         12301m         space
000071D2  43F8 00DD              12302m         LEA     OBLANK, A1
000071D6  103C 000E              12303m         MOVE.B  #14,D0          
000071DA  4E4F                   12304m         TRAP    #15
000071DC                         12305m         ENDM
000071DC                         12306m         printSign
000071DC  103C 0006              12307m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000071E0  323C 0024              12308m         MOVE.W  #36, D1     ; AN = SIGN
000071E4  4E4F                   12309m         TRAP    #15         ; OUTPUT = SIGN
000071E6                         12310m         ENDM
000071E6                         12311m         decodeDisplacement (A2)
000071E6  3612                   12312m         MOVE.W (A2), D3
000071E8  4241                   12313m         CLR     D1
000071EA  3E0A                   12314m         MOVE.W  A2, D7
000071EC  B638 0000              12315m         CMP.B   $00, D3
000071F0  6700 009E              12316m         BEQ     SBIT_975
000071F4  B638 00FF              12317m         CMP.B   $FF, D3
000071F8  6700 0128              12318m         BEQ     TBIT_975
000071FC                         12319m EBIT_975:   
000071FC  E14B                   12320m         LSL     #08, D3
000071FE  E04B                   12321m         LSR     #08, D3
00007200  48C3                   12322m         EXT.L   D3
00007202  DE83                   12323m         ADD.L   D3, D7
00007204  5487                   12324m         ADD.L   #2, D7
00007206                         12325mm         ADROUTINPUT D7     
00007206  2E07                   12326mm         MOVE.L   D7, D7
00007208  103C 0006              12327mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000720C  3207                   12328mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
0000720E  E049                   12329mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007210  E849                   12330mm         LSR.W   #4, D1      
00007212                         12331mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007212  0C01 0009              12332mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007216  6E00 000A              12333mmm         BGT     ALPHA_977
0000721A  0601 0030              12334mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000721E  6000 0006              12335mmm         BRA     DONE_977
00007222  0601 0037              12336mmm ALPHA_977: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007226  4E71                   12337mmm DONE_977: NOP
00007228                         12338mmm         ENDM
00007228  4E4F                   12339mm         TRAP    #15         ; EXECUTE OUTPUT
0000722A                         12340mm         
0000722A  3207                   12341mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
0000722C  E949                   12342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000722E  E049                   12343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007230  E849                   12344mm         LSR.W   #4, D1      
00007232                         12345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007232  0C01 0009              12346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007236  6E00 000A              12347mmm         BGT     ALPHA_978
0000723A  0601 0030              12348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000723E  6000 0006              12349mmm         BRA     DONE_978
00007242  0601 0037              12350mmm ALPHA_978: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007246  4E71                   12351mmm DONE_978: NOP
00007248                         12352mmm         ENDM
00007248  4E4F                   12353mm         TRAP    #15         ; EXECUTE OUTPUT
0000724A                         12354mm         
0000724A  3207                   12355mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
0000724C  E149                   12356mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000724E  E049                   12357mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007250  E849                   12358mm         LSR.W   #4, D1      
00007252                         12359mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007252  0C01 0009              12360mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007256  6E00 000A              12361mmm         BGT     ALPHA_979
0000725A  0601 0030              12362mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000725E  6000 0006              12363mmm         BRA     DONE_979
00007262  0601 0037              12364mmm ALPHA_979: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007266  4E71                   12365mmm DONE_979: NOP
00007268                         12366mmm         ENDM
00007268  4E4F                   12367mm         TRAP    #15         ; EXECUTE OUTPUT
0000726A                         12368mm         
0000726A  3207                   12369mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
0000726C  E149                   12370mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000726E  E949                   12371mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007270  E049                   12372mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007272  E849                   12373mm         LSR.W   #4, D1      
00007274                         12374mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007274  0C01 0009              12375mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007278  6E00 000A              12376mmm         BGT     ALPHA_980
0000727C  0601 0030              12377mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007280  6000 0006              12378mmm         BRA     DONE_980
00007284  0601 0037              12379mmm ALPHA_980: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007288  4E71                   12380mmm DONE_980: NOP
0000728A                         12381mmm         ENDM
0000728A  4E4F                   12382mm         TRAP    #15         ; EXECUTE OUTPUT       
0000728C                         12383mm         ENDM 
0000728C  6000 0126              12384m         BRA     DECODEDISPLACEMENT_975
00007290                         12385m SBIT_975:  
00007290  361A                   12386m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00007292  48C3                   12387m         EXT.L    D3
00007294  DE83                   12388m         ADD.L   D3, D7
00007296  5487                   12389m         ADD.L   #2, D7
00007298                         12390mm         ADROUTINPUT D7
00007298  2E07                   12391mm         MOVE.L   D7, D7
0000729A  103C 0006              12392mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000729E  3207                   12393mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
000072A0  E049                   12394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000072A2  E849                   12395mm         LSR.W   #4, D1      
000072A4                         12396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000072A4  0C01 0009              12397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072A8  6E00 000A              12398mmm         BGT     ALPHA_982
000072AC  0601 0030              12399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072B0  6000 0006              12400mmm         BRA     DONE_982
000072B4  0601 0037              12401mmm ALPHA_982: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000072B8  4E71                   12402mmm DONE_982: NOP
000072BA                         12403mmm         ENDM
000072BA  4E4F                   12404mm         TRAP    #15         ; EXECUTE OUTPUT
000072BC                         12405mm         
000072BC  3207                   12406mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000072BE  E949                   12407mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000072C0  E049                   12408mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000072C2  E849                   12409mm         LSR.W   #4, D1      
000072C4                         12410mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000072C4  0C01 0009              12411mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072C8  6E00 000A              12412mmm         BGT     ALPHA_983
000072CC  0601 0030              12413mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072D0  6000 0006              12414mmm         BRA     DONE_983
000072D4  0601 0037              12415mmm ALPHA_983: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000072D8  4E71                   12416mmm DONE_983: NOP
000072DA                         12417mmm         ENDM
000072DA  4E4F                   12418mm         TRAP    #15         ; EXECUTE OUTPUT
000072DC                         12419mm         
000072DC  3207                   12420mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
000072DE  E149                   12421mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000072E0  E049                   12422mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000072E2  E849                   12423mm         LSR.W   #4, D1      
000072E4                         12424mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000072E4  0C01 0009              12425mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000072E8  6E00 000A              12426mmm         BGT     ALPHA_984
000072EC  0601 0030              12427mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000072F0  6000 0006              12428mmm         BRA     DONE_984
000072F4  0601 0037              12429mmm ALPHA_984: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000072F8  4E71                   12430mmm DONE_984: NOP
000072FA                         12431mmm         ENDM
000072FA  4E4F                   12432mm         TRAP    #15         ; EXECUTE OUTPUT
000072FC                         12433mm         
000072FC  3207                   12434mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
000072FE  E149                   12435mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007300  E949                   12436mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007302  E049                   12437mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007304  E849                   12438mm         LSR.W   #4, D1      
00007306                         12439mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007306  0C01 0009              12440mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000730A  6E00 000A              12441mmm         BGT     ALPHA_985
0000730E  0601 0030              12442mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007312  6000 0006              12443mmm         BRA     DONE_985
00007316  0601 0037              12444mmm ALPHA_985: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000731A  4E71                   12445mmm DONE_985: NOP
0000731C                         12446mmm         ENDM
0000731C  4E4F                   12447mm         TRAP    #15         ; EXECUTE OUTPUT       
0000731E                         12448mm         ENDM 
0000731E  6000 0094              12449m         BRA     DECODEDISPLACEMENT_975
00007322                         12450m TBIT_975:  
00007322  361A                   12451m         MOVE.W  (A2)+, D3  ; INCREMENT A2 (D4 ISN't relevant)
00007324  48C3                   12452m         EXT.L   D3
00007326  4843                   12453m         SWAP    D3
00007328  361A                   12454m         MOVE.W  (A2)+, D3   ; INCREMENT A2 (D4 ISN't relevant)
0000732A  DE83                   12455m         ADD.L   D3, D7
0000732C  5487                   12456m         ADD.L   #2, D7
0000732E                         12457mm         ADROUTINPUT D7
0000732E  2E07                   12458mm         MOVE.L   D7, D7
00007330  103C 0006              12459mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007334  3207                   12460mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1
00007336  E049                   12461mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007338  E849                   12462mm         LSR.W   #4, D1      
0000733A                         12463mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000733A  0C01 0009              12464mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000733E  6E00 000A              12465mmm         BGT     ALPHA_987
00007342  0601 0030              12466mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007346  6000 0006              12467mmm         BRA     DONE_987
0000734A  0601 0037              12468mmm ALPHA_987: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000734E  4E71                   12469mmm DONE_987: NOP
00007350                         12470mmm         ENDM
00007350  4E4F                   12471mm         TRAP    #15         ; EXECUTE OUTPUT
00007352                         12472mm         
00007352  3207                   12473mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00007354  E949                   12474mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007356  E049                   12475mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007358  E849                   12476mm         LSR.W   #4, D1      
0000735A                         12477mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000735A  0C01 0009              12478mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000735E  6E00 000A              12479mmm         BGT     ALPHA_988
00007362  0601 0030              12480mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007366  6000 0006              12481mmm         BRA     DONE_988
0000736A  0601 0037              12482mmm ALPHA_988: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000736E  4E71                   12483mmm DONE_988: NOP
00007370                         12484mmm         ENDM
00007370  4E4F                   12485mm         TRAP    #15         ; EXECUTE OUTPUT
00007372                         12486mm         
00007372  3207                   12487mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1   ; MOVE A2 INTO D1
00007374  E149                   12488mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007376  E049                   12489mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007378  E849                   12490mm         LSR.W   #4, D1      
0000737A                         12491mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000737A  0C01 0009              12492mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000737E  6E00 000A              12493mmm         BGT     ALPHA_989
00007382  0601 0030              12494mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007386  6000 0006              12495mmm         BRA     DONE_989
0000738A  0601 0037              12496mmm ALPHA_989: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000738E  4E71                   12497mmm DONE_989: NOP
00007390                         12498mmm         ENDM
00007390  4E4F                   12499mm         TRAP    #15         ; EXECUTE OUTPUT
00007392                         12500mm         
00007392  3207                   12501mm         MOVE.W  D7, D1    ; MOVE A2 INTO D1    ; MOVE A2 INTO D1
00007394  E149                   12502mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007396  E949                   12503mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007398  E049                   12504mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000739A  E849                   12505mm         LSR.W   #4, D1      
0000739C                         12506mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000739C  0C01 0009              12507mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000073A0  6E00 000A              12508mmm         BGT     ALPHA_990
000073A4  0601 0030              12509mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000073A8  6000 0006              12510mmm         BRA     DONE_990
000073AC  0601 0037              12511mmm ALPHA_990: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000073B0  4E71                   12512mmm DONE_990: NOP
000073B2                         12513mmm         ENDM
000073B2  4E4F                   12514mm         TRAP    #15         ; EXECUTE OUTPUT       
000073B4                         12515mm         ENDM 
000073B4                         12516m DECODEDISPLACEMENT_975:
000073B4                         12517m         ENDM        
000073B4  4E75                   12518          RTS                 ; Return from decodeBRA subroutine
000073B6                         12519          
000073B6                         12520  ; ------------------------------------------------------------
000073B6                         12521  ; 17. "decodeImmediate" subroutine
000073B6                         12522  ; Gary
000073B6                         12523  ;
000073B6                         12524  ; Decodes cases where an immediate mode is encountered.
000073B6                         12525  ; Does so by calculating how many words it needs to scan before
000073B6                         12526  ; moving on. This is calculated through the adressing mode and the
000073B6                         12527  ; opcode size.
000073B6                         12528  ; ------------------------------------------------------------
000073B6                         12529  decodeImmediate:
000073B6  4EB9 0000777A          12530          JSR     outputData
000073BC  4241                   12531          CLR     D1
000073BE  4246                   12532          CLR     D6
000073C0  364A                   12533          MOVEA   A2, A3
000073C2  381A                   12534          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
000073C4                         12535m         prepareAdrMode  #$1,(A3)  
000073C4  3C3C 0001              12536m         MOVE.W  #$1, D6      ; INPUT VALUE
000073C8  3213                   12537m         MOVE.W  (A3), D1
000073CA  BC3C 0001              12538m         CMP.B   #$01, D6
000073CE  6700 000C              12539m         BEQ     ADRSOURCE_991    
000073D2                         12540m ADRDEST_991:
000073D2  EF49                   12541m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000073D4  E049                   12542m         LSR     #$08, D1
000073D6  EA49                   12543m         LSR     #$05, D1
000073D8  6000 000A              12544m         BRA     COMPLETE_991 
000073DC                         12545m ADRSOURCE_991:                
000073DC  E149                   12546m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000073DE  E549                   12547m         LSL     #$02, D1
000073E0  E049                   12548m         LSR     #$08, D1
000073E2  EA49                   12549m         LSR     #$05, D1
000073E4                         12550m COMPLETE_991:  ; OPCODE HAS BEEN VERIFIED
000073E4                         12551m         ENDM        
000073E4                         12552m         decodeSizeLow   (A3)
000073E4  3613                   12553m         MOVE.W  (A3), D3      ; INPUT VALUE   
000073E6  4246                   12554m         CLR     D6   
000073E8                         12555m CHECKFORBORW_992: 
000073E8  0803 0007              12556m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000073EC  6600 0006              12557m         BNE     CHECKFORL_992 ; IF NOT GO TO LONGWORD SIZE         
000073F0  6000 0006              12558m         BRA     COMPLETE_992  
000073F4                         12559m CHECKFORL_992:
000073F4  1C3C 0001              12560m         MOVE.B  #$1, D6
000073F8                         12561m COMPLETE_992:  ; SIZE HAS BEEN CHECEKED
000073F8                         12562m         ENDM 
000073F8  1E01                   12563          MOVE.B  D1, D7
000073FA  BC3C 0001              12564          CMP.B   #1, D6
000073FE  6700 009C              12565          BEQ     decodeImmediateL
00007402                         12566m         space
00007402  43F8 00DD              12567m         LEA     OBLANK, A1
00007406  103C 000E              12568m         MOVE.B  #14,D0          
0000740A  4E4F                   12569m         TRAP    #15
0000740C                         12570m         ENDM
0000740C                         12571m         adrOut
0000740C  103C 0006              12572m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007410  3212                   12573m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007412  E049                   12574m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007414  E849                   12575m         LSR.W   #4, D1      
00007416                         12576mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007416  0C01 0009              12577mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000741A  6E00 000A              12578mm         BGT     ALPHA_995
0000741E  0601 0030              12579mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007422  6000 0006              12580mm         BRA     DONE_995
00007426  0601 0037              12581mm ALPHA_995: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000742A  4E71                   12582mm DONE_995: NOP
0000742C                         12583mm         ENDM
0000742C  4E4F                   12584m         TRAP    #15         ; EXECUTE OUTPUT
0000742E                         12585m         
0000742E  3212                   12586m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007430  E949                   12587m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007432  E049                   12588m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007434  E849                   12589m         LSR.W   #4, D1      
00007436                         12590mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007436  0C01 0009              12591mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000743A  6E00 000A              12592mm         BGT     ALPHA_996
0000743E  0601 0030              12593mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007442  6000 0006              12594mm         BRA     DONE_996
00007446  0601 0037              12595mm ALPHA_996: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000744A  4E71                   12596mm DONE_996: NOP
0000744C                         12597mm         ENDM
0000744C  4E4F                   12598m         TRAP    #15         ; EXECUTE OUTPUT
0000744E                         12599m         
0000744E  3212                   12600m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007450  E149                   12601m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007452  E049                   12602m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007454  E849                   12603m         LSR.W   #4, D1      
00007456                         12604mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007456  0C01 0009              12605mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000745A  6E00 000A              12606mm         BGT     ALPHA_997
0000745E  0601 0030              12607mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007462  6000 0006              12608mm         BRA     DONE_997
00007466  0601 0037              12609mm ALPHA_997: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000746A  4E71                   12610mm DONE_997: NOP
0000746C                         12611mm         ENDM
0000746C  4E4F                   12612m         TRAP    #15         ; EXECUTE OUTPUT
0000746E                         12613m         
0000746E  3212                   12614m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007470  E149                   12615m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007472  E949                   12616m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007474  E049                   12617m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007476  E849                   12618m         LSR.W   #4, D1      
00007478                         12619mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007478  0C01 0009              12620mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000747C  6E00 000A              12621mm         BGT     ALPHA_998
00007480  0601 0030              12622mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007484  6000 0006              12623mm         BRA     DONE_998
00007488  0601 0037              12624mm ALPHA_998: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000748C  4E71                   12625mm DONE_998: NOP
0000748E                         12626mm         ENDM
0000748E  4E4F                   12627m         TRAP    #15         ; EXECUTE OUTPUT       
00007490                         12628m         ENDM 
00007490                         12629          
00007490  BE3C 0007              12630          CMP.B   #$07, D7
00007494  6700 0130              12631          BEQ     decodeImmediateDest
00007498                         12632          
00007498  6000 02DE              12633          BRA     decodeImmediateComp
0000749C                         12634  decodeImmediateL:
0000749C                         12635m         space
0000749C  43F8 00DD              12636m         LEA     OBLANK, A1
000074A0  103C 000E              12637m         MOVE.B  #14,D0          
000074A4  4E4F                   12638m         TRAP    #15
000074A6                         12639m         ENDM
000074A6                         12640m         adrOut
000074A6  103C 0006              12641m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000074AA  3212                   12642m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000074AC  E049                   12643m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000074AE  E849                   12644m         LSR.W   #4, D1      
000074B0                         12645mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074B0  0C01 0009              12646mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074B4  6E00 000A              12647mm         BGT     ALPHA_1001
000074B8  0601 0030              12648mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000074BC  6000 0006              12649mm         BRA     DONE_1001
000074C0  0601 0037              12650mm ALPHA_1001: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000074C4  4E71                   12651mm DONE_1001: NOP
000074C6                         12652mm         ENDM
000074C6  4E4F                   12653m         TRAP    #15         ; EXECUTE OUTPUT
000074C8                         12654m         
000074C8  3212                   12655m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000074CA  E949                   12656m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000074CC  E049                   12657m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000074CE  E849                   12658m         LSR.W   #4, D1      
000074D0                         12659mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074D0  0C01 0009              12660mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074D4  6E00 000A              12661mm         BGT     ALPHA_1002
000074D8  0601 0030              12662mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000074DC  6000 0006              12663mm         BRA     DONE_1002
000074E0  0601 0037              12664mm ALPHA_1002: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000074E4  4E71                   12665mm DONE_1002: NOP
000074E6                         12666mm         ENDM
000074E6  4E4F                   12667m         TRAP    #15         ; EXECUTE OUTPUT
000074E8                         12668m         
000074E8  3212                   12669m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000074EA  E149                   12670m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000074EC  E049                   12671m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000074EE  E849                   12672m         LSR.W   #4, D1      
000074F0                         12673mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000074F0  0C01 0009              12674mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000074F4  6E00 000A              12675mm         BGT     ALPHA_1003
000074F8  0601 0030              12676mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000074FC  6000 0006              12677mm         BRA     DONE_1003
00007500  0601 0037              12678mm ALPHA_1003: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007504  4E71                   12679mm DONE_1003: NOP
00007506                         12680mm         ENDM
00007506  4E4F                   12681m         TRAP    #15         ; EXECUTE OUTPUT
00007508                         12682m         
00007508  3212                   12683m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000750A  E149                   12684m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000750C  E949                   12685m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000750E  E049                   12686m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007510  E849                   12687m         LSR.W   #4, D1      
00007512                         12688mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007512  0C01 0009              12689mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007516  6E00 000A              12690mm         BGT     ALPHA_1004
0000751A  0601 0030              12691mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000751E  6000 0006              12692mm         BRA     DONE_1004
00007522  0601 0037              12693mm ALPHA_1004: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007526  4E71                   12694mm DONE_1004: NOP
00007528                         12695mm         ENDM
00007528  4E4F                   12696m         TRAP    #15         ; EXECUTE OUTPUT       
0000752A                         12697m         ENDM 
0000752A                         12698m         space
0000752A  43F8 00DD              12699m         LEA     OBLANK, A1
0000752E  103C 000E              12700m         MOVE.B  #14,D0          
00007532  4E4F                   12701m         TRAP    #15
00007534                         12702m         ENDM
00007534  381A                   12703          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
00007536                         12704m         adrOut
00007536  103C 0006              12705m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000753A  3212                   12706m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000753C  E049                   12707m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000753E  E849                   12708m         LSR.W   #4, D1      
00007540                         12709mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007540  0C01 0009              12710mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007544  6E00 000A              12711mm         BGT     ALPHA_1007
00007548  0601 0030              12712mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000754C  6000 0006              12713mm         BRA     DONE_1007
00007550  0601 0037              12714mm ALPHA_1007: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007554  4E71                   12715mm DONE_1007: NOP
00007556                         12716mm         ENDM
00007556  4E4F                   12717m         TRAP    #15         ; EXECUTE OUTPUT
00007558                         12718m         
00007558  3212                   12719m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000755A  E949                   12720m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000755C  E049                   12721m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000755E  E849                   12722m         LSR.W   #4, D1      
00007560                         12723mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007560  0C01 0009              12724mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007564  6E00 000A              12725mm         BGT     ALPHA_1008
00007568  0601 0030              12726mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000756C  6000 0006              12727mm         BRA     DONE_1008
00007570  0601 0037              12728mm ALPHA_1008: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007574  4E71                   12729mm DONE_1008: NOP
00007576                         12730mm         ENDM
00007576  4E4F                   12731m         TRAP    #15         ; EXECUTE OUTPUT
00007578                         12732m         
00007578  3212                   12733m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000757A  E149                   12734m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000757C  E049                   12735m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000757E  E849                   12736m         LSR.W   #4, D1      
00007580                         12737mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007580  0C01 0009              12738mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007584  6E00 000A              12739mm         BGT     ALPHA_1009
00007588  0601 0030              12740mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000758C  6000 0006              12741mm         BRA     DONE_1009
00007590  0601 0037              12742mm ALPHA_1009: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007594  4E71                   12743mm DONE_1009: NOP
00007596                         12744mm         ENDM
00007596  4E4F                   12745m         TRAP    #15         ; EXECUTE OUTPUT
00007598                         12746m         
00007598  3212                   12747m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000759A  E149                   12748m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000759C  E949                   12749m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000759E  E049                   12750m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000075A0  E849                   12751m         LSR.W   #4, D1      
000075A2                         12752mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000075A2  0C01 0009              12753mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000075A6  6E00 000A              12754mm         BGT     ALPHA_1010
000075AA  0601 0030              12755mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000075AE  6000 0006              12756mm         BRA     DONE_1010
000075B2  0601 0037              12757mm ALPHA_1010: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000075B6  4E71                   12758mm DONE_1010: NOP
000075B8                         12759mm         ENDM
000075B8  4E4F                   12760m         TRAP    #15         ; EXECUTE OUTPUT       
000075BA                         12761m         ENDM 
000075BA                         12762          
000075BA  BE3C 0007              12763          CMP.B   #$07, D7
000075BE  6700 0006              12764          BEQ     decodeImmediateDest
000075C2                         12765  
000075C2  6000 01B4              12766          BRA     decodeImmediateComp
000075C6                         12767  decodeImmediateDest:
000075C6  3E13                   12768          MOVE.W  (A3), D7
000075C8  381A                   12769          MOVE.W  (A2)+, D4   ; Increment A2 (D4 isn't relevant)
000075CA  0807 0000              12770          BTST    #0, D7
000075CE  6600 0094              12771          BNE     decodeImmediateDestL
000075D2                         12772  decodeImmediateDestW:        
000075D2                         12773m         space
000075D2  43F8 00DD              12774m         LEA     OBLANK, A1
000075D6  103C 000E              12775m         MOVE.B  #14,D0          
000075DA  4E4F                   12776m         TRAP    #15
000075DC                         12777m         ENDM
000075DC                         12778m         adrOut 
000075DC  103C 0006              12779m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000075E0  3212                   12780m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000075E2  E049                   12781m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000075E4  E849                   12782m         LSR.W   #4, D1      
000075E6                         12783mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000075E6  0C01 0009              12784mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000075EA  6E00 000A              12785mm         BGT     ALPHA_1013
000075EE  0601 0030              12786mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000075F2  6000 0006              12787mm         BRA     DONE_1013
000075F6  0601 0037              12788mm ALPHA_1013: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000075FA  4E71                   12789mm DONE_1013: NOP
000075FC                         12790mm         ENDM
000075FC  4E4F                   12791m         TRAP    #15         ; EXECUTE OUTPUT
000075FE                         12792m         
000075FE  3212                   12793m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007600  E949                   12794m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007602  E049                   12795m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007604  E849                   12796m         LSR.W   #4, D1      
00007606                         12797mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007606  0C01 0009              12798mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000760A  6E00 000A              12799mm         BGT     ALPHA_1014
0000760E  0601 0030              12800mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007612  6000 0006              12801mm         BRA     DONE_1014
00007616  0601 0037              12802mm ALPHA_1014: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000761A  4E71                   12803mm DONE_1014: NOP
0000761C                         12804mm         ENDM
0000761C  4E4F                   12805m         TRAP    #15         ; EXECUTE OUTPUT
0000761E                         12806m         
0000761E  3212                   12807m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007620  E149                   12808m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007622  E049                   12809m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007624  E849                   12810m         LSR.W   #4, D1      
00007626                         12811mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007626  0C01 0009              12812mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000762A  6E00 000A              12813mm         BGT     ALPHA_1015
0000762E  0601 0030              12814mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007632  6000 0006              12815mm         BRA     DONE_1015
00007636  0601 0037              12816mm ALPHA_1015: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000763A  4E71                   12817mm DONE_1015: NOP
0000763C                         12818mm         ENDM
0000763C  4E4F                   12819m         TRAP    #15         ; EXECUTE OUTPUT
0000763E                         12820m         
0000763E  3212                   12821m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007640  E149                   12822m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00007642  E949                   12823m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00007644  E049                   12824m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007646  E849                   12825m         LSR.W   #4, D1      
00007648                         12826mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007648  0C01 0009              12827mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000764C  6E00 000A              12828mm         BGT     ALPHA_1016
00007650  0601 0030              12829mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007654  6000 0006              12830mm         BRA     DONE_1016
00007658  0601 0037              12831mm ALPHA_1016: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000765C  4E71                   12832mm DONE_1016: NOP
0000765E                         12833mm         ENDM
0000765E  4E4F                   12834m         TRAP    #15         ; EXECUTE OUTPUT       
00007660                         12835m         ENDM 
00007660  6000 0116              12836          BRA     decodeImmediateComp
00007664                         12837  decodeImmediateDestL:
00007664                         12838m         space
00007664  43F8 00DD              12839m         LEA     OBLANK, A1
00007668  103C 000E              12840m         MOVE.B  #14,D0          
0000766C  4E4F                   12841m         TRAP    #15
0000766E                         12842m         ENDM
0000766E                         12843m         adrOut
0000766E  103C 0006              12844m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00007672  3212                   12845m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007674  E049                   12846m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007676  E849                   12847m         LSR.W   #4, D1      
00007678                         12848mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007678  0C01 0009              12849mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000767C  6E00 000A              12850mm         BGT     ALPHA_1019
00007680  0601 0030              12851mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007684  6000 0006              12852mm         BRA     DONE_1019
00007688  0601 0037              12853mm ALPHA_1019: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000768C  4E71                   12854mm DONE_1019: NOP
0000768E                         12855mm         ENDM
0000768E  4E4F                   12856m         TRAP    #15         ; EXECUTE OUTPUT
00007690                         12857m         
00007690  3212                   12858m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007692  E949                   12859m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00007694  E049                   12860m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00007696  E849                   12861m         LSR.W   #4, D1      
00007698                         12862mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007698  0C01 0009              12863mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000769C  6E00 000A              12864mm         BGT     ALPHA_1020
000076A0  0601 0030              12865mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076A4  6000 0006              12866mm         BRA     DONE_1020
000076A8  0601 0037              12867mm ALPHA_1020: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076AC  4E71                   12868mm DONE_1020: NOP
000076AE                         12869mm         ENDM
000076AE  4E4F                   12870m         TRAP    #15         ; EXECUTE OUTPUT
000076B0                         12871m         
000076B0  3212                   12872m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076B2  E149                   12873m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000076B4  E049                   12874m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000076B6  E849                   12875m         LSR.W   #4, D1      
000076B8                         12876mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076B8  0C01 0009              12877mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000076BC  6E00 000A              12878mm         BGT     ALPHA_1021
000076C0  0601 0030              12879mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076C4  6000 0006              12880mm         BRA     DONE_1021
000076C8  0601 0037              12881mm ALPHA_1021: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076CC  4E71                   12882mm DONE_1021: NOP
000076CE                         12883mm         ENDM
000076CE  4E4F                   12884m         TRAP    #15         ; EXECUTE OUTPUT
000076D0                         12885m         
000076D0  3212                   12886m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076D2  E149                   12887m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000076D4  E949                   12888m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000076D6  E049                   12889m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000076D8  E849                   12890m         LSR.W   #4, D1      
000076DA                         12891mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076DA  0C01 0009              12892mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000076DE  6E00 000A              12893mm         BGT     ALPHA_1022
000076E2  0601 0030              12894mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000076E6  6000 0006              12895mm         BRA     DONE_1022
000076EA  0601 0037              12896mm ALPHA_1022: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000076EE  4E71                   12897mm DONE_1022: NOP
000076F0                         12898mm         ENDM
000076F0  4E4F                   12899m         TRAP    #15         ; EXECUTE OUTPUT       
000076F2                         12900m         ENDM 
000076F2  381A                   12901          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
000076F4                         12902m         adrOut
000076F4  103C 0006              12903m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000076F8  3212                   12904m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000076FA  E049                   12905m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000076FC  E849                   12906m         LSR.W   #4, D1      
000076FE                         12907mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000076FE  0C01 0009              12908mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007702  6E00 000A              12909mm         BGT     ALPHA_1024
00007706  0601 0030              12910mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000770A  6000 0006              12911mm         BRA     DONE_1024
0000770E  0601 0037              12912mm ALPHA_1024: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007712  4E71                   12913mm DONE_1024: NOP
00007714                         12914mm         ENDM
00007714  4E4F                   12915m         TRAP    #15         ; EXECUTE OUTPUT
00007716                         12916m         
00007716  3212                   12917m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007718  E949                   12918m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000771A  E049                   12919m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000771C  E849                   12920m         LSR.W   #4, D1      
0000771E                         12921mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000771E  0C01 0009              12922mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007722  6E00 000A              12923mm         BGT     ALPHA_1025
00007726  0601 0030              12924mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000772A  6000 0006              12925mm         BRA     DONE_1025
0000772E  0601 0037              12926mm ALPHA_1025: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007732  4E71                   12927mm DONE_1025: NOP
00007734                         12928mm         ENDM
00007734  4E4F                   12929m         TRAP    #15         ; EXECUTE OUTPUT
00007736                         12930m         
00007736  3212                   12931m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007738  E149                   12932m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000773A  E049                   12933m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000773C  E849                   12934m         LSR.W   #4, D1      
0000773E                         12935mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000773E  0C01 0009              12936mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007742  6E00 000A              12937mm         BGT     ALPHA_1026
00007746  0601 0030              12938mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000774A  6000 0006              12939mm         BRA     DONE_1026
0000774E  0601 0037              12940mm ALPHA_1026: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007752  4E71                   12941mm DONE_1026: NOP
00007754                         12942mm         ENDM
00007754  4E4F                   12943m         TRAP    #15         ; EXECUTE OUTPUT
00007756                         12944m         
00007756  3212                   12945m         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00007758  E149                   12946m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000775A  E949                   12947m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000775C  E049                   12948m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000775E  E849                   12949m         LSR.W   #4, D1      
00007760                         12950mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00007760  0C01 0009              12951mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00007764  6E00 000A              12952mm         BGT     ALPHA_1027
00007768  0601 0030              12953mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000776C  6000 0006              12954mm         BRA     DONE_1027
00007770  0601 0037              12955mm ALPHA_1027: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007774  4E71                   12956mm DONE_1027: NOP
00007776                         12957mm         ENDM
00007776  4E4F                   12958m         TRAP    #15         ; EXECUTE OUTPUT       
00007778                         12959m         ENDM 
00007778                         12960          
00007778                         12961  decodeImmediateComp:
00007778  4E75                   12962          RTS                 ; Return from decodeDIVU subroutine
0000777A                         12963  
0000777A                         12964  ; ========================================================================
0000777A                         12965  ; Generic Helper Functions
0000777A                         12966  ; 
0000777A                         12967  ; Set of subroutines which do various tasks which are repeated frequently.
0000777A                         12968  ; Each helper function should be commented with required input and output.
0000777A                         12969  ; 
0000777A                         12970  ; If input is required, request through D0, D1, etc
0000777A                         12971  ; Return using D0
0000777A                         12972  ; ========================================================================
0000777A                         12973  
0000777A                         12974  ; ------------------------------------------------------------
0000777A                         12975  ; outputData
0000777A                         12976  ; Jonathan
0000777A                         12977  ;
0000777A                         12978  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000777A                         12979  ; ------------------------------------------------------------
0000777A                         12980  outputData:
0000777A  103C 0006              12981          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000777E  323C 003D              12982          MOVE.W  #61, D1     ; An = sign
00007782  4E4F                   12983          TRAP    #15         ; Output = sign
00007784                         12984          
00007784  3212                   12985          MOVE.W  (A2), D1    ; Move A2 into D1
00007786  E049                   12986          LSR.W   #8, D1      ; Get the first hex digit of D1
00007788  E849                   12987          LSR.W   #4, D1      
0000778A                         12988m         ConvertHtoA D1      ; Convert D1 to a character
0000778A  0C01 0009              12989m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000778E  6E00 000A              12990m         BGT     ALPHA_1028
00007792  0601 0030              12991m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00007796  6000 0006              12992m         BRA     DONE_1028
0000779A  0601 0037              12993m ALPHA_1028: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000779E  4E71                   12994m DONE_1028: NOP
000077A0                         12995m         ENDM
000077A0  4E4F                   12996          TRAP    #15         ; Execute output
000077A2                         12997          
000077A2  3212                   12998          MOVE.W  (A2), D1    ; Move A2 into D1
000077A4  E949                   12999          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
000077A6  E049                   13000          LSR.W   #8, D1      ; Get the first hex digit of D1
000077A8  E849                   13001          LSR.W   #4, D1      
000077AA                         13002m         ConvertHtoA D1      ; Convert D1 to a character
000077AA  0C01 0009              13003m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077AE  6E00 000A              13004m         BGT     ALPHA_1029
000077B2  0601 0030              13005m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077B6  6000 0006              13006m         BRA     DONE_1029
000077BA  0601 0037              13007m ALPHA_1029: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000077BE  4E71                   13008m DONE_1029: NOP
000077C0                         13009m         ENDM
000077C0  4E4F                   13010          TRAP    #15         ; Execute output
000077C2                         13011          
000077C2  3212                   13012          MOVE.W  (A2), D1    ; Move A2 into D1
000077C4  E149                   13013          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
000077C6  E049                   13014          LSR.W   #8, D1      ; Get the first hex digit of D1
000077C8  E849                   13015          LSR.W   #4, D1      
000077CA                         13016m         ConvertHtoA D1      ; Convert D1 to a character
000077CA  0C01 0009              13017m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077CE  6E00 000A              13018m         BGT     ALPHA_1030
000077D2  0601 0030              13019m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077D6  6000 0006              13020m         BRA     DONE_1030
000077DA  0601 0037              13021m ALPHA_1030: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000077DE  4E71                   13022m DONE_1030: NOP
000077E0                         13023m         ENDM
000077E0  4E4F                   13024          TRAP    #15         ; Execute output
000077E2                         13025          
000077E2  3212                   13026          MOVE.W  (A2), D1    ; Move A2 into D1
000077E4  E149                   13027          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
000077E6  E949                   13028          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
000077E8  E049                   13029          LSR.W   #8, D1      ; Get the first hex digit of D1
000077EA  E849                   13030          LSR.W   #4, D1      
000077EC                         13031m         ConvertHtoA D1      ; Convert D1 to a character
000077EC  0C01 0009              13032m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000077F0  6E00 000A              13033m         BGT     ALPHA_1031
000077F4  0601 0030              13034m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000077F8  6000 0006              13035m         BRA     DONE_1031
000077FC  0601 0037              13036m ALPHA_1031: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00007800  4E71                   13037m DONE_1031: NOP
00007802                         13038m         ENDM
00007802  4E4F                   13039          TRAP    #15         ; Execute output
00007804  4E75                   13040          RTS
00007806                         13041  
00007806                         13042  
00007806                         13043  
00007806                         13044  
00007806                         13045  
00007806                         13046  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00007806                         13047                              ; End of Code
00007806                         13048          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_161  2396
ADRABSOLUTEDST_225  2982
ADRABSOLUTEDST_25   162E
ADRABSOLUTEDST_297  30D2
ADRABSOLUTEDST_361  36BE
ADRABSOLUTEDST_428  3D12
ADRABSOLUTEDST_495  4366
ADRABSOLUTEDST_562  49C4
ADRABSOLUTEDST_634  5114
ADRABSOLUTEDST_698  5700
ADRABSOLUTEDST_766  5D90
ADRABSOLUTEDST_90   1C20
ADRABSOLUTEDST_908  6DB0
ADRABSOLUTEL_161    2610
ADRABSOLUTEL_225    2BFC
ADRABSOLUTEL_25     18A8
ADRABSOLUTEL_297    334C
ADRABSOLUTEL_361    3938
ADRABSOLUTEL_428    3F8C
ADRABSOLUTEL_495    45E0
ADRABSOLUTEL_562    4C3E
ADRABSOLUTEL_634    538E
ADRABSOLUTEL_698    597A
ADRABSOLUTEL_766    600A
ADRABSOLUTEL_90     1E9A
ADRABSOLUTEL_908    702A
ADRABSOLUTEW_161    257A
ADRABSOLUTEW_225    2B66
ADRABSOLUTEW_25     1812
ADRABSOLUTEW_297    32B6
ADRABSOLUTEW_361    38A2
ADRABSOLUTEW_428    3EF6
ADRABSOLUTEW_495    454A
ADRABSOLUTEW_562    4BA8
ADRABSOLUTEW_634    52F8
ADRABSOLUTEW_698    58E4
ADRABSOLUTEW_766    5F74
ADRABSOLUTEW_90     1E04
ADRABSOLUTEW_908    6F94
ADRABSOLUTE_161     2378
ADRABSOLUTE_225     2964
ADRABSOLUTE_25      1610
ADRABSOLUTE_297     30B4
ADRABSOLUTE_361     36A0
ADRABSOLUTE_428     3CF4
ADRABSOLUTE_495     4348
ADRABSOLUTE_562     49A6
ADRABSOLUTE_634     50F6
ADRABSOLUTE_698     56E2
ADRABSOLUTE_766     5D72
ADRABSOLUTE_90      1C02
ADRABSOLUTE_908     6D92
ADRDEST_160         214E
ADRDEST_224         273A
ADRDEST_24          13E6
ADRDEST_296         2E8A
ADRDEST_360         3476
ADRDEST_427         3ACA
ADRDEST_494         411E
ADRDEST_561         477C
ADRDEST_633         4ECC
ADRDEST_697         54B8
ADRDEST_765         5B48
ADRDEST_89          19D8
ADRDEST_907         6B68
ADRDEST_991         73D2
ADRIMMEDIATEL_161   2454
ADRIMMEDIATEL_225   2A40
ADRIMMEDIATEL_25    16EC
ADRIMMEDIATEL_297   3190
ADRIMMEDIATEL_361   377C
ADRIMMEDIATEL_428   3DD0
ADRIMMEDIATEL_495   4424
ADRIMMEDIATEL_562   4A82
ADRIMMEDIATEL_634   51D2
ADRIMMEDIATEL_698   57BE
ADRIMMEDIATEL_766   5E4E
ADRIMMEDIATEL_90    1CDE
ADRIMMEDIATEL_908   6E6E
ADRIMMEDIATEW_161   23B4
ADRIMMEDIATEW_225   29A0
ADRIMMEDIATEW_25    164C
ADRIMMEDIATEW_297   30F0
ADRIMMEDIATEW_361   36DC
ADRIMMEDIATEW_428   3D30
ADRIMMEDIATEW_495   4384
ADRIMMEDIATEW_562   49E2
ADRIMMEDIATEW_634   5132
ADRIMMEDIATEW_698   571E
ADRIMMEDIATEW_766   5DAE
ADRIMMEDIATEW_90    1C3E
ADRIMMEDIATEW_908   6DCE
ADRIMMEDIATE_161    23AC
ADRIMMEDIATE_225    2998
ADRIMMEDIATE_25     1644
ADRIMMEDIATE_297    30E8
ADRIMMEDIATE_361    36D4
ADRIMMEDIATE_428    3D28
ADRIMMEDIATE_495    437C
ADRIMMEDIATE_562    49DA
ADRIMMEDIATE_634    512A
ADRIMMEDIATE_698    5716
ADRIMMEDIATE_766    5DA6
ADRIMMEDIATE_90     1C36
ADRIMMEDIATE_908    6DC6
ADROUT              580
ADROUTINPUT         AEB
ADRREGDIRECTDEST_161  21D8
ADRREGDIRECTDEST_225  27C4
ADRREGDIRECTDEST_25  1470
ADRREGDIRECTDEST_297  2F14
ADRREGDIRECTDEST_361  3500
ADRREGDIRECTDEST_428  3B54
ADRREGDIRECTDEST_495  41A8
ADRREGDIRECTDEST_562  4806
ADRREGDIRECTDEST_634  4F56
ADRREGDIRECTDEST_698  5542
ADRREGDIRECTDEST_766  5BD2
ADRREGDIRECTDEST_90  1A62
ADRREGDIRECTDEST_908  6BF2
ADRREGDIRECTSRC_161  21F4
ADRREGDIRECTSRC_225  27E0
ADRREGDIRECTSRC_25  148C
ADRREGDIRECTSRC_297  2F30
ADRREGDIRECTSRC_361  351C
ADRREGDIRECTSRC_428  3B70
ADRREGDIRECTSRC_495  41C4
ADRREGDIRECTSRC_562  4822
ADRREGDIRECTSRC_634  4F72
ADRREGDIRECTSRC_698  555E
ADRREGDIRECTSRC_766  5BEE
ADRREGDIRECTSRC_90  1A7E
ADRREGDIRECTSRC_908  6C0E
ADRREGDIRECT_161    21D0
ADRREGDIRECT_225    27BC
ADRREGDIRECT_25     1468
ADRREGDIRECT_297    2F0C
ADRREGDIRECT_361    34F8
ADRREGDIRECT_428    3B4C
ADRREGDIRECT_495    41A0
ADRREGDIRECT_562    47FE
ADRREGDIRECT_634    4F4E
ADRREGDIRECT_698    553A
ADRREGDIRECT_766    5BCA
ADRREGDIRECT_90     1A5A
ADRREGDIRECT_908    6BEA
ADRREGINDIRECTDEST_161  221A
ADRREGINDIRECTDEST_225  2806
ADRREGINDIRECTDEST_25  14B2
ADRREGINDIRECTDEST_297  2F56
ADRREGINDIRECTDEST_361  3542
ADRREGINDIRECTDEST_428  3B96
ADRREGINDIRECTDEST_495  41EA
ADRREGINDIRECTDEST_562  4848
ADRREGINDIRECTDEST_634  4F98
ADRREGINDIRECTDEST_698  5584
ADRREGINDIRECTDEST_766  5C14
ADRREGINDIRECTDEST_90  1AA4
ADRREGINDIRECTDEST_908  6C34
ADRREGINDIRECTSRC_161  224A
ADRREGINDIRECTSRC_225  2836
ADRREGINDIRECTSRC_25  14E2
ADRREGINDIRECTSRC_297  2F86
ADRREGINDIRECTSRC_361  3572
ADRREGINDIRECTSRC_428  3BC6
ADRREGINDIRECTSRC_495  421A
ADRREGINDIRECTSRC_562  4878
ADRREGINDIRECTSRC_634  4FC8
ADRREGINDIRECTSRC_698  55B4
ADRREGINDIRECTSRC_766  5C44
ADRREGINDIRECTSRC_90  1AD4
ADRREGINDIRECTSRC_908  6C64
ADRREGINDIRECT_161  2212
ADRREGINDIRECT_225  27FE
ADRREGINDIRECT_25   14AA
ADRREGINDIRECT_297  2F4E
ADRREGINDIRECT_361  353A
ADRREGINDIRECT_428  3B8E
ADRREGINDIRECT_495  41E2
ADRREGINDIRECT_562  4840
ADRREGINDIRECT_634  4F90
ADRREGINDIRECT_698  557C
ADRREGINDIRECT_766  5C0C
ADRREGINDIRECT_90   1A9C
ADRREGINDIRECT_908  6C2C
ADRREGPOSTINCDEST_161  2284
ADRREGPOSTINCDEST_225  2870
ADRREGPOSTINCDEST_25  151C
ADRREGPOSTINCDEST_297  2FC0
ADRREGPOSTINCDEST_361  35AC
ADRREGPOSTINCDEST_428  3C00
ADRREGPOSTINCDEST_495  4254
ADRREGPOSTINCDEST_562  48B2
ADRREGPOSTINCDEST_634  5002
ADRREGPOSTINCDEST_698  55EE
ADRREGPOSTINCDEST_766  5C7E
ADRREGPOSTINCDEST_90  1B0E
ADRREGPOSTINCDEST_908  6C9E
ADRREGPOSTINCSRC_161  22BE
ADRREGPOSTINCSRC_225  28AA
ADRREGPOSTINCSRC_25  1556
ADRREGPOSTINCSRC_297  2FFA
ADRREGPOSTINCSRC_361  35E6
ADRREGPOSTINCSRC_428  3C3A
ADRREGPOSTINCSRC_495  428E
ADRREGPOSTINCSRC_562  48EC
ADRREGPOSTINCSRC_634  503C
ADRREGPOSTINCSRC_698  5628
ADRREGPOSTINCSRC_766  5CB8
ADRREGPOSTINCSRC_90  1B48
ADRREGPOSTINCSRC_908  6CD8
ADRREGPOSTINC_161   227C
ADRREGPOSTINC_225   2868
ADRREGPOSTINC_25    1514
ADRREGPOSTINC_297   2FB8
ADRREGPOSTINC_361   35A4
ADRREGPOSTINC_428   3BF8
ADRREGPOSTINC_495   424C
ADRREGPOSTINC_562   48AA
ADRREGPOSTINC_634   4FFA
ADRREGPOSTINC_698   55E6
ADRREGPOSTINC_766   5C76
ADRREGPOSTINC_90    1B06
ADRREGPOSTINC_908   6C96
ADRREGPREDECDEST_161  2302
ADRREGPREDECDEST_225  28EE
ADRREGPREDECDEST_25  159A
ADRREGPREDECDEST_297  303E
ADRREGPREDECDEST_361  362A
ADRREGPREDECDEST_428  3C7E
ADRREGPREDECDEST_495  42D2
ADRREGPREDECDEST_562  4930
ADRREGPREDECDEST_634  5080
ADRREGPREDECDEST_698  566C
ADRREGPREDECDEST_766  5CFC
ADRREGPREDECDEST_90  1B8C
ADRREGPREDECDEST_908  6D1C
ADRREGPREDECSRC_161  233C
ADRREGPREDECSRC_225  2928
ADRREGPREDECSRC_25  15D4
ADRREGPREDECSRC_297  3078
ADRREGPREDECSRC_361  3664
ADRREGPREDECSRC_428  3CB8
ADRREGPREDECSRC_495  430C
ADRREGPREDECSRC_562  496A
ADRREGPREDECSRC_634  50BA
ADRREGPREDECSRC_698  56A6
ADRREGPREDECSRC_766  5D36
ADRREGPREDECSRC_90  1BC6
ADRREGPREDECSRC_908  6D56
ADRREGPREDEC_161    22FA
ADRREGPREDEC_225    28E6
ADRREGPREDEC_25     1592
ADRREGPREDEC_297    3036
ADRREGPREDEC_361    3622
ADRREGPREDEC_428    3C76
ADRREGPREDEC_495    42CA
ADRREGPREDEC_562    4928
ADRREGPREDEC_634    5078
ADRREGPREDEC_698    5664
ADRREGPREDEC_766    5CF4
ADRREGPREDEC_90     1B84
ADRREGPREDEC_908    6D14
ADRSOURCE_160       2158
ADRSOURCE_224       2744
ADRSOURCE_24        13F0
ADRSOURCE_296       2E94
ADRSOURCE_360       3480
ADRSOURCE_427       3AD4
ADRSOURCE_494       4128
ADRSOURCE_561       4786
ADRSOURCE_633       4ED6
ADRSOURCE_697       54C2
ADRSOURCE_765       5B52
ADRSOURCE_89        19E2
ADRSOURCE_907       6B72
ADRSOURCE_991       73DC
ALPHA_10            10FA
ALPHA_1001          74C0
ALPHA_1002          74E0
ALPHA_1003          7500
ALPHA_1004          7522
ALPHA_1007          7550
ALPHA_1008          7570
ALPHA_1009          7590
ALPHA_1010          75B2
ALPHA_1013          75F6
ALPHA_1014          7616
ALPHA_1015          7636
ALPHA_1016          7658
ALPHA_1019          7688
ALPHA_1020          76A8
ALPHA_1021          76C8
ALPHA_1022          76EA
ALPHA_1024          770E
ALPHA_1025          772E
ALPHA_1026          774E
ALPHA_1027          7770
ALPHA_1028          779A
ALPHA_1029          77BA
ALPHA_1030          77DA
ALPHA_1031          77FC
ALPHA_11            111A
ALPHA_120           1C6E
ALPHA_121           1C8E
ALPHA_122           1CAE
ALPHA_123           1CD0
ALPHA_127           1D0E
ALPHA_128           1D2E
ALPHA_129           1D4E
ALPHA_130           1D70
ALPHA_132           1D94
ALPHA_133           1DB4
ALPHA_134           1DD4
ALPHA_135           1DF6
ALPHA_138           1E2A
ALPHA_139           1E4A
ALPHA_140           1E6A
ALPHA_141           1E8C
ALPHA_144           1EC0
ALPHA_145           1EE0
ALPHA_146           1F00
ALPHA_147           1F22
ALPHA_149           1F46
ALPHA_15            1160
ALPHA_150           1F66
ALPHA_151           1F86
ALPHA_152           1FA8
ALPHA_16            1184
ALPHA_17            11A8
ALPHA_18            11CE
ALPHA_191           23E4
ALPHA_192           2404
ALPHA_193           2424
ALPHA_194           2446
ALPHA_198           2484
ALPHA_199           24A4
ALPHA_2             1020
ALPHA_200           24C4
ALPHA_201           24E6
ALPHA_203           250A
ALPHA_204           252A
ALPHA_205           254A
ALPHA_206           256C
ALPHA_209           25A0
ALPHA_210           25C0
ALPHA_211           25E0
ALPHA_212           2602
ALPHA_215           2636
ALPHA_216           2656
ALPHA_217           2676
ALPHA_218           2698
ALPHA_220           26BC
ALPHA_221           26DC
ALPHA_222           26FC
ALPHA_223           271E
ALPHA_255           29D0
ALPHA_256           29F0
ALPHA_257           2A10
ALPHA_258           2A32
ALPHA_262           2A70
ALPHA_263           2A90
ALPHA_264           2AB0
ALPHA_265           2AD2
ALPHA_267           2AF6
ALPHA_268           2B16
ALPHA_269           2B36
ALPHA_270           2B58
ALPHA_273           2B8C
ALPHA_274           2BAC
ALPHA_275           2BCC
ALPHA_276           2BEE
ALPHA_279           2C22
ALPHA_280           2C42
ALPHA_281           2C62
ALPHA_282           2C84
ALPHA_284           2CA8
ALPHA_285           2CC8
ALPHA_286           2CE8
ALPHA_287           2D0A
ALPHA_3             1042
ALPHA_327           3120
ALPHA_328           3140
ALPHA_329           3160
ALPHA_330           3182
ALPHA_334           31C0
ALPHA_335           31E0
ALPHA_336           3200
ALPHA_337           3222
ALPHA_339           3246
ALPHA_340           3266
ALPHA_341           3286
ALPHA_342           32A8
ALPHA_345           32DC
ALPHA_346           32FC
ALPHA_347           331C
ALPHA_348           333E
ALPHA_351           3372
ALPHA_352           3392
ALPHA_353           33B2
ALPHA_354           33D4
ALPHA_356           33F8
ALPHA_357           3418
ALPHA_358           3438
ALPHA_359           345A
ALPHA_391           370C
ALPHA_392           372C
ALPHA_393           374C
ALPHA_394           376E
ALPHA_398           37AC
ALPHA_399           37CC
ALPHA_4             1062
ALPHA_400           37EC
ALPHA_401           380E
ALPHA_403           3832
ALPHA_404           3852
ALPHA_405           3872
ALPHA_406           3894
ALPHA_409           38C8
ALPHA_410           38E8
ALPHA_411           3908
ALPHA_412           392A
ALPHA_415           395E
ALPHA_416           397E
ALPHA_417           399E
ALPHA_418           39C0
ALPHA_420           39E4
ALPHA_421           3A04
ALPHA_422           3A24
ALPHA_423           3A46
ALPHA_458           3D60
ALPHA_459           3D80
ALPHA_460           3DA0
ALPHA_461           3DC2
ALPHA_465           3E00
ALPHA_466           3E20
ALPHA_467           3E40
ALPHA_468           3E62
ALPHA_470           3E86
ALPHA_471           3EA6
ALPHA_472           3EC6
ALPHA_473           3EE8
ALPHA_476           3F1C
ALPHA_477           3F3C
ALPHA_478           3F5C
ALPHA_479           3F7E
ALPHA_482           3FB2
ALPHA_483           3FD2
ALPHA_484           3FF2
ALPHA_485           4014
ALPHA_487           4038
ALPHA_488           4058
ALPHA_489           4078
ALPHA_490           409A
ALPHA_5             1082
ALPHA_525           43B4
ALPHA_526           43D4
ALPHA_527           43F4
ALPHA_528           4416
ALPHA_532           4454
ALPHA_533           4474
ALPHA_534           4494
ALPHA_535           44B6
ALPHA_537           44DA
ALPHA_538           44FA
ALPHA_539           451A
ALPHA_540           453C
ALPHA_543           4570
ALPHA_544           4590
ALPHA_545           45B0
ALPHA_546           45D2
ALPHA_549           4606
ALPHA_55            167C
ALPHA_550           4626
ALPHA_551           4646
ALPHA_552           4668
ALPHA_554           468C
ALPHA_555           46AC
ALPHA_556           46CC
ALPHA_557           46EE
ALPHA_56            169C
ALPHA_57            16BC
ALPHA_58            16DE
ALPHA_592           4A12
ALPHA_593           4A32
ALPHA_594           4A52
ALPHA_595           4A74
ALPHA_599           4AB2
ALPHA_600           4AD2
ALPHA_601           4AF2
ALPHA_602           4B14
ALPHA_604           4B38
ALPHA_605           4B58
ALPHA_606           4B78
ALPHA_607           4B9A
ALPHA_610           4BCE
ALPHA_611           4BEE
ALPHA_612           4C0E
ALPHA_613           4C30
ALPHA_616           4C64
ALPHA_617           4C84
ALPHA_618           4CA4
ALPHA_619           4CC6
ALPHA_62            171C
ALPHA_621           4CEA
ALPHA_622           4D0A
ALPHA_623           4D2A
ALPHA_624           4D4C
ALPHA_63            173C
ALPHA_64            175C
ALPHA_65            177E
ALPHA_664           5162
ALPHA_665           5182
ALPHA_666           51A2
ALPHA_667           51C4
ALPHA_67            17A2
ALPHA_671           5202
ALPHA_672           5222
ALPHA_673           5242
ALPHA_674           5264
ALPHA_676           5288
ALPHA_677           52A8
ALPHA_678           52C8
ALPHA_679           52EA
ALPHA_68            17C2
ALPHA_682           531E
ALPHA_683           533E
ALPHA_684           535E
ALPHA_685           5380
ALPHA_688           53B4
ALPHA_689           53D4
ALPHA_69            17E2
ALPHA_690           53F4
ALPHA_691           5416
ALPHA_693           543A
ALPHA_694           545A
ALPHA_695           547A
ALPHA_696           549C
ALPHA_70            1804
ALPHA_728           574E
ALPHA_729           576E
ALPHA_73            1838
ALPHA_730           578E
ALPHA_731           57B0
ALPHA_735           57EE
ALPHA_736           580E
ALPHA_737           582E
ALPHA_738           5850
ALPHA_74            1858
ALPHA_740           5874
ALPHA_741           5894
ALPHA_742           58B4
ALPHA_743           58D6
ALPHA_746           590A
ALPHA_747           592A
ALPHA_748           594A
ALPHA_749           596C
ALPHA_75            1878
ALPHA_752           59A0
ALPHA_753           59C0
ALPHA_754           59E0
ALPHA_755           5A02
ALPHA_757           5A26
ALPHA_758           5A46
ALPHA_759           5A66
ALPHA_76            189A
ALPHA_760           5A88
ALPHA_79            18CE
ALPHA_796           5DDE
ALPHA_797           5DFE
ALPHA_798           5E1E
ALPHA_799           5E40
ALPHA_8             10B8
ALPHA_80            18EE
ALPHA_803           5E7E
ALPHA_804           5E9E
ALPHA_805           5EBE
ALPHA_806           5EE0
ALPHA_808           5F04
ALPHA_809           5F24
ALPHA_81            190E
ALPHA_810           5F44
ALPHA_811           5F66
ALPHA_814           5F9A
ALPHA_815           5FBA
ALPHA_816           5FDA
ALPHA_817           5FFC
ALPHA_82            1930
ALPHA_820           6030
ALPHA_821           6050
ALPHA_822           6070
ALPHA_823           6092
ALPHA_825           60B6
ALPHA_826           60D6
ALPHA_827           60F6
ALPHA_828           6118
ALPHA_84            1954
ALPHA_85            1974
ALPHA_854           6522
ALPHA_855           6542
ALPHA_856           6562
ALPHA_857           6584
ALPHA_859           65B4
ALPHA_86            1994
ALPHA_860           65D4
ALPHA_861           65F4
ALPHA_862           6616
ALPHA_864           664A
ALPHA_865           666A
ALPHA_866           668A
ALPHA_867           66AC
ALPHA_87            19B6
ALPHA_873           674C
ALPHA_874           676C
ALPHA_875           678C
ALPHA_876           67AE
ALPHA_878           67DE
ALPHA_879           67FE
ALPHA_880           681E
ALPHA_881           6840
ALPHA_883           6874
ALPHA_884           6894
ALPHA_885           68B4
ALPHA_886           68D6
ALPHA_892           6976
ALPHA_893           6996
ALPHA_894           69B6
ALPHA_895           69D8
ALPHA_897           6A08
ALPHA_898           6A28
ALPHA_899           6A48
ALPHA_9             10DA
ALPHA_900           6A6A
ALPHA_902           6A9E
ALPHA_903           6ABE
ALPHA_904           6ADE
ALPHA_905           6B00
ALPHA_938           6DFE
ALPHA_939           6E1E
ALPHA_940           6E3E
ALPHA_941           6E60
ALPHA_945           6E9E
ALPHA_946           6EBE
ALPHA_947           6EDE
ALPHA_948           6F00
ALPHA_950           6F24
ALPHA_951           6F44
ALPHA_952           6F64
ALPHA_953           6F86
ALPHA_956           6FBA
ALPHA_957           6FDA
ALPHA_958           6FFA
ALPHA_959           701C
ALPHA_962           7050
ALPHA_963           7070
ALPHA_964           7090
ALPHA_965           70B2
ALPHA_967           70D6
ALPHA_968           70F6
ALPHA_969           7116
ALPHA_970           7138
ALPHA_977           7222
ALPHA_978           7242
ALPHA_979           7262
ALPHA_980           7284
ALPHA_982           72B4
ALPHA_983           72D4
ALPHA_984           72F4
ALPHA_985           7316
ALPHA_987           734A
ALPHA_988           736A
ALPHA_989           738A
ALPHA_990           73AC
ALPHA_995           7426
ALPHA_996           7446
ALPHA_997           7466
ALPHA_998           7488
AREG_M              6334
AREG_R              640E
ARIREG              1308
ARISHIFT            12FC
ASL_M               631C
ASL_R               63F6
ASR_M               632A
ASR_R               6404
CHECKFOR0_153       1FD2
CHECKFOR0_154       201A
CHECKFOR0_21        132A
CHECKFOR0_22        1372
CHECKFOR0_290       2D56
CHECKFOR0_426       3A92
CHECKFOR0_493       40E6
CHECKFOR0_560       473A
CHECKFOR0_627       4D98
CHECKFOR0_763       5AD4
CHECKFOR0_829       6142
CHECKFOR0_834       621C
CHECKFOR0_839       62F6
CHECKFOR0_844       63D0
CHECKFOR0_849       64AA
CHECKFOR0_868       66D4
CHECKFOR0_887       68FE
CHECKFOR0_906       6B28
CHECKFOR0_971       7162
CHECKFOR0_972       71AA
CHECKFOR1_153       1FDC
CHECKFOR1_154       2024
CHECKFOR1_21        1334
CHECKFOR1_22        137C
CHECKFOR1_290       2D60
CHECKFOR1_426       3A9C
CHECKFOR1_493       40F0
CHECKFOR1_560       4744
CHECKFOR1_627       4DA2
CHECKFOR1_763       5ADE
CHECKFOR1_829       614C
CHECKFOR1_834       6226
CHECKFOR1_839       6300
CHECKFOR1_844       63DA
CHECKFOR1_849       64B4
CHECKFOR1_868       66DE
CHECKFOR1_887       6908
CHECKFOR1_906       6B32
CHECKFOR1_971       716C
CHECKFOR1_972       71B4
CHECKFORBORW_992    73E8
CHECKFORB_23        139E
CHECKFORB_764       5B00
CHECKFORB_830       6184
CHECKFORB_835       625E
CHECKFORB_840       6338
CHECKFORB_845       6412
CHECKFORDESTDN_155  204C
CHECKFORDESTDN_291  2D88
CHECKFORDESTDN_628  4DCA
CHECKFORL_23        13CA
CHECKFORL_764       5B2C
CHECKFORL_830       61B0
CHECKFORL_835       628A
CHECKFORL_840       6364
CHECKFORL_845       643E
CHECKFORL_992       73F4
CHECKFORSRCDN_155   209C
CHECKFORSRCDN_291   2DD8
CHECKFORSRCDN_628   4E1A
CHECKFORW_23        13B4
CHECKFORW_764       5B1E
CHECKFORW_830       61A2
CHECKFORW_835       627C
CHECKFORW_840       6356
CHECKFORW_845       6430
COMPLETE_153        1FF0
COMPLETE_154        2038
COMPLETE_155        212E
COMPLETE_160        2160
COMPLETE_161        2728
COMPLETE_21         1348
COMPLETE_22         1390
COMPLETE_224        274C
COMPLETE_225        2D14
COMPLETE_23         13D8
COMPLETE_24         13F8
COMPLETE_25         19C0
COMPLETE_290        2D74
COMPLETE_291        2E6A
COMPLETE_296        2E9C
COMPLETE_297        3464
COMPLETE_360        3488
COMPLETE_361        3A50
COMPLETE_426        3AB0
COMPLETE_427        3ADC
COMPLETE_428        40A4
COMPLETE_493        4104
COMPLETE_494        4130
COMPLETE_495        46F8
COMPLETE_560        4758
COMPLETE_561        478E
COMPLETE_562        4D56
COMPLETE_627        4DB6
COMPLETE_628        4EAC
COMPLETE_633        4EDE
COMPLETE_634        54A6
COMPLETE_697        54CA
COMPLETE_698        5A92
COMPLETE_763        5AF2
COMPLETE_764        5B3A
COMPLETE_765        5B5A
COMPLETE_766        6122
COMPLETE_829        6160
COMPLETE_830        61BE
COMPLETE_834        623A
COMPLETE_835        6298
COMPLETE_839        6314
COMPLETE_840        6372
COMPLETE_844        63EE
COMPLETE_845        644C
COMPLETE_849        64C8
COMPLETE_868        66F2
COMPLETE_887        691C
COMPLETE_89         19EA
COMPLETE_90         1FB2
COMPLETE_906        6B46
COMPLETE_907        6B7A
COMPLETE_908        7142
COMPLETE_971        7180
COMPLETE_972        71C8
COMPLETE_991        73E4
COMPLETE_992        73F8
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_161  2194
DATAREGDIRECTDEST_225  2780
DATAREGDIRECTDEST_25  142C
DATAREGDIRECTDEST_297  2ED0
DATAREGDIRECTDEST_361  34BC
DATAREGDIRECTDEST_428  3B10
DATAREGDIRECTDEST_495  4164
DATAREGDIRECTDEST_562  47C2
DATAREGDIRECTDEST_634  4F12
DATAREGDIRECTDEST_698  54FE
DATAREGDIRECTDEST_766  5B8E
DATAREGDIRECTDEST_90  1A1E
DATAREGDIRECTDEST_908  6BAE
DATAREGDIRECTSRC_161  21B0
DATAREGDIRECTSRC_225  279C
DATAREGDIRECTSRC_25  1448
DATAREGDIRECTSRC_297  2EEC
DATAREGDIRECTSRC_361  34D8
DATAREGDIRECTSRC_428  3B2C
DATAREGDIRECTSRC_495  4180
DATAREGDIRECTSRC_562  47DE
DATAREGDIRECTSRC_634  4F2E
DATAREGDIRECTSRC_698  551A
DATAREGDIRECTSRC_766  5BAA
DATAREGDIRECTSRC_90  1A3A
DATAREGDIRECTSRC_908  6BCA
DATAREGDIRECT_161   218C
DATAREGDIRECT_225   2778
DATAREGDIRECT_25    1424
DATAREGDIRECT_297   2EC8
DATAREGDIRECT_361   34B4
DATAREGDIRECT_428   3B08
DATAREGDIRECT_495   415C
DATAREGDIRECT_562   47BA
DATAREGDIRECT_634   4F0A
DATAREGDIRECT_698   54F6
DATAREGDIRECT_766   5B86
DATAREGDIRECT_90    1A16
DATAREGDIRECT_908   6BA6
DECODEADD           1FFC
DECODEADDCOMP       2D36
DECODEADDDESTOP     272C
DECODEADRMODE       28ED
DECODEAND           4D7A
DECODEANDCOMP       5AB4
DECODEANDDESTOP     54AA
DECODEASX_M         62D8
DECODEASX_R         63B2
DECODEBEQ           648C
DECODEBGE           66B6
DECODEBLT           68E0
DECODEBRA           718C
DECODEDISPLACEMENT  1D27
DECODEDISPLACEMENT_852  66B4
DECODEDISPLACEMENT_871  68DE
DECODEDISPLACEMENT_890  6B08
DECODEDISPLACEMENT_975  73B4
DECODEDIVU          40C8
DECODEIMMEDIATE     73B6
DECODEIMMEDIATECOMP  7778
DECODEIMMEDIATEDEST  75C6
DECODEIMMEDIATEDESTL  7664
DECODEIMMEDIATEDESTW  75D2
DECODEIMMEDIATEL    749C
DECODEJSR           6B0A
DECODELEA           471C
DECODELSX_M         6124
DECODELSX_R         61FE
DECODEMOVE          1354
DECODEMOVEM         1FB4
DECODEMULS          3A74
DECODENOP           130C
DECODENOT           5AB6
DECODERTS           7144
DECODESIZELOW       1BDF
DECODESUB           2D38
DECODESUBCOMP       3A72
DECODESUBDESTOP     3468
DESTDNB_155         208E
DESTDNB_291         2DCA
DESTDNB_628         4E0C
DESTDNL_155         2062
DESTDNL_291         2D9E
DESTDNL_628         4DE0
DESTDNW_155         2074
DESTDNW_291         2DB0
DESTDNW_628         4DF2
DONE_10             10FE
DONE_1001           74C4
DONE_1002           74E4
DONE_1003           7504
DONE_1004           7526
DONE_1007           7554
DONE_1008           7574
DONE_1009           7594
DONE_1010           75B6
DONE_1013           75FA
DONE_1014           761A
DONE_1015           763A
DONE_1016           765C
DONE_1019           768C
DONE_1020           76AC
DONE_1021           76CC
DONE_1022           76EE
DONE_1024           7712
DONE_1025           7732
DONE_1026           7752
DONE_1027           7774
DONE_1028           779E
DONE_1029           77BE
DONE_1030           77DE
DONE_1031           7800
DONE_11             111E
DONE_120            1C72
DONE_121            1C92
DONE_122            1CB2
DONE_123            1CD4
DONE_127            1D12
DONE_128            1D32
DONE_129            1D52
DONE_130            1D74
DONE_132            1D98
DONE_133            1DB8
DONE_134            1DD8
DONE_135            1DFA
DONE_138            1E2E
DONE_139            1E4E
DONE_140            1E6E
DONE_141            1E90
DONE_144            1EC4
DONE_145            1EE4
DONE_146            1F04
DONE_147            1F26
DONE_149            1F4A
DONE_15             1164
DONE_150            1F6A
DONE_151            1F8A
DONE_152            1FAC
DONE_16             1188
DONE_17             11AC
DONE_18             11D2
DONE_191            23E8
DONE_192            2408
DONE_193            2428
DONE_194            244A
DONE_198            2488
DONE_199            24A8
DONE_2              1024
DONE_200            24C8
DONE_201            24EA
DONE_203            250E
DONE_204            252E
DONE_205            254E
DONE_206            2570
DONE_209            25A4
DONE_210            25C4
DONE_211            25E4
DONE_212            2606
DONE_215            263A
DONE_216            265A
DONE_217            267A
DONE_218            269C
DONE_220            26C0
DONE_221            26E0
DONE_222            2700
DONE_223            2722
DONE_255            29D4
DONE_256            29F4
DONE_257            2A14
DONE_258            2A36
DONE_262            2A74
DONE_263            2A94
DONE_264            2AB4
DONE_265            2AD6
DONE_267            2AFA
DONE_268            2B1A
DONE_269            2B3A
DONE_270            2B5C
DONE_273            2B90
DONE_274            2BB0
DONE_275            2BD0
DONE_276            2BF2
DONE_279            2C26
DONE_280            2C46
DONE_281            2C66
DONE_282            2C88
DONE_284            2CAC
DONE_285            2CCC
DONE_286            2CEC
DONE_287            2D0E
DONE_3              1046
DONE_327            3124
DONE_328            3144
DONE_329            3164
DONE_330            3186
DONE_334            31C4
DONE_335            31E4
DONE_336            3204
DONE_337            3226
DONE_339            324A
DONE_340            326A
DONE_341            328A
DONE_342            32AC
DONE_345            32E0
DONE_346            3300
DONE_347            3320
DONE_348            3342
DONE_351            3376
DONE_352            3396
DONE_353            33B6
DONE_354            33D8
DONE_356            33FC
DONE_357            341C
DONE_358            343C
DONE_359            345E
DONE_391            3710
DONE_392            3730
DONE_393            3750
DONE_394            3772
DONE_398            37B0
DONE_399            37D0
DONE_4              1066
DONE_400            37F0
DONE_401            3812
DONE_403            3836
DONE_404            3856
DONE_405            3876
DONE_406            3898
DONE_409            38CC
DONE_410            38EC
DONE_411            390C
DONE_412            392E
DONE_415            3962
DONE_416            3982
DONE_417            39A2
DONE_418            39C4
DONE_420            39E8
DONE_421            3A08
DONE_422            3A28
DONE_423            3A4A
DONE_458            3D64
DONE_459            3D84
DONE_460            3DA4
DONE_461            3DC6
DONE_465            3E04
DONE_466            3E24
DONE_467            3E44
DONE_468            3E66
DONE_470            3E8A
DONE_471            3EAA
DONE_472            3ECA
DONE_473            3EEC
DONE_476            3F20
DONE_477            3F40
DONE_478            3F60
DONE_479            3F82
DONE_482            3FB6
DONE_483            3FD6
DONE_484            3FF6
DONE_485            4018
DONE_487            403C
DONE_488            405C
DONE_489            407C
DONE_490            409E
DONE_5              1086
DONE_525            43B8
DONE_526            43D8
DONE_527            43F8
DONE_528            441A
DONE_532            4458
DONE_533            4478
DONE_534            4498
DONE_535            44BA
DONE_537            44DE
DONE_538            44FE
DONE_539            451E
DONE_540            4540
DONE_543            4574
DONE_544            4594
DONE_545            45B4
DONE_546            45D6
DONE_549            460A
DONE_55             1680
DONE_550            462A
DONE_551            464A
DONE_552            466C
DONE_554            4690
DONE_555            46B0
DONE_556            46D0
DONE_557            46F2
DONE_56             16A0
DONE_57             16C0
DONE_58             16E2
DONE_592            4A16
DONE_593            4A36
DONE_594            4A56
DONE_595            4A78
DONE_599            4AB6
DONE_600            4AD6
DONE_601            4AF6
DONE_602            4B18
DONE_604            4B3C
DONE_605            4B5C
DONE_606            4B7C
DONE_607            4B9E
DONE_610            4BD2
DONE_611            4BF2
DONE_612            4C12
DONE_613            4C34
DONE_616            4C68
DONE_617            4C88
DONE_618            4CA8
DONE_619            4CCA
DONE_62             1720
DONE_621            4CEE
DONE_622            4D0E
DONE_623            4D2E
DONE_624            4D50
DONE_63             1740
DONE_64             1760
DONE_65             1782
DONE_664            5166
DONE_665            5186
DONE_666            51A6
DONE_667            51C8
DONE_67             17A6
DONE_671            5206
DONE_672            5226
DONE_673            5246
DONE_674            5268
DONE_676            528C
DONE_677            52AC
DONE_678            52CC
DONE_679            52EE
DONE_68             17C6
DONE_682            5322
DONE_683            5342
DONE_684            5362
DONE_685            5384
DONE_688            53B8
DONE_689            53D8
DONE_69             17E6
DONE_690            53F8
DONE_691            541A
DONE_693            543E
DONE_694            545E
DONE_695            547E
DONE_696            54A0
DONE_70             1808
DONE_728            5752
DONE_729            5772
DONE_73             183C
DONE_730            5792
DONE_731            57B4
DONE_735            57F2
DONE_736            5812
DONE_737            5832
DONE_738            5854
DONE_74             185C
DONE_740            5878
DONE_741            5898
DONE_742            58B8
DONE_743            58DA
DONE_746            590E
DONE_747            592E
DONE_748            594E
DONE_749            5970
DONE_75             187C
DONE_752            59A4
DONE_753            59C4
DONE_754            59E4
DONE_755            5A06
DONE_757            5A2A
DONE_758            5A4A
DONE_759            5A6A
DONE_76             189E
DONE_760            5A8C
DONE_79             18D2
DONE_796            5DE2
DONE_797            5E02
DONE_798            5E22
DONE_799            5E44
DONE_8              10BC
DONE_80             18F2
DONE_803            5E82
DONE_804            5EA2
DONE_805            5EC2
DONE_806            5EE4
DONE_808            5F08
DONE_809            5F28
DONE_81             1912
DONE_810            5F48
DONE_811            5F6A
DONE_814            5F9E
DONE_815            5FBE
DONE_816            5FDE
DONE_817            6000
DONE_82             1934
DONE_820            6034
DONE_821            6054
DONE_822            6074
DONE_823            6096
DONE_825            60BA
DONE_826            60DA
DONE_827            60FA
DONE_828            611C
DONE_84             1958
DONE_85             1978
DONE_854            6526
DONE_855            6546
DONE_856            6566
DONE_857            6588
DONE_859            65B8
DONE_86             1998
DONE_860            65D8
DONE_861            65F8
DONE_862            661A
DONE_864            664E
DONE_865            666E
DONE_866            668E
DONE_867            66B0
DONE_87             19BA
DONE_873            6750
DONE_874            6770
DONE_875            6790
DONE_876            67B2
DONE_878            67E2
DONE_879            6802
DONE_880            6822
DONE_881            6844
DONE_883            6878
DONE_884            6898
DONE_885            68B8
DONE_886            68DA
DONE_892            697A
DONE_893            699A
DONE_894            69BA
DONE_895            69DC
DONE_897            6A0C
DONE_898            6A2C
DONE_899            6A4C
DONE_9              10DE
DONE_900            6A6E
DONE_902            6AA2
DONE_903            6AC2
DONE_904            6AE2
DONE_905            6B04
DONE_938            6E02
DONE_939            6E22
DONE_940            6E42
DONE_941            6E64
DONE_945            6EA2
DONE_946            6EC2
DONE_947            6EE2
DONE_948            6F04
DONE_950            6F28
DONE_951            6F48
DONE_952            6F68
DONE_953            6F8A
DONE_956            6FBE
DONE_957            6FDE
DONE_958            6FFE
DONE_959            7020
DONE_962            7054
DONE_963            7074
DONE_964            7094
DONE_965            70B6
DONE_967            70DA
DONE_968            70FA
DONE_969            711A
DONE_970            713C
DONE_977            7226
DONE_978            7246
DONE_979            7266
DONE_980            7288
DONE_982            72B8
DONE_983            72D8
DONE_984            72F8
DONE_985            731A
DONE_987            734E
DONE_988            736E
DONE_989            738E
DONE_990            73B0
DONE_995            742A
DONE_996            744A
DONE_997            746A
DONE_998            748C
EBIT_852            64FC
EBIT_871            6726
EBIT_890            6950
EBIT_975            71FC
ENDSIM              11FA
GOLOOP              113C
IDENTIFYOPCODE      11FE
LOGREG              12F0
LOOP_153            1FBE
LOOP_154            2006
LOOP_21             1316
LOOP_22             135E
LOOP_290            2D42
LOOP_426            3A7E
LOOP_493            40D2
LOOP_560            4726
LOOP_627            4D84
LOOP_763            5AC0
LOOP_829            612E
LOOP_834            6208
LOOP_839            62E2
LOOP_844            63BC
LOOP_849            6496
LOOP_868            66C0
LOOP_887            68EA
LOOP_906            6B14
LOOP_971            714E
LOOP_972            7196
LSL_M               6168
LSL_R               6242
LSR_M               6176
LSR_R               6250
MAIN                1000
NEWLINE             44B7
NEXT_153            1FE2
NEXT_154            202A
NEXT_155            212A
NEXT_21             133A
NEXT_22             1382
NEXT_290            2D66
NEXT_291            2E66
NEXT_426            3AA2
NEXT_493            40F6
NEXT_560            474A
NEXT_627            4DA8
NEXT_628            4EA8
NEXT_763            5AE4
NEXT_829            6152
NEXT_834            622C
NEXT_839            6306
NEXT_844            63E0
NEXT_849            64BA
NEXT_868            66E4
NEXT_887            690E
NEXT_906            6B38
NEXT_971            7172
NEXT_972            71BA
OADD                6F
OADDI               73
OAN                 CE
OAND                90
OASL                A0
OASR                A4
OBEQ                A8
OBGE                AC
OBLANK              DD
OBLT                B0
OBRA                BC
OBSIZE              C0
OCOMMA              D4
ODIVU               84
ODN                 CC
OHASH               DB
OJSR                B4
OLB                 D0
OLEA                8C
OLSIZE              C8
OLSL                98
OLSR                9C
OMOVE               64
OMOVEM              69
OMULS               7C
ONOP                60
ONOT                94
OPREDEC             D7
OPSTINC             D9
ORB                 D2
ORTS                B8
OSUB                78
OTAB                DF
OUTPUTDATA          777A
OWELCOME            E3
OWSIZE              C4
PADD                12E
PAND                183
PASX_M              1D8
PASX_R              1E9
PASX_S              1FA
PBEQ                20B
PBGE                21C
PBLT                22D
PBRA                260
PDIVU               161
PJSR                23E
PLEA                172
PLSX_M              1A5
PLSX_R              1B6
PLSX_S              1C7
PMOVE               10C
PMOVEM              11D
PMULS               150
PNOP                FB
PNOT                194
PREPAREADRMODE      26E0
PRINTADR            3AC3
PRINTANDEST         389B
PRINTANSRC          399A
PRINTCOMMA          4095
PRINTCOUNT          3536
PRINTDNDEST         364B
PRINTDNSRC          375E
PRINTHASH           4343
PRINTLB             41C9
PRINTOPMODE         2085
PRINTPD             4162
PRINTPI             40FB
PRINTRB             422C
PRINTSIGN           428F
PRINTSIZE           1518
PRINTSIZELOW        1889
PRTS                24F
PSUB                13F
READINPUT           F4
REG_M               6180
REG_R               625A
REND                31
RSTART              0
SBIT_852            6590
SBIT_871            67BA
SBIT_890            69E4
SBIT_975            7290
SPACE               43F7
SPLIT0              120C
SPLIT000            1218
SPLIT01             122C
SPLIT0100           1238
SPLIT0100111        1254
SPLIT0110           1268
SPLIT01100          1274
SPLIT01101          1288
SPLIT1              1294
SPLIT10             12A0
SPLIT11             12AC
SPLIT110            12B8
SPLIT111            12DC
SRCDNB_155          2104
SRCDNB_291          2E40
SRCDNB_628          4E82
SRCDNL_155          20A8
SRCDNL_291          2DE4
SRCDNL_628          4E26
SRCDNW_155          20D2
SRCDNW_291          2E0E
SRCDNW_628          4E50
TAB                 4458
TBIT_852            6622
TBIT_871            684C
TBIT_890            6A76
TBIT_975            7322
VERIFYOPCODE        10A5
