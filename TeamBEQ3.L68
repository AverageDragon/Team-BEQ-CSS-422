00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/2/2021 1:07:47 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 53 55 42 00              102  oSUB:   DC.B    'SUB',0
00000077= 4D 55 4C 53 00           103  oMULS:  DC.B    'MULS',0
0000007C= 44 49 56 55 00           104  oDIVU:  DC.B    'DIVU',0
00000081= 4C 45 41 00              105  oLEA:   DC.B    'LEA',0
00000085= 41 4E 44 00              106  oAND:   DC.B    'AND',0
00000089= 4E 4F 54 00              107  oNOT:   DC.B    'NOT',0
0000008D= 4C 53 4C 00              108  oLSL:   DC.B    'LSL',0
00000091= 4C 53 52 00              109  oLSR:   DC.B    'LSR',0
00000095= 41 53 4C 00              110  oASL:   DC.B    'ASL',0
00000099= 41 53 52 00              111  oASR:   DC.B    'ASR',0
0000009D= 42 45 51 00              112  oBEQ:   DC.B    'BEQ',0
000000A1= 42 47 45 00              113  oBGE:   DC.B    'BGE',0
000000A5= 42 4C 54 00              114  oBLT:   DC.B    'BLT',0
000000A9= 4A 53 52 00              115  oJSR:   DC.B    'JSR',0
000000AD= 52 54 53 00              116  oRTS:   DC.B    'RTS',0
000000B1= 42 52 41 00              117  oBRA:   DC.B    'BRA',0
000000B5= 2E 42 20 00              118  oBSize  DC.B    '.B ',0
000000B9= 2E 57 20 00              119  oWSize  DC.B    '.W ',0
000000BD= 2E 4C 20 00              120  oLSize  DC.B    '.L ',0
000000C1= 44 00                    121  oDn     DC.B    'D',0
000000C3= 41 00                    122  oAn     DC.B    'A',0
000000C5= 28 00                    123  oLB     DC.B    '(',0
000000C7= 29 00                    124  oRB     DC.B    ')',0
000000C9= 2C 20 00                 125  oComma  DC.B    ', ',0
000000CC= 2D 00                    126  oPreDec DC.B    '-',0
000000CE= 2B 00                    127  oPstInc DC.B    '+',0
000000D0= 23 00                    128  oHash   DC.B    '#',0
000000D2= 20 00                    129  oBlank  DC.B    ' ',0
000000D4                           130  ; ------------------------------------------------------------
000000D4                           131  ; "Pattern" Variables
000000D4                           132  ; Jonathan
000000D4                           133  ; 
000000D4                           134  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000D4                           135  ; and the opcode isn't actually data
000000D4                           136  ; ------------------------------------------------------------
000000D4= 30 31 30 30 31 31 ...    137  pNOP:   DC.B    '0100111001110001',0
000000E5= 30 30 2E 2E 2E 2E ...    138  pMOVE:  DC.B    '00..............',0
000000F6= 30 31 30 30 31 2E ...    139  pMOVEM: DC.B    '01001.001.......',0
00000107= 31 31 30 31 2E 2E ...    140  pADD:   DC.B    '1101............',0
00000118= 31 30 30 31 2E 2E ...    141  pSUB:   DC.B    '1001............',0
00000129= 31 31 30 30 2E 2E ...    142  pMULS:  DC.B    '1100...111......',0
0000013A= 31 30 30 30 2E 2E ...    143  pDIVU:  DC.B    '1000...011......',0
0000014B= 30 31 30 30 2E 2E ...    144  pLEA:   DC.B    '0100...111......',0
0000015C= 31 31 30 30 2E 2E ...    145  pAND:   DC.B    '1100............',0
0000016D= 30 31 30 30 30 31 ...    146  pNOT:   DC.B    '01000110........',0
0000017E= 31 31 31 30 2E 2E ...    147  pLSx_M: DC.B    '1110......001...',0
0000018F= 31 31 31 30 2E 2E ...    148  pLSx_R: DC.B    '1110......101...',0
000001A0= 31 31 31 30 2E 2E ...    149  pLSx_S: DC.B    '1110......100...',0
000001B1= 31 31 31 30 2E 2E ...    150  pASx_M: DC.B    '1110......000...',0
000001C2= 31 31 31 30 2E 2E ...    151  pASx_R: DC.B    '1110......100...',0
000001D3= 31 31 31 30 2E 2E ...    152  pASx_S: DC.B    '1110......100...',0
000001E4= 30 31 31 30 30 31 ...    153  pBEQ:   DC.B    '01100111........',0
000001F5= 30 31 31 30 31 31 ...    154  pBGE:   DC.B    '01101100........',0
00000206= 30 31 31 30 31 31 ...    155  pBLT:   DC.B    '01101101........',0
00000217= 30 31 30 30 31 31 ...    156  pJSR:   DC.B    '0100111010......',0
00000228= 30 31 30 30 31 31 ...    157  pRTS:   DC.B    '0100111001110101',0
00000239= 30 31 31 30 30 30 ...    158  pBRA:   DC.B    '01100000........',0
0000024A                           159  
0000024A                           160  
0000024A                           161  ; ========================================================================
0000024A                           162  ; Macros
0000024A                           163  ; ========================================================================
0000024A                           164  ; ------------------------------------------------------------
0000024A                           165  ; "convertHtoA" Helper
0000024A                           166  ; Jonathan
0000024A                           167  ;
0000024A                           168  ; 1st argument is a data register containing a single digit of a hex number.
0000024A                           169  ;
0000024A                           170  ; Converts the argument from a hex digit to an ascii character
0000024A                           171  ; ------------------------------------------------------------
0000024A                           172  convertHtoA:    MACRO
0000024A                           173          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
0000024A                           174          BGT     alpha\@
0000024A                           175          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
0000024A                           176          BRA     done\@
0000024A                           177  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
0000024A                           178  done\@: NOP
0000024A                           179          ENDM
0000024A                           180  ; ------------------------------------------------------------
0000024A                           181  ; adrOut
0000024A                           182  ; Gary
0000024A                           183  ;
0000024A                           184  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000024A                           185  ; ------------------------------------------------------------
0000024A                           186  adrOut:         MACRO
0000024A                           187          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           188          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           189          LSR.W   #4, D1      
0000024A                           190          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           191          TRAP    #15         ; Execute output
0000024A                           192          
0000024A                           193          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           194          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000024A                           195          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           196          LSR.W   #4, D1      
0000024A                           197          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           198          TRAP    #15         ; Execute output
0000024A                           199          
0000024A                           200          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           201          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           202          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           203          LSR.W   #4, D1      
0000024A                           204          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           205          TRAP    #15         ; Execute output
0000024A                           206          
0000024A                           207          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           208          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           209          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000024A                           210          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           211          LSR.W   #4, D1      
0000024A                           212          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           213          TRAP    #15         ; Execute output       
0000024A                           214          ENDM 
0000024A                           215  ; ------------------------------------------------------------
0000024A                           216  ; "verifyOpcode" Helper
0000024A                           217  ; Jonathan
0000024A                           218  ;
0000024A                           219  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
0000024A                           220  ; 2nd argument is a data register to check against the template
0000024A                           221  ;
0000024A                           222  ; Verifies that the opcode passed through \2 matches the pattern of \1
0000024A                           223  ; If they do not match, branches to outputData
0000024A                           224  ; ------------------------------------------------------------
0000024A                           225  verifyOpcode:  MACRO
0000024A                           226          LEA     \1, A1      ; Input pattern string
0000024A                           227          MOVE.W  \2, D3      ; input value
0000024A                           228          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
0000024A                           229          
0000024A                           230  loop\@: 
0000024A                           231          CMP.B   #$30, (A1)  ; Check if the template wants a 0
0000024A                           232          BEQ     checkFor0\@
0000024A                           233          CMP.B   #$31, (A1)  ; Check if the template wants a 1
0000024A                           234          BEQ     checkFor1\@
0000024A                           235          BRA     next\@      ; Template has a wildcard, go to next iteration
0000024A                           236          
0000024A                           237  checkFor0\@: 
0000024A                           238          BTST    D1, D3      ; Check if contains 0
0000024A                           239          BNE     outputData  ; Missing a 0 -> Not a valid opcode
0000024A                           240          BRA     next\@
0000024A                           241  
0000024A                           242  checkFor1\@:
0000024A                           243          BTST    D1, D3      ; Check if contains 1
0000024A                           244          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
0000024A                           245  
0000024A                           246  next\@: 
0000024A                           247          CMP.B   #0, D1      ; Compare bit counter to 0
0000024A                           248          BEQ     complete\@  ; Branch to complete if bit counter reached 0
0000024A                           249          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           250          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
0000024A                           251          BRA     loop\@      ; Begin loop again
0000024A                           252  
0000024A                           253  complete\@:  ; Opcode has been verified
0000024A                           254          ENDM
0000024A                           255          
0000024A                           256  ; ------------------------------------------------------------
0000024A                           257  ; "printSize" Helper
0000024A                           258  ; Gary
0000024A                           259  ;
0000024A                           260  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           261  ;
0000024A                           262  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
0000024A                           263  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
0000024A                           264  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
0000024A                           265  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
0000024A                           266  ; ------------------------------------------------------------
0000024A                           267  printSize:  MACRO
0000024A                           268          MOVE.W  \1, D3      ; input value
0000024A                           269          CLR     D7      
0000024A                           270  checkForB\@: 
0000024A                           271          BTST    #13, D3      ; Check if contains 0
0000024A                           272          BNE     checkForW\@  ; If not go to word size
0000024A                           273          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
0000024A                           274          MOVE.B  #14,D0          
0000024A                           275          TRAP    #15
0000024A                           276          BRA     complete\@      
0000024A                           277  checkForW\@: 
0000024A                           278          BTST    #12, D3      ; Check if contains 1
0000024A                           279          BEQ     checkForL\@  ; If not, size cannot be word
0000024A                           280          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
0000024A                           281          MOVE.B  #14,D0          
0000024A                           282          TRAP    #15
0000024A                           283          BRA     complete\@  
0000024A                           284  checkForL\@:
0000024A                           285          MOVE.B  #$1, D7
0000024A                           286          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
0000024A                           287          MOVE.B  #14,D0          
0000024A                           288          TRAP    #15
0000024A                           289  complete\@:  ; Size has been printed
0000024A                           290          ENDM
0000024A                           291          
0000024A                           292          ; ------------------------------------------------------------
0000024A                           293  ; "printSizeLow" Helper
0000024A                           294  ; Gary
0000024A                           295  ;
0000024A                           296  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           297  ;
0000024A                           298  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
0000024A                           299  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
0000024A                           300  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
0000024A                           301  ; Once matched, size is printed and appended to already printed opcode, macro exits.
0000024A                           302  ; ------------------------------------------------------------
0000024A                           303  printSizeLow:  MACRO
0000024A                           304          MOVE.W  \1, D3      ; input value      
0000024A                           305  checkForB\@: 
0000024A                           306          BTST    #6,  D3      ; Check if contains 0
0000024A                           307          BNE     checkForW\@  ; If not go to word size
0000024A                           308          LEA     oBSize, A1     
0000024A                           309          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           310          TRAP    #15
0000024A                           311          BRA     complete\@      
0000024A                           312  checkForW\@: 
0000024A                           313          BTST    #7, D3      ; Check if contains 0
0000024A                           314          BNE     checkForL\@ ; If not go to longword size
0000024A                           315          LEA     oWSize, A1     
0000024A                           316          MOVE.B  #14,D0       ; Print and end macro       
0000024A                           317          TRAP    #15
0000024A                           318          BRA     complete\@  
0000024A                           319  checkForL\@:
0000024A                           320          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
0000024A                           321          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           322          TRAP    #15
0000024A                           323  complete\@:  ; Size has been printed
0000024A                           324          ENDM
0000024A                           325  ; ------------------------------------------------------------
0000024A                           326  ; "printBranch" Helper
0000024A                           327  ; Gary
0000024A                           328  ; 
0000024A                           329  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           330  ; bits. 
0000024A                           331  ; ------------------------------------------------------------
0000024A                           332  printBranch:  MACRO
0000024A                           333          MOVE.W \1, D3
0000024A                           334          MOVEA   A2, A3
0000024A                           335          MOVE.L  A3, D4
0000024A                           336          CLR     D1
0000024A                           337          ADD.B   D3, D1
0000024A                           338          MOVE.B  #3,D0       ; Print and end macro  
0000024A                           339          TRAP    #15
0000024A                           340          
0000024A                           341          adrOut
0000024A                           342          ENDM        
0000024A                           343          
0000024A                           344  ; ------------------------------------------------------------
0000024A                           345  ; "printOpMode" Helper
0000024A                           346  ; Gary
0000024A                           347  ;
0000024A                           348  ; 1st argument holds opcode whose opmode is being decoded
0000024A                           349  ;
0000024A                           350  ; With the opcode in D3, D1 is designated as the bit tracker. Split
0000024A                           351  ; into two sorting mechanisms: first, the macro determines whether
0000024A                           352  ; the register is a source or a destination. Then, the macro determines
0000024A                           353  ; the size and appends it to printed opcode in a similar manner to printSize.
0000024A                           354  ; ------------------------------------------------------------
0000024A                           355  printOpMode:  MACRO
0000024A                           356          MOVE.W  \1, D3      
0000024A                           357          MOVE.B  #8, D1    
0000024A                           358          CLR     D6
0000024A                           359  checkForDestDn\@: 
0000024A                           360          BTST    D1, D3      
0000024A                           361          BNE     checkForSrcDn\@
0000024A                           362          JSR     next\@
0000024A                           363          MOVE.B  #$1, D6
0000024A                           364          BTST    D1, D3      
0000024A                           365          BEQ     DestDnW\@
0000024A                           366  DestDnL\@:        
0000024A                           367          LEA     oLSize, A1     
0000024A                           368          MOVE.B  #14,D0          
0000024A                           369          TRAP    #15
0000024A                           370          BRA     complete\@ 
0000024A                           371  DestDnW\@: 
0000024A                           372          JSR     next\@
0000024A                           373          BTST    D1, D3      
0000024A                           374          BEQ     DestDnB\@
0000024A                           375          LEA     oWSize, A1     
0000024A                           376          MOVE.B  #14,D0          
0000024A                           377          TRAP    #15
0000024A                           378          BRA     complete\@ 
0000024A                           379  DestDnB\@: 
0000024A                           380          LEA     oBSize, A1     
0000024A                           381          MOVE.B  #14,D0          
0000024A                           382          TRAP    #15
0000024A                           383          BRA     complete\@ 
0000024A                           384  checkForSrcDn\@: 
0000024A                           385          JSR     next\@
0000024A                           386          BTST    D1, D3      
0000024A                           387          BEQ     SrcDnW\@
0000024A                           388  SrcDnL\@:        
0000024A                           389          LEA     oLSize, A1     
0000024A                           390          MOVE.B  #14,D0          
0000024A                           391          TRAP    #15
0000024A                           392          printDnDest D3
0000024A                           393          BRA     complete\@ 
0000024A                           394  SrcDnW\@:
0000024A                           395          JSR     next\@
0000024A                           396          BTST    D1, D3     
0000024A                           397          BEQ     SrcDnB\@
0000024A                           398          LEA     oWSize, A1     
0000024A                           399          MOVE.B  #14,D0          
0000024A                           400          TRAP    #15
0000024A                           401          printDnDest D3
0000024A                           402          BRA     complete\@ 
0000024A                           403  SrcDnB\@: 
0000024A                           404          LEA     oBSize, A1     
0000024A                           405          MOVE.B  #14,D0          
0000024A                           406          TRAP    #15
0000024A                           407          printDnDest D3
0000024A                           408          BRA     complete\@ 
0000024A                           409  
0000024A                           410  next\@:
0000024A                           411          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           412          RTS                
0000024A                           413  
0000024A                           414  complete\@:  ; Opcode has been verified
0000024A                           415          ENDM
0000024A                           416  ; ------------------------------------------------------------
0000024A                           417  ; "prepareAdrMode" Helper
0000024A                           418  ; Gary
0000024A                           419  ; 
0000024A                           420  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
0000024A                           421  ; ------------------------------------------------------------
0000024A                           422  prepareAdrMode: MACRO
0000024A                           423          MOVE.W  \1, D6      ; input value
0000024A                           424          MOVE.W  \2, D1
0000024A                           425          CMP.B   #$01, D6
0000024A                           426          BEQ     AdrSource\@    
0000024A                           427  AdrDest\@:
0000024A                           428          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
0000024A                           429          LSR     #$08, D1
0000024A                           430          LSR     #$05, D1
0000024A                           431          BRA     complete\@ 
0000024A                           432  AdrSource\@:                
0000024A                           433          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
0000024A                           434          LSL     #$02, D1
0000024A                           435          LSR     #$08, D1
0000024A                           436          LSR     #$05, D1
0000024A                           437  complete\@:  ; Opcode has been verified
0000024A                           438          ENDM        
0000024A                           439          
0000024A                           440  ; ------------------------------------------------------------
0000024A                           441  ; "decodeAdrMode" Helper
0000024A                           442  ; Gary
0000024A                           443  ; 
0000024A                           444  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           445  ; bits. 
0000024A                           446  ; ------------------------------------------------------------
0000024A                           447  decodeAdrMode:  MACRO
0000024A                           448          MOVE.W  \1, D3      ; holds full opcode
0000024A                           449          MOVE.W  \2, D1      ; holds just opmode
0000024A                           450  
0000024A                           451          CMP.B   #$01, D1
0000024A                           452          BEQ     AdrRegDirect\@    
0000024A                           453          CMP.B   #$02, D1
0000024A                           454          BEQ     AdrRegInDirect\@  
0000024A                           455          CMP.B   #$03, D1
0000024A                           456          BEQ     AdrRegPostInc\@  
0000024A                           457          CMP.B   #$04, D1
0000024A                           458          BEQ     AdrRegPreDec\@
0000024A                           459          CMP.B   #$07, D1
0000024A                           460          BEQ     AdrAbsolute\@    
0000024A                           461          
0000024A                           462  dataRegDirect\@: 
0000024A                           463          CMP.B   #$01, D6
0000024A                           464          BEQ     dataRegDirectSrc\@   
0000024A                           465  dataRegDirectDest\@: 
0000024A                           466          printDnDest D3 
0000024A                           467          BRA     complete\@ 
0000024A                           468  dataRegDirectSrc\@: 
0000024A                           469          printDnSrc D3 
0000024A                           470          BRA     complete\@   
0000024A                           471          
0000024A                           472  AdrRegDirect\@: 
0000024A                           473          CMP.B   #$01, D6
0000024A                           474          BEQ     AdrRegDirectSrc\@   
0000024A                           475  AdrRegDirectDest\@:
0000024A                           476          printAnDest D3
0000024A                           477          BRA     complete\@   
0000024A                           478  AdrRegDirectSrc\@:
0000024A                           479          printAnSrc D3
0000024A                           480          BRA     complete\@   
0000024A                           481         
0000024A                           482  AdrRegInDirect\@:   
0000024A                           483          CMP.B   #$01, D6
0000024A                           484          BEQ     AdrRegInDirectSrc\@   
0000024A                           485  AdrRegInDirectDest\@:
0000024A                           486          printLB
0000024A                           487          printAnDest D3  
0000024A                           488          printRB
0000024A                           489          BRA     complete\@     
0000024A                           490  AdrRegInDirectSrc\@:   
0000024A                           491          printLB
0000024A                           492          printAnSrc D3  
0000024A                           493          printRB
0000024A                           494          BRA     complete\@   
0000024A                           495          
0000024A                           496  AdrRegPostInc\@:   
0000024A                           497          CMP.B   #$01, D6
0000024A                           498          BEQ     AdrRegPostIncSrc\@   
0000024A                           499  AdrRegPostIncDest\@: 
0000024A                           500          printLB
0000024A                           501          printAnDest D3  
0000024A                           502          printRB
0000024A                           503          printPI
0000024A                           504          BRA     complete\@  
0000024A                           505  AdrRegPostIncSrc\@:           
0000024A                           506          printLB
0000024A                           507          printAnSrc D3  
0000024A                           508          printRB
0000024A                           509          printPI
0000024A                           510          BRA     complete\@  
0000024A                           511  AdrRegPreDec\@: 
0000024A                           512          CMP.B   #$01, D6
0000024A                           513          BEQ     AdrRegPreDecSrc\@   
0000024A                           514  AdrRegPreDecDest\@:
0000024A                           515          printPD  
0000024A                           516          printLB
0000024A                           517          printAnDest D3  
0000024A                           518          printRB
0000024A                           519          BRA     complete\@   
0000024A                           520  AdrRegPreDecSrc\@: 
0000024A                           521          printPD  
0000024A                           522          printLB
0000024A                           523          printAnSrc D3  
0000024A                           524          printRB
0000024A                           525          BRA     complete\@
0000024A                           526         
0000024A                           527  AdrAbsolute\@:
0000024A                           528          CMP.B   #$01, D6
0000024A                           529          BNE     AdrAbsoluteDst\@ 
0000024A                           530          
0000024A                           531          MOVE.W  D3, D5
0000024A                           532          BTST    #2, D3
0000024A                           533          BNE     AdrImmediate\@
0000024A                           534          BTST    #0, D3
0000024A                           535          BNE     AdrAbsoluteL\@
0000024A                           536          BRA     AdrAbsoluteW\@
0000024A                           537  AdrAbsoluteDst\@:
0000024A                           538          MOVE.W  D3, D5
0000024A                           539          BTST    #$B, D3
0000024A                           540          BNE     AdrImmediate\@
0000024A                           541          BTST    #$09, D3
0000024A                           542          BNE     AdrAbsoluteL\@
0000024A                           543          BRA     AdrAbsoluteW\@
0000024A                           544  AdrImmediate\@:
0000024A                           545          CMP.B   #1, D7
0000024A                           546          BEQ     AdrImmediateL\@
0000024A                           547  AdrImmediateW\@:
0000024A                           548          MOVE.W  (A2)+, D3
0000024A                           549          printHash
0000024A                           550          printSign
0000024A                           551          adrOut
0000024A                           552          MOVE.W  D5, D3
0000024A                           553          BRA     complete\@
0000024A                           554  AdrImmediateL\@:
0000024A                           555          MOVE.W  (A2)+, D3
0000024A                           556          printHash
0000024A                           557          printSign
0000024A                           558          adrOut 
0000024A                           559          MOVE.W  (A2)+, D3
0000024A                           560          adrOut
0000024A                           561          MOVE.W  D5, D3
0000024A                           562          BRA     complete\@ 
0000024A                           563  AdrAbsoluteW\@:     
0000024A                           564          MOVE.W  (A2)+, D3
0000024A                           565          printSign
0000024A                           566          adrOut
0000024A                           567          MOVE.W  D5, D3
0000024A                           568          BRA     complete\@  
0000024A                           569  AdrAbsoluteL\@:  
0000024A                           570          MOVE.W  (A2)+, D3
0000024A                           571          printSign
0000024A                           572          adrOut 
0000024A                           573          MOVE.W  (A2)+, D3
0000024A                           574          adrOut
0000024A                           575          MOVE.W  D5, D3
0000024A                           576  
0000024A                           577  complete\@:  ; Opcode has been verified
0000024A                           578          ENDM
0000024A                           579  
0000024A                           580  printCount:     MACRO
0000024A                           581          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           582          LSL     #$04, D1
0000024A                           583          LSR     #$08, D1
0000024A                           584          LSR     #$05, D1
0000024A                           585          LEA     oHash, A1     
0000024A                           586          MOVE.B  #14,D0          
0000024A                           587          TRAP    #15
0000024A                           588          MOVE.B  #3,D0          
0000024A                           589          TRAP    #15
0000024A                           590          ENDM
0000024A                           591  
0000024A                           592  printDnDest:    MACRO 
0000024A                           593          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           594          LSL     #$04, D1
0000024A                           595          LSR     #$08, D1
0000024A                           596          LSR     #$05, D1
0000024A                           597          LEA     oDn, A1     
0000024A                           598          MOVE.B  #14,D0          
0000024A                           599          TRAP    #15
0000024A                           600          MOVE.B  #3,D0          
0000024A                           601          TRAP    #15
0000024A                           602          ENDM
0000024A                           603  printDnSrc:    MACRO   
0000024A                           604          CLR.L   D1
0000024A                           605          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           606          LSL     #$08, D1
0000024A                           607          LSL     #$05, D1
0000024A                           608          LSR     #$08, D1
0000024A                           609          LSR     #$05, D1
0000024A                           610          LEA     oDn, A1     
0000024A                           611          MOVE.B  #14,D0          
0000024A                           612          TRAP    #15
0000024A                           613          MOVE.B  #3,D0          
0000024A                           614          TRAP    #15
0000024A                           615          ENDM
0000024A                           616  printAnDest:    MACRO
0000024A                           617          MOVE.W  \1, D1
0000024A                           618          LSL     #$04, D1
0000024A                           619          LSR     #$08, D1
0000024A                           620          LSR     #$05, D1
0000024A                           621          LEA     oAn, A1     
0000024A                           622          MOVE.B  #14,D0          
0000024A                           623          TRAP    #15
0000024A                           624          MOVE.B  #3,D0          
0000024A                           625          TRAP    #15
0000024A                           626          ENDM
0000024A                           627  printAnSrc:    MACRO   
0000024A                           628          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           629          LSL     #$08, D1
0000024A                           630          LSL     #$05, D1
0000024A                           631          LSR     #$08, D1
0000024A                           632          LSR     #$05, D1
0000024A                           633          LEA     oAn, A1     
0000024A                           634          MOVE.B  #14,D0          
0000024A                           635          TRAP    #15
0000024A                           636          MOVE.B  #3,D0          
0000024A                           637          TRAP    #15
0000024A                           638          ENDM
0000024A                           639  printComma:    MACRO
0000024A                           640          LEA     oComma, A1     
0000024A                           641          MOVE.B  #14,D0          
0000024A                           642          TRAP    #15
0000024A                           643          ENDM
0000024A                           644  printPI:    MACRO
0000024A                           645          LEA     oPstInc, A1     
0000024A                           646          MOVE.B  #14,D0          
0000024A                           647          TRAP    #15
0000024A                           648          ENDM
0000024A                           649  printPD:    MACRO
0000024A                           650          LEA     oPreDec, A1     
0000024A                           651          MOVE.B  #14,D0          
0000024A                           652          TRAP    #15
0000024A                           653          ENDM
0000024A                           654  
0000024A                           655  printLB:    MACRO
0000024A                           656          LEA     oLB, A1     
0000024A                           657          MOVE.B  #14,D0          
0000024A                           658          TRAP    #15
0000024A                           659          ENDM
0000024A                           660  printRB:    MACRO
0000024A                           661          LEA     oRB, A1     
0000024A                           662          MOVE.B  #14,D0          
0000024A                           663          TRAP    #15
0000024A                           664          ENDM
0000024A                           665  printSign:  MACRO
0000024A                           666          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           667          MOVE.W  #36, D1     ; An = sign
0000024A                           668          TRAP    #15         ; Output = sign
0000024A                           669          ENDM
0000024A                           670  printHash:  MACRO
0000024A                           671          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           672          MOVE.W  #35, D1     ; An = sign
0000024A                           673          TRAP    #15         ; Output = sign
0000024A                           674          ENDM
0000024A                           675          
0000024A                           676  space:      MACRO
0000024A                           677          LEA     oBlank, A1
0000024A                           678          MOVE.B  #14,D0          
0000024A                           679          TRAP    #15
0000024A                           680          ENDM
0000024A                           681  newLine:    MACRO
0000024A                           682          LEA     oBlank, A1
0000024A                           683          MOVE.B  #13,D0          
0000024A                           684          TRAP    #15
0000024A                           685          ENDM
0000024A                           686  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000024A                           687  ; "main" routine
0000024A                           688  ; Dylan, Gary
0000024A                           689  ; 
0000024A                           690  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
0000024A                           691  ; ========================================================================
00001000                           692          ORG     $1000
00001000                           693          OPT     MEX
00001000                           694          
00001000  43F8 0000                695  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                696          MOVE.B  #13, D0
00001008  4E4F                     697          TRAP    #15
0000100A                           698m         readInput   D2      ; Read 4 digit hex input
0000100A                           699m         ; READ USER's input
0000100A  103C 0005                700m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     701m         TRAP    #15
00001010                           702mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                703mm         CMPI.B  #$39, D1
00001014  6E00 000A                704mm         BGT     ALPHA_2
00001018  0401 0030                705mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                706mm         BRA     DONE_2
00001020  0401 0037                707mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     708mm DONE_2: NOP
00001026                           709mm         ENDM
00001026  E149                     710m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     711m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     712m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           713m         
0000102C  323C 0000                714m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     715m         TRAP    #15         ; READ SECOND DIGIT
00001032                           716mm         CONVERTATOH D1
00001032  0C01 0039                717mm         CMPI.B  #$39, D1
00001036  6E00 000A                718mm         BGT     ALPHA_3
0000103A  0401 0030                719mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                720mm         BRA     DONE_3
00001042  0401 0037                721mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     722mm DONE_3: NOP
00001048                           723mm         ENDM
00001048  E149                     724m         LSL.W   #8, D1      
0000104A  D441                     725m         ADD.W   D1, D2
0000104C                           726m         
0000104C  323C 0000                727m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     728m         TRAP    #15         ; READ THIRD DIGIT
00001052                           729mm         CONVERTATOH D1
00001052  0C01 0039                730mm         CMPI.B  #$39, D1
00001056  6E00 000A                731mm         BGT     ALPHA_4
0000105A  0401 0030                732mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                733mm         BRA     DONE_4
00001062  0401 0037                734mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     735mm DONE_4: NOP
00001068                           736mm         ENDM
00001068  E949                     737m         LSL.W   #4, D1      
0000106A  D441                     738m         ADD.W   D1, D2
0000106C                           739m         
0000106C  323C 0000                740m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     741m         TRAP    #15         ; READ FINAL DIGIT
00001072                           742mm         CONVERTATOH D1     
00001072  0C01 0039                743mm         CMPI.B  #$39, D1
00001076  6E00 000A                744mm         BGT     ALPHA_5
0000107A  0401 0030                745mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                746mm         BRA     DONE_5
00001082  0401 0037                747mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     748mm DONE_5: NOP
00001088                           749mm         ENDM
00001088  D441                     750m         ADD.W   D1, D2
0000108A  3402                     751m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           752m         ENDM
0000108C  3442                     753          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           754m         newline
0000108E  43F8 00D2                755m         LEA     OBLANK, A1
00001092  103C 000D                756m         MOVE.B  #13,D0          
00001096  4E4F                     757m         TRAP    #15
00001098                           758m         ENDM
00001098                           759          
00001098  43F8 0031                760          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                761          MOVE.B  #13, D0
000010A0  4E4F                     762          TRAP    #15
000010A2                           763m         readInput   D2      ; Read 4 digit hex input
000010A2                           764m         ; READ USER's input
000010A2  103C 0005                765m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     766m         TRAP    #15
000010A8                           767mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                768mm         CMPI.B  #$39, D1
000010AC  6E00 000A                769mm         BGT     ALPHA_8
000010B0  0401 0030                770mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                771mm         BRA     DONE_8
000010B8  0401 0037                772mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     773mm DONE_8: NOP
000010BE                           774mm         ENDM
000010BE  E149                     775m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     776m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     777m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           778m         
000010C4  323C 0000                779m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     780m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           781mm         CONVERTATOH D1
000010CA  0C01 0039                782mm         CMPI.B  #$39, D1
000010CE  6E00 000A                783mm         BGT     ALPHA_9
000010D2  0401 0030                784mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                785mm         BRA     DONE_9
000010DA  0401 0037                786mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     787mm DONE_9: NOP
000010E0                           788mm         ENDM
000010E0  E149                     789m         LSL.W   #8, D1      
000010E2  D441                     790m         ADD.W   D1, D2
000010E4                           791m         
000010E4  323C 0000                792m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     793m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           794mm         CONVERTATOH D1
000010EA  0C01 0039                795mm         CMPI.B  #$39, D1
000010EE  6E00 000A                796mm         BGT     ALPHA_10
000010F2  0401 0030                797mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                798mm         BRA     DONE_10
000010FA  0401 0037                799mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     800mm DONE_10: NOP
00001100                           801mm         ENDM
00001100  E949                     802m         LSL.W   #4, D1      
00001102  D441                     803m         ADD.W   D1, D2
00001104                           804m         
00001104  323C 0000                805m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     806m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           807mm         CONVERTATOH D1     
0000110A  0C01 0039                808mm         CMPI.B  #$39, D1
0000110E  6E00 000A                809mm         BGT     ALPHA_11
00001112  0401 0030                810mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                811mm         BRA     DONE_11
0000111A  0401 0037                812mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     813mm DONE_11: NOP
00001120                           814mm         ENDM
00001120  D441                     815m         ADD.W   D1, D2
00001122  3402                     816m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           817m         ENDM
00001124  31C2 0500                818          MOVE.W  D2, ($500)  ; Store at mem location $500
00001128                           819m         newline
00001128  43F8 00D2                820m         LEA     OBLANK, A1
0000112C  103C 000D                821m         MOVE.B  #13,D0          
00001130  4E4F                     822m         TRAP    #15
00001132                           823m         ENDM
00001132                           824m         newline
00001132  43F8 00D2                825m         LEA     OBLANK, A1
00001136  103C 000D                826m         MOVE.B  #13,D0          
0000113A  4E4F                     827m         TRAP    #15
0000113C                           828m         ENDM
0000113C                           829          
0000113C  7200                     830  goLoop: MOVE.L  #0, D1
0000113E  3238 0500                831          MOVE.W  ($500), D1
00001142  240A                     832          MOVE.L  A2, D2
00001144  B282                     833          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 0016                834          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A  4EB9 00001162            835          JSR     identifyOpcode  ; Decode what is at A2
00001150  381A                     836          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
00001152                           837m         newline
00001152  43F8 00D2                838m         LEA     OBLANK, A1
00001156  103C 000D                839m         MOVE.B  #13,D0          
0000115A  4E4F                     840m         TRAP    #15
0000115C                           841m         ENDM
0000115C  60DE                     842          BRA     goLoop
0000115E                           843          
0000115E                           844          
0000115E                           845          
0000115E  FFFF FFFF                846  endSim: SIMHALT             ; halt simulator
00001162                           847          
00001162                           848          
00001162                           849  ; ========================================================================
00001162                           850  ; "identifyOpcode" subroutine
00001162                           851  ; Jonathan
00001162                           852  ; 
00001162                           853  ; Reads the Word at A2 and determines which opcode it represents.
00001162                           854  ; When the opcode is identified, the appropriate "decodeX" subroutine
00001162                           855  ; is invoked.
00001162                           856  ;
00001162                           857  ; Uses a generated Trie structure to determine where to split on which bits
00001162                           858  ; in order to efficiently identify the exact opcode
00001162                           859  ; ========================================================================
00001162                           860  identifyOpcode:
00001162  3612                     861          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001164  0803 000F                862          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001168  6700 0006                863          BEQ     split0      ; Split based on the first bit
0000116C  6000 0082                864          BRA     split1
00001170                           865  
00001170                           866  split0: 
00001170  0803 000E                867          BTST    #$E, D3     ; Check the 2nd bit
00001174  6700 0006                868          BEQ     split000    ; MOVE follows 00+        
00001178  6000 0016                869          BRA     split01
0000117C                           870          
0000117C                           871  split000:        
0000117C  0803 000D                872          BTST    #$D, D3     ; Check the 3rd bit
00001180  6600 012E                873          BNE     decodeMOVE
00001184  0803 000C                874          BTST    #$C, D3     ; Check the 3rd bit
00001188  6600 0126                875          BNE     decodeMOVE
0000118C  6000 59F6                876          BRA     outputData
00001190                           877  split01:
00001190  0803 000D                878          BTST    #$D, D3     ; Check the 3rd bit
00001194  6700 0006                879          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001198  6000 0032                880          BRA     split0110   ; Code is 011, but all subcodes are 0110        
0000119C                           881  
0000119C                           882  split0100:
0000119C  0803 0008                883          BTST    #$8, D3     ; Check the 8th bit for LEA
000011A0  6600 3470                884          BNE     decodeLEA   ; LEA follows 0100XXX1+
000011A4  0803 000B                885          BTST    #$B, D3     ; Check the 5th bit for NOT
000011A8  6700 47AE                886          BEQ     decodeNOT   ; NOT follows 01000+
000011AC  0803 0009                887          BTST    #$9, D3     ; Check the 7th bit
000011B0  6700 0D2E                888          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
000011B4  6000 0002                889          BRA     split0100111
000011B8                           890  
000011B8                           891  split0100111:
000011B8  0803 0007                892          BTST    #$7, D3     ; Check the 9th bit for JSR
000011BC  6600 5270                893          BNE     decodeJSR   ; JSR follows 010011101+
000011C0  0803 0002                894          BTST    #$2, D3     ; Check the 14th bit
000011C4  6700 00A2                895          BEQ     decodeNOP   ; NOP follows 01001110011100+
000011C8  6000 5886                896          BRA     decodeRTS   ; RTS follows 01001110011101+
000011CC                           897  
000011CC                           898  split0110:
000011CC  0803 000B                899          BTST    #$B, D3     ; Check the 5th bit
000011D0  6700 0006                900          BEQ     split01100
000011D4  6000 000E                901          BRA     split01101
000011D8                           902  
000011D8                           903  split01100:
000011D8  0803 000A                904          BTST    #$A, D3     ; Check the 6th bit
000011DC  6700 58BA                905          BEQ     decodeBRA   ; BRA starts with 011000
000011E0  6000 5192                906          BRA     decodeBEQ   ; BEQ starts with 011001
000011E4                           907          
000011E4                           908  split01101:
000011E4  0803 0008                909          BTST    #$8, D3     ; Check the 8th bit
000011E8  6700 51C8                910          BEQ     decodeBGE   ; BGE starts with 01101100
000011EC  6000 5202                911          BRA     decodeBLT   ; BLT starts with 01101101
000011F0                           912          
000011F0                           913  split1: 
000011F0  0803 000E                914          BTST    #$E, D3     ; Check the 2nd bit
000011F4  6700 0006                915          BEQ     split10
000011F8  6000 000E                916          BRA     split11
000011FC                           917  
000011FC                           918  split10:
000011FC  0803 000C                919          BTST    #$C, D3     ; Check the 4th bit
00001200  6700 2D98                920          BEQ     decodeDIVU  ; DIVU follows 1000+
00001204  6000 1A1A                921          BRA     decodeSUB   ; SUB follows 1001+
00001208                           922  
00001208                           923  split11:
00001208  0803 000D                924          BTST    #$D, D3     ; Check the 3rd bit
0000120C  6700 0006                925          BEQ     split110
00001210  6000 0026                926          BRA     split111
00001214                           927  
00001214                           928  split110:
00001214  0803 000C                929          BTST    #$C, D3     ; Check the 4th bit for ADD
00001218  6600 0D04                930          BNE     decodeADD   ; ADD follows 1101+
0000121C  0803 0008                931          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
00001220  6700 3A34                932          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
00001224  0803 0007                933          BTST    #$7, D3
00001228  6700 3A2C                934          BEQ     decodeAND
0000122C  0803 0006                935          BTST    #$6, D3
00001230  6700 3A24                936          BEQ     decodeAND
00001234  6000 26EC                937          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
00001238                           938  
00001238                           939  split111: 
00001238  0803 0003                940          BTST    #$3, D3     ; Check 13th bit
0000123C  6700 001A                941          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
00001240                           942     
00001240  0803 0005                943          BTST    #$5, D3     
00001244  6600 0006                944          BNE     logReg     
00001248  6000 4D5E                945          BRA     decodeLSx_M
0000124C  0803 000C                946  logReg: BTST    #12, D3         
00001250  6700 4E2A                947          BEQ     decodeLSx_R
00001254  6000 592E                948          BRA     outputData
00001258                           949  
00001258                           950  ariShift: ; Special split specifically for Arithmetic Shift
00001258  0803 0005                951          BTST    #$5, D3     
0000125C  6600 0006                952          BNE     ariReg
00001260  6000 4F2C                953          BRA     decodeASx_M    
00001264  6000 4FFC                954  ariReg: BRA     decodeASx_R
00001268                           955              
00001268                           956  
00001268                           957  ; ========================================================================
00001268                           958  ; "decodeX" subroutines
00001268                           959  ; Gary, Dylan
00001268                           960  ; 
00001268                           961  ; Set of subroutines which are invoked by identifyOpcode.
00001268                           962  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
00001268                           963  ; the instruction.
00001268                           964  ;
00001268                           965  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
00001268                           966  ; opcode) to record the parameters (such as destination register). If the
00001268                           967  ; opcode indicates that the next word represents a destination address, then
00001268                           968  ; decodeLEA will advance A2 to the next word and decode that.
00001268                           969  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
00001268                           970  ; ========================================================================
00001268                           971  
00001268                           972  ; ------------------------------------------------------------
00001268                           973  ; 1. "decodeNOP" subroutine
00001268                           974  ; AUTHOR
00001268                           975  ;
00001268                           976  ; TODO: DESCRIPTION
00001268                           977  ; ------------------------------------------------------------
00001268                           978  decodeNOP:
00001268                           979m         verifyOpcode    pNOP, (A2)
00001268  43F8 00D4                980m         LEA     PNOP, A1      ; INPUT PATTERN STRING
0000126C  3612                     981m         MOVE.W  (A2), D3      ; INPUT VALUE
0000126E  123C 000F                982m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001272                           983m         
00001272                           984m LOOP_15: 
00001272  0C11 0030                985m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001276  6700 000E                986m         BEQ     CHECKFOR0_15
0000127A  0C11 0031                987m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000127E  6700 0010                988m         BEQ     CHECKFOR1_15
00001282  6000 0012                989m         BRA     NEXT_15      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001286                           990m         
00001286                           991m CHECKFOR0_15: 
00001286  0303                     992m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001288  6600 58FA                993m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000128C  6000 0008                994m         BRA     NEXT_15
00001290                           995m 
00001290                           996m CHECKFOR1_15:
00001290  0303                     997m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001292  6700 58F0                998m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001296                           999m 
00001296                          1000m NEXT_15: 
00001296  B23C 0000               1001m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000129A  6700 0008               1002m         BEQ     COMPLETE_15  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000129E  5301                    1003m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012A0  1819                    1004m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012A2  60CE                    1005m         BRA     LOOP_15      ; BEGIN LOOP AGAIN
000012A4                          1006m 
000012A4                          1007m COMPLETE_15:  ; OPCODE HAS BEEN VERIFIED
000012A4                          1008m         ENDM
000012A4  43F8 0060               1009          LEA     oNOP, A1     ; Loads byteVAR
000012A8  103C 000E               1010          MOVE.B  #14,D0          
000012AC  4E4F                    1011          TRAP    #15
000012AE  4E75                    1012          RTS                 ; Return from decodeNOP subroutine
000012B0                          1013  
000012B0                          1014  
000012B0                          1015  ; ------------------------------------------------------------
000012B0                          1016  ; 2. "decodeMOVE" subroutine
000012B0                          1017  ; AUTHOR
000012B0                          1018  ;
000012B0                          1019  ; TODO: DESCRIPTION
000012B0                          1020  ; ------------------------------------------------------------
000012B0                          1021  decodeMOVE:
000012B0                          1022m         verifyOpcode    pMOVE, (A2)
000012B0  43F8 00E5               1023m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
000012B4  3612                    1024m         MOVE.W  (A2), D3      ; INPUT VALUE
000012B6  123C 000F               1025m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000012BA                          1026m         
000012BA                          1027m LOOP_16: 
000012BA  0C11 0030               1028m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000012BE  6700 000E               1029m         BEQ     CHECKFOR0_16
000012C2  0C11 0031               1030m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000012C6  6700 0010               1031m         BEQ     CHECKFOR1_16
000012CA  6000 0012               1032m         BRA     NEXT_16      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000012CE                          1033m         
000012CE                          1034m CHECKFOR0_16: 
000012CE  0303                    1035m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000012D0  6600 58B2               1036m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000012D4  6000 0008               1037m         BRA     NEXT_16
000012D8                          1038m 
000012D8                          1039m CHECKFOR1_16:
000012D8  0303                    1040m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000012DA  6700 58A8               1041m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000012DE                          1042m 
000012DE                          1043m NEXT_16: 
000012DE  B23C 0000               1044m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000012E2  6700 0008               1045m         BEQ     COMPLETE_16  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000012E6  5301                    1046m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012E8  1819                    1047m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012EA  60CE                    1048m         BRA     LOOP_16      ; BEGIN LOOP AGAIN
000012EC                          1049m 
000012EC                          1050m COMPLETE_16:  ; OPCODE HAS BEEN VERIFIED
000012EC                          1051m         ENDM
000012EC  43F8 0064               1052          LEA     oMOVE, A1     
000012F0  103C 000E               1053          MOVE.B  #14,D0          
000012F4  4E4F                    1054          TRAP    #15
000012F6                          1055m         printSize       (A2)
000012F6  3612                    1056m         MOVE.W  (A2), D3      ; INPUT VALUE
000012F8  4247                    1057m         CLR     D7      
000012FA                          1058m CHECKFORB_17: 
000012FA  0803 000D               1059m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000012FE  6600 0010               1060m         BNE     CHECKFORW_17  ; IF NOT GO TO WORD SIZE
00001302  43F8 00B5               1061m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00001306  103C 000E               1062m         MOVE.B  #14,D0          
0000130A  4E4F                    1063m         TRAP    #15
0000130C  6000 0026               1064m         BRA     COMPLETE_17      
00001310                          1065m CHECKFORW_17: 
00001310  0803 000C               1066m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00001314  6700 0010               1067m         BEQ     CHECKFORL_17  ; IF NOT, SIZE CANNOT BE WORD
00001318  43F8 00B9               1068m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000131C  103C 000E               1069m         MOVE.B  #14,D0          
00001320  4E4F                    1070m         TRAP    #15
00001322  6000 0010               1071m         BRA     COMPLETE_17  
00001326                          1072m CHECKFORL_17:
00001326  1E3C 0001               1073m         MOVE.B  #$1, D7
0000132A  43F8 00BD               1074m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
0000132E  103C 000E               1075m         MOVE.B  #14,D0          
00001332  4E4F                    1076m         TRAP    #15
00001334                          1077m COMPLETE_17:  ; SIZE HAS BEEN PRINTED
00001334                          1078m         ENDM
00001334                          1079m         prepareAdrMode  #$1, (A2)
00001334  3C3C 0001               1080m         MOVE.W  #$1, D6      ; INPUT VALUE
00001338  3212                    1081m         MOVE.W  (A2), D1
0000133A  BC3C 0001               1082m         CMP.B   #$01, D6
0000133E  6700 000C               1083m         BEQ     ADRSOURCE_18    
00001342                          1084m ADRDEST_18:
00001342  EF49                    1085m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00001344  E049                    1086m         LSR     #$08, D1
00001346  EA49                    1087m         LSR     #$05, D1
00001348  6000 000A               1088m         BRA     COMPLETE_18 
0000134C                          1089m ADRSOURCE_18:                
0000134C  E149                    1090m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000134E  E549                    1091m         LSL     #$02, D1
00001350  E049                    1092m         LSR     #$08, D1
00001352  EA49                    1093m         LSR     #$05, D1
00001354                          1094m COMPLETE_18:  ; OPCODE HAS BEEN VERIFIED
00001354                          1095m         ENDM        
00001354                          1096m         decodeAdrMode   (A2), D1
00001354  3612                    1097m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00001356  3201                    1098m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001358                          1099m 
00001358  B23C 0001               1100m         CMP.B   #$01, D1
0000135C  6700 0066               1101m         BEQ     ADRREGDIRECT_19    
00001360  B23C 0002               1102m         CMP.B   #$02, D1
00001364  6700 00A0               1103m         BEQ     ADRREGINDIRECT_19  
00001368  B23C 0003               1104m         CMP.B   #$03, D1
0000136C  6700 0102               1105m         BEQ     ADRREGPOSTINC_19  
00001370  B23C 0004               1106m         CMP.B   #$04, D1
00001374  6700 0178               1107m         BEQ     ADRREGPREDEC_19
00001378  B23C 0007               1108m         CMP.B   #$07, D1
0000137C  6700 01EE               1109m         BEQ     ADRABSOLUTE_19    
00001380                          1110m         
00001380                          1111m DATAREGDIRECT_19: 
00001380  BC3C 0001               1112m         CMP.B   #$01, D6
00001384  6700 001E               1113m         BEQ     DATAREGDIRECTSRC_19   
00001388                          1114m DATAREGDIRECTDEST_19: 
00001388                          1115mm         PRINTDNDEST D3 
00001388  3203                    1116mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000138A  E949                    1117mm         LSL     #$04, D1
0000138C  E049                    1118mm         LSR     #$08, D1
0000138E  EA49                    1119mm         LSR     #$05, D1
00001390  43F8 00C1               1120mm         LEA     ODN, A1     
00001394  103C 000E               1121mm         MOVE.B  #14,D0          
00001398  4E4F                    1122mm         TRAP    #15
0000139A  103C 0003               1123mm         MOVE.B  #3,D0          
0000139E  4E4F                    1124mm         TRAP    #15
000013A0                          1125mm         ENDM
000013A0  6000 0562               1126m         BRA     COMPLETE_19 
000013A4                          1127m DATAREGDIRECTSRC_19: 
000013A4                          1128mm         PRINTDNSRC D3 
000013A4  4281                    1129mm         CLR.L   D1
000013A6  3203                    1130mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013A8  E149                    1131mm         LSL     #$08, D1
000013AA  EB49                    1132mm         LSL     #$05, D1
000013AC  E049                    1133mm         LSR     #$08, D1
000013AE  EA49                    1134mm         LSR     #$05, D1
000013B0  43F8 00C1               1135mm         LEA     ODN, A1     
000013B4  103C 000E               1136mm         MOVE.B  #14,D0          
000013B8  4E4F                    1137mm         TRAP    #15
000013BA  103C 0003               1138mm         MOVE.B  #3,D0          
000013BE  4E4F                    1139mm         TRAP    #15
000013C0                          1140mm         ENDM
000013C0  6000 0542               1141m         BRA     COMPLETE_19   
000013C4                          1142m         
000013C4                          1143m ADRREGDIRECT_19: 
000013C4  BC3C 0001               1144m         CMP.B   #$01, D6
000013C8  6700 001E               1145m         BEQ     ADRREGDIRECTSRC_19   
000013CC                          1146m ADRREGDIRECTDEST_19:
000013CC                          1147mm         PRINTANDEST D3
000013CC  3203                    1148mm         MOVE.W  D3, D1
000013CE  E949                    1149mm         LSL     #$04, D1
000013D0  E049                    1150mm         LSR     #$08, D1
000013D2  EA49                    1151mm         LSR     #$05, D1
000013D4  43F8 00C3               1152mm         LEA     OAN, A1     
000013D8  103C 000E               1153mm         MOVE.B  #14,D0          
000013DC  4E4F                    1154mm         TRAP    #15
000013DE  103C 0003               1155mm         MOVE.B  #3,D0          
000013E2  4E4F                    1156mm         TRAP    #15
000013E4                          1157mm         ENDM
000013E4  6000 051E               1158m         BRA     COMPLETE_19   
000013E8                          1159m ADRREGDIRECTSRC_19:
000013E8                          1160mm         PRINTANSRC D3
000013E8  3203                    1161mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013EA  E149                    1162mm         LSL     #$08, D1
000013EC  EB49                    1163mm         LSL     #$05, D1
000013EE  E049                    1164mm         LSR     #$08, D1
000013F0  EA49                    1165mm         LSR     #$05, D1
000013F2  43F8 00C3               1166mm         LEA     OAN, A1     
000013F6  103C 000E               1167mm         MOVE.B  #14,D0          
000013FA  4E4F                    1168mm         TRAP    #15
000013FC  103C 0003               1169mm         MOVE.B  #3,D0          
00001400  4E4F                    1170mm         TRAP    #15
00001402                          1171mm         ENDM
00001402  6000 0500               1172m         BRA     COMPLETE_19   
00001406                          1173m        
00001406                          1174m ADRREGINDIRECT_19:   
00001406  BC3C 0001               1175m         CMP.B   #$01, D6
0000140A  6700 0032               1176m         BEQ     ADRREGINDIRECTSRC_19   
0000140E                          1177m ADRREGINDIRECTDEST_19:
0000140E                          1178mm         PRINTLB
0000140E  43F8 00C5               1179mm         LEA     OLB, A1     
00001412  103C 000E               1180mm         MOVE.B  #14,D0          
00001416  4E4F                    1181mm         TRAP    #15
00001418                          1182mm         ENDM
00001418                          1183mm         PRINTANDEST D3  
00001418  3203                    1184mm         MOVE.W  D3, D1
0000141A  E949                    1185mm         LSL     #$04, D1
0000141C  E049                    1186mm         LSR     #$08, D1
0000141E  EA49                    1187mm         LSR     #$05, D1
00001420  43F8 00C3               1188mm         LEA     OAN, A1     
00001424  103C 000E               1189mm         MOVE.B  #14,D0          
00001428  4E4F                    1190mm         TRAP    #15
0000142A  103C 0003               1191mm         MOVE.B  #3,D0          
0000142E  4E4F                    1192mm         TRAP    #15
00001430                          1193mm         ENDM
00001430                          1194mm         PRINTRB
00001430  43F8 00C7               1195mm         LEA     ORB, A1     
00001434  103C 000E               1196mm         MOVE.B  #14,D0          
00001438  4E4F                    1197mm         TRAP    #15
0000143A                          1198mm         ENDM
0000143A  6000 04C8               1199m         BRA     COMPLETE_19     
0000143E                          1200m ADRREGINDIRECTSRC_19:   
0000143E                          1201mm         PRINTLB
0000143E  43F8 00C5               1202mm         LEA     OLB, A1     
00001442  103C 000E               1203mm         MOVE.B  #14,D0          
00001446  4E4F                    1204mm         TRAP    #15
00001448                          1205mm         ENDM
00001448                          1206mm         PRINTANSRC D3  
00001448  3203                    1207mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144A  E149                    1208mm         LSL     #$08, D1
0000144C  EB49                    1209mm         LSL     #$05, D1
0000144E  E049                    1210mm         LSR     #$08, D1
00001450  EA49                    1211mm         LSR     #$05, D1
00001452  43F8 00C3               1212mm         LEA     OAN, A1     
00001456  103C 000E               1213mm         MOVE.B  #14,D0          
0000145A  4E4F                    1214mm         TRAP    #15
0000145C  103C 0003               1215mm         MOVE.B  #3,D0          
00001460  4E4F                    1216mm         TRAP    #15
00001462                          1217mm         ENDM
00001462                          1218mm         PRINTRB
00001462  43F8 00C7               1219mm         LEA     ORB, A1     
00001466  103C 000E               1220mm         MOVE.B  #14,D0          
0000146A  4E4F                    1221mm         TRAP    #15
0000146C                          1222mm         ENDM
0000146C  6000 0496               1223m         BRA     COMPLETE_19   
00001470                          1224m         
00001470                          1225m ADRREGPOSTINC_19:   
00001470  BC3C 0001               1226m         CMP.B   #$01, D6
00001474  6700 003C               1227m         BEQ     ADRREGPOSTINCSRC_19   
00001478                          1228m ADRREGPOSTINCDEST_19: 
00001478                          1229mm         PRINTLB
00001478  43F8 00C5               1230mm         LEA     OLB, A1     
0000147C  103C 000E               1231mm         MOVE.B  #14,D0          
00001480  4E4F                    1232mm         TRAP    #15
00001482                          1233mm         ENDM
00001482                          1234mm         PRINTANDEST D3  
00001482  3203                    1235mm         MOVE.W  D3, D1
00001484  E949                    1236mm         LSL     #$04, D1
00001486  E049                    1237mm         LSR     #$08, D1
00001488  EA49                    1238mm         LSR     #$05, D1
0000148A  43F8 00C3               1239mm         LEA     OAN, A1     
0000148E  103C 000E               1240mm         MOVE.B  #14,D0          
00001492  4E4F                    1241mm         TRAP    #15
00001494  103C 0003               1242mm         MOVE.B  #3,D0          
00001498  4E4F                    1243mm         TRAP    #15
0000149A                          1244mm         ENDM
0000149A                          1245mm         PRINTRB
0000149A  43F8 00C7               1246mm         LEA     ORB, A1     
0000149E  103C 000E               1247mm         MOVE.B  #14,D0          
000014A2  4E4F                    1248mm         TRAP    #15
000014A4                          1249mm         ENDM
000014A4                          1250mm         PRINTPI
000014A4  43F8 00CE               1251mm         LEA     OPSTINC, A1     
000014A8  103C 000E               1252mm         MOVE.B  #14,D0          
000014AC  4E4F                    1253mm         TRAP    #15
000014AE                          1254mm         ENDM
000014AE  6000 0454               1255m         BRA     COMPLETE_19  
000014B2                          1256m ADRREGPOSTINCSRC_19:           
000014B2                          1257mm         PRINTLB
000014B2  43F8 00C5               1258mm         LEA     OLB, A1     
000014B6  103C 000E               1259mm         MOVE.B  #14,D0          
000014BA  4E4F                    1260mm         TRAP    #15
000014BC                          1261mm         ENDM
000014BC                          1262mm         PRINTANSRC D3  
000014BC  3203                    1263mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014BE  E149                    1264mm         LSL     #$08, D1
000014C0  EB49                    1265mm         LSL     #$05, D1
000014C2  E049                    1266mm         LSR     #$08, D1
000014C4  EA49                    1267mm         LSR     #$05, D1
000014C6  43F8 00C3               1268mm         LEA     OAN, A1     
000014CA  103C 000E               1269mm         MOVE.B  #14,D0          
000014CE  4E4F                    1270mm         TRAP    #15
000014D0  103C 0003               1271mm         MOVE.B  #3,D0          
000014D4  4E4F                    1272mm         TRAP    #15
000014D6                          1273mm         ENDM
000014D6                          1274mm         PRINTRB
000014D6  43F8 00C7               1275mm         LEA     ORB, A1     
000014DA  103C 000E               1276mm         MOVE.B  #14,D0          
000014DE  4E4F                    1277mm         TRAP    #15
000014E0                          1278mm         ENDM
000014E0                          1279mm         PRINTPI
000014E0  43F8 00CE               1280mm         LEA     OPSTINC, A1     
000014E4  103C 000E               1281mm         MOVE.B  #14,D0          
000014E8  4E4F                    1282mm         TRAP    #15
000014EA                          1283mm         ENDM
000014EA  6000 0418               1284m         BRA     COMPLETE_19  
000014EE                          1285m ADRREGPREDEC_19: 
000014EE  BC3C 0001               1286m         CMP.B   #$01, D6
000014F2  6700 003C               1287m         BEQ     ADRREGPREDECSRC_19   
000014F6                          1288m ADRREGPREDECDEST_19:
000014F6                          1289mm         PRINTPD  
000014F6  43F8 00CC               1290mm         LEA     OPREDEC, A1     
000014FA  103C 000E               1291mm         MOVE.B  #14,D0          
000014FE  4E4F                    1292mm         TRAP    #15
00001500                          1293mm         ENDM
00001500                          1294mm         PRINTLB
00001500  43F8 00C5               1295mm         LEA     OLB, A1     
00001504  103C 000E               1296mm         MOVE.B  #14,D0          
00001508  4E4F                    1297mm         TRAP    #15
0000150A                          1298mm         ENDM
0000150A                          1299mm         PRINTANDEST D3  
0000150A  3203                    1300mm         MOVE.W  D3, D1
0000150C  E949                    1301mm         LSL     #$04, D1
0000150E  E049                    1302mm         LSR     #$08, D1
00001510  EA49                    1303mm         LSR     #$05, D1
00001512  43F8 00C3               1304mm         LEA     OAN, A1     
00001516  103C 000E               1305mm         MOVE.B  #14,D0          
0000151A  4E4F                    1306mm         TRAP    #15
0000151C  103C 0003               1307mm         MOVE.B  #3,D0          
00001520  4E4F                    1308mm         TRAP    #15
00001522                          1309mm         ENDM
00001522                          1310mm         PRINTRB
00001522  43F8 00C7               1311mm         LEA     ORB, A1     
00001526  103C 000E               1312mm         MOVE.B  #14,D0          
0000152A  4E4F                    1313mm         TRAP    #15
0000152C                          1314mm         ENDM
0000152C  6000 03D6               1315m         BRA     COMPLETE_19   
00001530                          1316m ADRREGPREDECSRC_19: 
00001530                          1317mm         PRINTPD  
00001530  43F8 00CC               1318mm         LEA     OPREDEC, A1     
00001534  103C 000E               1319mm         MOVE.B  #14,D0          
00001538  4E4F                    1320mm         TRAP    #15
0000153A                          1321mm         ENDM
0000153A                          1322mm         PRINTLB
0000153A  43F8 00C5               1323mm         LEA     OLB, A1     
0000153E  103C 000E               1324mm         MOVE.B  #14,D0          
00001542  4E4F                    1325mm         TRAP    #15
00001544                          1326mm         ENDM
00001544                          1327mm         PRINTANSRC D3  
00001544  3203                    1328mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001546  E149                    1329mm         LSL     #$08, D1
00001548  EB49                    1330mm         LSL     #$05, D1
0000154A  E049                    1331mm         LSR     #$08, D1
0000154C  EA49                    1332mm         LSR     #$05, D1
0000154E  43F8 00C3               1333mm         LEA     OAN, A1     
00001552  103C 000E               1334mm         MOVE.B  #14,D0          
00001556  4E4F                    1335mm         TRAP    #15
00001558  103C 0003               1336mm         MOVE.B  #3,D0          
0000155C  4E4F                    1337mm         TRAP    #15
0000155E                          1338mm         ENDM
0000155E                          1339mm         PRINTRB
0000155E  43F8 00C7               1340mm         LEA     ORB, A1     
00001562  103C 000E               1341mm         MOVE.B  #14,D0          
00001566  4E4F                    1342mm         TRAP    #15
00001568                          1343mm         ENDM
00001568  6000 039A               1344m         BRA     COMPLETE_19
0000156C                          1345m        
0000156C                          1346m ADRABSOLUTE_19:
0000156C  BC3C 0001               1347m         CMP.B   #$01, D6
00001570  6600 0018               1348m         BNE     ADRABSOLUTEDST_19 
00001574                          1349m         
00001574  3A03                    1350m         MOVE.W  D3, D5
00001576  0803 0002               1351m         BTST    #2, D3
0000157A  6600 0024               1352m         BNE     ADRIMMEDIATE_19
0000157E  0803 0000               1353m         BTST    #0, D3
00001582  6600 0270               1354m         BNE     ADRABSOLUTEL_19
00001586  6000 01DA               1355m         BRA     ADRABSOLUTEW_19
0000158A                          1356m ADRABSOLUTEDST_19:
0000158A  3A03                    1357m         MOVE.W  D3, D5
0000158C  0803 000B               1358m         BTST    #$B, D3
00001590  6600 000E               1359m         BNE     ADRIMMEDIATE_19
00001594  0803 0009               1360m         BTST    #$09, D3
00001598  6600 025A               1361m         BNE     ADRABSOLUTEL_19
0000159C  6000 01C4               1362m         BRA     ADRABSOLUTEW_19
000015A0                          1363m ADRIMMEDIATE_19:
000015A0  BE3C 0001               1364m         CMP.B   #1, D7
000015A4  6700 009E               1365m         BEQ     ADRIMMEDIATEL_19
000015A8                          1366m ADRIMMEDIATEW_19:
000015A8  361A                    1367m         MOVE.W  (A2)+, D3
000015AA                          1368mm         PRINTHASH
000015AA  103C 0006               1369mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015AE  323C 0023               1370mm         MOVE.W  #35, D1     ; AN = SIGN
000015B2  4E4F                    1371mm         TRAP    #15         ; OUTPUT = SIGN
000015B4                          1372mm         ENDM
000015B4                          1373mm         PRINTSIGN
000015B4  103C 0006               1374mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015B8  323C 0024               1375mm         MOVE.W  #36, D1     ; AN = SIGN
000015BC  4E4F                    1376mm         TRAP    #15         ; OUTPUT = SIGN
000015BE                          1377mm         ENDM
000015BE                          1378mm         ADROUT
000015BE  3212                    1379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015C0  E049                    1380mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015C2  E849                    1381mm         LSR.W   #4, D1      
000015C4                          1382mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015C4  0C01 0009               1383mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015C8  6E00 000A               1384mmm         BGT     ALPHA_49
000015CC  0601 0030               1385mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015D0  6000 0006               1386mmm         BRA     DONE_49
000015D4  0601 0037               1387mmm ALPHA_49: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015D8  4E71                    1388mmm DONE_49: NOP
000015DA                          1389mmm         ENDM
000015DA  4E4F                    1390mm         TRAP    #15         ; EXECUTE OUTPUT
000015DC                          1391mm         
000015DC  3212                    1392mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015DE  E949                    1393mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000015E0  E049                    1394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015E2  E849                    1395mm         LSR.W   #4, D1      
000015E4                          1396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015E4  0C01 0009               1397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015E8  6E00 000A               1398mmm         BGT     ALPHA_50
000015EC  0601 0030               1399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015F0  6000 0006               1400mmm         BRA     DONE_50
000015F4  0601 0037               1401mmm ALPHA_50: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015F8  4E71                    1402mmm DONE_50: NOP
000015FA                          1403mmm         ENDM
000015FA  4E4F                    1404mm         TRAP    #15         ; EXECUTE OUTPUT
000015FC                          1405mm         
000015FC  3212                    1406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015FE  E149                    1407mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001600  E049                    1408mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001602  E849                    1409mm         LSR.W   #4, D1      
00001604                          1410mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001604  0C01 0009               1411mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001608  6E00 000A               1412mmm         BGT     ALPHA_51
0000160C  0601 0030               1413mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001610  6000 0006               1414mmm         BRA     DONE_51
00001614  0601 0037               1415mmm ALPHA_51: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001618  4E71                    1416mmm DONE_51: NOP
0000161A                          1417mmm         ENDM
0000161A  4E4F                    1418mm         TRAP    #15         ; EXECUTE OUTPUT
0000161C                          1419mm         
0000161C  3212                    1420mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000161E  E149                    1421mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001620  E949                    1422mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001622  E049                    1423mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001624  E849                    1424mm         LSR.W   #4, D1      
00001626                          1425mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001626  0C01 0009               1426mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000162A  6E00 000A               1427mmm         BGT     ALPHA_52
0000162E  0601 0030               1428mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001632  6000 0006               1429mmm         BRA     DONE_52
00001636  0601 0037               1430mmm ALPHA_52: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000163A  4E71                    1431mmm DONE_52: NOP
0000163C                          1432mmm         ENDM
0000163C  4E4F                    1433mm         TRAP    #15         ; EXECUTE OUTPUT       
0000163E                          1434mm         ENDM 
0000163E  3605                    1435m         MOVE.W  D5, D3
00001640  6000 02C2               1436m         BRA     COMPLETE_19
00001644                          1437m ADRIMMEDIATEL_19:
00001644  361A                    1438m         MOVE.W  (A2)+, D3
00001646                          1439mm         PRINTHASH
00001646  103C 0006               1440mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000164A  323C 0023               1441mm         MOVE.W  #35, D1     ; AN = SIGN
0000164E  4E4F                    1442mm         TRAP    #15         ; OUTPUT = SIGN
00001650                          1443mm         ENDM
00001650                          1444mm         PRINTSIGN
00001650  103C 0006               1445mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001654  323C 0024               1446mm         MOVE.W  #36, D1     ; AN = SIGN
00001658  4E4F                    1447mm         TRAP    #15         ; OUTPUT = SIGN
0000165A                          1448mm         ENDM
0000165A                          1449mm         ADROUT 
0000165A  3212                    1450mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000165C  E049                    1451mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000165E  E849                    1452mm         LSR.W   #4, D1      
00001660                          1453mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001660  0C01 0009               1454mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001664  6E00 000A               1455mmm         BGT     ALPHA_56
00001668  0601 0030               1456mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000166C  6000 0006               1457mmm         BRA     DONE_56
00001670  0601 0037               1458mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001674  4E71                    1459mmm DONE_56: NOP
00001676                          1460mmm         ENDM
00001676  4E4F                    1461mm         TRAP    #15         ; EXECUTE OUTPUT
00001678                          1462mm         
00001678  3212                    1463mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000167A  E949                    1464mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000167C  E049                    1465mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000167E  E849                    1466mm         LSR.W   #4, D1      
00001680                          1467mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001680  0C01 0009               1468mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001684  6E00 000A               1469mmm         BGT     ALPHA_57
00001688  0601 0030               1470mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000168C  6000 0006               1471mmm         BRA     DONE_57
00001690  0601 0037               1472mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001694  4E71                    1473mmm DONE_57: NOP
00001696                          1474mmm         ENDM
00001696  4E4F                    1475mm         TRAP    #15         ; EXECUTE OUTPUT
00001698                          1476mm         
00001698  3212                    1477mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000169A  E149                    1478mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000169C  E049                    1479mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000169E  E849                    1480mm         LSR.W   #4, D1      
000016A0                          1481mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016A0  0C01 0009               1482mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016A4  6E00 000A               1483mmm         BGT     ALPHA_58
000016A8  0601 0030               1484mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016AC  6000 0006               1485mmm         BRA     DONE_58
000016B0  0601 0037               1486mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016B4  4E71                    1487mmm DONE_58: NOP
000016B6                          1488mmm         ENDM
000016B6  4E4F                    1489mm         TRAP    #15         ; EXECUTE OUTPUT
000016B8                          1490mm         
000016B8  3212                    1491mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016BA  E149                    1492mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016BC  E949                    1493mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016BE  E049                    1494mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016C0  E849                    1495mm         LSR.W   #4, D1      
000016C2                          1496mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016C2  0C01 0009               1497mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016C6  6E00 000A               1498mmm         BGT     ALPHA_59
000016CA  0601 0030               1499mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016CE  6000 0006               1500mmm         BRA     DONE_59
000016D2  0601 0037               1501mmm ALPHA_59: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016D6  4E71                    1502mmm DONE_59: NOP
000016D8                          1503mmm         ENDM
000016D8  4E4F                    1504mm         TRAP    #15         ; EXECUTE OUTPUT       
000016DA                          1505mm         ENDM 
000016DA  361A                    1506m         MOVE.W  (A2)+, D3
000016DC                          1507mm         ADROUT
000016DC  3212                    1508mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016DE  E049                    1509mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016E0  E849                    1510mm         LSR.W   #4, D1      
000016E2                          1511mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016E2  0C01 0009               1512mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016E6  6E00 000A               1513mmm         BGT     ALPHA_61
000016EA  0601 0030               1514mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016EE  6000 0006               1515mmm         BRA     DONE_61
000016F2  0601 0037               1516mmm ALPHA_61: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016F6  4E71                    1517mmm DONE_61: NOP
000016F8                          1518mmm         ENDM
000016F8  4E4F                    1519mm         TRAP    #15         ; EXECUTE OUTPUT
000016FA                          1520mm         
000016FA  3212                    1521mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016FC  E949                    1522mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000016FE  E049                    1523mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001700  E849                    1524mm         LSR.W   #4, D1      
00001702                          1525mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001702  0C01 0009               1526mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001706  6E00 000A               1527mmm         BGT     ALPHA_62
0000170A  0601 0030               1528mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000170E  6000 0006               1529mmm         BRA     DONE_62
00001712  0601 0037               1530mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001716  4E71                    1531mmm DONE_62: NOP
00001718                          1532mmm         ENDM
00001718  4E4F                    1533mm         TRAP    #15         ; EXECUTE OUTPUT
0000171A                          1534mm         
0000171A  3212                    1535mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000171C  E149                    1536mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000171E  E049                    1537mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001720  E849                    1538mm         LSR.W   #4, D1      
00001722                          1539mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001722  0C01 0009               1540mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001726  6E00 000A               1541mmm         BGT     ALPHA_63
0000172A  0601 0030               1542mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000172E  6000 0006               1543mmm         BRA     DONE_63
00001732  0601 0037               1544mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001736  4E71                    1545mmm DONE_63: NOP
00001738                          1546mmm         ENDM
00001738  4E4F                    1547mm         TRAP    #15         ; EXECUTE OUTPUT
0000173A                          1548mm         
0000173A  3212                    1549mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000173C  E149                    1550mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000173E  E949                    1551mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001740  E049                    1552mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001742  E849                    1553mm         LSR.W   #4, D1      
00001744                          1554mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001744  0C01 0009               1555mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001748  6E00 000A               1556mmm         BGT     ALPHA_64
0000174C  0601 0030               1557mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001750  6000 0006               1558mmm         BRA     DONE_64
00001754  0601 0037               1559mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001758  4E71                    1560mmm DONE_64: NOP
0000175A                          1561mmm         ENDM
0000175A  4E4F                    1562mm         TRAP    #15         ; EXECUTE OUTPUT       
0000175C                          1563mm         ENDM 
0000175C  3605                    1564m         MOVE.W  D5, D3
0000175E  6000 01A4               1565m         BRA     COMPLETE_19 
00001762                          1566m ADRABSOLUTEW_19:     
00001762  361A                    1567m         MOVE.W  (A2)+, D3
00001764                          1568mm         PRINTSIGN
00001764  103C 0006               1569mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001768  323C 0024               1570mm         MOVE.W  #36, D1     ; AN = SIGN
0000176C  4E4F                    1571mm         TRAP    #15         ; OUTPUT = SIGN
0000176E                          1572mm         ENDM
0000176E                          1573mm         ADROUT
0000176E  3212                    1574mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001770  E049                    1575mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001772  E849                    1576mm         LSR.W   #4, D1      
00001774                          1577mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001774  0C01 0009               1578mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001778  6E00 000A               1579mmm         BGT     ALPHA_67
0000177C  0601 0030               1580mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001780  6000 0006               1581mmm         BRA     DONE_67
00001784  0601 0037               1582mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001788  4E71                    1583mmm DONE_67: NOP
0000178A                          1584mmm         ENDM
0000178A  4E4F                    1585mm         TRAP    #15         ; EXECUTE OUTPUT
0000178C                          1586mm         
0000178C  3212                    1587mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000178E  E949                    1588mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001790  E049                    1589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001792  E849                    1590mm         LSR.W   #4, D1      
00001794                          1591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001794  0C01 0009               1592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001798  6E00 000A               1593mmm         BGT     ALPHA_68
0000179C  0601 0030               1594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017A0  6000 0006               1595mmm         BRA     DONE_68
000017A4  0601 0037               1596mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017A8  4E71                    1597mmm DONE_68: NOP
000017AA                          1598mmm         ENDM
000017AA  4E4F                    1599mm         TRAP    #15         ; EXECUTE OUTPUT
000017AC                          1600mm         
000017AC  3212                    1601mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AE  E149                    1602mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017B0  E049                    1603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B2  E849                    1604mm         LSR.W   #4, D1      
000017B4                          1605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B4  0C01 0009               1606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B8  6E00 000A               1607mmm         BGT     ALPHA_69
000017BC  0601 0030               1608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017C0  6000 0006               1609mmm         BRA     DONE_69
000017C4  0601 0037               1610mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C8  4E71                    1611mmm DONE_69: NOP
000017CA                          1612mmm         ENDM
000017CA  4E4F                    1613mm         TRAP    #15         ; EXECUTE OUTPUT
000017CC                          1614mm         
000017CC  3212                    1615mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017CE  E149                    1616mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017D0  E949                    1617mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017D2  E049                    1618mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D4  E849                    1619mm         LSR.W   #4, D1      
000017D6                          1620mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D6  0C01 0009               1621mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017DA  6E00 000A               1622mmm         BGT     ALPHA_70
000017DE  0601 0030               1623mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017E2  6000 0006               1624mmm         BRA     DONE_70
000017E6  0601 0037               1625mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017EA  4E71                    1626mmm DONE_70: NOP
000017EC                          1627mmm         ENDM
000017EC  4E4F                    1628mm         TRAP    #15         ; EXECUTE OUTPUT       
000017EE                          1629mm         ENDM 
000017EE  3605                    1630m         MOVE.W  D5, D3
000017F0  6000 0112               1631m         BRA     COMPLETE_19  
000017F4                          1632m ADRABSOLUTEL_19:  
000017F4  361A                    1633m         MOVE.W  (A2)+, D3
000017F6                          1634mm         PRINTSIGN
000017F6  103C 0006               1635mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000017FA  323C 0024               1636mm         MOVE.W  #36, D1     ; AN = SIGN
000017FE  4E4F                    1637mm         TRAP    #15         ; OUTPUT = SIGN
00001800                          1638mm         ENDM
00001800                          1639mm         ADROUT 
00001800  3212                    1640mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001802  E049                    1641mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001804  E849                    1642mm         LSR.W   #4, D1      
00001806                          1643mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001806  0C01 0009               1644mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000180A  6E00 000A               1645mmm         BGT     ALPHA_73
0000180E  0601 0030               1646mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001812  6000 0006               1647mmm         BRA     DONE_73
00001816  0601 0037               1648mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000181A  4E71                    1649mmm DONE_73: NOP
0000181C                          1650mmm         ENDM
0000181C  4E4F                    1651mm         TRAP    #15         ; EXECUTE OUTPUT
0000181E                          1652mm         
0000181E  3212                    1653mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001820  E949                    1654mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001822  E049                    1655mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001824  E849                    1656mm         LSR.W   #4, D1      
00001826                          1657mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001826  0C01 0009               1658mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182A  6E00 000A               1659mmm         BGT     ALPHA_74
0000182E  0601 0030               1660mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001832  6000 0006               1661mmm         BRA     DONE_74
00001836  0601 0037               1662mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183A  4E71                    1663mmm DONE_74: NOP
0000183C                          1664mmm         ENDM
0000183C  4E4F                    1665mm         TRAP    #15         ; EXECUTE OUTPUT
0000183E                          1666mm         
0000183E  3212                    1667mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001840  E149                    1668mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001842  E049                    1669mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001844  E849                    1670mm         LSR.W   #4, D1      
00001846                          1671mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001846  0C01 0009               1672mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184A  6E00 000A               1673mmm         BGT     ALPHA_75
0000184E  0601 0030               1674mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001852  6000 0006               1675mmm         BRA     DONE_75
00001856  0601 0037               1676mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185A  4E71                    1677mmm DONE_75: NOP
0000185C                          1678mmm         ENDM
0000185C  4E4F                    1679mm         TRAP    #15         ; EXECUTE OUTPUT
0000185E                          1680mm         
0000185E  3212                    1681mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001860  E149                    1682mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001862  E949                    1683mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001864  E049                    1684mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001866  E849                    1685mm         LSR.W   #4, D1      
00001868                          1686mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001868  0C01 0009               1687mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186C  6E00 000A               1688mmm         BGT     ALPHA_76
00001870  0601 0030               1689mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001874  6000 0006               1690mmm         BRA     DONE_76
00001878  0601 0037               1691mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187C  4E71                    1692mmm DONE_76: NOP
0000187E                          1693mmm         ENDM
0000187E  4E4F                    1694mm         TRAP    #15         ; EXECUTE OUTPUT       
00001880                          1695mm         ENDM 
00001880  361A                    1696m         MOVE.W  (A2)+, D3
00001882                          1697mm         ADROUT
00001882  3212                    1698mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001884  E049                    1699mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001886  E849                    1700mm         LSR.W   #4, D1      
00001888                          1701mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001888  0C01 0009               1702mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188C  6E00 000A               1703mmm         BGT     ALPHA_78
00001890  0601 0030               1704mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001894  6000 0006               1705mmm         BRA     DONE_78
00001898  0601 0037               1706mmm ALPHA_78: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189C  4E71                    1707mmm DONE_78: NOP
0000189E                          1708mmm         ENDM
0000189E  4E4F                    1709mm         TRAP    #15         ; EXECUTE OUTPUT
000018A0                          1710mm         
000018A0  3212                    1711mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018A2  E949                    1712mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018A4  E049                    1713mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A6  E849                    1714mm         LSR.W   #4, D1      
000018A8                          1715mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018A8  0C01 0009               1716mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AC  6E00 000A               1717mmm         BGT     ALPHA_79
000018B0  0601 0030               1718mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B4  6000 0006               1719mmm         BRA     DONE_79
000018B8  0601 0037               1720mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BC  4E71                    1721mmm DONE_79: NOP
000018BE                          1722mmm         ENDM
000018BE  4E4F                    1723mm         TRAP    #15         ; EXECUTE OUTPUT
000018C0                          1724mm         
000018C0  3212                    1725mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018C2  E149                    1726mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018C4  E049                    1727mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018C6  E849                    1728mm         LSR.W   #4, D1      
000018C8                          1729mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018C8  0C01 0009               1730mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018CC  6E00 000A               1731mmm         BGT     ALPHA_80
000018D0  0601 0030               1732mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018D4  6000 0006               1733mmm         BRA     DONE_80
000018D8  0601 0037               1734mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018DC  4E71                    1735mmm DONE_80: NOP
000018DE                          1736mmm         ENDM
000018DE  4E4F                    1737mm         TRAP    #15         ; EXECUTE OUTPUT
000018E0                          1738mm         
000018E0  3212                    1739mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018E2  E149                    1740mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018E4  E949                    1741mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000018E6  E049                    1742mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018E8  E849                    1743mm         LSR.W   #4, D1      
000018EA                          1744mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018EA  0C01 0009               1745mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018EE  6E00 000A               1746mmm         BGT     ALPHA_81
000018F2  0601 0030               1747mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018F6  6000 0006               1748mmm         BRA     DONE_81
000018FA  0601 0037               1749mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018FE  4E71                    1750mmm DONE_81: NOP
00001900                          1751mmm         ENDM
00001900  4E4F                    1752mm         TRAP    #15         ; EXECUTE OUTPUT       
00001902                          1753mm         ENDM 
00001902  3605                    1754m         MOVE.W  D5, D3
00001904                          1755m 
00001904                          1756m COMPLETE_19:  ; OPCODE HAS BEEN VERIFIED
00001904                          1757m         ENDM
00001904                          1758m         printComma
00001904  43F8 00C9               1759m         LEA     OCOMMA, A1     
00001908  103C 000E               1760m         MOVE.B  #14,D0          
0000190C  4E4F                    1761m         TRAP    #15
0000190E                          1762m         ENDM
0000190E                          1763m         prepareAdrMode  #$0,  D3
0000190E  3C3C 0000               1764m         MOVE.W  #$0, D6      ; INPUT VALUE
00001912  3203                    1765m         MOVE.W  D3, D1
00001914  BC3C 0001               1766m         CMP.B   #$01, D6
00001918  6700 000C               1767m         BEQ     ADRSOURCE_83    
0000191C                          1768m ADRDEST_83:
0000191C  EF49                    1769m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000191E  E049                    1770m         LSR     #$08, D1
00001920  EA49                    1771m         LSR     #$05, D1
00001922  6000 000A               1772m         BRA     COMPLETE_83 
00001926                          1773m ADRSOURCE_83:                
00001926  E149                    1774m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00001928  E549                    1775m         LSL     #$02, D1
0000192A  E049                    1776m         LSR     #$08, D1
0000192C  EA49                    1777m         LSR     #$05, D1
0000192E                          1778m COMPLETE_83:  ; OPCODE HAS BEEN VERIFIED
0000192E                          1779m         ENDM        
0000192E                          1780m         decodeAdrMode   D3, D1
0000192E  3603                    1781m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
00001930  3201                    1782m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001932                          1783m 
00001932  B23C 0001               1784m         CMP.B   #$01, D1
00001936  6700 0066               1785m         BEQ     ADRREGDIRECT_84    
0000193A  B23C 0002               1786m         CMP.B   #$02, D1
0000193E  6700 00A0               1787m         BEQ     ADRREGINDIRECT_84  
00001942  B23C 0003               1788m         CMP.B   #$03, D1
00001946  6700 0102               1789m         BEQ     ADRREGPOSTINC_84  
0000194A  B23C 0004               1790m         CMP.B   #$04, D1
0000194E  6700 0178               1791m         BEQ     ADRREGPREDEC_84
00001952  B23C 0007               1792m         CMP.B   #$07, D1
00001956  6700 01EE               1793m         BEQ     ADRABSOLUTE_84    
0000195A                          1794m         
0000195A                          1795m DATAREGDIRECT_84: 
0000195A  BC3C 0001               1796m         CMP.B   #$01, D6
0000195E  6700 001E               1797m         BEQ     DATAREGDIRECTSRC_84   
00001962                          1798m DATAREGDIRECTDEST_84: 
00001962                          1799mm         PRINTDNDEST D3 
00001962  3203                    1800mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001964  E949                    1801mm         LSL     #$04, D1
00001966  E049                    1802mm         LSR     #$08, D1
00001968  EA49                    1803mm         LSR     #$05, D1
0000196A  43F8 00C1               1804mm         LEA     ODN, A1     
0000196E  103C 000E               1805mm         MOVE.B  #14,D0          
00001972  4E4F                    1806mm         TRAP    #15
00001974  103C 0003               1807mm         MOVE.B  #3,D0          
00001978  4E4F                    1808mm         TRAP    #15
0000197A                          1809mm         ENDM
0000197A  6000 0562               1810m         BRA     COMPLETE_84 
0000197E                          1811m DATAREGDIRECTSRC_84: 
0000197E                          1812mm         PRINTDNSRC D3 
0000197E  4281                    1813mm         CLR.L   D1
00001980  3203                    1814mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001982  E149                    1815mm         LSL     #$08, D1
00001984  EB49                    1816mm         LSL     #$05, D1
00001986  E049                    1817mm         LSR     #$08, D1
00001988  EA49                    1818mm         LSR     #$05, D1
0000198A  43F8 00C1               1819mm         LEA     ODN, A1     
0000198E  103C 000E               1820mm         MOVE.B  #14,D0          
00001992  4E4F                    1821mm         TRAP    #15
00001994  103C 0003               1822mm         MOVE.B  #3,D0          
00001998  4E4F                    1823mm         TRAP    #15
0000199A                          1824mm         ENDM
0000199A  6000 0542               1825m         BRA     COMPLETE_84   
0000199E                          1826m         
0000199E                          1827m ADRREGDIRECT_84: 
0000199E  BC3C 0001               1828m         CMP.B   #$01, D6
000019A2  6700 001E               1829m         BEQ     ADRREGDIRECTSRC_84   
000019A6                          1830m ADRREGDIRECTDEST_84:
000019A6                          1831mm         PRINTANDEST D3
000019A6  3203                    1832mm         MOVE.W  D3, D1
000019A8  E949                    1833mm         LSL     #$04, D1
000019AA  E049                    1834mm         LSR     #$08, D1
000019AC  EA49                    1835mm         LSR     #$05, D1
000019AE  43F8 00C3               1836mm         LEA     OAN, A1     
000019B2  103C 000E               1837mm         MOVE.B  #14,D0          
000019B6  4E4F                    1838mm         TRAP    #15
000019B8  103C 0003               1839mm         MOVE.B  #3,D0          
000019BC  4E4F                    1840mm         TRAP    #15
000019BE                          1841mm         ENDM
000019BE  6000 051E               1842m         BRA     COMPLETE_84   
000019C2                          1843m ADRREGDIRECTSRC_84:
000019C2                          1844mm         PRINTANSRC D3
000019C2  3203                    1845mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000019C4  E149                    1846mm         LSL     #$08, D1
000019C6  EB49                    1847mm         LSL     #$05, D1
000019C8  E049                    1848mm         LSR     #$08, D1
000019CA  EA49                    1849mm         LSR     #$05, D1
000019CC  43F8 00C3               1850mm         LEA     OAN, A1     
000019D0  103C 000E               1851mm         MOVE.B  #14,D0          
000019D4  4E4F                    1852mm         TRAP    #15
000019D6  103C 0003               1853mm         MOVE.B  #3,D0          
000019DA  4E4F                    1854mm         TRAP    #15
000019DC                          1855mm         ENDM
000019DC  6000 0500               1856m         BRA     COMPLETE_84   
000019E0                          1857m        
000019E0                          1858m ADRREGINDIRECT_84:   
000019E0  BC3C 0001               1859m         CMP.B   #$01, D6
000019E4  6700 0032               1860m         BEQ     ADRREGINDIRECTSRC_84   
000019E8                          1861m ADRREGINDIRECTDEST_84:
000019E8                          1862mm         PRINTLB
000019E8  43F8 00C5               1863mm         LEA     OLB, A1     
000019EC  103C 000E               1864mm         MOVE.B  #14,D0          
000019F0  4E4F                    1865mm         TRAP    #15
000019F2                          1866mm         ENDM
000019F2                          1867mm         PRINTANDEST D3  
000019F2  3203                    1868mm         MOVE.W  D3, D1
000019F4  E949                    1869mm         LSL     #$04, D1
000019F6  E049                    1870mm         LSR     #$08, D1
000019F8  EA49                    1871mm         LSR     #$05, D1
000019FA  43F8 00C3               1872mm         LEA     OAN, A1     
000019FE  103C 000E               1873mm         MOVE.B  #14,D0          
00001A02  4E4F                    1874mm         TRAP    #15
00001A04  103C 0003               1875mm         MOVE.B  #3,D0          
00001A08  4E4F                    1876mm         TRAP    #15
00001A0A                          1877mm         ENDM
00001A0A                          1878mm         PRINTRB
00001A0A  43F8 00C7               1879mm         LEA     ORB, A1     
00001A0E  103C 000E               1880mm         MOVE.B  #14,D0          
00001A12  4E4F                    1881mm         TRAP    #15
00001A14                          1882mm         ENDM
00001A14  6000 04C8               1883m         BRA     COMPLETE_84     
00001A18                          1884m ADRREGINDIRECTSRC_84:   
00001A18                          1885mm         PRINTLB
00001A18  43F8 00C5               1886mm         LEA     OLB, A1     
00001A1C  103C 000E               1887mm         MOVE.B  #14,D0          
00001A20  4E4F                    1888mm         TRAP    #15
00001A22                          1889mm         ENDM
00001A22                          1890mm         PRINTANSRC D3  
00001A22  3203                    1891mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A24  E149                    1892mm         LSL     #$08, D1
00001A26  EB49                    1893mm         LSL     #$05, D1
00001A28  E049                    1894mm         LSR     #$08, D1
00001A2A  EA49                    1895mm         LSR     #$05, D1
00001A2C  43F8 00C3               1896mm         LEA     OAN, A1     
00001A30  103C 000E               1897mm         MOVE.B  #14,D0          
00001A34  4E4F                    1898mm         TRAP    #15
00001A36  103C 0003               1899mm         MOVE.B  #3,D0          
00001A3A  4E4F                    1900mm         TRAP    #15
00001A3C                          1901mm         ENDM
00001A3C                          1902mm         PRINTRB
00001A3C  43F8 00C7               1903mm         LEA     ORB, A1     
00001A40  103C 000E               1904mm         MOVE.B  #14,D0          
00001A44  4E4F                    1905mm         TRAP    #15
00001A46                          1906mm         ENDM
00001A46  6000 0496               1907m         BRA     COMPLETE_84   
00001A4A                          1908m         
00001A4A                          1909m ADRREGPOSTINC_84:   
00001A4A  BC3C 0001               1910m         CMP.B   #$01, D6
00001A4E  6700 003C               1911m         BEQ     ADRREGPOSTINCSRC_84   
00001A52                          1912m ADRREGPOSTINCDEST_84: 
00001A52                          1913mm         PRINTLB
00001A52  43F8 00C5               1914mm         LEA     OLB, A1     
00001A56  103C 000E               1915mm         MOVE.B  #14,D0          
00001A5A  4E4F                    1916mm         TRAP    #15
00001A5C                          1917mm         ENDM
00001A5C                          1918mm         PRINTANDEST D3  
00001A5C  3203                    1919mm         MOVE.W  D3, D1
00001A5E  E949                    1920mm         LSL     #$04, D1
00001A60  E049                    1921mm         LSR     #$08, D1
00001A62  EA49                    1922mm         LSR     #$05, D1
00001A64  43F8 00C3               1923mm         LEA     OAN, A1     
00001A68  103C 000E               1924mm         MOVE.B  #14,D0          
00001A6C  4E4F                    1925mm         TRAP    #15
00001A6E  103C 0003               1926mm         MOVE.B  #3,D0          
00001A72  4E4F                    1927mm         TRAP    #15
00001A74                          1928mm         ENDM
00001A74                          1929mm         PRINTRB
00001A74  43F8 00C7               1930mm         LEA     ORB, A1     
00001A78  103C 000E               1931mm         MOVE.B  #14,D0          
00001A7C  4E4F                    1932mm         TRAP    #15
00001A7E                          1933mm         ENDM
00001A7E                          1934mm         PRINTPI
00001A7E  43F8 00CE               1935mm         LEA     OPSTINC, A1     
00001A82  103C 000E               1936mm         MOVE.B  #14,D0          
00001A86  4E4F                    1937mm         TRAP    #15
00001A88                          1938mm         ENDM
00001A88  6000 0454               1939m         BRA     COMPLETE_84  
00001A8C                          1940m ADRREGPOSTINCSRC_84:           
00001A8C                          1941mm         PRINTLB
00001A8C  43F8 00C5               1942mm         LEA     OLB, A1     
00001A90  103C 000E               1943mm         MOVE.B  #14,D0          
00001A94  4E4F                    1944mm         TRAP    #15
00001A96                          1945mm         ENDM
00001A96                          1946mm         PRINTANSRC D3  
00001A96  3203                    1947mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A98  E149                    1948mm         LSL     #$08, D1
00001A9A  EB49                    1949mm         LSL     #$05, D1
00001A9C  E049                    1950mm         LSR     #$08, D1
00001A9E  EA49                    1951mm         LSR     #$05, D1
00001AA0  43F8 00C3               1952mm         LEA     OAN, A1     
00001AA4  103C 000E               1953mm         MOVE.B  #14,D0          
00001AA8  4E4F                    1954mm         TRAP    #15
00001AAA  103C 0003               1955mm         MOVE.B  #3,D0          
00001AAE  4E4F                    1956mm         TRAP    #15
00001AB0                          1957mm         ENDM
00001AB0                          1958mm         PRINTRB
00001AB0  43F8 00C7               1959mm         LEA     ORB, A1     
00001AB4  103C 000E               1960mm         MOVE.B  #14,D0          
00001AB8  4E4F                    1961mm         TRAP    #15
00001ABA                          1962mm         ENDM
00001ABA                          1963mm         PRINTPI
00001ABA  43F8 00CE               1964mm         LEA     OPSTINC, A1     
00001ABE  103C 000E               1965mm         MOVE.B  #14,D0          
00001AC2  4E4F                    1966mm         TRAP    #15
00001AC4                          1967mm         ENDM
00001AC4  6000 0418               1968m         BRA     COMPLETE_84  
00001AC8                          1969m ADRREGPREDEC_84: 
00001AC8  BC3C 0001               1970m         CMP.B   #$01, D6
00001ACC  6700 003C               1971m         BEQ     ADRREGPREDECSRC_84   
00001AD0                          1972m ADRREGPREDECDEST_84:
00001AD0                          1973mm         PRINTPD  
00001AD0  43F8 00CC               1974mm         LEA     OPREDEC, A1     
00001AD4  103C 000E               1975mm         MOVE.B  #14,D0          
00001AD8  4E4F                    1976mm         TRAP    #15
00001ADA                          1977mm         ENDM
00001ADA                          1978mm         PRINTLB
00001ADA  43F8 00C5               1979mm         LEA     OLB, A1     
00001ADE  103C 000E               1980mm         MOVE.B  #14,D0          
00001AE2  4E4F                    1981mm         TRAP    #15
00001AE4                          1982mm         ENDM
00001AE4                          1983mm         PRINTANDEST D3  
00001AE4  3203                    1984mm         MOVE.W  D3, D1
00001AE6  E949                    1985mm         LSL     #$04, D1
00001AE8  E049                    1986mm         LSR     #$08, D1
00001AEA  EA49                    1987mm         LSR     #$05, D1
00001AEC  43F8 00C3               1988mm         LEA     OAN, A1     
00001AF0  103C 000E               1989mm         MOVE.B  #14,D0          
00001AF4  4E4F                    1990mm         TRAP    #15
00001AF6  103C 0003               1991mm         MOVE.B  #3,D0          
00001AFA  4E4F                    1992mm         TRAP    #15
00001AFC                          1993mm         ENDM
00001AFC                          1994mm         PRINTRB
00001AFC  43F8 00C7               1995mm         LEA     ORB, A1     
00001B00  103C 000E               1996mm         MOVE.B  #14,D0          
00001B04  4E4F                    1997mm         TRAP    #15
00001B06                          1998mm         ENDM
00001B06  6000 03D6               1999m         BRA     COMPLETE_84   
00001B0A                          2000m ADRREGPREDECSRC_84: 
00001B0A                          2001mm         PRINTPD  
00001B0A  43F8 00CC               2002mm         LEA     OPREDEC, A1     
00001B0E  103C 000E               2003mm         MOVE.B  #14,D0          
00001B12  4E4F                    2004mm         TRAP    #15
00001B14                          2005mm         ENDM
00001B14                          2006mm         PRINTLB
00001B14  43F8 00C5               2007mm         LEA     OLB, A1     
00001B18  103C 000E               2008mm         MOVE.B  #14,D0          
00001B1C  4E4F                    2009mm         TRAP    #15
00001B1E                          2010mm         ENDM
00001B1E                          2011mm         PRINTANSRC D3  
00001B1E  3203                    2012mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B20  E149                    2013mm         LSL     #$08, D1
00001B22  EB49                    2014mm         LSL     #$05, D1
00001B24  E049                    2015mm         LSR     #$08, D1
00001B26  EA49                    2016mm         LSR     #$05, D1
00001B28  43F8 00C3               2017mm         LEA     OAN, A1     
00001B2C  103C 000E               2018mm         MOVE.B  #14,D0          
00001B30  4E4F                    2019mm         TRAP    #15
00001B32  103C 0003               2020mm         MOVE.B  #3,D0          
00001B36  4E4F                    2021mm         TRAP    #15
00001B38                          2022mm         ENDM
00001B38                          2023mm         PRINTRB
00001B38  43F8 00C7               2024mm         LEA     ORB, A1     
00001B3C  103C 000E               2025mm         MOVE.B  #14,D0          
00001B40  4E4F                    2026mm         TRAP    #15
00001B42                          2027mm         ENDM
00001B42  6000 039A               2028m         BRA     COMPLETE_84
00001B46                          2029m        
00001B46                          2030m ADRABSOLUTE_84:
00001B46  BC3C 0001               2031m         CMP.B   #$01, D6
00001B4A  6600 0018               2032m         BNE     ADRABSOLUTEDST_84 
00001B4E                          2033m         
00001B4E  3A03                    2034m         MOVE.W  D3, D5
00001B50  0803 0002               2035m         BTST    #2, D3
00001B54  6600 0024               2036m         BNE     ADRIMMEDIATE_84
00001B58  0803 0000               2037m         BTST    #0, D3
00001B5C  6600 0270               2038m         BNE     ADRABSOLUTEL_84
00001B60  6000 01DA               2039m         BRA     ADRABSOLUTEW_84
00001B64                          2040m ADRABSOLUTEDST_84:
00001B64  3A03                    2041m         MOVE.W  D3, D5
00001B66  0803 000B               2042m         BTST    #$B, D3
00001B6A  6600 000E               2043m         BNE     ADRIMMEDIATE_84
00001B6E  0803 0009               2044m         BTST    #$09, D3
00001B72  6600 025A               2045m         BNE     ADRABSOLUTEL_84
00001B76  6000 01C4               2046m         BRA     ADRABSOLUTEW_84
00001B7A                          2047m ADRIMMEDIATE_84:
00001B7A  BE3C 0001               2048m         CMP.B   #1, D7
00001B7E  6700 009E               2049m         BEQ     ADRIMMEDIATEL_84
00001B82                          2050m ADRIMMEDIATEW_84:
00001B82  361A                    2051m         MOVE.W  (A2)+, D3
00001B84                          2052mm         PRINTHASH
00001B84  103C 0006               2053mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B88  323C 0023               2054mm         MOVE.W  #35, D1     ; AN = SIGN
00001B8C  4E4F                    2055mm         TRAP    #15         ; OUTPUT = SIGN
00001B8E                          2056mm         ENDM
00001B8E                          2057mm         PRINTSIGN
00001B8E  103C 0006               2058mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B92  323C 0024               2059mm         MOVE.W  #36, D1     ; AN = SIGN
00001B96  4E4F                    2060mm         TRAP    #15         ; OUTPUT = SIGN
00001B98                          2061mm         ENDM
00001B98                          2062mm         ADROUT
00001B98  3212                    2063mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001B9A  E049                    2064mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001B9C  E849                    2065mm         LSR.W   #4, D1      
00001B9E                          2066mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001B9E  0C01 0009               2067mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BA2  6E00 000A               2068mmm         BGT     ALPHA_114
00001BA6  0601 0030               2069mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BAA  6000 0006               2070mmm         BRA     DONE_114
00001BAE  0601 0037               2071mmm ALPHA_114: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BB2  4E71                    2072mmm DONE_114: NOP
00001BB4                          2073mmm         ENDM
00001BB4  4E4F                    2074mm         TRAP    #15         ; EXECUTE OUTPUT
00001BB6                          2075mm         
00001BB6  3212                    2076mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BB8  E949                    2077mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001BBA  E049                    2078mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BBC  E849                    2079mm         LSR.W   #4, D1      
00001BBE                          2080mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BBE  0C01 0009               2081mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BC2  6E00 000A               2082mmm         BGT     ALPHA_115
00001BC6  0601 0030               2083mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BCA  6000 0006               2084mmm         BRA     DONE_115
00001BCE  0601 0037               2085mmm ALPHA_115: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BD2  4E71                    2086mmm DONE_115: NOP
00001BD4                          2087mmm         ENDM
00001BD4  4E4F                    2088mm         TRAP    #15         ; EXECUTE OUTPUT
00001BD6                          2089mm         
00001BD6  3212                    2090mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BD8  E149                    2091mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BDA  E049                    2092mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BDC  E849                    2093mm         LSR.W   #4, D1      
00001BDE                          2094mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BDE  0C01 0009               2095mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BE2  6E00 000A               2096mmm         BGT     ALPHA_116
00001BE6  0601 0030               2097mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BEA  6000 0006               2098mmm         BRA     DONE_116
00001BEE  0601 0037               2099mmm ALPHA_116: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BF2  4E71                    2100mmm DONE_116: NOP
00001BF4                          2101mmm         ENDM
00001BF4  4E4F                    2102mm         TRAP    #15         ; EXECUTE OUTPUT
00001BF6                          2103mm         
00001BF6  3212                    2104mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BF8  E149                    2105mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BFA  E949                    2106mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001BFC  E049                    2107mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BFE  E849                    2108mm         LSR.W   #4, D1      
00001C00                          2109mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C00  0C01 0009               2110mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C04  6E00 000A               2111mmm         BGT     ALPHA_117
00001C08  0601 0030               2112mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C0C  6000 0006               2113mmm         BRA     DONE_117
00001C10  0601 0037               2114mmm ALPHA_117: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C14  4E71                    2115mmm DONE_117: NOP
00001C16                          2116mmm         ENDM
00001C16  4E4F                    2117mm         TRAP    #15         ; EXECUTE OUTPUT       
00001C18                          2118mm         ENDM 
00001C18  3605                    2119m         MOVE.W  D5, D3
00001C1A  6000 02C2               2120m         BRA     COMPLETE_84
00001C1E                          2121m ADRIMMEDIATEL_84:
00001C1E  361A                    2122m         MOVE.W  (A2)+, D3
00001C20                          2123mm         PRINTHASH
00001C20  103C 0006               2124mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C24  323C 0023               2125mm         MOVE.W  #35, D1     ; AN = SIGN
00001C28  4E4F                    2126mm         TRAP    #15         ; OUTPUT = SIGN
00001C2A                          2127mm         ENDM
00001C2A                          2128mm         PRINTSIGN
00001C2A  103C 0006               2129mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C2E  323C 0024               2130mm         MOVE.W  #36, D1     ; AN = SIGN
00001C32  4E4F                    2131mm         TRAP    #15         ; OUTPUT = SIGN
00001C34                          2132mm         ENDM
00001C34                          2133mm         ADROUT 
00001C34  3212                    2134mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C36  E049                    2135mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C38  E849                    2136mm         LSR.W   #4, D1      
00001C3A                          2137mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C3A  0C01 0009               2138mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C3E  6E00 000A               2139mmm         BGT     ALPHA_121
00001C42  0601 0030               2140mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C46  6000 0006               2141mmm         BRA     DONE_121
00001C4A  0601 0037               2142mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C4E  4E71                    2143mmm DONE_121: NOP
00001C50                          2144mmm         ENDM
00001C50  4E4F                    2145mm         TRAP    #15         ; EXECUTE OUTPUT
00001C52                          2146mm         
00001C52  3212                    2147mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C54  E949                    2148mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C56  E049                    2149mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C58  E849                    2150mm         LSR.W   #4, D1      
00001C5A                          2151mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5A  0C01 0009               2152mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C5E  6E00 000A               2153mmm         BGT     ALPHA_122
00001C62  0601 0030               2154mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C66  6000 0006               2155mmm         BRA     DONE_122
00001C6A  0601 0037               2156mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C6E  4E71                    2157mmm DONE_122: NOP
00001C70                          2158mmm         ENDM
00001C70  4E4F                    2159mm         TRAP    #15         ; EXECUTE OUTPUT
00001C72                          2160mm         
00001C72  3212                    2161mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C74  E149                    2162mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C76  E049                    2163mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C78  E849                    2164mm         LSR.W   #4, D1      
00001C7A                          2165mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7A  0C01 0009               2166mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C7E  6E00 000A               2167mmm         BGT     ALPHA_123
00001C82  0601 0030               2168mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C86  6000 0006               2169mmm         BRA     DONE_123
00001C8A  0601 0037               2170mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C8E  4E71                    2171mmm DONE_123: NOP
00001C90                          2172mmm         ENDM
00001C90  4E4F                    2173mm         TRAP    #15         ; EXECUTE OUTPUT
00001C92                          2174mm         
00001C92  3212                    2175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C94  E149                    2176mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C96  E949                    2177mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001C98  E049                    2178mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9A  E849                    2179mm         LSR.W   #4, D1      
00001C9C                          2180mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9C  0C01 0009               2181mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA0  6E00 000A               2182mmm         BGT     ALPHA_124
00001CA4  0601 0030               2183mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CA8  6000 0006               2184mmm         BRA     DONE_124
00001CAC  0601 0037               2185mmm ALPHA_124: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB0  4E71                    2186mmm DONE_124: NOP
00001CB2                          2187mmm         ENDM
00001CB2  4E4F                    2188mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CB4                          2189mm         ENDM 
00001CB4  361A                    2190m         MOVE.W  (A2)+, D3
00001CB6                          2191mm         ADROUT
00001CB6  3212                    2192mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB8  E049                    2193mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBA  E849                    2194mm         LSR.W   #4, D1      
00001CBC                          2195mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CBC  0C01 0009               2196mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC0  6E00 000A               2197mmm         BGT     ALPHA_126
00001CC4  0601 0030               2198mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CC8  6000 0006               2199mmm         BRA     DONE_126
00001CCC  0601 0037               2200mmm ALPHA_126: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD0  4E71                    2201mmm DONE_126: NOP
00001CD2                          2202mmm         ENDM
00001CD2  4E4F                    2203mm         TRAP    #15         ; EXECUTE OUTPUT
00001CD4                          2204mm         
00001CD4  3212                    2205mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CD6  E949                    2206mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001CD8  E049                    2207mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDA  E849                    2208mm         LSR.W   #4, D1      
00001CDC                          2209mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDC  0C01 0009               2210mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE0  6E00 000A               2211mmm         BGT     ALPHA_127
00001CE4  0601 0030               2212mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CE8  6000 0006               2213mmm         BRA     DONE_127
00001CEC  0601 0037               2214mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF0  4E71                    2215mmm DONE_127: NOP
00001CF2                          2216mmm         ENDM
00001CF2  4E4F                    2217mm         TRAP    #15         ; EXECUTE OUTPUT
00001CF4                          2218mm         
00001CF4  3212                    2219mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CF6  E149                    2220mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CF8  E049                    2221mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFA  E849                    2222mm         LSR.W   #4, D1      
00001CFC                          2223mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFC  0C01 0009               2224mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D00  6E00 000A               2225mmm         BGT     ALPHA_128
00001D04  0601 0030               2226mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D08  6000 0006               2227mmm         BRA     DONE_128
00001D0C  0601 0037               2228mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D10  4E71                    2229mmm DONE_128: NOP
00001D12                          2230mmm         ENDM
00001D12  4E4F                    2231mm         TRAP    #15         ; EXECUTE OUTPUT
00001D14                          2232mm         
00001D14  3212                    2233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D16  E149                    2234mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D18  E949                    2235mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D1A  E049                    2236mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2237mm         LSR.W   #4, D1      
00001D1E                          2238mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2239mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2240mmm         BGT     ALPHA_129
00001D26  0601 0030               2241mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2242mmm         BRA     DONE_129
00001D2E  0601 0037               2243mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2244mmm DONE_129: NOP
00001D34                          2245mmm         ENDM
00001D34  4E4F                    2246mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D36                          2247mm         ENDM 
00001D36  3605                    2248m         MOVE.W  D5, D3
00001D38  6000 01A4               2249m         BRA     COMPLETE_84 
00001D3C                          2250m ADRABSOLUTEW_84:     
00001D3C  361A                    2251m         MOVE.W  (A2)+, D3
00001D3E                          2252mm         PRINTSIGN
00001D3E  103C 0006               2253mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D42  323C 0024               2254mm         MOVE.W  #36, D1     ; AN = SIGN
00001D46  4E4F                    2255mm         TRAP    #15         ; OUTPUT = SIGN
00001D48                          2256mm         ENDM
00001D48                          2257mm         ADROUT
00001D48  3212                    2258mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D4A  E049                    2259mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D4C  E849                    2260mm         LSR.W   #4, D1      
00001D4E                          2261mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D4E  0C01 0009               2262mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D52  6E00 000A               2263mmm         BGT     ALPHA_132
00001D56  0601 0030               2264mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D5A  6000 0006               2265mmm         BRA     DONE_132
00001D5E  0601 0037               2266mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D62  4E71                    2267mmm DONE_132: NOP
00001D64                          2268mmm         ENDM
00001D64  4E4F                    2269mm         TRAP    #15         ; EXECUTE OUTPUT
00001D66                          2270mm         
00001D66  3212                    2271mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D68  E949                    2272mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D6A  E049                    2273mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D6C  E849                    2274mm         LSR.W   #4, D1      
00001D6E                          2275mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D6E  0C01 0009               2276mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D72  6E00 000A               2277mmm         BGT     ALPHA_133
00001D76  0601 0030               2278mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D7A  6000 0006               2279mmm         BRA     DONE_133
00001D7E  0601 0037               2280mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D82  4E71                    2281mmm DONE_133: NOP
00001D84                          2282mmm         ENDM
00001D84  4E4F                    2283mm         TRAP    #15         ; EXECUTE OUTPUT
00001D86                          2284mm         
00001D86  3212                    2285mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D88  E149                    2286mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D8A  E049                    2287mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D8C  E849                    2288mm         LSR.W   #4, D1      
00001D8E                          2289mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D8E  0C01 0009               2290mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D92  6E00 000A               2291mmm         BGT     ALPHA_134
00001D96  0601 0030               2292mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D9A  6000 0006               2293mmm         BRA     DONE_134
00001D9E  0601 0037               2294mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DA2  4E71                    2295mmm DONE_134: NOP
00001DA4                          2296mmm         ENDM
00001DA4  4E4F                    2297mm         TRAP    #15         ; EXECUTE OUTPUT
00001DA6                          2298mm         
00001DA6  3212                    2299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DA8  E149                    2300mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DAA  E949                    2301mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DAC  E049                    2302mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DAE  E849                    2303mm         LSR.W   #4, D1      
00001DB0                          2304mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DB0  0C01 0009               2305mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DB4  6E00 000A               2306mmm         BGT     ALPHA_135
00001DB8  0601 0030               2307mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DBC  6000 0006               2308mmm         BRA     DONE_135
00001DC0  0601 0037               2309mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DC4  4E71                    2310mmm DONE_135: NOP
00001DC6                          2311mmm         ENDM
00001DC6  4E4F                    2312mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DC8                          2313mm         ENDM 
00001DC8  3605                    2314m         MOVE.W  D5, D3
00001DCA  6000 0112               2315m         BRA     COMPLETE_84  
00001DCE                          2316m ADRABSOLUTEL_84:  
00001DCE  361A                    2317m         MOVE.W  (A2)+, D3
00001DD0                          2318mm         PRINTSIGN
00001DD0  103C 0006               2319mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001DD4  323C 0024               2320mm         MOVE.W  #36, D1     ; AN = SIGN
00001DD8  4E4F                    2321mm         TRAP    #15         ; OUTPUT = SIGN
00001DDA                          2322mm         ENDM
00001DDA                          2323mm         ADROUT 
00001DDA  3212                    2324mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDC  E049                    2325mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DDE  E849                    2326mm         LSR.W   #4, D1      
00001DE0                          2327mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE0  0C01 0009               2328mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DE4  6E00 000A               2329mmm         BGT     ALPHA_138
00001DE8  0601 0030               2330mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DEC  6000 0006               2331mmm         BRA     DONE_138
00001DF0  0601 0037               2332mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DF4  4E71                    2333mmm DONE_138: NOP
00001DF6                          2334mmm         ENDM
00001DF6  4E4F                    2335mm         TRAP    #15         ; EXECUTE OUTPUT
00001DF8                          2336mm         
00001DF8  3212                    2337mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DFA  E949                    2338mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DFC  E049                    2339mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DFE  E849                    2340mm         LSR.W   #4, D1      
00001E00                          2341mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E00  0C01 0009               2342mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E04  6E00 000A               2343mmm         BGT     ALPHA_139
00001E08  0601 0030               2344mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E0C  6000 0006               2345mmm         BRA     DONE_139
00001E10  0601 0037               2346mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E14  4E71                    2347mmm DONE_139: NOP
00001E16                          2348mmm         ENDM
00001E16  4E4F                    2349mm         TRAP    #15         ; EXECUTE OUTPUT
00001E18                          2350mm         
00001E18  3212                    2351mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E1A  E149                    2352mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E1C  E049                    2353mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E1E  E849                    2354mm         LSR.W   #4, D1      
00001E20                          2355mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E20  0C01 0009               2356mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E24  6E00 000A               2357mmm         BGT     ALPHA_140
00001E28  0601 0030               2358mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E2C  6000 0006               2359mmm         BRA     DONE_140
00001E30  0601 0037               2360mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E34  4E71                    2361mmm DONE_140: NOP
00001E36                          2362mmm         ENDM
00001E36  4E4F                    2363mm         TRAP    #15         ; EXECUTE OUTPUT
00001E38                          2364mm         
00001E38  3212                    2365mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E3A  E149                    2366mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E3C  E949                    2367mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E3E  E049                    2368mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E40  E849                    2369mm         LSR.W   #4, D1      
00001E42                          2370mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E42  0C01 0009               2371mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E46  6E00 000A               2372mmm         BGT     ALPHA_141
00001E4A  0601 0030               2373mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E4E  6000 0006               2374mmm         BRA     DONE_141
00001E52  0601 0037               2375mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E56  4E71                    2376mmm DONE_141: NOP
00001E58                          2377mmm         ENDM
00001E58  4E4F                    2378mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E5A                          2379mm         ENDM 
00001E5A  361A                    2380m         MOVE.W  (A2)+, D3
00001E5C                          2381mm         ADROUT
00001E5C  3212                    2382mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E5E  E049                    2383mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E60  E849                    2384mm         LSR.W   #4, D1      
00001E62                          2385mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E62  0C01 0009               2386mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E66  6E00 000A               2387mmm         BGT     ALPHA_143
00001E6A  0601 0030               2388mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E6E  6000 0006               2389mmm         BRA     DONE_143
00001E72  0601 0037               2390mmm ALPHA_143: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E76  4E71                    2391mmm DONE_143: NOP
00001E78                          2392mmm         ENDM
00001E78  4E4F                    2393mm         TRAP    #15         ; EXECUTE OUTPUT
00001E7A                          2394mm         
00001E7A  3212                    2395mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E7C  E949                    2396mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E7E  E049                    2397mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E80  E849                    2398mm         LSR.W   #4, D1      
00001E82                          2399mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E82  0C01 0009               2400mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E86  6E00 000A               2401mmm         BGT     ALPHA_144
00001E8A  0601 0030               2402mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E8E  6000 0006               2403mmm         BRA     DONE_144
00001E92  0601 0037               2404mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E96  4E71                    2405mmm DONE_144: NOP
00001E98                          2406mmm         ENDM
00001E98  4E4F                    2407mm         TRAP    #15         ; EXECUTE OUTPUT
00001E9A                          2408mm         
00001E9A  3212                    2409mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E9C  E149                    2410mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E9E  E049                    2411mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EA0  E849                    2412mm         LSR.W   #4, D1      
00001EA2                          2413mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EA2  0C01 0009               2414mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EA6  6E00 000A               2415mmm         BGT     ALPHA_145
00001EAA  0601 0030               2416mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EAE  6000 0006               2417mmm         BRA     DONE_145
00001EB2  0601 0037               2418mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EB6  4E71                    2419mmm DONE_145: NOP
00001EB8                          2420mmm         ENDM
00001EB8  4E4F                    2421mm         TRAP    #15         ; EXECUTE OUTPUT
00001EBA                          2422mm         
00001EBA  3212                    2423mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EBC  E149                    2424mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EBE  E949                    2425mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001EC0  E049                    2426mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EC2  E849                    2427mm         LSR.W   #4, D1      
00001EC4                          2428mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EC4  0C01 0009               2429mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EC8  6E00 000A               2430mmm         BGT     ALPHA_146
00001ECC  0601 0030               2431mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001ED0  6000 0006               2432mmm         BRA     DONE_146
00001ED4  0601 0037               2433mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001ED8  4E71                    2434mmm DONE_146: NOP
00001EDA                          2435mmm         ENDM
00001EDA  4E4F                    2436mm         TRAP    #15         ; EXECUTE OUTPUT       
00001EDC                          2437mm         ENDM 
00001EDC  3605                    2438m         MOVE.W  D5, D3
00001EDE                          2439m 
00001EDE                          2440m COMPLETE_84:  ; OPCODE HAS BEEN VERIFIED
00001EDE                          2441m         ENDM
00001EDE  4E75                    2442          RTS                 ; Return from decodeMOVE subroutine
00001EE0                          2443  
00001EE0                          2444  
00001EE0                          2445  ; ------------------------------------------------------------
00001EE0                          2446  ; 3. "decodeMOVEM" subroutine
00001EE0                          2447  ; AUTHOR
00001EE0                          2448  ;
00001EE0                          2449  ; TODO: DESCRIPTION
00001EE0                          2450  ; ------------------------------------------------------------
00001EE0                          2451  decodeMOVEM:
00001EE0                          2452m         verifyOpcode    pMOVEM, (A2)
00001EE0  43F8 00F6               2453m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001EE4  3612                    2454m         MOVE.W  (A2), D3      ; INPUT VALUE
00001EE6  123C 000F               2455m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001EEA                          2456m         
00001EEA                          2457m LOOP_147: 
00001EEA  0C11 0030               2458m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001EEE  6700 000E               2459m         BEQ     CHECKFOR0_147
00001EF2  0C11 0031               2460m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001EF6  6700 0010               2461m         BEQ     CHECKFOR1_147
00001EFA  6000 0012               2462m         BRA     NEXT_147      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001EFE                          2463m         
00001EFE                          2464m CHECKFOR0_147: 
00001EFE  0303                    2465m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F00  6600 4C82               2466m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F04  6000 0008               2467m         BRA     NEXT_147
00001F08                          2468m 
00001F08                          2469m CHECKFOR1_147:
00001F08  0303                    2470m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F0A  6700 4C78               2471m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F0E                          2472m 
00001F0E                          2473m NEXT_147: 
00001F0E  B23C 0000               2474m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F12  6700 0008               2475m         BEQ     COMPLETE_147  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F16  5301                    2476m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F18  1819                    2477m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F1A  60CE                    2478m         BRA     LOOP_147      ; BEGIN LOOP AGAIN
00001F1C                          2479m 
00001F1C                          2480m COMPLETE_147:  ; OPCODE HAS BEEN VERIFIED
00001F1C                          2481m         ENDM
00001F1C                          2482          ; put code here
00001F1C  4E75                    2483          RTS                 ; Return from decodeMOVEM subroutine
00001F1E                          2484  
00001F1E                          2485  
00001F1E                          2486  ; ------------------------------------------------------------
00001F1E                          2487  ; 4. "decodeADD" subroutine
00001F1E                          2488  ; AUTHOR
00001F1E                          2489  ;
00001F1E                          2490  ; TODO: DESCRIPTION
00001F1E                          2491  ; ------------------------------------------------------------
00001F1E                          2492  decodeADD:
00001F1E                          2493m         verifyOpcode    pADD, (A2)
00001F1E  43F8 0107               2494m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001F22  3612                    2495m         MOVE.W  (A2), D3      ; INPUT VALUE
00001F24  123C 000F               2496m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001F28                          2497m         
00001F28                          2498m LOOP_148: 
00001F28  0C11 0030               2499m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001F2C  6700 000E               2500m         BEQ     CHECKFOR0_148
00001F30  0C11 0031               2501m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F34  6700 0010               2502m         BEQ     CHECKFOR1_148
00001F38  6000 0012               2503m         BRA     NEXT_148      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001F3C                          2504m         
00001F3C                          2505m CHECKFOR0_148: 
00001F3C  0303                    2506m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F3E  6600 4C44               2507m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F42  6000 0008               2508m         BRA     NEXT_148
00001F46                          2509m 
00001F46                          2510m CHECKFOR1_148:
00001F46  0303                    2511m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F48  6700 4C3A               2512m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F4C                          2513m 
00001F4C                          2514m NEXT_148: 
00001F4C  B23C 0000               2515m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F50  6700 0008               2516m         BEQ     COMPLETE_148  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F54  5301                    2517m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F56  1819                    2518m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F58  60CE                    2519m         BRA     LOOP_148      ; BEGIN LOOP AGAIN
00001F5A                          2520m 
00001F5A                          2521m COMPLETE_148:  ; OPCODE HAS BEEN VERIFIED
00001F5A                          2522m         ENDM
00001F5A  43F8 006F               2523          LEA     oADD, A1     
00001F5E  103C 000E               2524          MOVE.B  #14,D0          
00001F62  4E4F                    2525          TRAP    #15
00001F64                          2526m         printOpMode     (A2)
00001F64  3612                    2527m         MOVE.W  (A2), D3      
00001F66  123C 0008               2528m         MOVE.B  #8, D1    
00001F6A  4246                    2529m         CLR     D6
00001F6C                          2530m CHECKFORDESTDN_149: 
00001F6C  0303                    2531m         BTST    D1, D3      
00001F6E  6600 0048               2532m         BNE     CHECKFORSRCDN_149
00001F72  4EB9 00002042           2533m         JSR     NEXT_149
00001F78  1C3C 0001               2534m         MOVE.B  #$1, D6
00001F7C  0303                    2535m         BTST    D1, D3      
00001F7E  6700 0010               2536m         BEQ     DESTDNW_149
00001F82                          2537m DESTDNL_149:        
00001F82  43F8 00BD               2538m         LEA     OLSIZE, A1     
00001F86  103C 000E               2539m         MOVE.B  #14,D0          
00001F8A  4E4F                    2540m         TRAP    #15
00001F8C  6000 00B8               2541m         BRA     COMPLETE_149 
00001F90                          2542m DESTDNW_149: 
00001F90  4EB9 00002042           2543m         JSR     NEXT_149
00001F96  0303                    2544m         BTST    D1, D3      
00001F98  6700 0010               2545m         BEQ     DESTDNB_149
00001F9C  43F8 00B9               2546m         LEA     OWSIZE, A1     
00001FA0  103C 000E               2547m         MOVE.B  #14,D0          
00001FA4  4E4F                    2548m         TRAP    #15
00001FA6  6000 009E               2549m         BRA     COMPLETE_149 
00001FAA                          2550m DESTDNB_149: 
00001FAA  43F8 00B5               2551m         LEA     OBSIZE, A1     
00001FAE  103C 000E               2552m         MOVE.B  #14,D0          
00001FB2  4E4F                    2553m         TRAP    #15
00001FB4  6000 0090               2554m         BRA     COMPLETE_149 
00001FB8                          2555m CHECKFORSRCDN_149: 
00001FB8  4EB9 00002042           2556m         JSR     NEXT_149
00001FBE  0303                    2557m         BTST    D1, D3      
00001FC0  6700 0028               2558m         BEQ     SRCDNW_149
00001FC4                          2559m SRCDNL_149:        
00001FC4  43F8 00BD               2560m         LEA     OLSIZE, A1     
00001FC8  103C 000E               2561m         MOVE.B  #14,D0          
00001FCC  4E4F                    2562m         TRAP    #15
00001FCE                          2563mm         PRINTDNDEST D3
00001FCE  3203                    2564mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001FD0  E949                    2565mm         LSL     #$04, D1
00001FD2  E049                    2566mm         LSR     #$08, D1
00001FD4  EA49                    2567mm         LSR     #$05, D1
00001FD6  43F8 00C1               2568mm         LEA     ODN, A1     
00001FDA  103C 000E               2569mm         MOVE.B  #14,D0          
00001FDE  4E4F                    2570mm         TRAP    #15
00001FE0  103C 0003               2571mm         MOVE.B  #3,D0          
00001FE4  4E4F                    2572mm         TRAP    #15
00001FE6                          2573mm         ENDM
00001FE6  6000 005E               2574m         BRA     COMPLETE_149 
00001FEA                          2575m SRCDNW_149:
00001FEA  4EB9 00002042           2576m         JSR     NEXT_149
00001FF0  0303                    2577m         BTST    D1, D3     
00001FF2  6700 0028               2578m         BEQ     SRCDNB_149
00001FF6  43F8 00B9               2579m         LEA     OWSIZE, A1     
00001FFA  103C 000E               2580m         MOVE.B  #14,D0          
00001FFE  4E4F                    2581m         TRAP    #15
00002000                          2582mm         PRINTDNDEST D3
00002000  3203                    2583mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002002  E949                    2584mm         LSL     #$04, D1
00002004  E049                    2585mm         LSR     #$08, D1
00002006  EA49                    2586mm         LSR     #$05, D1
00002008  43F8 00C1               2587mm         LEA     ODN, A1     
0000200C  103C 000E               2588mm         MOVE.B  #14,D0          
00002010  4E4F                    2589mm         TRAP    #15
00002012  103C 0003               2590mm         MOVE.B  #3,D0          
00002016  4E4F                    2591mm         TRAP    #15
00002018                          2592mm         ENDM
00002018  6000 002C               2593m         BRA     COMPLETE_149 
0000201C                          2594m SRCDNB_149: 
0000201C  43F8 00B5               2595m         LEA     OBSIZE, A1     
00002020  103C 000E               2596m         MOVE.B  #14,D0          
00002024  4E4F                    2597m         TRAP    #15
00002026                          2598mm         PRINTDNDEST D3
00002026  3203                    2599mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002028  E949                    2600mm         LSL     #$04, D1
0000202A  E049                    2601mm         LSR     #$08, D1
0000202C  EA49                    2602mm         LSR     #$05, D1
0000202E  43F8 00C1               2603mm         LEA     ODN, A1     
00002032  103C 000E               2604mm         MOVE.B  #14,D0          
00002036  4E4F                    2605mm         TRAP    #15
00002038  103C 0003               2606mm         MOVE.B  #3,D0          
0000203C  4E4F                    2607mm         TRAP    #15
0000203E                          2608mm         ENDM
0000203E  6000 0006               2609m         BRA     COMPLETE_149 
00002042                          2610m 
00002042                          2611m NEXT_149:
00002042  5301                    2612m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002044  4E75                    2613m         RTS                
00002046                          2614m 
00002046                          2615m COMPLETE_149:  ; OPCODE HAS BEEN VERIFIED
00002046                          2616m         ENDM
00002046  BC3C 0001               2617          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
0000204A  6700 05E0               2618          BEQ     decodeAddDestOp
0000204E                          2619m         printComma
0000204E  43F8 00C9               2620m         LEA     OCOMMA, A1     
00002052  103C 000E               2621m         MOVE.B  #14,D0          
00002056  4E4F                    2622m         TRAP    #15
00002058                          2623m         ENDM
00002058                          2624m         prepareAdrMode  #$0, (A2)
00002058  3C3C 0000               2625m         MOVE.W  #$0, D6      ; INPUT VALUE
0000205C  3212                    2626m         MOVE.W  (A2), D1
0000205E  BC3C 0001               2627m         CMP.B   #$01, D6
00002062  6700 000C               2628m         BEQ     ADRSOURCE_154    
00002066                          2629m ADRDEST_154:
00002066  EF49                    2630m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002068  E049                    2631m         LSR     #$08, D1
0000206A  EA49                    2632m         LSR     #$05, D1
0000206C  6000 000A               2633m         BRA     COMPLETE_154 
00002070                          2634m ADRSOURCE_154:                
00002070  E149                    2635m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002072  E549                    2636m         LSL     #$02, D1
00002074  E049                    2637m         LSR     #$08, D1
00002076  EA49                    2638m         LSR     #$05, D1
00002078                          2639m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
00002078                          2640m         ENDM        
00002078                          2641m         decodeAdrMode   (A2), D1
00002078  3612                    2642m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000207A  3201                    2643m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000207C                          2644m 
0000207C  B23C 0001               2645m         CMP.B   #$01, D1
00002080  6700 0066               2646m         BEQ     ADRREGDIRECT_155    
00002084  B23C 0002               2647m         CMP.B   #$02, D1
00002088  6700 00A0               2648m         BEQ     ADRREGINDIRECT_155  
0000208C  B23C 0003               2649m         CMP.B   #$03, D1
00002090  6700 0102               2650m         BEQ     ADRREGPOSTINC_155  
00002094  B23C 0004               2651m         CMP.B   #$04, D1
00002098  6700 0178               2652m         BEQ     ADRREGPREDEC_155
0000209C  B23C 0007               2653m         CMP.B   #$07, D1
000020A0  6700 01EE               2654m         BEQ     ADRABSOLUTE_155    
000020A4                          2655m         
000020A4                          2656m DATAREGDIRECT_155: 
000020A4  BC3C 0001               2657m         CMP.B   #$01, D6
000020A8  6700 001E               2658m         BEQ     DATAREGDIRECTSRC_155   
000020AC                          2659m DATAREGDIRECTDEST_155: 
000020AC                          2660mm         PRINTDNDEST D3 
000020AC  3203                    2661mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020AE  E949                    2662mm         LSL     #$04, D1
000020B0  E049                    2663mm         LSR     #$08, D1
000020B2  EA49                    2664mm         LSR     #$05, D1
000020B4  43F8 00C1               2665mm         LEA     ODN, A1     
000020B8  103C 000E               2666mm         MOVE.B  #14,D0          
000020BC  4E4F                    2667mm         TRAP    #15
000020BE  103C 0003               2668mm         MOVE.B  #3,D0          
000020C2  4E4F                    2669mm         TRAP    #15
000020C4                          2670mm         ENDM
000020C4  6000 0562               2671m         BRA     COMPLETE_155 
000020C8                          2672m DATAREGDIRECTSRC_155: 
000020C8                          2673mm         PRINTDNSRC D3 
000020C8  4281                    2674mm         CLR.L   D1
000020CA  3203                    2675mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000020CC  E149                    2676mm         LSL     #$08, D1
000020CE  EB49                    2677mm         LSL     #$05, D1
000020D0  E049                    2678mm         LSR     #$08, D1
000020D2  EA49                    2679mm         LSR     #$05, D1
000020D4  43F8 00C1               2680mm         LEA     ODN, A1     
000020D8  103C 000E               2681mm         MOVE.B  #14,D0          
000020DC  4E4F                    2682mm         TRAP    #15
000020DE  103C 0003               2683mm         MOVE.B  #3,D0          
000020E2  4E4F                    2684mm         TRAP    #15
000020E4                          2685mm         ENDM
000020E4  6000 0542               2686m         BRA     COMPLETE_155   
000020E8                          2687m         
000020E8                          2688m ADRREGDIRECT_155: 
000020E8  BC3C 0001               2689m         CMP.B   #$01, D6
000020EC  6700 001E               2690m         BEQ     ADRREGDIRECTSRC_155   
000020F0                          2691m ADRREGDIRECTDEST_155:
000020F0                          2692mm         PRINTANDEST D3
000020F0  3203                    2693mm         MOVE.W  D3, D1
000020F2  E949                    2694mm         LSL     #$04, D1
000020F4  E049                    2695mm         LSR     #$08, D1
000020F6  EA49                    2696mm         LSR     #$05, D1
000020F8  43F8 00C3               2697mm         LEA     OAN, A1     
000020FC  103C 000E               2698mm         MOVE.B  #14,D0          
00002100  4E4F                    2699mm         TRAP    #15
00002102  103C 0003               2700mm         MOVE.B  #3,D0          
00002106  4E4F                    2701mm         TRAP    #15
00002108                          2702mm         ENDM
00002108  6000 051E               2703m         BRA     COMPLETE_155   
0000210C                          2704m ADRREGDIRECTSRC_155:
0000210C                          2705mm         PRINTANSRC D3
0000210C  3203                    2706mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000210E  E149                    2707mm         LSL     #$08, D1
00002110  EB49                    2708mm         LSL     #$05, D1
00002112  E049                    2709mm         LSR     #$08, D1
00002114  EA49                    2710mm         LSR     #$05, D1
00002116  43F8 00C3               2711mm         LEA     OAN, A1     
0000211A  103C 000E               2712mm         MOVE.B  #14,D0          
0000211E  4E4F                    2713mm         TRAP    #15
00002120  103C 0003               2714mm         MOVE.B  #3,D0          
00002124  4E4F                    2715mm         TRAP    #15
00002126                          2716mm         ENDM
00002126  6000 0500               2717m         BRA     COMPLETE_155   
0000212A                          2718m        
0000212A                          2719m ADRREGINDIRECT_155:   
0000212A  BC3C 0001               2720m         CMP.B   #$01, D6
0000212E  6700 0032               2721m         BEQ     ADRREGINDIRECTSRC_155   
00002132                          2722m ADRREGINDIRECTDEST_155:
00002132                          2723mm         PRINTLB
00002132  43F8 00C5               2724mm         LEA     OLB, A1     
00002136  103C 000E               2725mm         MOVE.B  #14,D0          
0000213A  4E4F                    2726mm         TRAP    #15
0000213C                          2727mm         ENDM
0000213C                          2728mm         PRINTANDEST D3  
0000213C  3203                    2729mm         MOVE.W  D3, D1
0000213E  E949                    2730mm         LSL     #$04, D1
00002140  E049                    2731mm         LSR     #$08, D1
00002142  EA49                    2732mm         LSR     #$05, D1
00002144  43F8 00C3               2733mm         LEA     OAN, A1     
00002148  103C 000E               2734mm         MOVE.B  #14,D0          
0000214C  4E4F                    2735mm         TRAP    #15
0000214E  103C 0003               2736mm         MOVE.B  #3,D0          
00002152  4E4F                    2737mm         TRAP    #15
00002154                          2738mm         ENDM
00002154                          2739mm         PRINTRB
00002154  43F8 00C7               2740mm         LEA     ORB, A1     
00002158  103C 000E               2741mm         MOVE.B  #14,D0          
0000215C  4E4F                    2742mm         TRAP    #15
0000215E                          2743mm         ENDM
0000215E  6000 04C8               2744m         BRA     COMPLETE_155     
00002162                          2745m ADRREGINDIRECTSRC_155:   
00002162                          2746mm         PRINTLB
00002162  43F8 00C5               2747mm         LEA     OLB, A1     
00002166  103C 000E               2748mm         MOVE.B  #14,D0          
0000216A  4E4F                    2749mm         TRAP    #15
0000216C                          2750mm         ENDM
0000216C                          2751mm         PRINTANSRC D3  
0000216C  3203                    2752mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000216E  E149                    2753mm         LSL     #$08, D1
00002170  EB49                    2754mm         LSL     #$05, D1
00002172  E049                    2755mm         LSR     #$08, D1
00002174  EA49                    2756mm         LSR     #$05, D1
00002176  43F8 00C3               2757mm         LEA     OAN, A1     
0000217A  103C 000E               2758mm         MOVE.B  #14,D0          
0000217E  4E4F                    2759mm         TRAP    #15
00002180  103C 0003               2760mm         MOVE.B  #3,D0          
00002184  4E4F                    2761mm         TRAP    #15
00002186                          2762mm         ENDM
00002186                          2763mm         PRINTRB
00002186  43F8 00C7               2764mm         LEA     ORB, A1     
0000218A  103C 000E               2765mm         MOVE.B  #14,D0          
0000218E  4E4F                    2766mm         TRAP    #15
00002190                          2767mm         ENDM
00002190  6000 0496               2768m         BRA     COMPLETE_155   
00002194                          2769m         
00002194                          2770m ADRREGPOSTINC_155:   
00002194  BC3C 0001               2771m         CMP.B   #$01, D6
00002198  6700 003C               2772m         BEQ     ADRREGPOSTINCSRC_155   
0000219C                          2773m ADRREGPOSTINCDEST_155: 
0000219C                          2774mm         PRINTLB
0000219C  43F8 00C5               2775mm         LEA     OLB, A1     
000021A0  103C 000E               2776mm         MOVE.B  #14,D0          
000021A4  4E4F                    2777mm         TRAP    #15
000021A6                          2778mm         ENDM
000021A6                          2779mm         PRINTANDEST D3  
000021A6  3203                    2780mm         MOVE.W  D3, D1
000021A8  E949                    2781mm         LSL     #$04, D1
000021AA  E049                    2782mm         LSR     #$08, D1
000021AC  EA49                    2783mm         LSR     #$05, D1
000021AE  43F8 00C3               2784mm         LEA     OAN, A1     
000021B2  103C 000E               2785mm         MOVE.B  #14,D0          
000021B6  4E4F                    2786mm         TRAP    #15
000021B8  103C 0003               2787mm         MOVE.B  #3,D0          
000021BC  4E4F                    2788mm         TRAP    #15
000021BE                          2789mm         ENDM
000021BE                          2790mm         PRINTRB
000021BE  43F8 00C7               2791mm         LEA     ORB, A1     
000021C2  103C 000E               2792mm         MOVE.B  #14,D0          
000021C6  4E4F                    2793mm         TRAP    #15
000021C8                          2794mm         ENDM
000021C8                          2795mm         PRINTPI
000021C8  43F8 00CE               2796mm         LEA     OPSTINC, A1     
000021CC  103C 000E               2797mm         MOVE.B  #14,D0          
000021D0  4E4F                    2798mm         TRAP    #15
000021D2                          2799mm         ENDM
000021D2  6000 0454               2800m         BRA     COMPLETE_155  
000021D6                          2801m ADRREGPOSTINCSRC_155:           
000021D6                          2802mm         PRINTLB
000021D6  43F8 00C5               2803mm         LEA     OLB, A1     
000021DA  103C 000E               2804mm         MOVE.B  #14,D0          
000021DE  4E4F                    2805mm         TRAP    #15
000021E0                          2806mm         ENDM
000021E0                          2807mm         PRINTANSRC D3  
000021E0  3203                    2808mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021E2  E149                    2809mm         LSL     #$08, D1
000021E4  EB49                    2810mm         LSL     #$05, D1
000021E6  E049                    2811mm         LSR     #$08, D1
000021E8  EA49                    2812mm         LSR     #$05, D1
000021EA  43F8 00C3               2813mm         LEA     OAN, A1     
000021EE  103C 000E               2814mm         MOVE.B  #14,D0          
000021F2  4E4F                    2815mm         TRAP    #15
000021F4  103C 0003               2816mm         MOVE.B  #3,D0          
000021F8  4E4F                    2817mm         TRAP    #15
000021FA                          2818mm         ENDM
000021FA                          2819mm         PRINTRB
000021FA  43F8 00C7               2820mm         LEA     ORB, A1     
000021FE  103C 000E               2821mm         MOVE.B  #14,D0          
00002202  4E4F                    2822mm         TRAP    #15
00002204                          2823mm         ENDM
00002204                          2824mm         PRINTPI
00002204  43F8 00CE               2825mm         LEA     OPSTINC, A1     
00002208  103C 000E               2826mm         MOVE.B  #14,D0          
0000220C  4E4F                    2827mm         TRAP    #15
0000220E                          2828mm         ENDM
0000220E  6000 0418               2829m         BRA     COMPLETE_155  
00002212                          2830m ADRREGPREDEC_155: 
00002212  BC3C 0001               2831m         CMP.B   #$01, D6
00002216  6700 003C               2832m         BEQ     ADRREGPREDECSRC_155   
0000221A                          2833m ADRREGPREDECDEST_155:
0000221A                          2834mm         PRINTPD  
0000221A  43F8 00CC               2835mm         LEA     OPREDEC, A1     
0000221E  103C 000E               2836mm         MOVE.B  #14,D0          
00002222  4E4F                    2837mm         TRAP    #15
00002224                          2838mm         ENDM
00002224                          2839mm         PRINTLB
00002224  43F8 00C5               2840mm         LEA     OLB, A1     
00002228  103C 000E               2841mm         MOVE.B  #14,D0          
0000222C  4E4F                    2842mm         TRAP    #15
0000222E                          2843mm         ENDM
0000222E                          2844mm         PRINTANDEST D3  
0000222E  3203                    2845mm         MOVE.W  D3, D1
00002230  E949                    2846mm         LSL     #$04, D1
00002232  E049                    2847mm         LSR     #$08, D1
00002234  EA49                    2848mm         LSR     #$05, D1
00002236  43F8 00C3               2849mm         LEA     OAN, A1     
0000223A  103C 000E               2850mm         MOVE.B  #14,D0          
0000223E  4E4F                    2851mm         TRAP    #15
00002240  103C 0003               2852mm         MOVE.B  #3,D0          
00002244  4E4F                    2853mm         TRAP    #15
00002246                          2854mm         ENDM
00002246                          2855mm         PRINTRB
00002246  43F8 00C7               2856mm         LEA     ORB, A1     
0000224A  103C 000E               2857mm         MOVE.B  #14,D0          
0000224E  4E4F                    2858mm         TRAP    #15
00002250                          2859mm         ENDM
00002250  6000 03D6               2860m         BRA     COMPLETE_155   
00002254                          2861m ADRREGPREDECSRC_155: 
00002254                          2862mm         PRINTPD  
00002254  43F8 00CC               2863mm         LEA     OPREDEC, A1     
00002258  103C 000E               2864mm         MOVE.B  #14,D0          
0000225C  4E4F                    2865mm         TRAP    #15
0000225E                          2866mm         ENDM
0000225E                          2867mm         PRINTLB
0000225E  43F8 00C5               2868mm         LEA     OLB, A1     
00002262  103C 000E               2869mm         MOVE.B  #14,D0          
00002266  4E4F                    2870mm         TRAP    #15
00002268                          2871mm         ENDM
00002268                          2872mm         PRINTANSRC D3  
00002268  3203                    2873mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000226A  E149                    2874mm         LSL     #$08, D1
0000226C  EB49                    2875mm         LSL     #$05, D1
0000226E  E049                    2876mm         LSR     #$08, D1
00002270  EA49                    2877mm         LSR     #$05, D1
00002272  43F8 00C3               2878mm         LEA     OAN, A1     
00002276  103C 000E               2879mm         MOVE.B  #14,D0          
0000227A  4E4F                    2880mm         TRAP    #15
0000227C  103C 0003               2881mm         MOVE.B  #3,D0          
00002280  4E4F                    2882mm         TRAP    #15
00002282                          2883mm         ENDM
00002282                          2884mm         PRINTRB
00002282  43F8 00C7               2885mm         LEA     ORB, A1     
00002286  103C 000E               2886mm         MOVE.B  #14,D0          
0000228A  4E4F                    2887mm         TRAP    #15
0000228C                          2888mm         ENDM
0000228C  6000 039A               2889m         BRA     COMPLETE_155
00002290                          2890m        
00002290                          2891m ADRABSOLUTE_155:
00002290  BC3C 0001               2892m         CMP.B   #$01, D6
00002294  6600 0018               2893m         BNE     ADRABSOLUTEDST_155 
00002298                          2894m         
00002298  3A03                    2895m         MOVE.W  D3, D5
0000229A  0803 0002               2896m         BTST    #2, D3
0000229E  6600 0024               2897m         BNE     ADRIMMEDIATE_155
000022A2  0803 0000               2898m         BTST    #0, D3
000022A6  6600 0270               2899m         BNE     ADRABSOLUTEL_155
000022AA  6000 01DA               2900m         BRA     ADRABSOLUTEW_155
000022AE                          2901m ADRABSOLUTEDST_155:
000022AE  3A03                    2902m         MOVE.W  D3, D5
000022B0  0803 000B               2903m         BTST    #$B, D3
000022B4  6600 000E               2904m         BNE     ADRIMMEDIATE_155
000022B8  0803 0009               2905m         BTST    #$09, D3
000022BC  6600 025A               2906m         BNE     ADRABSOLUTEL_155
000022C0  6000 01C4               2907m         BRA     ADRABSOLUTEW_155
000022C4                          2908m ADRIMMEDIATE_155:
000022C4  BE3C 0001               2909m         CMP.B   #1, D7
000022C8  6700 009E               2910m         BEQ     ADRIMMEDIATEL_155
000022CC                          2911m ADRIMMEDIATEW_155:
000022CC  361A                    2912m         MOVE.W  (A2)+, D3
000022CE                          2913mm         PRINTHASH
000022CE  103C 0006               2914mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022D2  323C 0023               2915mm         MOVE.W  #35, D1     ; AN = SIGN
000022D6  4E4F                    2916mm         TRAP    #15         ; OUTPUT = SIGN
000022D8                          2917mm         ENDM
000022D8                          2918mm         PRINTSIGN
000022D8  103C 0006               2919mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022DC  323C 0024               2920mm         MOVE.W  #36, D1     ; AN = SIGN
000022E0  4E4F                    2921mm         TRAP    #15         ; OUTPUT = SIGN
000022E2                          2922mm         ENDM
000022E2                          2923mm         ADROUT
000022E2  3212                    2924mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000022E4  E049                    2925mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000022E6  E849                    2926mm         LSR.W   #4, D1      
000022E8                          2927mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000022E8  0C01 0009               2928mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000022EC  6E00 000A               2929mmm         BGT     ALPHA_185
000022F0  0601 0030               2930mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000022F4  6000 0006               2931mmm         BRA     DONE_185
000022F8  0601 0037               2932mmm ALPHA_185: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000022FC  4E71                    2933mmm DONE_185: NOP
000022FE                          2934mmm         ENDM
000022FE  4E4F                    2935mm         TRAP    #15         ; EXECUTE OUTPUT
00002300                          2936mm         
00002300  3212                    2937mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002302  E949                    2938mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002304  E049                    2939mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002306  E849                    2940mm         LSR.W   #4, D1      
00002308                          2941mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002308  0C01 0009               2942mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000230C  6E00 000A               2943mmm         BGT     ALPHA_186
00002310  0601 0030               2944mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002314  6000 0006               2945mmm         BRA     DONE_186
00002318  0601 0037               2946mmm ALPHA_186: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000231C  4E71                    2947mmm DONE_186: NOP
0000231E                          2948mmm         ENDM
0000231E  4E4F                    2949mm         TRAP    #15         ; EXECUTE OUTPUT
00002320                          2950mm         
00002320  3212                    2951mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002322  E149                    2952mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002324  E049                    2953mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002326  E849                    2954mm         LSR.W   #4, D1      
00002328                          2955mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002328  0C01 0009               2956mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000232C  6E00 000A               2957mmm         BGT     ALPHA_187
00002330  0601 0030               2958mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002334  6000 0006               2959mmm         BRA     DONE_187
00002338  0601 0037               2960mmm ALPHA_187: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000233C  4E71                    2961mmm DONE_187: NOP
0000233E                          2962mmm         ENDM
0000233E  4E4F                    2963mm         TRAP    #15         ; EXECUTE OUTPUT
00002340                          2964mm         
00002340  3212                    2965mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002342  E149                    2966mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002344  E949                    2967mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002346  E049                    2968mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002348  E849                    2969mm         LSR.W   #4, D1      
0000234A                          2970mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000234A  0C01 0009               2971mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000234E  6E00 000A               2972mmm         BGT     ALPHA_188
00002352  0601 0030               2973mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002356  6000 0006               2974mmm         BRA     DONE_188
0000235A  0601 0037               2975mmm ALPHA_188: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000235E  4E71                    2976mmm DONE_188: NOP
00002360                          2977mmm         ENDM
00002360  4E4F                    2978mm         TRAP    #15         ; EXECUTE OUTPUT       
00002362                          2979mm         ENDM 
00002362  3605                    2980m         MOVE.W  D5, D3
00002364  6000 02C2               2981m         BRA     COMPLETE_155
00002368                          2982m ADRIMMEDIATEL_155:
00002368  361A                    2983m         MOVE.W  (A2)+, D3
0000236A                          2984mm         PRINTHASH
0000236A  103C 0006               2985mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000236E  323C 0023               2986mm         MOVE.W  #35, D1     ; AN = SIGN
00002372  4E4F                    2987mm         TRAP    #15         ; OUTPUT = SIGN
00002374                          2988mm         ENDM
00002374                          2989mm         PRINTSIGN
00002374  103C 0006               2990mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002378  323C 0024               2991mm         MOVE.W  #36, D1     ; AN = SIGN
0000237C  4E4F                    2992mm         TRAP    #15         ; OUTPUT = SIGN
0000237E                          2993mm         ENDM
0000237E                          2994mm         ADROUT 
0000237E  3212                    2995mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002380  E049                    2996mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002382  E849                    2997mm         LSR.W   #4, D1      
00002384                          2998mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002384  0C01 0009               2999mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002388  6E00 000A               3000mmm         BGT     ALPHA_192
0000238C  0601 0030               3001mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002390  6000 0006               3002mmm         BRA     DONE_192
00002394  0601 0037               3003mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002398  4E71                    3004mmm DONE_192: NOP
0000239A                          3005mmm         ENDM
0000239A  4E4F                    3006mm         TRAP    #15         ; EXECUTE OUTPUT
0000239C                          3007mm         
0000239C  3212                    3008mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000239E  E949                    3009mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023A0  E049                    3010mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023A2  E849                    3011mm         LSR.W   #4, D1      
000023A4                          3012mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023A4  0C01 0009               3013mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023A8  6E00 000A               3014mmm         BGT     ALPHA_193
000023AC  0601 0030               3015mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023B0  6000 0006               3016mmm         BRA     DONE_193
000023B4  0601 0037               3017mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023B8  4E71                    3018mmm DONE_193: NOP
000023BA                          3019mmm         ENDM
000023BA  4E4F                    3020mm         TRAP    #15         ; EXECUTE OUTPUT
000023BC                          3021mm         
000023BC  3212                    3022mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023BE  E149                    3023mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023C0  E049                    3024mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023C2  E849                    3025mm         LSR.W   #4, D1      
000023C4                          3026mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023C4  0C01 0009               3027mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023C8  6E00 000A               3028mmm         BGT     ALPHA_194
000023CC  0601 0030               3029mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023D0  6000 0006               3030mmm         BRA     DONE_194
000023D4  0601 0037               3031mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023D8  4E71                    3032mmm DONE_194: NOP
000023DA                          3033mmm         ENDM
000023DA  4E4F                    3034mm         TRAP    #15         ; EXECUTE OUTPUT
000023DC                          3035mm         
000023DC  3212                    3036mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023DE  E149                    3037mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023E0  E949                    3038mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000023E2  E049                    3039mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023E4  E849                    3040mm         LSR.W   #4, D1      
000023E6                          3041mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023E6  0C01 0009               3042mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023EA  6E00 000A               3043mmm         BGT     ALPHA_195
000023EE  0601 0030               3044mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023F2  6000 0006               3045mmm         BRA     DONE_195
000023F6  0601 0037               3046mmm ALPHA_195: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023FA  4E71                    3047mmm DONE_195: NOP
000023FC                          3048mmm         ENDM
000023FC  4E4F                    3049mm         TRAP    #15         ; EXECUTE OUTPUT       
000023FE                          3050mm         ENDM 
000023FE  361A                    3051m         MOVE.W  (A2)+, D3
00002400                          3052mm         ADROUT
00002400  3212                    3053mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002402  E049                    3054mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002404  E849                    3055mm         LSR.W   #4, D1      
00002406                          3056mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002406  0C01 0009               3057mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000240A  6E00 000A               3058mmm         BGT     ALPHA_197
0000240E  0601 0030               3059mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002412  6000 0006               3060mmm         BRA     DONE_197
00002416  0601 0037               3061mmm ALPHA_197: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000241A  4E71                    3062mmm DONE_197: NOP
0000241C                          3063mmm         ENDM
0000241C  4E4F                    3064mm         TRAP    #15         ; EXECUTE OUTPUT
0000241E                          3065mm         
0000241E  3212                    3066mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002420  E949                    3067mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002422  E049                    3068mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002424  E849                    3069mm         LSR.W   #4, D1      
00002426                          3070mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002426  0C01 0009               3071mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000242A  6E00 000A               3072mmm         BGT     ALPHA_198
0000242E  0601 0030               3073mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002432  6000 0006               3074mmm         BRA     DONE_198
00002436  0601 0037               3075mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000243A  4E71                    3076mmm DONE_198: NOP
0000243C                          3077mmm         ENDM
0000243C  4E4F                    3078mm         TRAP    #15         ; EXECUTE OUTPUT
0000243E                          3079mm         
0000243E  3212                    3080mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002440  E149                    3081mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002442  E049                    3082mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002444  E849                    3083mm         LSR.W   #4, D1      
00002446                          3084mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002446  0C01 0009               3085mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000244A  6E00 000A               3086mmm         BGT     ALPHA_199
0000244E  0601 0030               3087mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002452  6000 0006               3088mmm         BRA     DONE_199
00002456  0601 0037               3089mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000245A  4E71                    3090mmm DONE_199: NOP
0000245C                          3091mmm         ENDM
0000245C  4E4F                    3092mm         TRAP    #15         ; EXECUTE OUTPUT
0000245E                          3093mm         
0000245E  3212                    3094mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002460  E149                    3095mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002462  E949                    3096mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002464  E049                    3097mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002466  E849                    3098mm         LSR.W   #4, D1      
00002468                          3099mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002468  0C01 0009               3100mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000246C  6E00 000A               3101mmm         BGT     ALPHA_200
00002470  0601 0030               3102mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002474  6000 0006               3103mmm         BRA     DONE_200
00002478  0601 0037               3104mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000247C  4E71                    3105mmm DONE_200: NOP
0000247E                          3106mmm         ENDM
0000247E  4E4F                    3107mm         TRAP    #15         ; EXECUTE OUTPUT       
00002480                          3108mm         ENDM 
00002480  3605                    3109m         MOVE.W  D5, D3
00002482  6000 01A4               3110m         BRA     COMPLETE_155 
00002486                          3111m ADRABSOLUTEW_155:     
00002486  361A                    3112m         MOVE.W  (A2)+, D3
00002488                          3113mm         PRINTSIGN
00002488  103C 0006               3114mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000248C  323C 0024               3115mm         MOVE.W  #36, D1     ; AN = SIGN
00002490  4E4F                    3116mm         TRAP    #15         ; OUTPUT = SIGN
00002492                          3117mm         ENDM
00002492                          3118mm         ADROUT
00002492  3212                    3119mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002494  E049                    3120mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002496  E849                    3121mm         LSR.W   #4, D1      
00002498                          3122mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002498  0C01 0009               3123mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000249C  6E00 000A               3124mmm         BGT     ALPHA_203
000024A0  0601 0030               3125mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024A4  6000 0006               3126mmm         BRA     DONE_203
000024A8  0601 0037               3127mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024AC  4E71                    3128mmm DONE_203: NOP
000024AE                          3129mmm         ENDM
000024AE  4E4F                    3130mm         TRAP    #15         ; EXECUTE OUTPUT
000024B0                          3131mm         
000024B0  3212                    3132mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024B2  E949                    3133mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024B4  E049                    3134mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024B6  E849                    3135mm         LSR.W   #4, D1      
000024B8                          3136mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024B8  0C01 0009               3137mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024BC  6E00 000A               3138mmm         BGT     ALPHA_204
000024C0  0601 0030               3139mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024C4  6000 0006               3140mmm         BRA     DONE_204
000024C8  0601 0037               3141mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024CC  4E71                    3142mmm DONE_204: NOP
000024CE                          3143mmm         ENDM
000024CE  4E4F                    3144mm         TRAP    #15         ; EXECUTE OUTPUT
000024D0                          3145mm         
000024D0  3212                    3146mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024D2  E149                    3147mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024D4  E049                    3148mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024D6  E849                    3149mm         LSR.W   #4, D1      
000024D8                          3150mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024D8  0C01 0009               3151mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024DC  6E00 000A               3152mmm         BGT     ALPHA_205
000024E0  0601 0030               3153mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024E4  6000 0006               3154mmm         BRA     DONE_205
000024E8  0601 0037               3155mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024EC  4E71                    3156mmm DONE_205: NOP
000024EE                          3157mmm         ENDM
000024EE  4E4F                    3158mm         TRAP    #15         ; EXECUTE OUTPUT
000024F0                          3159mm         
000024F0  3212                    3160mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024F2  E149                    3161mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024F4  E949                    3162mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024F6  E049                    3163mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024F8  E849                    3164mm         LSR.W   #4, D1      
000024FA                          3165mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024FA  0C01 0009               3166mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024FE  6E00 000A               3167mmm         BGT     ALPHA_206
00002502  0601 0030               3168mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002506  6000 0006               3169mmm         BRA     DONE_206
0000250A  0601 0037               3170mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000250E  4E71                    3171mmm DONE_206: NOP
00002510                          3172mmm         ENDM
00002510  4E4F                    3173mm         TRAP    #15         ; EXECUTE OUTPUT       
00002512                          3174mm         ENDM 
00002512  3605                    3175m         MOVE.W  D5, D3
00002514  6000 0112               3176m         BRA     COMPLETE_155  
00002518                          3177m ADRABSOLUTEL_155:  
00002518  361A                    3178m         MOVE.W  (A2)+, D3
0000251A                          3179mm         PRINTSIGN
0000251A  103C 0006               3180mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000251E  323C 0024               3181mm         MOVE.W  #36, D1     ; AN = SIGN
00002522  4E4F                    3182mm         TRAP    #15         ; OUTPUT = SIGN
00002524                          3183mm         ENDM
00002524                          3184mm         ADROUT 
00002524  3212                    3185mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002526  E049                    3186mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002528  E849                    3187mm         LSR.W   #4, D1      
0000252A                          3188mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000252A  0C01 0009               3189mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000252E  6E00 000A               3190mmm         BGT     ALPHA_209
00002532  0601 0030               3191mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002536  6000 0006               3192mmm         BRA     DONE_209
0000253A  0601 0037               3193mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000253E  4E71                    3194mmm DONE_209: NOP
00002540                          3195mmm         ENDM
00002540  4E4F                    3196mm         TRAP    #15         ; EXECUTE OUTPUT
00002542                          3197mm         
00002542  3212                    3198mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002544  E949                    3199mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002546  E049                    3200mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002548  E849                    3201mm         LSR.W   #4, D1      
0000254A                          3202mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000254A  0C01 0009               3203mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000254E  6E00 000A               3204mmm         BGT     ALPHA_210
00002552  0601 0030               3205mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002556  6000 0006               3206mmm         BRA     DONE_210
0000255A  0601 0037               3207mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000255E  4E71                    3208mmm DONE_210: NOP
00002560                          3209mmm         ENDM
00002560  4E4F                    3210mm         TRAP    #15         ; EXECUTE OUTPUT
00002562                          3211mm         
00002562  3212                    3212mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002564  E149                    3213mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002566  E049                    3214mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002568  E849                    3215mm         LSR.W   #4, D1      
0000256A                          3216mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000256A  0C01 0009               3217mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000256E  6E00 000A               3218mmm         BGT     ALPHA_211
00002572  0601 0030               3219mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002576  6000 0006               3220mmm         BRA     DONE_211
0000257A  0601 0037               3221mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000257E  4E71                    3222mmm DONE_211: NOP
00002580                          3223mmm         ENDM
00002580  4E4F                    3224mm         TRAP    #15         ; EXECUTE OUTPUT
00002582                          3225mm         
00002582  3212                    3226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002584  E149                    3227mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002586  E949                    3228mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002588  E049                    3229mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000258A  E849                    3230mm         LSR.W   #4, D1      
0000258C                          3231mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000258C  0C01 0009               3232mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002590  6E00 000A               3233mmm         BGT     ALPHA_212
00002594  0601 0030               3234mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002598  6000 0006               3235mmm         BRA     DONE_212
0000259C  0601 0037               3236mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025A0  4E71                    3237mmm DONE_212: NOP
000025A2                          3238mmm         ENDM
000025A2  4E4F                    3239mm         TRAP    #15         ; EXECUTE OUTPUT       
000025A4                          3240mm         ENDM 
000025A4  361A                    3241m         MOVE.W  (A2)+, D3
000025A6                          3242mm         ADROUT
000025A6  3212                    3243mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A8  E049                    3244mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025AA  E849                    3245mm         LSR.W   #4, D1      
000025AC                          3246mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025AC  0C01 0009               3247mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025B0  6E00 000A               3248mmm         BGT     ALPHA_214
000025B4  0601 0030               3249mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B8  6000 0006               3250mmm         BRA     DONE_214
000025BC  0601 0037               3251mmm ALPHA_214: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025C0  4E71                    3252mmm DONE_214: NOP
000025C2                          3253mmm         ENDM
000025C2  4E4F                    3254mm         TRAP    #15         ; EXECUTE OUTPUT
000025C4                          3255mm         
000025C4  3212                    3256mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025C6  E949                    3257mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025C8  E049                    3258mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025CA  E849                    3259mm         LSR.W   #4, D1      
000025CC                          3260mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025CC  0C01 0009               3261mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025D0  6E00 000A               3262mmm         BGT     ALPHA_215
000025D4  0601 0030               3263mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025D8  6000 0006               3264mmm         BRA     DONE_215
000025DC  0601 0037               3265mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025E0  4E71                    3266mmm DONE_215: NOP
000025E2                          3267mmm         ENDM
000025E2  4E4F                    3268mm         TRAP    #15         ; EXECUTE OUTPUT
000025E4                          3269mm         
000025E4  3212                    3270mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025E6  E149                    3271mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025E8  E049                    3272mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025EA  E849                    3273mm         LSR.W   #4, D1      
000025EC                          3274mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025EC  0C01 0009               3275mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025F0  6E00 000A               3276mmm         BGT     ALPHA_216
000025F4  0601 0030               3277mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025F8  6000 0006               3278mmm         BRA     DONE_216
000025FC  0601 0037               3279mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002600  4E71                    3280mmm DONE_216: NOP
00002602                          3281mmm         ENDM
00002602  4E4F                    3282mm         TRAP    #15         ; EXECUTE OUTPUT
00002604                          3283mm         
00002604  3212                    3284mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002606  E149                    3285mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002608  E949                    3286mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000260A  E049                    3287mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000260C  E849                    3288mm         LSR.W   #4, D1      
0000260E                          3289mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000260E  0C01 0009               3290mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002612  6E00 000A               3291mmm         BGT     ALPHA_217
00002616  0601 0030               3292mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000261A  6000 0006               3293mmm         BRA     DONE_217
0000261E  0601 0037               3294mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002622  4E71                    3295mmm DONE_217: NOP
00002624                          3296mmm         ENDM
00002624  4E4F                    3297mm         TRAP    #15         ; EXECUTE OUTPUT       
00002626                          3298mm         ENDM 
00002626  3605                    3299m         MOVE.W  D5, D3
00002628                          3300m 
00002628                          3301m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
00002628                          3302m         ENDM
00002628  6000 05F4               3303          BRA     decodeADDcomp
0000262C                          3304  decodeAddDestOp:
0000262C                          3305m         prepareAdrMode  #$1,(A2)
0000262C  3C3C 0001               3306m         MOVE.W  #$1, D6      ; INPUT VALUE
00002630  3212                    3307m         MOVE.W  (A2), D1
00002632  BC3C 0001               3308m         CMP.B   #$01, D6
00002636  6700 000C               3309m         BEQ     ADRSOURCE_218    
0000263A                          3310m ADRDEST_218:
0000263A  EF49                    3311m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000263C  E049                    3312m         LSR     #$08, D1
0000263E  EA49                    3313m         LSR     #$05, D1
00002640  6000 000A               3314m         BRA     COMPLETE_218 
00002644                          3315m ADRSOURCE_218:                
00002644  E149                    3316m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002646  E549                    3317m         LSL     #$02, D1
00002648  E049                    3318m         LSR     #$08, D1
0000264A  EA49                    3319m         LSR     #$05, D1
0000264C                          3320m COMPLETE_218:  ; OPCODE HAS BEEN VERIFIED
0000264C                          3321m         ENDM        
0000264C                          3322m         decodeAdrMode   (A2), D1
0000264C  3612                    3323m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000264E  3201                    3324m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002650                          3325m 
00002650  B23C 0001               3326m         CMP.B   #$01, D1
00002654  6700 0066               3327m         BEQ     ADRREGDIRECT_219    
00002658  B23C 0002               3328m         CMP.B   #$02, D1
0000265C  6700 00A0               3329m         BEQ     ADRREGINDIRECT_219  
00002660  B23C 0003               3330m         CMP.B   #$03, D1
00002664  6700 0102               3331m         BEQ     ADRREGPOSTINC_219  
00002668  B23C 0004               3332m         CMP.B   #$04, D1
0000266C  6700 0178               3333m         BEQ     ADRREGPREDEC_219
00002670  B23C 0007               3334m         CMP.B   #$07, D1
00002674  6700 01EE               3335m         BEQ     ADRABSOLUTE_219    
00002678                          3336m         
00002678                          3337m DATAREGDIRECT_219: 
00002678  BC3C 0001               3338m         CMP.B   #$01, D6
0000267C  6700 001E               3339m         BEQ     DATAREGDIRECTSRC_219   
00002680                          3340m DATAREGDIRECTDEST_219: 
00002680                          3341mm         PRINTDNDEST D3 
00002680  3203                    3342mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002682  E949                    3343mm         LSL     #$04, D1
00002684  E049                    3344mm         LSR     #$08, D1
00002686  EA49                    3345mm         LSR     #$05, D1
00002688  43F8 00C1               3346mm         LEA     ODN, A1     
0000268C  103C 000E               3347mm         MOVE.B  #14,D0          
00002690  4E4F                    3348mm         TRAP    #15
00002692  103C 0003               3349mm         MOVE.B  #3,D0          
00002696  4E4F                    3350mm         TRAP    #15
00002698                          3351mm         ENDM
00002698  6000 0562               3352m         BRA     COMPLETE_219 
0000269C                          3353m DATAREGDIRECTSRC_219: 
0000269C                          3354mm         PRINTDNSRC D3 
0000269C  4281                    3355mm         CLR.L   D1
0000269E  3203                    3356mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026A0  E149                    3357mm         LSL     #$08, D1
000026A2  EB49                    3358mm         LSL     #$05, D1
000026A4  E049                    3359mm         LSR     #$08, D1
000026A6  EA49                    3360mm         LSR     #$05, D1
000026A8  43F8 00C1               3361mm         LEA     ODN, A1     
000026AC  103C 000E               3362mm         MOVE.B  #14,D0          
000026B0  4E4F                    3363mm         TRAP    #15
000026B2  103C 0003               3364mm         MOVE.B  #3,D0          
000026B6  4E4F                    3365mm         TRAP    #15
000026B8                          3366mm         ENDM
000026B8  6000 0542               3367m         BRA     COMPLETE_219   
000026BC                          3368m         
000026BC                          3369m ADRREGDIRECT_219: 
000026BC  BC3C 0001               3370m         CMP.B   #$01, D6
000026C0  6700 001E               3371m         BEQ     ADRREGDIRECTSRC_219   
000026C4                          3372m ADRREGDIRECTDEST_219:
000026C4                          3373mm         PRINTANDEST D3
000026C4  3203                    3374mm         MOVE.W  D3, D1
000026C6  E949                    3375mm         LSL     #$04, D1
000026C8  E049                    3376mm         LSR     #$08, D1
000026CA  EA49                    3377mm         LSR     #$05, D1
000026CC  43F8 00C3               3378mm         LEA     OAN, A1     
000026D0  103C 000E               3379mm         MOVE.B  #14,D0          
000026D4  4E4F                    3380mm         TRAP    #15
000026D6  103C 0003               3381mm         MOVE.B  #3,D0          
000026DA  4E4F                    3382mm         TRAP    #15
000026DC                          3383mm         ENDM
000026DC  6000 051E               3384m         BRA     COMPLETE_219   
000026E0                          3385m ADRREGDIRECTSRC_219:
000026E0                          3386mm         PRINTANSRC D3
000026E0  3203                    3387mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026E2  E149                    3388mm         LSL     #$08, D1
000026E4  EB49                    3389mm         LSL     #$05, D1
000026E6  E049                    3390mm         LSR     #$08, D1
000026E8  EA49                    3391mm         LSR     #$05, D1
000026EA  43F8 00C3               3392mm         LEA     OAN, A1     
000026EE  103C 000E               3393mm         MOVE.B  #14,D0          
000026F2  4E4F                    3394mm         TRAP    #15
000026F4  103C 0003               3395mm         MOVE.B  #3,D0          
000026F8  4E4F                    3396mm         TRAP    #15
000026FA                          3397mm         ENDM
000026FA  6000 0500               3398m         BRA     COMPLETE_219   
000026FE                          3399m        
000026FE                          3400m ADRREGINDIRECT_219:   
000026FE  BC3C 0001               3401m         CMP.B   #$01, D6
00002702  6700 0032               3402m         BEQ     ADRREGINDIRECTSRC_219   
00002706                          3403m ADRREGINDIRECTDEST_219:
00002706                          3404mm         PRINTLB
00002706  43F8 00C5               3405mm         LEA     OLB, A1     
0000270A  103C 000E               3406mm         MOVE.B  #14,D0          
0000270E  4E4F                    3407mm         TRAP    #15
00002710                          3408mm         ENDM
00002710                          3409mm         PRINTANDEST D3  
00002710  3203                    3410mm         MOVE.W  D3, D1
00002712  E949                    3411mm         LSL     #$04, D1
00002714  E049                    3412mm         LSR     #$08, D1
00002716  EA49                    3413mm         LSR     #$05, D1
00002718  43F8 00C3               3414mm         LEA     OAN, A1     
0000271C  103C 000E               3415mm         MOVE.B  #14,D0          
00002720  4E4F                    3416mm         TRAP    #15
00002722  103C 0003               3417mm         MOVE.B  #3,D0          
00002726  4E4F                    3418mm         TRAP    #15
00002728                          3419mm         ENDM
00002728                          3420mm         PRINTRB
00002728  43F8 00C7               3421mm         LEA     ORB, A1     
0000272C  103C 000E               3422mm         MOVE.B  #14,D0          
00002730  4E4F                    3423mm         TRAP    #15
00002732                          3424mm         ENDM
00002732  6000 04C8               3425m         BRA     COMPLETE_219     
00002736                          3426m ADRREGINDIRECTSRC_219:   
00002736                          3427mm         PRINTLB
00002736  43F8 00C5               3428mm         LEA     OLB, A1     
0000273A  103C 000E               3429mm         MOVE.B  #14,D0          
0000273E  4E4F                    3430mm         TRAP    #15
00002740                          3431mm         ENDM
00002740                          3432mm         PRINTANSRC D3  
00002740  3203                    3433mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002742  E149                    3434mm         LSL     #$08, D1
00002744  EB49                    3435mm         LSL     #$05, D1
00002746  E049                    3436mm         LSR     #$08, D1
00002748  EA49                    3437mm         LSR     #$05, D1
0000274A  43F8 00C3               3438mm         LEA     OAN, A1     
0000274E  103C 000E               3439mm         MOVE.B  #14,D0          
00002752  4E4F                    3440mm         TRAP    #15
00002754  103C 0003               3441mm         MOVE.B  #3,D0          
00002758  4E4F                    3442mm         TRAP    #15
0000275A                          3443mm         ENDM
0000275A                          3444mm         PRINTRB
0000275A  43F8 00C7               3445mm         LEA     ORB, A1     
0000275E  103C 000E               3446mm         MOVE.B  #14,D0          
00002762  4E4F                    3447mm         TRAP    #15
00002764                          3448mm         ENDM
00002764  6000 0496               3449m         BRA     COMPLETE_219   
00002768                          3450m         
00002768                          3451m ADRREGPOSTINC_219:   
00002768  BC3C 0001               3452m         CMP.B   #$01, D6
0000276C  6700 003C               3453m         BEQ     ADRREGPOSTINCSRC_219   
00002770                          3454m ADRREGPOSTINCDEST_219: 
00002770                          3455mm         PRINTLB
00002770  43F8 00C5               3456mm         LEA     OLB, A1     
00002774  103C 000E               3457mm         MOVE.B  #14,D0          
00002778  4E4F                    3458mm         TRAP    #15
0000277A                          3459mm         ENDM
0000277A                          3460mm         PRINTANDEST D3  
0000277A  3203                    3461mm         MOVE.W  D3, D1
0000277C  E949                    3462mm         LSL     #$04, D1
0000277E  E049                    3463mm         LSR     #$08, D1
00002780  EA49                    3464mm         LSR     #$05, D1
00002782  43F8 00C3               3465mm         LEA     OAN, A1     
00002786  103C 000E               3466mm         MOVE.B  #14,D0          
0000278A  4E4F                    3467mm         TRAP    #15
0000278C  103C 0003               3468mm         MOVE.B  #3,D0          
00002790  4E4F                    3469mm         TRAP    #15
00002792                          3470mm         ENDM
00002792                          3471mm         PRINTRB
00002792  43F8 00C7               3472mm         LEA     ORB, A1     
00002796  103C 000E               3473mm         MOVE.B  #14,D0          
0000279A  4E4F                    3474mm         TRAP    #15
0000279C                          3475mm         ENDM
0000279C                          3476mm         PRINTPI
0000279C  43F8 00CE               3477mm         LEA     OPSTINC, A1     
000027A0  103C 000E               3478mm         MOVE.B  #14,D0          
000027A4  4E4F                    3479mm         TRAP    #15
000027A6                          3480mm         ENDM
000027A6  6000 0454               3481m         BRA     COMPLETE_219  
000027AA                          3482m ADRREGPOSTINCSRC_219:           
000027AA                          3483mm         PRINTLB
000027AA  43F8 00C5               3484mm         LEA     OLB, A1     
000027AE  103C 000E               3485mm         MOVE.B  #14,D0          
000027B2  4E4F                    3486mm         TRAP    #15
000027B4                          3487mm         ENDM
000027B4                          3488mm         PRINTANSRC D3  
000027B4  3203                    3489mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027B6  E149                    3490mm         LSL     #$08, D1
000027B8  EB49                    3491mm         LSL     #$05, D1
000027BA  E049                    3492mm         LSR     #$08, D1
000027BC  EA49                    3493mm         LSR     #$05, D1
000027BE  43F8 00C3               3494mm         LEA     OAN, A1     
000027C2  103C 000E               3495mm         MOVE.B  #14,D0          
000027C6  4E4F                    3496mm         TRAP    #15
000027C8  103C 0003               3497mm         MOVE.B  #3,D0          
000027CC  4E4F                    3498mm         TRAP    #15
000027CE                          3499mm         ENDM
000027CE                          3500mm         PRINTRB
000027CE  43F8 00C7               3501mm         LEA     ORB, A1     
000027D2  103C 000E               3502mm         MOVE.B  #14,D0          
000027D6  4E4F                    3503mm         TRAP    #15
000027D8                          3504mm         ENDM
000027D8                          3505mm         PRINTPI
000027D8  43F8 00CE               3506mm         LEA     OPSTINC, A1     
000027DC  103C 000E               3507mm         MOVE.B  #14,D0          
000027E0  4E4F                    3508mm         TRAP    #15
000027E2                          3509mm         ENDM
000027E2  6000 0418               3510m         BRA     COMPLETE_219  
000027E6                          3511m ADRREGPREDEC_219: 
000027E6  BC3C 0001               3512m         CMP.B   #$01, D6
000027EA  6700 003C               3513m         BEQ     ADRREGPREDECSRC_219   
000027EE                          3514m ADRREGPREDECDEST_219:
000027EE                          3515mm         PRINTPD  
000027EE  43F8 00CC               3516mm         LEA     OPREDEC, A1     
000027F2  103C 000E               3517mm         MOVE.B  #14,D0          
000027F6  4E4F                    3518mm         TRAP    #15
000027F8                          3519mm         ENDM
000027F8                          3520mm         PRINTLB
000027F8  43F8 00C5               3521mm         LEA     OLB, A1     
000027FC  103C 000E               3522mm         MOVE.B  #14,D0          
00002800  4E4F                    3523mm         TRAP    #15
00002802                          3524mm         ENDM
00002802                          3525mm         PRINTANDEST D3  
00002802  3203                    3526mm         MOVE.W  D3, D1
00002804  E949                    3527mm         LSL     #$04, D1
00002806  E049                    3528mm         LSR     #$08, D1
00002808  EA49                    3529mm         LSR     #$05, D1
0000280A  43F8 00C3               3530mm         LEA     OAN, A1     
0000280E  103C 000E               3531mm         MOVE.B  #14,D0          
00002812  4E4F                    3532mm         TRAP    #15
00002814  103C 0003               3533mm         MOVE.B  #3,D0          
00002818  4E4F                    3534mm         TRAP    #15
0000281A                          3535mm         ENDM
0000281A                          3536mm         PRINTRB
0000281A  43F8 00C7               3537mm         LEA     ORB, A1     
0000281E  103C 000E               3538mm         MOVE.B  #14,D0          
00002822  4E4F                    3539mm         TRAP    #15
00002824                          3540mm         ENDM
00002824  6000 03D6               3541m         BRA     COMPLETE_219   
00002828                          3542m ADRREGPREDECSRC_219: 
00002828                          3543mm         PRINTPD  
00002828  43F8 00CC               3544mm         LEA     OPREDEC, A1     
0000282C  103C 000E               3545mm         MOVE.B  #14,D0          
00002830  4E4F                    3546mm         TRAP    #15
00002832                          3547mm         ENDM
00002832                          3548mm         PRINTLB
00002832  43F8 00C5               3549mm         LEA     OLB, A1     
00002836  103C 000E               3550mm         MOVE.B  #14,D0          
0000283A  4E4F                    3551mm         TRAP    #15
0000283C                          3552mm         ENDM
0000283C                          3553mm         PRINTANSRC D3  
0000283C  3203                    3554mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000283E  E149                    3555mm         LSL     #$08, D1
00002840  EB49                    3556mm         LSL     #$05, D1
00002842  E049                    3557mm         LSR     #$08, D1
00002844  EA49                    3558mm         LSR     #$05, D1
00002846  43F8 00C3               3559mm         LEA     OAN, A1     
0000284A  103C 000E               3560mm         MOVE.B  #14,D0          
0000284E  4E4F                    3561mm         TRAP    #15
00002850  103C 0003               3562mm         MOVE.B  #3,D0          
00002854  4E4F                    3563mm         TRAP    #15
00002856                          3564mm         ENDM
00002856                          3565mm         PRINTRB
00002856  43F8 00C7               3566mm         LEA     ORB, A1     
0000285A  103C 000E               3567mm         MOVE.B  #14,D0          
0000285E  4E4F                    3568mm         TRAP    #15
00002860                          3569mm         ENDM
00002860  6000 039A               3570m         BRA     COMPLETE_219
00002864                          3571m        
00002864                          3572m ADRABSOLUTE_219:
00002864  BC3C 0001               3573m         CMP.B   #$01, D6
00002868  6600 0018               3574m         BNE     ADRABSOLUTEDST_219 
0000286C                          3575m         
0000286C  3A03                    3576m         MOVE.W  D3, D5
0000286E  0803 0002               3577m         BTST    #2, D3
00002872  6600 0024               3578m         BNE     ADRIMMEDIATE_219
00002876  0803 0000               3579m         BTST    #0, D3
0000287A  6600 0270               3580m         BNE     ADRABSOLUTEL_219
0000287E  6000 01DA               3581m         BRA     ADRABSOLUTEW_219
00002882                          3582m ADRABSOLUTEDST_219:
00002882  3A03                    3583m         MOVE.W  D3, D5
00002884  0803 000B               3584m         BTST    #$B, D3
00002888  6600 000E               3585m         BNE     ADRIMMEDIATE_219
0000288C  0803 0009               3586m         BTST    #$09, D3
00002890  6600 025A               3587m         BNE     ADRABSOLUTEL_219
00002894  6000 01C4               3588m         BRA     ADRABSOLUTEW_219
00002898                          3589m ADRIMMEDIATE_219:
00002898  BE3C 0001               3590m         CMP.B   #1, D7
0000289C  6700 009E               3591m         BEQ     ADRIMMEDIATEL_219
000028A0                          3592m ADRIMMEDIATEW_219:
000028A0  361A                    3593m         MOVE.W  (A2)+, D3
000028A2                          3594mm         PRINTHASH
000028A2  103C 0006               3595mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028A6  323C 0023               3596mm         MOVE.W  #35, D1     ; AN = SIGN
000028AA  4E4F                    3597mm         TRAP    #15         ; OUTPUT = SIGN
000028AC                          3598mm         ENDM
000028AC                          3599mm         PRINTSIGN
000028AC  103C 0006               3600mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028B0  323C 0024               3601mm         MOVE.W  #36, D1     ; AN = SIGN
000028B4  4E4F                    3602mm         TRAP    #15         ; OUTPUT = SIGN
000028B6                          3603mm         ENDM
000028B6                          3604mm         ADROUT
000028B6  3212                    3605mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028B8  E049                    3606mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028BA  E849                    3607mm         LSR.W   #4, D1      
000028BC                          3608mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028BC  0C01 0009               3609mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028C0  6E00 000A               3610mmm         BGT     ALPHA_249
000028C4  0601 0030               3611mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028C8  6000 0006               3612mmm         BRA     DONE_249
000028CC  0601 0037               3613mmm ALPHA_249: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028D0  4E71                    3614mmm DONE_249: NOP
000028D2                          3615mmm         ENDM
000028D2  4E4F                    3616mm         TRAP    #15         ; EXECUTE OUTPUT
000028D4                          3617mm         
000028D4  3212                    3618mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028D6  E949                    3619mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000028D8  E049                    3620mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028DA  E849                    3621mm         LSR.W   #4, D1      
000028DC                          3622mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028DC  0C01 0009               3623mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028E0  6E00 000A               3624mmm         BGT     ALPHA_250
000028E4  0601 0030               3625mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028E8  6000 0006               3626mmm         BRA     DONE_250
000028EC  0601 0037               3627mmm ALPHA_250: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028F0  4E71                    3628mmm DONE_250: NOP
000028F2                          3629mmm         ENDM
000028F2  4E4F                    3630mm         TRAP    #15         ; EXECUTE OUTPUT
000028F4                          3631mm         
000028F4  3212                    3632mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028F6  E149                    3633mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000028F8  E049                    3634mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028FA  E849                    3635mm         LSR.W   #4, D1      
000028FC                          3636mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028FC  0C01 0009               3637mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002900  6E00 000A               3638mmm         BGT     ALPHA_251
00002904  0601 0030               3639mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002908  6000 0006               3640mmm         BRA     DONE_251
0000290C  0601 0037               3641mmm ALPHA_251: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002910  4E71                    3642mmm DONE_251: NOP
00002912                          3643mmm         ENDM
00002912  4E4F                    3644mm         TRAP    #15         ; EXECUTE OUTPUT
00002914                          3645mm         
00002914  3212                    3646mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002916  E149                    3647mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002918  E949                    3648mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000291A  E049                    3649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000291C  E849                    3650mm         LSR.W   #4, D1      
0000291E                          3651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000291E  0C01 0009               3652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002922  6E00 000A               3653mmm         BGT     ALPHA_252
00002926  0601 0030               3654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000292A  6000 0006               3655mmm         BRA     DONE_252
0000292E  0601 0037               3656mmm ALPHA_252: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002932  4E71                    3657mmm DONE_252: NOP
00002934                          3658mmm         ENDM
00002934  4E4F                    3659mm         TRAP    #15         ; EXECUTE OUTPUT       
00002936                          3660mm         ENDM 
00002936  3605                    3661m         MOVE.W  D5, D3
00002938  6000 02C2               3662m         BRA     COMPLETE_219
0000293C                          3663m ADRIMMEDIATEL_219:
0000293C  361A                    3664m         MOVE.W  (A2)+, D3
0000293E                          3665mm         PRINTHASH
0000293E  103C 0006               3666mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002942  323C 0023               3667mm         MOVE.W  #35, D1     ; AN = SIGN
00002946  4E4F                    3668mm         TRAP    #15         ; OUTPUT = SIGN
00002948                          3669mm         ENDM
00002948                          3670mm         PRINTSIGN
00002948  103C 0006               3671mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000294C  323C 0024               3672mm         MOVE.W  #36, D1     ; AN = SIGN
00002950  4E4F                    3673mm         TRAP    #15         ; OUTPUT = SIGN
00002952                          3674mm         ENDM
00002952                          3675mm         ADROUT 
00002952  3212                    3676mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002954  E049                    3677mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002956  E849                    3678mm         LSR.W   #4, D1      
00002958                          3679mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002958  0C01 0009               3680mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000295C  6E00 000A               3681mmm         BGT     ALPHA_256
00002960  0601 0030               3682mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002964  6000 0006               3683mmm         BRA     DONE_256
00002968  0601 0037               3684mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000296C  4E71                    3685mmm DONE_256: NOP
0000296E                          3686mmm         ENDM
0000296E  4E4F                    3687mm         TRAP    #15         ; EXECUTE OUTPUT
00002970                          3688mm         
00002970  3212                    3689mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002972  E949                    3690mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002974  E049                    3691mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002976  E849                    3692mm         LSR.W   #4, D1      
00002978                          3693mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002978  0C01 0009               3694mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000297C  6E00 000A               3695mmm         BGT     ALPHA_257
00002980  0601 0030               3696mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002984  6000 0006               3697mmm         BRA     DONE_257
00002988  0601 0037               3698mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000298C  4E71                    3699mmm DONE_257: NOP
0000298E                          3700mmm         ENDM
0000298E  4E4F                    3701mm         TRAP    #15         ; EXECUTE OUTPUT
00002990                          3702mm         
00002990  3212                    3703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002992  E149                    3704mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002994  E049                    3705mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002996  E849                    3706mm         LSR.W   #4, D1      
00002998                          3707mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002998  0C01 0009               3708mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000299C  6E00 000A               3709mmm         BGT     ALPHA_258
000029A0  0601 0030               3710mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029A4  6000 0006               3711mmm         BRA     DONE_258
000029A8  0601 0037               3712mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029AC  4E71                    3713mmm DONE_258: NOP
000029AE                          3714mmm         ENDM
000029AE  4E4F                    3715mm         TRAP    #15         ; EXECUTE OUTPUT
000029B0                          3716mm         
000029B0  3212                    3717mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029B2  E149                    3718mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029B4  E949                    3719mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000029B6  E049                    3720mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029B8  E849                    3721mm         LSR.W   #4, D1      
000029BA                          3722mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029BA  0C01 0009               3723mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029BE  6E00 000A               3724mmm         BGT     ALPHA_259
000029C2  0601 0030               3725mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029C6  6000 0006               3726mmm         BRA     DONE_259
000029CA  0601 0037               3727mmm ALPHA_259: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029CE  4E71                    3728mmm DONE_259: NOP
000029D0                          3729mmm         ENDM
000029D0  4E4F                    3730mm         TRAP    #15         ; EXECUTE OUTPUT       
000029D2                          3731mm         ENDM 
000029D2  361A                    3732m         MOVE.W  (A2)+, D3
000029D4                          3733mm         ADROUT
000029D4  3212                    3734mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029D6  E049                    3735mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029D8  E849                    3736mm         LSR.W   #4, D1      
000029DA                          3737mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029DA  0C01 0009               3738mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029DE  6E00 000A               3739mmm         BGT     ALPHA_261
000029E2  0601 0030               3740mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029E6  6000 0006               3741mmm         BRA     DONE_261
000029EA  0601 0037               3742mmm ALPHA_261: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029EE  4E71                    3743mmm DONE_261: NOP
000029F0                          3744mmm         ENDM
000029F0  4E4F                    3745mm         TRAP    #15         ; EXECUTE OUTPUT
000029F2                          3746mm         
000029F2  3212                    3747mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029F4  E949                    3748mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029F6  E049                    3749mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029F8  E849                    3750mm         LSR.W   #4, D1      
000029FA                          3751mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029FA  0C01 0009               3752mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029FE  6E00 000A               3753mmm         BGT     ALPHA_262
00002A02  0601 0030               3754mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A06  6000 0006               3755mmm         BRA     DONE_262
00002A0A  0601 0037               3756mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A0E  4E71                    3757mmm DONE_262: NOP
00002A10                          3758mmm         ENDM
00002A10  4E4F                    3759mm         TRAP    #15         ; EXECUTE OUTPUT
00002A12                          3760mm         
00002A12  3212                    3761mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A14  E149                    3762mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A16  E049                    3763mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A18  E849                    3764mm         LSR.W   #4, D1      
00002A1A                          3765mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A1A  0C01 0009               3766mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A1E  6E00 000A               3767mmm         BGT     ALPHA_263
00002A22  0601 0030               3768mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A26  6000 0006               3769mmm         BRA     DONE_263
00002A2A  0601 0037               3770mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A2E  4E71                    3771mmm DONE_263: NOP
00002A30                          3772mmm         ENDM
00002A30  4E4F                    3773mm         TRAP    #15         ; EXECUTE OUTPUT
00002A32                          3774mm         
00002A32  3212                    3775mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A34  E149                    3776mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A36  E949                    3777mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A38  E049                    3778mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A3A  E849                    3779mm         LSR.W   #4, D1      
00002A3C                          3780mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A3C  0C01 0009               3781mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A40  6E00 000A               3782mmm         BGT     ALPHA_264
00002A44  0601 0030               3783mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A48  6000 0006               3784mmm         BRA     DONE_264
00002A4C  0601 0037               3785mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A50  4E71                    3786mmm DONE_264: NOP
00002A52                          3787mmm         ENDM
00002A52  4E4F                    3788mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A54                          3789mm         ENDM 
00002A54  3605                    3790m         MOVE.W  D5, D3
00002A56  6000 01A4               3791m         BRA     COMPLETE_219 
00002A5A                          3792m ADRABSOLUTEW_219:     
00002A5A  361A                    3793m         MOVE.W  (A2)+, D3
00002A5C                          3794mm         PRINTSIGN
00002A5C  103C 0006               3795mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A60  323C 0024               3796mm         MOVE.W  #36, D1     ; AN = SIGN
00002A64  4E4F                    3797mm         TRAP    #15         ; OUTPUT = SIGN
00002A66                          3798mm         ENDM
00002A66                          3799mm         ADROUT
00002A66  3212                    3800mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A68  E049                    3801mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A6A  E849                    3802mm         LSR.W   #4, D1      
00002A6C                          3803mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A6C  0C01 0009               3804mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A70  6E00 000A               3805mmm         BGT     ALPHA_267
00002A74  0601 0030               3806mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A78  6000 0006               3807mmm         BRA     DONE_267
00002A7C  0601 0037               3808mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A80  4E71                    3809mmm DONE_267: NOP
00002A82                          3810mmm         ENDM
00002A82  4E4F                    3811mm         TRAP    #15         ; EXECUTE OUTPUT
00002A84                          3812mm         
00002A84  3212                    3813mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A86  E949                    3814mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A88  E049                    3815mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A8A  E849                    3816mm         LSR.W   #4, D1      
00002A8C                          3817mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A8C  0C01 0009               3818mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A90  6E00 000A               3819mmm         BGT     ALPHA_268
00002A94  0601 0030               3820mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A98  6000 0006               3821mmm         BRA     DONE_268
00002A9C  0601 0037               3822mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AA0  4E71                    3823mmm DONE_268: NOP
00002AA2                          3824mmm         ENDM
00002AA2  4E4F                    3825mm         TRAP    #15         ; EXECUTE OUTPUT
00002AA4                          3826mm         
00002AA4  3212                    3827mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AA6  E149                    3828mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AA8  E049                    3829mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AAA  E849                    3830mm         LSR.W   #4, D1      
00002AAC                          3831mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AAC  0C01 0009               3832mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AB0  6E00 000A               3833mmm         BGT     ALPHA_269
00002AB4  0601 0030               3834mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AB8  6000 0006               3835mmm         BRA     DONE_269
00002ABC  0601 0037               3836mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AC0  4E71                    3837mmm DONE_269: NOP
00002AC2                          3838mmm         ENDM
00002AC2  4E4F                    3839mm         TRAP    #15         ; EXECUTE OUTPUT
00002AC4                          3840mm         
00002AC4  3212                    3841mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AC6  E149                    3842mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AC8  E949                    3843mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002ACA  E049                    3844mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002ACC  E849                    3845mm         LSR.W   #4, D1      
00002ACE                          3846mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ACE  0C01 0009               3847mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AD2  6E00 000A               3848mmm         BGT     ALPHA_270
00002AD6  0601 0030               3849mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002ADA  6000 0006               3850mmm         BRA     DONE_270
00002ADE  0601 0037               3851mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AE2  4E71                    3852mmm DONE_270: NOP
00002AE4                          3853mmm         ENDM
00002AE4  4E4F                    3854mm         TRAP    #15         ; EXECUTE OUTPUT       
00002AE6                          3855mm         ENDM 
00002AE6  3605                    3856m         MOVE.W  D5, D3
00002AE8  6000 0112               3857m         BRA     COMPLETE_219  
00002AEC                          3858m ADRABSOLUTEL_219:  
00002AEC  361A                    3859m         MOVE.W  (A2)+, D3
00002AEE                          3860mm         PRINTSIGN
00002AEE  103C 0006               3861mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AF2  323C 0024               3862mm         MOVE.W  #36, D1     ; AN = SIGN
00002AF6  4E4F                    3863mm         TRAP    #15         ; OUTPUT = SIGN
00002AF8                          3864mm         ENDM
00002AF8                          3865mm         ADROUT 
00002AF8  3212                    3866mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AFA  E049                    3867mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AFC  E849                    3868mm         LSR.W   #4, D1      
00002AFE                          3869mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AFE  0C01 0009               3870mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B02  6E00 000A               3871mmm         BGT     ALPHA_273
00002B06  0601 0030               3872mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B0A  6000 0006               3873mmm         BRA     DONE_273
00002B0E  0601 0037               3874mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B12  4E71                    3875mmm DONE_273: NOP
00002B14                          3876mmm         ENDM
00002B14  4E4F                    3877mm         TRAP    #15         ; EXECUTE OUTPUT
00002B16                          3878mm         
00002B16  3212                    3879mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B18  E949                    3880mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B1A  E049                    3881mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1C  E849                    3882mm         LSR.W   #4, D1      
00002B1E                          3883mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1E  0C01 0009               3884mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B22  6E00 000A               3885mmm         BGT     ALPHA_274
00002B26  0601 0030               3886mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B2A  6000 0006               3887mmm         BRA     DONE_274
00002B2E  0601 0037               3888mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B32  4E71                    3889mmm DONE_274: NOP
00002B34                          3890mmm         ENDM
00002B34  4E4F                    3891mm         TRAP    #15         ; EXECUTE OUTPUT
00002B36                          3892mm         
00002B36  3212                    3893mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B38  E149                    3894mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B3A  E049                    3895mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    3896mm         LSR.W   #4, D1      
00002B3E                          3897mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               3898mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               3899mmm         BGT     ALPHA_275
00002B46  0601 0030               3900mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               3901mmm         BRA     DONE_275
00002B4E  0601 0037               3902mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    3903mmm DONE_275: NOP
00002B54                          3904mmm         ENDM
00002B54  4E4F                    3905mm         TRAP    #15         ; EXECUTE OUTPUT
00002B56                          3906mm         
00002B56  3212                    3907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B58  E149                    3908mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B5A  E949                    3909mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B5C  E049                    3910mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B5E  E849                    3911mm         LSR.W   #4, D1      
00002B60                          3912mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B60  0C01 0009               3913mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B64  6E00 000A               3914mmm         BGT     ALPHA_276
00002B68  0601 0030               3915mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B6C  6000 0006               3916mmm         BRA     DONE_276
00002B70  0601 0037               3917mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B74  4E71                    3918mmm DONE_276: NOP
00002B76                          3919mmm         ENDM
00002B76  4E4F                    3920mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B78                          3921mm         ENDM 
00002B78  361A                    3922m         MOVE.W  (A2)+, D3
00002B7A                          3923mm         ADROUT
00002B7A  3212                    3924mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B7C  E049                    3925mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7E  E849                    3926mm         LSR.W   #4, D1      
00002B80                          3927mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B80  0C01 0009               3928mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B84  6E00 000A               3929mmm         BGT     ALPHA_278
00002B88  0601 0030               3930mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B8C  6000 0006               3931mmm         BRA     DONE_278
00002B90  0601 0037               3932mmm ALPHA_278: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B94  4E71                    3933mmm DONE_278: NOP
00002B96                          3934mmm         ENDM
00002B96  4E4F                    3935mm         TRAP    #15         ; EXECUTE OUTPUT
00002B98                          3936mm         
00002B98  3212                    3937mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B9A  E949                    3938mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B9C  E049                    3939mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B9E  E849                    3940mm         LSR.W   #4, D1      
00002BA0                          3941mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BA0  0C01 0009               3942mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BA4  6E00 000A               3943mmm         BGT     ALPHA_279
00002BA8  0601 0030               3944mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BAC  6000 0006               3945mmm         BRA     DONE_279
00002BB0  0601 0037               3946mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BB4  4E71                    3947mmm DONE_279: NOP
00002BB6                          3948mmm         ENDM
00002BB6  4E4F                    3949mm         TRAP    #15         ; EXECUTE OUTPUT
00002BB8                          3950mm         
00002BB8  3212                    3951mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BBA  E149                    3952mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BBC  E049                    3953mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BBE  E849                    3954mm         LSR.W   #4, D1      
00002BC0                          3955mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BC0  0C01 0009               3956mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BC4  6E00 000A               3957mmm         BGT     ALPHA_280
00002BC8  0601 0030               3958mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BCC  6000 0006               3959mmm         BRA     DONE_280
00002BD0  0601 0037               3960mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BD4  4E71                    3961mmm DONE_280: NOP
00002BD6                          3962mmm         ENDM
00002BD6  4E4F                    3963mm         TRAP    #15         ; EXECUTE OUTPUT
00002BD8                          3964mm         
00002BD8  3212                    3965mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BDA  E149                    3966mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BDC  E949                    3967mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BDE  E049                    3968mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BE0  E849                    3969mm         LSR.W   #4, D1      
00002BE2                          3970mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BE2  0C01 0009               3971mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BE6  6E00 000A               3972mmm         BGT     ALPHA_281
00002BEA  0601 0030               3973mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BEE  6000 0006               3974mmm         BRA     DONE_281
00002BF2  0601 0037               3975mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BF6  4E71                    3976mmm DONE_281: NOP
00002BF8                          3977mmm         ENDM
00002BF8  4E4F                    3978mm         TRAP    #15         ; EXECUTE OUTPUT       
00002BFA                          3979mm         ENDM 
00002BFA  3605                    3980m         MOVE.W  D5, D3
00002BFC                          3981m 
00002BFC                          3982m COMPLETE_219:  ; OPCODE HAS BEEN VERIFIED
00002BFC                          3983m         ENDM
00002BFC                          3984m         printComma
00002BFC  43F8 00C9               3985m         LEA     OCOMMA, A1     
00002C00  103C 000E               3986m         MOVE.B  #14,D0          
00002C04  4E4F                    3987m         TRAP    #15
00002C06                          3988m         ENDM
00002C06                          3989m         printDnDest     D3
00002C06  3203                    3990m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002C08  E949                    3991m         LSL     #$04, D1
00002C0A  E049                    3992m         LSR     #$08, D1
00002C0C  EA49                    3993m         LSR     #$05, D1
00002C0E  43F8 00C1               3994m         LEA     ODN, A1     
00002C12  103C 000E               3995m         MOVE.B  #14,D0          
00002C16  4E4F                    3996m         TRAP    #15
00002C18  103C 0003               3997m         MOVE.B  #3,D0          
00002C1C  4E4F                    3998m         TRAP    #15
00002C1E                          3999m         ENDM
00002C1E                          4000  decodeADDcomp:
00002C1E  4E75                    4001          RTS                ; Return from decodeADD subroutine
00002C20                          4002  
00002C20                          4003  
00002C20                          4004  ; ------------------------------------------------------------
00002C20                          4005  ; 5. "decodeSUB" subroutine
00002C20                          4006  ; AUTHOR
00002C20                          4007  ;
00002C20                          4008  ; TODO: DESCRIPTION
00002C20                          4009  ; ------------------------------------------------------------
00002C20                          4010  decodeSUB:
00002C20                          4011m         verifyOpcode    pSUB, (A2)
00002C20  43F8 0118               4012m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002C24  3612                    4013m         MOVE.W  (A2), D3      ; INPUT VALUE
00002C26  123C 000F               4014m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002C2A                          4015m         
00002C2A                          4016m LOOP_284: 
00002C2A  0C11 0030               4017m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002C2E  6700 000E               4018m         BEQ     CHECKFOR0_284
00002C32  0C11 0031               4019m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002C36  6700 0010               4020m         BEQ     CHECKFOR1_284
00002C3A  6000 0012               4021m         BRA     NEXT_284      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002C3E                          4022m         
00002C3E                          4023m CHECKFOR0_284: 
00002C3E  0303                    4024m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002C40  6600 3F42               4025m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002C44  6000 0008               4026m         BRA     NEXT_284
00002C48                          4027m 
00002C48                          4028m CHECKFOR1_284:
00002C48  0303                    4029m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002C4A  6700 3F38               4030m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002C4E                          4031m 
00002C4E                          4032m NEXT_284: 
00002C4E  B23C 0000               4033m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002C52  6700 0008               4034m         BEQ     COMPLETE_284  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002C56  5301                    4035m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002C58  1819                    4036m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002C5A  60CE                    4037m         BRA     LOOP_284      ; BEGIN LOOP AGAIN
00002C5C                          4038m 
00002C5C                          4039m COMPLETE_284:  ; OPCODE HAS BEEN VERIFIED
00002C5C                          4040m         ENDM
00002C5C  43F8 0073               4041          LEA     oSUB, A1     
00002C60  103C 000E               4042          MOVE.B  #14,D0          
00002C64  4E4F                    4043          TRAP    #15
00002C66                          4044m         printOpMode     (A2)
00002C66  3612                    4045m         MOVE.W  (A2), D3      
00002C68  123C 0008               4046m         MOVE.B  #8, D1    
00002C6C  4246                    4047m         CLR     D6
00002C6E                          4048m CHECKFORDESTDN_285: 
00002C6E  0303                    4049m         BTST    D1, D3      
00002C70  6600 0048               4050m         BNE     CHECKFORSRCDN_285
00002C74  4EB9 00002D44           4051m         JSR     NEXT_285
00002C7A  1C3C 0001               4052m         MOVE.B  #$1, D6
00002C7E  0303                    4053m         BTST    D1, D3      
00002C80  6700 0010               4054m         BEQ     DESTDNW_285
00002C84                          4055m DESTDNL_285:        
00002C84  43F8 00BD               4056m         LEA     OLSIZE, A1     
00002C88  103C 000E               4057m         MOVE.B  #14,D0          
00002C8C  4E4F                    4058m         TRAP    #15
00002C8E  6000 00B8               4059m         BRA     COMPLETE_285 
00002C92                          4060m DESTDNW_285: 
00002C92  4EB9 00002D44           4061m         JSR     NEXT_285
00002C98  0303                    4062m         BTST    D1, D3      
00002C9A  6700 0010               4063m         BEQ     DESTDNB_285
00002C9E  43F8 00B9               4064m         LEA     OWSIZE, A1     
00002CA2  103C 000E               4065m         MOVE.B  #14,D0          
00002CA6  4E4F                    4066m         TRAP    #15
00002CA8  6000 009E               4067m         BRA     COMPLETE_285 
00002CAC                          4068m DESTDNB_285: 
00002CAC  43F8 00B5               4069m         LEA     OBSIZE, A1     
00002CB0  103C 000E               4070m         MOVE.B  #14,D0          
00002CB4  4E4F                    4071m         TRAP    #15
00002CB6  6000 0090               4072m         BRA     COMPLETE_285 
00002CBA                          4073m CHECKFORSRCDN_285: 
00002CBA  4EB9 00002D44           4074m         JSR     NEXT_285
00002CC0  0303                    4075m         BTST    D1, D3      
00002CC2  6700 0028               4076m         BEQ     SRCDNW_285
00002CC6                          4077m SRCDNL_285:        
00002CC6  43F8 00BD               4078m         LEA     OLSIZE, A1     
00002CCA  103C 000E               4079m         MOVE.B  #14,D0          
00002CCE  4E4F                    4080m         TRAP    #15
00002CD0                          4081mm         PRINTDNDEST D3
00002CD0  3203                    4082mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002CD2  E949                    4083mm         LSL     #$04, D1
00002CD4  E049                    4084mm         LSR     #$08, D1
00002CD6  EA49                    4085mm         LSR     #$05, D1
00002CD8  43F8 00C1               4086mm         LEA     ODN, A1     
00002CDC  103C 000E               4087mm         MOVE.B  #14,D0          
00002CE0  4E4F                    4088mm         TRAP    #15
00002CE2  103C 0003               4089mm         MOVE.B  #3,D0          
00002CE6  4E4F                    4090mm         TRAP    #15
00002CE8                          4091mm         ENDM
00002CE8  6000 005E               4092m         BRA     COMPLETE_285 
00002CEC                          4093m SRCDNW_285:
00002CEC  4EB9 00002D44           4094m         JSR     NEXT_285
00002CF2  0303                    4095m         BTST    D1, D3     
00002CF4  6700 0028               4096m         BEQ     SRCDNB_285
00002CF8  43F8 00B9               4097m         LEA     OWSIZE, A1     
00002CFC  103C 000E               4098m         MOVE.B  #14,D0          
00002D00  4E4F                    4099m         TRAP    #15
00002D02                          4100mm         PRINTDNDEST D3
00002D02  3203                    4101mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D04  E949                    4102mm         LSL     #$04, D1
00002D06  E049                    4103mm         LSR     #$08, D1
00002D08  EA49                    4104mm         LSR     #$05, D1
00002D0A  43F8 00C1               4105mm         LEA     ODN, A1     
00002D0E  103C 000E               4106mm         MOVE.B  #14,D0          
00002D12  4E4F                    4107mm         TRAP    #15
00002D14  103C 0003               4108mm         MOVE.B  #3,D0          
00002D18  4E4F                    4109mm         TRAP    #15
00002D1A                          4110mm         ENDM
00002D1A  6000 002C               4111m         BRA     COMPLETE_285 
00002D1E                          4112m SRCDNB_285: 
00002D1E  43F8 00B5               4113m         LEA     OBSIZE, A1     
00002D22  103C 000E               4114m         MOVE.B  #14,D0          
00002D26  4E4F                    4115m         TRAP    #15
00002D28                          4116mm         PRINTDNDEST D3
00002D28  3203                    4117mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D2A  E949                    4118mm         LSL     #$04, D1
00002D2C  E049                    4119mm         LSR     #$08, D1
00002D2E  EA49                    4120mm         LSR     #$05, D1
00002D30  43F8 00C1               4121mm         LEA     ODN, A1     
00002D34  103C 000E               4122mm         MOVE.B  #14,D0          
00002D38  4E4F                    4123mm         TRAP    #15
00002D3A  103C 0003               4124mm         MOVE.B  #3,D0          
00002D3E  4E4F                    4125mm         TRAP    #15
00002D40                          4126mm         ENDM
00002D40  6000 0006               4127m         BRA     COMPLETE_285 
00002D44                          4128m 
00002D44                          4129m NEXT_285:
00002D44  5301                    4130m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D46  4E75                    4131m         RTS                
00002D48                          4132m 
00002D48                          4133m COMPLETE_285:  ; OPCODE HAS BEEN VERIFIED
00002D48                          4134m         ENDM
00002D48  BC3C 0001               4135          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002D4C  6700 05E0               4136          BEQ     decodeSubDestOp
00002D50                          4137m         printComma
00002D50  43F8 00C9               4138m         LEA     OCOMMA, A1     
00002D54  103C 000E               4139m         MOVE.B  #14,D0          
00002D58  4E4F                    4140m         TRAP    #15
00002D5A                          4141m         ENDM
00002D5A                          4142m         prepareAdrMode  #$0, (A2)
00002D5A  3C3C 0000               4143m         MOVE.W  #$0, D6      ; INPUT VALUE
00002D5E  3212                    4144m         MOVE.W  (A2), D1
00002D60  BC3C 0001               4145m         CMP.B   #$01, D6
00002D64  6700 000C               4146m         BEQ     ADRSOURCE_290    
00002D68                          4147m ADRDEST_290:
00002D68  EF49                    4148m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002D6A  E049                    4149m         LSR     #$08, D1
00002D6C  EA49                    4150m         LSR     #$05, D1
00002D6E  6000 000A               4151m         BRA     COMPLETE_290 
00002D72                          4152m ADRSOURCE_290:                
00002D72  E149                    4153m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002D74  E549                    4154m         LSL     #$02, D1
00002D76  E049                    4155m         LSR     #$08, D1
00002D78  EA49                    4156m         LSR     #$05, D1
00002D7A                          4157m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D7A                          4158m         ENDM        
00002D7A                          4159m         decodeAdrMode   (A2), D1
00002D7A  3612                    4160m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002D7C  3201                    4161m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002D7E                          4162m 
00002D7E  B23C 0001               4163m         CMP.B   #$01, D1
00002D82  6700 0066               4164m         BEQ     ADRREGDIRECT_291    
00002D86  B23C 0002               4165m         CMP.B   #$02, D1
00002D8A  6700 00A0               4166m         BEQ     ADRREGINDIRECT_291  
00002D8E  B23C 0003               4167m         CMP.B   #$03, D1
00002D92  6700 0102               4168m         BEQ     ADRREGPOSTINC_291  
00002D96  B23C 0004               4169m         CMP.B   #$04, D1
00002D9A  6700 0178               4170m         BEQ     ADRREGPREDEC_291
00002D9E  B23C 0007               4171m         CMP.B   #$07, D1
00002DA2  6700 01EE               4172m         BEQ     ADRABSOLUTE_291    
00002DA6                          4173m         
00002DA6                          4174m DATAREGDIRECT_291: 
00002DA6  BC3C 0001               4175m         CMP.B   #$01, D6
00002DAA  6700 001E               4176m         BEQ     DATAREGDIRECTSRC_291   
00002DAE                          4177m DATAREGDIRECTDEST_291: 
00002DAE                          4178mm         PRINTDNDEST D3 
00002DAE  3203                    4179mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DB0  E949                    4180mm         LSL     #$04, D1
00002DB2  E049                    4181mm         LSR     #$08, D1
00002DB4  EA49                    4182mm         LSR     #$05, D1
00002DB6  43F8 00C1               4183mm         LEA     ODN, A1     
00002DBA  103C 000E               4184mm         MOVE.B  #14,D0          
00002DBE  4E4F                    4185mm         TRAP    #15
00002DC0  103C 0003               4186mm         MOVE.B  #3,D0          
00002DC4  4E4F                    4187mm         TRAP    #15
00002DC6                          4188mm         ENDM
00002DC6  6000 0562               4189m         BRA     COMPLETE_291 
00002DCA                          4190m DATAREGDIRECTSRC_291: 
00002DCA                          4191mm         PRINTDNSRC D3 
00002DCA  4281                    4192mm         CLR.L   D1
00002DCC  3203                    4193mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002DCE  E149                    4194mm         LSL     #$08, D1
00002DD0  EB49                    4195mm         LSL     #$05, D1
00002DD2  E049                    4196mm         LSR     #$08, D1
00002DD4  EA49                    4197mm         LSR     #$05, D1
00002DD6  43F8 00C1               4198mm         LEA     ODN, A1     
00002DDA  103C 000E               4199mm         MOVE.B  #14,D0          
00002DDE  4E4F                    4200mm         TRAP    #15
00002DE0  103C 0003               4201mm         MOVE.B  #3,D0          
00002DE4  4E4F                    4202mm         TRAP    #15
00002DE6                          4203mm         ENDM
00002DE6  6000 0542               4204m         BRA     COMPLETE_291   
00002DEA                          4205m         
00002DEA                          4206m ADRREGDIRECT_291: 
00002DEA  BC3C 0001               4207m         CMP.B   #$01, D6
00002DEE  6700 001E               4208m         BEQ     ADRREGDIRECTSRC_291   
00002DF2                          4209m ADRREGDIRECTDEST_291:
00002DF2                          4210mm         PRINTANDEST D3
00002DF2  3203                    4211mm         MOVE.W  D3, D1
00002DF4  E949                    4212mm         LSL     #$04, D1
00002DF6  E049                    4213mm         LSR     #$08, D1
00002DF8  EA49                    4214mm         LSR     #$05, D1
00002DFA  43F8 00C3               4215mm         LEA     OAN, A1     
00002DFE  103C 000E               4216mm         MOVE.B  #14,D0          
00002E02  4E4F                    4217mm         TRAP    #15
00002E04  103C 0003               4218mm         MOVE.B  #3,D0          
00002E08  4E4F                    4219mm         TRAP    #15
00002E0A                          4220mm         ENDM
00002E0A  6000 051E               4221m         BRA     COMPLETE_291   
00002E0E                          4222m ADRREGDIRECTSRC_291:
00002E0E                          4223mm         PRINTANSRC D3
00002E0E  3203                    4224mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E10  E149                    4225mm         LSL     #$08, D1
00002E12  EB49                    4226mm         LSL     #$05, D1
00002E14  E049                    4227mm         LSR     #$08, D1
00002E16  EA49                    4228mm         LSR     #$05, D1
00002E18  43F8 00C3               4229mm         LEA     OAN, A1     
00002E1C  103C 000E               4230mm         MOVE.B  #14,D0          
00002E20  4E4F                    4231mm         TRAP    #15
00002E22  103C 0003               4232mm         MOVE.B  #3,D0          
00002E26  4E4F                    4233mm         TRAP    #15
00002E28                          4234mm         ENDM
00002E28  6000 0500               4235m         BRA     COMPLETE_291   
00002E2C                          4236m        
00002E2C                          4237m ADRREGINDIRECT_291:   
00002E2C  BC3C 0001               4238m         CMP.B   #$01, D6
00002E30  6700 0032               4239m         BEQ     ADRREGINDIRECTSRC_291   
00002E34                          4240m ADRREGINDIRECTDEST_291:
00002E34                          4241mm         PRINTLB
00002E34  43F8 00C5               4242mm         LEA     OLB, A1     
00002E38  103C 000E               4243mm         MOVE.B  #14,D0          
00002E3C  4E4F                    4244mm         TRAP    #15
00002E3E                          4245mm         ENDM
00002E3E                          4246mm         PRINTANDEST D3  
00002E3E  3203                    4247mm         MOVE.W  D3, D1
00002E40  E949                    4248mm         LSL     #$04, D1
00002E42  E049                    4249mm         LSR     #$08, D1
00002E44  EA49                    4250mm         LSR     #$05, D1
00002E46  43F8 00C3               4251mm         LEA     OAN, A1     
00002E4A  103C 000E               4252mm         MOVE.B  #14,D0          
00002E4E  4E4F                    4253mm         TRAP    #15
00002E50  103C 0003               4254mm         MOVE.B  #3,D0          
00002E54  4E4F                    4255mm         TRAP    #15
00002E56                          4256mm         ENDM
00002E56                          4257mm         PRINTRB
00002E56  43F8 00C7               4258mm         LEA     ORB, A1     
00002E5A  103C 000E               4259mm         MOVE.B  #14,D0          
00002E5E  4E4F                    4260mm         TRAP    #15
00002E60                          4261mm         ENDM
00002E60  6000 04C8               4262m         BRA     COMPLETE_291     
00002E64                          4263m ADRREGINDIRECTSRC_291:   
00002E64                          4264mm         PRINTLB
00002E64  43F8 00C5               4265mm         LEA     OLB, A1     
00002E68  103C 000E               4266mm         MOVE.B  #14,D0          
00002E6C  4E4F                    4267mm         TRAP    #15
00002E6E                          4268mm         ENDM
00002E6E                          4269mm         PRINTANSRC D3  
00002E6E  3203                    4270mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E70  E149                    4271mm         LSL     #$08, D1
00002E72  EB49                    4272mm         LSL     #$05, D1
00002E74  E049                    4273mm         LSR     #$08, D1
00002E76  EA49                    4274mm         LSR     #$05, D1
00002E78  43F8 00C3               4275mm         LEA     OAN, A1     
00002E7C  103C 000E               4276mm         MOVE.B  #14,D0          
00002E80  4E4F                    4277mm         TRAP    #15
00002E82  103C 0003               4278mm         MOVE.B  #3,D0          
00002E86  4E4F                    4279mm         TRAP    #15
00002E88                          4280mm         ENDM
00002E88                          4281mm         PRINTRB
00002E88  43F8 00C7               4282mm         LEA     ORB, A1     
00002E8C  103C 000E               4283mm         MOVE.B  #14,D0          
00002E90  4E4F                    4284mm         TRAP    #15
00002E92                          4285mm         ENDM
00002E92  6000 0496               4286m         BRA     COMPLETE_291   
00002E96                          4287m         
00002E96                          4288m ADRREGPOSTINC_291:   
00002E96  BC3C 0001               4289m         CMP.B   #$01, D6
00002E9A  6700 003C               4290m         BEQ     ADRREGPOSTINCSRC_291   
00002E9E                          4291m ADRREGPOSTINCDEST_291: 
00002E9E                          4292mm         PRINTLB
00002E9E  43F8 00C5               4293mm         LEA     OLB, A1     
00002EA2  103C 000E               4294mm         MOVE.B  #14,D0          
00002EA6  4E4F                    4295mm         TRAP    #15
00002EA8                          4296mm         ENDM
00002EA8                          4297mm         PRINTANDEST D3  
00002EA8  3203                    4298mm         MOVE.W  D3, D1
00002EAA  E949                    4299mm         LSL     #$04, D1
00002EAC  E049                    4300mm         LSR     #$08, D1
00002EAE  EA49                    4301mm         LSR     #$05, D1
00002EB0  43F8 00C3               4302mm         LEA     OAN, A1     
00002EB4  103C 000E               4303mm         MOVE.B  #14,D0          
00002EB8  4E4F                    4304mm         TRAP    #15
00002EBA  103C 0003               4305mm         MOVE.B  #3,D0          
00002EBE  4E4F                    4306mm         TRAP    #15
00002EC0                          4307mm         ENDM
00002EC0                          4308mm         PRINTRB
00002EC0  43F8 00C7               4309mm         LEA     ORB, A1     
00002EC4  103C 000E               4310mm         MOVE.B  #14,D0          
00002EC8  4E4F                    4311mm         TRAP    #15
00002ECA                          4312mm         ENDM
00002ECA                          4313mm         PRINTPI
00002ECA  43F8 00CE               4314mm         LEA     OPSTINC, A1     
00002ECE  103C 000E               4315mm         MOVE.B  #14,D0          
00002ED2  4E4F                    4316mm         TRAP    #15
00002ED4                          4317mm         ENDM
00002ED4  6000 0454               4318m         BRA     COMPLETE_291  
00002ED8                          4319m ADRREGPOSTINCSRC_291:           
00002ED8                          4320mm         PRINTLB
00002ED8  43F8 00C5               4321mm         LEA     OLB, A1     
00002EDC  103C 000E               4322mm         MOVE.B  #14,D0          
00002EE0  4E4F                    4323mm         TRAP    #15
00002EE2                          4324mm         ENDM
00002EE2                          4325mm         PRINTANSRC D3  
00002EE2  3203                    4326mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EE4  E149                    4327mm         LSL     #$08, D1
00002EE6  EB49                    4328mm         LSL     #$05, D1
00002EE8  E049                    4329mm         LSR     #$08, D1
00002EEA  EA49                    4330mm         LSR     #$05, D1
00002EEC  43F8 00C3               4331mm         LEA     OAN, A1     
00002EF0  103C 000E               4332mm         MOVE.B  #14,D0          
00002EF4  4E4F                    4333mm         TRAP    #15
00002EF6  103C 0003               4334mm         MOVE.B  #3,D0          
00002EFA  4E4F                    4335mm         TRAP    #15
00002EFC                          4336mm         ENDM
00002EFC                          4337mm         PRINTRB
00002EFC  43F8 00C7               4338mm         LEA     ORB, A1     
00002F00  103C 000E               4339mm         MOVE.B  #14,D0          
00002F04  4E4F                    4340mm         TRAP    #15
00002F06                          4341mm         ENDM
00002F06                          4342mm         PRINTPI
00002F06  43F8 00CE               4343mm         LEA     OPSTINC, A1     
00002F0A  103C 000E               4344mm         MOVE.B  #14,D0          
00002F0E  4E4F                    4345mm         TRAP    #15
00002F10                          4346mm         ENDM
00002F10  6000 0418               4347m         BRA     COMPLETE_291  
00002F14                          4348m ADRREGPREDEC_291: 
00002F14  BC3C 0001               4349m         CMP.B   #$01, D6
00002F18  6700 003C               4350m         BEQ     ADRREGPREDECSRC_291   
00002F1C                          4351m ADRREGPREDECDEST_291:
00002F1C                          4352mm         PRINTPD  
00002F1C  43F8 00CC               4353mm         LEA     OPREDEC, A1     
00002F20  103C 000E               4354mm         MOVE.B  #14,D0          
00002F24  4E4F                    4355mm         TRAP    #15
00002F26                          4356mm         ENDM
00002F26                          4357mm         PRINTLB
00002F26  43F8 00C5               4358mm         LEA     OLB, A1     
00002F2A  103C 000E               4359mm         MOVE.B  #14,D0          
00002F2E  4E4F                    4360mm         TRAP    #15
00002F30                          4361mm         ENDM
00002F30                          4362mm         PRINTANDEST D3  
00002F30  3203                    4363mm         MOVE.W  D3, D1
00002F32  E949                    4364mm         LSL     #$04, D1
00002F34  E049                    4365mm         LSR     #$08, D1
00002F36  EA49                    4366mm         LSR     #$05, D1
00002F38  43F8 00C3               4367mm         LEA     OAN, A1     
00002F3C  103C 000E               4368mm         MOVE.B  #14,D0          
00002F40  4E4F                    4369mm         TRAP    #15
00002F42  103C 0003               4370mm         MOVE.B  #3,D0          
00002F46  4E4F                    4371mm         TRAP    #15
00002F48                          4372mm         ENDM
00002F48                          4373mm         PRINTRB
00002F48  43F8 00C7               4374mm         LEA     ORB, A1     
00002F4C  103C 000E               4375mm         MOVE.B  #14,D0          
00002F50  4E4F                    4376mm         TRAP    #15
00002F52                          4377mm         ENDM
00002F52  6000 03D6               4378m         BRA     COMPLETE_291   
00002F56                          4379m ADRREGPREDECSRC_291: 
00002F56                          4380mm         PRINTPD  
00002F56  43F8 00CC               4381mm         LEA     OPREDEC, A1     
00002F5A  103C 000E               4382mm         MOVE.B  #14,D0          
00002F5E  4E4F                    4383mm         TRAP    #15
00002F60                          4384mm         ENDM
00002F60                          4385mm         PRINTLB
00002F60  43F8 00C5               4386mm         LEA     OLB, A1     
00002F64  103C 000E               4387mm         MOVE.B  #14,D0          
00002F68  4E4F                    4388mm         TRAP    #15
00002F6A                          4389mm         ENDM
00002F6A                          4390mm         PRINTANSRC D3  
00002F6A  3203                    4391mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F6C  E149                    4392mm         LSL     #$08, D1
00002F6E  EB49                    4393mm         LSL     #$05, D1
00002F70  E049                    4394mm         LSR     #$08, D1
00002F72  EA49                    4395mm         LSR     #$05, D1
00002F74  43F8 00C3               4396mm         LEA     OAN, A1     
00002F78  103C 000E               4397mm         MOVE.B  #14,D0          
00002F7C  4E4F                    4398mm         TRAP    #15
00002F7E  103C 0003               4399mm         MOVE.B  #3,D0          
00002F82  4E4F                    4400mm         TRAP    #15
00002F84                          4401mm         ENDM
00002F84                          4402mm         PRINTRB
00002F84  43F8 00C7               4403mm         LEA     ORB, A1     
00002F88  103C 000E               4404mm         MOVE.B  #14,D0          
00002F8C  4E4F                    4405mm         TRAP    #15
00002F8E                          4406mm         ENDM
00002F8E  6000 039A               4407m         BRA     COMPLETE_291
00002F92                          4408m        
00002F92                          4409m ADRABSOLUTE_291:
00002F92  BC3C 0001               4410m         CMP.B   #$01, D6
00002F96  6600 0018               4411m         BNE     ADRABSOLUTEDST_291 
00002F9A                          4412m         
00002F9A  3A03                    4413m         MOVE.W  D3, D5
00002F9C  0803 0002               4414m         BTST    #2, D3
00002FA0  6600 0024               4415m         BNE     ADRIMMEDIATE_291
00002FA4  0803 0000               4416m         BTST    #0, D3
00002FA8  6600 0270               4417m         BNE     ADRABSOLUTEL_291
00002FAC  6000 01DA               4418m         BRA     ADRABSOLUTEW_291
00002FB0                          4419m ADRABSOLUTEDST_291:
00002FB0  3A03                    4420m         MOVE.W  D3, D5
00002FB2  0803 000B               4421m         BTST    #$B, D3
00002FB6  6600 000E               4422m         BNE     ADRIMMEDIATE_291
00002FBA  0803 0009               4423m         BTST    #$09, D3
00002FBE  6600 025A               4424m         BNE     ADRABSOLUTEL_291
00002FC2  6000 01C4               4425m         BRA     ADRABSOLUTEW_291
00002FC6                          4426m ADRIMMEDIATE_291:
00002FC6  BE3C 0001               4427m         CMP.B   #1, D7
00002FCA  6700 009E               4428m         BEQ     ADRIMMEDIATEL_291
00002FCE                          4429m ADRIMMEDIATEW_291:
00002FCE  361A                    4430m         MOVE.W  (A2)+, D3
00002FD0                          4431mm         PRINTHASH
00002FD0  103C 0006               4432mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FD4  323C 0023               4433mm         MOVE.W  #35, D1     ; AN = SIGN
00002FD8  4E4F                    4434mm         TRAP    #15         ; OUTPUT = SIGN
00002FDA                          4435mm         ENDM
00002FDA                          4436mm         PRINTSIGN
00002FDA  103C 0006               4437mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FDE  323C 0024               4438mm         MOVE.W  #36, D1     ; AN = SIGN
00002FE2  4E4F                    4439mm         TRAP    #15         ; OUTPUT = SIGN
00002FE4                          4440mm         ENDM
00002FE4                          4441mm         ADROUT
00002FE4  3212                    4442mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002FE6  E049                    4443mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002FE8  E849                    4444mm         LSR.W   #4, D1      
00002FEA                          4445mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002FEA  0C01 0009               4446mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002FEE  6E00 000A               4447mmm         BGT     ALPHA_321
00002FF2  0601 0030               4448mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002FF6  6000 0006               4449mmm         BRA     DONE_321
00002FFA  0601 0037               4450mmm ALPHA_321: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002FFE  4E71                    4451mmm DONE_321: NOP
00003000                          4452mmm         ENDM
00003000  4E4F                    4453mm         TRAP    #15         ; EXECUTE OUTPUT
00003002                          4454mm         
00003002  3212                    4455mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003004  E949                    4456mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003006  E049                    4457mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003008  E849                    4458mm         LSR.W   #4, D1      
0000300A                          4459mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000300A  0C01 0009               4460mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000300E  6E00 000A               4461mmm         BGT     ALPHA_322
00003012  0601 0030               4462mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003016  6000 0006               4463mmm         BRA     DONE_322
0000301A  0601 0037               4464mmm ALPHA_322: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000301E  4E71                    4465mmm DONE_322: NOP
00003020                          4466mmm         ENDM
00003020  4E4F                    4467mm         TRAP    #15         ; EXECUTE OUTPUT
00003022                          4468mm         
00003022  3212                    4469mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003024  E149                    4470mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003026  E049                    4471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003028  E849                    4472mm         LSR.W   #4, D1      
0000302A                          4473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000302A  0C01 0009               4474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000302E  6E00 000A               4475mmm         BGT     ALPHA_323
00003032  0601 0030               4476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003036  6000 0006               4477mmm         BRA     DONE_323
0000303A  0601 0037               4478mmm ALPHA_323: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000303E  4E71                    4479mmm DONE_323: NOP
00003040                          4480mmm         ENDM
00003040  4E4F                    4481mm         TRAP    #15         ; EXECUTE OUTPUT
00003042                          4482mm         
00003042  3212                    4483mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003044  E149                    4484mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003046  E949                    4485mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003048  E049                    4486mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000304A  E849                    4487mm         LSR.W   #4, D1      
0000304C                          4488mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000304C  0C01 0009               4489mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003050  6E00 000A               4490mmm         BGT     ALPHA_324
00003054  0601 0030               4491mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003058  6000 0006               4492mmm         BRA     DONE_324
0000305C  0601 0037               4493mmm ALPHA_324: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003060  4E71                    4494mmm DONE_324: NOP
00003062                          4495mmm         ENDM
00003062  4E4F                    4496mm         TRAP    #15         ; EXECUTE OUTPUT       
00003064                          4497mm         ENDM 
00003064  3605                    4498m         MOVE.W  D5, D3
00003066  6000 02C2               4499m         BRA     COMPLETE_291
0000306A                          4500m ADRIMMEDIATEL_291:
0000306A  361A                    4501m         MOVE.W  (A2)+, D3
0000306C                          4502mm         PRINTHASH
0000306C  103C 0006               4503mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003070  323C 0023               4504mm         MOVE.W  #35, D1     ; AN = SIGN
00003074  4E4F                    4505mm         TRAP    #15         ; OUTPUT = SIGN
00003076                          4506mm         ENDM
00003076                          4507mm         PRINTSIGN
00003076  103C 0006               4508mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000307A  323C 0024               4509mm         MOVE.W  #36, D1     ; AN = SIGN
0000307E  4E4F                    4510mm         TRAP    #15         ; OUTPUT = SIGN
00003080                          4511mm         ENDM
00003080                          4512mm         ADROUT 
00003080  3212                    4513mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003082  E049                    4514mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003084  E849                    4515mm         LSR.W   #4, D1      
00003086                          4516mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003086  0C01 0009               4517mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000308A  6E00 000A               4518mmm         BGT     ALPHA_328
0000308E  0601 0030               4519mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003092  6000 0006               4520mmm         BRA     DONE_328
00003096  0601 0037               4521mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000309A  4E71                    4522mmm DONE_328: NOP
0000309C                          4523mmm         ENDM
0000309C  4E4F                    4524mm         TRAP    #15         ; EXECUTE OUTPUT
0000309E                          4525mm         
0000309E  3212                    4526mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030A0  E949                    4527mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000030A2  E049                    4528mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030A4  E849                    4529mm         LSR.W   #4, D1      
000030A6                          4530mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030A6  0C01 0009               4531mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030AA  6E00 000A               4532mmm         BGT     ALPHA_329
000030AE  0601 0030               4533mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030B2  6000 0006               4534mmm         BRA     DONE_329
000030B6  0601 0037               4535mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030BA  4E71                    4536mmm DONE_329: NOP
000030BC                          4537mmm         ENDM
000030BC  4E4F                    4538mm         TRAP    #15         ; EXECUTE OUTPUT
000030BE                          4539mm         
000030BE  3212                    4540mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030C0  E149                    4541mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030C2  E049                    4542mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030C4  E849                    4543mm         LSR.W   #4, D1      
000030C6                          4544mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030C6  0C01 0009               4545mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030CA  6E00 000A               4546mmm         BGT     ALPHA_330
000030CE  0601 0030               4547mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030D2  6000 0006               4548mmm         BRA     DONE_330
000030D6  0601 0037               4549mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030DA  4E71                    4550mmm DONE_330: NOP
000030DC                          4551mmm         ENDM
000030DC  4E4F                    4552mm         TRAP    #15         ; EXECUTE OUTPUT
000030DE                          4553mm         
000030DE  3212                    4554mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030E0  E149                    4555mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030E2  E949                    4556mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000030E4  E049                    4557mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030E6  E849                    4558mm         LSR.W   #4, D1      
000030E8                          4559mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030E8  0C01 0009               4560mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030EC  6E00 000A               4561mmm         BGT     ALPHA_331
000030F0  0601 0030               4562mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030F4  6000 0006               4563mmm         BRA     DONE_331
000030F8  0601 0037               4564mmm ALPHA_331: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030FC  4E71                    4565mmm DONE_331: NOP
000030FE                          4566mmm         ENDM
000030FE  4E4F                    4567mm         TRAP    #15         ; EXECUTE OUTPUT       
00003100                          4568mm         ENDM 
00003100  361A                    4569m         MOVE.W  (A2)+, D3
00003102                          4570mm         ADROUT
00003102  3212                    4571mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003104  E049                    4572mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003106  E849                    4573mm         LSR.W   #4, D1      
00003108                          4574mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003108  0C01 0009               4575mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000310C  6E00 000A               4576mmm         BGT     ALPHA_333
00003110  0601 0030               4577mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003114  6000 0006               4578mmm         BRA     DONE_333
00003118  0601 0037               4579mmm ALPHA_333: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000311C  4E71                    4580mmm DONE_333: NOP
0000311E                          4581mmm         ENDM
0000311E  4E4F                    4582mm         TRAP    #15         ; EXECUTE OUTPUT
00003120                          4583mm         
00003120  3212                    4584mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003122  E949                    4585mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003124  E049                    4586mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003126  E849                    4587mm         LSR.W   #4, D1      
00003128                          4588mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003128  0C01 0009               4589mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312C  6E00 000A               4590mmm         BGT     ALPHA_334
00003130  0601 0030               4591mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003134  6000 0006               4592mmm         BRA     DONE_334
00003138  0601 0037               4593mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313C  4E71                    4594mmm DONE_334: NOP
0000313E                          4595mmm         ENDM
0000313E  4E4F                    4596mm         TRAP    #15         ; EXECUTE OUTPUT
00003140                          4597mm         
00003140  3212                    4598mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003142  E149                    4599mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003144  E049                    4600mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003146  E849                    4601mm         LSR.W   #4, D1      
00003148                          4602mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003148  0C01 0009               4603mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314C  6E00 000A               4604mmm         BGT     ALPHA_335
00003150  0601 0030               4605mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003154  6000 0006               4606mmm         BRA     DONE_335
00003158  0601 0037               4607mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315C  4E71                    4608mmm DONE_335: NOP
0000315E                          4609mmm         ENDM
0000315E  4E4F                    4610mm         TRAP    #15         ; EXECUTE OUTPUT
00003160                          4611mm         
00003160  3212                    4612mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003162  E149                    4613mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003164  E949                    4614mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003166  E049                    4615mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003168  E849                    4616mm         LSR.W   #4, D1      
0000316A                          4617mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000316A  0C01 0009               4618mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316E  6E00 000A               4619mmm         BGT     ALPHA_336
00003172  0601 0030               4620mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003176  6000 0006               4621mmm         BRA     DONE_336
0000317A  0601 0037               4622mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317E  4E71                    4623mmm DONE_336: NOP
00003180                          4624mmm         ENDM
00003180  4E4F                    4625mm         TRAP    #15         ; EXECUTE OUTPUT       
00003182                          4626mm         ENDM 
00003182  3605                    4627m         MOVE.W  D5, D3
00003184  6000 01A4               4628m         BRA     COMPLETE_291 
00003188                          4629m ADRABSOLUTEW_291:     
00003188  361A                    4630m         MOVE.W  (A2)+, D3
0000318A                          4631mm         PRINTSIGN
0000318A  103C 0006               4632mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000318E  323C 0024               4633mm         MOVE.W  #36, D1     ; AN = SIGN
00003192  4E4F                    4634mm         TRAP    #15         ; OUTPUT = SIGN
00003194                          4635mm         ENDM
00003194                          4636mm         ADROUT
00003194  3212                    4637mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003196  E049                    4638mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003198  E849                    4639mm         LSR.W   #4, D1      
0000319A                          4640mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000319A  0C01 0009               4641mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000319E  6E00 000A               4642mmm         BGT     ALPHA_339
000031A2  0601 0030               4643mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031A6  6000 0006               4644mmm         BRA     DONE_339
000031AA  0601 0037               4645mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031AE  4E71                    4646mmm DONE_339: NOP
000031B0                          4647mmm         ENDM
000031B0  4E4F                    4648mm         TRAP    #15         ; EXECUTE OUTPUT
000031B2                          4649mm         
000031B2  3212                    4650mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031B4  E949                    4651mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031B6  E049                    4652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031B8  E849                    4653mm         LSR.W   #4, D1      
000031BA                          4654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031BA  0C01 0009               4655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031BE  6E00 000A               4656mmm         BGT     ALPHA_340
000031C2  0601 0030               4657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031C6  6000 0006               4658mmm         BRA     DONE_340
000031CA  0601 0037               4659mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031CE  4E71                    4660mmm DONE_340: NOP
000031D0                          4661mmm         ENDM
000031D0  4E4F                    4662mm         TRAP    #15         ; EXECUTE OUTPUT
000031D2                          4663mm         
000031D2  3212                    4664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031D4  E149                    4665mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031D6  E049                    4666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031D8  E849                    4667mm         LSR.W   #4, D1      
000031DA                          4668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031DA  0C01 0009               4669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031DE  6E00 000A               4670mmm         BGT     ALPHA_341
000031E2  0601 0030               4671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031E6  6000 0006               4672mmm         BRA     DONE_341
000031EA  0601 0037               4673mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031EE  4E71                    4674mmm DONE_341: NOP
000031F0                          4675mmm         ENDM
000031F0  4E4F                    4676mm         TRAP    #15         ; EXECUTE OUTPUT
000031F2                          4677mm         
000031F2  3212                    4678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031F4  E149                    4679mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031F6  E949                    4680mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000031F8  E049                    4681mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031FA  E849                    4682mm         LSR.W   #4, D1      
000031FC                          4683mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031FC  0C01 0009               4684mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003200  6E00 000A               4685mmm         BGT     ALPHA_342
00003204  0601 0030               4686mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003208  6000 0006               4687mmm         BRA     DONE_342
0000320C  0601 0037               4688mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003210  4E71                    4689mmm DONE_342: NOP
00003212                          4690mmm         ENDM
00003212  4E4F                    4691mm         TRAP    #15         ; EXECUTE OUTPUT       
00003214                          4692mm         ENDM 
00003214  3605                    4693m         MOVE.W  D5, D3
00003216  6000 0112               4694m         BRA     COMPLETE_291  
0000321A                          4695m ADRABSOLUTEL_291:  
0000321A  361A                    4696m         MOVE.W  (A2)+, D3
0000321C                          4697mm         PRINTSIGN
0000321C  103C 0006               4698mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003220  323C 0024               4699mm         MOVE.W  #36, D1     ; AN = SIGN
00003224  4E4F                    4700mm         TRAP    #15         ; OUTPUT = SIGN
00003226                          4701mm         ENDM
00003226                          4702mm         ADROUT 
00003226  3212                    4703mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003228  E049                    4704mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000322A  E849                    4705mm         LSR.W   #4, D1      
0000322C                          4706mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000322C  0C01 0009               4707mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003230  6E00 000A               4708mmm         BGT     ALPHA_345
00003234  0601 0030               4709mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003238  6000 0006               4710mmm         BRA     DONE_345
0000323C  0601 0037               4711mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003240  4E71                    4712mmm DONE_345: NOP
00003242                          4713mmm         ENDM
00003242  4E4F                    4714mm         TRAP    #15         ; EXECUTE OUTPUT
00003244                          4715mm         
00003244  3212                    4716mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003246  E949                    4717mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003248  E049                    4718mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000324A  E849                    4719mm         LSR.W   #4, D1      
0000324C                          4720mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000324C  0C01 0009               4721mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003250  6E00 000A               4722mmm         BGT     ALPHA_346
00003254  0601 0030               4723mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003258  6000 0006               4724mmm         BRA     DONE_346
0000325C  0601 0037               4725mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003260  4E71                    4726mmm DONE_346: NOP
00003262                          4727mmm         ENDM
00003262  4E4F                    4728mm         TRAP    #15         ; EXECUTE OUTPUT
00003264                          4729mm         
00003264  3212                    4730mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003266  E149                    4731mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003268  E049                    4732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000326A  E849                    4733mm         LSR.W   #4, D1      
0000326C                          4734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000326C  0C01 0009               4735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003270  6E00 000A               4736mmm         BGT     ALPHA_347
00003274  0601 0030               4737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003278  6000 0006               4738mmm         BRA     DONE_347
0000327C  0601 0037               4739mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003280  4E71                    4740mmm DONE_347: NOP
00003282                          4741mmm         ENDM
00003282  4E4F                    4742mm         TRAP    #15         ; EXECUTE OUTPUT
00003284                          4743mm         
00003284  3212                    4744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003286  E149                    4745mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003288  E949                    4746mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000328A  E049                    4747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000328C  E849                    4748mm         LSR.W   #4, D1      
0000328E                          4749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000328E  0C01 0009               4750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003292  6E00 000A               4751mmm         BGT     ALPHA_348
00003296  0601 0030               4752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329A  6000 0006               4753mmm         BRA     DONE_348
0000329E  0601 0037               4754mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A2  4E71                    4755mmm DONE_348: NOP
000032A4                          4756mmm         ENDM
000032A4  4E4F                    4757mm         TRAP    #15         ; EXECUTE OUTPUT       
000032A6                          4758mm         ENDM 
000032A6  361A                    4759m         MOVE.W  (A2)+, D3
000032A8                          4760mm         ADROUT
000032A8  3212                    4761mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032AA  E049                    4762mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032AC  E849                    4763mm         LSR.W   #4, D1      
000032AE                          4764mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032AE  0C01 0009               4765mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032B2  6E00 000A               4766mmm         BGT     ALPHA_350
000032B6  0601 0030               4767mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032BA  6000 0006               4768mmm         BRA     DONE_350
000032BE  0601 0037               4769mmm ALPHA_350: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032C2  4E71                    4770mmm DONE_350: NOP
000032C4                          4771mmm         ENDM
000032C4  4E4F                    4772mm         TRAP    #15         ; EXECUTE OUTPUT
000032C6                          4773mm         
000032C6  3212                    4774mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032C8  E949                    4775mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032CA  E049                    4776mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032CC  E849                    4777mm         LSR.W   #4, D1      
000032CE                          4778mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032CE  0C01 0009               4779mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032D2  6E00 000A               4780mmm         BGT     ALPHA_351
000032D6  0601 0030               4781mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032DA  6000 0006               4782mmm         BRA     DONE_351
000032DE  0601 0037               4783mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032E2  4E71                    4784mmm DONE_351: NOP
000032E4                          4785mmm         ENDM
000032E4  4E4F                    4786mm         TRAP    #15         ; EXECUTE OUTPUT
000032E6                          4787mm         
000032E6  3212                    4788mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E8  E149                    4789mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032EA  E049                    4790mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032EC  E849                    4791mm         LSR.W   #4, D1      
000032EE                          4792mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032EE  0C01 0009               4793mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032F2  6E00 000A               4794mmm         BGT     ALPHA_352
000032F6  0601 0030               4795mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032FA  6000 0006               4796mmm         BRA     DONE_352
000032FE  0601 0037               4797mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003302  4E71                    4798mmm DONE_352: NOP
00003304                          4799mmm         ENDM
00003304  4E4F                    4800mm         TRAP    #15         ; EXECUTE OUTPUT
00003306                          4801mm         
00003306  3212                    4802mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003308  E149                    4803mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000330A  E949                    4804mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000330C  E049                    4805mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000330E  E849                    4806mm         LSR.W   #4, D1      
00003310                          4807mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003310  0C01 0009               4808mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003314  6E00 000A               4809mmm         BGT     ALPHA_353
00003318  0601 0030               4810mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000331C  6000 0006               4811mmm         BRA     DONE_353
00003320  0601 0037               4812mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003324  4E71                    4813mmm DONE_353: NOP
00003326                          4814mmm         ENDM
00003326  4E4F                    4815mm         TRAP    #15         ; EXECUTE OUTPUT       
00003328                          4816mm         ENDM 
00003328  3605                    4817m         MOVE.W  D5, D3
0000332A                          4818m 
0000332A                          4819m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
0000332A                          4820m         ENDM
0000332A  6000 05F4               4821          BRA     decodeSUBcomp
0000332E                          4822  decodeSubDestOp:
0000332E                          4823m         prepareAdrMode  #$1,(A2)
0000332E  3C3C 0001               4824m         MOVE.W  #$1, D6      ; INPUT VALUE
00003332  3212                    4825m         MOVE.W  (A2), D1
00003334  BC3C 0001               4826m         CMP.B   #$01, D6
00003338  6700 000C               4827m         BEQ     ADRSOURCE_354    
0000333C                          4828m ADRDEST_354:
0000333C  EF49                    4829m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000333E  E049                    4830m         LSR     #$08, D1
00003340  EA49                    4831m         LSR     #$05, D1
00003342  6000 000A               4832m         BRA     COMPLETE_354 
00003346                          4833m ADRSOURCE_354:                
00003346  E149                    4834m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003348  E549                    4835m         LSL     #$02, D1
0000334A  E049                    4836m         LSR     #$08, D1
0000334C  EA49                    4837m         LSR     #$05, D1
0000334E                          4838m COMPLETE_354:  ; OPCODE HAS BEEN VERIFIED
0000334E                          4839m         ENDM        
0000334E                          4840m         decodeAdrMode   (A2), D1
0000334E  3612                    4841m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003350  3201                    4842m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003352                          4843m 
00003352  B23C 0001               4844m         CMP.B   #$01, D1
00003356  6700 0066               4845m         BEQ     ADRREGDIRECT_355    
0000335A  B23C 0002               4846m         CMP.B   #$02, D1
0000335E  6700 00A0               4847m         BEQ     ADRREGINDIRECT_355  
00003362  B23C 0003               4848m         CMP.B   #$03, D1
00003366  6700 0102               4849m         BEQ     ADRREGPOSTINC_355  
0000336A  B23C 0004               4850m         CMP.B   #$04, D1
0000336E  6700 0178               4851m         BEQ     ADRREGPREDEC_355
00003372  B23C 0007               4852m         CMP.B   #$07, D1
00003376  6700 01EE               4853m         BEQ     ADRABSOLUTE_355    
0000337A                          4854m         
0000337A                          4855m DATAREGDIRECT_355: 
0000337A  BC3C 0001               4856m         CMP.B   #$01, D6
0000337E  6700 001E               4857m         BEQ     DATAREGDIRECTSRC_355   
00003382                          4858m DATAREGDIRECTDEST_355: 
00003382                          4859mm         PRINTDNDEST D3 
00003382  3203                    4860mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003384  E949                    4861mm         LSL     #$04, D1
00003386  E049                    4862mm         LSR     #$08, D1
00003388  EA49                    4863mm         LSR     #$05, D1
0000338A  43F8 00C1               4864mm         LEA     ODN, A1     
0000338E  103C 000E               4865mm         MOVE.B  #14,D0          
00003392  4E4F                    4866mm         TRAP    #15
00003394  103C 0003               4867mm         MOVE.B  #3,D0          
00003398  4E4F                    4868mm         TRAP    #15
0000339A                          4869mm         ENDM
0000339A  6000 0562               4870m         BRA     COMPLETE_355 
0000339E                          4871m DATAREGDIRECTSRC_355: 
0000339E                          4872mm         PRINTDNSRC D3 
0000339E  4281                    4873mm         CLR.L   D1
000033A0  3203                    4874mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033A2  E149                    4875mm         LSL     #$08, D1
000033A4  EB49                    4876mm         LSL     #$05, D1
000033A6  E049                    4877mm         LSR     #$08, D1
000033A8  EA49                    4878mm         LSR     #$05, D1
000033AA  43F8 00C1               4879mm         LEA     ODN, A1     
000033AE  103C 000E               4880mm         MOVE.B  #14,D0          
000033B2  4E4F                    4881mm         TRAP    #15
000033B4  103C 0003               4882mm         MOVE.B  #3,D0          
000033B8  4E4F                    4883mm         TRAP    #15
000033BA                          4884mm         ENDM
000033BA  6000 0542               4885m         BRA     COMPLETE_355   
000033BE                          4886m         
000033BE                          4887m ADRREGDIRECT_355: 
000033BE  BC3C 0001               4888m         CMP.B   #$01, D6
000033C2  6700 001E               4889m         BEQ     ADRREGDIRECTSRC_355   
000033C6                          4890m ADRREGDIRECTDEST_355:
000033C6                          4891mm         PRINTANDEST D3
000033C6  3203                    4892mm         MOVE.W  D3, D1
000033C8  E949                    4893mm         LSL     #$04, D1
000033CA  E049                    4894mm         LSR     #$08, D1
000033CC  EA49                    4895mm         LSR     #$05, D1
000033CE  43F8 00C3               4896mm         LEA     OAN, A1     
000033D2  103C 000E               4897mm         MOVE.B  #14,D0          
000033D6  4E4F                    4898mm         TRAP    #15
000033D8  103C 0003               4899mm         MOVE.B  #3,D0          
000033DC  4E4F                    4900mm         TRAP    #15
000033DE                          4901mm         ENDM
000033DE  6000 051E               4902m         BRA     COMPLETE_355   
000033E2                          4903m ADRREGDIRECTSRC_355:
000033E2                          4904mm         PRINTANSRC D3
000033E2  3203                    4905mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033E4  E149                    4906mm         LSL     #$08, D1
000033E6  EB49                    4907mm         LSL     #$05, D1
000033E8  E049                    4908mm         LSR     #$08, D1
000033EA  EA49                    4909mm         LSR     #$05, D1
000033EC  43F8 00C3               4910mm         LEA     OAN, A1     
000033F0  103C 000E               4911mm         MOVE.B  #14,D0          
000033F4  4E4F                    4912mm         TRAP    #15
000033F6  103C 0003               4913mm         MOVE.B  #3,D0          
000033FA  4E4F                    4914mm         TRAP    #15
000033FC                          4915mm         ENDM
000033FC  6000 0500               4916m         BRA     COMPLETE_355   
00003400                          4917m        
00003400                          4918m ADRREGINDIRECT_355:   
00003400  BC3C 0001               4919m         CMP.B   #$01, D6
00003404  6700 0032               4920m         BEQ     ADRREGINDIRECTSRC_355   
00003408                          4921m ADRREGINDIRECTDEST_355:
00003408                          4922mm         PRINTLB
00003408  43F8 00C5               4923mm         LEA     OLB, A1     
0000340C  103C 000E               4924mm         MOVE.B  #14,D0          
00003410  4E4F                    4925mm         TRAP    #15
00003412                          4926mm         ENDM
00003412                          4927mm         PRINTANDEST D3  
00003412  3203                    4928mm         MOVE.W  D3, D1
00003414  E949                    4929mm         LSL     #$04, D1
00003416  E049                    4930mm         LSR     #$08, D1
00003418  EA49                    4931mm         LSR     #$05, D1
0000341A  43F8 00C3               4932mm         LEA     OAN, A1     
0000341E  103C 000E               4933mm         MOVE.B  #14,D0          
00003422  4E4F                    4934mm         TRAP    #15
00003424  103C 0003               4935mm         MOVE.B  #3,D0          
00003428  4E4F                    4936mm         TRAP    #15
0000342A                          4937mm         ENDM
0000342A                          4938mm         PRINTRB
0000342A  43F8 00C7               4939mm         LEA     ORB, A1     
0000342E  103C 000E               4940mm         MOVE.B  #14,D0          
00003432  4E4F                    4941mm         TRAP    #15
00003434                          4942mm         ENDM
00003434  6000 04C8               4943m         BRA     COMPLETE_355     
00003438                          4944m ADRREGINDIRECTSRC_355:   
00003438                          4945mm         PRINTLB
00003438  43F8 00C5               4946mm         LEA     OLB, A1     
0000343C  103C 000E               4947mm         MOVE.B  #14,D0          
00003440  4E4F                    4948mm         TRAP    #15
00003442                          4949mm         ENDM
00003442                          4950mm         PRINTANSRC D3  
00003442  3203                    4951mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003444  E149                    4952mm         LSL     #$08, D1
00003446  EB49                    4953mm         LSL     #$05, D1
00003448  E049                    4954mm         LSR     #$08, D1
0000344A  EA49                    4955mm         LSR     #$05, D1
0000344C  43F8 00C3               4956mm         LEA     OAN, A1     
00003450  103C 000E               4957mm         MOVE.B  #14,D0          
00003454  4E4F                    4958mm         TRAP    #15
00003456  103C 0003               4959mm         MOVE.B  #3,D0          
0000345A  4E4F                    4960mm         TRAP    #15
0000345C                          4961mm         ENDM
0000345C                          4962mm         PRINTRB
0000345C  43F8 00C7               4963mm         LEA     ORB, A1     
00003460  103C 000E               4964mm         MOVE.B  #14,D0          
00003464  4E4F                    4965mm         TRAP    #15
00003466                          4966mm         ENDM
00003466  6000 0496               4967m         BRA     COMPLETE_355   
0000346A                          4968m         
0000346A                          4969m ADRREGPOSTINC_355:   
0000346A  BC3C 0001               4970m         CMP.B   #$01, D6
0000346E  6700 003C               4971m         BEQ     ADRREGPOSTINCSRC_355   
00003472                          4972m ADRREGPOSTINCDEST_355: 
00003472                          4973mm         PRINTLB
00003472  43F8 00C5               4974mm         LEA     OLB, A1     
00003476  103C 000E               4975mm         MOVE.B  #14,D0          
0000347A  4E4F                    4976mm         TRAP    #15
0000347C                          4977mm         ENDM
0000347C                          4978mm         PRINTANDEST D3  
0000347C  3203                    4979mm         MOVE.W  D3, D1
0000347E  E949                    4980mm         LSL     #$04, D1
00003480  E049                    4981mm         LSR     #$08, D1
00003482  EA49                    4982mm         LSR     #$05, D1
00003484  43F8 00C3               4983mm         LEA     OAN, A1     
00003488  103C 000E               4984mm         MOVE.B  #14,D0          
0000348C  4E4F                    4985mm         TRAP    #15
0000348E  103C 0003               4986mm         MOVE.B  #3,D0          
00003492  4E4F                    4987mm         TRAP    #15
00003494                          4988mm         ENDM
00003494                          4989mm         PRINTRB
00003494  43F8 00C7               4990mm         LEA     ORB, A1     
00003498  103C 000E               4991mm         MOVE.B  #14,D0          
0000349C  4E4F                    4992mm         TRAP    #15
0000349E                          4993mm         ENDM
0000349E                          4994mm         PRINTPI
0000349E  43F8 00CE               4995mm         LEA     OPSTINC, A1     
000034A2  103C 000E               4996mm         MOVE.B  #14,D0          
000034A6  4E4F                    4997mm         TRAP    #15
000034A8                          4998mm         ENDM
000034A8  6000 0454               4999m         BRA     COMPLETE_355  
000034AC                          5000m ADRREGPOSTINCSRC_355:           
000034AC                          5001mm         PRINTLB
000034AC  43F8 00C5               5002mm         LEA     OLB, A1     
000034B0  103C 000E               5003mm         MOVE.B  #14,D0          
000034B4  4E4F                    5004mm         TRAP    #15
000034B6                          5005mm         ENDM
000034B6                          5006mm         PRINTANSRC D3  
000034B6  3203                    5007mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034B8  E149                    5008mm         LSL     #$08, D1
000034BA  EB49                    5009mm         LSL     #$05, D1
000034BC  E049                    5010mm         LSR     #$08, D1
000034BE  EA49                    5011mm         LSR     #$05, D1
000034C0  43F8 00C3               5012mm         LEA     OAN, A1     
000034C4  103C 000E               5013mm         MOVE.B  #14,D0          
000034C8  4E4F                    5014mm         TRAP    #15
000034CA  103C 0003               5015mm         MOVE.B  #3,D0          
000034CE  4E4F                    5016mm         TRAP    #15
000034D0                          5017mm         ENDM
000034D0                          5018mm         PRINTRB
000034D0  43F8 00C7               5019mm         LEA     ORB, A1     
000034D4  103C 000E               5020mm         MOVE.B  #14,D0          
000034D8  4E4F                    5021mm         TRAP    #15
000034DA                          5022mm         ENDM
000034DA                          5023mm         PRINTPI
000034DA  43F8 00CE               5024mm         LEA     OPSTINC, A1     
000034DE  103C 000E               5025mm         MOVE.B  #14,D0          
000034E2  4E4F                    5026mm         TRAP    #15
000034E4                          5027mm         ENDM
000034E4  6000 0418               5028m         BRA     COMPLETE_355  
000034E8                          5029m ADRREGPREDEC_355: 
000034E8  BC3C 0001               5030m         CMP.B   #$01, D6
000034EC  6700 003C               5031m         BEQ     ADRREGPREDECSRC_355   
000034F0                          5032m ADRREGPREDECDEST_355:
000034F0                          5033mm         PRINTPD  
000034F0  43F8 00CC               5034mm         LEA     OPREDEC, A1     
000034F4  103C 000E               5035mm         MOVE.B  #14,D0          
000034F8  4E4F                    5036mm         TRAP    #15
000034FA                          5037mm         ENDM
000034FA                          5038mm         PRINTLB
000034FA  43F8 00C5               5039mm         LEA     OLB, A1     
000034FE  103C 000E               5040mm         MOVE.B  #14,D0          
00003502  4E4F                    5041mm         TRAP    #15
00003504                          5042mm         ENDM
00003504                          5043mm         PRINTANDEST D3  
00003504  3203                    5044mm         MOVE.W  D3, D1
00003506  E949                    5045mm         LSL     #$04, D1
00003508  E049                    5046mm         LSR     #$08, D1
0000350A  EA49                    5047mm         LSR     #$05, D1
0000350C  43F8 00C3               5048mm         LEA     OAN, A1     
00003510  103C 000E               5049mm         MOVE.B  #14,D0          
00003514  4E4F                    5050mm         TRAP    #15
00003516  103C 0003               5051mm         MOVE.B  #3,D0          
0000351A  4E4F                    5052mm         TRAP    #15
0000351C                          5053mm         ENDM
0000351C                          5054mm         PRINTRB
0000351C  43F8 00C7               5055mm         LEA     ORB, A1     
00003520  103C 000E               5056mm         MOVE.B  #14,D0          
00003524  4E4F                    5057mm         TRAP    #15
00003526                          5058mm         ENDM
00003526  6000 03D6               5059m         BRA     COMPLETE_355   
0000352A                          5060m ADRREGPREDECSRC_355: 
0000352A                          5061mm         PRINTPD  
0000352A  43F8 00CC               5062mm         LEA     OPREDEC, A1     
0000352E  103C 000E               5063mm         MOVE.B  #14,D0          
00003532  4E4F                    5064mm         TRAP    #15
00003534                          5065mm         ENDM
00003534                          5066mm         PRINTLB
00003534  43F8 00C5               5067mm         LEA     OLB, A1     
00003538  103C 000E               5068mm         MOVE.B  #14,D0          
0000353C  4E4F                    5069mm         TRAP    #15
0000353E                          5070mm         ENDM
0000353E                          5071mm         PRINTANSRC D3  
0000353E  3203                    5072mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003540  E149                    5073mm         LSL     #$08, D1
00003542  EB49                    5074mm         LSL     #$05, D1
00003544  E049                    5075mm         LSR     #$08, D1
00003546  EA49                    5076mm         LSR     #$05, D1
00003548  43F8 00C3               5077mm         LEA     OAN, A1     
0000354C  103C 000E               5078mm         MOVE.B  #14,D0          
00003550  4E4F                    5079mm         TRAP    #15
00003552  103C 0003               5080mm         MOVE.B  #3,D0          
00003556  4E4F                    5081mm         TRAP    #15
00003558                          5082mm         ENDM
00003558                          5083mm         PRINTRB
00003558  43F8 00C7               5084mm         LEA     ORB, A1     
0000355C  103C 000E               5085mm         MOVE.B  #14,D0          
00003560  4E4F                    5086mm         TRAP    #15
00003562                          5087mm         ENDM
00003562  6000 039A               5088m         BRA     COMPLETE_355
00003566                          5089m        
00003566                          5090m ADRABSOLUTE_355:
00003566  BC3C 0001               5091m         CMP.B   #$01, D6
0000356A  6600 0018               5092m         BNE     ADRABSOLUTEDST_355 
0000356E                          5093m         
0000356E  3A03                    5094m         MOVE.W  D3, D5
00003570  0803 0002               5095m         BTST    #2, D3
00003574  6600 0024               5096m         BNE     ADRIMMEDIATE_355
00003578  0803 0000               5097m         BTST    #0, D3
0000357C  6600 0270               5098m         BNE     ADRABSOLUTEL_355
00003580  6000 01DA               5099m         BRA     ADRABSOLUTEW_355
00003584                          5100m ADRABSOLUTEDST_355:
00003584  3A03                    5101m         MOVE.W  D3, D5
00003586  0803 000B               5102m         BTST    #$B, D3
0000358A  6600 000E               5103m         BNE     ADRIMMEDIATE_355
0000358E  0803 0009               5104m         BTST    #$09, D3
00003592  6600 025A               5105m         BNE     ADRABSOLUTEL_355
00003596  6000 01C4               5106m         BRA     ADRABSOLUTEW_355
0000359A                          5107m ADRIMMEDIATE_355:
0000359A  BE3C 0001               5108m         CMP.B   #1, D7
0000359E  6700 009E               5109m         BEQ     ADRIMMEDIATEL_355
000035A2                          5110m ADRIMMEDIATEW_355:
000035A2  361A                    5111m         MOVE.W  (A2)+, D3
000035A4                          5112mm         PRINTHASH
000035A4  103C 0006               5113mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035A8  323C 0023               5114mm         MOVE.W  #35, D1     ; AN = SIGN
000035AC  4E4F                    5115mm         TRAP    #15         ; OUTPUT = SIGN
000035AE                          5116mm         ENDM
000035AE                          5117mm         PRINTSIGN
000035AE  103C 0006               5118mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035B2  323C 0024               5119mm         MOVE.W  #36, D1     ; AN = SIGN
000035B6  4E4F                    5120mm         TRAP    #15         ; OUTPUT = SIGN
000035B8                          5121mm         ENDM
000035B8                          5122mm         ADROUT
000035B8  3212                    5123mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035BA  E049                    5124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035BC  E849                    5125mm         LSR.W   #4, D1      
000035BE                          5126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035BE  0C01 0009               5127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035C2  6E00 000A               5128mmm         BGT     ALPHA_385
000035C6  0601 0030               5129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035CA  6000 0006               5130mmm         BRA     DONE_385
000035CE  0601 0037               5131mmm ALPHA_385: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035D2  4E71                    5132mmm DONE_385: NOP
000035D4                          5133mmm         ENDM
000035D4  4E4F                    5134mm         TRAP    #15         ; EXECUTE OUTPUT
000035D6                          5135mm         
000035D6  3212                    5136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035D8  E949                    5137mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000035DA  E049                    5138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035DC  E849                    5139mm         LSR.W   #4, D1      
000035DE                          5140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035DE  0C01 0009               5141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035E2  6E00 000A               5142mmm         BGT     ALPHA_386
000035E6  0601 0030               5143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035EA  6000 0006               5144mmm         BRA     DONE_386
000035EE  0601 0037               5145mmm ALPHA_386: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035F2  4E71                    5146mmm DONE_386: NOP
000035F4                          5147mmm         ENDM
000035F4  4E4F                    5148mm         TRAP    #15         ; EXECUTE OUTPUT
000035F6                          5149mm         
000035F6  3212                    5150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035F8  E149                    5151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000035FA  E049                    5152mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035FC  E849                    5153mm         LSR.W   #4, D1      
000035FE                          5154mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035FE  0C01 0009               5155mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003602  6E00 000A               5156mmm         BGT     ALPHA_387
00003606  0601 0030               5157mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000360A  6000 0006               5158mmm         BRA     DONE_387
0000360E  0601 0037               5159mmm ALPHA_387: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003612  4E71                    5160mmm DONE_387: NOP
00003614                          5161mmm         ENDM
00003614  4E4F                    5162mm         TRAP    #15         ; EXECUTE OUTPUT
00003616                          5163mm         
00003616  3212                    5164mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003618  E149                    5165mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000361A  E949                    5166mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000361C  E049                    5167mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000361E  E849                    5168mm         LSR.W   #4, D1      
00003620                          5169mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003620  0C01 0009               5170mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003624  6E00 000A               5171mmm         BGT     ALPHA_388
00003628  0601 0030               5172mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000362C  6000 0006               5173mmm         BRA     DONE_388
00003630  0601 0037               5174mmm ALPHA_388: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003634  4E71                    5175mmm DONE_388: NOP
00003636                          5176mmm         ENDM
00003636  4E4F                    5177mm         TRAP    #15         ; EXECUTE OUTPUT       
00003638                          5178mm         ENDM 
00003638  3605                    5179m         MOVE.W  D5, D3
0000363A  6000 02C2               5180m         BRA     COMPLETE_355
0000363E                          5181m ADRIMMEDIATEL_355:
0000363E  361A                    5182m         MOVE.W  (A2)+, D3
00003640                          5183mm         PRINTHASH
00003640  103C 0006               5184mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003644  323C 0023               5185mm         MOVE.W  #35, D1     ; AN = SIGN
00003648  4E4F                    5186mm         TRAP    #15         ; OUTPUT = SIGN
0000364A                          5187mm         ENDM
0000364A                          5188mm         PRINTSIGN
0000364A  103C 0006               5189mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000364E  323C 0024               5190mm         MOVE.W  #36, D1     ; AN = SIGN
00003652  4E4F                    5191mm         TRAP    #15         ; OUTPUT = SIGN
00003654                          5192mm         ENDM
00003654                          5193mm         ADROUT 
00003654  3212                    5194mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003656  E049                    5195mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003658  E849                    5196mm         LSR.W   #4, D1      
0000365A                          5197mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000365A  0C01 0009               5198mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000365E  6E00 000A               5199mmm         BGT     ALPHA_392
00003662  0601 0030               5200mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003666  6000 0006               5201mmm         BRA     DONE_392
0000366A  0601 0037               5202mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000366E  4E71                    5203mmm DONE_392: NOP
00003670                          5204mmm         ENDM
00003670  4E4F                    5205mm         TRAP    #15         ; EXECUTE OUTPUT
00003672                          5206mm         
00003672  3212                    5207mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003674  E949                    5208mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003676  E049                    5209mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003678  E849                    5210mm         LSR.W   #4, D1      
0000367A                          5211mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000367A  0C01 0009               5212mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000367E  6E00 000A               5213mmm         BGT     ALPHA_393
00003682  0601 0030               5214mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003686  6000 0006               5215mmm         BRA     DONE_393
0000368A  0601 0037               5216mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000368E  4E71                    5217mmm DONE_393: NOP
00003690                          5218mmm         ENDM
00003690  4E4F                    5219mm         TRAP    #15         ; EXECUTE OUTPUT
00003692                          5220mm         
00003692  3212                    5221mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003694  E149                    5222mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003696  E049                    5223mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003698  E849                    5224mm         LSR.W   #4, D1      
0000369A                          5225mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000369A  0C01 0009               5226mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000369E  6E00 000A               5227mmm         BGT     ALPHA_394
000036A2  0601 0030               5228mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036A6  6000 0006               5229mmm         BRA     DONE_394
000036AA  0601 0037               5230mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036AE  4E71                    5231mmm DONE_394: NOP
000036B0                          5232mmm         ENDM
000036B0  4E4F                    5233mm         TRAP    #15         ; EXECUTE OUTPUT
000036B2                          5234mm         
000036B2  3212                    5235mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036B4  E149                    5236mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036B6  E949                    5237mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000036B8  E049                    5238mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036BA  E849                    5239mm         LSR.W   #4, D1      
000036BC                          5240mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036BC  0C01 0009               5241mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036C0  6E00 000A               5242mmm         BGT     ALPHA_395
000036C4  0601 0030               5243mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036C8  6000 0006               5244mmm         BRA     DONE_395
000036CC  0601 0037               5245mmm ALPHA_395: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036D0  4E71                    5246mmm DONE_395: NOP
000036D2                          5247mmm         ENDM
000036D2  4E4F                    5248mm         TRAP    #15         ; EXECUTE OUTPUT       
000036D4                          5249mm         ENDM 
000036D4  361A                    5250m         MOVE.W  (A2)+, D3
000036D6                          5251mm         ADROUT
000036D6  3212                    5252mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036D8  E049                    5253mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036DA  E849                    5254mm         LSR.W   #4, D1      
000036DC                          5255mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036DC  0C01 0009               5256mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036E0  6E00 000A               5257mmm         BGT     ALPHA_397
000036E4  0601 0030               5258mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036E8  6000 0006               5259mmm         BRA     DONE_397
000036EC  0601 0037               5260mmm ALPHA_397: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036F0  4E71                    5261mmm DONE_397: NOP
000036F2                          5262mmm         ENDM
000036F2  4E4F                    5263mm         TRAP    #15         ; EXECUTE OUTPUT
000036F4                          5264mm         
000036F4  3212                    5265mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036F6  E949                    5266mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000036F8  E049                    5267mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036FA  E849                    5268mm         LSR.W   #4, D1      
000036FC                          5269mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036FC  0C01 0009               5270mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003700  6E00 000A               5271mmm         BGT     ALPHA_398
00003704  0601 0030               5272mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003708  6000 0006               5273mmm         BRA     DONE_398
0000370C  0601 0037               5274mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003710  4E71                    5275mmm DONE_398: NOP
00003712                          5276mmm         ENDM
00003712  4E4F                    5277mm         TRAP    #15         ; EXECUTE OUTPUT
00003714                          5278mm         
00003714  3212                    5279mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003716  E149                    5280mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003718  E049                    5281mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000371A  E849                    5282mm         LSR.W   #4, D1      
0000371C                          5283mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000371C  0C01 0009               5284mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003720  6E00 000A               5285mmm         BGT     ALPHA_399
00003724  0601 0030               5286mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003728  6000 0006               5287mmm         BRA     DONE_399
0000372C  0601 0037               5288mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003730  4E71                    5289mmm DONE_399: NOP
00003732                          5290mmm         ENDM
00003732  4E4F                    5291mm         TRAP    #15         ; EXECUTE OUTPUT
00003734                          5292mm         
00003734  3212                    5293mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003736  E149                    5294mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003738  E949                    5295mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000373A  E049                    5296mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000373C  E849                    5297mm         LSR.W   #4, D1      
0000373E                          5298mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000373E  0C01 0009               5299mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003742  6E00 000A               5300mmm         BGT     ALPHA_400
00003746  0601 0030               5301mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000374A  6000 0006               5302mmm         BRA     DONE_400
0000374E  0601 0037               5303mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003752  4E71                    5304mmm DONE_400: NOP
00003754                          5305mmm         ENDM
00003754  4E4F                    5306mm         TRAP    #15         ; EXECUTE OUTPUT       
00003756                          5307mm         ENDM 
00003756  3605                    5308m         MOVE.W  D5, D3
00003758  6000 01A4               5309m         BRA     COMPLETE_355 
0000375C                          5310m ADRABSOLUTEW_355:     
0000375C  361A                    5311m         MOVE.W  (A2)+, D3
0000375E                          5312mm         PRINTSIGN
0000375E  103C 0006               5313mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003762  323C 0024               5314mm         MOVE.W  #36, D1     ; AN = SIGN
00003766  4E4F                    5315mm         TRAP    #15         ; OUTPUT = SIGN
00003768                          5316mm         ENDM
00003768                          5317mm         ADROUT
00003768  3212                    5318mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000376A  E049                    5319mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000376C  E849                    5320mm         LSR.W   #4, D1      
0000376E                          5321mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000376E  0C01 0009               5322mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003772  6E00 000A               5323mmm         BGT     ALPHA_403
00003776  0601 0030               5324mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000377A  6000 0006               5325mmm         BRA     DONE_403
0000377E  0601 0037               5326mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003782  4E71                    5327mmm DONE_403: NOP
00003784                          5328mmm         ENDM
00003784  4E4F                    5329mm         TRAP    #15         ; EXECUTE OUTPUT
00003786                          5330mm         
00003786  3212                    5331mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003788  E949                    5332mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000378A  E049                    5333mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000378C  E849                    5334mm         LSR.W   #4, D1      
0000378E                          5335mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000378E  0C01 0009               5336mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003792  6E00 000A               5337mmm         BGT     ALPHA_404
00003796  0601 0030               5338mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000379A  6000 0006               5339mmm         BRA     DONE_404
0000379E  0601 0037               5340mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037A2  4E71                    5341mmm DONE_404: NOP
000037A4                          5342mmm         ENDM
000037A4  4E4F                    5343mm         TRAP    #15         ; EXECUTE OUTPUT
000037A6                          5344mm         
000037A6  3212                    5345mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037A8  E149                    5346mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037AA  E049                    5347mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037AC  E849                    5348mm         LSR.W   #4, D1      
000037AE                          5349mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037AE  0C01 0009               5350mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B2  6E00 000A               5351mmm         BGT     ALPHA_405
000037B6  0601 0030               5352mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037BA  6000 0006               5353mmm         BRA     DONE_405
000037BE  0601 0037               5354mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C2  4E71                    5355mmm DONE_405: NOP
000037C4                          5356mmm         ENDM
000037C4  4E4F                    5357mm         TRAP    #15         ; EXECUTE OUTPUT
000037C6                          5358mm         
000037C6  3212                    5359mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037C8  E149                    5360mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037CA  E949                    5361mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037CC  E049                    5362mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037CE  E849                    5363mm         LSR.W   #4, D1      
000037D0                          5364mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D0  0C01 0009               5365mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D4  6E00 000A               5366mmm         BGT     ALPHA_406
000037D8  0601 0030               5367mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037DC  6000 0006               5368mmm         BRA     DONE_406
000037E0  0601 0037               5369mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E4  4E71                    5370mmm DONE_406: NOP
000037E6                          5371mmm         ENDM
000037E6  4E4F                    5372mm         TRAP    #15         ; EXECUTE OUTPUT       
000037E8                          5373mm         ENDM 
000037E8  3605                    5374m         MOVE.W  D5, D3
000037EA  6000 0112               5375m         BRA     COMPLETE_355  
000037EE                          5376m ADRABSOLUTEL_355:  
000037EE  361A                    5377m         MOVE.W  (A2)+, D3
000037F0                          5378mm         PRINTSIGN
000037F0  103C 0006               5379mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000037F4  323C 0024               5380mm         MOVE.W  #36, D1     ; AN = SIGN
000037F8  4E4F                    5381mm         TRAP    #15         ; OUTPUT = SIGN
000037FA                          5382mm         ENDM
000037FA                          5383mm         ADROUT 
000037FA  3212                    5384mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037FC  E049                    5385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037FE  E849                    5386mm         LSR.W   #4, D1      
00003800                          5387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003800  0C01 0009               5388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003804  6E00 000A               5389mmm         BGT     ALPHA_409
00003808  0601 0030               5390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000380C  6000 0006               5391mmm         BRA     DONE_409
00003810  0601 0037               5392mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003814  4E71                    5393mmm DONE_409: NOP
00003816                          5394mmm         ENDM
00003816  4E4F                    5395mm         TRAP    #15         ; EXECUTE OUTPUT
00003818                          5396mm         
00003818  3212                    5397mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000381A  E949                    5398mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000381C  E049                    5399mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000381E  E849                    5400mm         LSR.W   #4, D1      
00003820                          5401mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003820  0C01 0009               5402mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003824  6E00 000A               5403mmm         BGT     ALPHA_410
00003828  0601 0030               5404mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000382C  6000 0006               5405mmm         BRA     DONE_410
00003830  0601 0037               5406mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003834  4E71                    5407mmm DONE_410: NOP
00003836                          5408mmm         ENDM
00003836  4E4F                    5409mm         TRAP    #15         ; EXECUTE OUTPUT
00003838                          5410mm         
00003838  3212                    5411mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000383A  E149                    5412mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000383C  E049                    5413mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000383E  E849                    5414mm         LSR.W   #4, D1      
00003840                          5415mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003840  0C01 0009               5416mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003844  6E00 000A               5417mmm         BGT     ALPHA_411
00003848  0601 0030               5418mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000384C  6000 0006               5419mmm         BRA     DONE_411
00003850  0601 0037               5420mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003854  4E71                    5421mmm DONE_411: NOP
00003856                          5422mmm         ENDM
00003856  4E4F                    5423mm         TRAP    #15         ; EXECUTE OUTPUT
00003858                          5424mm         
00003858  3212                    5425mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000385A  E149                    5426mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000385C  E949                    5427mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000385E  E049                    5428mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003860  E849                    5429mm         LSR.W   #4, D1      
00003862                          5430mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003862  0C01 0009               5431mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003866  6E00 000A               5432mmm         BGT     ALPHA_412
0000386A  0601 0030               5433mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000386E  6000 0006               5434mmm         BRA     DONE_412
00003872  0601 0037               5435mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003876  4E71                    5436mmm DONE_412: NOP
00003878                          5437mmm         ENDM
00003878  4E4F                    5438mm         TRAP    #15         ; EXECUTE OUTPUT       
0000387A                          5439mm         ENDM 
0000387A  361A                    5440m         MOVE.W  (A2)+, D3
0000387C                          5441mm         ADROUT
0000387C  3212                    5442mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000387E  E049                    5443mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003880  E849                    5444mm         LSR.W   #4, D1      
00003882                          5445mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003882  0C01 0009               5446mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003886  6E00 000A               5447mmm         BGT     ALPHA_414
0000388A  0601 0030               5448mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000388E  6000 0006               5449mmm         BRA     DONE_414
00003892  0601 0037               5450mmm ALPHA_414: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003896  4E71                    5451mmm DONE_414: NOP
00003898                          5452mmm         ENDM
00003898  4E4F                    5453mm         TRAP    #15         ; EXECUTE OUTPUT
0000389A                          5454mm         
0000389A  3212                    5455mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000389C  E949                    5456mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000389E  E049                    5457mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038A0  E849                    5458mm         LSR.W   #4, D1      
000038A2                          5459mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038A2  0C01 0009               5460mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038A6  6E00 000A               5461mmm         BGT     ALPHA_415
000038AA  0601 0030               5462mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038AE  6000 0006               5463mmm         BRA     DONE_415
000038B2  0601 0037               5464mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038B6  4E71                    5465mmm DONE_415: NOP
000038B8                          5466mmm         ENDM
000038B8  4E4F                    5467mm         TRAP    #15         ; EXECUTE OUTPUT
000038BA                          5468mm         
000038BA  3212                    5469mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038BC  E149                    5470mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038BE  E049                    5471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038C0  E849                    5472mm         LSR.W   #4, D1      
000038C2                          5473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038C2  0C01 0009               5474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038C6  6E00 000A               5475mmm         BGT     ALPHA_416
000038CA  0601 0030               5476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038CE  6000 0006               5477mmm         BRA     DONE_416
000038D2  0601 0037               5478mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038D6  4E71                    5479mmm DONE_416: NOP
000038D8                          5480mmm         ENDM
000038D8  4E4F                    5481mm         TRAP    #15         ; EXECUTE OUTPUT
000038DA                          5482mm         
000038DA  3212                    5483mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038DC  E149                    5484mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038DE  E949                    5485mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000038E0  E049                    5486mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038E2  E849                    5487mm         LSR.W   #4, D1      
000038E4                          5488mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038E4  0C01 0009               5489mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038E8  6E00 000A               5490mmm         BGT     ALPHA_417
000038EC  0601 0030               5491mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038F0  6000 0006               5492mmm         BRA     DONE_417
000038F4  0601 0037               5493mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038F8  4E71                    5494mmm DONE_417: NOP
000038FA                          5495mmm         ENDM
000038FA  4E4F                    5496mm         TRAP    #15         ; EXECUTE OUTPUT       
000038FC                          5497mm         ENDM 
000038FC  3605                    5498m         MOVE.W  D5, D3
000038FE                          5499m 
000038FE                          5500m COMPLETE_355:  ; OPCODE HAS BEEN VERIFIED
000038FE                          5501m         ENDM
000038FE                          5502m         printComma
000038FE  43F8 00C9               5503m         LEA     OCOMMA, A1     
00003902  103C 000E               5504m         MOVE.B  #14,D0          
00003906  4E4F                    5505m         TRAP    #15
00003908                          5506m         ENDM
00003908                          5507m         printDnDest     D3
00003908  3203                    5508m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000390A  E949                    5509m         LSL     #$04, D1
0000390C  E049                    5510m         LSR     #$08, D1
0000390E  EA49                    5511m         LSR     #$05, D1
00003910  43F8 00C1               5512m         LEA     ODN, A1     
00003914  103C 000E               5513m         MOVE.B  #14,D0          
00003918  4E4F                    5514m         TRAP    #15
0000391A  103C 0003               5515m         MOVE.B  #3,D0          
0000391E  4E4F                    5516m         TRAP    #15
00003920                          5517m         ENDM
00003920                          5518  decodeSUBcomp:
00003920  4E75                    5519          RTS                ; Return from decodeSUBcomp subroutine
00003922                          5520  
00003922                          5521  
00003922                          5522  ; ------------------------------------------------------------
00003922                          5523  ; 6. "decodeMULS" subroutine
00003922                          5524  ; AUTHOR
00003922                          5525  ;
00003922                          5526  ; TODO: DESCRIPTION MULS
00003922                          5527  ; ------------------------------------------------------------
00003922                          5528  decodeMULS:
00003922                          5529m         verifyOpcode    pMULS, (A2)
00003922  43F8 0129               5530m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003926  3612                    5531m         MOVE.W  (A2), D3      ; INPUT VALUE
00003928  123C 000F               5532m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000392C                          5533m         
0000392C                          5534m LOOP_420: 
0000392C  0C11 0030               5535m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003930  6700 000E               5536m         BEQ     CHECKFOR0_420
00003934  0C11 0031               5537m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003938  6700 0010               5538m         BEQ     CHECKFOR1_420
0000393C  6000 0012               5539m         BRA     NEXT_420      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003940                          5540m         
00003940                          5541m CHECKFOR0_420: 
00003940  0303                    5542m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003942  6600 3240               5543m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003946  6000 0008               5544m         BRA     NEXT_420
0000394A                          5545m 
0000394A                          5546m CHECKFOR1_420:
0000394A  0303                    5547m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000394C  6700 3236               5548m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003950                          5549m 
00003950                          5550m NEXT_420: 
00003950  B23C 0000               5551m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003954  6700 0008               5552m         BEQ     COMPLETE_420  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003958  5301                    5553m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000395A  1819                    5554m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000395C  60CE                    5555m         BRA     LOOP_420      ; BEGIN LOOP AGAIN
0000395E                          5556m 
0000395E                          5557m COMPLETE_420:  ; OPCODE HAS BEEN VERIFIED
0000395E                          5558m         ENDM
0000395E  43F8 0077               5559          LEA     oMULS, A1     
00003962  103C 000E               5560          MOVE.B  #14,D0          
00003966  4E4F                    5561          TRAP    #15
00003968                          5562m         printSize       (A2)
00003968  3612                    5563m         MOVE.W  (A2), D3      ; INPUT VALUE
0000396A  4247                    5564m         CLR     D7      
0000396C                          5565m CHECKFORB_421: 
0000396C  0803 000D               5566m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003970  6600 0010               5567m         BNE     CHECKFORW_421  ; IF NOT GO TO WORD SIZE
00003974  43F8 00B5               5568m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003978  103C 000E               5569m         MOVE.B  #14,D0          
0000397C  4E4F                    5570m         TRAP    #15
0000397E  6000 0026               5571m         BRA     COMPLETE_421      
00003982                          5572m CHECKFORW_421: 
00003982  0803 000C               5573m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003986  6700 0010               5574m         BEQ     CHECKFORL_421  ; IF NOT, SIZE CANNOT BE WORD
0000398A  43F8 00B9               5575m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000398E  103C 000E               5576m         MOVE.B  #14,D0          
00003992  4E4F                    5577m         TRAP    #15
00003994  6000 0010               5578m         BRA     COMPLETE_421  
00003998                          5579m CHECKFORL_421:
00003998  1E3C 0001               5580m         MOVE.B  #$1, D7
0000399C  43F8 00BD               5581m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000039A0  103C 000E               5582m         MOVE.B  #14,D0          
000039A4  4E4F                    5583m         TRAP    #15
000039A6                          5584m COMPLETE_421:  ; SIZE HAS BEEN PRINTED
000039A6                          5585m         ENDM
000039A6                          5586m         prepareAdrMode  #$1, (A2)
000039A6  3C3C 0001               5587m         MOVE.W  #$1, D6      ; INPUT VALUE
000039AA  3212                    5588m         MOVE.W  (A2), D1
000039AC  BC3C 0001               5589m         CMP.B   #$01, D6
000039B0  6700 000C               5590m         BEQ     ADRSOURCE_422    
000039B4                          5591m ADRDEST_422:
000039B4  EF49                    5592m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000039B6  E049                    5593m         LSR     #$08, D1
000039B8  EA49                    5594m         LSR     #$05, D1
000039BA  6000 000A               5595m         BRA     COMPLETE_422 
000039BE                          5596m ADRSOURCE_422:                
000039BE  E149                    5597m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000039C0  E549                    5598m         LSL     #$02, D1
000039C2  E049                    5599m         LSR     #$08, D1
000039C4  EA49                    5600m         LSR     #$05, D1
000039C6                          5601m COMPLETE_422:  ; OPCODE HAS BEEN VERIFIED
000039C6                          5602m         ENDM        
000039C6                          5603m         decodeAdrMode   (A2), D1
000039C6  3612                    5604m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000039C8  3201                    5605m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000039CA                          5606m 
000039CA  B23C 0001               5607m         CMP.B   #$01, D1
000039CE  6700 0066               5608m         BEQ     ADRREGDIRECT_423    
000039D2  B23C 0002               5609m         CMP.B   #$02, D1
000039D6  6700 00A0               5610m         BEQ     ADRREGINDIRECT_423  
000039DA  B23C 0003               5611m         CMP.B   #$03, D1
000039DE  6700 0102               5612m         BEQ     ADRREGPOSTINC_423  
000039E2  B23C 0004               5613m         CMP.B   #$04, D1
000039E6  6700 0178               5614m         BEQ     ADRREGPREDEC_423
000039EA  B23C 0007               5615m         CMP.B   #$07, D1
000039EE  6700 01EE               5616m         BEQ     ADRABSOLUTE_423    
000039F2                          5617m         
000039F2                          5618m DATAREGDIRECT_423: 
000039F2  BC3C 0001               5619m         CMP.B   #$01, D6
000039F6  6700 001E               5620m         BEQ     DATAREGDIRECTSRC_423   
000039FA                          5621m DATAREGDIRECTDEST_423: 
000039FA                          5622mm         PRINTDNDEST D3 
000039FA  3203                    5623mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000039FC  E949                    5624mm         LSL     #$04, D1
000039FE  E049                    5625mm         LSR     #$08, D1
00003A00  EA49                    5626mm         LSR     #$05, D1
00003A02  43F8 00C1               5627mm         LEA     ODN, A1     
00003A06  103C 000E               5628mm         MOVE.B  #14,D0          
00003A0A  4E4F                    5629mm         TRAP    #15
00003A0C  103C 0003               5630mm         MOVE.B  #3,D0          
00003A10  4E4F                    5631mm         TRAP    #15
00003A12                          5632mm         ENDM
00003A12  6000 0562               5633m         BRA     COMPLETE_423 
00003A16                          5634m DATAREGDIRECTSRC_423: 
00003A16                          5635mm         PRINTDNSRC D3 
00003A16  4281                    5636mm         CLR.L   D1
00003A18  3203                    5637mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A1A  E149                    5638mm         LSL     #$08, D1
00003A1C  EB49                    5639mm         LSL     #$05, D1
00003A1E  E049                    5640mm         LSR     #$08, D1
00003A20  EA49                    5641mm         LSR     #$05, D1
00003A22  43F8 00C1               5642mm         LEA     ODN, A1     
00003A26  103C 000E               5643mm         MOVE.B  #14,D0          
00003A2A  4E4F                    5644mm         TRAP    #15
00003A2C  103C 0003               5645mm         MOVE.B  #3,D0          
00003A30  4E4F                    5646mm         TRAP    #15
00003A32                          5647mm         ENDM
00003A32  6000 0542               5648m         BRA     COMPLETE_423   
00003A36                          5649m         
00003A36                          5650m ADRREGDIRECT_423: 
00003A36  BC3C 0001               5651m         CMP.B   #$01, D6
00003A3A  6700 001E               5652m         BEQ     ADRREGDIRECTSRC_423   
00003A3E                          5653m ADRREGDIRECTDEST_423:
00003A3E                          5654mm         PRINTANDEST D3
00003A3E  3203                    5655mm         MOVE.W  D3, D1
00003A40  E949                    5656mm         LSL     #$04, D1
00003A42  E049                    5657mm         LSR     #$08, D1
00003A44  EA49                    5658mm         LSR     #$05, D1
00003A46  43F8 00C3               5659mm         LEA     OAN, A1     
00003A4A  103C 000E               5660mm         MOVE.B  #14,D0          
00003A4E  4E4F                    5661mm         TRAP    #15
00003A50  103C 0003               5662mm         MOVE.B  #3,D0          
00003A54  4E4F                    5663mm         TRAP    #15
00003A56                          5664mm         ENDM
00003A56  6000 051E               5665m         BRA     COMPLETE_423   
00003A5A                          5666m ADRREGDIRECTSRC_423:
00003A5A                          5667mm         PRINTANSRC D3
00003A5A  3203                    5668mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A5C  E149                    5669mm         LSL     #$08, D1
00003A5E  EB49                    5670mm         LSL     #$05, D1
00003A60  E049                    5671mm         LSR     #$08, D1
00003A62  EA49                    5672mm         LSR     #$05, D1
00003A64  43F8 00C3               5673mm         LEA     OAN, A1     
00003A68  103C 000E               5674mm         MOVE.B  #14,D0          
00003A6C  4E4F                    5675mm         TRAP    #15
00003A6E  103C 0003               5676mm         MOVE.B  #3,D0          
00003A72  4E4F                    5677mm         TRAP    #15
00003A74                          5678mm         ENDM
00003A74  6000 0500               5679m         BRA     COMPLETE_423   
00003A78                          5680m        
00003A78                          5681m ADRREGINDIRECT_423:   
00003A78  BC3C 0001               5682m         CMP.B   #$01, D6
00003A7C  6700 0032               5683m         BEQ     ADRREGINDIRECTSRC_423   
00003A80                          5684m ADRREGINDIRECTDEST_423:
00003A80                          5685mm         PRINTLB
00003A80  43F8 00C5               5686mm         LEA     OLB, A1     
00003A84  103C 000E               5687mm         MOVE.B  #14,D0          
00003A88  4E4F                    5688mm         TRAP    #15
00003A8A                          5689mm         ENDM
00003A8A                          5690mm         PRINTANDEST D3  
00003A8A  3203                    5691mm         MOVE.W  D3, D1
00003A8C  E949                    5692mm         LSL     #$04, D1
00003A8E  E049                    5693mm         LSR     #$08, D1
00003A90  EA49                    5694mm         LSR     #$05, D1
00003A92  43F8 00C3               5695mm         LEA     OAN, A1     
00003A96  103C 000E               5696mm         MOVE.B  #14,D0          
00003A9A  4E4F                    5697mm         TRAP    #15
00003A9C  103C 0003               5698mm         MOVE.B  #3,D0          
00003AA0  4E4F                    5699mm         TRAP    #15
00003AA2                          5700mm         ENDM
00003AA2                          5701mm         PRINTRB
00003AA2  43F8 00C7               5702mm         LEA     ORB, A1     
00003AA6  103C 000E               5703mm         MOVE.B  #14,D0          
00003AAA  4E4F                    5704mm         TRAP    #15
00003AAC                          5705mm         ENDM
00003AAC  6000 04C8               5706m         BRA     COMPLETE_423     
00003AB0                          5707m ADRREGINDIRECTSRC_423:   
00003AB0                          5708mm         PRINTLB
00003AB0  43F8 00C5               5709mm         LEA     OLB, A1     
00003AB4  103C 000E               5710mm         MOVE.B  #14,D0          
00003AB8  4E4F                    5711mm         TRAP    #15
00003ABA                          5712mm         ENDM
00003ABA                          5713mm         PRINTANSRC D3  
00003ABA  3203                    5714mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003ABC  E149                    5715mm         LSL     #$08, D1
00003ABE  EB49                    5716mm         LSL     #$05, D1
00003AC0  E049                    5717mm         LSR     #$08, D1
00003AC2  EA49                    5718mm         LSR     #$05, D1
00003AC4  43F8 00C3               5719mm         LEA     OAN, A1     
00003AC8  103C 000E               5720mm         MOVE.B  #14,D0          
00003ACC  4E4F                    5721mm         TRAP    #15
00003ACE  103C 0003               5722mm         MOVE.B  #3,D0          
00003AD2  4E4F                    5723mm         TRAP    #15
00003AD4                          5724mm         ENDM
00003AD4                          5725mm         PRINTRB
00003AD4  43F8 00C7               5726mm         LEA     ORB, A1     
00003AD8  103C 000E               5727mm         MOVE.B  #14,D0          
00003ADC  4E4F                    5728mm         TRAP    #15
00003ADE                          5729mm         ENDM
00003ADE  6000 0496               5730m         BRA     COMPLETE_423   
00003AE2                          5731m         
00003AE2                          5732m ADRREGPOSTINC_423:   
00003AE2  BC3C 0001               5733m         CMP.B   #$01, D6
00003AE6  6700 003C               5734m         BEQ     ADRREGPOSTINCSRC_423   
00003AEA                          5735m ADRREGPOSTINCDEST_423: 
00003AEA                          5736mm         PRINTLB
00003AEA  43F8 00C5               5737mm         LEA     OLB, A1     
00003AEE  103C 000E               5738mm         MOVE.B  #14,D0          
00003AF2  4E4F                    5739mm         TRAP    #15
00003AF4                          5740mm         ENDM
00003AF4                          5741mm         PRINTANDEST D3  
00003AF4  3203                    5742mm         MOVE.W  D3, D1
00003AF6  E949                    5743mm         LSL     #$04, D1
00003AF8  E049                    5744mm         LSR     #$08, D1
00003AFA  EA49                    5745mm         LSR     #$05, D1
00003AFC  43F8 00C3               5746mm         LEA     OAN, A1     
00003B00  103C 000E               5747mm         MOVE.B  #14,D0          
00003B04  4E4F                    5748mm         TRAP    #15
00003B06  103C 0003               5749mm         MOVE.B  #3,D0          
00003B0A  4E4F                    5750mm         TRAP    #15
00003B0C                          5751mm         ENDM
00003B0C                          5752mm         PRINTRB
00003B0C  43F8 00C7               5753mm         LEA     ORB, A1     
00003B10  103C 000E               5754mm         MOVE.B  #14,D0          
00003B14  4E4F                    5755mm         TRAP    #15
00003B16                          5756mm         ENDM
00003B16                          5757mm         PRINTPI
00003B16  43F8 00CE               5758mm         LEA     OPSTINC, A1     
00003B1A  103C 000E               5759mm         MOVE.B  #14,D0          
00003B1E  4E4F                    5760mm         TRAP    #15
00003B20                          5761mm         ENDM
00003B20  6000 0454               5762m         BRA     COMPLETE_423  
00003B24                          5763m ADRREGPOSTINCSRC_423:           
00003B24                          5764mm         PRINTLB
00003B24  43F8 00C5               5765mm         LEA     OLB, A1     
00003B28  103C 000E               5766mm         MOVE.B  #14,D0          
00003B2C  4E4F                    5767mm         TRAP    #15
00003B2E                          5768mm         ENDM
00003B2E                          5769mm         PRINTANSRC D3  
00003B2E  3203                    5770mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B30  E149                    5771mm         LSL     #$08, D1
00003B32  EB49                    5772mm         LSL     #$05, D1
00003B34  E049                    5773mm         LSR     #$08, D1
00003B36  EA49                    5774mm         LSR     #$05, D1
00003B38  43F8 00C3               5775mm         LEA     OAN, A1     
00003B3C  103C 000E               5776mm         MOVE.B  #14,D0          
00003B40  4E4F                    5777mm         TRAP    #15
00003B42  103C 0003               5778mm         MOVE.B  #3,D0          
00003B46  4E4F                    5779mm         TRAP    #15
00003B48                          5780mm         ENDM
00003B48                          5781mm         PRINTRB
00003B48  43F8 00C7               5782mm         LEA     ORB, A1     
00003B4C  103C 000E               5783mm         MOVE.B  #14,D0          
00003B50  4E4F                    5784mm         TRAP    #15
00003B52                          5785mm         ENDM
00003B52                          5786mm         PRINTPI
00003B52  43F8 00CE               5787mm         LEA     OPSTINC, A1     
00003B56  103C 000E               5788mm         MOVE.B  #14,D0          
00003B5A  4E4F                    5789mm         TRAP    #15
00003B5C                          5790mm         ENDM
00003B5C  6000 0418               5791m         BRA     COMPLETE_423  
00003B60                          5792m ADRREGPREDEC_423: 
00003B60  BC3C 0001               5793m         CMP.B   #$01, D6
00003B64  6700 003C               5794m         BEQ     ADRREGPREDECSRC_423   
00003B68                          5795m ADRREGPREDECDEST_423:
00003B68                          5796mm         PRINTPD  
00003B68  43F8 00CC               5797mm         LEA     OPREDEC, A1     
00003B6C  103C 000E               5798mm         MOVE.B  #14,D0          
00003B70  4E4F                    5799mm         TRAP    #15
00003B72                          5800mm         ENDM
00003B72                          5801mm         PRINTLB
00003B72  43F8 00C5               5802mm         LEA     OLB, A1     
00003B76  103C 000E               5803mm         MOVE.B  #14,D0          
00003B7A  4E4F                    5804mm         TRAP    #15
00003B7C                          5805mm         ENDM
00003B7C                          5806mm         PRINTANDEST D3  
00003B7C  3203                    5807mm         MOVE.W  D3, D1
00003B7E  E949                    5808mm         LSL     #$04, D1
00003B80  E049                    5809mm         LSR     #$08, D1
00003B82  EA49                    5810mm         LSR     #$05, D1
00003B84  43F8 00C3               5811mm         LEA     OAN, A1     
00003B88  103C 000E               5812mm         MOVE.B  #14,D0          
00003B8C  4E4F                    5813mm         TRAP    #15
00003B8E  103C 0003               5814mm         MOVE.B  #3,D0          
00003B92  4E4F                    5815mm         TRAP    #15
00003B94                          5816mm         ENDM
00003B94                          5817mm         PRINTRB
00003B94  43F8 00C7               5818mm         LEA     ORB, A1     
00003B98  103C 000E               5819mm         MOVE.B  #14,D0          
00003B9C  4E4F                    5820mm         TRAP    #15
00003B9E                          5821mm         ENDM
00003B9E  6000 03D6               5822m         BRA     COMPLETE_423   
00003BA2                          5823m ADRREGPREDECSRC_423: 
00003BA2                          5824mm         PRINTPD  
00003BA2  43F8 00CC               5825mm         LEA     OPREDEC, A1     
00003BA6  103C 000E               5826mm         MOVE.B  #14,D0          
00003BAA  4E4F                    5827mm         TRAP    #15
00003BAC                          5828mm         ENDM
00003BAC                          5829mm         PRINTLB
00003BAC  43F8 00C5               5830mm         LEA     OLB, A1     
00003BB0  103C 000E               5831mm         MOVE.B  #14,D0          
00003BB4  4E4F                    5832mm         TRAP    #15
00003BB6                          5833mm         ENDM
00003BB6                          5834mm         PRINTANSRC D3  
00003BB6  3203                    5835mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BB8  E149                    5836mm         LSL     #$08, D1
00003BBA  EB49                    5837mm         LSL     #$05, D1
00003BBC  E049                    5838mm         LSR     #$08, D1
00003BBE  EA49                    5839mm         LSR     #$05, D1
00003BC0  43F8 00C3               5840mm         LEA     OAN, A1     
00003BC4  103C 000E               5841mm         MOVE.B  #14,D0          
00003BC8  4E4F                    5842mm         TRAP    #15
00003BCA  103C 0003               5843mm         MOVE.B  #3,D0          
00003BCE  4E4F                    5844mm         TRAP    #15
00003BD0                          5845mm         ENDM
00003BD0                          5846mm         PRINTRB
00003BD0  43F8 00C7               5847mm         LEA     ORB, A1     
00003BD4  103C 000E               5848mm         MOVE.B  #14,D0          
00003BD8  4E4F                    5849mm         TRAP    #15
00003BDA                          5850mm         ENDM
00003BDA  6000 039A               5851m         BRA     COMPLETE_423
00003BDE                          5852m        
00003BDE                          5853m ADRABSOLUTE_423:
00003BDE  BC3C 0001               5854m         CMP.B   #$01, D6
00003BE2  6600 0018               5855m         BNE     ADRABSOLUTEDST_423 
00003BE6                          5856m         
00003BE6  3A03                    5857m         MOVE.W  D3, D5
00003BE8  0803 0002               5858m         BTST    #2, D3
00003BEC  6600 0024               5859m         BNE     ADRIMMEDIATE_423
00003BF0  0803 0000               5860m         BTST    #0, D3
00003BF4  6600 0270               5861m         BNE     ADRABSOLUTEL_423
00003BF8  6000 01DA               5862m         BRA     ADRABSOLUTEW_423
00003BFC                          5863m ADRABSOLUTEDST_423:
00003BFC  3A03                    5864m         MOVE.W  D3, D5
00003BFE  0803 000B               5865m         BTST    #$B, D3
00003C02  6600 000E               5866m         BNE     ADRIMMEDIATE_423
00003C06  0803 0009               5867m         BTST    #$09, D3
00003C0A  6600 025A               5868m         BNE     ADRABSOLUTEL_423
00003C0E  6000 01C4               5869m         BRA     ADRABSOLUTEW_423
00003C12                          5870m ADRIMMEDIATE_423:
00003C12  BE3C 0001               5871m         CMP.B   #1, D7
00003C16  6700 009E               5872m         BEQ     ADRIMMEDIATEL_423
00003C1A                          5873m ADRIMMEDIATEW_423:
00003C1A  361A                    5874m         MOVE.W  (A2)+, D3
00003C1C                          5875mm         PRINTHASH
00003C1C  103C 0006               5876mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C20  323C 0023               5877mm         MOVE.W  #35, D1     ; AN = SIGN
00003C24  4E4F                    5878mm         TRAP    #15         ; OUTPUT = SIGN
00003C26                          5879mm         ENDM
00003C26                          5880mm         PRINTSIGN
00003C26  103C 0006               5881mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C2A  323C 0024               5882mm         MOVE.W  #36, D1     ; AN = SIGN
00003C2E  4E4F                    5883mm         TRAP    #15         ; OUTPUT = SIGN
00003C30                          5884mm         ENDM
00003C30                          5885mm         ADROUT
00003C30  3212                    5886mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C32  E049                    5887mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C34  E849                    5888mm         LSR.W   #4, D1      
00003C36                          5889mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C36  0C01 0009               5890mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C3A  6E00 000A               5891mmm         BGT     ALPHA_453
00003C3E  0601 0030               5892mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C42  6000 0006               5893mmm         BRA     DONE_453
00003C46  0601 0037               5894mmm ALPHA_453: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C4A  4E71                    5895mmm DONE_453: NOP
00003C4C                          5896mmm         ENDM
00003C4C  4E4F                    5897mm         TRAP    #15         ; EXECUTE OUTPUT
00003C4E                          5898mm         
00003C4E  3212                    5899mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C50  E949                    5900mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003C52  E049                    5901mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C54  E849                    5902mm         LSR.W   #4, D1      
00003C56                          5903mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C56  0C01 0009               5904mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C5A  6E00 000A               5905mmm         BGT     ALPHA_454
00003C5E  0601 0030               5906mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C62  6000 0006               5907mmm         BRA     DONE_454
00003C66  0601 0037               5908mmm ALPHA_454: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C6A  4E71                    5909mmm DONE_454: NOP
00003C6C                          5910mmm         ENDM
00003C6C  4E4F                    5911mm         TRAP    #15         ; EXECUTE OUTPUT
00003C6E                          5912mm         
00003C6E  3212                    5913mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C70  E149                    5914mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C72  E049                    5915mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C74  E849                    5916mm         LSR.W   #4, D1      
00003C76                          5917mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C76  0C01 0009               5918mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C7A  6E00 000A               5919mmm         BGT     ALPHA_455
00003C7E  0601 0030               5920mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C82  6000 0006               5921mmm         BRA     DONE_455
00003C86  0601 0037               5922mmm ALPHA_455: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C8A  4E71                    5923mmm DONE_455: NOP
00003C8C                          5924mmm         ENDM
00003C8C  4E4F                    5925mm         TRAP    #15         ; EXECUTE OUTPUT
00003C8E                          5926mm         
00003C8E  3212                    5927mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C90  E149                    5928mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C92  E949                    5929mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003C94  E049                    5930mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C96  E849                    5931mm         LSR.W   #4, D1      
00003C98                          5932mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C98  0C01 0009               5933mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C9C  6E00 000A               5934mmm         BGT     ALPHA_456
00003CA0  0601 0030               5935mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CA4  6000 0006               5936mmm         BRA     DONE_456
00003CA8  0601 0037               5937mmm ALPHA_456: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CAC  4E71                    5938mmm DONE_456: NOP
00003CAE                          5939mmm         ENDM
00003CAE  4E4F                    5940mm         TRAP    #15         ; EXECUTE OUTPUT       
00003CB0                          5941mm         ENDM 
00003CB0  3605                    5942m         MOVE.W  D5, D3
00003CB2  6000 02C2               5943m         BRA     COMPLETE_423
00003CB6                          5944m ADRIMMEDIATEL_423:
00003CB6  361A                    5945m         MOVE.W  (A2)+, D3
00003CB8                          5946mm         PRINTHASH
00003CB8  103C 0006               5947mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CBC  323C 0023               5948mm         MOVE.W  #35, D1     ; AN = SIGN
00003CC0  4E4F                    5949mm         TRAP    #15         ; OUTPUT = SIGN
00003CC2                          5950mm         ENDM
00003CC2                          5951mm         PRINTSIGN
00003CC2  103C 0006               5952mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CC6  323C 0024               5953mm         MOVE.W  #36, D1     ; AN = SIGN
00003CCA  4E4F                    5954mm         TRAP    #15         ; OUTPUT = SIGN
00003CCC                          5955mm         ENDM
00003CCC                          5956mm         ADROUT 
00003CCC  3212                    5957mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CCE  E049                    5958mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CD0  E849                    5959mm         LSR.W   #4, D1      
00003CD2                          5960mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CD2  0C01 0009               5961mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CD6  6E00 000A               5962mmm         BGT     ALPHA_460
00003CDA  0601 0030               5963mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CDE  6000 0006               5964mmm         BRA     DONE_460
00003CE2  0601 0037               5965mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CE6  4E71                    5966mmm DONE_460: NOP
00003CE8                          5967mmm         ENDM
00003CE8  4E4F                    5968mm         TRAP    #15         ; EXECUTE OUTPUT
00003CEA                          5969mm         
00003CEA  3212                    5970mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CEC  E949                    5971mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003CEE  E049                    5972mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CF0  E849                    5973mm         LSR.W   #4, D1      
00003CF2                          5974mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CF2  0C01 0009               5975mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CF6  6E00 000A               5976mmm         BGT     ALPHA_461
00003CFA  0601 0030               5977mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CFE  6000 0006               5978mmm         BRA     DONE_461
00003D02  0601 0037               5979mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D06  4E71                    5980mmm DONE_461: NOP
00003D08                          5981mmm         ENDM
00003D08  4E4F                    5982mm         TRAP    #15         ; EXECUTE OUTPUT
00003D0A                          5983mm         
00003D0A  3212                    5984mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D0C  E149                    5985mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D0E  E049                    5986mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D10  E849                    5987mm         LSR.W   #4, D1      
00003D12                          5988mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D12  0C01 0009               5989mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D16  6E00 000A               5990mmm         BGT     ALPHA_462
00003D1A  0601 0030               5991mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D1E  6000 0006               5992mmm         BRA     DONE_462
00003D22  0601 0037               5993mmm ALPHA_462: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D26  4E71                    5994mmm DONE_462: NOP
00003D28                          5995mmm         ENDM
00003D28  4E4F                    5996mm         TRAP    #15         ; EXECUTE OUTPUT
00003D2A                          5997mm         
00003D2A  3212                    5998mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D2C  E149                    5999mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D2E  E949                    6000mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003D30  E049                    6001mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D32  E849                    6002mm         LSR.W   #4, D1      
00003D34                          6003mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D34  0C01 0009               6004mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D38  6E00 000A               6005mmm         BGT     ALPHA_463
00003D3C  0601 0030               6006mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D40  6000 0006               6007mmm         BRA     DONE_463
00003D44  0601 0037               6008mmm ALPHA_463: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D48  4E71                    6009mmm DONE_463: NOP
00003D4A                          6010mmm         ENDM
00003D4A  4E4F                    6011mm         TRAP    #15         ; EXECUTE OUTPUT       
00003D4C                          6012mm         ENDM 
00003D4C  361A                    6013m         MOVE.W  (A2)+, D3
00003D4E                          6014mm         ADROUT
00003D4E  3212                    6015mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D50  E049                    6016mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D52  E849                    6017mm         LSR.W   #4, D1      
00003D54                          6018mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D54  0C01 0009               6019mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D58  6E00 000A               6020mmm         BGT     ALPHA_465
00003D5C  0601 0030               6021mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D60  6000 0006               6022mmm         BRA     DONE_465
00003D64  0601 0037               6023mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D68  4E71                    6024mmm DONE_465: NOP
00003D6A                          6025mmm         ENDM
00003D6A  4E4F                    6026mm         TRAP    #15         ; EXECUTE OUTPUT
00003D6C                          6027mm         
00003D6C  3212                    6028mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D6E  E949                    6029mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D70  E049                    6030mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D72  E849                    6031mm         LSR.W   #4, D1      
00003D74                          6032mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D74  0C01 0009               6033mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D78  6E00 000A               6034mmm         BGT     ALPHA_466
00003D7C  0601 0030               6035mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D80  6000 0006               6036mmm         BRA     DONE_466
00003D84  0601 0037               6037mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D88  4E71                    6038mmm DONE_466: NOP
00003D8A                          6039mmm         ENDM
00003D8A  4E4F                    6040mm         TRAP    #15         ; EXECUTE OUTPUT
00003D8C                          6041mm         
00003D8C  3212                    6042mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D8E  E149                    6043mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D90  E049                    6044mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D92  E849                    6045mm         LSR.W   #4, D1      
00003D94                          6046mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D94  0C01 0009               6047mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D98  6E00 000A               6048mmm         BGT     ALPHA_467
00003D9C  0601 0030               6049mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DA0  6000 0006               6050mmm         BRA     DONE_467
00003DA4  0601 0037               6051mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DA8  4E71                    6052mmm DONE_467: NOP
00003DAA                          6053mmm         ENDM
00003DAA  4E4F                    6054mm         TRAP    #15         ; EXECUTE OUTPUT
00003DAC                          6055mm         
00003DAC  3212                    6056mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DAE  E149                    6057mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DB0  E949                    6058mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DB2  E049                    6059mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DB4  E849                    6060mm         LSR.W   #4, D1      
00003DB6                          6061mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DB6  0C01 0009               6062mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DBA  6E00 000A               6063mmm         BGT     ALPHA_468
00003DBE  0601 0030               6064mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DC2  6000 0006               6065mmm         BRA     DONE_468
00003DC6  0601 0037               6066mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DCA  4E71                    6067mmm DONE_468: NOP
00003DCC                          6068mmm         ENDM
00003DCC  4E4F                    6069mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DCE                          6070mm         ENDM 
00003DCE  3605                    6071m         MOVE.W  D5, D3
00003DD0  6000 01A4               6072m         BRA     COMPLETE_423 
00003DD4                          6073m ADRABSOLUTEW_423:     
00003DD4  361A                    6074m         MOVE.W  (A2)+, D3
00003DD6                          6075mm         PRINTSIGN
00003DD6  103C 0006               6076mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DDA  323C 0024               6077mm         MOVE.W  #36, D1     ; AN = SIGN
00003DDE  4E4F                    6078mm         TRAP    #15         ; OUTPUT = SIGN
00003DE0                          6079mm         ENDM
00003DE0                          6080mm         ADROUT
00003DE0  3212                    6081mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DE2  E049                    6082mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DE4  E849                    6083mm         LSR.W   #4, D1      
00003DE6                          6084mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DE6  0C01 0009               6085mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DEA  6E00 000A               6086mmm         BGT     ALPHA_471
00003DEE  0601 0030               6087mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DF2  6000 0006               6088mmm         BRA     DONE_471
00003DF6  0601 0037               6089mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DFA  4E71                    6090mmm DONE_471: NOP
00003DFC                          6091mmm         ENDM
00003DFC  4E4F                    6092mm         TRAP    #15         ; EXECUTE OUTPUT
00003DFE                          6093mm         
00003DFE  3212                    6094mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E00  E949                    6095mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E02  E049                    6096mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E04  E849                    6097mm         LSR.W   #4, D1      
00003E06                          6098mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E06  0C01 0009               6099mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E0A  6E00 000A               6100mmm         BGT     ALPHA_472
00003E0E  0601 0030               6101mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E12  6000 0006               6102mmm         BRA     DONE_472
00003E16  0601 0037               6103mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E1A  4E71                    6104mmm DONE_472: NOP
00003E1C                          6105mmm         ENDM
00003E1C  4E4F                    6106mm         TRAP    #15         ; EXECUTE OUTPUT
00003E1E                          6107mm         
00003E1E  3212                    6108mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E20  E149                    6109mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E22  E049                    6110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E24  E849                    6111mm         LSR.W   #4, D1      
00003E26                          6112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E26  0C01 0009               6113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E2A  6E00 000A               6114mmm         BGT     ALPHA_473
00003E2E  0601 0030               6115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E32  6000 0006               6116mmm         BRA     DONE_473
00003E36  0601 0037               6117mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E3A  4E71                    6118mmm DONE_473: NOP
00003E3C                          6119mmm         ENDM
00003E3C  4E4F                    6120mm         TRAP    #15         ; EXECUTE OUTPUT
00003E3E                          6121mm         
00003E3E  3212                    6122mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E40  E149                    6123mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E42  E949                    6124mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E44  E049                    6125mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E46  E849                    6126mm         LSR.W   #4, D1      
00003E48                          6127mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E48  0C01 0009               6128mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E4C  6E00 000A               6129mmm         BGT     ALPHA_474
00003E50  0601 0030               6130mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E54  6000 0006               6131mmm         BRA     DONE_474
00003E58  0601 0037               6132mmm ALPHA_474: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E5C  4E71                    6133mmm DONE_474: NOP
00003E5E                          6134mmm         ENDM
00003E5E  4E4F                    6135mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E60                          6136mm         ENDM 
00003E60  3605                    6137m         MOVE.W  D5, D3
00003E62  6000 0112               6138m         BRA     COMPLETE_423  
00003E66                          6139m ADRABSOLUTEL_423:  
00003E66  361A                    6140m         MOVE.W  (A2)+, D3
00003E68                          6141mm         PRINTSIGN
00003E68  103C 0006               6142mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E6C  323C 0024               6143mm         MOVE.W  #36, D1     ; AN = SIGN
00003E70  4E4F                    6144mm         TRAP    #15         ; OUTPUT = SIGN
00003E72                          6145mm         ENDM
00003E72                          6146mm         ADROUT 
00003E72  3212                    6147mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E74  E049                    6148mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E76  E849                    6149mm         LSR.W   #4, D1      
00003E78                          6150mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E78  0C01 0009               6151mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E7C  6E00 000A               6152mmm         BGT     ALPHA_477
00003E80  0601 0030               6153mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E84  6000 0006               6154mmm         BRA     DONE_477
00003E88  0601 0037               6155mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E8C  4E71                    6156mmm DONE_477: NOP
00003E8E                          6157mmm         ENDM
00003E8E  4E4F                    6158mm         TRAP    #15         ; EXECUTE OUTPUT
00003E90                          6159mm         
00003E90  3212                    6160mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E92  E949                    6161mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E94  E049                    6162mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E96  E849                    6163mm         LSR.W   #4, D1      
00003E98                          6164mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E98  0C01 0009               6165mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E9C  6E00 000A               6166mmm         BGT     ALPHA_478
00003EA0  0601 0030               6167mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EA4  6000 0006               6168mmm         BRA     DONE_478
00003EA8  0601 0037               6169mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EAC  4E71                    6170mmm DONE_478: NOP
00003EAE                          6171mmm         ENDM
00003EAE  4E4F                    6172mm         TRAP    #15         ; EXECUTE OUTPUT
00003EB0                          6173mm         
00003EB0  3212                    6174mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EB2  E149                    6175mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EB4  E049                    6176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EB6  E849                    6177mm         LSR.W   #4, D1      
00003EB8                          6178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EB8  0C01 0009               6179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EBC  6E00 000A               6180mmm         BGT     ALPHA_479
00003EC0  0601 0030               6181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EC4  6000 0006               6182mmm         BRA     DONE_479
00003EC8  0601 0037               6183mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ECC  4E71                    6184mmm DONE_479: NOP
00003ECE                          6185mmm         ENDM
00003ECE  4E4F                    6186mm         TRAP    #15         ; EXECUTE OUTPUT
00003ED0                          6187mm         
00003ED0  3212                    6188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003ED2  E149                    6189mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003ED4  E949                    6190mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003ED6  E049                    6191mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ED8  E849                    6192mm         LSR.W   #4, D1      
00003EDA                          6193mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EDA  0C01 0009               6194mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EDE  6E00 000A               6195mmm         BGT     ALPHA_480
00003EE2  0601 0030               6196mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EE6  6000 0006               6197mmm         BRA     DONE_480
00003EEA  0601 0037               6198mmm ALPHA_480: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EEE  4E71                    6199mmm DONE_480: NOP
00003EF0                          6200mmm         ENDM
00003EF0  4E4F                    6201mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EF2                          6202mm         ENDM 
00003EF2  361A                    6203m         MOVE.W  (A2)+, D3
00003EF4                          6204mm         ADROUT
00003EF4  3212                    6205mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EF6  E049                    6206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EF8  E849                    6207mm         LSR.W   #4, D1      
00003EFA                          6208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EFA  0C01 0009               6209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EFE  6E00 000A               6210mmm         BGT     ALPHA_482
00003F02  0601 0030               6211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F06  6000 0006               6212mmm         BRA     DONE_482
00003F0A  0601 0037               6213mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F0E  4E71                    6214mmm DONE_482: NOP
00003F10                          6215mmm         ENDM
00003F10  4E4F                    6216mm         TRAP    #15         ; EXECUTE OUTPUT
00003F12                          6217mm         
00003F12  3212                    6218mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F14  E949                    6219mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F16  E049                    6220mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F18  E849                    6221mm         LSR.W   #4, D1      
00003F1A                          6222mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F1A  0C01 0009               6223mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F1E  6E00 000A               6224mmm         BGT     ALPHA_483
00003F22  0601 0030               6225mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F26  6000 0006               6226mmm         BRA     DONE_483
00003F2A  0601 0037               6227mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F2E  4E71                    6228mmm DONE_483: NOP
00003F30                          6229mmm         ENDM
00003F30  4E4F                    6230mm         TRAP    #15         ; EXECUTE OUTPUT
00003F32                          6231mm         
00003F32  3212                    6232mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F34  E149                    6233mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F36  E049                    6234mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F38  E849                    6235mm         LSR.W   #4, D1      
00003F3A                          6236mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F3A  0C01 0009               6237mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F3E  6E00 000A               6238mmm         BGT     ALPHA_484
00003F42  0601 0030               6239mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F46  6000 0006               6240mmm         BRA     DONE_484
00003F4A  0601 0037               6241mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F4E  4E71                    6242mmm DONE_484: NOP
00003F50                          6243mmm         ENDM
00003F50  4E4F                    6244mm         TRAP    #15         ; EXECUTE OUTPUT
00003F52                          6245mm         
00003F52  3212                    6246mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F54  E149                    6247mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F56  E949                    6248mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F58  E049                    6249mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F5A  E849                    6250mm         LSR.W   #4, D1      
00003F5C                          6251mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F5C  0C01 0009               6252mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F60  6E00 000A               6253mmm         BGT     ALPHA_485
00003F64  0601 0030               6254mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F68  6000 0006               6255mmm         BRA     DONE_485
00003F6C  0601 0037               6256mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F70  4E71                    6257mmm DONE_485: NOP
00003F72                          6258mmm         ENDM
00003F72  4E4F                    6259mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F74                          6260mm         ENDM 
00003F74  3605                    6261m         MOVE.W  D5, D3
00003F76                          6262m 
00003F76                          6263m COMPLETE_423:  ; OPCODE HAS BEEN VERIFIED
00003F76                          6264m         ENDM
00003F76                          6265m         printComma
00003F76  43F8 00C9               6266m         LEA     OCOMMA, A1     
00003F7A  103C 000E               6267m         MOVE.B  #14,D0          
00003F7E  4E4F                    6268m         TRAP    #15
00003F80                          6269m         ENDM
00003F80                          6270m         printDnDest     D3
00003F80  3203                    6271m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003F82  E949                    6272m         LSL     #$04, D1
00003F84  E049                    6273m         LSR     #$08, D1
00003F86  EA49                    6274m         LSR     #$05, D1
00003F88  43F8 00C1               6275m         LEA     ODN, A1     
00003F8C  103C 000E               6276m         MOVE.B  #14,D0          
00003F90  4E4F                    6277m         TRAP    #15
00003F92  103C 0003               6278m         MOVE.B  #3,D0          
00003F96  4E4F                    6279m         TRAP    #15
00003F98                          6280m         ENDM
00003F98  4E75                    6281          RTS                 ; Return from decodeMULS subroutine
00003F9A                          6282          
00003F9A                          6283  ; ------------------------------------------------------------
00003F9A                          6284  ; 7. "decodeDIVU" subroutine
00003F9A                          6285  ; AUTHOR
00003F9A                          6286  ;
00003F9A                          6287  ; TODO: DESCRIPTION DIVU
00003F9A                          6288  ; ------------------------------------------------------------
00003F9A                          6289  decodeDIVU:
00003F9A                          6290m         verifyOpcode    pDIVU, (A2)
00003F9A  43F8 013A               6291m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
00003F9E  3612                    6292m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FA0  123C 000F               6293m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003FA4                          6294m         
00003FA4                          6295m LOOP_488: 
00003FA4  0C11 0030               6296m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003FA8  6700 000E               6297m         BEQ     CHECKFOR0_488
00003FAC  0C11 0031               6298m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003FB0  6700 0010               6299m         BEQ     CHECKFOR1_488
00003FB4  6000 0012               6300m         BRA     NEXT_488      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003FB8                          6301m         
00003FB8                          6302m CHECKFOR0_488: 
00003FB8  0303                    6303m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003FBA  6600 2BC8               6304m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003FBE  6000 0008               6305m         BRA     NEXT_488
00003FC2                          6306m 
00003FC2                          6307m CHECKFOR1_488:
00003FC2  0303                    6308m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003FC4  6700 2BBE               6309m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003FC8                          6310m 
00003FC8                          6311m NEXT_488: 
00003FC8  B23C 0000               6312m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003FCC  6700 0008               6313m         BEQ     COMPLETE_488  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003FD0  5301                    6314m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003FD2  1819                    6315m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003FD4  60CE                    6316m         BRA     LOOP_488      ; BEGIN LOOP AGAIN
00003FD6                          6317m 
00003FD6                          6318m COMPLETE_488:  ; OPCODE HAS BEEN VERIFIED
00003FD6                          6319m         ENDM
00003FD6  43F8 007C               6320          LEA     oDIVU, A1     
00003FDA  103C 000E               6321          MOVE.B  #14,D0          
00003FDE  4E4F                    6322          TRAP    #15
00003FE0                          6323m         printSize       (A2)
00003FE0  3612                    6324m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FE2  4247                    6325m         CLR     D7      
00003FE4                          6326m CHECKFORB_489: 
00003FE4  0803 000D               6327m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003FE8  6600 0010               6328m         BNE     CHECKFORW_489  ; IF NOT GO TO WORD SIZE
00003FEC  43F8 00B5               6329m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003FF0  103C 000E               6330m         MOVE.B  #14,D0          
00003FF4  4E4F                    6331m         TRAP    #15
00003FF6  6000 0026               6332m         BRA     COMPLETE_489      
00003FFA                          6333m CHECKFORW_489: 
00003FFA  0803 000C               6334m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003FFE  6700 0010               6335m         BEQ     CHECKFORL_489  ; IF NOT, SIZE CANNOT BE WORD
00004002  43F8 00B9               6336m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
00004006  103C 000E               6337m         MOVE.B  #14,D0          
0000400A  4E4F                    6338m         TRAP    #15
0000400C  6000 0010               6339m         BRA     COMPLETE_489  
00004010                          6340m CHECKFORL_489:
00004010  1E3C 0001               6341m         MOVE.B  #$1, D7
00004014  43F8 00BD               6342m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
00004018  103C 000E               6343m         MOVE.B  #14,D0          
0000401C  4E4F                    6344m         TRAP    #15
0000401E                          6345m COMPLETE_489:  ; SIZE HAS BEEN PRINTED
0000401E                          6346m         ENDM
0000401E                          6347m         prepareAdrMode  #$1, (A2)
0000401E  3C3C 0001               6348m         MOVE.W  #$1, D6      ; INPUT VALUE
00004022  3212                    6349m         MOVE.W  (A2), D1
00004024  BC3C 0001               6350m         CMP.B   #$01, D6
00004028  6700 000C               6351m         BEQ     ADRSOURCE_490    
0000402C                          6352m ADRDEST_490:
0000402C  EF49                    6353m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000402E  E049                    6354m         LSR     #$08, D1
00004030  EA49                    6355m         LSR     #$05, D1
00004032  6000 000A               6356m         BRA     COMPLETE_490 
00004036                          6357m ADRSOURCE_490:                
00004036  E149                    6358m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004038  E549                    6359m         LSL     #$02, D1
0000403A  E049                    6360m         LSR     #$08, D1
0000403C  EA49                    6361m         LSR     #$05, D1
0000403E                          6362m COMPLETE_490:  ; OPCODE HAS BEEN VERIFIED
0000403E                          6363m         ENDM        
0000403E                          6364m         decodeAdrMode   (A2), D1
0000403E  3612                    6365m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004040  3201                    6366m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004042                          6367m 
00004042  B23C 0001               6368m         CMP.B   #$01, D1
00004046  6700 0066               6369m         BEQ     ADRREGDIRECT_491    
0000404A  B23C 0002               6370m         CMP.B   #$02, D1
0000404E  6700 00A0               6371m         BEQ     ADRREGINDIRECT_491  
00004052  B23C 0003               6372m         CMP.B   #$03, D1
00004056  6700 0102               6373m         BEQ     ADRREGPOSTINC_491  
0000405A  B23C 0004               6374m         CMP.B   #$04, D1
0000405E  6700 0178               6375m         BEQ     ADRREGPREDEC_491
00004062  B23C 0007               6376m         CMP.B   #$07, D1
00004066  6700 01EE               6377m         BEQ     ADRABSOLUTE_491    
0000406A                          6378m         
0000406A                          6379m DATAREGDIRECT_491: 
0000406A  BC3C 0001               6380m         CMP.B   #$01, D6
0000406E  6700 001E               6381m         BEQ     DATAREGDIRECTSRC_491   
00004072                          6382m DATAREGDIRECTDEST_491: 
00004072                          6383mm         PRINTDNDEST D3 
00004072  3203                    6384mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004074  E949                    6385mm         LSL     #$04, D1
00004076  E049                    6386mm         LSR     #$08, D1
00004078  EA49                    6387mm         LSR     #$05, D1
0000407A  43F8 00C1               6388mm         LEA     ODN, A1     
0000407E  103C 000E               6389mm         MOVE.B  #14,D0          
00004082  4E4F                    6390mm         TRAP    #15
00004084  103C 0003               6391mm         MOVE.B  #3,D0          
00004088  4E4F                    6392mm         TRAP    #15
0000408A                          6393mm         ENDM
0000408A  6000 0562               6394m         BRA     COMPLETE_491 
0000408E                          6395m DATAREGDIRECTSRC_491: 
0000408E                          6396mm         PRINTDNSRC D3 
0000408E  4281                    6397mm         CLR.L   D1
00004090  3203                    6398mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004092  E149                    6399mm         LSL     #$08, D1
00004094  EB49                    6400mm         LSL     #$05, D1
00004096  E049                    6401mm         LSR     #$08, D1
00004098  EA49                    6402mm         LSR     #$05, D1
0000409A  43F8 00C1               6403mm         LEA     ODN, A1     
0000409E  103C 000E               6404mm         MOVE.B  #14,D0          
000040A2  4E4F                    6405mm         TRAP    #15
000040A4  103C 0003               6406mm         MOVE.B  #3,D0          
000040A8  4E4F                    6407mm         TRAP    #15
000040AA                          6408mm         ENDM
000040AA  6000 0542               6409m         BRA     COMPLETE_491   
000040AE                          6410m         
000040AE                          6411m ADRREGDIRECT_491: 
000040AE  BC3C 0001               6412m         CMP.B   #$01, D6
000040B2  6700 001E               6413m         BEQ     ADRREGDIRECTSRC_491   
000040B6                          6414m ADRREGDIRECTDEST_491:
000040B6                          6415mm         PRINTANDEST D3
000040B6  3203                    6416mm         MOVE.W  D3, D1
000040B8  E949                    6417mm         LSL     #$04, D1
000040BA  E049                    6418mm         LSR     #$08, D1
000040BC  EA49                    6419mm         LSR     #$05, D1
000040BE  43F8 00C3               6420mm         LEA     OAN, A1     
000040C2  103C 000E               6421mm         MOVE.B  #14,D0          
000040C6  4E4F                    6422mm         TRAP    #15
000040C8  103C 0003               6423mm         MOVE.B  #3,D0          
000040CC  4E4F                    6424mm         TRAP    #15
000040CE                          6425mm         ENDM
000040CE  6000 051E               6426m         BRA     COMPLETE_491   
000040D2                          6427m ADRREGDIRECTSRC_491:
000040D2                          6428mm         PRINTANSRC D3
000040D2  3203                    6429mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000040D4  E149                    6430mm         LSL     #$08, D1
000040D6  EB49                    6431mm         LSL     #$05, D1
000040D8  E049                    6432mm         LSR     #$08, D1
000040DA  EA49                    6433mm         LSR     #$05, D1
000040DC  43F8 00C3               6434mm         LEA     OAN, A1     
000040E0  103C 000E               6435mm         MOVE.B  #14,D0          
000040E4  4E4F                    6436mm         TRAP    #15
000040E6  103C 0003               6437mm         MOVE.B  #3,D0          
000040EA  4E4F                    6438mm         TRAP    #15
000040EC                          6439mm         ENDM
000040EC  6000 0500               6440m         BRA     COMPLETE_491   
000040F0                          6441m        
000040F0                          6442m ADRREGINDIRECT_491:   
000040F0  BC3C 0001               6443m         CMP.B   #$01, D6
000040F4  6700 0032               6444m         BEQ     ADRREGINDIRECTSRC_491   
000040F8                          6445m ADRREGINDIRECTDEST_491:
000040F8                          6446mm         PRINTLB
000040F8  43F8 00C5               6447mm         LEA     OLB, A1     
000040FC  103C 000E               6448mm         MOVE.B  #14,D0          
00004100  4E4F                    6449mm         TRAP    #15
00004102                          6450mm         ENDM
00004102                          6451mm         PRINTANDEST D3  
00004102  3203                    6452mm         MOVE.W  D3, D1
00004104  E949                    6453mm         LSL     #$04, D1
00004106  E049                    6454mm         LSR     #$08, D1
00004108  EA49                    6455mm         LSR     #$05, D1
0000410A  43F8 00C3               6456mm         LEA     OAN, A1     
0000410E  103C 000E               6457mm         MOVE.B  #14,D0          
00004112  4E4F                    6458mm         TRAP    #15
00004114  103C 0003               6459mm         MOVE.B  #3,D0          
00004118  4E4F                    6460mm         TRAP    #15
0000411A                          6461mm         ENDM
0000411A                          6462mm         PRINTRB
0000411A  43F8 00C7               6463mm         LEA     ORB, A1     
0000411E  103C 000E               6464mm         MOVE.B  #14,D0          
00004122  4E4F                    6465mm         TRAP    #15
00004124                          6466mm         ENDM
00004124  6000 04C8               6467m         BRA     COMPLETE_491     
00004128                          6468m ADRREGINDIRECTSRC_491:   
00004128                          6469mm         PRINTLB
00004128  43F8 00C5               6470mm         LEA     OLB, A1     
0000412C  103C 000E               6471mm         MOVE.B  #14,D0          
00004130  4E4F                    6472mm         TRAP    #15
00004132                          6473mm         ENDM
00004132                          6474mm         PRINTANSRC D3  
00004132  3203                    6475mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004134  E149                    6476mm         LSL     #$08, D1
00004136  EB49                    6477mm         LSL     #$05, D1
00004138  E049                    6478mm         LSR     #$08, D1
0000413A  EA49                    6479mm         LSR     #$05, D1
0000413C  43F8 00C3               6480mm         LEA     OAN, A1     
00004140  103C 000E               6481mm         MOVE.B  #14,D0          
00004144  4E4F                    6482mm         TRAP    #15
00004146  103C 0003               6483mm         MOVE.B  #3,D0          
0000414A  4E4F                    6484mm         TRAP    #15
0000414C                          6485mm         ENDM
0000414C                          6486mm         PRINTRB
0000414C  43F8 00C7               6487mm         LEA     ORB, A1     
00004150  103C 000E               6488mm         MOVE.B  #14,D0          
00004154  4E4F                    6489mm         TRAP    #15
00004156                          6490mm         ENDM
00004156  6000 0496               6491m         BRA     COMPLETE_491   
0000415A                          6492m         
0000415A                          6493m ADRREGPOSTINC_491:   
0000415A  BC3C 0001               6494m         CMP.B   #$01, D6
0000415E  6700 003C               6495m         BEQ     ADRREGPOSTINCSRC_491   
00004162                          6496m ADRREGPOSTINCDEST_491: 
00004162                          6497mm         PRINTLB
00004162  43F8 00C5               6498mm         LEA     OLB, A1     
00004166  103C 000E               6499mm         MOVE.B  #14,D0          
0000416A  4E4F                    6500mm         TRAP    #15
0000416C                          6501mm         ENDM
0000416C                          6502mm         PRINTANDEST D3  
0000416C  3203                    6503mm         MOVE.W  D3, D1
0000416E  E949                    6504mm         LSL     #$04, D1
00004170  E049                    6505mm         LSR     #$08, D1
00004172  EA49                    6506mm         LSR     #$05, D1
00004174  43F8 00C3               6507mm         LEA     OAN, A1     
00004178  103C 000E               6508mm         MOVE.B  #14,D0          
0000417C  4E4F                    6509mm         TRAP    #15
0000417E  103C 0003               6510mm         MOVE.B  #3,D0          
00004182  4E4F                    6511mm         TRAP    #15
00004184                          6512mm         ENDM
00004184                          6513mm         PRINTRB
00004184  43F8 00C7               6514mm         LEA     ORB, A1     
00004188  103C 000E               6515mm         MOVE.B  #14,D0          
0000418C  4E4F                    6516mm         TRAP    #15
0000418E                          6517mm         ENDM
0000418E                          6518mm         PRINTPI
0000418E  43F8 00CE               6519mm         LEA     OPSTINC, A1     
00004192  103C 000E               6520mm         MOVE.B  #14,D0          
00004196  4E4F                    6521mm         TRAP    #15
00004198                          6522mm         ENDM
00004198  6000 0454               6523m         BRA     COMPLETE_491  
0000419C                          6524m ADRREGPOSTINCSRC_491:           
0000419C                          6525mm         PRINTLB
0000419C  43F8 00C5               6526mm         LEA     OLB, A1     
000041A0  103C 000E               6527mm         MOVE.B  #14,D0          
000041A4  4E4F                    6528mm         TRAP    #15
000041A6                          6529mm         ENDM
000041A6                          6530mm         PRINTANSRC D3  
000041A6  3203                    6531mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041A8  E149                    6532mm         LSL     #$08, D1
000041AA  EB49                    6533mm         LSL     #$05, D1
000041AC  E049                    6534mm         LSR     #$08, D1
000041AE  EA49                    6535mm         LSR     #$05, D1
000041B0  43F8 00C3               6536mm         LEA     OAN, A1     
000041B4  103C 000E               6537mm         MOVE.B  #14,D0          
000041B8  4E4F                    6538mm         TRAP    #15
000041BA  103C 0003               6539mm         MOVE.B  #3,D0          
000041BE  4E4F                    6540mm         TRAP    #15
000041C0                          6541mm         ENDM
000041C0                          6542mm         PRINTRB
000041C0  43F8 00C7               6543mm         LEA     ORB, A1     
000041C4  103C 000E               6544mm         MOVE.B  #14,D0          
000041C8  4E4F                    6545mm         TRAP    #15
000041CA                          6546mm         ENDM
000041CA                          6547mm         PRINTPI
000041CA  43F8 00CE               6548mm         LEA     OPSTINC, A1     
000041CE  103C 000E               6549mm         MOVE.B  #14,D0          
000041D2  4E4F                    6550mm         TRAP    #15
000041D4                          6551mm         ENDM
000041D4  6000 0418               6552m         BRA     COMPLETE_491  
000041D8                          6553m ADRREGPREDEC_491: 
000041D8  BC3C 0001               6554m         CMP.B   #$01, D6
000041DC  6700 003C               6555m         BEQ     ADRREGPREDECSRC_491   
000041E0                          6556m ADRREGPREDECDEST_491:
000041E0                          6557mm         PRINTPD  
000041E0  43F8 00CC               6558mm         LEA     OPREDEC, A1     
000041E4  103C 000E               6559mm         MOVE.B  #14,D0          
000041E8  4E4F                    6560mm         TRAP    #15
000041EA                          6561mm         ENDM
000041EA                          6562mm         PRINTLB
000041EA  43F8 00C5               6563mm         LEA     OLB, A1     
000041EE  103C 000E               6564mm         MOVE.B  #14,D0          
000041F2  4E4F                    6565mm         TRAP    #15
000041F4                          6566mm         ENDM
000041F4                          6567mm         PRINTANDEST D3  
000041F4  3203                    6568mm         MOVE.W  D3, D1
000041F6  E949                    6569mm         LSL     #$04, D1
000041F8  E049                    6570mm         LSR     #$08, D1
000041FA  EA49                    6571mm         LSR     #$05, D1
000041FC  43F8 00C3               6572mm         LEA     OAN, A1     
00004200  103C 000E               6573mm         MOVE.B  #14,D0          
00004204  4E4F                    6574mm         TRAP    #15
00004206  103C 0003               6575mm         MOVE.B  #3,D0          
0000420A  4E4F                    6576mm         TRAP    #15
0000420C                          6577mm         ENDM
0000420C                          6578mm         PRINTRB
0000420C  43F8 00C7               6579mm         LEA     ORB, A1     
00004210  103C 000E               6580mm         MOVE.B  #14,D0          
00004214  4E4F                    6581mm         TRAP    #15
00004216                          6582mm         ENDM
00004216  6000 03D6               6583m         BRA     COMPLETE_491   
0000421A                          6584m ADRREGPREDECSRC_491: 
0000421A                          6585mm         PRINTPD  
0000421A  43F8 00CC               6586mm         LEA     OPREDEC, A1     
0000421E  103C 000E               6587mm         MOVE.B  #14,D0          
00004222  4E4F                    6588mm         TRAP    #15
00004224                          6589mm         ENDM
00004224                          6590mm         PRINTLB
00004224  43F8 00C5               6591mm         LEA     OLB, A1     
00004228  103C 000E               6592mm         MOVE.B  #14,D0          
0000422C  4E4F                    6593mm         TRAP    #15
0000422E                          6594mm         ENDM
0000422E                          6595mm         PRINTANSRC D3  
0000422E  3203                    6596mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004230  E149                    6597mm         LSL     #$08, D1
00004232  EB49                    6598mm         LSL     #$05, D1
00004234  E049                    6599mm         LSR     #$08, D1
00004236  EA49                    6600mm         LSR     #$05, D1
00004238  43F8 00C3               6601mm         LEA     OAN, A1     
0000423C  103C 000E               6602mm         MOVE.B  #14,D0          
00004240  4E4F                    6603mm         TRAP    #15
00004242  103C 0003               6604mm         MOVE.B  #3,D0          
00004246  4E4F                    6605mm         TRAP    #15
00004248                          6606mm         ENDM
00004248                          6607mm         PRINTRB
00004248  43F8 00C7               6608mm         LEA     ORB, A1     
0000424C  103C 000E               6609mm         MOVE.B  #14,D0          
00004250  4E4F                    6610mm         TRAP    #15
00004252                          6611mm         ENDM
00004252  6000 039A               6612m         BRA     COMPLETE_491
00004256                          6613m        
00004256                          6614m ADRABSOLUTE_491:
00004256  BC3C 0001               6615m         CMP.B   #$01, D6
0000425A  6600 0018               6616m         BNE     ADRABSOLUTEDST_491 
0000425E                          6617m         
0000425E  3A03                    6618m         MOVE.W  D3, D5
00004260  0803 0002               6619m         BTST    #2, D3
00004264  6600 0024               6620m         BNE     ADRIMMEDIATE_491
00004268  0803 0000               6621m         BTST    #0, D3
0000426C  6600 0270               6622m         BNE     ADRABSOLUTEL_491
00004270  6000 01DA               6623m         BRA     ADRABSOLUTEW_491
00004274                          6624m ADRABSOLUTEDST_491:
00004274  3A03                    6625m         MOVE.W  D3, D5
00004276  0803 000B               6626m         BTST    #$B, D3
0000427A  6600 000E               6627m         BNE     ADRIMMEDIATE_491
0000427E  0803 0009               6628m         BTST    #$09, D3
00004282  6600 025A               6629m         BNE     ADRABSOLUTEL_491
00004286  6000 01C4               6630m         BRA     ADRABSOLUTEW_491
0000428A                          6631m ADRIMMEDIATE_491:
0000428A  BE3C 0001               6632m         CMP.B   #1, D7
0000428E  6700 009E               6633m         BEQ     ADRIMMEDIATEL_491
00004292                          6634m ADRIMMEDIATEW_491:
00004292  361A                    6635m         MOVE.W  (A2)+, D3
00004294                          6636mm         PRINTHASH
00004294  103C 0006               6637mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004298  323C 0023               6638mm         MOVE.W  #35, D1     ; AN = SIGN
0000429C  4E4F                    6639mm         TRAP    #15         ; OUTPUT = SIGN
0000429E                          6640mm         ENDM
0000429E                          6641mm         PRINTSIGN
0000429E  103C 0006               6642mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042A2  323C 0024               6643mm         MOVE.W  #36, D1     ; AN = SIGN
000042A6  4E4F                    6644mm         TRAP    #15         ; OUTPUT = SIGN
000042A8                          6645mm         ENDM
000042A8                          6646mm         ADROUT
000042A8  3212                    6647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042AA  E049                    6648mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042AC  E849                    6649mm         LSR.W   #4, D1      
000042AE                          6650mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042AE  0C01 0009               6651mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042B2  6E00 000A               6652mmm         BGT     ALPHA_521
000042B6  0601 0030               6653mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042BA  6000 0006               6654mmm         BRA     DONE_521
000042BE  0601 0037               6655mmm ALPHA_521: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042C2  4E71                    6656mmm DONE_521: NOP
000042C4                          6657mmm         ENDM
000042C4  4E4F                    6658mm         TRAP    #15         ; EXECUTE OUTPUT
000042C6                          6659mm         
000042C6  3212                    6660mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042C8  E949                    6661mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000042CA  E049                    6662mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042CC  E849                    6663mm         LSR.W   #4, D1      
000042CE                          6664mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042CE  0C01 0009               6665mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042D2  6E00 000A               6666mmm         BGT     ALPHA_522
000042D6  0601 0030               6667mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042DA  6000 0006               6668mmm         BRA     DONE_522
000042DE  0601 0037               6669mmm ALPHA_522: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042E2  4E71                    6670mmm DONE_522: NOP
000042E4                          6671mmm         ENDM
000042E4  4E4F                    6672mm         TRAP    #15         ; EXECUTE OUTPUT
000042E6                          6673mm         
000042E6  3212                    6674mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042E8  E149                    6675mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000042EA  E049                    6676mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042EC  E849                    6677mm         LSR.W   #4, D1      
000042EE                          6678mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042EE  0C01 0009               6679mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042F2  6E00 000A               6680mmm         BGT     ALPHA_523
000042F6  0601 0030               6681mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042FA  6000 0006               6682mmm         BRA     DONE_523
000042FE  0601 0037               6683mmm ALPHA_523: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004302  4E71                    6684mmm DONE_523: NOP
00004304                          6685mmm         ENDM
00004304  4E4F                    6686mm         TRAP    #15         ; EXECUTE OUTPUT
00004306                          6687mm         
00004306  3212                    6688mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004308  E149                    6689mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000430A  E949                    6690mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000430C  E049                    6691mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000430E  E849                    6692mm         LSR.W   #4, D1      
00004310                          6693mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004310  0C01 0009               6694mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004314  6E00 000A               6695mmm         BGT     ALPHA_524
00004318  0601 0030               6696mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000431C  6000 0006               6697mmm         BRA     DONE_524
00004320  0601 0037               6698mmm ALPHA_524: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004324  4E71                    6699mmm DONE_524: NOP
00004326                          6700mmm         ENDM
00004326  4E4F                    6701mm         TRAP    #15         ; EXECUTE OUTPUT       
00004328                          6702mm         ENDM 
00004328  3605                    6703m         MOVE.W  D5, D3
0000432A  6000 02C2               6704m         BRA     COMPLETE_491
0000432E                          6705m ADRIMMEDIATEL_491:
0000432E  361A                    6706m         MOVE.W  (A2)+, D3
00004330                          6707mm         PRINTHASH
00004330  103C 0006               6708mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004334  323C 0023               6709mm         MOVE.W  #35, D1     ; AN = SIGN
00004338  4E4F                    6710mm         TRAP    #15         ; OUTPUT = SIGN
0000433A                          6711mm         ENDM
0000433A                          6712mm         PRINTSIGN
0000433A  103C 0006               6713mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000433E  323C 0024               6714mm         MOVE.W  #36, D1     ; AN = SIGN
00004342  4E4F                    6715mm         TRAP    #15         ; OUTPUT = SIGN
00004344                          6716mm         ENDM
00004344                          6717mm         ADROUT 
00004344  3212                    6718mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004346  E049                    6719mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004348  E849                    6720mm         LSR.W   #4, D1      
0000434A                          6721mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000434A  0C01 0009               6722mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000434E  6E00 000A               6723mmm         BGT     ALPHA_528
00004352  0601 0030               6724mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004356  6000 0006               6725mmm         BRA     DONE_528
0000435A  0601 0037               6726mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000435E  4E71                    6727mmm DONE_528: NOP
00004360                          6728mmm         ENDM
00004360  4E4F                    6729mm         TRAP    #15         ; EXECUTE OUTPUT
00004362                          6730mm         
00004362  3212                    6731mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004364  E949                    6732mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004366  E049                    6733mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004368  E849                    6734mm         LSR.W   #4, D1      
0000436A                          6735mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000436A  0C01 0009               6736mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000436E  6E00 000A               6737mmm         BGT     ALPHA_529
00004372  0601 0030               6738mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004376  6000 0006               6739mmm         BRA     DONE_529
0000437A  0601 0037               6740mmm ALPHA_529: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000437E  4E71                    6741mmm DONE_529: NOP
00004380                          6742mmm         ENDM
00004380  4E4F                    6743mm         TRAP    #15         ; EXECUTE OUTPUT
00004382                          6744mm         
00004382  3212                    6745mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004384  E149                    6746mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004386  E049                    6747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004388  E849                    6748mm         LSR.W   #4, D1      
0000438A                          6749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000438A  0C01 0009               6750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000438E  6E00 000A               6751mmm         BGT     ALPHA_530
00004392  0601 0030               6752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004396  6000 0006               6753mmm         BRA     DONE_530
0000439A  0601 0037               6754mmm ALPHA_530: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000439E  4E71                    6755mmm DONE_530: NOP
000043A0                          6756mmm         ENDM
000043A0  4E4F                    6757mm         TRAP    #15         ; EXECUTE OUTPUT
000043A2                          6758mm         
000043A2  3212                    6759mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A4  E149                    6760mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043A6  E949                    6761mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043A8  E049                    6762mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043AA  E849                    6763mm         LSR.W   #4, D1      
000043AC                          6764mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043AC  0C01 0009               6765mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043B0  6E00 000A               6766mmm         BGT     ALPHA_531
000043B4  0601 0030               6767mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B8  6000 0006               6768mmm         BRA     DONE_531
000043BC  0601 0037               6769mmm ALPHA_531: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043C0  4E71                    6770mmm DONE_531: NOP
000043C2                          6771mmm         ENDM
000043C2  4E4F                    6772mm         TRAP    #15         ; EXECUTE OUTPUT       
000043C4                          6773mm         ENDM 
000043C4  361A                    6774m         MOVE.W  (A2)+, D3
000043C6                          6775mm         ADROUT
000043C6  3212                    6776mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043C8  E049                    6777mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043CA  E849                    6778mm         LSR.W   #4, D1      
000043CC                          6779mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043CC  0C01 0009               6780mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043D0  6E00 000A               6781mmm         BGT     ALPHA_533
000043D4  0601 0030               6782mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D8  6000 0006               6783mmm         BRA     DONE_533
000043DC  0601 0037               6784mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043E0  4E71                    6785mmm DONE_533: NOP
000043E2                          6786mmm         ENDM
000043E2  4E4F                    6787mm         TRAP    #15         ; EXECUTE OUTPUT
000043E4                          6788mm         
000043E4  3212                    6789mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043E6  E949                    6790mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043E8  E049                    6791mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043EA  E849                    6792mm         LSR.W   #4, D1      
000043EC                          6793mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043EC  0C01 0009               6794mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043F0  6E00 000A               6795mmm         BGT     ALPHA_534
000043F4  0601 0030               6796mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F8  6000 0006               6797mmm         BRA     DONE_534
000043FC  0601 0037               6798mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004400  4E71                    6799mmm DONE_534: NOP
00004402                          6800mmm         ENDM
00004402  4E4F                    6801mm         TRAP    #15         ; EXECUTE OUTPUT
00004404                          6802mm         
00004404  3212                    6803mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004406  E149                    6804mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004408  E049                    6805mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000440A  E849                    6806mm         LSR.W   #4, D1      
0000440C                          6807mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000440C  0C01 0009               6808mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004410  6E00 000A               6809mmm         BGT     ALPHA_535
00004414  0601 0030               6810mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004418  6000 0006               6811mmm         BRA     DONE_535
0000441C  0601 0037               6812mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004420  4E71                    6813mmm DONE_535: NOP
00004422                          6814mmm         ENDM
00004422  4E4F                    6815mm         TRAP    #15         ; EXECUTE OUTPUT
00004424                          6816mm         
00004424  3212                    6817mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004426  E149                    6818mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004428  E949                    6819mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000442A  E049                    6820mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000442C  E849                    6821mm         LSR.W   #4, D1      
0000442E                          6822mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000442E  0C01 0009               6823mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004432  6E00 000A               6824mmm         BGT     ALPHA_536
00004436  0601 0030               6825mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000443A  6000 0006               6826mmm         BRA     DONE_536
0000443E  0601 0037               6827mmm ALPHA_536: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004442  4E71                    6828mmm DONE_536: NOP
00004444                          6829mmm         ENDM
00004444  4E4F                    6830mm         TRAP    #15         ; EXECUTE OUTPUT       
00004446                          6831mm         ENDM 
00004446  3605                    6832m         MOVE.W  D5, D3
00004448  6000 01A4               6833m         BRA     COMPLETE_491 
0000444C                          6834m ADRABSOLUTEW_491:     
0000444C  361A                    6835m         MOVE.W  (A2)+, D3
0000444E                          6836mm         PRINTSIGN
0000444E  103C 0006               6837mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004452  323C 0024               6838mm         MOVE.W  #36, D1     ; AN = SIGN
00004456  4E4F                    6839mm         TRAP    #15         ; OUTPUT = SIGN
00004458                          6840mm         ENDM
00004458                          6841mm         ADROUT
00004458  3212                    6842mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000445A  E049                    6843mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000445C  E849                    6844mm         LSR.W   #4, D1      
0000445E                          6845mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000445E  0C01 0009               6846mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004462  6E00 000A               6847mmm         BGT     ALPHA_539
00004466  0601 0030               6848mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000446A  6000 0006               6849mmm         BRA     DONE_539
0000446E  0601 0037               6850mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004472  4E71                    6851mmm DONE_539: NOP
00004474                          6852mmm         ENDM
00004474  4E4F                    6853mm         TRAP    #15         ; EXECUTE OUTPUT
00004476                          6854mm         
00004476  3212                    6855mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004478  E949                    6856mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000447A  E049                    6857mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000447C  E849                    6858mm         LSR.W   #4, D1      
0000447E                          6859mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000447E  0C01 0009               6860mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004482  6E00 000A               6861mmm         BGT     ALPHA_540
00004486  0601 0030               6862mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000448A  6000 0006               6863mmm         BRA     DONE_540
0000448E  0601 0037               6864mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004492  4E71                    6865mmm DONE_540: NOP
00004494                          6866mmm         ENDM
00004494  4E4F                    6867mm         TRAP    #15         ; EXECUTE OUTPUT
00004496                          6868mm         
00004496  3212                    6869mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004498  E149                    6870mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000449A  E049                    6871mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449C  E849                    6872mm         LSR.W   #4, D1      
0000449E                          6873mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449E  0C01 0009               6874mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A2  6E00 000A               6875mmm         BGT     ALPHA_541
000044A6  0601 0030               6876mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044AA  6000 0006               6877mmm         BRA     DONE_541
000044AE  0601 0037               6878mmm ALPHA_541: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B2  4E71                    6879mmm DONE_541: NOP
000044B4                          6880mmm         ENDM
000044B4  4E4F                    6881mm         TRAP    #15         ; EXECUTE OUTPUT
000044B6                          6882mm         
000044B6  3212                    6883mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044B8  E149                    6884mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044BA  E949                    6885mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044BC  E049                    6886mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BE  E849                    6887mm         LSR.W   #4, D1      
000044C0                          6888mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044C0  0C01 0009               6889mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C4  6E00 000A               6890mmm         BGT     ALPHA_542
000044C8  0601 0030               6891mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CC  6000 0006               6892mmm         BRA     DONE_542
000044D0  0601 0037               6893mmm ALPHA_542: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D4  4E71                    6894mmm DONE_542: NOP
000044D6                          6895mmm         ENDM
000044D6  4E4F                    6896mm         TRAP    #15         ; EXECUTE OUTPUT       
000044D8                          6897mm         ENDM 
000044D8  3605                    6898m         MOVE.W  D5, D3
000044DA  6000 0112               6899m         BRA     COMPLETE_491  
000044DE                          6900m ADRABSOLUTEL_491:  
000044DE  361A                    6901m         MOVE.W  (A2)+, D3
000044E0                          6902mm         PRINTSIGN
000044E0  103C 0006               6903mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044E4  323C 0024               6904mm         MOVE.W  #36, D1     ; AN = SIGN
000044E8  4E4F                    6905mm         TRAP    #15         ; OUTPUT = SIGN
000044EA                          6906mm         ENDM
000044EA                          6907mm         ADROUT 
000044EA  3212                    6908mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044EC  E049                    6909mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044EE  E849                    6910mm         LSR.W   #4, D1      
000044F0                          6911mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044F0  0C01 0009               6912mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044F4  6E00 000A               6913mmm         BGT     ALPHA_545
000044F8  0601 0030               6914mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044FC  6000 0006               6915mmm         BRA     DONE_545
00004500  0601 0037               6916mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004504  4E71                    6917mmm DONE_545: NOP
00004506                          6918mmm         ENDM
00004506  4E4F                    6919mm         TRAP    #15         ; EXECUTE OUTPUT
00004508                          6920mm         
00004508  3212                    6921mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000450A  E949                    6922mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000450C  E049                    6923mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000450E  E849                    6924mm         LSR.W   #4, D1      
00004510                          6925mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004510  0C01 0009               6926mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004514  6E00 000A               6927mmm         BGT     ALPHA_546
00004518  0601 0030               6928mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000451C  6000 0006               6929mmm         BRA     DONE_546
00004520  0601 0037               6930mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004524  4E71                    6931mmm DONE_546: NOP
00004526                          6932mmm         ENDM
00004526  4E4F                    6933mm         TRAP    #15         ; EXECUTE OUTPUT
00004528                          6934mm         
00004528  3212                    6935mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000452A  E149                    6936mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000452C  E049                    6937mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000452E  E849                    6938mm         LSR.W   #4, D1      
00004530                          6939mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004530  0C01 0009               6940mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004534  6E00 000A               6941mmm         BGT     ALPHA_547
00004538  0601 0030               6942mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000453C  6000 0006               6943mmm         BRA     DONE_547
00004540  0601 0037               6944mmm ALPHA_547: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004544  4E71                    6945mmm DONE_547: NOP
00004546                          6946mmm         ENDM
00004546  4E4F                    6947mm         TRAP    #15         ; EXECUTE OUTPUT
00004548                          6948mm         
00004548  3212                    6949mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000454A  E149                    6950mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000454C  E949                    6951mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000454E  E049                    6952mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004550  E849                    6953mm         LSR.W   #4, D1      
00004552                          6954mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004552  0C01 0009               6955mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004556  6E00 000A               6956mmm         BGT     ALPHA_548
0000455A  0601 0030               6957mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000455E  6000 0006               6958mmm         BRA     DONE_548
00004562  0601 0037               6959mmm ALPHA_548: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004566  4E71                    6960mmm DONE_548: NOP
00004568                          6961mmm         ENDM
00004568  4E4F                    6962mm         TRAP    #15         ; EXECUTE OUTPUT       
0000456A                          6963mm         ENDM 
0000456A  361A                    6964m         MOVE.W  (A2)+, D3
0000456C                          6965mm         ADROUT
0000456C  3212                    6966mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000456E  E049                    6967mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004570  E849                    6968mm         LSR.W   #4, D1      
00004572                          6969mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004572  0C01 0009               6970mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004576  6E00 000A               6971mmm         BGT     ALPHA_550
0000457A  0601 0030               6972mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000457E  6000 0006               6973mmm         BRA     DONE_550
00004582  0601 0037               6974mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004586  4E71                    6975mmm DONE_550: NOP
00004588                          6976mmm         ENDM
00004588  4E4F                    6977mm         TRAP    #15         ; EXECUTE OUTPUT
0000458A                          6978mm         
0000458A  3212                    6979mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000458C  E949                    6980mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000458E  E049                    6981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004590  E849                    6982mm         LSR.W   #4, D1      
00004592                          6983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004592  0C01 0009               6984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004596  6E00 000A               6985mmm         BGT     ALPHA_551
0000459A  0601 0030               6986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000459E  6000 0006               6987mmm         BRA     DONE_551
000045A2  0601 0037               6988mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045A6  4E71                    6989mmm DONE_551: NOP
000045A8                          6990mmm         ENDM
000045A8  4E4F                    6991mm         TRAP    #15         ; EXECUTE OUTPUT
000045AA                          6992mm         
000045AA  3212                    6993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045AC  E149                    6994mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045AE  E049                    6995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B0  E849                    6996mm         LSR.W   #4, D1      
000045B2                          6997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B2  0C01 0009               6998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045B6  6E00 000A               6999mmm         BGT     ALPHA_552
000045BA  0601 0030               7000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045BE  6000 0006               7001mmm         BRA     DONE_552
000045C2  0601 0037               7002mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045C6  4E71                    7003mmm DONE_552: NOP
000045C8                          7004mmm         ENDM
000045C8  4E4F                    7005mm         TRAP    #15         ; EXECUTE OUTPUT
000045CA                          7006mm         
000045CA  3212                    7007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045CC  E149                    7008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045CE  E949                    7009mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045D0  E049                    7010mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D2  E849                    7011mm         LSR.W   #4, D1      
000045D4                          7012mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045D4  0C01 0009               7013mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045D8  6E00 000A               7014mmm         BGT     ALPHA_553
000045DC  0601 0030               7015mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045E0  6000 0006               7016mmm         BRA     DONE_553
000045E4  0601 0037               7017mmm ALPHA_553: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045E8  4E71                    7018mmm DONE_553: NOP
000045EA                          7019mmm         ENDM
000045EA  4E4F                    7020mm         TRAP    #15         ; EXECUTE OUTPUT       
000045EC                          7021mm         ENDM 
000045EC  3605                    7022m         MOVE.W  D5, D3
000045EE                          7023m 
000045EE                          7024m COMPLETE_491:  ; OPCODE HAS BEEN VERIFIED
000045EE                          7025m         ENDM
000045EE                          7026m         printComma
000045EE  43F8 00C9               7027m         LEA     OCOMMA, A1     
000045F2  103C 000E               7028m         MOVE.B  #14,D0          
000045F6  4E4F                    7029m         TRAP    #15
000045F8                          7030m         ENDM
000045F8                          7031m         printDnDest     D3
000045F8  3203                    7032m         MOVE.W  D3, D1      ; BITS 9 TO 11
000045FA  E949                    7033m         LSL     #$04, D1
000045FC  E049                    7034m         LSR     #$08, D1
000045FE  EA49                    7035m         LSR     #$05, D1
00004600  43F8 00C1               7036m         LEA     ODN, A1     
00004604  103C 000E               7037m         MOVE.B  #14,D0          
00004608  4E4F                    7038m         TRAP    #15
0000460A  103C 0003               7039m         MOVE.B  #3,D0          
0000460E  4E4F                    7040m         TRAP    #15
00004610                          7041m         ENDM
00004610  4E75                    7042          RTS                 ; Return from decodeDIVU subroutine
00004612                          7043  
00004612                          7044  
00004612                          7045  ; ------------------------------------------------------------
00004612                          7046  ; 8. "decodeLEA" subroutine
00004612                          7047  ; AUTHOR
00004612                          7048  ;
00004612                          7049  ; TODO: DESCRIPTION
00004612                          7050  ; ------------------------------------------------------------
00004612                          7051  decodeLEA:
00004612                          7052m         verifyOpcode    pLEA, (A2)
00004612  43F8 014B               7053m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004616  3612                    7054m         MOVE.W  (A2), D3      ; INPUT VALUE
00004618  123C 000F               7055m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000461C                          7056m         
0000461C                          7057m LOOP_556: 
0000461C  0C11 0030               7058m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004620  6700 000E               7059m         BEQ     CHECKFOR0_556
00004624  0C11 0031               7060m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004628  6700 0010               7061m         BEQ     CHECKFOR1_556
0000462C  6000 0012               7062m         BRA     NEXT_556      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004630                          7063m         
00004630                          7064m CHECKFOR0_556: 
00004630  0303                    7065m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004632  6600 2550               7066m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004636  6000 0008               7067m         BRA     NEXT_556
0000463A                          7068m 
0000463A                          7069m CHECKFOR1_556:
0000463A  0303                    7070m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000463C  6700 2546               7071m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004640                          7072m 
00004640                          7073m NEXT_556: 
00004640  B23C 0000               7074m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004644  6700 0008               7075m         BEQ     COMPLETE_556  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004648  5301                    7076m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000464A  1819                    7077m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000464C  60CE                    7078m         BRA     LOOP_556      ; BEGIN LOOP AGAIN
0000464E                          7079m 
0000464E                          7080m COMPLETE_556:  ; OPCODE HAS BEEN VERIFIED
0000464E                          7081m         ENDM
0000464E  43F8 0081               7082          LEA     oLEA, A1     
00004652  103C 000E               7083          MOVE.B  #14,D0          
00004656  4E4F                    7084          TRAP    #15
00004658                          7085          
00004658  43F8 00D2               7086          LEA     oBlank, A1     
0000465C  103C 000E               7087          MOVE.B  #14,D0          
00004660  4E4F                    7088          TRAP    #15
00004662                          7089          
00004662                          7090m         prepareAdrMode  #$1, (A2)
00004662  3C3C 0001               7091m         MOVE.W  #$1, D6      ; INPUT VALUE
00004666  3212                    7092m         MOVE.W  (A2), D1
00004668  BC3C 0001               7093m         CMP.B   #$01, D6
0000466C  6700 000C               7094m         BEQ     ADRSOURCE_557    
00004670                          7095m ADRDEST_557:
00004670  EF49                    7096m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004672  E049                    7097m         LSR     #$08, D1
00004674  EA49                    7098m         LSR     #$05, D1
00004676  6000 000A               7099m         BRA     COMPLETE_557 
0000467A                          7100m ADRSOURCE_557:                
0000467A  E149                    7101m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000467C  E549                    7102m         LSL     #$02, D1
0000467E  E049                    7103m         LSR     #$08, D1
00004680  EA49                    7104m         LSR     #$05, D1
00004682                          7105m COMPLETE_557:  ; OPCODE HAS BEEN VERIFIED
00004682                          7106m         ENDM        
00004682                          7107m         decodeAdrMode   (A2), D1
00004682  3612                    7108m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004684  3201                    7109m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004686                          7110m 
00004686  B23C 0001               7111m         CMP.B   #$01, D1
0000468A  6700 0066               7112m         BEQ     ADRREGDIRECT_558    
0000468E  B23C 0002               7113m         CMP.B   #$02, D1
00004692  6700 00A0               7114m         BEQ     ADRREGINDIRECT_558  
00004696  B23C 0003               7115m         CMP.B   #$03, D1
0000469A  6700 0102               7116m         BEQ     ADRREGPOSTINC_558  
0000469E  B23C 0004               7117m         CMP.B   #$04, D1
000046A2  6700 0178               7118m         BEQ     ADRREGPREDEC_558
000046A6  B23C 0007               7119m         CMP.B   #$07, D1
000046AA  6700 01EE               7120m         BEQ     ADRABSOLUTE_558    
000046AE                          7121m         
000046AE                          7122m DATAREGDIRECT_558: 
000046AE  BC3C 0001               7123m         CMP.B   #$01, D6
000046B2  6700 001E               7124m         BEQ     DATAREGDIRECTSRC_558   
000046B6                          7125m DATAREGDIRECTDEST_558: 
000046B6                          7126mm         PRINTDNDEST D3 
000046B6  3203                    7127mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000046B8  E949                    7128mm         LSL     #$04, D1
000046BA  E049                    7129mm         LSR     #$08, D1
000046BC  EA49                    7130mm         LSR     #$05, D1
000046BE  43F8 00C1               7131mm         LEA     ODN, A1     
000046C2  103C 000E               7132mm         MOVE.B  #14,D0          
000046C6  4E4F                    7133mm         TRAP    #15
000046C8  103C 0003               7134mm         MOVE.B  #3,D0          
000046CC  4E4F                    7135mm         TRAP    #15
000046CE                          7136mm         ENDM
000046CE  6000 0562               7137m         BRA     COMPLETE_558 
000046D2                          7138m DATAREGDIRECTSRC_558: 
000046D2                          7139mm         PRINTDNSRC D3 
000046D2  4281                    7140mm         CLR.L   D1
000046D4  3203                    7141mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000046D6  E149                    7142mm         LSL     #$08, D1
000046D8  EB49                    7143mm         LSL     #$05, D1
000046DA  E049                    7144mm         LSR     #$08, D1
000046DC  EA49                    7145mm         LSR     #$05, D1
000046DE  43F8 00C1               7146mm         LEA     ODN, A1     
000046E2  103C 000E               7147mm         MOVE.B  #14,D0          
000046E6  4E4F                    7148mm         TRAP    #15
000046E8  103C 0003               7149mm         MOVE.B  #3,D0          
000046EC  4E4F                    7150mm         TRAP    #15
000046EE                          7151mm         ENDM
000046EE  6000 0542               7152m         BRA     COMPLETE_558   
000046F2                          7153m         
000046F2                          7154m ADRREGDIRECT_558: 
000046F2  BC3C 0001               7155m         CMP.B   #$01, D6
000046F6  6700 001E               7156m         BEQ     ADRREGDIRECTSRC_558   
000046FA                          7157m ADRREGDIRECTDEST_558:
000046FA                          7158mm         PRINTANDEST D3
000046FA  3203                    7159mm         MOVE.W  D3, D1
000046FC  E949                    7160mm         LSL     #$04, D1
000046FE  E049                    7161mm         LSR     #$08, D1
00004700  EA49                    7162mm         LSR     #$05, D1
00004702  43F8 00C3               7163mm         LEA     OAN, A1     
00004706  103C 000E               7164mm         MOVE.B  #14,D0          
0000470A  4E4F                    7165mm         TRAP    #15
0000470C  103C 0003               7166mm         MOVE.B  #3,D0          
00004710  4E4F                    7167mm         TRAP    #15
00004712                          7168mm         ENDM
00004712  6000 051E               7169m         BRA     COMPLETE_558   
00004716                          7170m ADRREGDIRECTSRC_558:
00004716                          7171mm         PRINTANSRC D3
00004716  3203                    7172mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004718  E149                    7173mm         LSL     #$08, D1
0000471A  EB49                    7174mm         LSL     #$05, D1
0000471C  E049                    7175mm         LSR     #$08, D1
0000471E  EA49                    7176mm         LSR     #$05, D1
00004720  43F8 00C3               7177mm         LEA     OAN, A1     
00004724  103C 000E               7178mm         MOVE.B  #14,D0          
00004728  4E4F                    7179mm         TRAP    #15
0000472A  103C 0003               7180mm         MOVE.B  #3,D0          
0000472E  4E4F                    7181mm         TRAP    #15
00004730                          7182mm         ENDM
00004730  6000 0500               7183m         BRA     COMPLETE_558   
00004734                          7184m        
00004734                          7185m ADRREGINDIRECT_558:   
00004734  BC3C 0001               7186m         CMP.B   #$01, D6
00004738  6700 0032               7187m         BEQ     ADRREGINDIRECTSRC_558   
0000473C                          7188m ADRREGINDIRECTDEST_558:
0000473C                          7189mm         PRINTLB
0000473C  43F8 00C5               7190mm         LEA     OLB, A1     
00004740  103C 000E               7191mm         MOVE.B  #14,D0          
00004744  4E4F                    7192mm         TRAP    #15
00004746                          7193mm         ENDM
00004746                          7194mm         PRINTANDEST D3  
00004746  3203                    7195mm         MOVE.W  D3, D1
00004748  E949                    7196mm         LSL     #$04, D1
0000474A  E049                    7197mm         LSR     #$08, D1
0000474C  EA49                    7198mm         LSR     #$05, D1
0000474E  43F8 00C3               7199mm         LEA     OAN, A1     
00004752  103C 000E               7200mm         MOVE.B  #14,D0          
00004756  4E4F                    7201mm         TRAP    #15
00004758  103C 0003               7202mm         MOVE.B  #3,D0          
0000475C  4E4F                    7203mm         TRAP    #15
0000475E                          7204mm         ENDM
0000475E                          7205mm         PRINTRB
0000475E  43F8 00C7               7206mm         LEA     ORB, A1     
00004762  103C 000E               7207mm         MOVE.B  #14,D0          
00004766  4E4F                    7208mm         TRAP    #15
00004768                          7209mm         ENDM
00004768  6000 04C8               7210m         BRA     COMPLETE_558     
0000476C                          7211m ADRREGINDIRECTSRC_558:   
0000476C                          7212mm         PRINTLB
0000476C  43F8 00C5               7213mm         LEA     OLB, A1     
00004770  103C 000E               7214mm         MOVE.B  #14,D0          
00004774  4E4F                    7215mm         TRAP    #15
00004776                          7216mm         ENDM
00004776                          7217mm         PRINTANSRC D3  
00004776  3203                    7218mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004778  E149                    7219mm         LSL     #$08, D1
0000477A  EB49                    7220mm         LSL     #$05, D1
0000477C  E049                    7221mm         LSR     #$08, D1
0000477E  EA49                    7222mm         LSR     #$05, D1
00004780  43F8 00C3               7223mm         LEA     OAN, A1     
00004784  103C 000E               7224mm         MOVE.B  #14,D0          
00004788  4E4F                    7225mm         TRAP    #15
0000478A  103C 0003               7226mm         MOVE.B  #3,D0          
0000478E  4E4F                    7227mm         TRAP    #15
00004790                          7228mm         ENDM
00004790                          7229mm         PRINTRB
00004790  43F8 00C7               7230mm         LEA     ORB, A1     
00004794  103C 000E               7231mm         MOVE.B  #14,D0          
00004798  4E4F                    7232mm         TRAP    #15
0000479A                          7233mm         ENDM
0000479A  6000 0496               7234m         BRA     COMPLETE_558   
0000479E                          7235m         
0000479E                          7236m ADRREGPOSTINC_558:   
0000479E  BC3C 0001               7237m         CMP.B   #$01, D6
000047A2  6700 003C               7238m         BEQ     ADRREGPOSTINCSRC_558   
000047A6                          7239m ADRREGPOSTINCDEST_558: 
000047A6                          7240mm         PRINTLB
000047A6  43F8 00C5               7241mm         LEA     OLB, A1     
000047AA  103C 000E               7242mm         MOVE.B  #14,D0          
000047AE  4E4F                    7243mm         TRAP    #15
000047B0                          7244mm         ENDM
000047B0                          7245mm         PRINTANDEST D3  
000047B0  3203                    7246mm         MOVE.W  D3, D1
000047B2  E949                    7247mm         LSL     #$04, D1
000047B4  E049                    7248mm         LSR     #$08, D1
000047B6  EA49                    7249mm         LSR     #$05, D1
000047B8  43F8 00C3               7250mm         LEA     OAN, A1     
000047BC  103C 000E               7251mm         MOVE.B  #14,D0          
000047C0  4E4F                    7252mm         TRAP    #15
000047C2  103C 0003               7253mm         MOVE.B  #3,D0          
000047C6  4E4F                    7254mm         TRAP    #15
000047C8                          7255mm         ENDM
000047C8                          7256mm         PRINTRB
000047C8  43F8 00C7               7257mm         LEA     ORB, A1     
000047CC  103C 000E               7258mm         MOVE.B  #14,D0          
000047D0  4E4F                    7259mm         TRAP    #15
000047D2                          7260mm         ENDM
000047D2                          7261mm         PRINTPI
000047D2  43F8 00CE               7262mm         LEA     OPSTINC, A1     
000047D6  103C 000E               7263mm         MOVE.B  #14,D0          
000047DA  4E4F                    7264mm         TRAP    #15
000047DC                          7265mm         ENDM
000047DC  6000 0454               7266m         BRA     COMPLETE_558  
000047E0                          7267m ADRREGPOSTINCSRC_558:           
000047E0                          7268mm         PRINTLB
000047E0  43F8 00C5               7269mm         LEA     OLB, A1     
000047E4  103C 000E               7270mm         MOVE.B  #14,D0          
000047E8  4E4F                    7271mm         TRAP    #15
000047EA                          7272mm         ENDM
000047EA                          7273mm         PRINTANSRC D3  
000047EA  3203                    7274mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047EC  E149                    7275mm         LSL     #$08, D1
000047EE  EB49                    7276mm         LSL     #$05, D1
000047F0  E049                    7277mm         LSR     #$08, D1
000047F2  EA49                    7278mm         LSR     #$05, D1
000047F4  43F8 00C3               7279mm         LEA     OAN, A1     
000047F8  103C 000E               7280mm         MOVE.B  #14,D0          
000047FC  4E4F                    7281mm         TRAP    #15
000047FE  103C 0003               7282mm         MOVE.B  #3,D0          
00004802  4E4F                    7283mm         TRAP    #15
00004804                          7284mm         ENDM
00004804                          7285mm         PRINTRB
00004804  43F8 00C7               7286mm         LEA     ORB, A1     
00004808  103C 000E               7287mm         MOVE.B  #14,D0          
0000480C  4E4F                    7288mm         TRAP    #15
0000480E                          7289mm         ENDM
0000480E                          7290mm         PRINTPI
0000480E  43F8 00CE               7291mm         LEA     OPSTINC, A1     
00004812  103C 000E               7292mm         MOVE.B  #14,D0          
00004816  4E4F                    7293mm         TRAP    #15
00004818                          7294mm         ENDM
00004818  6000 0418               7295m         BRA     COMPLETE_558  
0000481C                          7296m ADRREGPREDEC_558: 
0000481C  BC3C 0001               7297m         CMP.B   #$01, D6
00004820  6700 003C               7298m         BEQ     ADRREGPREDECSRC_558   
00004824                          7299m ADRREGPREDECDEST_558:
00004824                          7300mm         PRINTPD  
00004824  43F8 00CC               7301mm         LEA     OPREDEC, A1     
00004828  103C 000E               7302mm         MOVE.B  #14,D0          
0000482C  4E4F                    7303mm         TRAP    #15
0000482E                          7304mm         ENDM
0000482E                          7305mm         PRINTLB
0000482E  43F8 00C5               7306mm         LEA     OLB, A1     
00004832  103C 000E               7307mm         MOVE.B  #14,D0          
00004836  4E4F                    7308mm         TRAP    #15
00004838                          7309mm         ENDM
00004838                          7310mm         PRINTANDEST D3  
00004838  3203                    7311mm         MOVE.W  D3, D1
0000483A  E949                    7312mm         LSL     #$04, D1
0000483C  E049                    7313mm         LSR     #$08, D1
0000483E  EA49                    7314mm         LSR     #$05, D1
00004840  43F8 00C3               7315mm         LEA     OAN, A1     
00004844  103C 000E               7316mm         MOVE.B  #14,D0          
00004848  4E4F                    7317mm         TRAP    #15
0000484A  103C 0003               7318mm         MOVE.B  #3,D0          
0000484E  4E4F                    7319mm         TRAP    #15
00004850                          7320mm         ENDM
00004850                          7321mm         PRINTRB
00004850  43F8 00C7               7322mm         LEA     ORB, A1     
00004854  103C 000E               7323mm         MOVE.B  #14,D0          
00004858  4E4F                    7324mm         TRAP    #15
0000485A                          7325mm         ENDM
0000485A  6000 03D6               7326m         BRA     COMPLETE_558   
0000485E                          7327m ADRREGPREDECSRC_558: 
0000485E                          7328mm         PRINTPD  
0000485E  43F8 00CC               7329mm         LEA     OPREDEC, A1     
00004862  103C 000E               7330mm         MOVE.B  #14,D0          
00004866  4E4F                    7331mm         TRAP    #15
00004868                          7332mm         ENDM
00004868                          7333mm         PRINTLB
00004868  43F8 00C5               7334mm         LEA     OLB, A1     
0000486C  103C 000E               7335mm         MOVE.B  #14,D0          
00004870  4E4F                    7336mm         TRAP    #15
00004872                          7337mm         ENDM
00004872                          7338mm         PRINTANSRC D3  
00004872  3203                    7339mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004874  E149                    7340mm         LSL     #$08, D1
00004876  EB49                    7341mm         LSL     #$05, D1
00004878  E049                    7342mm         LSR     #$08, D1
0000487A  EA49                    7343mm         LSR     #$05, D1
0000487C  43F8 00C3               7344mm         LEA     OAN, A1     
00004880  103C 000E               7345mm         MOVE.B  #14,D0          
00004884  4E4F                    7346mm         TRAP    #15
00004886  103C 0003               7347mm         MOVE.B  #3,D0          
0000488A  4E4F                    7348mm         TRAP    #15
0000488C                          7349mm         ENDM
0000488C                          7350mm         PRINTRB
0000488C  43F8 00C7               7351mm         LEA     ORB, A1     
00004890  103C 000E               7352mm         MOVE.B  #14,D0          
00004894  4E4F                    7353mm         TRAP    #15
00004896                          7354mm         ENDM
00004896  6000 039A               7355m         BRA     COMPLETE_558
0000489A                          7356m        
0000489A                          7357m ADRABSOLUTE_558:
0000489A  BC3C 0001               7358m         CMP.B   #$01, D6
0000489E  6600 0018               7359m         BNE     ADRABSOLUTEDST_558 
000048A2                          7360m         
000048A2  3A03                    7361m         MOVE.W  D3, D5
000048A4  0803 0002               7362m         BTST    #2, D3
000048A8  6600 0024               7363m         BNE     ADRIMMEDIATE_558
000048AC  0803 0000               7364m         BTST    #0, D3
000048B0  6600 0270               7365m         BNE     ADRABSOLUTEL_558
000048B4  6000 01DA               7366m         BRA     ADRABSOLUTEW_558
000048B8                          7367m ADRABSOLUTEDST_558:
000048B8  3A03                    7368m         MOVE.W  D3, D5
000048BA  0803 000B               7369m         BTST    #$B, D3
000048BE  6600 000E               7370m         BNE     ADRIMMEDIATE_558
000048C2  0803 0009               7371m         BTST    #$09, D3
000048C6  6600 025A               7372m         BNE     ADRABSOLUTEL_558
000048CA  6000 01C4               7373m         BRA     ADRABSOLUTEW_558
000048CE                          7374m ADRIMMEDIATE_558:
000048CE  BE3C 0001               7375m         CMP.B   #1, D7
000048D2  6700 009E               7376m         BEQ     ADRIMMEDIATEL_558
000048D6                          7377m ADRIMMEDIATEW_558:
000048D6  361A                    7378m         MOVE.W  (A2)+, D3
000048D8                          7379mm         PRINTHASH
000048D8  103C 0006               7380mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048DC  323C 0023               7381mm         MOVE.W  #35, D1     ; AN = SIGN
000048E0  4E4F                    7382mm         TRAP    #15         ; OUTPUT = SIGN
000048E2                          7383mm         ENDM
000048E2                          7384mm         PRINTSIGN
000048E2  103C 0006               7385mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048E6  323C 0024               7386mm         MOVE.W  #36, D1     ; AN = SIGN
000048EA  4E4F                    7387mm         TRAP    #15         ; OUTPUT = SIGN
000048EC                          7388mm         ENDM
000048EC                          7389mm         ADROUT
000048EC  3212                    7390mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000048EE  E049                    7391mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000048F0  E849                    7392mm         LSR.W   #4, D1      
000048F2                          7393mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000048F2  0C01 0009               7394mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000048F6  6E00 000A               7395mmm         BGT     ALPHA_588
000048FA  0601 0030               7396mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000048FE  6000 0006               7397mmm         BRA     DONE_588
00004902  0601 0037               7398mmm ALPHA_588: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004906  4E71                    7399mmm DONE_588: NOP
00004908                          7400mmm         ENDM
00004908  4E4F                    7401mm         TRAP    #15         ; EXECUTE OUTPUT
0000490A                          7402mm         
0000490A  3212                    7403mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000490C  E949                    7404mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000490E  E049                    7405mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004910  E849                    7406mm         LSR.W   #4, D1      
00004912                          7407mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004912  0C01 0009               7408mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004916  6E00 000A               7409mmm         BGT     ALPHA_589
0000491A  0601 0030               7410mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000491E  6000 0006               7411mmm         BRA     DONE_589
00004922  0601 0037               7412mmm ALPHA_589: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004926  4E71                    7413mmm DONE_589: NOP
00004928                          7414mmm         ENDM
00004928  4E4F                    7415mm         TRAP    #15         ; EXECUTE OUTPUT
0000492A                          7416mm         
0000492A  3212                    7417mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000492C  E149                    7418mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000492E  E049                    7419mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004930  E849                    7420mm         LSR.W   #4, D1      
00004932                          7421mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004932  0C01 0009               7422mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004936  6E00 000A               7423mmm         BGT     ALPHA_590
0000493A  0601 0030               7424mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000493E  6000 0006               7425mmm         BRA     DONE_590
00004942  0601 0037               7426mmm ALPHA_590: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004946  4E71                    7427mmm DONE_590: NOP
00004948                          7428mmm         ENDM
00004948  4E4F                    7429mm         TRAP    #15         ; EXECUTE OUTPUT
0000494A                          7430mm         
0000494A  3212                    7431mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000494C  E149                    7432mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000494E  E949                    7433mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004950  E049                    7434mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004952  E849                    7435mm         LSR.W   #4, D1      
00004954                          7436mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004954  0C01 0009               7437mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004958  6E00 000A               7438mmm         BGT     ALPHA_591
0000495C  0601 0030               7439mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004960  6000 0006               7440mmm         BRA     DONE_591
00004964  0601 0037               7441mmm ALPHA_591: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004968  4E71                    7442mmm DONE_591: NOP
0000496A                          7443mmm         ENDM
0000496A  4E4F                    7444mm         TRAP    #15         ; EXECUTE OUTPUT       
0000496C                          7445mm         ENDM 
0000496C  3605                    7446m         MOVE.W  D5, D3
0000496E  6000 02C2               7447m         BRA     COMPLETE_558
00004972                          7448m ADRIMMEDIATEL_558:
00004972  361A                    7449m         MOVE.W  (A2)+, D3
00004974                          7450mm         PRINTHASH
00004974  103C 0006               7451mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004978  323C 0023               7452mm         MOVE.W  #35, D1     ; AN = SIGN
0000497C  4E4F                    7453mm         TRAP    #15         ; OUTPUT = SIGN
0000497E                          7454mm         ENDM
0000497E                          7455mm         PRINTSIGN
0000497E  103C 0006               7456mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004982  323C 0024               7457mm         MOVE.W  #36, D1     ; AN = SIGN
00004986  4E4F                    7458mm         TRAP    #15         ; OUTPUT = SIGN
00004988                          7459mm         ENDM
00004988                          7460mm         ADROUT 
00004988  3212                    7461mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000498A  E049                    7462mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000498C  E849                    7463mm         LSR.W   #4, D1      
0000498E                          7464mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000498E  0C01 0009               7465mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004992  6E00 000A               7466mmm         BGT     ALPHA_595
00004996  0601 0030               7467mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000499A  6000 0006               7468mmm         BRA     DONE_595
0000499E  0601 0037               7469mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049A2  4E71                    7470mmm DONE_595: NOP
000049A4                          7471mmm         ENDM
000049A4  4E4F                    7472mm         TRAP    #15         ; EXECUTE OUTPUT
000049A6                          7473mm         
000049A6  3212                    7474mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049A8  E949                    7475mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000049AA  E049                    7476mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049AC  E849                    7477mm         LSR.W   #4, D1      
000049AE                          7478mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049AE  0C01 0009               7479mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049B2  6E00 000A               7480mmm         BGT     ALPHA_596
000049B6  0601 0030               7481mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049BA  6000 0006               7482mmm         BRA     DONE_596
000049BE  0601 0037               7483mmm ALPHA_596: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049C2  4E71                    7484mmm DONE_596: NOP
000049C4                          7485mmm         ENDM
000049C4  4E4F                    7486mm         TRAP    #15         ; EXECUTE OUTPUT
000049C6                          7487mm         
000049C6  3212                    7488mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049C8  E149                    7489mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049CA  E049                    7490mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049CC  E849                    7491mm         LSR.W   #4, D1      
000049CE                          7492mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049CE  0C01 0009               7493mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049D2  6E00 000A               7494mmm         BGT     ALPHA_597
000049D6  0601 0030               7495mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049DA  6000 0006               7496mmm         BRA     DONE_597
000049DE  0601 0037               7497mmm ALPHA_597: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049E2  4E71                    7498mmm DONE_597: NOP
000049E4                          7499mmm         ENDM
000049E4  4E4F                    7500mm         TRAP    #15         ; EXECUTE OUTPUT
000049E6                          7501mm         
000049E6  3212                    7502mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049E8  E149                    7503mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049EA  E949                    7504mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000049EC  E049                    7505mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049EE  E849                    7506mm         LSR.W   #4, D1      
000049F0                          7507mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F0  0C01 0009               7508mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049F4  6E00 000A               7509mmm         BGT     ALPHA_598
000049F8  0601 0030               7510mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049FC  6000 0006               7511mmm         BRA     DONE_598
00004A00  0601 0037               7512mmm ALPHA_598: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A04  4E71                    7513mmm DONE_598: NOP
00004A06                          7514mmm         ENDM
00004A06  4E4F                    7515mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A08                          7516mm         ENDM 
00004A08  361A                    7517m         MOVE.W  (A2)+, D3
00004A0A                          7518mm         ADROUT
00004A0A  3212                    7519mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A0C  E049                    7520mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A0E  E849                    7521mm         LSR.W   #4, D1      
00004A10                          7522mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A10  0C01 0009               7523mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A14  6E00 000A               7524mmm         BGT     ALPHA_600
00004A18  0601 0030               7525mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A1C  6000 0006               7526mmm         BRA     DONE_600
00004A20  0601 0037               7527mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A24  4E71                    7528mmm DONE_600: NOP
00004A26                          7529mmm         ENDM
00004A26  4E4F                    7530mm         TRAP    #15         ; EXECUTE OUTPUT
00004A28                          7531mm         
00004A28  3212                    7532mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A2A  E949                    7533mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A2C  E049                    7534mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A2E  E849                    7535mm         LSR.W   #4, D1      
00004A30                          7536mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A30  0C01 0009               7537mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A34  6E00 000A               7538mmm         BGT     ALPHA_601
00004A38  0601 0030               7539mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A3C  6000 0006               7540mmm         BRA     DONE_601
00004A40  0601 0037               7541mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A44  4E71                    7542mmm DONE_601: NOP
00004A46                          7543mmm         ENDM
00004A46  4E4F                    7544mm         TRAP    #15         ; EXECUTE OUTPUT
00004A48                          7545mm         
00004A48  3212                    7546mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A4A  E149                    7547mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A4C  E049                    7548mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A4E  E849                    7549mm         LSR.W   #4, D1      
00004A50                          7550mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A50  0C01 0009               7551mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A54  6E00 000A               7552mmm         BGT     ALPHA_602
00004A58  0601 0030               7553mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A5C  6000 0006               7554mmm         BRA     DONE_602
00004A60  0601 0037               7555mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A64  4E71                    7556mmm DONE_602: NOP
00004A66                          7557mmm         ENDM
00004A66  4E4F                    7558mm         TRAP    #15         ; EXECUTE OUTPUT
00004A68                          7559mm         
00004A68  3212                    7560mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A6A  E149                    7561mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A6C  E949                    7562mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A6E  E049                    7563mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A70  E849                    7564mm         LSR.W   #4, D1      
00004A72                          7565mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A72  0C01 0009               7566mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A76  6E00 000A               7567mmm         BGT     ALPHA_603
00004A7A  0601 0030               7568mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A7E  6000 0006               7569mmm         BRA     DONE_603
00004A82  0601 0037               7570mmm ALPHA_603: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A86  4E71                    7571mmm DONE_603: NOP
00004A88                          7572mmm         ENDM
00004A88  4E4F                    7573mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A8A                          7574mm         ENDM 
00004A8A  3605                    7575m         MOVE.W  D5, D3
00004A8C  6000 01A4               7576m         BRA     COMPLETE_558 
00004A90                          7577m ADRABSOLUTEW_558:     
00004A90  361A                    7578m         MOVE.W  (A2)+, D3
00004A92                          7579mm         PRINTSIGN
00004A92  103C 0006               7580mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A96  323C 0024               7581mm         MOVE.W  #36, D1     ; AN = SIGN
00004A9A  4E4F                    7582mm         TRAP    #15         ; OUTPUT = SIGN
00004A9C                          7583mm         ENDM
00004A9C                          7584mm         ADROUT
00004A9C  3212                    7585mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A9E  E049                    7586mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AA0  E849                    7587mm         LSR.W   #4, D1      
00004AA2                          7588mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AA2  0C01 0009               7589mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AA6  6E00 000A               7590mmm         BGT     ALPHA_606
00004AAA  0601 0030               7591mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AAE  6000 0006               7592mmm         BRA     DONE_606
00004AB2  0601 0037               7593mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AB6  4E71                    7594mmm DONE_606: NOP
00004AB8                          7595mmm         ENDM
00004AB8  4E4F                    7596mm         TRAP    #15         ; EXECUTE OUTPUT
00004ABA                          7597mm         
00004ABA  3212                    7598mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ABC  E949                    7599mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004ABE  E049                    7600mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AC0  E849                    7601mm         LSR.W   #4, D1      
00004AC2                          7602mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AC2  0C01 0009               7603mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AC6  6E00 000A               7604mmm         BGT     ALPHA_607
00004ACA  0601 0030               7605mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004ACE  6000 0006               7606mmm         BRA     DONE_607
00004AD2  0601 0037               7607mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AD6  4E71                    7608mmm DONE_607: NOP
00004AD8                          7609mmm         ENDM
00004AD8  4E4F                    7610mm         TRAP    #15         ; EXECUTE OUTPUT
00004ADA                          7611mm         
00004ADA  3212                    7612mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ADC  E149                    7613mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004ADE  E049                    7614mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AE0  E849                    7615mm         LSR.W   #4, D1      
00004AE2                          7616mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AE2  0C01 0009               7617mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AE6  6E00 000A               7618mmm         BGT     ALPHA_608
00004AEA  0601 0030               7619mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AEE  6000 0006               7620mmm         BRA     DONE_608
00004AF2  0601 0037               7621mmm ALPHA_608: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AF6  4E71                    7622mmm DONE_608: NOP
00004AF8                          7623mmm         ENDM
00004AF8  4E4F                    7624mm         TRAP    #15         ; EXECUTE OUTPUT
00004AFA                          7625mm         
00004AFA  3212                    7626mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AFC  E149                    7627mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AFE  E949                    7628mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B00  E049                    7629mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B02  E849                    7630mm         LSR.W   #4, D1      
00004B04                          7631mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B04  0C01 0009               7632mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B08  6E00 000A               7633mmm         BGT     ALPHA_609
00004B0C  0601 0030               7634mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B10  6000 0006               7635mmm         BRA     DONE_609
00004B14  0601 0037               7636mmm ALPHA_609: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B18  4E71                    7637mmm DONE_609: NOP
00004B1A                          7638mmm         ENDM
00004B1A  4E4F                    7639mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B1C                          7640mm         ENDM 
00004B1C  3605                    7641m         MOVE.W  D5, D3
00004B1E  6000 0112               7642m         BRA     COMPLETE_558  
00004B22                          7643m ADRABSOLUTEL_558:  
00004B22  361A                    7644m         MOVE.W  (A2)+, D3
00004B24                          7645mm         PRINTSIGN
00004B24  103C 0006               7646mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B28  323C 0024               7647mm         MOVE.W  #36, D1     ; AN = SIGN
00004B2C  4E4F                    7648mm         TRAP    #15         ; OUTPUT = SIGN
00004B2E                          7649mm         ENDM
00004B2E                          7650mm         ADROUT 
00004B2E  3212                    7651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B30  E049                    7652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B32  E849                    7653mm         LSR.W   #4, D1      
00004B34                          7654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B34  0C01 0009               7655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B38  6E00 000A               7656mmm         BGT     ALPHA_612
00004B3C  0601 0030               7657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B40  6000 0006               7658mmm         BRA     DONE_612
00004B44  0601 0037               7659mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B48  4E71                    7660mmm DONE_612: NOP
00004B4A                          7661mmm         ENDM
00004B4A  4E4F                    7662mm         TRAP    #15         ; EXECUTE OUTPUT
00004B4C                          7663mm         
00004B4C  3212                    7664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B4E  E949                    7665mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B50  E049                    7666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B52  E849                    7667mm         LSR.W   #4, D1      
00004B54                          7668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B54  0C01 0009               7669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B58  6E00 000A               7670mmm         BGT     ALPHA_613
00004B5C  0601 0030               7671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B60  6000 0006               7672mmm         BRA     DONE_613
00004B64  0601 0037               7673mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B68  4E71                    7674mmm DONE_613: NOP
00004B6A                          7675mmm         ENDM
00004B6A  4E4F                    7676mm         TRAP    #15         ; EXECUTE OUTPUT
00004B6C                          7677mm         
00004B6C  3212                    7678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B6E  E149                    7679mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B70  E049                    7680mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B72  E849                    7681mm         LSR.W   #4, D1      
00004B74                          7682mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B74  0C01 0009               7683mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B78  6E00 000A               7684mmm         BGT     ALPHA_614
00004B7C  0601 0030               7685mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B80  6000 0006               7686mmm         BRA     DONE_614
00004B84  0601 0037               7687mmm ALPHA_614: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B88  4E71                    7688mmm DONE_614: NOP
00004B8A                          7689mmm         ENDM
00004B8A  4E4F                    7690mm         TRAP    #15         ; EXECUTE OUTPUT
00004B8C                          7691mm         
00004B8C  3212                    7692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B8E  E149                    7693mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B90  E949                    7694mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B92  E049                    7695mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B94  E849                    7696mm         LSR.W   #4, D1      
00004B96                          7697mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B96  0C01 0009               7698mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B9A  6E00 000A               7699mmm         BGT     ALPHA_615
00004B9E  0601 0030               7700mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BA2  6000 0006               7701mmm         BRA     DONE_615
00004BA6  0601 0037               7702mmm ALPHA_615: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BAA  4E71                    7703mmm DONE_615: NOP
00004BAC                          7704mmm         ENDM
00004BAC  4E4F                    7705mm         TRAP    #15         ; EXECUTE OUTPUT       
00004BAE                          7706mm         ENDM 
00004BAE  361A                    7707m         MOVE.W  (A2)+, D3
00004BB0                          7708mm         ADROUT
00004BB0  3212                    7709mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BB2  E049                    7710mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BB4  E849                    7711mm         LSR.W   #4, D1      
00004BB6                          7712mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BB6  0C01 0009               7713mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BBA  6E00 000A               7714mmm         BGT     ALPHA_617
00004BBE  0601 0030               7715mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BC2  6000 0006               7716mmm         BRA     DONE_617
00004BC6  0601 0037               7717mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BCA  4E71                    7718mmm DONE_617: NOP
00004BCC                          7719mmm         ENDM
00004BCC  4E4F                    7720mm         TRAP    #15         ; EXECUTE OUTPUT
00004BCE                          7721mm         
00004BCE  3212                    7722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD0  E949                    7723mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BD2  E049                    7724mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD4  E849                    7725mm         LSR.W   #4, D1      
00004BD6                          7726mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD6  0C01 0009               7727mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BDA  6E00 000A               7728mmm         BGT     ALPHA_618
00004BDE  0601 0030               7729mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE2  6000 0006               7730mmm         BRA     DONE_618
00004BE6  0601 0037               7731mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BEA  4E71                    7732mmm DONE_618: NOP
00004BEC                          7733mmm         ENDM
00004BEC  4E4F                    7734mm         TRAP    #15         ; EXECUTE OUTPUT
00004BEE                          7735mm         
00004BEE  3212                    7736mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF0  E149                    7737mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BF2  E049                    7738mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF4  E849                    7739mm         LSR.W   #4, D1      
00004BF6                          7740mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF6  0C01 0009               7741mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BFA  6E00 000A               7742mmm         BGT     ALPHA_619
00004BFE  0601 0030               7743mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C02  6000 0006               7744mmm         BRA     DONE_619
00004C06  0601 0037               7745mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C0A  4E71                    7746mmm DONE_619: NOP
00004C0C                          7747mmm         ENDM
00004C0C  4E4F                    7748mm         TRAP    #15         ; EXECUTE OUTPUT
00004C0E                          7749mm         
00004C0E  3212                    7750mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C10  E149                    7751mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C12  E949                    7752mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C14  E049                    7753mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C16  E849                    7754mm         LSR.W   #4, D1      
00004C18                          7755mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C18  0C01 0009               7756mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1C  6E00 000A               7757mmm         BGT     ALPHA_620
00004C20  0601 0030               7758mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C24  6000 0006               7759mmm         BRA     DONE_620
00004C28  0601 0037               7760mmm ALPHA_620: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2C  4E71                    7761mmm DONE_620: NOP
00004C2E                          7762mmm         ENDM
00004C2E  4E4F                    7763mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C30                          7764mm         ENDM 
00004C30  3605                    7765m         MOVE.W  D5, D3
00004C32                          7766m 
00004C32                          7767m COMPLETE_558:  ; OPCODE HAS BEEN VERIFIED
00004C32                          7768m         ENDM
00004C32                          7769m         printComma
00004C32  43F8 00C9               7770m         LEA     OCOMMA, A1     
00004C36  103C 000E               7771m         MOVE.B  #14,D0          
00004C3A  4E4F                    7772m         TRAP    #15
00004C3C                          7773m         ENDM
00004C3C                          7774m         printAnDest     (A2)
00004C3C  3212                    7775m         MOVE.W  (A2), D1
00004C3E  E949                    7776m         LSL     #$04, D1
00004C40  E049                    7777m         LSR     #$08, D1
00004C42  EA49                    7778m         LSR     #$05, D1
00004C44  43F8 00C3               7779m         LEA     OAN, A1     
00004C48  103C 000E               7780m         MOVE.B  #14,D0          
00004C4C  4E4F                    7781m         TRAP    #15
00004C4E  103C 0003               7782m         MOVE.B  #3,D0          
00004C52  4E4F                    7783m         TRAP    #15
00004C54                          7784m         ENDM
00004C54  4E75                    7785          RTS                 ; Return from decodeLEA subroutine
00004C56                          7786  
00004C56                          7787  
00004C56                          7788  ; ------------------------------------------------------------
00004C56                          7789  ; 9. "decodeAND" subroutine
00004C56                          7790  ; AUTHOR
00004C56                          7791  ;
00004C56                          7792  ; TODO: DESCRIPTION
00004C56                          7793  ; ------------------------------------------------------------
00004C56                          7794  decodeAND:
00004C56                          7795m         verifyOpcode    pAND, (A2)
00004C56  43F8 015C               7796m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004C5A  3612                    7797m         MOVE.W  (A2), D3      ; INPUT VALUE
00004C5C  123C 000F               7798m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004C60                          7799m         
00004C60                          7800m LOOP_623: 
00004C60  0C11 0030               7801m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004C64  6700 000E               7802m         BEQ     CHECKFOR0_623
00004C68  0C11 0031               7803m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004C6C  6700 0010               7804m         BEQ     CHECKFOR1_623
00004C70  6000 0012               7805m         BRA     NEXT_623      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004C74                          7806m         
00004C74                          7807m CHECKFOR0_623: 
00004C74  0303                    7808m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004C76  6600 1F0C               7809m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004C7A  6000 0008               7810m         BRA     NEXT_623
00004C7E                          7811m 
00004C7E                          7812m CHECKFOR1_623:
00004C7E  0303                    7813m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004C80  6700 1F02               7814m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004C84                          7815m 
00004C84                          7816m NEXT_623: 
00004C84  B23C 0000               7817m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004C88  6700 0008               7818m         BEQ     COMPLETE_623  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004C8C  5301                    7819m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004C8E  1819                    7820m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004C90  60CE                    7821m         BRA     LOOP_623      ; BEGIN LOOP AGAIN
00004C92                          7822m 
00004C92                          7823m COMPLETE_623:  ; OPCODE HAS BEEN VERIFIED
00004C92                          7824m         ENDM
00004C92  43F8 0085               7825          LEA     oAND, A1     
00004C96  103C 000E               7826          MOVE.B  #14,D0          
00004C9A  4E4F                    7827          TRAP    #15
00004C9C                          7828m         printOpMode     (A2)
00004C9C  3612                    7829m         MOVE.W  (A2), D3      
00004C9E  123C 0008               7830m         MOVE.B  #8, D1    
00004CA2  4246                    7831m         CLR     D6
00004CA4                          7832m CHECKFORDESTDN_624: 
00004CA4  0303                    7833m         BTST    D1, D3      
00004CA6  6600 0048               7834m         BNE     CHECKFORSRCDN_624
00004CAA  4EB9 00004D7A           7835m         JSR     NEXT_624
00004CB0  1C3C 0001               7836m         MOVE.B  #$1, D6
00004CB4  0303                    7837m         BTST    D1, D3      
00004CB6  6700 0010               7838m         BEQ     DESTDNW_624
00004CBA                          7839m DESTDNL_624:        
00004CBA  43F8 00BD               7840m         LEA     OLSIZE, A1     
00004CBE  103C 000E               7841m         MOVE.B  #14,D0          
00004CC2  4E4F                    7842m         TRAP    #15
00004CC4  6000 00B8               7843m         BRA     COMPLETE_624 
00004CC8                          7844m DESTDNW_624: 
00004CC8  4EB9 00004D7A           7845m         JSR     NEXT_624
00004CCE  0303                    7846m         BTST    D1, D3      
00004CD0  6700 0010               7847m         BEQ     DESTDNB_624
00004CD4  43F8 00B9               7848m         LEA     OWSIZE, A1     
00004CD8  103C 000E               7849m         MOVE.B  #14,D0          
00004CDC  4E4F                    7850m         TRAP    #15
00004CDE  6000 009E               7851m         BRA     COMPLETE_624 
00004CE2                          7852m DESTDNB_624: 
00004CE2  43F8 00B5               7853m         LEA     OBSIZE, A1     
00004CE6  103C 000E               7854m         MOVE.B  #14,D0          
00004CEA  4E4F                    7855m         TRAP    #15
00004CEC  6000 0090               7856m         BRA     COMPLETE_624 
00004CF0                          7857m CHECKFORSRCDN_624: 
00004CF0  4EB9 00004D7A           7858m         JSR     NEXT_624
00004CF6  0303                    7859m         BTST    D1, D3      
00004CF8  6700 0028               7860m         BEQ     SRCDNW_624
00004CFC                          7861m SRCDNL_624:        
00004CFC  43F8 00BD               7862m         LEA     OLSIZE, A1     
00004D00  103C 000E               7863m         MOVE.B  #14,D0          
00004D04  4E4F                    7864m         TRAP    #15
00004D06                          7865mm         PRINTDNDEST D3
00004D06  3203                    7866mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D08  E949                    7867mm         LSL     #$04, D1
00004D0A  E049                    7868mm         LSR     #$08, D1
00004D0C  EA49                    7869mm         LSR     #$05, D1
00004D0E  43F8 00C1               7870mm         LEA     ODN, A1     
00004D12  103C 000E               7871mm         MOVE.B  #14,D0          
00004D16  4E4F                    7872mm         TRAP    #15
00004D18  103C 0003               7873mm         MOVE.B  #3,D0          
00004D1C  4E4F                    7874mm         TRAP    #15
00004D1E                          7875mm         ENDM
00004D1E  6000 005E               7876m         BRA     COMPLETE_624 
00004D22                          7877m SRCDNW_624:
00004D22  4EB9 00004D7A           7878m         JSR     NEXT_624
00004D28  0303                    7879m         BTST    D1, D3     
00004D2A  6700 0028               7880m         BEQ     SRCDNB_624
00004D2E  43F8 00B9               7881m         LEA     OWSIZE, A1     
00004D32  103C 000E               7882m         MOVE.B  #14,D0          
00004D36  4E4F                    7883m         TRAP    #15
00004D38                          7884mm         PRINTDNDEST D3
00004D38  3203                    7885mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D3A  E949                    7886mm         LSL     #$04, D1
00004D3C  E049                    7887mm         LSR     #$08, D1
00004D3E  EA49                    7888mm         LSR     #$05, D1
00004D40  43F8 00C1               7889mm         LEA     ODN, A1     
00004D44  103C 000E               7890mm         MOVE.B  #14,D0          
00004D48  4E4F                    7891mm         TRAP    #15
00004D4A  103C 0003               7892mm         MOVE.B  #3,D0          
00004D4E  4E4F                    7893mm         TRAP    #15
00004D50                          7894mm         ENDM
00004D50  6000 002C               7895m         BRA     COMPLETE_624 
00004D54                          7896m SRCDNB_624: 
00004D54  43F8 00B5               7897m         LEA     OBSIZE, A1     
00004D58  103C 000E               7898m         MOVE.B  #14,D0          
00004D5C  4E4F                    7899m         TRAP    #15
00004D5E                          7900mm         PRINTDNDEST D3
00004D5E  3203                    7901mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D60  E949                    7902mm         LSL     #$04, D1
00004D62  E049                    7903mm         LSR     #$08, D1
00004D64  EA49                    7904mm         LSR     #$05, D1
00004D66  43F8 00C1               7905mm         LEA     ODN, A1     
00004D6A  103C 000E               7906mm         MOVE.B  #14,D0          
00004D6E  4E4F                    7907mm         TRAP    #15
00004D70  103C 0003               7908mm         MOVE.B  #3,D0          
00004D74  4E4F                    7909mm         TRAP    #15
00004D76                          7910mm         ENDM
00004D76  6000 0006               7911m         BRA     COMPLETE_624 
00004D7A                          7912m 
00004D7A                          7913m NEXT_624:
00004D7A  5301                    7914m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004D7C  4E75                    7915m         RTS                
00004D7E                          7916m 
00004D7E                          7917m COMPLETE_624:  ; OPCODE HAS BEEN VERIFIED
00004D7E                          7918m         ENDM
00004D7E  BC3C 0001               7919          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004D82  6700 05E0               7920          BEQ     decodeAndDestOp
00004D86                          7921m         printComma
00004D86  43F8 00C9               7922m         LEA     OCOMMA, A1     
00004D8A  103C 000E               7923m         MOVE.B  #14,D0          
00004D8E  4E4F                    7924m         TRAP    #15
00004D90                          7925m         ENDM
00004D90                          7926m         prepareAdrMode  #$1, (A2)
00004D90  3C3C 0001               7927m         MOVE.W  #$1, D6      ; INPUT VALUE
00004D94  3212                    7928m         MOVE.W  (A2), D1
00004D96  BC3C 0001               7929m         CMP.B   #$01, D6
00004D9A  6700 000C               7930m         BEQ     ADRSOURCE_629    
00004D9E                          7931m ADRDEST_629:
00004D9E  EF49                    7932m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004DA0  E049                    7933m         LSR     #$08, D1
00004DA2  EA49                    7934m         LSR     #$05, D1
00004DA4  6000 000A               7935m         BRA     COMPLETE_629 
00004DA8                          7936m ADRSOURCE_629:                
00004DA8  E149                    7937m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004DAA  E549                    7938m         LSL     #$02, D1
00004DAC  E049                    7939m         LSR     #$08, D1
00004DAE  EA49                    7940m         LSR     #$05, D1
00004DB0                          7941m COMPLETE_629:  ; OPCODE HAS BEEN VERIFIED
00004DB0                          7942m         ENDM        
00004DB0                          7943m         decodeAdrMode   (A2), D1
00004DB0  3612                    7944m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004DB2  3201                    7945m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004DB4                          7946m 
00004DB4  B23C 0001               7947m         CMP.B   #$01, D1
00004DB8  6700 0066               7948m         BEQ     ADRREGDIRECT_630    
00004DBC  B23C 0002               7949m         CMP.B   #$02, D1
00004DC0  6700 00A0               7950m         BEQ     ADRREGINDIRECT_630  
00004DC4  B23C 0003               7951m         CMP.B   #$03, D1
00004DC8  6700 0102               7952m         BEQ     ADRREGPOSTINC_630  
00004DCC  B23C 0004               7953m         CMP.B   #$04, D1
00004DD0  6700 0178               7954m         BEQ     ADRREGPREDEC_630
00004DD4  B23C 0007               7955m         CMP.B   #$07, D1
00004DD8  6700 01EE               7956m         BEQ     ADRABSOLUTE_630    
00004DDC                          7957m         
00004DDC                          7958m DATAREGDIRECT_630: 
00004DDC  BC3C 0001               7959m         CMP.B   #$01, D6
00004DE0  6700 001E               7960m         BEQ     DATAREGDIRECTSRC_630   
00004DE4                          7961m DATAREGDIRECTDEST_630: 
00004DE4                          7962mm         PRINTDNDEST D3 
00004DE4  3203                    7963mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004DE6  E949                    7964mm         LSL     #$04, D1
00004DE8  E049                    7965mm         LSR     #$08, D1
00004DEA  EA49                    7966mm         LSR     #$05, D1
00004DEC  43F8 00C1               7967mm         LEA     ODN, A1     
00004DF0  103C 000E               7968mm         MOVE.B  #14,D0          
00004DF4  4E4F                    7969mm         TRAP    #15
00004DF6  103C 0003               7970mm         MOVE.B  #3,D0          
00004DFA  4E4F                    7971mm         TRAP    #15
00004DFC                          7972mm         ENDM
00004DFC  6000 0562               7973m         BRA     COMPLETE_630 
00004E00                          7974m DATAREGDIRECTSRC_630: 
00004E00                          7975mm         PRINTDNSRC D3 
00004E00  4281                    7976mm         CLR.L   D1
00004E02  3203                    7977mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E04  E149                    7978mm         LSL     #$08, D1
00004E06  EB49                    7979mm         LSL     #$05, D1
00004E08  E049                    7980mm         LSR     #$08, D1
00004E0A  EA49                    7981mm         LSR     #$05, D1
00004E0C  43F8 00C1               7982mm         LEA     ODN, A1     
00004E10  103C 000E               7983mm         MOVE.B  #14,D0          
00004E14  4E4F                    7984mm         TRAP    #15
00004E16  103C 0003               7985mm         MOVE.B  #3,D0          
00004E1A  4E4F                    7986mm         TRAP    #15
00004E1C                          7987mm         ENDM
00004E1C  6000 0542               7988m         BRA     COMPLETE_630   
00004E20                          7989m         
00004E20                          7990m ADRREGDIRECT_630: 
00004E20  BC3C 0001               7991m         CMP.B   #$01, D6
00004E24  6700 001E               7992m         BEQ     ADRREGDIRECTSRC_630   
00004E28                          7993m ADRREGDIRECTDEST_630:
00004E28                          7994mm         PRINTANDEST D3
00004E28  3203                    7995mm         MOVE.W  D3, D1
00004E2A  E949                    7996mm         LSL     #$04, D1
00004E2C  E049                    7997mm         LSR     #$08, D1
00004E2E  EA49                    7998mm         LSR     #$05, D1
00004E30  43F8 00C3               7999mm         LEA     OAN, A1     
00004E34  103C 000E               8000mm         MOVE.B  #14,D0          
00004E38  4E4F                    8001mm         TRAP    #15
00004E3A  103C 0003               8002mm         MOVE.B  #3,D0          
00004E3E  4E4F                    8003mm         TRAP    #15
00004E40                          8004mm         ENDM
00004E40  6000 051E               8005m         BRA     COMPLETE_630   
00004E44                          8006m ADRREGDIRECTSRC_630:
00004E44                          8007mm         PRINTANSRC D3
00004E44  3203                    8008mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E46  E149                    8009mm         LSL     #$08, D1
00004E48  EB49                    8010mm         LSL     #$05, D1
00004E4A  E049                    8011mm         LSR     #$08, D1
00004E4C  EA49                    8012mm         LSR     #$05, D1
00004E4E  43F8 00C3               8013mm         LEA     OAN, A1     
00004E52  103C 000E               8014mm         MOVE.B  #14,D0          
00004E56  4E4F                    8015mm         TRAP    #15
00004E58  103C 0003               8016mm         MOVE.B  #3,D0          
00004E5C  4E4F                    8017mm         TRAP    #15
00004E5E                          8018mm         ENDM
00004E5E  6000 0500               8019m         BRA     COMPLETE_630   
00004E62                          8020m        
00004E62                          8021m ADRREGINDIRECT_630:   
00004E62  BC3C 0001               8022m         CMP.B   #$01, D6
00004E66  6700 0032               8023m         BEQ     ADRREGINDIRECTSRC_630   
00004E6A                          8024m ADRREGINDIRECTDEST_630:
00004E6A                          8025mm         PRINTLB
00004E6A  43F8 00C5               8026mm         LEA     OLB, A1     
00004E6E  103C 000E               8027mm         MOVE.B  #14,D0          
00004E72  4E4F                    8028mm         TRAP    #15
00004E74                          8029mm         ENDM
00004E74                          8030mm         PRINTANDEST D3  
00004E74  3203                    8031mm         MOVE.W  D3, D1
00004E76  E949                    8032mm         LSL     #$04, D1
00004E78  E049                    8033mm         LSR     #$08, D1
00004E7A  EA49                    8034mm         LSR     #$05, D1
00004E7C  43F8 00C3               8035mm         LEA     OAN, A1     
00004E80  103C 000E               8036mm         MOVE.B  #14,D0          
00004E84  4E4F                    8037mm         TRAP    #15
00004E86  103C 0003               8038mm         MOVE.B  #3,D0          
00004E8A  4E4F                    8039mm         TRAP    #15
00004E8C                          8040mm         ENDM
00004E8C                          8041mm         PRINTRB
00004E8C  43F8 00C7               8042mm         LEA     ORB, A1     
00004E90  103C 000E               8043mm         MOVE.B  #14,D0          
00004E94  4E4F                    8044mm         TRAP    #15
00004E96                          8045mm         ENDM
00004E96  6000 04C8               8046m         BRA     COMPLETE_630     
00004E9A                          8047m ADRREGINDIRECTSRC_630:   
00004E9A                          8048mm         PRINTLB
00004E9A  43F8 00C5               8049mm         LEA     OLB, A1     
00004E9E  103C 000E               8050mm         MOVE.B  #14,D0          
00004EA2  4E4F                    8051mm         TRAP    #15
00004EA4                          8052mm         ENDM
00004EA4                          8053mm         PRINTANSRC D3  
00004EA4  3203                    8054mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004EA6  E149                    8055mm         LSL     #$08, D1
00004EA8  EB49                    8056mm         LSL     #$05, D1
00004EAA  E049                    8057mm         LSR     #$08, D1
00004EAC  EA49                    8058mm         LSR     #$05, D1
00004EAE  43F8 00C3               8059mm         LEA     OAN, A1     
00004EB2  103C 000E               8060mm         MOVE.B  #14,D0          
00004EB6  4E4F                    8061mm         TRAP    #15
00004EB8  103C 0003               8062mm         MOVE.B  #3,D0          
00004EBC  4E4F                    8063mm         TRAP    #15
00004EBE                          8064mm         ENDM
00004EBE                          8065mm         PRINTRB
00004EBE  43F8 00C7               8066mm         LEA     ORB, A1     
00004EC2  103C 000E               8067mm         MOVE.B  #14,D0          
00004EC6  4E4F                    8068mm         TRAP    #15
00004EC8                          8069mm         ENDM
00004EC8  6000 0496               8070m         BRA     COMPLETE_630   
00004ECC                          8071m         
00004ECC                          8072m ADRREGPOSTINC_630:   
00004ECC  BC3C 0001               8073m         CMP.B   #$01, D6
00004ED0  6700 003C               8074m         BEQ     ADRREGPOSTINCSRC_630   
00004ED4                          8075m ADRREGPOSTINCDEST_630: 
00004ED4                          8076mm         PRINTLB
00004ED4  43F8 00C5               8077mm         LEA     OLB, A1     
00004ED8  103C 000E               8078mm         MOVE.B  #14,D0          
00004EDC  4E4F                    8079mm         TRAP    #15
00004EDE                          8080mm         ENDM
00004EDE                          8081mm         PRINTANDEST D3  
00004EDE  3203                    8082mm         MOVE.W  D3, D1
00004EE0  E949                    8083mm         LSL     #$04, D1
00004EE2  E049                    8084mm         LSR     #$08, D1
00004EE4  EA49                    8085mm         LSR     #$05, D1
00004EE6  43F8 00C3               8086mm         LEA     OAN, A1     
00004EEA  103C 000E               8087mm         MOVE.B  #14,D0          
00004EEE  4E4F                    8088mm         TRAP    #15
00004EF0  103C 0003               8089mm         MOVE.B  #3,D0          
00004EF4  4E4F                    8090mm         TRAP    #15
00004EF6                          8091mm         ENDM
00004EF6                          8092mm         PRINTRB
00004EF6  43F8 00C7               8093mm         LEA     ORB, A1     
00004EFA  103C 000E               8094mm         MOVE.B  #14,D0          
00004EFE  4E4F                    8095mm         TRAP    #15
00004F00                          8096mm         ENDM
00004F00                          8097mm         PRINTPI
00004F00  43F8 00CE               8098mm         LEA     OPSTINC, A1     
00004F04  103C 000E               8099mm         MOVE.B  #14,D0          
00004F08  4E4F                    8100mm         TRAP    #15
00004F0A                          8101mm         ENDM
00004F0A  6000 0454               8102m         BRA     COMPLETE_630  
00004F0E                          8103m ADRREGPOSTINCSRC_630:           
00004F0E                          8104mm         PRINTLB
00004F0E  43F8 00C5               8105mm         LEA     OLB, A1     
00004F12  103C 000E               8106mm         MOVE.B  #14,D0          
00004F16  4E4F                    8107mm         TRAP    #15
00004F18                          8108mm         ENDM
00004F18                          8109mm         PRINTANSRC D3  
00004F18  3203                    8110mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F1A  E149                    8111mm         LSL     #$08, D1
00004F1C  EB49                    8112mm         LSL     #$05, D1
00004F1E  E049                    8113mm         LSR     #$08, D1
00004F20  EA49                    8114mm         LSR     #$05, D1
00004F22  43F8 00C3               8115mm         LEA     OAN, A1     
00004F26  103C 000E               8116mm         MOVE.B  #14,D0          
00004F2A  4E4F                    8117mm         TRAP    #15
00004F2C  103C 0003               8118mm         MOVE.B  #3,D0          
00004F30  4E4F                    8119mm         TRAP    #15
00004F32                          8120mm         ENDM
00004F32                          8121mm         PRINTRB
00004F32  43F8 00C7               8122mm         LEA     ORB, A1     
00004F36  103C 000E               8123mm         MOVE.B  #14,D0          
00004F3A  4E4F                    8124mm         TRAP    #15
00004F3C                          8125mm         ENDM
00004F3C                          8126mm         PRINTPI
00004F3C  43F8 00CE               8127mm         LEA     OPSTINC, A1     
00004F40  103C 000E               8128mm         MOVE.B  #14,D0          
00004F44  4E4F                    8129mm         TRAP    #15
00004F46                          8130mm         ENDM
00004F46  6000 0418               8131m         BRA     COMPLETE_630  
00004F4A                          8132m ADRREGPREDEC_630: 
00004F4A  BC3C 0001               8133m         CMP.B   #$01, D6
00004F4E  6700 003C               8134m         BEQ     ADRREGPREDECSRC_630   
00004F52                          8135m ADRREGPREDECDEST_630:
00004F52                          8136mm         PRINTPD  
00004F52  43F8 00CC               8137mm         LEA     OPREDEC, A1     
00004F56  103C 000E               8138mm         MOVE.B  #14,D0          
00004F5A  4E4F                    8139mm         TRAP    #15
00004F5C                          8140mm         ENDM
00004F5C                          8141mm         PRINTLB
00004F5C  43F8 00C5               8142mm         LEA     OLB, A1     
00004F60  103C 000E               8143mm         MOVE.B  #14,D0          
00004F64  4E4F                    8144mm         TRAP    #15
00004F66                          8145mm         ENDM
00004F66                          8146mm         PRINTANDEST D3  
00004F66  3203                    8147mm         MOVE.W  D3, D1
00004F68  E949                    8148mm         LSL     #$04, D1
00004F6A  E049                    8149mm         LSR     #$08, D1
00004F6C  EA49                    8150mm         LSR     #$05, D1
00004F6E  43F8 00C3               8151mm         LEA     OAN, A1     
00004F72  103C 000E               8152mm         MOVE.B  #14,D0          
00004F76  4E4F                    8153mm         TRAP    #15
00004F78  103C 0003               8154mm         MOVE.B  #3,D0          
00004F7C  4E4F                    8155mm         TRAP    #15
00004F7E                          8156mm         ENDM
00004F7E                          8157mm         PRINTRB
00004F7E  43F8 00C7               8158mm         LEA     ORB, A1     
00004F82  103C 000E               8159mm         MOVE.B  #14,D0          
00004F86  4E4F                    8160mm         TRAP    #15
00004F88                          8161mm         ENDM
00004F88  6000 03D6               8162m         BRA     COMPLETE_630   
00004F8C                          8163m ADRREGPREDECSRC_630: 
00004F8C                          8164mm         PRINTPD  
00004F8C  43F8 00CC               8165mm         LEA     OPREDEC, A1     
00004F90  103C 000E               8166mm         MOVE.B  #14,D0          
00004F94  4E4F                    8167mm         TRAP    #15
00004F96                          8168mm         ENDM
00004F96                          8169mm         PRINTLB
00004F96  43F8 00C5               8170mm         LEA     OLB, A1     
00004F9A  103C 000E               8171mm         MOVE.B  #14,D0          
00004F9E  4E4F                    8172mm         TRAP    #15
00004FA0                          8173mm         ENDM
00004FA0                          8174mm         PRINTANSRC D3  
00004FA0  3203                    8175mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FA2  E149                    8176mm         LSL     #$08, D1
00004FA4  EB49                    8177mm         LSL     #$05, D1
00004FA6  E049                    8178mm         LSR     #$08, D1
00004FA8  EA49                    8179mm         LSR     #$05, D1
00004FAA  43F8 00C3               8180mm         LEA     OAN, A1     
00004FAE  103C 000E               8181mm         MOVE.B  #14,D0          
00004FB2  4E4F                    8182mm         TRAP    #15
00004FB4  103C 0003               8183mm         MOVE.B  #3,D0          
00004FB8  4E4F                    8184mm         TRAP    #15
00004FBA                          8185mm         ENDM
00004FBA                          8186mm         PRINTRB
00004FBA  43F8 00C7               8187mm         LEA     ORB, A1     
00004FBE  103C 000E               8188mm         MOVE.B  #14,D0          
00004FC2  4E4F                    8189mm         TRAP    #15
00004FC4                          8190mm         ENDM
00004FC4  6000 039A               8191m         BRA     COMPLETE_630
00004FC8                          8192m        
00004FC8                          8193m ADRABSOLUTE_630:
00004FC8  BC3C 0001               8194m         CMP.B   #$01, D6
00004FCC  6600 0018               8195m         BNE     ADRABSOLUTEDST_630 
00004FD0                          8196m         
00004FD0  3A03                    8197m         MOVE.W  D3, D5
00004FD2  0803 0002               8198m         BTST    #2, D3
00004FD6  6600 0024               8199m         BNE     ADRIMMEDIATE_630
00004FDA  0803 0000               8200m         BTST    #0, D3
00004FDE  6600 0270               8201m         BNE     ADRABSOLUTEL_630
00004FE2  6000 01DA               8202m         BRA     ADRABSOLUTEW_630
00004FE6                          8203m ADRABSOLUTEDST_630:
00004FE6  3A03                    8204m         MOVE.W  D3, D5
00004FE8  0803 000B               8205m         BTST    #$B, D3
00004FEC  6600 000E               8206m         BNE     ADRIMMEDIATE_630
00004FF0  0803 0009               8207m         BTST    #$09, D3
00004FF4  6600 025A               8208m         BNE     ADRABSOLUTEL_630
00004FF8  6000 01C4               8209m         BRA     ADRABSOLUTEW_630
00004FFC                          8210m ADRIMMEDIATE_630:
00004FFC  BE3C 0001               8211m         CMP.B   #1, D7
00005000  6700 009E               8212m         BEQ     ADRIMMEDIATEL_630
00005004                          8213m ADRIMMEDIATEW_630:
00005004  361A                    8214m         MOVE.W  (A2)+, D3
00005006                          8215mm         PRINTHASH
00005006  103C 0006               8216mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000500A  323C 0023               8217mm         MOVE.W  #35, D1     ; AN = SIGN
0000500E  4E4F                    8218mm         TRAP    #15         ; OUTPUT = SIGN
00005010                          8219mm         ENDM
00005010                          8220mm         PRINTSIGN
00005010  103C 0006               8221mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005014  323C 0024               8222mm         MOVE.W  #36, D1     ; AN = SIGN
00005018  4E4F                    8223mm         TRAP    #15         ; OUTPUT = SIGN
0000501A                          8224mm         ENDM
0000501A                          8225mm         ADROUT
0000501A  3212                    8226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000501C  E049                    8227mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000501E  E849                    8228mm         LSR.W   #4, D1      
00005020                          8229mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005020  0C01 0009               8230mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005024  6E00 000A               8231mmm         BGT     ALPHA_660
00005028  0601 0030               8232mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000502C  6000 0006               8233mmm         BRA     DONE_660
00005030  0601 0037               8234mmm ALPHA_660: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005034  4E71                    8235mmm DONE_660: NOP
00005036                          8236mmm         ENDM
00005036  4E4F                    8237mm         TRAP    #15         ; EXECUTE OUTPUT
00005038                          8238mm         
00005038  3212                    8239mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000503A  E949                    8240mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000503C  E049                    8241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000503E  E849                    8242mm         LSR.W   #4, D1      
00005040                          8243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005040  0C01 0009               8244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005044  6E00 000A               8245mmm         BGT     ALPHA_661
00005048  0601 0030               8246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000504C  6000 0006               8247mmm         BRA     DONE_661
00005050  0601 0037               8248mmm ALPHA_661: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005054  4E71                    8249mmm DONE_661: NOP
00005056                          8250mmm         ENDM
00005056  4E4F                    8251mm         TRAP    #15         ; EXECUTE OUTPUT
00005058                          8252mm         
00005058  3212                    8253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000505A  E149                    8254mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000505C  E049                    8255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000505E  E849                    8256mm         LSR.W   #4, D1      
00005060                          8257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005060  0C01 0009               8258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005064  6E00 000A               8259mmm         BGT     ALPHA_662
00005068  0601 0030               8260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000506C  6000 0006               8261mmm         BRA     DONE_662
00005070  0601 0037               8262mmm ALPHA_662: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005074  4E71                    8263mmm DONE_662: NOP
00005076                          8264mmm         ENDM
00005076  4E4F                    8265mm         TRAP    #15         ; EXECUTE OUTPUT
00005078                          8266mm         
00005078  3212                    8267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000507A  E149                    8268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000507C  E949                    8269mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000507E  E049                    8270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005080  E849                    8271mm         LSR.W   #4, D1      
00005082                          8272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005082  0C01 0009               8273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005086  6E00 000A               8274mmm         BGT     ALPHA_663
0000508A  0601 0030               8275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000508E  6000 0006               8276mmm         BRA     DONE_663
00005092  0601 0037               8277mmm ALPHA_663: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005096  4E71                    8278mmm DONE_663: NOP
00005098                          8279mmm         ENDM
00005098  4E4F                    8280mm         TRAP    #15         ; EXECUTE OUTPUT       
0000509A                          8281mm         ENDM 
0000509A  3605                    8282m         MOVE.W  D5, D3
0000509C  6000 02C2               8283m         BRA     COMPLETE_630
000050A0                          8284m ADRIMMEDIATEL_630:
000050A0  361A                    8285m         MOVE.W  (A2)+, D3
000050A2                          8286mm         PRINTHASH
000050A2  103C 0006               8287mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050A6  323C 0023               8288mm         MOVE.W  #35, D1     ; AN = SIGN
000050AA  4E4F                    8289mm         TRAP    #15         ; OUTPUT = SIGN
000050AC                          8290mm         ENDM
000050AC                          8291mm         PRINTSIGN
000050AC  103C 0006               8292mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050B0  323C 0024               8293mm         MOVE.W  #36, D1     ; AN = SIGN
000050B4  4E4F                    8294mm         TRAP    #15         ; OUTPUT = SIGN
000050B6                          8295mm         ENDM
000050B6                          8296mm         ADROUT 
000050B6  3212                    8297mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050B8  E049                    8298mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050BA  E849                    8299mm         LSR.W   #4, D1      
000050BC                          8300mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050BC  0C01 0009               8301mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050C0  6E00 000A               8302mmm         BGT     ALPHA_667
000050C4  0601 0030               8303mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050C8  6000 0006               8304mmm         BRA     DONE_667
000050CC  0601 0037               8305mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050D0  4E71                    8306mmm DONE_667: NOP
000050D2                          8307mmm         ENDM
000050D2  4E4F                    8308mm         TRAP    #15         ; EXECUTE OUTPUT
000050D4                          8309mm         
000050D4  3212                    8310mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050D6  E949                    8311mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000050D8  E049                    8312mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050DA  E849                    8313mm         LSR.W   #4, D1      
000050DC                          8314mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050DC  0C01 0009               8315mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050E0  6E00 000A               8316mmm         BGT     ALPHA_668
000050E4  0601 0030               8317mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050E8  6000 0006               8318mmm         BRA     DONE_668
000050EC  0601 0037               8319mmm ALPHA_668: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050F0  4E71                    8320mmm DONE_668: NOP
000050F2                          8321mmm         ENDM
000050F2  4E4F                    8322mm         TRAP    #15         ; EXECUTE OUTPUT
000050F4                          8323mm         
000050F4  3212                    8324mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050F6  E149                    8325mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050F8  E049                    8326mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050FA  E849                    8327mm         LSR.W   #4, D1      
000050FC                          8328mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050FC  0C01 0009               8329mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005100  6E00 000A               8330mmm         BGT     ALPHA_669
00005104  0601 0030               8331mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005108  6000 0006               8332mmm         BRA     DONE_669
0000510C  0601 0037               8333mmm ALPHA_669: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005110  4E71                    8334mmm DONE_669: NOP
00005112                          8335mmm         ENDM
00005112  4E4F                    8336mm         TRAP    #15         ; EXECUTE OUTPUT
00005114                          8337mm         
00005114  3212                    8338mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005116  E149                    8339mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005118  E949                    8340mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000511A  E049                    8341mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000511C  E849                    8342mm         LSR.W   #4, D1      
0000511E                          8343mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000511E  0C01 0009               8344mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005122  6E00 000A               8345mmm         BGT     ALPHA_670
00005126  0601 0030               8346mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000512A  6000 0006               8347mmm         BRA     DONE_670
0000512E  0601 0037               8348mmm ALPHA_670: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005132  4E71                    8349mmm DONE_670: NOP
00005134                          8350mmm         ENDM
00005134  4E4F                    8351mm         TRAP    #15         ; EXECUTE OUTPUT       
00005136                          8352mm         ENDM 
00005136  361A                    8353m         MOVE.W  (A2)+, D3
00005138                          8354mm         ADROUT
00005138  3212                    8355mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000513A  E049                    8356mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000513C  E849                    8357mm         LSR.W   #4, D1      
0000513E                          8358mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000513E  0C01 0009               8359mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005142  6E00 000A               8360mmm         BGT     ALPHA_672
00005146  0601 0030               8361mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000514A  6000 0006               8362mmm         BRA     DONE_672
0000514E  0601 0037               8363mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005152  4E71                    8364mmm DONE_672: NOP
00005154                          8365mmm         ENDM
00005154  4E4F                    8366mm         TRAP    #15         ; EXECUTE OUTPUT
00005156                          8367mm         
00005156  3212                    8368mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005158  E949                    8369mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000515A  E049                    8370mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000515C  E849                    8371mm         LSR.W   #4, D1      
0000515E                          8372mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000515E  0C01 0009               8373mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005162  6E00 000A               8374mmm         BGT     ALPHA_673
00005166  0601 0030               8375mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000516A  6000 0006               8376mmm         BRA     DONE_673
0000516E  0601 0037               8377mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005172  4E71                    8378mmm DONE_673: NOP
00005174                          8379mmm         ENDM
00005174  4E4F                    8380mm         TRAP    #15         ; EXECUTE OUTPUT
00005176                          8381mm         
00005176  3212                    8382mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005178  E149                    8383mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000517A  E049                    8384mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000517C  E849                    8385mm         LSR.W   #4, D1      
0000517E                          8386mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000517E  0C01 0009               8387mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005182  6E00 000A               8388mmm         BGT     ALPHA_674
00005186  0601 0030               8389mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000518A  6000 0006               8390mmm         BRA     DONE_674
0000518E  0601 0037               8391mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005192  4E71                    8392mmm DONE_674: NOP
00005194                          8393mmm         ENDM
00005194  4E4F                    8394mm         TRAP    #15         ; EXECUTE OUTPUT
00005196                          8395mm         
00005196  3212                    8396mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005198  E149                    8397mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000519A  E949                    8398mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000519C  E049                    8399mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000519E  E849                    8400mm         LSR.W   #4, D1      
000051A0                          8401mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051A0  0C01 0009               8402mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051A4  6E00 000A               8403mmm         BGT     ALPHA_675
000051A8  0601 0030               8404mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051AC  6000 0006               8405mmm         BRA     DONE_675
000051B0  0601 0037               8406mmm ALPHA_675: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051B4  4E71                    8407mmm DONE_675: NOP
000051B6                          8408mmm         ENDM
000051B6  4E4F                    8409mm         TRAP    #15         ; EXECUTE OUTPUT       
000051B8                          8410mm         ENDM 
000051B8  3605                    8411m         MOVE.W  D5, D3
000051BA  6000 01A4               8412m         BRA     COMPLETE_630 
000051BE                          8413m ADRABSOLUTEW_630:     
000051BE  361A                    8414m         MOVE.W  (A2)+, D3
000051C0                          8415mm         PRINTSIGN
000051C0  103C 0006               8416mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051C4  323C 0024               8417mm         MOVE.W  #36, D1     ; AN = SIGN
000051C8  4E4F                    8418mm         TRAP    #15         ; OUTPUT = SIGN
000051CA                          8419mm         ENDM
000051CA                          8420mm         ADROUT
000051CA  3212                    8421mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051CC  E049                    8422mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051CE  E849                    8423mm         LSR.W   #4, D1      
000051D0                          8424mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051D0  0C01 0009               8425mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051D4  6E00 000A               8426mmm         BGT     ALPHA_678
000051D8  0601 0030               8427mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051DC  6000 0006               8428mmm         BRA     DONE_678
000051E0  0601 0037               8429mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051E4  4E71                    8430mmm DONE_678: NOP
000051E6                          8431mmm         ENDM
000051E6  4E4F                    8432mm         TRAP    #15         ; EXECUTE OUTPUT
000051E8                          8433mm         
000051E8  3212                    8434mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051EA  E949                    8435mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000051EC  E049                    8436mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051EE  E849                    8437mm         LSR.W   #4, D1      
000051F0                          8438mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051F0  0C01 0009               8439mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F4  6E00 000A               8440mmm         BGT     ALPHA_679
000051F8  0601 0030               8441mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051FC  6000 0006               8442mmm         BRA     DONE_679
00005200  0601 0037               8443mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005204  4E71                    8444mmm DONE_679: NOP
00005206                          8445mmm         ENDM
00005206  4E4F                    8446mm         TRAP    #15         ; EXECUTE OUTPUT
00005208                          8447mm         
00005208  3212                    8448mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000520A  E149                    8449mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000520C  E049                    8450mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000520E  E849                    8451mm         LSR.W   #4, D1      
00005210                          8452mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005210  0C01 0009               8453mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005214  6E00 000A               8454mmm         BGT     ALPHA_680
00005218  0601 0030               8455mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000521C  6000 0006               8456mmm         BRA     DONE_680
00005220  0601 0037               8457mmm ALPHA_680: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005224  4E71                    8458mmm DONE_680: NOP
00005226                          8459mmm         ENDM
00005226  4E4F                    8460mm         TRAP    #15         ; EXECUTE OUTPUT
00005228                          8461mm         
00005228  3212                    8462mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000522A  E149                    8463mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000522C  E949                    8464mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000522E  E049                    8465mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005230  E849                    8466mm         LSR.W   #4, D1      
00005232                          8467mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005232  0C01 0009               8468mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005236  6E00 000A               8469mmm         BGT     ALPHA_681
0000523A  0601 0030               8470mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000523E  6000 0006               8471mmm         BRA     DONE_681
00005242  0601 0037               8472mmm ALPHA_681: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005246  4E71                    8473mmm DONE_681: NOP
00005248                          8474mmm         ENDM
00005248  4E4F                    8475mm         TRAP    #15         ; EXECUTE OUTPUT       
0000524A                          8476mm         ENDM 
0000524A  3605                    8477m         MOVE.W  D5, D3
0000524C  6000 0112               8478m         BRA     COMPLETE_630  
00005250                          8479m ADRABSOLUTEL_630:  
00005250  361A                    8480m         MOVE.W  (A2)+, D3
00005252                          8481mm         PRINTSIGN
00005252  103C 0006               8482mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005256  323C 0024               8483mm         MOVE.W  #36, D1     ; AN = SIGN
0000525A  4E4F                    8484mm         TRAP    #15         ; OUTPUT = SIGN
0000525C                          8485mm         ENDM
0000525C                          8486mm         ADROUT 
0000525C  3212                    8487mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000525E  E049                    8488mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005260  E849                    8489mm         LSR.W   #4, D1      
00005262                          8490mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005262  0C01 0009               8491mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005266  6E00 000A               8492mmm         BGT     ALPHA_684
0000526A  0601 0030               8493mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000526E  6000 0006               8494mmm         BRA     DONE_684
00005272  0601 0037               8495mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005276  4E71                    8496mmm DONE_684: NOP
00005278                          8497mmm         ENDM
00005278  4E4F                    8498mm         TRAP    #15         ; EXECUTE OUTPUT
0000527A                          8499mm         
0000527A  3212                    8500mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000527C  E949                    8501mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000527E  E049                    8502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005280  E849                    8503mm         LSR.W   #4, D1      
00005282                          8504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005282  0C01 0009               8505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005286  6E00 000A               8506mmm         BGT     ALPHA_685
0000528A  0601 0030               8507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000528E  6000 0006               8508mmm         BRA     DONE_685
00005292  0601 0037               8509mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005296  4E71                    8510mmm DONE_685: NOP
00005298                          8511mmm         ENDM
00005298  4E4F                    8512mm         TRAP    #15         ; EXECUTE OUTPUT
0000529A                          8513mm         
0000529A  3212                    8514mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000529C  E149                    8515mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000529E  E049                    8516mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052A0  E849                    8517mm         LSR.W   #4, D1      
000052A2                          8518mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052A2  0C01 0009               8519mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052A6  6E00 000A               8520mmm         BGT     ALPHA_686
000052AA  0601 0030               8521mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052AE  6000 0006               8522mmm         BRA     DONE_686
000052B2  0601 0037               8523mmm ALPHA_686: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052B6  4E71                    8524mmm DONE_686: NOP
000052B8                          8525mmm         ENDM
000052B8  4E4F                    8526mm         TRAP    #15         ; EXECUTE OUTPUT
000052BA                          8527mm         
000052BA  3212                    8528mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052BC  E149                    8529mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052BE  E949                    8530mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052C0  E049                    8531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052C2  E849                    8532mm         LSR.W   #4, D1      
000052C4                          8533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052C4  0C01 0009               8534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052C8  6E00 000A               8535mmm         BGT     ALPHA_687
000052CC  0601 0030               8536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052D0  6000 0006               8537mmm         BRA     DONE_687
000052D4  0601 0037               8538mmm ALPHA_687: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052D8  4E71                    8539mmm DONE_687: NOP
000052DA                          8540mmm         ENDM
000052DA  4E4F                    8541mm         TRAP    #15         ; EXECUTE OUTPUT       
000052DC                          8542mm         ENDM 
000052DC  361A                    8543m         MOVE.W  (A2)+, D3
000052DE                          8544mm         ADROUT
000052DE  3212                    8545mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052E0  E049                    8546mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052E2  E849                    8547mm         LSR.W   #4, D1      
000052E4                          8548mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052E4  0C01 0009               8549mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052E8  6E00 000A               8550mmm         BGT     ALPHA_689
000052EC  0601 0030               8551mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052F0  6000 0006               8552mmm         BRA     DONE_689
000052F4  0601 0037               8553mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052F8  4E71                    8554mmm DONE_689: NOP
000052FA                          8555mmm         ENDM
000052FA  4E4F                    8556mm         TRAP    #15         ; EXECUTE OUTPUT
000052FC                          8557mm         
000052FC  3212                    8558mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052FE  E949                    8559mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005300  E049                    8560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005302  E849                    8561mm         LSR.W   #4, D1      
00005304                          8562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005304  0C01 0009               8563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005308  6E00 000A               8564mmm         BGT     ALPHA_690
0000530C  0601 0030               8565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005310  6000 0006               8566mmm         BRA     DONE_690
00005314  0601 0037               8567mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005318  4E71                    8568mmm DONE_690: NOP
0000531A                          8569mmm         ENDM
0000531A  4E4F                    8570mm         TRAP    #15         ; EXECUTE OUTPUT
0000531C                          8571mm         
0000531C  3212                    8572mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000531E  E149                    8573mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005320  E049                    8574mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005322  E849                    8575mm         LSR.W   #4, D1      
00005324                          8576mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005324  0C01 0009               8577mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005328  6E00 000A               8578mmm         BGT     ALPHA_691
0000532C  0601 0030               8579mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005330  6000 0006               8580mmm         BRA     DONE_691
00005334  0601 0037               8581mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005338  4E71                    8582mmm DONE_691: NOP
0000533A                          8583mmm         ENDM
0000533A  4E4F                    8584mm         TRAP    #15         ; EXECUTE OUTPUT
0000533C                          8585mm         
0000533C  3212                    8586mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000533E  E149                    8587mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005340  E949                    8588mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005342  E049                    8589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005344  E849                    8590mm         LSR.W   #4, D1      
00005346                          8591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005346  0C01 0009               8592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000534A  6E00 000A               8593mmm         BGT     ALPHA_692
0000534E  0601 0030               8594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005352  6000 0006               8595mmm         BRA     DONE_692
00005356  0601 0037               8596mmm ALPHA_692: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000535A  4E71                    8597mmm DONE_692: NOP
0000535C                          8598mmm         ENDM
0000535C  4E4F                    8599mm         TRAP    #15         ; EXECUTE OUTPUT       
0000535E                          8600mm         ENDM 
0000535E  3605                    8601m         MOVE.W  D5, D3
00005360                          8602m 
00005360                          8603m COMPLETE_630:  ; OPCODE HAS BEEN VERIFIED
00005360                          8604m         ENDM
00005360  6000 05F4               8605          BRA     decodeANDcomp
00005364                          8606  decodeAndDestOp:
00005364                          8607m         prepareAdrMode  #$1,(A2)
00005364  3C3C 0001               8608m         MOVE.W  #$1, D6      ; INPUT VALUE
00005368  3212                    8609m         MOVE.W  (A2), D1
0000536A  BC3C 0001               8610m         CMP.B   #$01, D6
0000536E  6700 000C               8611m         BEQ     ADRSOURCE_693    
00005372                          8612m ADRDEST_693:
00005372  EF49                    8613m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005374  E049                    8614m         LSR     #$08, D1
00005376  EA49                    8615m         LSR     #$05, D1
00005378  6000 000A               8616m         BRA     COMPLETE_693 
0000537C                          8617m ADRSOURCE_693:                
0000537C  E149                    8618m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000537E  E549                    8619m         LSL     #$02, D1
00005380  E049                    8620m         LSR     #$08, D1
00005382  EA49                    8621m         LSR     #$05, D1
00005384                          8622m COMPLETE_693:  ; OPCODE HAS BEEN VERIFIED
00005384                          8623m         ENDM        
00005384                          8624m         decodeAdrMode   (A2), D1
00005384  3612                    8625m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005386  3201                    8626m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005388                          8627m 
00005388  B23C 0001               8628m         CMP.B   #$01, D1
0000538C  6700 0066               8629m         BEQ     ADRREGDIRECT_694    
00005390  B23C 0002               8630m         CMP.B   #$02, D1
00005394  6700 00A0               8631m         BEQ     ADRREGINDIRECT_694  
00005398  B23C 0003               8632m         CMP.B   #$03, D1
0000539C  6700 0102               8633m         BEQ     ADRREGPOSTINC_694  
000053A0  B23C 0004               8634m         CMP.B   #$04, D1
000053A4  6700 0178               8635m         BEQ     ADRREGPREDEC_694
000053A8  B23C 0007               8636m         CMP.B   #$07, D1
000053AC  6700 01EE               8637m         BEQ     ADRABSOLUTE_694    
000053B0                          8638m         
000053B0                          8639m DATAREGDIRECT_694: 
000053B0  BC3C 0001               8640m         CMP.B   #$01, D6
000053B4  6700 001E               8641m         BEQ     DATAREGDIRECTSRC_694   
000053B8                          8642m DATAREGDIRECTDEST_694: 
000053B8                          8643mm         PRINTDNDEST D3 
000053B8  3203                    8644mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000053BA  E949                    8645mm         LSL     #$04, D1
000053BC  E049                    8646mm         LSR     #$08, D1
000053BE  EA49                    8647mm         LSR     #$05, D1
000053C0  43F8 00C1               8648mm         LEA     ODN, A1     
000053C4  103C 000E               8649mm         MOVE.B  #14,D0          
000053C8  4E4F                    8650mm         TRAP    #15
000053CA  103C 0003               8651mm         MOVE.B  #3,D0          
000053CE  4E4F                    8652mm         TRAP    #15
000053D0                          8653mm         ENDM
000053D0  6000 0562               8654m         BRA     COMPLETE_694 
000053D4                          8655m DATAREGDIRECTSRC_694: 
000053D4                          8656mm         PRINTDNSRC D3 
000053D4  4281                    8657mm         CLR.L   D1
000053D6  3203                    8658mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000053D8  E149                    8659mm         LSL     #$08, D1
000053DA  EB49                    8660mm         LSL     #$05, D1
000053DC  E049                    8661mm         LSR     #$08, D1
000053DE  EA49                    8662mm         LSR     #$05, D1
000053E0  43F8 00C1               8663mm         LEA     ODN, A1     
000053E4  103C 000E               8664mm         MOVE.B  #14,D0          
000053E8  4E4F                    8665mm         TRAP    #15
000053EA  103C 0003               8666mm         MOVE.B  #3,D0          
000053EE  4E4F                    8667mm         TRAP    #15
000053F0                          8668mm         ENDM
000053F0  6000 0542               8669m         BRA     COMPLETE_694   
000053F4                          8670m         
000053F4                          8671m ADRREGDIRECT_694: 
000053F4  BC3C 0001               8672m         CMP.B   #$01, D6
000053F8  6700 001E               8673m         BEQ     ADRREGDIRECTSRC_694   
000053FC                          8674m ADRREGDIRECTDEST_694:
000053FC                          8675mm         PRINTANDEST D3
000053FC  3203                    8676mm         MOVE.W  D3, D1
000053FE  E949                    8677mm         LSL     #$04, D1
00005400  E049                    8678mm         LSR     #$08, D1
00005402  EA49                    8679mm         LSR     #$05, D1
00005404  43F8 00C3               8680mm         LEA     OAN, A1     
00005408  103C 000E               8681mm         MOVE.B  #14,D0          
0000540C  4E4F                    8682mm         TRAP    #15
0000540E  103C 0003               8683mm         MOVE.B  #3,D0          
00005412  4E4F                    8684mm         TRAP    #15
00005414                          8685mm         ENDM
00005414  6000 051E               8686m         BRA     COMPLETE_694   
00005418                          8687m ADRREGDIRECTSRC_694:
00005418                          8688mm         PRINTANSRC D3
00005418  3203                    8689mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000541A  E149                    8690mm         LSL     #$08, D1
0000541C  EB49                    8691mm         LSL     #$05, D1
0000541E  E049                    8692mm         LSR     #$08, D1
00005420  EA49                    8693mm         LSR     #$05, D1
00005422  43F8 00C3               8694mm         LEA     OAN, A1     
00005426  103C 000E               8695mm         MOVE.B  #14,D0          
0000542A  4E4F                    8696mm         TRAP    #15
0000542C  103C 0003               8697mm         MOVE.B  #3,D0          
00005430  4E4F                    8698mm         TRAP    #15
00005432                          8699mm         ENDM
00005432  6000 0500               8700m         BRA     COMPLETE_694   
00005436                          8701m        
00005436                          8702m ADRREGINDIRECT_694:   
00005436  BC3C 0001               8703m         CMP.B   #$01, D6
0000543A  6700 0032               8704m         BEQ     ADRREGINDIRECTSRC_694   
0000543E                          8705m ADRREGINDIRECTDEST_694:
0000543E                          8706mm         PRINTLB
0000543E  43F8 00C5               8707mm         LEA     OLB, A1     
00005442  103C 000E               8708mm         MOVE.B  #14,D0          
00005446  4E4F                    8709mm         TRAP    #15
00005448                          8710mm         ENDM
00005448                          8711mm         PRINTANDEST D3  
00005448  3203                    8712mm         MOVE.W  D3, D1
0000544A  E949                    8713mm         LSL     #$04, D1
0000544C  E049                    8714mm         LSR     #$08, D1
0000544E  EA49                    8715mm         LSR     #$05, D1
00005450  43F8 00C3               8716mm         LEA     OAN, A1     
00005454  103C 000E               8717mm         MOVE.B  #14,D0          
00005458  4E4F                    8718mm         TRAP    #15
0000545A  103C 0003               8719mm         MOVE.B  #3,D0          
0000545E  4E4F                    8720mm         TRAP    #15
00005460                          8721mm         ENDM
00005460                          8722mm         PRINTRB
00005460  43F8 00C7               8723mm         LEA     ORB, A1     
00005464  103C 000E               8724mm         MOVE.B  #14,D0          
00005468  4E4F                    8725mm         TRAP    #15
0000546A                          8726mm         ENDM
0000546A  6000 04C8               8727m         BRA     COMPLETE_694     
0000546E                          8728m ADRREGINDIRECTSRC_694:   
0000546E                          8729mm         PRINTLB
0000546E  43F8 00C5               8730mm         LEA     OLB, A1     
00005472  103C 000E               8731mm         MOVE.B  #14,D0          
00005476  4E4F                    8732mm         TRAP    #15
00005478                          8733mm         ENDM
00005478                          8734mm         PRINTANSRC D3  
00005478  3203                    8735mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000547A  E149                    8736mm         LSL     #$08, D1
0000547C  EB49                    8737mm         LSL     #$05, D1
0000547E  E049                    8738mm         LSR     #$08, D1
00005480  EA49                    8739mm         LSR     #$05, D1
00005482  43F8 00C3               8740mm         LEA     OAN, A1     
00005486  103C 000E               8741mm         MOVE.B  #14,D0          
0000548A  4E4F                    8742mm         TRAP    #15
0000548C  103C 0003               8743mm         MOVE.B  #3,D0          
00005490  4E4F                    8744mm         TRAP    #15
00005492                          8745mm         ENDM
00005492                          8746mm         PRINTRB
00005492  43F8 00C7               8747mm         LEA     ORB, A1     
00005496  103C 000E               8748mm         MOVE.B  #14,D0          
0000549A  4E4F                    8749mm         TRAP    #15
0000549C                          8750mm         ENDM
0000549C  6000 0496               8751m         BRA     COMPLETE_694   
000054A0                          8752m         
000054A0                          8753m ADRREGPOSTINC_694:   
000054A0  BC3C 0001               8754m         CMP.B   #$01, D6
000054A4  6700 003C               8755m         BEQ     ADRREGPOSTINCSRC_694   
000054A8                          8756m ADRREGPOSTINCDEST_694: 
000054A8                          8757mm         PRINTLB
000054A8  43F8 00C5               8758mm         LEA     OLB, A1     
000054AC  103C 000E               8759mm         MOVE.B  #14,D0          
000054B0  4E4F                    8760mm         TRAP    #15
000054B2                          8761mm         ENDM
000054B2                          8762mm         PRINTANDEST D3  
000054B2  3203                    8763mm         MOVE.W  D3, D1
000054B4  E949                    8764mm         LSL     #$04, D1
000054B6  E049                    8765mm         LSR     #$08, D1
000054B8  EA49                    8766mm         LSR     #$05, D1
000054BA  43F8 00C3               8767mm         LEA     OAN, A1     
000054BE  103C 000E               8768mm         MOVE.B  #14,D0          
000054C2  4E4F                    8769mm         TRAP    #15
000054C4  103C 0003               8770mm         MOVE.B  #3,D0          
000054C8  4E4F                    8771mm         TRAP    #15
000054CA                          8772mm         ENDM
000054CA                          8773mm         PRINTRB
000054CA  43F8 00C7               8774mm         LEA     ORB, A1     
000054CE  103C 000E               8775mm         MOVE.B  #14,D0          
000054D2  4E4F                    8776mm         TRAP    #15
000054D4                          8777mm         ENDM
000054D4                          8778mm         PRINTPI
000054D4  43F8 00CE               8779mm         LEA     OPSTINC, A1     
000054D8  103C 000E               8780mm         MOVE.B  #14,D0          
000054DC  4E4F                    8781mm         TRAP    #15
000054DE                          8782mm         ENDM
000054DE  6000 0454               8783m         BRA     COMPLETE_694  
000054E2                          8784m ADRREGPOSTINCSRC_694:           
000054E2                          8785mm         PRINTLB
000054E2  43F8 00C5               8786mm         LEA     OLB, A1     
000054E6  103C 000E               8787mm         MOVE.B  #14,D0          
000054EA  4E4F                    8788mm         TRAP    #15
000054EC                          8789mm         ENDM
000054EC                          8790mm         PRINTANSRC D3  
000054EC  3203                    8791mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000054EE  E149                    8792mm         LSL     #$08, D1
000054F0  EB49                    8793mm         LSL     #$05, D1
000054F2  E049                    8794mm         LSR     #$08, D1
000054F4  EA49                    8795mm         LSR     #$05, D1
000054F6  43F8 00C3               8796mm         LEA     OAN, A1     
000054FA  103C 000E               8797mm         MOVE.B  #14,D0          
000054FE  4E4F                    8798mm         TRAP    #15
00005500  103C 0003               8799mm         MOVE.B  #3,D0          
00005504  4E4F                    8800mm         TRAP    #15
00005506                          8801mm         ENDM
00005506                          8802mm         PRINTRB
00005506  43F8 00C7               8803mm         LEA     ORB, A1     
0000550A  103C 000E               8804mm         MOVE.B  #14,D0          
0000550E  4E4F                    8805mm         TRAP    #15
00005510                          8806mm         ENDM
00005510                          8807mm         PRINTPI
00005510  43F8 00CE               8808mm         LEA     OPSTINC, A1     
00005514  103C 000E               8809mm         MOVE.B  #14,D0          
00005518  4E4F                    8810mm         TRAP    #15
0000551A                          8811mm         ENDM
0000551A  6000 0418               8812m         BRA     COMPLETE_694  
0000551E                          8813m ADRREGPREDEC_694: 
0000551E  BC3C 0001               8814m         CMP.B   #$01, D6
00005522  6700 003C               8815m         BEQ     ADRREGPREDECSRC_694   
00005526                          8816m ADRREGPREDECDEST_694:
00005526                          8817mm         PRINTPD  
00005526  43F8 00CC               8818mm         LEA     OPREDEC, A1     
0000552A  103C 000E               8819mm         MOVE.B  #14,D0          
0000552E  4E4F                    8820mm         TRAP    #15
00005530                          8821mm         ENDM
00005530                          8822mm         PRINTLB
00005530  43F8 00C5               8823mm         LEA     OLB, A1     
00005534  103C 000E               8824mm         MOVE.B  #14,D0          
00005538  4E4F                    8825mm         TRAP    #15
0000553A                          8826mm         ENDM
0000553A                          8827mm         PRINTANDEST D3  
0000553A  3203                    8828mm         MOVE.W  D3, D1
0000553C  E949                    8829mm         LSL     #$04, D1
0000553E  E049                    8830mm         LSR     #$08, D1
00005540  EA49                    8831mm         LSR     #$05, D1
00005542  43F8 00C3               8832mm         LEA     OAN, A1     
00005546  103C 000E               8833mm         MOVE.B  #14,D0          
0000554A  4E4F                    8834mm         TRAP    #15
0000554C  103C 0003               8835mm         MOVE.B  #3,D0          
00005550  4E4F                    8836mm         TRAP    #15
00005552                          8837mm         ENDM
00005552                          8838mm         PRINTRB
00005552  43F8 00C7               8839mm         LEA     ORB, A1     
00005556  103C 000E               8840mm         MOVE.B  #14,D0          
0000555A  4E4F                    8841mm         TRAP    #15
0000555C                          8842mm         ENDM
0000555C  6000 03D6               8843m         BRA     COMPLETE_694   
00005560                          8844m ADRREGPREDECSRC_694: 
00005560                          8845mm         PRINTPD  
00005560  43F8 00CC               8846mm         LEA     OPREDEC, A1     
00005564  103C 000E               8847mm         MOVE.B  #14,D0          
00005568  4E4F                    8848mm         TRAP    #15
0000556A                          8849mm         ENDM
0000556A                          8850mm         PRINTLB
0000556A  43F8 00C5               8851mm         LEA     OLB, A1     
0000556E  103C 000E               8852mm         MOVE.B  #14,D0          
00005572  4E4F                    8853mm         TRAP    #15
00005574                          8854mm         ENDM
00005574                          8855mm         PRINTANSRC D3  
00005574  3203                    8856mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005576  E149                    8857mm         LSL     #$08, D1
00005578  EB49                    8858mm         LSL     #$05, D1
0000557A  E049                    8859mm         LSR     #$08, D1
0000557C  EA49                    8860mm         LSR     #$05, D1
0000557E  43F8 00C3               8861mm         LEA     OAN, A1     
00005582  103C 000E               8862mm         MOVE.B  #14,D0          
00005586  4E4F                    8863mm         TRAP    #15
00005588  103C 0003               8864mm         MOVE.B  #3,D0          
0000558C  4E4F                    8865mm         TRAP    #15
0000558E                          8866mm         ENDM
0000558E                          8867mm         PRINTRB
0000558E  43F8 00C7               8868mm         LEA     ORB, A1     
00005592  103C 000E               8869mm         MOVE.B  #14,D0          
00005596  4E4F                    8870mm         TRAP    #15
00005598                          8871mm         ENDM
00005598  6000 039A               8872m         BRA     COMPLETE_694
0000559C                          8873m        
0000559C                          8874m ADRABSOLUTE_694:
0000559C  BC3C 0001               8875m         CMP.B   #$01, D6
000055A0  6600 0018               8876m         BNE     ADRABSOLUTEDST_694 
000055A4                          8877m         
000055A4  3A03                    8878m         MOVE.W  D3, D5
000055A6  0803 0002               8879m         BTST    #2, D3
000055AA  6600 0024               8880m         BNE     ADRIMMEDIATE_694
000055AE  0803 0000               8881m         BTST    #0, D3
000055B2  6600 0270               8882m         BNE     ADRABSOLUTEL_694
000055B6  6000 01DA               8883m         BRA     ADRABSOLUTEW_694
000055BA                          8884m ADRABSOLUTEDST_694:
000055BA  3A03                    8885m         MOVE.W  D3, D5
000055BC  0803 000B               8886m         BTST    #$B, D3
000055C0  6600 000E               8887m         BNE     ADRIMMEDIATE_694
000055C4  0803 0009               8888m         BTST    #$09, D3
000055C8  6600 025A               8889m         BNE     ADRABSOLUTEL_694
000055CC  6000 01C4               8890m         BRA     ADRABSOLUTEW_694
000055D0                          8891m ADRIMMEDIATE_694:
000055D0  BE3C 0001               8892m         CMP.B   #1, D7
000055D4  6700 009E               8893m         BEQ     ADRIMMEDIATEL_694
000055D8                          8894m ADRIMMEDIATEW_694:
000055D8  361A                    8895m         MOVE.W  (A2)+, D3
000055DA                          8896mm         PRINTHASH
000055DA  103C 0006               8897mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055DE  323C 0023               8898mm         MOVE.W  #35, D1     ; AN = SIGN
000055E2  4E4F                    8899mm         TRAP    #15         ; OUTPUT = SIGN
000055E4                          8900mm         ENDM
000055E4                          8901mm         PRINTSIGN
000055E4  103C 0006               8902mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055E8  323C 0024               8903mm         MOVE.W  #36, D1     ; AN = SIGN
000055EC  4E4F                    8904mm         TRAP    #15         ; OUTPUT = SIGN
000055EE                          8905mm         ENDM
000055EE                          8906mm         ADROUT
000055EE  3212                    8907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000055F0  E049                    8908mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000055F2  E849                    8909mm         LSR.W   #4, D1      
000055F4                          8910mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000055F4  0C01 0009               8911mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000055F8  6E00 000A               8912mmm         BGT     ALPHA_724
000055FC  0601 0030               8913mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005600  6000 0006               8914mmm         BRA     DONE_724
00005604  0601 0037               8915mmm ALPHA_724: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005608  4E71                    8916mmm DONE_724: NOP
0000560A                          8917mmm         ENDM
0000560A  4E4F                    8918mm         TRAP    #15         ; EXECUTE OUTPUT
0000560C                          8919mm         
0000560C  3212                    8920mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000560E  E949                    8921mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005610  E049                    8922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005612  E849                    8923mm         LSR.W   #4, D1      
00005614                          8924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005614  0C01 0009               8925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005618  6E00 000A               8926mmm         BGT     ALPHA_725
0000561C  0601 0030               8927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005620  6000 0006               8928mmm         BRA     DONE_725
00005624  0601 0037               8929mmm ALPHA_725: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005628  4E71                    8930mmm DONE_725: NOP
0000562A                          8931mmm         ENDM
0000562A  4E4F                    8932mm         TRAP    #15         ; EXECUTE OUTPUT
0000562C                          8933mm         
0000562C  3212                    8934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000562E  E149                    8935mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005630  E049                    8936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005632  E849                    8937mm         LSR.W   #4, D1      
00005634                          8938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005634  0C01 0009               8939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005638  6E00 000A               8940mmm         BGT     ALPHA_726
0000563C  0601 0030               8941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005640  6000 0006               8942mmm         BRA     DONE_726
00005644  0601 0037               8943mmm ALPHA_726: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005648  4E71                    8944mmm DONE_726: NOP
0000564A                          8945mmm         ENDM
0000564A  4E4F                    8946mm         TRAP    #15         ; EXECUTE OUTPUT
0000564C                          8947mm         
0000564C  3212                    8948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000564E  E149                    8949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005650  E949                    8950mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005652  E049                    8951mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005654  E849                    8952mm         LSR.W   #4, D1      
00005656                          8953mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005656  0C01 0009               8954mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000565A  6E00 000A               8955mmm         BGT     ALPHA_727
0000565E  0601 0030               8956mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005662  6000 0006               8957mmm         BRA     DONE_727
00005666  0601 0037               8958mmm ALPHA_727: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000566A  4E71                    8959mmm DONE_727: NOP
0000566C                          8960mmm         ENDM
0000566C  4E4F                    8961mm         TRAP    #15         ; EXECUTE OUTPUT       
0000566E                          8962mm         ENDM 
0000566E  3605                    8963m         MOVE.W  D5, D3
00005670  6000 02C2               8964m         BRA     COMPLETE_694
00005674                          8965m ADRIMMEDIATEL_694:
00005674  361A                    8966m         MOVE.W  (A2)+, D3
00005676                          8967mm         PRINTHASH
00005676  103C 0006               8968mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000567A  323C 0023               8969mm         MOVE.W  #35, D1     ; AN = SIGN
0000567E  4E4F                    8970mm         TRAP    #15         ; OUTPUT = SIGN
00005680                          8971mm         ENDM
00005680                          8972mm         PRINTSIGN
00005680  103C 0006               8973mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005684  323C 0024               8974mm         MOVE.W  #36, D1     ; AN = SIGN
00005688  4E4F                    8975mm         TRAP    #15         ; OUTPUT = SIGN
0000568A                          8976mm         ENDM
0000568A                          8977mm         ADROUT 
0000568A  3212                    8978mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000568C  E049                    8979mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000568E  E849                    8980mm         LSR.W   #4, D1      
00005690                          8981mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005690  0C01 0009               8982mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005694  6E00 000A               8983mmm         BGT     ALPHA_731
00005698  0601 0030               8984mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000569C  6000 0006               8985mmm         BRA     DONE_731
000056A0  0601 0037               8986mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056A4  4E71                    8987mmm DONE_731: NOP
000056A6                          8988mmm         ENDM
000056A6  4E4F                    8989mm         TRAP    #15         ; EXECUTE OUTPUT
000056A8                          8990mm         
000056A8  3212                    8991mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056AA  E949                    8992mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000056AC  E049                    8993mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056AE  E849                    8994mm         LSR.W   #4, D1      
000056B0                          8995mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056B0  0C01 0009               8996mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056B4  6E00 000A               8997mmm         BGT     ALPHA_732
000056B8  0601 0030               8998mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056BC  6000 0006               8999mmm         BRA     DONE_732
000056C0  0601 0037               9000mmm ALPHA_732: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056C4  4E71                    9001mmm DONE_732: NOP
000056C6                          9002mmm         ENDM
000056C6  4E4F                    9003mm         TRAP    #15         ; EXECUTE OUTPUT
000056C8                          9004mm         
000056C8  3212                    9005mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056CA  E149                    9006mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056CC  E049                    9007mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056CE  E849                    9008mm         LSR.W   #4, D1      
000056D0                          9009mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056D0  0C01 0009               9010mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056D4  6E00 000A               9011mmm         BGT     ALPHA_733
000056D8  0601 0030               9012mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056DC  6000 0006               9013mmm         BRA     DONE_733
000056E0  0601 0037               9014mmm ALPHA_733: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056E4  4E71                    9015mmm DONE_733: NOP
000056E6                          9016mmm         ENDM
000056E6  4E4F                    9017mm         TRAP    #15         ; EXECUTE OUTPUT
000056E8                          9018mm         
000056E8  3212                    9019mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056EA  E149                    9020mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056EC  E949                    9021mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000056EE  E049                    9022mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056F0  E849                    9023mm         LSR.W   #4, D1      
000056F2                          9024mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056F2  0C01 0009               9025mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056F6  6E00 000A               9026mmm         BGT     ALPHA_734
000056FA  0601 0030               9027mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056FE  6000 0006               9028mmm         BRA     DONE_734
00005702  0601 0037               9029mmm ALPHA_734: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005706  4E71                    9030mmm DONE_734: NOP
00005708                          9031mmm         ENDM
00005708  4E4F                    9032mm         TRAP    #15         ; EXECUTE OUTPUT       
0000570A                          9033mm         ENDM 
0000570A  361A                    9034m         MOVE.W  (A2)+, D3
0000570C                          9035mm         ADROUT
0000570C  3212                    9036mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000570E  E049                    9037mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005710  E849                    9038mm         LSR.W   #4, D1      
00005712                          9039mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005712  0C01 0009               9040mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005716  6E00 000A               9041mmm         BGT     ALPHA_736
0000571A  0601 0030               9042mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000571E  6000 0006               9043mmm         BRA     DONE_736
00005722  0601 0037               9044mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005726  4E71                    9045mmm DONE_736: NOP
00005728                          9046mmm         ENDM
00005728  4E4F                    9047mm         TRAP    #15         ; EXECUTE OUTPUT
0000572A                          9048mm         
0000572A  3212                    9049mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000572C  E949                    9050mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000572E  E049                    9051mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005730  E849                    9052mm         LSR.W   #4, D1      
00005732                          9053mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005732  0C01 0009               9054mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005736  6E00 000A               9055mmm         BGT     ALPHA_737
0000573A  0601 0030               9056mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000573E  6000 0006               9057mmm         BRA     DONE_737
00005742  0601 0037               9058mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005746  4E71                    9059mmm DONE_737: NOP
00005748                          9060mmm         ENDM
00005748  4E4F                    9061mm         TRAP    #15         ; EXECUTE OUTPUT
0000574A                          9062mm         
0000574A  3212                    9063mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000574C  E149                    9064mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000574E  E049                    9065mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005750  E849                    9066mm         LSR.W   #4, D1      
00005752                          9067mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005752  0C01 0009               9068mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005756  6E00 000A               9069mmm         BGT     ALPHA_738
0000575A  0601 0030               9070mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000575E  6000 0006               9071mmm         BRA     DONE_738
00005762  0601 0037               9072mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005766  4E71                    9073mmm DONE_738: NOP
00005768                          9074mmm         ENDM
00005768  4E4F                    9075mm         TRAP    #15         ; EXECUTE OUTPUT
0000576A                          9076mm         
0000576A  3212                    9077mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000576C  E149                    9078mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000576E  E949                    9079mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005770  E049                    9080mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005772  E849                    9081mm         LSR.W   #4, D1      
00005774                          9082mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005774  0C01 0009               9083mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005778  6E00 000A               9084mmm         BGT     ALPHA_739
0000577C  0601 0030               9085mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005780  6000 0006               9086mmm         BRA     DONE_739
00005784  0601 0037               9087mmm ALPHA_739: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005788  4E71                    9088mmm DONE_739: NOP
0000578A                          9089mmm         ENDM
0000578A  4E4F                    9090mm         TRAP    #15         ; EXECUTE OUTPUT       
0000578C                          9091mm         ENDM 
0000578C  3605                    9092m         MOVE.W  D5, D3
0000578E  6000 01A4               9093m         BRA     COMPLETE_694 
00005792                          9094m ADRABSOLUTEW_694:     
00005792  361A                    9095m         MOVE.W  (A2)+, D3
00005794                          9096mm         PRINTSIGN
00005794  103C 0006               9097mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005798  323C 0024               9098mm         MOVE.W  #36, D1     ; AN = SIGN
0000579C  4E4F                    9099mm         TRAP    #15         ; OUTPUT = SIGN
0000579E                          9100mm         ENDM
0000579E                          9101mm         ADROUT
0000579E  3212                    9102mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057A0  E049                    9103mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057A2  E849                    9104mm         LSR.W   #4, D1      
000057A4                          9105mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057A4  0C01 0009               9106mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057A8  6E00 000A               9107mmm         BGT     ALPHA_742
000057AC  0601 0030               9108mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057B0  6000 0006               9109mmm         BRA     DONE_742
000057B4  0601 0037               9110mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057B8  4E71                    9111mmm DONE_742: NOP
000057BA                          9112mmm         ENDM
000057BA  4E4F                    9113mm         TRAP    #15         ; EXECUTE OUTPUT
000057BC                          9114mm         
000057BC  3212                    9115mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057BE  E949                    9116mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000057C0  E049                    9117mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057C2  E849                    9118mm         LSR.W   #4, D1      
000057C4                          9119mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057C4  0C01 0009               9120mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057C8  6E00 000A               9121mmm         BGT     ALPHA_743
000057CC  0601 0030               9122mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057D0  6000 0006               9123mmm         BRA     DONE_743
000057D4  0601 0037               9124mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057D8  4E71                    9125mmm DONE_743: NOP
000057DA                          9126mmm         ENDM
000057DA  4E4F                    9127mm         TRAP    #15         ; EXECUTE OUTPUT
000057DC                          9128mm         
000057DC  3212                    9129mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057DE  E149                    9130mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057E0  E049                    9131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057E2  E849                    9132mm         LSR.W   #4, D1      
000057E4                          9133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057E4  0C01 0009               9134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057E8  6E00 000A               9135mmm         BGT     ALPHA_744
000057EC  0601 0030               9136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057F0  6000 0006               9137mmm         BRA     DONE_744
000057F4  0601 0037               9138mmm ALPHA_744: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057F8  4E71                    9139mmm DONE_744: NOP
000057FA                          9140mmm         ENDM
000057FA  4E4F                    9141mm         TRAP    #15         ; EXECUTE OUTPUT
000057FC                          9142mm         
000057FC  3212                    9143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057FE  E149                    9144mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005800  E949                    9145mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005802  E049                    9146mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005804  E849                    9147mm         LSR.W   #4, D1      
00005806                          9148mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005806  0C01 0009               9149mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000580A  6E00 000A               9150mmm         BGT     ALPHA_745
0000580E  0601 0030               9151mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005812  6000 0006               9152mmm         BRA     DONE_745
00005816  0601 0037               9153mmm ALPHA_745: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000581A  4E71                    9154mmm DONE_745: NOP
0000581C                          9155mmm         ENDM
0000581C  4E4F                    9156mm         TRAP    #15         ; EXECUTE OUTPUT       
0000581E                          9157mm         ENDM 
0000581E  3605                    9158m         MOVE.W  D5, D3
00005820  6000 0112               9159m         BRA     COMPLETE_694  
00005824                          9160m ADRABSOLUTEL_694:  
00005824  361A                    9161m         MOVE.W  (A2)+, D3
00005826                          9162mm         PRINTSIGN
00005826  103C 0006               9163mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000582A  323C 0024               9164mm         MOVE.W  #36, D1     ; AN = SIGN
0000582E  4E4F                    9165mm         TRAP    #15         ; OUTPUT = SIGN
00005830                          9166mm         ENDM
00005830                          9167mm         ADROUT 
00005830  3212                    9168mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005832  E049                    9169mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005834  E849                    9170mm         LSR.W   #4, D1      
00005836                          9171mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005836  0C01 0009               9172mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000583A  6E00 000A               9173mmm         BGT     ALPHA_748
0000583E  0601 0030               9174mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005842  6000 0006               9175mmm         BRA     DONE_748
00005846  0601 0037               9176mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000584A  4E71                    9177mmm DONE_748: NOP
0000584C                          9178mmm         ENDM
0000584C  4E4F                    9179mm         TRAP    #15         ; EXECUTE OUTPUT
0000584E                          9180mm         
0000584E  3212                    9181mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005850  E949                    9182mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005852  E049                    9183mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005854  E849                    9184mm         LSR.W   #4, D1      
00005856                          9185mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005856  0C01 0009               9186mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000585A  6E00 000A               9187mmm         BGT     ALPHA_749
0000585E  0601 0030               9188mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005862  6000 0006               9189mmm         BRA     DONE_749
00005866  0601 0037               9190mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000586A  4E71                    9191mmm DONE_749: NOP
0000586C                          9192mmm         ENDM
0000586C  4E4F                    9193mm         TRAP    #15         ; EXECUTE OUTPUT
0000586E                          9194mm         
0000586E  3212                    9195mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005870  E149                    9196mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005872  E049                    9197mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005874  E849                    9198mm         LSR.W   #4, D1      
00005876                          9199mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005876  0C01 0009               9200mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000587A  6E00 000A               9201mmm         BGT     ALPHA_750
0000587E  0601 0030               9202mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005882  6000 0006               9203mmm         BRA     DONE_750
00005886  0601 0037               9204mmm ALPHA_750: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000588A  4E71                    9205mmm DONE_750: NOP
0000588C                          9206mmm         ENDM
0000588C  4E4F                    9207mm         TRAP    #15         ; EXECUTE OUTPUT
0000588E                          9208mm         
0000588E  3212                    9209mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005890  E149                    9210mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005892  E949                    9211mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005894  E049                    9212mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005896  E849                    9213mm         LSR.W   #4, D1      
00005898                          9214mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005898  0C01 0009               9215mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000589C  6E00 000A               9216mmm         BGT     ALPHA_751
000058A0  0601 0030               9217mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A4  6000 0006               9218mmm         BRA     DONE_751
000058A8  0601 0037               9219mmm ALPHA_751: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058AC  4E71                    9220mmm DONE_751: NOP
000058AE                          9221mmm         ENDM
000058AE  4E4F                    9222mm         TRAP    #15         ; EXECUTE OUTPUT       
000058B0                          9223mm         ENDM 
000058B0  361A                    9224m         MOVE.W  (A2)+, D3
000058B2                          9225mm         ADROUT
000058B2  3212                    9226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B4  E049                    9227mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058B6  E849                    9228mm         LSR.W   #4, D1      
000058B8                          9229mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058B8  0C01 0009               9230mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058BC  6E00 000A               9231mmm         BGT     ALPHA_753
000058C0  0601 0030               9232mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C4  6000 0006               9233mmm         BRA     DONE_753
000058C8  0601 0037               9234mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058CC  4E71                    9235mmm DONE_753: NOP
000058CE                          9236mmm         ENDM
000058CE  4E4F                    9237mm         TRAP    #15         ; EXECUTE OUTPUT
000058D0                          9238mm         
000058D0  3212                    9239mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058D2  E949                    9240mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000058D4  E049                    9241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058D6  E849                    9242mm         LSR.W   #4, D1      
000058D8                          9243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058D8  0C01 0009               9244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058DC  6E00 000A               9245mmm         BGT     ALPHA_754
000058E0  0601 0030               9246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058E4  6000 0006               9247mmm         BRA     DONE_754
000058E8  0601 0037               9248mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058EC  4E71                    9249mmm DONE_754: NOP
000058EE                          9250mmm         ENDM
000058EE  4E4F                    9251mm         TRAP    #15         ; EXECUTE OUTPUT
000058F0                          9252mm         
000058F0  3212                    9253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058F2  E149                    9254mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058F4  E049                    9255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058F6  E849                    9256mm         LSR.W   #4, D1      
000058F8                          9257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058F8  0C01 0009               9258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058FC  6E00 000A               9259mmm         BGT     ALPHA_755
00005900  0601 0030               9260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005904  6000 0006               9261mmm         BRA     DONE_755
00005908  0601 0037               9262mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000590C  4E71                    9263mmm DONE_755: NOP
0000590E                          9264mmm         ENDM
0000590E  4E4F                    9265mm         TRAP    #15         ; EXECUTE OUTPUT
00005910                          9266mm         
00005910  3212                    9267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005912  E149                    9268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005914  E949                    9269mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005916  E049                    9270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005918  E849                    9271mm         LSR.W   #4, D1      
0000591A                          9272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000591A  0C01 0009               9273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000591E  6E00 000A               9274mmm         BGT     ALPHA_756
00005922  0601 0030               9275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005926  6000 0006               9276mmm         BRA     DONE_756
0000592A  0601 0037               9277mmm ALPHA_756: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000592E  4E71                    9278mmm DONE_756: NOP
00005930                          9279mmm         ENDM
00005930  4E4F                    9280mm         TRAP    #15         ; EXECUTE OUTPUT       
00005932                          9281mm         ENDM 
00005932  3605                    9282m         MOVE.W  D5, D3
00005934                          9283m 
00005934                          9284m COMPLETE_694:  ; OPCODE HAS BEEN VERIFIED
00005934                          9285m         ENDM
00005934                          9286m         printComma
00005934  43F8 00C9               9287m         LEA     OCOMMA, A1     
00005938  103C 000E               9288m         MOVE.B  #14,D0          
0000593C  4E4F                    9289m         TRAP    #15
0000593E                          9290m         ENDM
0000593E                          9291m         printDnDest     (A2)
0000593E  3212                    9292m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005940  E949                    9293m         LSL     #$04, D1
00005942  E049                    9294m         LSR     #$08, D1
00005944  EA49                    9295m         LSR     #$05, D1
00005946  43F8 00C1               9296m         LEA     ODN, A1     
0000594A  103C 000E               9297m         MOVE.B  #14,D0          
0000594E  4E4F                    9298m         TRAP    #15
00005950  103C 0003               9299m         MOVE.B  #3,D0          
00005954  4E4F                    9300m         TRAP    #15
00005956                          9301m         ENDM
00005956                          9302  decodeANDcomp:
00005956  4E75                    9303          RTS                ; Return from decodeANDcomp subroutine
00005958                          9304  
00005958                          9305  
00005958                          9306  ; ------------------------------------------------------------
00005958                          9307  ; 10. "decodeNOT" subroutine
00005958                          9308  ; AUTHOR
00005958                          9309  ;
00005958                          9310  ; TODO: DESCRIPTION
00005958                          9311  ; ------------------------------------------------------------
00005958                          9312  decodeNOT:
00005958                          9313m         verifyOpcode    pNOT, (A2)
00005958  43F8 016D               9314m         LEA     PNOT, A1      ; INPUT PATTERN STRING
0000595C  3612                    9315m         MOVE.W  (A2), D3      ; INPUT VALUE
0000595E  123C 000F               9316m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005962                          9317m         
00005962                          9318m LOOP_759: 
00005962  0C11 0030               9319m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005966  6700 000E               9320m         BEQ     CHECKFOR0_759
0000596A  0C11 0031               9321m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000596E  6700 0010               9322m         BEQ     CHECKFOR1_759
00005972  6000 0012               9323m         BRA     NEXT_759      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005976                          9324m         
00005976                          9325m CHECKFOR0_759: 
00005976  0303                    9326m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005978  6600 120A               9327m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000597C  6000 0008               9328m         BRA     NEXT_759
00005980                          9329m 
00005980                          9330m CHECKFOR1_759:
00005980  0303                    9331m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005982  6700 1200               9332m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005986                          9333m 
00005986                          9334m NEXT_759: 
00005986  B23C 0000               9335m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000598A  6700 0008               9336m         BEQ     COMPLETE_759  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000598E  5301                    9337m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005990  1819                    9338m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005992  60CE                    9339m         BRA     LOOP_759      ; BEGIN LOOP AGAIN
00005994                          9340m 
00005994                          9341m COMPLETE_759:  ; OPCODE HAS BEEN VERIFIED
00005994                          9342m         ENDM
00005994  43F8 0089               9343          LEA     oNOT, A1     
00005998  103C 000E               9344          MOVE.B  #14,D0          
0000599C  4E4F                    9345          TRAP    #15
0000599E                          9346m         printSizeLow       (A2)
0000599E  3612                    9347m         MOVE.W  (A2), D3      ; INPUT VALUE      
000059A0                          9348m CHECKFORB_760: 
000059A0  0803 0006               9349m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000059A4  6600 0010               9350m         BNE     CHECKFORW_760  ; IF NOT GO TO WORD SIZE
000059A8  43F8 00B5               9351m         LEA     OBSIZE, A1     
000059AC  103C 000E               9352m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059B0  4E4F                    9353m         TRAP    #15
000059B2  6000 0022               9354m         BRA     COMPLETE_760      
000059B6                          9355m CHECKFORW_760: 
000059B6  0803 0007               9356m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000059BA  6600 0010               9357m         BNE     CHECKFORL_760 ; IF NOT GO TO LONGWORD SIZE
000059BE  43F8 00B9               9358m         LEA     OWSIZE, A1     
000059C2  103C 000E               9359m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000059C6  4E4F                    9360m         TRAP    #15
000059C8  6000 000C               9361m         BRA     COMPLETE_760  
000059CC                          9362m CHECKFORL_760:
000059CC  43F8 00BD               9363m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000059D0  103C 000E               9364m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059D4  4E4F                    9365m         TRAP    #15
000059D6                          9366m COMPLETE_760:  ; SIZE HAS BEEN PRINTED
000059D6                          9367m         ENDM
000059D6                          9368m         prepareAdrMode  #$1, (A2)
000059D6  3C3C 0001               9369m         MOVE.W  #$1, D6      ; INPUT VALUE
000059DA  3212                    9370m         MOVE.W  (A2), D1
000059DC  BC3C 0001               9371m         CMP.B   #$01, D6
000059E0  6700 000C               9372m         BEQ     ADRSOURCE_761    
000059E4                          9373m ADRDEST_761:
000059E4  EF49                    9374m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000059E6  E049                    9375m         LSR     #$08, D1
000059E8  EA49                    9376m         LSR     #$05, D1
000059EA  6000 000A               9377m         BRA     COMPLETE_761 
000059EE                          9378m ADRSOURCE_761:                
000059EE  E149                    9379m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000059F0  E549                    9380m         LSL     #$02, D1
000059F2  E049                    9381m         LSR     #$08, D1
000059F4  EA49                    9382m         LSR     #$05, D1
000059F6                          9383m COMPLETE_761:  ; OPCODE HAS BEEN VERIFIED
000059F6                          9384m         ENDM        
000059F6                          9385m         decodeAdrMode   (A2), D1
000059F6  3612                    9386m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000059F8  3201                    9387m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000059FA                          9388m 
000059FA  B23C 0001               9389m         CMP.B   #$01, D1
000059FE  6700 0066               9390m         BEQ     ADRREGDIRECT_762    
00005A02  B23C 0002               9391m         CMP.B   #$02, D1
00005A06  6700 00A0               9392m         BEQ     ADRREGINDIRECT_762  
00005A0A  B23C 0003               9393m         CMP.B   #$03, D1
00005A0E  6700 0102               9394m         BEQ     ADRREGPOSTINC_762  
00005A12  B23C 0004               9395m         CMP.B   #$04, D1
00005A16  6700 0178               9396m         BEQ     ADRREGPREDEC_762
00005A1A  B23C 0007               9397m         CMP.B   #$07, D1
00005A1E  6700 01EE               9398m         BEQ     ADRABSOLUTE_762    
00005A22                          9399m         
00005A22                          9400m DATAREGDIRECT_762: 
00005A22  BC3C 0001               9401m         CMP.B   #$01, D6
00005A26  6700 001E               9402m         BEQ     DATAREGDIRECTSRC_762   
00005A2A                          9403m DATAREGDIRECTDEST_762: 
00005A2A                          9404mm         PRINTDNDEST D3 
00005A2A  3203                    9405mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005A2C  E949                    9406mm         LSL     #$04, D1
00005A2E  E049                    9407mm         LSR     #$08, D1
00005A30  EA49                    9408mm         LSR     #$05, D1
00005A32  43F8 00C1               9409mm         LEA     ODN, A1     
00005A36  103C 000E               9410mm         MOVE.B  #14,D0          
00005A3A  4E4F                    9411mm         TRAP    #15
00005A3C  103C 0003               9412mm         MOVE.B  #3,D0          
00005A40  4E4F                    9413mm         TRAP    #15
00005A42                          9414mm         ENDM
00005A42  6000 0562               9415m         BRA     COMPLETE_762 
00005A46                          9416m DATAREGDIRECTSRC_762: 
00005A46                          9417mm         PRINTDNSRC D3 
00005A46  4281                    9418mm         CLR.L   D1
00005A48  3203                    9419mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A4A  E149                    9420mm         LSL     #$08, D1
00005A4C  EB49                    9421mm         LSL     #$05, D1
00005A4E  E049                    9422mm         LSR     #$08, D1
00005A50  EA49                    9423mm         LSR     #$05, D1
00005A52  43F8 00C1               9424mm         LEA     ODN, A1     
00005A56  103C 000E               9425mm         MOVE.B  #14,D0          
00005A5A  4E4F                    9426mm         TRAP    #15
00005A5C  103C 0003               9427mm         MOVE.B  #3,D0          
00005A60  4E4F                    9428mm         TRAP    #15
00005A62                          9429mm         ENDM
00005A62  6000 0542               9430m         BRA     COMPLETE_762   
00005A66                          9431m         
00005A66                          9432m ADRREGDIRECT_762: 
00005A66  BC3C 0001               9433m         CMP.B   #$01, D6
00005A6A  6700 001E               9434m         BEQ     ADRREGDIRECTSRC_762   
00005A6E                          9435m ADRREGDIRECTDEST_762:
00005A6E                          9436mm         PRINTANDEST D3
00005A6E  3203                    9437mm         MOVE.W  D3, D1
00005A70  E949                    9438mm         LSL     #$04, D1
00005A72  E049                    9439mm         LSR     #$08, D1
00005A74  EA49                    9440mm         LSR     #$05, D1
00005A76  43F8 00C3               9441mm         LEA     OAN, A1     
00005A7A  103C 000E               9442mm         MOVE.B  #14,D0          
00005A7E  4E4F                    9443mm         TRAP    #15
00005A80  103C 0003               9444mm         MOVE.B  #3,D0          
00005A84  4E4F                    9445mm         TRAP    #15
00005A86                          9446mm         ENDM
00005A86  6000 051E               9447m         BRA     COMPLETE_762   
00005A8A                          9448m ADRREGDIRECTSRC_762:
00005A8A                          9449mm         PRINTANSRC D3
00005A8A  3203                    9450mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A8C  E149                    9451mm         LSL     #$08, D1
00005A8E  EB49                    9452mm         LSL     #$05, D1
00005A90  E049                    9453mm         LSR     #$08, D1
00005A92  EA49                    9454mm         LSR     #$05, D1
00005A94  43F8 00C3               9455mm         LEA     OAN, A1     
00005A98  103C 000E               9456mm         MOVE.B  #14,D0          
00005A9C  4E4F                    9457mm         TRAP    #15
00005A9E  103C 0003               9458mm         MOVE.B  #3,D0          
00005AA2  4E4F                    9459mm         TRAP    #15
00005AA4                          9460mm         ENDM
00005AA4  6000 0500               9461m         BRA     COMPLETE_762   
00005AA8                          9462m        
00005AA8                          9463m ADRREGINDIRECT_762:   
00005AA8  BC3C 0001               9464m         CMP.B   #$01, D6
00005AAC  6700 0032               9465m         BEQ     ADRREGINDIRECTSRC_762   
00005AB0                          9466m ADRREGINDIRECTDEST_762:
00005AB0                          9467mm         PRINTLB
00005AB0  43F8 00C5               9468mm         LEA     OLB, A1     
00005AB4  103C 000E               9469mm         MOVE.B  #14,D0          
00005AB8  4E4F                    9470mm         TRAP    #15
00005ABA                          9471mm         ENDM
00005ABA                          9472mm         PRINTANDEST D3  
00005ABA  3203                    9473mm         MOVE.W  D3, D1
00005ABC  E949                    9474mm         LSL     #$04, D1
00005ABE  E049                    9475mm         LSR     #$08, D1
00005AC0  EA49                    9476mm         LSR     #$05, D1
00005AC2  43F8 00C3               9477mm         LEA     OAN, A1     
00005AC6  103C 000E               9478mm         MOVE.B  #14,D0          
00005ACA  4E4F                    9479mm         TRAP    #15
00005ACC  103C 0003               9480mm         MOVE.B  #3,D0          
00005AD0  4E4F                    9481mm         TRAP    #15
00005AD2                          9482mm         ENDM
00005AD2                          9483mm         PRINTRB
00005AD2  43F8 00C7               9484mm         LEA     ORB, A1     
00005AD6  103C 000E               9485mm         MOVE.B  #14,D0          
00005ADA  4E4F                    9486mm         TRAP    #15
00005ADC                          9487mm         ENDM
00005ADC  6000 04C8               9488m         BRA     COMPLETE_762     
00005AE0                          9489m ADRREGINDIRECTSRC_762:   
00005AE0                          9490mm         PRINTLB
00005AE0  43F8 00C5               9491mm         LEA     OLB, A1     
00005AE4  103C 000E               9492mm         MOVE.B  #14,D0          
00005AE8  4E4F                    9493mm         TRAP    #15
00005AEA                          9494mm         ENDM
00005AEA                          9495mm         PRINTANSRC D3  
00005AEA  3203                    9496mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005AEC  E149                    9497mm         LSL     #$08, D1
00005AEE  EB49                    9498mm         LSL     #$05, D1
00005AF0  E049                    9499mm         LSR     #$08, D1
00005AF2  EA49                    9500mm         LSR     #$05, D1
00005AF4  43F8 00C3               9501mm         LEA     OAN, A1     
00005AF8  103C 000E               9502mm         MOVE.B  #14,D0          
00005AFC  4E4F                    9503mm         TRAP    #15
00005AFE  103C 0003               9504mm         MOVE.B  #3,D0          
00005B02  4E4F                    9505mm         TRAP    #15
00005B04                          9506mm         ENDM
00005B04                          9507mm         PRINTRB
00005B04  43F8 00C7               9508mm         LEA     ORB, A1     
00005B08  103C 000E               9509mm         MOVE.B  #14,D0          
00005B0C  4E4F                    9510mm         TRAP    #15
00005B0E                          9511mm         ENDM
00005B0E  6000 0496               9512m         BRA     COMPLETE_762   
00005B12                          9513m         
00005B12                          9514m ADRREGPOSTINC_762:   
00005B12  BC3C 0001               9515m         CMP.B   #$01, D6
00005B16  6700 003C               9516m         BEQ     ADRREGPOSTINCSRC_762   
00005B1A                          9517m ADRREGPOSTINCDEST_762: 
00005B1A                          9518mm         PRINTLB
00005B1A  43F8 00C5               9519mm         LEA     OLB, A1     
00005B1E  103C 000E               9520mm         MOVE.B  #14,D0          
00005B22  4E4F                    9521mm         TRAP    #15
00005B24                          9522mm         ENDM
00005B24                          9523mm         PRINTANDEST D3  
00005B24  3203                    9524mm         MOVE.W  D3, D1
00005B26  E949                    9525mm         LSL     #$04, D1
00005B28  E049                    9526mm         LSR     #$08, D1
00005B2A  EA49                    9527mm         LSR     #$05, D1
00005B2C  43F8 00C3               9528mm         LEA     OAN, A1     
00005B30  103C 000E               9529mm         MOVE.B  #14,D0          
00005B34  4E4F                    9530mm         TRAP    #15
00005B36  103C 0003               9531mm         MOVE.B  #3,D0          
00005B3A  4E4F                    9532mm         TRAP    #15
00005B3C                          9533mm         ENDM
00005B3C                          9534mm         PRINTRB
00005B3C  43F8 00C7               9535mm         LEA     ORB, A1     
00005B40  103C 000E               9536mm         MOVE.B  #14,D0          
00005B44  4E4F                    9537mm         TRAP    #15
00005B46                          9538mm         ENDM
00005B46                          9539mm         PRINTPI
00005B46  43F8 00CE               9540mm         LEA     OPSTINC, A1     
00005B4A  103C 000E               9541mm         MOVE.B  #14,D0          
00005B4E  4E4F                    9542mm         TRAP    #15
00005B50                          9543mm         ENDM
00005B50  6000 0454               9544m         BRA     COMPLETE_762  
00005B54                          9545m ADRREGPOSTINCSRC_762:           
00005B54                          9546mm         PRINTLB
00005B54  43F8 00C5               9547mm         LEA     OLB, A1     
00005B58  103C 000E               9548mm         MOVE.B  #14,D0          
00005B5C  4E4F                    9549mm         TRAP    #15
00005B5E                          9550mm         ENDM
00005B5E                          9551mm         PRINTANSRC D3  
00005B5E  3203                    9552mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005B60  E149                    9553mm         LSL     #$08, D1
00005B62  EB49                    9554mm         LSL     #$05, D1
00005B64  E049                    9555mm         LSR     #$08, D1
00005B66  EA49                    9556mm         LSR     #$05, D1
00005B68  43F8 00C3               9557mm         LEA     OAN, A1     
00005B6C  103C 000E               9558mm         MOVE.B  #14,D0          
00005B70  4E4F                    9559mm         TRAP    #15
00005B72  103C 0003               9560mm         MOVE.B  #3,D0          
00005B76  4E4F                    9561mm         TRAP    #15
00005B78                          9562mm         ENDM
00005B78                          9563mm         PRINTRB
00005B78  43F8 00C7               9564mm         LEA     ORB, A1     
00005B7C  103C 000E               9565mm         MOVE.B  #14,D0          
00005B80  4E4F                    9566mm         TRAP    #15
00005B82                          9567mm         ENDM
00005B82                          9568mm         PRINTPI
00005B82  43F8 00CE               9569mm         LEA     OPSTINC, A1     
00005B86  103C 000E               9570mm         MOVE.B  #14,D0          
00005B8A  4E4F                    9571mm         TRAP    #15
00005B8C                          9572mm         ENDM
00005B8C  6000 0418               9573m         BRA     COMPLETE_762  
00005B90                          9574m ADRREGPREDEC_762: 
00005B90  BC3C 0001               9575m         CMP.B   #$01, D6
00005B94  6700 003C               9576m         BEQ     ADRREGPREDECSRC_762   
00005B98                          9577m ADRREGPREDECDEST_762:
00005B98                          9578mm         PRINTPD  
00005B98  43F8 00CC               9579mm         LEA     OPREDEC, A1     
00005B9C  103C 000E               9580mm         MOVE.B  #14,D0          
00005BA0  4E4F                    9581mm         TRAP    #15
00005BA2                          9582mm         ENDM
00005BA2                          9583mm         PRINTLB
00005BA2  43F8 00C5               9584mm         LEA     OLB, A1     
00005BA6  103C 000E               9585mm         MOVE.B  #14,D0          
00005BAA  4E4F                    9586mm         TRAP    #15
00005BAC                          9587mm         ENDM
00005BAC                          9588mm         PRINTANDEST D3  
00005BAC  3203                    9589mm         MOVE.W  D3, D1
00005BAE  E949                    9590mm         LSL     #$04, D1
00005BB0  E049                    9591mm         LSR     #$08, D1
00005BB2  EA49                    9592mm         LSR     #$05, D1
00005BB4  43F8 00C3               9593mm         LEA     OAN, A1     
00005BB8  103C 000E               9594mm         MOVE.B  #14,D0          
00005BBC  4E4F                    9595mm         TRAP    #15
00005BBE  103C 0003               9596mm         MOVE.B  #3,D0          
00005BC2  4E4F                    9597mm         TRAP    #15
00005BC4                          9598mm         ENDM
00005BC4                          9599mm         PRINTRB
00005BC4  43F8 00C7               9600mm         LEA     ORB, A1     
00005BC8  103C 000E               9601mm         MOVE.B  #14,D0          
00005BCC  4E4F                    9602mm         TRAP    #15
00005BCE                          9603mm         ENDM
00005BCE  6000 03D6               9604m         BRA     COMPLETE_762   
00005BD2                          9605m ADRREGPREDECSRC_762: 
00005BD2                          9606mm         PRINTPD  
00005BD2  43F8 00CC               9607mm         LEA     OPREDEC, A1     
00005BD6  103C 000E               9608mm         MOVE.B  #14,D0          
00005BDA  4E4F                    9609mm         TRAP    #15
00005BDC                          9610mm         ENDM
00005BDC                          9611mm         PRINTLB
00005BDC  43F8 00C5               9612mm         LEA     OLB, A1     
00005BE0  103C 000E               9613mm         MOVE.B  #14,D0          
00005BE4  4E4F                    9614mm         TRAP    #15
00005BE6                          9615mm         ENDM
00005BE6                          9616mm         PRINTANSRC D3  
00005BE6  3203                    9617mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BE8  E149                    9618mm         LSL     #$08, D1
00005BEA  EB49                    9619mm         LSL     #$05, D1
00005BEC  E049                    9620mm         LSR     #$08, D1
00005BEE  EA49                    9621mm         LSR     #$05, D1
00005BF0  43F8 00C3               9622mm         LEA     OAN, A1     
00005BF4  103C 000E               9623mm         MOVE.B  #14,D0          
00005BF8  4E4F                    9624mm         TRAP    #15
00005BFA  103C 0003               9625mm         MOVE.B  #3,D0          
00005BFE  4E4F                    9626mm         TRAP    #15
00005C00                          9627mm         ENDM
00005C00                          9628mm         PRINTRB
00005C00  43F8 00C7               9629mm         LEA     ORB, A1     
00005C04  103C 000E               9630mm         MOVE.B  #14,D0          
00005C08  4E4F                    9631mm         TRAP    #15
00005C0A                          9632mm         ENDM
00005C0A  6000 039A               9633m         BRA     COMPLETE_762
00005C0E                          9634m        
00005C0E                          9635m ADRABSOLUTE_762:
00005C0E  BC3C 0001               9636m         CMP.B   #$01, D6
00005C12  6600 0018               9637m         BNE     ADRABSOLUTEDST_762 
00005C16                          9638m         
00005C16  3A03                    9639m         MOVE.W  D3, D5
00005C18  0803 0002               9640m         BTST    #2, D3
00005C1C  6600 0024               9641m         BNE     ADRIMMEDIATE_762
00005C20  0803 0000               9642m         BTST    #0, D3
00005C24  6600 0270               9643m         BNE     ADRABSOLUTEL_762
00005C28  6000 01DA               9644m         BRA     ADRABSOLUTEW_762
00005C2C                          9645m ADRABSOLUTEDST_762:
00005C2C  3A03                    9646m         MOVE.W  D3, D5
00005C2E  0803 000B               9647m         BTST    #$B, D3
00005C32  6600 000E               9648m         BNE     ADRIMMEDIATE_762
00005C36  0803 0009               9649m         BTST    #$09, D3
00005C3A  6600 025A               9650m         BNE     ADRABSOLUTEL_762
00005C3E  6000 01C4               9651m         BRA     ADRABSOLUTEW_762
00005C42                          9652m ADRIMMEDIATE_762:
00005C42  BE3C 0001               9653m         CMP.B   #1, D7
00005C46  6700 009E               9654m         BEQ     ADRIMMEDIATEL_762
00005C4A                          9655m ADRIMMEDIATEW_762:
00005C4A  361A                    9656m         MOVE.W  (A2)+, D3
00005C4C                          9657mm         PRINTHASH
00005C4C  103C 0006               9658mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C50  323C 0023               9659mm         MOVE.W  #35, D1     ; AN = SIGN
00005C54  4E4F                    9660mm         TRAP    #15         ; OUTPUT = SIGN
00005C56                          9661mm         ENDM
00005C56                          9662mm         PRINTSIGN
00005C56  103C 0006               9663mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C5A  323C 0024               9664mm         MOVE.W  #36, D1     ; AN = SIGN
00005C5E  4E4F                    9665mm         TRAP    #15         ; OUTPUT = SIGN
00005C60                          9666mm         ENDM
00005C60                          9667mm         ADROUT
00005C60  3212                    9668mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C62  E049                    9669mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C64  E849                    9670mm         LSR.W   #4, D1      
00005C66                          9671mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C66  0C01 0009               9672mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C6A  6E00 000A               9673mmm         BGT     ALPHA_792
00005C6E  0601 0030               9674mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C72  6000 0006               9675mmm         BRA     DONE_792
00005C76  0601 0037               9676mmm ALPHA_792: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C7A  4E71                    9677mmm DONE_792: NOP
00005C7C                          9678mmm         ENDM
00005C7C  4E4F                    9679mm         TRAP    #15         ; EXECUTE OUTPUT
00005C7E                          9680mm         
00005C7E  3212                    9681mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C80  E949                    9682mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005C82  E049                    9683mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C84  E849                    9684mm         LSR.W   #4, D1      
00005C86                          9685mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C86  0C01 0009               9686mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C8A  6E00 000A               9687mmm         BGT     ALPHA_793
00005C8E  0601 0030               9688mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C92  6000 0006               9689mmm         BRA     DONE_793
00005C96  0601 0037               9690mmm ALPHA_793: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C9A  4E71                    9691mmm DONE_793: NOP
00005C9C                          9692mmm         ENDM
00005C9C  4E4F                    9693mm         TRAP    #15         ; EXECUTE OUTPUT
00005C9E                          9694mm         
00005C9E  3212                    9695mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CA0  E149                    9696mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CA2  E049                    9697mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CA4  E849                    9698mm         LSR.W   #4, D1      
00005CA6                          9699mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CA6  0C01 0009               9700mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CAA  6E00 000A               9701mmm         BGT     ALPHA_794
00005CAE  0601 0030               9702mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CB2  6000 0006               9703mmm         BRA     DONE_794
00005CB6  0601 0037               9704mmm ALPHA_794: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CBA  4E71                    9705mmm DONE_794: NOP
00005CBC                          9706mmm         ENDM
00005CBC  4E4F                    9707mm         TRAP    #15         ; EXECUTE OUTPUT
00005CBE                          9708mm         
00005CBE  3212                    9709mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CC0  E149                    9710mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CC2  E949                    9711mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005CC4  E049                    9712mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CC6  E849                    9713mm         LSR.W   #4, D1      
00005CC8                          9714mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CC8  0C01 0009               9715mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CCC  6E00 000A               9716mmm         BGT     ALPHA_795
00005CD0  0601 0030               9717mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CD4  6000 0006               9718mmm         BRA     DONE_795
00005CD8  0601 0037               9719mmm ALPHA_795: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CDC  4E71                    9720mmm DONE_795: NOP
00005CDE                          9721mmm         ENDM
00005CDE  4E4F                    9722mm         TRAP    #15         ; EXECUTE OUTPUT       
00005CE0                          9723mm         ENDM 
00005CE0  3605                    9724m         MOVE.W  D5, D3
00005CE2  6000 02C2               9725m         BRA     COMPLETE_762
00005CE6                          9726m ADRIMMEDIATEL_762:
00005CE6  361A                    9727m         MOVE.W  (A2)+, D3
00005CE8                          9728mm         PRINTHASH
00005CE8  103C 0006               9729mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CEC  323C 0023               9730mm         MOVE.W  #35, D1     ; AN = SIGN
00005CF0  4E4F                    9731mm         TRAP    #15         ; OUTPUT = SIGN
00005CF2                          9732mm         ENDM
00005CF2                          9733mm         PRINTSIGN
00005CF2  103C 0006               9734mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CF6  323C 0024               9735mm         MOVE.W  #36, D1     ; AN = SIGN
00005CFA  4E4F                    9736mm         TRAP    #15         ; OUTPUT = SIGN
00005CFC                          9737mm         ENDM
00005CFC                          9738mm         ADROUT 
00005CFC  3212                    9739mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CFE  E049                    9740mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D00  E849                    9741mm         LSR.W   #4, D1      
00005D02                          9742mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D02  0C01 0009               9743mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D06  6E00 000A               9744mmm         BGT     ALPHA_799
00005D0A  0601 0030               9745mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D0E  6000 0006               9746mmm         BRA     DONE_799
00005D12  0601 0037               9747mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D16  4E71                    9748mmm DONE_799: NOP
00005D18                          9749mmm         ENDM
00005D18  4E4F                    9750mm         TRAP    #15         ; EXECUTE OUTPUT
00005D1A                          9751mm         
00005D1A  3212                    9752mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D1C  E949                    9753mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005D1E  E049                    9754mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D20  E849                    9755mm         LSR.W   #4, D1      
00005D22                          9756mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D22  0C01 0009               9757mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D26  6E00 000A               9758mmm         BGT     ALPHA_800
00005D2A  0601 0030               9759mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D2E  6000 0006               9760mmm         BRA     DONE_800
00005D32  0601 0037               9761mmm ALPHA_800: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D36  4E71                    9762mmm DONE_800: NOP
00005D38                          9763mmm         ENDM
00005D38  4E4F                    9764mm         TRAP    #15         ; EXECUTE OUTPUT
00005D3A                          9765mm         
00005D3A  3212                    9766mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D3C  E149                    9767mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D3E  E049                    9768mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D40  E849                    9769mm         LSR.W   #4, D1      
00005D42                          9770mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D42  0C01 0009               9771mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D46  6E00 000A               9772mmm         BGT     ALPHA_801
00005D4A  0601 0030               9773mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D4E  6000 0006               9774mmm         BRA     DONE_801
00005D52  0601 0037               9775mmm ALPHA_801: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D56  4E71                    9776mmm DONE_801: NOP
00005D58                          9777mmm         ENDM
00005D58  4E4F                    9778mm         TRAP    #15         ; EXECUTE OUTPUT
00005D5A                          9779mm         
00005D5A  3212                    9780mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D5C  E149                    9781mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D5E  E949                    9782mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005D60  E049                    9783mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D62  E849                    9784mm         LSR.W   #4, D1      
00005D64                          9785mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D64  0C01 0009               9786mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D68  6E00 000A               9787mmm         BGT     ALPHA_802
00005D6C  0601 0030               9788mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D70  6000 0006               9789mmm         BRA     DONE_802
00005D74  0601 0037               9790mmm ALPHA_802: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D78  4E71                    9791mmm DONE_802: NOP
00005D7A                          9792mmm         ENDM
00005D7A  4E4F                    9793mm         TRAP    #15         ; EXECUTE OUTPUT       
00005D7C                          9794mm         ENDM 
00005D7C  361A                    9795m         MOVE.W  (A2)+, D3
00005D7E                          9796mm         ADROUT
00005D7E  3212                    9797mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D80  E049                    9798mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D82  E849                    9799mm         LSR.W   #4, D1      
00005D84                          9800mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D84  0C01 0009               9801mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D88  6E00 000A               9802mmm         BGT     ALPHA_804
00005D8C  0601 0030               9803mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D90  6000 0006               9804mmm         BRA     DONE_804
00005D94  0601 0037               9805mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D98  4E71                    9806mmm DONE_804: NOP
00005D9A                          9807mmm         ENDM
00005D9A  4E4F                    9808mm         TRAP    #15         ; EXECUTE OUTPUT
00005D9C                          9809mm         
00005D9C  3212                    9810mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D9E  E949                    9811mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DA0  E049                    9812mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DA2  E849                    9813mm         LSR.W   #4, D1      
00005DA4                          9814mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DA4  0C01 0009               9815mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DA8  6E00 000A               9816mmm         BGT     ALPHA_805
00005DAC  0601 0030               9817mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DB0  6000 0006               9818mmm         BRA     DONE_805
00005DB4  0601 0037               9819mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DB8  4E71                    9820mmm DONE_805: NOP
00005DBA                          9821mmm         ENDM
00005DBA  4E4F                    9822mm         TRAP    #15         ; EXECUTE OUTPUT
00005DBC                          9823mm         
00005DBC  3212                    9824mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DBE  E149                    9825mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DC0  E049                    9826mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DC2  E849                    9827mm         LSR.W   #4, D1      
00005DC4                          9828mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DC4  0C01 0009               9829mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DC8  6E00 000A               9830mmm         BGT     ALPHA_806
00005DCC  0601 0030               9831mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DD0  6000 0006               9832mmm         BRA     DONE_806
00005DD4  0601 0037               9833mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DD8  4E71                    9834mmm DONE_806: NOP
00005DDA                          9835mmm         ENDM
00005DDA  4E4F                    9836mm         TRAP    #15         ; EXECUTE OUTPUT
00005DDC                          9837mm         
00005DDC  3212                    9838mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DDE  E149                    9839mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DE0  E949                    9840mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005DE2  E049                    9841mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DE4  E849                    9842mm         LSR.W   #4, D1      
00005DE6                          9843mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DE6  0C01 0009               9844mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DEA  6E00 000A               9845mmm         BGT     ALPHA_807
00005DEE  0601 0030               9846mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DF2  6000 0006               9847mmm         BRA     DONE_807
00005DF6  0601 0037               9848mmm ALPHA_807: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DFA  4E71                    9849mmm DONE_807: NOP
00005DFC                          9850mmm         ENDM
00005DFC  4E4F                    9851mm         TRAP    #15         ; EXECUTE OUTPUT       
00005DFE                          9852mm         ENDM 
00005DFE  3605                    9853m         MOVE.W  D5, D3
00005E00  6000 01A4               9854m         BRA     COMPLETE_762 
00005E04                          9855m ADRABSOLUTEW_762:     
00005E04  361A                    9856m         MOVE.W  (A2)+, D3
00005E06                          9857mm         PRINTSIGN
00005E06  103C 0006               9858mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E0A  323C 0024               9859mm         MOVE.W  #36, D1     ; AN = SIGN
00005E0E  4E4F                    9860mm         TRAP    #15         ; OUTPUT = SIGN
00005E10                          9861mm         ENDM
00005E10                          9862mm         ADROUT
00005E10  3212                    9863mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E12  E049                    9864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E14  E849                    9865mm         LSR.W   #4, D1      
00005E16                          9866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E16  0C01 0009               9867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E1A  6E00 000A               9868mmm         BGT     ALPHA_810
00005E1E  0601 0030               9869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E22  6000 0006               9870mmm         BRA     DONE_810
00005E26  0601 0037               9871mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E2A  4E71                    9872mmm DONE_810: NOP
00005E2C                          9873mmm         ENDM
00005E2C  4E4F                    9874mm         TRAP    #15         ; EXECUTE OUTPUT
00005E2E                          9875mm         
00005E2E  3212                    9876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E30  E949                    9877mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E32  E049                    9878mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E34  E849                    9879mm         LSR.W   #4, D1      
00005E36                          9880mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E36  0C01 0009               9881mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E3A  6E00 000A               9882mmm         BGT     ALPHA_811
00005E3E  0601 0030               9883mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E42  6000 0006               9884mmm         BRA     DONE_811
00005E46  0601 0037               9885mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E4A  4E71                    9886mmm DONE_811: NOP
00005E4C                          9887mmm         ENDM
00005E4C  4E4F                    9888mm         TRAP    #15         ; EXECUTE OUTPUT
00005E4E                          9889mm         
00005E4E  3212                    9890mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E50  E149                    9891mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E52  E049                    9892mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E54  E849                    9893mm         LSR.W   #4, D1      
00005E56                          9894mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E56  0C01 0009               9895mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E5A  6E00 000A               9896mmm         BGT     ALPHA_812
00005E5E  0601 0030               9897mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E62  6000 0006               9898mmm         BRA     DONE_812
00005E66  0601 0037               9899mmm ALPHA_812: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E6A  4E71                    9900mmm DONE_812: NOP
00005E6C                          9901mmm         ENDM
00005E6C  4E4F                    9902mm         TRAP    #15         ; EXECUTE OUTPUT
00005E6E                          9903mm         
00005E6E  3212                    9904mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E70  E149                    9905mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E72  E949                    9906mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E74  E049                    9907mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E76  E849                    9908mm         LSR.W   #4, D1      
00005E78                          9909mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E78  0C01 0009               9910mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E7C  6E00 000A               9911mmm         BGT     ALPHA_813
00005E80  0601 0030               9912mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E84  6000 0006               9913mmm         BRA     DONE_813
00005E88  0601 0037               9914mmm ALPHA_813: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E8C  4E71                    9915mmm DONE_813: NOP
00005E8E                          9916mmm         ENDM
00005E8E  4E4F                    9917mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E90                          9918mm         ENDM 
00005E90  3605                    9919m         MOVE.W  D5, D3
00005E92  6000 0112               9920m         BRA     COMPLETE_762  
00005E96                          9921m ADRABSOLUTEL_762:  
00005E96  361A                    9922m         MOVE.W  (A2)+, D3
00005E98                          9923mm         PRINTSIGN
00005E98  103C 0006               9924mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E9C  323C 0024               9925mm         MOVE.W  #36, D1     ; AN = SIGN
00005EA0  4E4F                    9926mm         TRAP    #15         ; OUTPUT = SIGN
00005EA2                          9927mm         ENDM
00005EA2                          9928mm         ADROUT 
00005EA2  3212                    9929mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA4  E049                    9930mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA6  E849                    9931mm         LSR.W   #4, D1      
00005EA8                          9932mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA8  0C01 0009               9933mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EAC  6E00 000A               9934mmm         BGT     ALPHA_816
00005EB0  0601 0030               9935mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB4  6000 0006               9936mmm         BRA     DONE_816
00005EB8  0601 0037               9937mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EBC  4E71                    9938mmm DONE_816: NOP
00005EBE                          9939mmm         ENDM
00005EBE  4E4F                    9940mm         TRAP    #15         ; EXECUTE OUTPUT
00005EC0                          9941mm         
00005EC0  3212                    9942mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC2  E949                    9943mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005EC4  E049                    9944mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC6  E849                    9945mm         LSR.W   #4, D1      
00005EC8                          9946mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EC8  0C01 0009               9947mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECC  6E00 000A               9948mmm         BGT     ALPHA_817
00005ED0  0601 0030               9949mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED4  6000 0006               9950mmm         BRA     DONE_817
00005ED8  0601 0037               9951mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDC  4E71                    9952mmm DONE_817: NOP
00005EDE                          9953mmm         ENDM
00005EDE  4E4F                    9954mm         TRAP    #15         ; EXECUTE OUTPUT
00005EE0                          9955mm         
00005EE0  3212                    9956mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EE2  E149                    9957mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EE4  E049                    9958mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EE6  E849                    9959mm         LSR.W   #4, D1      
00005EE8                          9960mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EE8  0C01 0009               9961mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EEC  6E00 000A               9962mmm         BGT     ALPHA_818
00005EF0  0601 0030               9963mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EF4  6000 0006               9964mmm         BRA     DONE_818
00005EF8  0601 0037               9965mmm ALPHA_818: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EFC  4E71                    9966mmm DONE_818: NOP
00005EFE                          9967mmm         ENDM
00005EFE  4E4F                    9968mm         TRAP    #15         ; EXECUTE OUTPUT
00005F00                          9969mm         
00005F00  3212                    9970mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F02  E149                    9971mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F04  E949                    9972mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F06  E049                    9973mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F08  E849                    9974mm         LSR.W   #4, D1      
00005F0A                          9975mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F0A  0C01 0009               9976mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F0E  6E00 000A               9977mmm         BGT     ALPHA_819
00005F12  0601 0030               9978mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F16  6000 0006               9979mmm         BRA     DONE_819
00005F1A  0601 0037               9980mmm ALPHA_819: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F1E  4E71                    9981mmm DONE_819: NOP
00005F20                          9982mmm         ENDM
00005F20  4E4F                    9983mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F22                          9984mm         ENDM 
00005F22  361A                    9985m         MOVE.W  (A2)+, D3
00005F24                          9986mm         ADROUT
00005F24  3212                    9987mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F26  E049                    9988mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F28  E849                    9989mm         LSR.W   #4, D1      
00005F2A                          9990mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F2A  0C01 0009               9991mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F2E  6E00 000A               9992mmm         BGT     ALPHA_821
00005F32  0601 0030               9993mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F36  6000 0006               9994mmm         BRA     DONE_821
00005F3A  0601 0037               9995mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F3E  4E71                    9996mmm DONE_821: NOP
00005F40                          9997mmm         ENDM
00005F40  4E4F                    9998mm         TRAP    #15         ; EXECUTE OUTPUT
00005F42                          9999mm         
00005F42  3212                   10000mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F44  E949                   10001mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F46  E049                   10002mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F48  E849                   10003mm         LSR.W   #4, D1      
00005F4A                         10004mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F4A  0C01 0009              10005mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F4E  6E00 000A              10006mmm         BGT     ALPHA_822
00005F52  0601 0030              10007mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F56  6000 0006              10008mmm         BRA     DONE_822
00005F5A  0601 0037              10009mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F5E  4E71                   10010mmm DONE_822: NOP
00005F60                         10011mmm         ENDM
00005F60  4E4F                   10012mm         TRAP    #15         ; EXECUTE OUTPUT
00005F62                         10013mm         
00005F62  3212                   10014mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F64  E149                   10015mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F66  E049                   10016mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F68  E849                   10017mm         LSR.W   #4, D1      
00005F6A                         10018mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F6A  0C01 0009              10019mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F6E  6E00 000A              10020mmm         BGT     ALPHA_823
00005F72  0601 0030              10021mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F76  6000 0006              10022mmm         BRA     DONE_823
00005F7A  0601 0037              10023mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F7E  4E71                   10024mmm DONE_823: NOP
00005F80                         10025mmm         ENDM
00005F80  4E4F                   10026mm         TRAP    #15         ; EXECUTE OUTPUT
00005F82                         10027mm         
00005F82  3212                   10028mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F84  E149                   10029mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F86  E949                   10030mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F88  E049                   10031mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F8A  E849                   10032mm         LSR.W   #4, D1      
00005F8C                         10033mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F8C  0C01 0009              10034mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F90  6E00 000A              10035mmm         BGT     ALPHA_824
00005F94  0601 0030              10036mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F98  6000 0006              10037mmm         BRA     DONE_824
00005F9C  0601 0037              10038mmm ALPHA_824: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FA0  4E71                   10039mmm DONE_824: NOP
00005FA2                         10040mmm         ENDM
00005FA2  4E4F                   10041mm         TRAP    #15         ; EXECUTE OUTPUT       
00005FA4                         10042mm         ENDM 
00005FA4  3605                   10043m         MOVE.W  D5, D3
00005FA6                         10044m 
00005FA6                         10045m COMPLETE_762:  ; OPCODE HAS BEEN VERIFIED
00005FA6                         10046m         ENDM
00005FA6  4E75                   10047          RTS                 ; Return from decodeNOT subroutine
00005FA8                         10048  
00005FA8                         10049  ; ------------------------------------------------------------
00005FA8                         10050  ; 11a. "decodeLSx_M" subroutine
00005FA8                         10051  ; AUTHOR
00005FA8                         10052  ;
00005FA8                         10053  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
00005FA8                         10054  ; ------------------------------------------------------------
00005FA8                         10055  decodeLSx_M:
00005FA8                         10056m         verifyOpcode    pLSx_M, (A2)
00005FA8  43F8 017E              10057m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00005FAC  3612                   10058m         MOVE.W  (A2), D3      ; INPUT VALUE
00005FAE  123C 000F              10059m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005FB2                         10060m         
00005FB2                         10061m LOOP_825: 
00005FB2  0C11 0030              10062m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005FB6  6700 000E              10063m         BEQ     CHECKFOR0_825
00005FBA  0C11 0031              10064m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005FBE  6700 0010              10065m         BEQ     CHECKFOR1_825
00005FC2  6000 0012              10066m         BRA     NEXT_825      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005FC6                         10067m         
00005FC6                         10068m CHECKFOR0_825: 
00005FC6  0303                   10069m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005FC8  6600 0BBA              10070m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005FCC  6000 0008              10071m         BRA     NEXT_825
00005FD0                         10072m 
00005FD0                         10073m CHECKFOR1_825:
00005FD0  0303                   10074m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005FD2  6700 0BB0              10075m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005FD6                         10076m 
00005FD6                         10077m NEXT_825: 
00005FD6  B23C 0000              10078m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005FDA  6700 0008              10079m         BEQ     COMPLETE_825  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005FDE  5301                   10080m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005FE0  1819                   10081m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005FE2  60CE                   10082m         BRA     LOOP_825      ; BEGIN LOOP AGAIN
00005FE4                         10083m 
00005FE4                         10084m COMPLETE_825:  ; OPCODE HAS BEEN VERIFIED
00005FE4                         10085m         ENDM
00005FE4  0803 0008              10086          BTST    #$08, D3     ; Check the 8th bit
00005FE8  6700 0010              10087          BEQ     LSR_M
00005FEC  43F8 008D              10088  LSL_M:  LEA     oLSL, A1
00005FF0  103C 000E              10089          MOVE.B  #14,D0          
00005FF4  4E4F                   10090          TRAP    #15 
00005FF6  6000 000C              10091          BRA     reg_M        
00005FFA                         10092    
00005FFA  43F8 0091              10093  LSR_M:  LEA     oLSR, A1
00005FFE  103C 000E              10094          MOVE.B  #14,D0          
00006002  4E4F                   10095          TRAP    #15      
00006004                         10096m reg_M:  printSizeLow       (A2) 
00006004  3612                   10097m         MOVE.W  (A2), D3      ; INPUT VALUE      
00006006                         10098m CHECKFORB_826: 
00006006  0803 0006              10099m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000600A  6600 0010              10100m         BNE     CHECKFORW_826  ; IF NOT GO TO WORD SIZE
0000600E  43F8 00B5              10101m         LEA     OBSIZE, A1     
00006012  103C 000E              10102m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006016  4E4F                   10103m         TRAP    #15
00006018  6000 0022              10104m         BRA     COMPLETE_826      
0000601C                         10105m CHECKFORW_826: 
0000601C  0803 0007              10106m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006020  6600 0010              10107m         BNE     CHECKFORL_826 ; IF NOT GO TO LONGWORD SIZE
00006024  43F8 00B9              10108m         LEA     OWSIZE, A1     
00006028  103C 000E              10109m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000602C  4E4F                   10110m         TRAP    #15
0000602E  6000 000C              10111m         BRA     COMPLETE_826  
00006032                         10112m CHECKFORL_826:
00006032  43F8 00BD              10113m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006036  103C 000E              10114m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000603A  4E4F                   10115m         TRAP    #15
0000603C                         10116m COMPLETE_826:  ; SIZE HAS BEEN PRINTED
0000603C                         10117m         ENDM
0000603C                         10118m         printCount       (A2)
0000603C  3212                   10119m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000603E  E949                   10120m         LSL     #$04, D1
00006040  E049                   10121m         LSR     #$08, D1
00006042  EA49                   10122m         LSR     #$05, D1
00006044  43F8 00D0              10123m         LEA     OHASH, A1     
00006048  103C 000E              10124m         MOVE.B  #14,D0          
0000604C  4E4F                   10125m         TRAP    #15
0000604E  103C 0003              10126m         MOVE.B  #3,D0          
00006052  4E4F                   10127m         TRAP    #15
00006054                         10128m         ENDM
00006054                         10129m         printComma
00006054  43F8 00C9              10130m         LEA     OCOMMA, A1     
00006058  103C 000E              10131m         MOVE.B  #14,D0          
0000605C  4E4F                   10132m         TRAP    #15
0000605E                         10133m         ENDM
0000605E                         10134m         printDnSrc     (A2)        
0000605E  4281                   10135m         CLR.L   D1
00006060  3212                   10136m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006062  E149                   10137m         LSL     #$08, D1
00006064  EB49                   10138m         LSL     #$05, D1
00006066  E049                   10139m         LSR     #$08, D1
00006068  EA49                   10140m         LSR     #$05, D1
0000606A  43F8 00C1              10141m         LEA     ODN, A1     
0000606E  103C 000E              10142m         MOVE.B  #14,D0          
00006072  4E4F                   10143m         TRAP    #15
00006074  103C 0003              10144m         MOVE.B  #3,D0          
00006078  4E4F                   10145m         TRAP    #15
0000607A                         10146m         ENDM
0000607A  4E75                   10147          RTS                 ; Return from decodeLSx_M subroutine
0000607C                         10148  
0000607C                         10149  
0000607C                         10150  ; ------------------------------------------------------------
0000607C                         10151  ; 11b. "decodeLSx_R" subroutine
0000607C                         10152  ; AUTHOR
0000607C                         10153  ;
0000607C                         10154  ; TODO: DESCRIPTION - LSL or LSR Register Shift
0000607C                         10155  ; ------------------------------------------------------------
0000607C                         10156  decodeLSx_R:
0000607C                         10157m         verifyOpcode    pLSx_R, (A2)
0000607C  43F8 018F              10158m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
00006080  3612                   10159m         MOVE.W  (A2), D3      ; INPUT VALUE
00006082  123C 000F              10160m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006086                         10161m         
00006086                         10162m LOOP_830: 
00006086  0C11 0030              10163m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000608A  6700 000E              10164m         BEQ     CHECKFOR0_830
0000608E  0C11 0031              10165m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006092  6700 0010              10166m         BEQ     CHECKFOR1_830
00006096  6000 0012              10167m         BRA     NEXT_830      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000609A                         10168m         
0000609A                         10169m CHECKFOR0_830: 
0000609A  0303                   10170m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000609C  6600 0AE6              10171m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000060A0  6000 0008              10172m         BRA     NEXT_830
000060A4                         10173m 
000060A4                         10174m CHECKFOR1_830:
000060A4  0303                   10175m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000060A6  6700 0ADC              10176m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000060AA                         10177m 
000060AA                         10178m NEXT_830: 
000060AA  B23C 0000              10179m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000060AE  6700 0008              10180m         BEQ     COMPLETE_830  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000060B2  5301                   10181m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000060B4  1819                   10182m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000060B6  60CE                   10183m         BRA     LOOP_830      ; BEGIN LOOP AGAIN
000060B8                         10184m 
000060B8                         10185m COMPLETE_830:  ; OPCODE HAS BEEN VERIFIED
000060B8                         10186m         ENDM
000060B8  0803 0008              10187          BTST    #$08, D3     ; Check the 8th bit
000060BC  6700 0010              10188          BEQ     LSR_R
000060C0  43F8 008D              10189  LSL_R:  LEA     oLSL, A1
000060C4  103C 000E              10190          MOVE.B  #14,D0          
000060C8  4E4F                   10191          TRAP    #15 
000060CA  6000 000C              10192          BRA     reg_R       
000060CE                         10193    
000060CE  43F8 0091              10194  LSR_R:  LEA     oLSR, A1
000060D2  103C 000E              10195          MOVE.B  #14,D0          
000060D6  4E4F                   10196          TRAP    #15      
000060D8                         10197m reg_R:  printSizeLow       (A2)
000060D8  3612                   10198m         MOVE.W  (A2), D3      ; INPUT VALUE      
000060DA                         10199m CHECKFORB_831: 
000060DA  0803 0006              10200m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000060DE  6600 0010              10201m         BNE     CHECKFORW_831  ; IF NOT GO TO WORD SIZE
000060E2  43F8 00B5              10202m         LEA     OBSIZE, A1     
000060E6  103C 000E              10203m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000060EA  4E4F                   10204m         TRAP    #15
000060EC  6000 0022              10205m         BRA     COMPLETE_831      
000060F0                         10206m CHECKFORW_831: 
000060F0  0803 0007              10207m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000060F4  6600 0010              10208m         BNE     CHECKFORL_831 ; IF NOT GO TO LONGWORD SIZE
000060F8  43F8 00B9              10209m         LEA     OWSIZE, A1     
000060FC  103C 000E              10210m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006100  4E4F                   10211m         TRAP    #15
00006102  6000 000C              10212m         BRA     COMPLETE_831  
00006106                         10213m CHECKFORL_831:
00006106  43F8 00BD              10214m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000610A  103C 000E              10215m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000610E  4E4F                   10216m         TRAP    #15
00006110                         10217m COMPLETE_831:  ; SIZE HAS BEEN PRINTED
00006110                         10218m         ENDM
00006110                         10219m         printDnDest    (A2)
00006110  3212                   10220m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006112  E949                   10221m         LSL     #$04, D1
00006114  E049                   10222m         LSR     #$08, D1
00006116  EA49                   10223m         LSR     #$05, D1
00006118  43F8 00C1              10224m         LEA     ODN, A1     
0000611C  103C 000E              10225m         MOVE.B  #14,D0          
00006120  4E4F                   10226m         TRAP    #15
00006122  103C 0003              10227m         MOVE.B  #3,D0          
00006126  4E4F                   10228m         TRAP    #15
00006128                         10229m         ENDM
00006128                         10230m         printComma
00006128  43F8 00C9              10231m         LEA     OCOMMA, A1     
0000612C  103C 000E              10232m         MOVE.B  #14,D0          
00006130  4E4F                   10233m         TRAP    #15
00006132                         10234m         ENDM
00006132                         10235m         printDnSrc     (A2)
00006132  4281                   10236m         CLR.L   D1
00006134  3212                   10237m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006136  E149                   10238m         LSL     #$08, D1
00006138  EB49                   10239m         LSL     #$05, D1
0000613A  E049                   10240m         LSR     #$08, D1
0000613C  EA49                   10241m         LSR     #$05, D1
0000613E  43F8 00C1              10242m         LEA     ODN, A1     
00006142  103C 000E              10243m         MOVE.B  #14,D0          
00006146  4E4F                   10244m         TRAP    #15
00006148  103C 0003              10245m         MOVE.B  #3,D0          
0000614C  4E4F                   10246m         TRAP    #15
0000614E                         10247m         ENDM
0000614E  4E75                   10248          RTS                 ; Return from ddecodeLSx_R subroutine
00006150                         10249  
00006150                         10250  ; ------------------------------------------------------------
00006150                         10251  ; 11c. "decodeLSx_S" subroutine
00006150                         10252  ; AUTHOR
00006150                         10253  ;
00006150                         10254  ; TODO: DESCRIPTION - LSL or LSR Register Shift
00006150                         10255  ; ------------------------------------------------------------
00006150                         10256  decodeLSx_S:
00006150                         10257m         verifyOpcode    pLSx_S, (A2)
00006150  43F8 01A0              10258m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
00006154  3612                   10259m         MOVE.W  (A2), D3      ; INPUT VALUE
00006156  123C 000F              10260m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000615A                         10261m         
0000615A                         10262m LOOP_835: 
0000615A  0C11 0030              10263m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000615E  6700 000E              10264m         BEQ     CHECKFOR0_835
00006162  0C11 0031              10265m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006166  6700 0010              10266m         BEQ     CHECKFOR1_835
0000616A  6000 0012              10267m         BRA     NEXT_835      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000616E                         10268m         
0000616E                         10269m CHECKFOR0_835: 
0000616E  0303                   10270m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006170  6600 0A12              10271m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006174  6000 0008              10272m         BRA     NEXT_835
00006178                         10273m 
00006178                         10274m CHECKFOR1_835:
00006178  0303                   10275m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000617A  6700 0A08              10276m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000617E                         10277m 
0000617E                         10278m NEXT_835: 
0000617E  B23C 0000              10279m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006182  6700 0008              10280m         BEQ     COMPLETE_835  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006186  5301                   10281m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006188  1819                   10282m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000618A  60CE                   10283m         BRA     LOOP_835      ; BEGIN LOOP AGAIN
0000618C                         10284m 
0000618C                         10285m COMPLETE_835:  ; OPCODE HAS BEEN VERIFIED
0000618C                         10286m         ENDM
0000618C  4E75                   10287          RTS                 ; Return from ddecodeLSx_S subroutine
0000618E                         10288          
0000618E                         10289  ; ------------------------------------------------------------
0000618E                         10290  ; 12a. "decodeASx_M" subroutine
0000618E                         10291  ; AUTHOR
0000618E                         10292  ;
0000618E                         10293  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
0000618E                         10294  ; ------------------------------------------------------------
0000618E                         10295  decodeASx_M:
0000618E                         10296m         verifyOpcode    pASx_M, (A2)
0000618E  43F8 01B1              10297m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006192  3612                   10298m         MOVE.W  (A2), D3      ; INPUT VALUE
00006194  123C 000F              10299m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006198                         10300m         
00006198                         10301m LOOP_836: 
00006198  0C11 0030              10302m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000619C  6700 000E              10303m         BEQ     CHECKFOR0_836
000061A0  0C11 0031              10304m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000061A4  6700 0010              10305m         BEQ     CHECKFOR1_836
000061A8  6000 0012              10306m         BRA     NEXT_836      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000061AC                         10307m         
000061AC                         10308m CHECKFOR0_836: 
000061AC  0303                   10309m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000061AE  6600 09D4              10310m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000061B2  6000 0008              10311m         BRA     NEXT_836
000061B6                         10312m 
000061B6                         10313m CHECKFOR1_836:
000061B6  0303                   10314m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000061B8  6700 09CA              10315m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000061BC                         10316m 
000061BC                         10317m NEXT_836: 
000061BC  B23C 0000              10318m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000061C0  6700 0008              10319m         BEQ     COMPLETE_836  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000061C4  5301                   10320m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000061C6  1819                   10321m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000061C8  60CE                   10322m         BRA     LOOP_836      ; BEGIN LOOP AGAIN
000061CA                         10323m 
000061CA                         10324m COMPLETE_836:  ; OPCODE HAS BEEN VERIFIED
000061CA                         10325m         ENDM
000061CA  0803 0008              10326          BTST    #$08, D3     ; Check the 8th bit
000061CE  6700 0010              10327          BEQ     ASR_M
000061D2  43F8 0095              10328  ASL_M:  LEA     oASL, A1
000061D6  103C 000E              10329          MOVE.B  #14,D0          
000061DA  4E4F                   10330          TRAP    #15 
000061DC  6000 000C              10331          BRA     Areg_M        
000061E0                         10332    
000061E0  43F8 0099              10333  ASR_M:  LEA     oASR, A1
000061E4  103C 000E              10334          MOVE.B  #14,D0          
000061E8  4E4F                   10335          TRAP    #15      
000061EA                         10336m Areg_M: printSizeLow       (A2) 
000061EA  3612                   10337m         MOVE.W  (A2), D3      ; INPUT VALUE      
000061EC                         10338m CHECKFORB_837: 
000061EC  0803 0006              10339m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000061F0  6600 0010              10340m         BNE     CHECKFORW_837  ; IF NOT GO TO WORD SIZE
000061F4  43F8 00B5              10341m         LEA     OBSIZE, A1     
000061F8  103C 000E              10342m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061FC  4E4F                   10343m         TRAP    #15
000061FE  6000 0022              10344m         BRA     COMPLETE_837      
00006202                         10345m CHECKFORW_837: 
00006202  0803 0007              10346m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006206  6600 0010              10347m         BNE     CHECKFORL_837 ; IF NOT GO TO LONGWORD SIZE
0000620A  43F8 00B9              10348m         LEA     OWSIZE, A1     
0000620E  103C 000E              10349m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006212  4E4F                   10350m         TRAP    #15
00006214  6000 000C              10351m         BRA     COMPLETE_837  
00006218                         10352m CHECKFORL_837:
00006218  43F8 00BD              10353m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000621C  103C 000E              10354m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006220  4E4F                   10355m         TRAP    #15
00006222                         10356m COMPLETE_837:  ; SIZE HAS BEEN PRINTED
00006222                         10357m         ENDM
00006222                         10358m         printCount       (A2)
00006222  3212                   10359m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006224  E949                   10360m         LSL     #$04, D1
00006226  E049                   10361m         LSR     #$08, D1
00006228  EA49                   10362m         LSR     #$05, D1
0000622A  43F8 00D0              10363m         LEA     OHASH, A1     
0000622E  103C 000E              10364m         MOVE.B  #14,D0          
00006232  4E4F                   10365m         TRAP    #15
00006234  103C 0003              10366m         MOVE.B  #3,D0          
00006238  4E4F                   10367m         TRAP    #15
0000623A                         10368m         ENDM
0000623A                         10369m         printComma
0000623A  43F8 00C9              10370m         LEA     OCOMMA, A1     
0000623E  103C 000E              10371m         MOVE.B  #14,D0          
00006242  4E4F                   10372m         TRAP    #15
00006244                         10373m         ENDM
00006244                         10374m         printDnSrc     (A2)          
00006244  4281                   10375m         CLR.L   D1
00006246  3212                   10376m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006248  E149                   10377m         LSL     #$08, D1
0000624A  EB49                   10378m         LSL     #$05, D1
0000624C  E049                   10379m         LSR     #$08, D1
0000624E  EA49                   10380m         LSR     #$05, D1
00006250  43F8 00C1              10381m         LEA     ODN, A1     
00006254  103C 000E              10382m         MOVE.B  #14,D0          
00006258  4E4F                   10383m         TRAP    #15
0000625A  103C 0003              10384m         MOVE.B  #3,D0          
0000625E  4E4F                   10385m         TRAP    #15
00006260                         10386m         ENDM
00006260  4E75                   10387          RTS                 ; Return from decodeASx_M subroutine
00006262                         10388  
00006262                         10389  
00006262                         10390  ; ------------------------------------------------------------
00006262                         10391  ; 12b. "decodeASx_R" subroutine
00006262                         10392  ; AUTHOR
00006262                         10393  ;
00006262                         10394  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006262                         10395  ; ------------------------------------------------------------
00006262                         10396  decodeASx_R:
00006262                         10397m         verifyOpcode    pASx_R, (A2)
00006262  43F8 01C2              10398m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
00006266  3612                   10399m         MOVE.W  (A2), D3      ; INPUT VALUE
00006268  123C 000F              10400m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000626C                         10401m         
0000626C                         10402m LOOP_841: 
0000626C  0C11 0030              10403m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006270  6700 000E              10404m         BEQ     CHECKFOR0_841
00006274  0C11 0031              10405m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006278  6700 0010              10406m         BEQ     CHECKFOR1_841
0000627C  6000 0012              10407m         BRA     NEXT_841      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006280                         10408m         
00006280                         10409m CHECKFOR0_841: 
00006280  0303                   10410m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006282  6600 0900              10411m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006286  6000 0008              10412m         BRA     NEXT_841
0000628A                         10413m 
0000628A                         10414m CHECKFOR1_841:
0000628A  0303                   10415m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000628C  6700 08F6              10416m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006290                         10417m 
00006290                         10418m NEXT_841: 
00006290  B23C 0000              10419m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006294  6700 0008              10420m         BEQ     COMPLETE_841  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006298  5301                   10421m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000629A  1819                   10422m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000629C  60CE                   10423m         BRA     LOOP_841      ; BEGIN LOOP AGAIN
0000629E                         10424m 
0000629E                         10425m COMPLETE_841:  ; OPCODE HAS BEEN VERIFIED
0000629E                         10426m         ENDM
0000629E  0803 0008              10427          BTST    #$08, D3     ; Check the 8th bit
000062A2  6700 0010              10428          BEQ     ASR_R
000062A6  43F8 0095              10429  ASL_R:  LEA     oASL, A1
000062AA  103C 000E              10430          MOVE.B  #14,D0          
000062AE  4E4F                   10431          TRAP    #15 
000062B0  6000 000C              10432          BRA     Areg_R       
000062B4                         10433    
000062B4  43F8 0099              10434  ASR_R:  LEA     oASR, A1
000062B8  103C 000E              10435          MOVE.B  #14,D0          
000062BC  4E4F                   10436          TRAP    #15      
000062BE                         10437m Areg_R: printSizeLow       (A2)
000062BE  3612                   10438m         MOVE.W  (A2), D3      ; INPUT VALUE      
000062C0                         10439m CHECKFORB_842: 
000062C0  0803 0006              10440m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000062C4  6600 0010              10441m         BNE     CHECKFORW_842  ; IF NOT GO TO WORD SIZE
000062C8  43F8 00B5              10442m         LEA     OBSIZE, A1     
000062CC  103C 000E              10443m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062D0  4E4F                   10444m         TRAP    #15
000062D2  6000 0022              10445m         BRA     COMPLETE_842      
000062D6                         10446m CHECKFORW_842: 
000062D6  0803 0007              10447m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000062DA  6600 0010              10448m         BNE     CHECKFORL_842 ; IF NOT GO TO LONGWORD SIZE
000062DE  43F8 00B9              10449m         LEA     OWSIZE, A1     
000062E2  103C 000E              10450m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000062E6  4E4F                   10451m         TRAP    #15
000062E8  6000 000C              10452m         BRA     COMPLETE_842  
000062EC                         10453m CHECKFORL_842:
000062EC  43F8 00BD              10454m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000062F0  103C 000E              10455m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062F4  4E4F                   10456m         TRAP    #15
000062F6                         10457m COMPLETE_842:  ; SIZE HAS BEEN PRINTED
000062F6                         10458m         ENDM
000062F6                         10459m         printDnDest    (A2)
000062F6  3212                   10460m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000062F8  E949                   10461m         LSL     #$04, D1
000062FA  E049                   10462m         LSR     #$08, D1
000062FC  EA49                   10463m         LSR     #$05, D1
000062FE  43F8 00C1              10464m         LEA     ODN, A1     
00006302  103C 000E              10465m         MOVE.B  #14,D0          
00006306  4E4F                   10466m         TRAP    #15
00006308  103C 0003              10467m         MOVE.B  #3,D0          
0000630C  4E4F                   10468m         TRAP    #15
0000630E                         10469m         ENDM
0000630E                         10470m         printComma
0000630E  43F8 00C9              10471m         LEA     OCOMMA, A1     
00006312  103C 000E              10472m         MOVE.B  #14,D0          
00006316  4E4F                   10473m         TRAP    #15
00006318                         10474m         ENDM
00006318                         10475m         printDnSrc     (A2)
00006318  4281                   10476m         CLR.L   D1
0000631A  3212                   10477m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000631C  E149                   10478m         LSL     #$08, D1
0000631E  EB49                   10479m         LSL     #$05, D1
00006320  E049                   10480m         LSR     #$08, D1
00006322  EA49                   10481m         LSR     #$05, D1
00006324  43F8 00C1              10482m         LEA     ODN, A1     
00006328  103C 000E              10483m         MOVE.B  #14,D0          
0000632C  4E4F                   10484m         TRAP    #15
0000632E  103C 0003              10485m         MOVE.B  #3,D0          
00006332  4E4F                   10486m         TRAP    #15
00006334                         10487m         ENDM
00006334  4E75                   10488          RTS                 ; Return from decodeASx_R subroutine
00006336                         10489          
00006336                         10490          ; ------------------------------------------------------------
00006336                         10491  ; 12c. "decodeASx_S" subroutine
00006336                         10492  ; AUTHOR
00006336                         10493  ;
00006336                         10494  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006336                         10495  ; ------------------------------------------------------------
00006336                         10496  decodeASx_S:
00006336                         10497m         verifyOpcode    pASx_S, (A2)
00006336  43F8 01D3              10498m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
0000633A  3612                   10499m         MOVE.W  (A2), D3      ; INPUT VALUE
0000633C  123C 000F              10500m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006340                         10501m         
00006340                         10502m LOOP_846: 
00006340  0C11 0030              10503m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006344  6700 000E              10504m         BEQ     CHECKFOR0_846
00006348  0C11 0031              10505m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000634C  6700 0010              10506m         BEQ     CHECKFOR1_846
00006350  6000 0012              10507m         BRA     NEXT_846      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006354                         10508m         
00006354                         10509m CHECKFOR0_846: 
00006354  0303                   10510m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006356  6600 082C              10511m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000635A  6000 0008              10512m         BRA     NEXT_846
0000635E                         10513m 
0000635E                         10514m CHECKFOR1_846:
0000635E  0303                   10515m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006360  6700 0822              10516m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006364                         10517m 
00006364                         10518m NEXT_846: 
00006364  B23C 0000              10519m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006368  6700 0008              10520m         BEQ     COMPLETE_846  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000636C  5301                   10521m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000636E  1819                   10522m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006370  60CE                   10523m         BRA     LOOP_846      ; BEGIN LOOP AGAIN
00006372                         10524m 
00006372                         10525m COMPLETE_846:  ; OPCODE HAS BEEN VERIFIED
00006372                         10526m         ENDM
00006372  4E75                   10527          RTS                 ; Return from decodeASx_S subroutine
00006374                         10528  
00006374                         10529  
00006374                         10530  ; ------------------------------------------------------------
00006374                         10531  ; 13a. "decodeBEQ" subroutine
00006374                         10532  ; AUTHOR
00006374                         10533  ;
00006374                         10534  ; TODO: DESCRIPTION
00006374                         10535  ; ------------------------------------------------------------
00006374                         10536  decodeBEQ:
00006374                         10537m         verifyOpcode    pBEQ, (A2)
00006374  43F8 01E4              10538m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
00006378  3612                   10539m         MOVE.W  (A2), D3      ; INPUT VALUE
0000637A  123C 000F              10540m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000637E                         10541m         
0000637E                         10542m LOOP_847: 
0000637E  0C11 0030              10543m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006382  6700 000E              10544m         BEQ     CHECKFOR0_847
00006386  0C11 0031              10545m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000638A  6700 0010              10546m         BEQ     CHECKFOR1_847
0000638E  6000 0012              10547m         BRA     NEXT_847      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006392                         10548m         
00006392                         10549m CHECKFOR0_847: 
00006392  0303                   10550m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006394  6600 07EE              10551m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006398  6000 0008              10552m         BRA     NEXT_847
0000639C                         10553m 
0000639C                         10554m CHECKFOR1_847:
0000639C  0303                   10555m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000639E  6700 07E4              10556m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063A2                         10557m 
000063A2                         10558m NEXT_847: 
000063A2  B23C 0000              10559m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063A6  6700 0008              10560m         BEQ     COMPLETE_847  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063AA  5301                   10561m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063AC  1819                   10562m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063AE  60CE                   10563m         BRA     LOOP_847      ; BEGIN LOOP AGAIN
000063B0                         10564m 
000063B0                         10565m COMPLETE_847:  ; OPCODE HAS BEEN VERIFIED
000063B0                         10566m         ENDM
000063B0                         10567          ; put code here
000063B0  4E75                   10568          RTS                 ; Return from decodeBEQ subroutine
000063B2                         10569  
000063B2                         10570  
000063B2                         10571  ; ------------------------------------------------------------
000063B2                         10572  ; 13b. "decodeBGE" subroutine
000063B2                         10573  ; AUTHOR
000063B2                         10574  ;
000063B2                         10575  ; TODO: DESCRIPTION
000063B2                         10576  ; ------------------------------------------------------------
000063B2                         10577  decodeBGE:
000063B2                         10578m         verifyOpcode    pBGE, (A2)
000063B2  43F8 01F5              10579m         LEA     PBGE, A1      ; INPUT PATTERN STRING
000063B6  3612                   10580m         MOVE.W  (A2), D3      ; INPUT VALUE
000063B8  123C 000F              10581m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063BC                         10582m         
000063BC                         10583m LOOP_848: 
000063BC  0C11 0030              10584m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063C0  6700 000E              10585m         BEQ     CHECKFOR0_848
000063C4  0C11 0031              10586m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063C8  6700 0010              10587m         BEQ     CHECKFOR1_848
000063CC  6000 0012              10588m         BRA     NEXT_848      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063D0                         10589m         
000063D0                         10590m CHECKFOR0_848: 
000063D0  0303                   10591m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063D2  6600 07B0              10592m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063D6  6000 0008              10593m         BRA     NEXT_848
000063DA                         10594m 
000063DA                         10595m CHECKFOR1_848:
000063DA  0303                   10596m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000063DC  6700 07A6              10597m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063E0                         10598m 
000063E0                         10599m NEXT_848: 
000063E0  B23C 0000              10600m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063E4  6700 0008              10601m         BEQ     COMPLETE_848  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063E8  5301                   10602m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063EA  1819                   10603m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063EC  60CE                   10604m         BRA     LOOP_848      ; BEGIN LOOP AGAIN
000063EE                         10605m 
000063EE                         10606m COMPLETE_848:  ; OPCODE HAS BEEN VERIFIED
000063EE                         10607m         ENDM
000063EE                         10608          ; put code here
000063EE  4E75                   10609          RTS                 ; Return from decodeBGE subroutine
000063F0                         10610  
000063F0                         10611  
000063F0                         10612  ; ------------------------------------------------------------
000063F0                         10613  ; 13c. "decodeBLT" subroutine
000063F0                         10614  ; AUTHOR
000063F0                         10615  ;
000063F0                         10616  ; TODO: DESCRIPTION
000063F0                         10617  ; ------------------------------------------------------------
000063F0                         10618  decodeBLT:
000063F0                         10619m         verifyOpcode    pBLT, (A2)
000063F0  43F8 0206              10620m         LEA     PBLT, A1      ; INPUT PATTERN STRING
000063F4  3612                   10621m         MOVE.W  (A2), D3      ; INPUT VALUE
000063F6  123C 000F              10622m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063FA                         10623m         
000063FA                         10624m LOOP_849: 
000063FA  0C11 0030              10625m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063FE  6700 000E              10626m         BEQ     CHECKFOR0_849
00006402  0C11 0031              10627m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006406  6700 0010              10628m         BEQ     CHECKFOR1_849
0000640A  6000 0012              10629m         BRA     NEXT_849      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000640E                         10630m         
0000640E                         10631m CHECKFOR0_849: 
0000640E  0303                   10632m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006410  6600 0772              10633m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006414  6000 0008              10634m         BRA     NEXT_849
00006418                         10635m 
00006418                         10636m CHECKFOR1_849:
00006418  0303                   10637m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000641A  6700 0768              10638m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000641E                         10639m 
0000641E                         10640m NEXT_849: 
0000641E  B23C 0000              10641m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006422  6700 0008              10642m         BEQ     COMPLETE_849  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006426  5301                   10643m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006428  1819                   10644m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000642A  60CE                   10645m         BRA     LOOP_849      ; BEGIN LOOP AGAIN
0000642C                         10646m 
0000642C                         10647m COMPLETE_849:  ; OPCODE HAS BEEN VERIFIED
0000642C                         10648m         ENDM
0000642C                         10649          ; put code here
0000642C  4E75                   10650          RTS                 ; Return from decodeBLT subroutine
0000642E                         10651  
0000642E                         10652  
0000642E                         10653  ; ------------------------------------------------------------
0000642E                         10654  ; 14. "decodeJSR" subroutine
0000642E                         10655  ; AUTHOR
0000642E                         10656  ;
0000642E                         10657  ; TODO: DESCRIPTION
0000642E                         10658  ; ------------------------------------------------------------
0000642E                         10659  decodeJSR:
0000642E                         10660m         verifyOpcode    pJSR, (A2)
0000642E  43F8 0217              10661m         LEA     PJSR, A1      ; INPUT PATTERN STRING
00006432  3612                   10662m         MOVE.W  (A2), D3      ; INPUT VALUE
00006434  123C 000F              10663m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006438                         10664m         
00006438                         10665m LOOP_850: 
00006438  0C11 0030              10666m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000643C  6700 000E              10667m         BEQ     CHECKFOR0_850
00006440  0C11 0031              10668m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006444  6700 0010              10669m         BEQ     CHECKFOR1_850
00006448  6000 0012              10670m         BRA     NEXT_850      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000644C                         10671m         
0000644C                         10672m CHECKFOR0_850: 
0000644C  0303                   10673m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000644E  6600 0734              10674m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006452  6000 0008              10675m         BRA     NEXT_850
00006456                         10676m 
00006456                         10677m CHECKFOR1_850:
00006456  0303                   10678m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006458  6700 072A              10679m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000645C                         10680m 
0000645C                         10681m NEXT_850: 
0000645C  B23C 0000              10682m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006460  6700 0008              10683m         BEQ     COMPLETE_850  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006464  5301                   10684m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006466  1819                   10685m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006468  60CE                   10686m         BRA     LOOP_850      ; BEGIN LOOP AGAIN
0000646A                         10687m 
0000646A                         10688m COMPLETE_850:  ; OPCODE HAS BEEN VERIFIED
0000646A                         10689m         ENDM
0000646A  43F8 00A9              10690          LEA     oJSR, A1     
0000646E  103C 000E              10691          MOVE.B  #14,D0          
00006472  4E4F                   10692          TRAP    #15
00006474                         10693          
00006474  43F8 00D2              10694          LEA     oBlank, A1     
00006478  103C 000E              10695          MOVE.B  #14,D0          
0000647C  4E4F                   10696          TRAP    #15
0000647E                         10697  
0000647E                         10698m         prepareAdrMode  #$1, (A2)
0000647E  3C3C 0001              10699m         MOVE.W  #$1, D6      ; INPUT VALUE
00006482  3212                   10700m         MOVE.W  (A2), D1
00006484  BC3C 0001              10701m         CMP.B   #$01, D6
00006488  6700 000C              10702m         BEQ     ADRSOURCE_851    
0000648C                         10703m ADRDEST_851:
0000648C  EF49                   10704m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000648E  E049                   10705m         LSR     #$08, D1
00006490  EA49                   10706m         LSR     #$05, D1
00006492  6000 000A              10707m         BRA     COMPLETE_851 
00006496                         10708m ADRSOURCE_851:                
00006496  E149                   10709m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006498  E549                   10710m         LSL     #$02, D1
0000649A  E049                   10711m         LSR     #$08, D1
0000649C  EA49                   10712m         LSR     #$05, D1
0000649E                         10713m COMPLETE_851:  ; OPCODE HAS BEEN VERIFIED
0000649E                         10714m         ENDM        
0000649E                         10715m         decodeAdrMode   (A2), D1        
0000649E  3612                   10716m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000064A0  3201                   10717m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000064A2                         10718m 
000064A2  B23C 0001              10719m         CMP.B   #$01, D1
000064A6  6700 0066              10720m         BEQ     ADRREGDIRECT_852    
000064AA  B23C 0002              10721m         CMP.B   #$02, D1
000064AE  6700 00A0              10722m         BEQ     ADRREGINDIRECT_852  
000064B2  B23C 0003              10723m         CMP.B   #$03, D1
000064B6  6700 0102              10724m         BEQ     ADRREGPOSTINC_852  
000064BA  B23C 0004              10725m         CMP.B   #$04, D1
000064BE  6700 0178              10726m         BEQ     ADRREGPREDEC_852
000064C2  B23C 0007              10727m         CMP.B   #$07, D1
000064C6  6700 01EE              10728m         BEQ     ADRABSOLUTE_852    
000064CA                         10729m         
000064CA                         10730m DATAREGDIRECT_852: 
000064CA  BC3C 0001              10731m         CMP.B   #$01, D6
000064CE  6700 001E              10732m         BEQ     DATAREGDIRECTSRC_852   
000064D2                         10733m DATAREGDIRECTDEST_852: 
000064D2                         10734mm         PRINTDNDEST D3 
000064D2  3203                   10735mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000064D4  E949                   10736mm         LSL     #$04, D1
000064D6  E049                   10737mm         LSR     #$08, D1
000064D8  EA49                   10738mm         LSR     #$05, D1
000064DA  43F8 00C1              10739mm         LEA     ODN, A1     
000064DE  103C 000E              10740mm         MOVE.B  #14,D0          
000064E2  4E4F                   10741mm         TRAP    #15
000064E4  103C 0003              10742mm         MOVE.B  #3,D0          
000064E8  4E4F                   10743mm         TRAP    #15
000064EA                         10744mm         ENDM
000064EA  6000 0562              10745m         BRA     COMPLETE_852 
000064EE                         10746m DATAREGDIRECTSRC_852: 
000064EE                         10747mm         PRINTDNSRC D3 
000064EE  4281                   10748mm         CLR.L   D1
000064F0  3203                   10749mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000064F2  E149                   10750mm         LSL     #$08, D1
000064F4  EB49                   10751mm         LSL     #$05, D1
000064F6  E049                   10752mm         LSR     #$08, D1
000064F8  EA49                   10753mm         LSR     #$05, D1
000064FA  43F8 00C1              10754mm         LEA     ODN, A1     
000064FE  103C 000E              10755mm         MOVE.B  #14,D0          
00006502  4E4F                   10756mm         TRAP    #15
00006504  103C 0003              10757mm         MOVE.B  #3,D0          
00006508  4E4F                   10758mm         TRAP    #15
0000650A                         10759mm         ENDM
0000650A  6000 0542              10760m         BRA     COMPLETE_852   
0000650E                         10761m         
0000650E                         10762m ADRREGDIRECT_852: 
0000650E  BC3C 0001              10763m         CMP.B   #$01, D6
00006512  6700 001E              10764m         BEQ     ADRREGDIRECTSRC_852   
00006516                         10765m ADRREGDIRECTDEST_852:
00006516                         10766mm         PRINTANDEST D3
00006516  3203                   10767mm         MOVE.W  D3, D1
00006518  E949                   10768mm         LSL     #$04, D1
0000651A  E049                   10769mm         LSR     #$08, D1
0000651C  EA49                   10770mm         LSR     #$05, D1
0000651E  43F8 00C3              10771mm         LEA     OAN, A1     
00006522  103C 000E              10772mm         MOVE.B  #14,D0          
00006526  4E4F                   10773mm         TRAP    #15
00006528  103C 0003              10774mm         MOVE.B  #3,D0          
0000652C  4E4F                   10775mm         TRAP    #15
0000652E                         10776mm         ENDM
0000652E  6000 051E              10777m         BRA     COMPLETE_852   
00006532                         10778m ADRREGDIRECTSRC_852:
00006532                         10779mm         PRINTANSRC D3
00006532  3203                   10780mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006534  E149                   10781mm         LSL     #$08, D1
00006536  EB49                   10782mm         LSL     #$05, D1
00006538  E049                   10783mm         LSR     #$08, D1
0000653A  EA49                   10784mm         LSR     #$05, D1
0000653C  43F8 00C3              10785mm         LEA     OAN, A1     
00006540  103C 000E              10786mm         MOVE.B  #14,D0          
00006544  4E4F                   10787mm         TRAP    #15
00006546  103C 0003              10788mm         MOVE.B  #3,D0          
0000654A  4E4F                   10789mm         TRAP    #15
0000654C                         10790mm         ENDM
0000654C  6000 0500              10791m         BRA     COMPLETE_852   
00006550                         10792m        
00006550                         10793m ADRREGINDIRECT_852:   
00006550  BC3C 0001              10794m         CMP.B   #$01, D6
00006554  6700 0032              10795m         BEQ     ADRREGINDIRECTSRC_852   
00006558                         10796m ADRREGINDIRECTDEST_852:
00006558                         10797mm         PRINTLB
00006558  43F8 00C5              10798mm         LEA     OLB, A1     
0000655C  103C 000E              10799mm         MOVE.B  #14,D0          
00006560  4E4F                   10800mm         TRAP    #15
00006562                         10801mm         ENDM
00006562                         10802mm         PRINTANDEST D3  
00006562  3203                   10803mm         MOVE.W  D3, D1
00006564  E949                   10804mm         LSL     #$04, D1
00006566  E049                   10805mm         LSR     #$08, D1
00006568  EA49                   10806mm         LSR     #$05, D1
0000656A  43F8 00C3              10807mm         LEA     OAN, A1     
0000656E  103C 000E              10808mm         MOVE.B  #14,D0          
00006572  4E4F                   10809mm         TRAP    #15
00006574  103C 0003              10810mm         MOVE.B  #3,D0          
00006578  4E4F                   10811mm         TRAP    #15
0000657A                         10812mm         ENDM
0000657A                         10813mm         PRINTRB
0000657A  43F8 00C7              10814mm         LEA     ORB, A1     
0000657E  103C 000E              10815mm         MOVE.B  #14,D0          
00006582  4E4F                   10816mm         TRAP    #15
00006584                         10817mm         ENDM
00006584  6000 04C8              10818m         BRA     COMPLETE_852     
00006588                         10819m ADRREGINDIRECTSRC_852:   
00006588                         10820mm         PRINTLB
00006588  43F8 00C5              10821mm         LEA     OLB, A1     
0000658C  103C 000E              10822mm         MOVE.B  #14,D0          
00006590  4E4F                   10823mm         TRAP    #15
00006592                         10824mm         ENDM
00006592                         10825mm         PRINTANSRC D3  
00006592  3203                   10826mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006594  E149                   10827mm         LSL     #$08, D1
00006596  EB49                   10828mm         LSL     #$05, D1
00006598  E049                   10829mm         LSR     #$08, D1
0000659A  EA49                   10830mm         LSR     #$05, D1
0000659C  43F8 00C3              10831mm         LEA     OAN, A1     
000065A0  103C 000E              10832mm         MOVE.B  #14,D0          
000065A4  4E4F                   10833mm         TRAP    #15
000065A6  103C 0003              10834mm         MOVE.B  #3,D0          
000065AA  4E4F                   10835mm         TRAP    #15
000065AC                         10836mm         ENDM
000065AC                         10837mm         PRINTRB
000065AC  43F8 00C7              10838mm         LEA     ORB, A1     
000065B0  103C 000E              10839mm         MOVE.B  #14,D0          
000065B4  4E4F                   10840mm         TRAP    #15
000065B6                         10841mm         ENDM
000065B6  6000 0496              10842m         BRA     COMPLETE_852   
000065BA                         10843m         
000065BA                         10844m ADRREGPOSTINC_852:   
000065BA  BC3C 0001              10845m         CMP.B   #$01, D6
000065BE  6700 003C              10846m         BEQ     ADRREGPOSTINCSRC_852   
000065C2                         10847m ADRREGPOSTINCDEST_852: 
000065C2                         10848mm         PRINTLB
000065C2  43F8 00C5              10849mm         LEA     OLB, A1     
000065C6  103C 000E              10850mm         MOVE.B  #14,D0          
000065CA  4E4F                   10851mm         TRAP    #15
000065CC                         10852mm         ENDM
000065CC                         10853mm         PRINTANDEST D3  
000065CC  3203                   10854mm         MOVE.W  D3, D1
000065CE  E949                   10855mm         LSL     #$04, D1
000065D0  E049                   10856mm         LSR     #$08, D1
000065D2  EA49                   10857mm         LSR     #$05, D1
000065D4  43F8 00C3              10858mm         LEA     OAN, A1     
000065D8  103C 000E              10859mm         MOVE.B  #14,D0          
000065DC  4E4F                   10860mm         TRAP    #15
000065DE  103C 0003              10861mm         MOVE.B  #3,D0          
000065E2  4E4F                   10862mm         TRAP    #15
000065E4                         10863mm         ENDM
000065E4                         10864mm         PRINTRB
000065E4  43F8 00C7              10865mm         LEA     ORB, A1     
000065E8  103C 000E              10866mm         MOVE.B  #14,D0          
000065EC  4E4F                   10867mm         TRAP    #15
000065EE                         10868mm         ENDM
000065EE                         10869mm         PRINTPI
000065EE  43F8 00CE              10870mm         LEA     OPSTINC, A1     
000065F2  103C 000E              10871mm         MOVE.B  #14,D0          
000065F6  4E4F                   10872mm         TRAP    #15
000065F8                         10873mm         ENDM
000065F8  6000 0454              10874m         BRA     COMPLETE_852  
000065FC                         10875m ADRREGPOSTINCSRC_852:           
000065FC                         10876mm         PRINTLB
000065FC  43F8 00C5              10877mm         LEA     OLB, A1     
00006600  103C 000E              10878mm         MOVE.B  #14,D0          
00006604  4E4F                   10879mm         TRAP    #15
00006606                         10880mm         ENDM
00006606                         10881mm         PRINTANSRC D3  
00006606  3203                   10882mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006608  E149                   10883mm         LSL     #$08, D1
0000660A  EB49                   10884mm         LSL     #$05, D1
0000660C  E049                   10885mm         LSR     #$08, D1
0000660E  EA49                   10886mm         LSR     #$05, D1
00006610  43F8 00C3              10887mm         LEA     OAN, A1     
00006614  103C 000E              10888mm         MOVE.B  #14,D0          
00006618  4E4F                   10889mm         TRAP    #15
0000661A  103C 0003              10890mm         MOVE.B  #3,D0          
0000661E  4E4F                   10891mm         TRAP    #15
00006620                         10892mm         ENDM
00006620                         10893mm         PRINTRB
00006620  43F8 00C7              10894mm         LEA     ORB, A1     
00006624  103C 000E              10895mm         MOVE.B  #14,D0          
00006628  4E4F                   10896mm         TRAP    #15
0000662A                         10897mm         ENDM
0000662A                         10898mm         PRINTPI
0000662A  43F8 00CE              10899mm         LEA     OPSTINC, A1     
0000662E  103C 000E              10900mm         MOVE.B  #14,D0          
00006632  4E4F                   10901mm         TRAP    #15
00006634                         10902mm         ENDM
00006634  6000 0418              10903m         BRA     COMPLETE_852  
00006638                         10904m ADRREGPREDEC_852: 
00006638  BC3C 0001              10905m         CMP.B   #$01, D6
0000663C  6700 003C              10906m         BEQ     ADRREGPREDECSRC_852   
00006640                         10907m ADRREGPREDECDEST_852:
00006640                         10908mm         PRINTPD  
00006640  43F8 00CC              10909mm         LEA     OPREDEC, A1     
00006644  103C 000E              10910mm         MOVE.B  #14,D0          
00006648  4E4F                   10911mm         TRAP    #15
0000664A                         10912mm         ENDM
0000664A                         10913mm         PRINTLB
0000664A  43F8 00C5              10914mm         LEA     OLB, A1     
0000664E  103C 000E              10915mm         MOVE.B  #14,D0          
00006652  4E4F                   10916mm         TRAP    #15
00006654                         10917mm         ENDM
00006654                         10918mm         PRINTANDEST D3  
00006654  3203                   10919mm         MOVE.W  D3, D1
00006656  E949                   10920mm         LSL     #$04, D1
00006658  E049                   10921mm         LSR     #$08, D1
0000665A  EA49                   10922mm         LSR     #$05, D1
0000665C  43F8 00C3              10923mm         LEA     OAN, A1     
00006660  103C 000E              10924mm         MOVE.B  #14,D0          
00006664  4E4F                   10925mm         TRAP    #15
00006666  103C 0003              10926mm         MOVE.B  #3,D0          
0000666A  4E4F                   10927mm         TRAP    #15
0000666C                         10928mm         ENDM
0000666C                         10929mm         PRINTRB
0000666C  43F8 00C7              10930mm         LEA     ORB, A1     
00006670  103C 000E              10931mm         MOVE.B  #14,D0          
00006674  4E4F                   10932mm         TRAP    #15
00006676                         10933mm         ENDM
00006676  6000 03D6              10934m         BRA     COMPLETE_852   
0000667A                         10935m ADRREGPREDECSRC_852: 
0000667A                         10936mm         PRINTPD  
0000667A  43F8 00CC              10937mm         LEA     OPREDEC, A1     
0000667E  103C 000E              10938mm         MOVE.B  #14,D0          
00006682  4E4F                   10939mm         TRAP    #15
00006684                         10940mm         ENDM
00006684                         10941mm         PRINTLB
00006684  43F8 00C5              10942mm         LEA     OLB, A1     
00006688  103C 000E              10943mm         MOVE.B  #14,D0          
0000668C  4E4F                   10944mm         TRAP    #15
0000668E                         10945mm         ENDM
0000668E                         10946mm         PRINTANSRC D3  
0000668E  3203                   10947mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006690  E149                   10948mm         LSL     #$08, D1
00006692  EB49                   10949mm         LSL     #$05, D1
00006694  E049                   10950mm         LSR     #$08, D1
00006696  EA49                   10951mm         LSR     #$05, D1
00006698  43F8 00C3              10952mm         LEA     OAN, A1     
0000669C  103C 000E              10953mm         MOVE.B  #14,D0          
000066A0  4E4F                   10954mm         TRAP    #15
000066A2  103C 0003              10955mm         MOVE.B  #3,D0          
000066A6  4E4F                   10956mm         TRAP    #15
000066A8                         10957mm         ENDM
000066A8                         10958mm         PRINTRB
000066A8  43F8 00C7              10959mm         LEA     ORB, A1     
000066AC  103C 000E              10960mm         MOVE.B  #14,D0          
000066B0  4E4F                   10961mm         TRAP    #15
000066B2                         10962mm         ENDM
000066B2  6000 039A              10963m         BRA     COMPLETE_852
000066B6                         10964m        
000066B6                         10965m ADRABSOLUTE_852:
000066B6  BC3C 0001              10966m         CMP.B   #$01, D6
000066BA  6600 0018              10967m         BNE     ADRABSOLUTEDST_852 
000066BE                         10968m         
000066BE  3A03                   10969m         MOVE.W  D3, D5
000066C0  0803 0002              10970m         BTST    #2, D3
000066C4  6600 0024              10971m         BNE     ADRIMMEDIATE_852
000066C8  0803 0000              10972m         BTST    #0, D3
000066CC  6600 0270              10973m         BNE     ADRABSOLUTEL_852
000066D0  6000 01DA              10974m         BRA     ADRABSOLUTEW_852
000066D4                         10975m ADRABSOLUTEDST_852:
000066D4  3A03                   10976m         MOVE.W  D3, D5
000066D6  0803 000B              10977m         BTST    #$B, D3
000066DA  6600 000E              10978m         BNE     ADRIMMEDIATE_852
000066DE  0803 0009              10979m         BTST    #$09, D3
000066E2  6600 025A              10980m         BNE     ADRABSOLUTEL_852
000066E6  6000 01C4              10981m         BRA     ADRABSOLUTEW_852
000066EA                         10982m ADRIMMEDIATE_852:
000066EA  BE3C 0001              10983m         CMP.B   #1, D7
000066EE  6700 009E              10984m         BEQ     ADRIMMEDIATEL_852
000066F2                         10985m ADRIMMEDIATEW_852:
000066F2  361A                   10986m         MOVE.W  (A2)+, D3
000066F4                         10987mm         PRINTHASH
000066F4  103C 0006              10988mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000066F8  323C 0023              10989mm         MOVE.W  #35, D1     ; AN = SIGN
000066FC  4E4F                   10990mm         TRAP    #15         ; OUTPUT = SIGN
000066FE                         10991mm         ENDM
000066FE                         10992mm         PRINTSIGN
000066FE  103C 0006              10993mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006702  323C 0024              10994mm         MOVE.W  #36, D1     ; AN = SIGN
00006706  4E4F                   10995mm         TRAP    #15         ; OUTPUT = SIGN
00006708                         10996mm         ENDM
00006708                         10997mm         ADROUT
00006708  3212                   10998mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000670A  E049                   10999mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000670C  E849                   11000mm         LSR.W   #4, D1      
0000670E                         11001mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000670E  0C01 0009              11002mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006712  6E00 000A              11003mmm         BGT     ALPHA_882
00006716  0601 0030              11004mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000671A  6000 0006              11005mmm         BRA     DONE_882
0000671E  0601 0037              11006mmm ALPHA_882: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006722  4E71                   11007mmm DONE_882: NOP
00006724                         11008mmm         ENDM
00006724  4E4F                   11009mm         TRAP    #15         ; EXECUTE OUTPUT
00006726                         11010mm         
00006726  3212                   11011mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006728  E949                   11012mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000672A  E049                   11013mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000672C  E849                   11014mm         LSR.W   #4, D1      
0000672E                         11015mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000672E  0C01 0009              11016mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006732  6E00 000A              11017mmm         BGT     ALPHA_883
00006736  0601 0030              11018mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000673A  6000 0006              11019mmm         BRA     DONE_883
0000673E  0601 0037              11020mmm ALPHA_883: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006742  4E71                   11021mmm DONE_883: NOP
00006744                         11022mmm         ENDM
00006744  4E4F                   11023mm         TRAP    #15         ; EXECUTE OUTPUT
00006746                         11024mm         
00006746  3212                   11025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006748  E149                   11026mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000674A  E049                   11027mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000674C  E849                   11028mm         LSR.W   #4, D1      
0000674E                         11029mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000674E  0C01 0009              11030mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006752  6E00 000A              11031mmm         BGT     ALPHA_884
00006756  0601 0030              11032mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000675A  6000 0006              11033mmm         BRA     DONE_884
0000675E  0601 0037              11034mmm ALPHA_884: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006762  4E71                   11035mmm DONE_884: NOP
00006764                         11036mmm         ENDM
00006764  4E4F                   11037mm         TRAP    #15         ; EXECUTE OUTPUT
00006766                         11038mm         
00006766  3212                   11039mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006768  E149                   11040mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000676A  E949                   11041mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000676C  E049                   11042mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000676E  E849                   11043mm         LSR.W   #4, D1      
00006770                         11044mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006770  0C01 0009              11045mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006774  6E00 000A              11046mmm         BGT     ALPHA_885
00006778  0601 0030              11047mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000677C  6000 0006              11048mmm         BRA     DONE_885
00006780  0601 0037              11049mmm ALPHA_885: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006784  4E71                   11050mmm DONE_885: NOP
00006786                         11051mmm         ENDM
00006786  4E4F                   11052mm         TRAP    #15         ; EXECUTE OUTPUT       
00006788                         11053mm         ENDM 
00006788  3605                   11054m         MOVE.W  D5, D3
0000678A  6000 02C2              11055m         BRA     COMPLETE_852
0000678E                         11056m ADRIMMEDIATEL_852:
0000678E  361A                   11057m         MOVE.W  (A2)+, D3
00006790                         11058mm         PRINTHASH
00006790  103C 0006              11059mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006794  323C 0023              11060mm         MOVE.W  #35, D1     ; AN = SIGN
00006798  4E4F                   11061mm         TRAP    #15         ; OUTPUT = SIGN
0000679A                         11062mm         ENDM
0000679A                         11063mm         PRINTSIGN
0000679A  103C 0006              11064mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000679E  323C 0024              11065mm         MOVE.W  #36, D1     ; AN = SIGN
000067A2  4E4F                   11066mm         TRAP    #15         ; OUTPUT = SIGN
000067A4                         11067mm         ENDM
000067A4                         11068mm         ADROUT 
000067A4  3212                   11069mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067A6  E049                   11070mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067A8  E849                   11071mm         LSR.W   #4, D1      
000067AA                         11072mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067AA  0C01 0009              11073mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067AE  6E00 000A              11074mmm         BGT     ALPHA_889
000067B2  0601 0030              11075mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067B6  6000 0006              11076mmm         BRA     DONE_889
000067BA  0601 0037              11077mmm ALPHA_889: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067BE  4E71                   11078mmm DONE_889: NOP
000067C0                         11079mmm         ENDM
000067C0  4E4F                   11080mm         TRAP    #15         ; EXECUTE OUTPUT
000067C2                         11081mm         
000067C2  3212                   11082mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067C4  E949                   11083mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000067C6  E049                   11084mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067C8  E849                   11085mm         LSR.W   #4, D1      
000067CA                         11086mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067CA  0C01 0009              11087mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067CE  6E00 000A              11088mmm         BGT     ALPHA_890
000067D2  0601 0030              11089mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067D6  6000 0006              11090mmm         BRA     DONE_890
000067DA  0601 0037              11091mmm ALPHA_890: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067DE  4E71                   11092mmm DONE_890: NOP
000067E0                         11093mmm         ENDM
000067E0  4E4F                   11094mm         TRAP    #15         ; EXECUTE OUTPUT
000067E2                         11095mm         
000067E2  3212                   11096mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067E4  E149                   11097mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067E6  E049                   11098mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067E8  E849                   11099mm         LSR.W   #4, D1      
000067EA                         11100mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067EA  0C01 0009              11101mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067EE  6E00 000A              11102mmm         BGT     ALPHA_891
000067F2  0601 0030              11103mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067F6  6000 0006              11104mmm         BRA     DONE_891
000067FA  0601 0037              11105mmm ALPHA_891: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067FE  4E71                   11106mmm DONE_891: NOP
00006800                         11107mmm         ENDM
00006800  4E4F                   11108mm         TRAP    #15         ; EXECUTE OUTPUT
00006802                         11109mm         
00006802  3212                   11110mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006804  E149                   11111mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006806  E949                   11112mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006808  E049                   11113mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000680A  E849                   11114mm         LSR.W   #4, D1      
0000680C                         11115mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000680C  0C01 0009              11116mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006810  6E00 000A              11117mmm         BGT     ALPHA_892
00006814  0601 0030              11118mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006818  6000 0006              11119mmm         BRA     DONE_892
0000681C  0601 0037              11120mmm ALPHA_892: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006820  4E71                   11121mmm DONE_892: NOP
00006822                         11122mmm         ENDM
00006822  4E4F                   11123mm         TRAP    #15         ; EXECUTE OUTPUT       
00006824                         11124mm         ENDM 
00006824  361A                   11125m         MOVE.W  (A2)+, D3
00006826                         11126mm         ADROUT
00006826  3212                   11127mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006828  E049                   11128mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000682A  E849                   11129mm         LSR.W   #4, D1      
0000682C                         11130mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000682C  0C01 0009              11131mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006830  6E00 000A              11132mmm         BGT     ALPHA_894
00006834  0601 0030              11133mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006838  6000 0006              11134mmm         BRA     DONE_894
0000683C  0601 0037              11135mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006840  4E71                   11136mmm DONE_894: NOP
00006842                         11137mmm         ENDM
00006842  4E4F                   11138mm         TRAP    #15         ; EXECUTE OUTPUT
00006844                         11139mm         
00006844  3212                   11140mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006846  E949                   11141mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006848  E049                   11142mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000684A  E849                   11143mm         LSR.W   #4, D1      
0000684C                         11144mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000684C  0C01 0009              11145mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006850  6E00 000A              11146mmm         BGT     ALPHA_895
00006854  0601 0030              11147mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006858  6000 0006              11148mmm         BRA     DONE_895
0000685C  0601 0037              11149mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006860  4E71                   11150mmm DONE_895: NOP
00006862                         11151mmm         ENDM
00006862  4E4F                   11152mm         TRAP    #15         ; EXECUTE OUTPUT
00006864                         11153mm         
00006864  3212                   11154mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006866  E149                   11155mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006868  E049                   11156mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000686A  E849                   11157mm         LSR.W   #4, D1      
0000686C                         11158mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000686C  0C01 0009              11159mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006870  6E00 000A              11160mmm         BGT     ALPHA_896
00006874  0601 0030              11161mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006878  6000 0006              11162mmm         BRA     DONE_896
0000687C  0601 0037              11163mmm ALPHA_896: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006880  4E71                   11164mmm DONE_896: NOP
00006882                         11165mmm         ENDM
00006882  4E4F                   11166mm         TRAP    #15         ; EXECUTE OUTPUT
00006884                         11167mm         
00006884  3212                   11168mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006886  E149                   11169mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006888  E949                   11170mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000688A  E049                   11171mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000688C  E849                   11172mm         LSR.W   #4, D1      
0000688E                         11173mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000688E  0C01 0009              11174mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006892  6E00 000A              11175mmm         BGT     ALPHA_897
00006896  0601 0030              11176mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000689A  6000 0006              11177mmm         BRA     DONE_897
0000689E  0601 0037              11178mmm ALPHA_897: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068A2  4E71                   11179mmm DONE_897: NOP
000068A4                         11180mmm         ENDM
000068A4  4E4F                   11181mm         TRAP    #15         ; EXECUTE OUTPUT       
000068A6                         11182mm         ENDM 
000068A6  3605                   11183m         MOVE.W  D5, D3
000068A8  6000 01A4              11184m         BRA     COMPLETE_852 
000068AC                         11185m ADRABSOLUTEW_852:     
000068AC  361A                   11186m         MOVE.W  (A2)+, D3
000068AE                         11187mm         PRINTSIGN
000068AE  103C 0006              11188mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000068B2  323C 0024              11189mm         MOVE.W  #36, D1     ; AN = SIGN
000068B6  4E4F                   11190mm         TRAP    #15         ; OUTPUT = SIGN
000068B8                         11191mm         ENDM
000068B8                         11192mm         ADROUT
000068B8  3212                   11193mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068BA  E049                   11194mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068BC  E849                   11195mm         LSR.W   #4, D1      
000068BE                         11196mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068BE  0C01 0009              11197mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068C2  6E00 000A              11198mmm         BGT     ALPHA_900
000068C6  0601 0030              11199mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068CA  6000 0006              11200mmm         BRA     DONE_900
000068CE  0601 0037              11201mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068D2  4E71                   11202mmm DONE_900: NOP
000068D4                         11203mmm         ENDM
000068D4  4E4F                   11204mm         TRAP    #15         ; EXECUTE OUTPUT
000068D6                         11205mm         
000068D6  3212                   11206mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068D8  E949                   11207mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000068DA  E049                   11208mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068DC  E849                   11209mm         LSR.W   #4, D1      
000068DE                         11210mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068DE  0C01 0009              11211mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068E2  6E00 000A              11212mmm         BGT     ALPHA_901
000068E6  0601 0030              11213mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068EA  6000 0006              11214mmm         BRA     DONE_901
000068EE  0601 0037              11215mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068F2  4E71                   11216mmm DONE_901: NOP
000068F4                         11217mmm         ENDM
000068F4  4E4F                   11218mm         TRAP    #15         ; EXECUTE OUTPUT
000068F6                         11219mm         
000068F6  3212                   11220mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068F8  E149                   11221mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068FA  E049                   11222mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068FC  E849                   11223mm         LSR.W   #4, D1      
000068FE                         11224mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068FE  0C01 0009              11225mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006902  6E00 000A              11226mmm         BGT     ALPHA_902
00006906  0601 0030              11227mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000690A  6000 0006              11228mmm         BRA     DONE_902
0000690E  0601 0037              11229mmm ALPHA_902: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006912  4E71                   11230mmm DONE_902: NOP
00006914                         11231mmm         ENDM
00006914  4E4F                   11232mm         TRAP    #15         ; EXECUTE OUTPUT
00006916                         11233mm         
00006916  3212                   11234mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006918  E149                   11235mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000691A  E949                   11236mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000691C  E049                   11237mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000691E  E849                   11238mm         LSR.W   #4, D1      
00006920                         11239mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006920  0C01 0009              11240mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006924  6E00 000A              11241mmm         BGT     ALPHA_903
00006928  0601 0030              11242mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000692C  6000 0006              11243mmm         BRA     DONE_903
00006930  0601 0037              11244mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006934  4E71                   11245mmm DONE_903: NOP
00006936                         11246mmm         ENDM
00006936  4E4F                   11247mm         TRAP    #15         ; EXECUTE OUTPUT       
00006938                         11248mm         ENDM 
00006938  3605                   11249m         MOVE.W  D5, D3
0000693A  6000 0112              11250m         BRA     COMPLETE_852  
0000693E                         11251m ADRABSOLUTEL_852:  
0000693E  361A                   11252m         MOVE.W  (A2)+, D3
00006940                         11253mm         PRINTSIGN
00006940  103C 0006              11254mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006944  323C 0024              11255mm         MOVE.W  #36, D1     ; AN = SIGN
00006948  4E4F                   11256mm         TRAP    #15         ; OUTPUT = SIGN
0000694A                         11257mm         ENDM
0000694A                         11258mm         ADROUT 
0000694A  3212                   11259mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000694C  E049                   11260mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000694E  E849                   11261mm         LSR.W   #4, D1      
00006950                         11262mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006950  0C01 0009              11263mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006954  6E00 000A              11264mmm         BGT     ALPHA_906
00006958  0601 0030              11265mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000695C  6000 0006              11266mmm         BRA     DONE_906
00006960  0601 0037              11267mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006964  4E71                   11268mmm DONE_906: NOP
00006966                         11269mmm         ENDM
00006966  4E4F                   11270mm         TRAP    #15         ; EXECUTE OUTPUT
00006968                         11271mm         
00006968  3212                   11272mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000696A  E949                   11273mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000696C  E049                   11274mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000696E  E849                   11275mm         LSR.W   #4, D1      
00006970                         11276mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006970  0C01 0009              11277mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006974  6E00 000A              11278mmm         BGT     ALPHA_907
00006978  0601 0030              11279mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000697C  6000 0006              11280mmm         BRA     DONE_907
00006980  0601 0037              11281mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006984  4E71                   11282mmm DONE_907: NOP
00006986                         11283mmm         ENDM
00006986  4E4F                   11284mm         TRAP    #15         ; EXECUTE OUTPUT
00006988                         11285mm         
00006988  3212                   11286mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000698A  E149                   11287mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000698C  E049                   11288mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000698E  E849                   11289mm         LSR.W   #4, D1      
00006990                         11290mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006990  0C01 0009              11291mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006994  6E00 000A              11292mmm         BGT     ALPHA_908
00006998  0601 0030              11293mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000699C  6000 0006              11294mmm         BRA     DONE_908
000069A0  0601 0037              11295mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069A4  4E71                   11296mmm DONE_908: NOP
000069A6                         11297mmm         ENDM
000069A6  4E4F                   11298mm         TRAP    #15         ; EXECUTE OUTPUT
000069A8                         11299mm         
000069A8  3212                   11300mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069AA  E149                   11301mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069AC  E949                   11302mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069AE  E049                   11303mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069B0  E849                   11304mm         LSR.W   #4, D1      
000069B2                         11305mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069B2  0C01 0009              11306mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069B6  6E00 000A              11307mmm         BGT     ALPHA_909
000069BA  0601 0030              11308mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069BE  6000 0006              11309mmm         BRA     DONE_909
000069C2  0601 0037              11310mmm ALPHA_909: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069C6  4E71                   11311mmm DONE_909: NOP
000069C8                         11312mmm         ENDM
000069C8  4E4F                   11313mm         TRAP    #15         ; EXECUTE OUTPUT       
000069CA                         11314mm         ENDM 
000069CA  361A                   11315m         MOVE.W  (A2)+, D3
000069CC                         11316mm         ADROUT
000069CC  3212                   11317mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069CE  E049                   11318mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069D0  E849                   11319mm         LSR.W   #4, D1      
000069D2                         11320mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069D2  0C01 0009              11321mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069D6  6E00 000A              11322mmm         BGT     ALPHA_911
000069DA  0601 0030              11323mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069DE  6000 0006              11324mmm         BRA     DONE_911
000069E2  0601 0037              11325mmm ALPHA_911: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069E6  4E71                   11326mmm DONE_911: NOP
000069E8                         11327mmm         ENDM
000069E8  4E4F                   11328mm         TRAP    #15         ; EXECUTE OUTPUT
000069EA                         11329mm         
000069EA  3212                   11330mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069EC  E949                   11331mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000069EE  E049                   11332mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069F0  E849                   11333mm         LSR.W   #4, D1      
000069F2                         11334mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069F2  0C01 0009              11335mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069F6  6E00 000A              11336mmm         BGT     ALPHA_912
000069FA  0601 0030              11337mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069FE  6000 0006              11338mmm         BRA     DONE_912
00006A02  0601 0037              11339mmm ALPHA_912: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A06  4E71                   11340mmm DONE_912: NOP
00006A08                         11341mmm         ENDM
00006A08  4E4F                   11342mm         TRAP    #15         ; EXECUTE OUTPUT
00006A0A                         11343mm         
00006A0A  3212                   11344mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A0C  E149                   11345mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A0E  E049                   11346mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A10  E849                   11347mm         LSR.W   #4, D1      
00006A12                         11348mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A12  0C01 0009              11349mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A16  6E00 000A              11350mmm         BGT     ALPHA_913
00006A1A  0601 0030              11351mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A1E  6000 0006              11352mmm         BRA     DONE_913
00006A22  0601 0037              11353mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A26  4E71                   11354mmm DONE_913: NOP
00006A28                         11355mmm         ENDM
00006A28  4E4F                   11356mm         TRAP    #15         ; EXECUTE OUTPUT
00006A2A                         11357mm         
00006A2A  3212                   11358mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A2C  E149                   11359mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A2E  E949                   11360mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A30  E049                   11361mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A32  E849                   11362mm         LSR.W   #4, D1      
00006A34                         11363mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A34  0C01 0009              11364mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A38  6E00 000A              11365mmm         BGT     ALPHA_914
00006A3C  0601 0030              11366mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A40  6000 0006              11367mmm         BRA     DONE_914
00006A44  0601 0037              11368mmm ALPHA_914: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A48  4E71                   11369mmm DONE_914: NOP
00006A4A                         11370mmm         ENDM
00006A4A  4E4F                   11371mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A4C                         11372mm         ENDM 
00006A4C  3605                   11373m         MOVE.W  D5, D3
00006A4E                         11374m 
00006A4E                         11375m COMPLETE_852:  ; OPCODE HAS BEEN VERIFIED
00006A4E                         11376m         ENDM
00006A4E  4E75                   11377          RTS                 ; Return from decodeJSR subroutine
00006A50                         11378  
00006A50                         11379  
00006A50                         11380  ; ------------------------------------------------------------
00006A50                         11381  ; 15. "decodeRTS" subroutine
00006A50                         11382  ; AUTHOR
00006A50                         11383  ;
00006A50                         11384  ; TODO: DESCRIPTION
00006A50                         11385  ; ------------------------------------------------------------
00006A50                         11386  decodeRTS:
00006A50                         11387m         verifyOpcode    pRTS, (A2)
00006A50  43F8 0228              11388m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006A54  3612                   11389m         MOVE.W  (A2), D3      ; INPUT VALUE
00006A56  123C 000F              11390m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006A5A                         11391m         
00006A5A                         11392m LOOP_915: 
00006A5A  0C11 0030              11393m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006A5E  6700 000E              11394m         BEQ     CHECKFOR0_915
00006A62  0C11 0031              11395m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006A66  6700 0010              11396m         BEQ     CHECKFOR1_915
00006A6A  6000 0012              11397m         BRA     NEXT_915      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006A6E                         11398m         
00006A6E                         11399m CHECKFOR0_915: 
00006A6E  0303                   11400m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006A70  6600 0112              11401m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006A74  6000 0008              11402m         BRA     NEXT_915
00006A78                         11403m 
00006A78                         11404m CHECKFOR1_915:
00006A78  0303                   11405m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006A7A  6700 0108              11406m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006A7E                         11407m 
00006A7E                         11408m NEXT_915: 
00006A7E  B23C 0000              11409m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006A82  6700 0008              11410m         BEQ     COMPLETE_915  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006A86  5301                   11411m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006A88  1819                   11412m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006A8A  60CE                   11413m         BRA     LOOP_915      ; BEGIN LOOP AGAIN
00006A8C                         11414m 
00006A8C                         11415m COMPLETE_915:  ; OPCODE HAS BEEN VERIFIED
00006A8C                         11416m         ENDM
00006A8C  43F8 00AD              11417          LEA     oRTS, A1     
00006A90  103C 000E              11418          MOVE.B  #14,D0          
00006A94  4E4F                   11419          TRAP    #15
00006A96  4E75                   11420          RTS                 ; Return from decodeRTS subroutine
00006A98                         11421  
00006A98                         11422  
00006A98                         11423  ; ------------------------------------------------------------
00006A98                         11424  ; 16. "decodeBRA" subroutine
00006A98                         11425  ; AUTHOR
00006A98                         11426  ;
00006A98                         11427  ; TODO: DESCRIPTION
00006A98                         11428  ; ------------------------------------------------------------
00006A98                         11429  decodeBRA:
00006A98                         11430m         verifyOpcode    pBRA, (A2)
00006A98  43F8 0239              11431m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006A9C  3612                   11432m         MOVE.W  (A2), D3      ; INPUT VALUE
00006A9E  123C 000F              11433m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006AA2                         11434m         
00006AA2                         11435m LOOP_916: 
00006AA2  0C11 0030              11436m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006AA6  6700 000E              11437m         BEQ     CHECKFOR0_916
00006AAA  0C11 0031              11438m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006AAE  6700 0010              11439m         BEQ     CHECKFOR1_916
00006AB2  6000 0012              11440m         BRA     NEXT_916      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006AB6                         11441m         
00006AB6                         11442m CHECKFOR0_916: 
00006AB6  0303                   11443m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006AB8  6600 00CA              11444m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006ABC  6000 0008              11445m         BRA     NEXT_916
00006AC0                         11446m 
00006AC0                         11447m CHECKFOR1_916:
00006AC0  0303                   11448m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006AC2  6700 00C0              11449m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006AC6                         11450m 
00006AC6                         11451m NEXT_916: 
00006AC6  B23C 0000              11452m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006ACA  6700 0008              11453m         BEQ     COMPLETE_916  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006ACE  5301                   11454m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006AD0  1819                   11455m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006AD2  60CE                   11456m         BRA     LOOP_916      ; BEGIN LOOP AGAIN
00006AD4                         11457m 
00006AD4                         11458m COMPLETE_916:  ; OPCODE HAS BEEN VERIFIED
00006AD4                         11459m         ENDM
00006AD4  43F8 00B1              11460          LEA     oBRA, A1     
00006AD8  103C 000E              11461          MOVE.B  #14,D0          
00006ADC  4E4F                   11462          TRAP    #15
00006ADE                         11463m         space
00006ADE  43F8 00D2              11464m         LEA     OBLANK, A1
00006AE2  103C 000E              11465m         MOVE.B  #14,D0          
00006AE6  4E4F                   11466m         TRAP    #15
00006AE8                         11467m         ENDM
00006AE8                         11468m         printSign
00006AE8  103C 0006              11469m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006AEC  323C 0024              11470m         MOVE.W  #36, D1     ; AN = SIGN
00006AF0  4E4F                   11471m         TRAP    #15         ; OUTPUT = SIGN
00006AF2                         11472m         ENDM
00006AF2                         11473m         printBranch     (A2)
00006AF2  3612                   11474m         MOVE.W (A2), D3
00006AF4  364A                   11475m         MOVEA   A2, A3
00006AF6  280B                   11476m         MOVE.L  A3, D4
00006AF8  4241                   11477m         CLR     D1
00006AFA  D203                   11478m         ADD.B   D3, D1
00006AFC  103C 0003              11479m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006B00  4E4F                   11480m         TRAP    #15
00006B02                         11481m         
00006B02                         11482mm         ADROUT
00006B02  3212                   11483mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B04  E049                   11484mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B06  E849                   11485mm         LSR.W   #4, D1      
00006B08                         11486mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B08  0C01 0009              11487mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B0C  6E00 000A              11488mmm         BGT     ALPHA_921
00006B10  0601 0030              11489mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B14  6000 0006              11490mmm         BRA     DONE_921
00006B18  0601 0037              11491mmm ALPHA_921: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B1C  4E71                   11492mmm DONE_921: NOP
00006B1E                         11493mmm         ENDM
00006B1E  4E4F                   11494mm         TRAP    #15         ; EXECUTE OUTPUT
00006B20                         11495mm         
00006B20  3212                   11496mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B22  E949                   11497mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006B24  E049                   11498mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B26  E849                   11499mm         LSR.W   #4, D1      
00006B28                         11500mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B28  0C01 0009              11501mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B2C  6E00 000A              11502mmm         BGT     ALPHA_922
00006B30  0601 0030              11503mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B34  6000 0006              11504mmm         BRA     DONE_922
00006B38  0601 0037              11505mmm ALPHA_922: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B3C  4E71                   11506mmm DONE_922: NOP
00006B3E                         11507mmm         ENDM
00006B3E  4E4F                   11508mm         TRAP    #15         ; EXECUTE OUTPUT
00006B40                         11509mm         
00006B40  3212                   11510mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B42  E149                   11511mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B44  E049                   11512mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B46  E849                   11513mm         LSR.W   #4, D1      
00006B48                         11514mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B48  0C01 0009              11515mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B4C  6E00 000A              11516mmm         BGT     ALPHA_923
00006B50  0601 0030              11517mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B54  6000 0006              11518mmm         BRA     DONE_923
00006B58  0601 0037              11519mmm ALPHA_923: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B5C  4E71                   11520mmm DONE_923: NOP
00006B5E                         11521mmm         ENDM
00006B5E  4E4F                   11522mm         TRAP    #15         ; EXECUTE OUTPUT
00006B60                         11523mm         
00006B60  3212                   11524mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B62  E149                   11525mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B64  E949                   11526mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006B66  E049                   11527mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B68  E849                   11528mm         LSR.W   #4, D1      
00006B6A                         11529mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B6A  0C01 0009              11530mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B6E  6E00 000A              11531mmm         BGT     ALPHA_924
00006B72  0601 0030              11532mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B76  6000 0006              11533mmm         BRA     DONE_924
00006B7A  0601 0037              11534mmm ALPHA_924: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B7E  4E71                   11535mmm DONE_924: NOP
00006B80                         11536mmm         ENDM
00006B80  4E4F                   11537mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B82                         11538mm         ENDM 
00006B82                         11539m         ENDM        
00006B82  4E75                   11540          RTS                 ; Return from decodeBRA subroutine
00006B84                         11541  
00006B84                         11542  
00006B84                         11543  
00006B84                         11544  
00006B84                         11545  ; ========================================================================
00006B84                         11546  ; Generic Helper Functions
00006B84                         11547  ; 
00006B84                         11548  ; Set of subroutines which do various tasks which are repeated frequently.
00006B84                         11549  ; Each helper function should be commented with required input and output.
00006B84                         11550  ; 
00006B84                         11551  ; If input is required, request through D0, D1, etc
00006B84                         11552  ; Return using D0
00006B84                         11553  ; ========================================================================
00006B84                         11554  
00006B84                         11555  ; ------------------------------------------------------------
00006B84                         11556  ; outputData
00006B84                         11557  ; Jonathan
00006B84                         11558  ;
00006B84                         11559  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00006B84                         11560  ; ------------------------------------------------------------
00006B84                         11561  outputData:
00006B84  103C 0006              11562          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00006B88  323C 003D              11563          MOVE.W  #61, D1     ; An = sign
00006B8C  4E4F                   11564          TRAP    #15         ; Output = sign
00006B8E                         11565          
00006B8E  3212                   11566          MOVE.W  (A2), D1    ; Move A2 into D1
00006B90  E049                   11567          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B92  E849                   11568          LSR.W   #4, D1      
00006B94                         11569m         ConvertHtoA D1      ; Convert D1 to a character
00006B94  0C01 0009              11570m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B98  6E00 000A              11571m         BGT     ALPHA_925
00006B9C  0601 0030              11572m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BA0  6000 0006              11573m         BRA     DONE_925
00006BA4  0601 0037              11574m ALPHA_925: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BA8  4E71                   11575m DONE_925: NOP
00006BAA                         11576m         ENDM
00006BAA  4E4F                   11577          TRAP    #15         ; Execute output
00006BAC                         11578          
00006BAC  3212                   11579          MOVE.W  (A2), D1    ; Move A2 into D1
00006BAE  E949                   11580          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00006BB0  E049                   11581          LSR.W   #8, D1      ; Get the first hex digit of D1
00006BB2  E849                   11582          LSR.W   #4, D1      
00006BB4                         11583m         ConvertHtoA D1      ; Convert D1 to a character
00006BB4  0C01 0009              11584m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BB8  6E00 000A              11585m         BGT     ALPHA_926
00006BBC  0601 0030              11586m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BC0  6000 0006              11587m         BRA     DONE_926
00006BC4  0601 0037              11588m ALPHA_926: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BC8  4E71                   11589m DONE_926: NOP
00006BCA                         11590m         ENDM
00006BCA  4E4F                   11591          TRAP    #15         ; Execute output
00006BCC                         11592          
00006BCC  3212                   11593          MOVE.W  (A2), D1    ; Move A2 into D1
00006BCE  E149                   11594          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006BD0  E049                   11595          LSR.W   #8, D1      ; Get the first hex digit of D1
00006BD2  E849                   11596          LSR.W   #4, D1      
00006BD4                         11597m         ConvertHtoA D1      ; Convert D1 to a character
00006BD4  0C01 0009              11598m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BD8  6E00 000A              11599m         BGT     ALPHA_927
00006BDC  0601 0030              11600m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006BE0  6000 0006              11601m         BRA     DONE_927
00006BE4  0601 0037              11602m ALPHA_927: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006BE8  4E71                   11603m DONE_927: NOP
00006BEA                         11604m         ENDM
00006BEA  4E4F                   11605          TRAP    #15         ; Execute output
00006BEC                         11606          
00006BEC  3212                   11607          MOVE.W  (A2), D1    ; Move A2 into D1
00006BEE  E149                   11608          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006BF0  E949                   11609          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00006BF2  E049                   11610          LSR.W   #8, D1      ; Get the first hex digit of D1
00006BF4  E849                   11611          LSR.W   #4, D1      
00006BF6                         11612m         ConvertHtoA D1      ; Convert D1 to a character
00006BF6  0C01 0009              11613m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006BFA  6E00 000A              11614m         BGT     ALPHA_928
00006BFE  0601 0030              11615m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C02  6000 0006              11616m         BRA     DONE_928
00006C06  0601 0037              11617m ALPHA_928: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C0A  4E71                   11618m DONE_928: NOP
00006C0C                         11619m         ENDM
00006C0C  4E4F                   11620          TRAP    #15         ; Execute output
00006C0E  4E75                   11621          RTS
00006C10                         11622  
00006C10                         11623  
00006C10                         11624  
00006C10                         11625  
00006C10                         11626  
00006C10                         11627  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00006C10                         11628                              ; End of Code
00006C10                         11629          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_155  22AE
ADRABSOLUTEDST_19   158A
ADRABSOLUTEDST_219  2882
ADRABSOLUTEDST_291  2FB0
ADRABSOLUTEDST_355  3584
ADRABSOLUTEDST_423  3BFC
ADRABSOLUTEDST_491  4274
ADRABSOLUTEDST_558  48B8
ADRABSOLUTEDST_630  4FE6
ADRABSOLUTEDST_694  55BA
ADRABSOLUTEDST_762  5C2C
ADRABSOLUTEDST_84   1B64
ADRABSOLUTEDST_852  66D4
ADRABSOLUTEL_155    2518
ADRABSOLUTEL_19     17F4
ADRABSOLUTEL_219    2AEC
ADRABSOLUTEL_291    321A
ADRABSOLUTEL_355    37EE
ADRABSOLUTEL_423    3E66
ADRABSOLUTEL_491    44DE
ADRABSOLUTEL_558    4B22
ADRABSOLUTEL_630    5250
ADRABSOLUTEL_694    5824
ADRABSOLUTEL_762    5E96
ADRABSOLUTEL_84     1DCE
ADRABSOLUTEL_852    693E
ADRABSOLUTEW_155    2486
ADRABSOLUTEW_19     1762
ADRABSOLUTEW_219    2A5A
ADRABSOLUTEW_291    3188
ADRABSOLUTEW_355    375C
ADRABSOLUTEW_423    3DD4
ADRABSOLUTEW_491    444C
ADRABSOLUTEW_558    4A90
ADRABSOLUTEW_630    51BE
ADRABSOLUTEW_694    5792
ADRABSOLUTEW_762    5E04
ADRABSOLUTEW_84     1D3C
ADRABSOLUTEW_852    68AC
ADRABSOLUTE_155     2290
ADRABSOLUTE_19      156C
ADRABSOLUTE_219     2864
ADRABSOLUTE_291     2F92
ADRABSOLUTE_355     3566
ADRABSOLUTE_423     3BDE
ADRABSOLUTE_491     4256
ADRABSOLUTE_558     489A
ADRABSOLUTE_630     4FC8
ADRABSOLUTE_694     559C
ADRABSOLUTE_762     5C0E
ADRABSOLUTE_84      1B46
ADRABSOLUTE_852     66B6
ADRDEST_154         2066
ADRDEST_18          1342
ADRDEST_218         263A
ADRDEST_290         2D68
ADRDEST_354         333C
ADRDEST_422         39B4
ADRDEST_490         402C
ADRDEST_557         4670
ADRDEST_629         4D9E
ADRDEST_693         5372
ADRDEST_761         59E4
ADRDEST_83          191C
ADRDEST_851         648C
ADRIMMEDIATEL_155   2368
ADRIMMEDIATEL_19    1644
ADRIMMEDIATEL_219   293C
ADRIMMEDIATEL_291   306A
ADRIMMEDIATEL_355   363E
ADRIMMEDIATEL_423   3CB6
ADRIMMEDIATEL_491   432E
ADRIMMEDIATEL_558   4972
ADRIMMEDIATEL_630   50A0
ADRIMMEDIATEL_694   5674
ADRIMMEDIATEL_762   5CE6
ADRIMMEDIATEL_84    1C1E
ADRIMMEDIATEL_852   678E
ADRIMMEDIATEW_155   22CC
ADRIMMEDIATEW_19    15A8
ADRIMMEDIATEW_219   28A0
ADRIMMEDIATEW_291   2FCE
ADRIMMEDIATEW_355   35A2
ADRIMMEDIATEW_423   3C1A
ADRIMMEDIATEW_491   4292
ADRIMMEDIATEW_558   48D6
ADRIMMEDIATEW_630   5004
ADRIMMEDIATEW_694   55D8
ADRIMMEDIATEW_762   5C4A
ADRIMMEDIATEW_84    1B82
ADRIMMEDIATEW_852   66F2
ADRIMMEDIATE_155    22C4
ADRIMMEDIATE_19     15A0
ADRIMMEDIATE_219    2898
ADRIMMEDIATE_291    2FC6
ADRIMMEDIATE_355    359A
ADRIMMEDIATE_423    3C12
ADRIMMEDIATE_491    428A
ADRIMMEDIATE_558    48CE
ADRIMMEDIATE_630    4FFC
ADRIMMEDIATE_694    55D0
ADRIMMEDIATE_762    5C42
ADRIMMEDIATE_84     1B7A
ADRIMMEDIATE_852    66EA
ADROUT              580
ADRREGDIRECTDEST_155  20F0
ADRREGDIRECTDEST_19  13CC
ADRREGDIRECTDEST_219  26C4
ADRREGDIRECTDEST_291  2DF2
ADRREGDIRECTDEST_355  33C6
ADRREGDIRECTDEST_423  3A3E
ADRREGDIRECTDEST_491  40B6
ADRREGDIRECTDEST_558  46FA
ADRREGDIRECTDEST_630  4E28
ADRREGDIRECTDEST_694  53FC
ADRREGDIRECTDEST_762  5A6E
ADRREGDIRECTDEST_84  19A6
ADRREGDIRECTDEST_852  6516
ADRREGDIRECTSRC_155  210C
ADRREGDIRECTSRC_19  13E8
ADRREGDIRECTSRC_219  26E0
ADRREGDIRECTSRC_291  2E0E
ADRREGDIRECTSRC_355  33E2
ADRREGDIRECTSRC_423  3A5A
ADRREGDIRECTSRC_491  40D2
ADRREGDIRECTSRC_558  4716
ADRREGDIRECTSRC_630  4E44
ADRREGDIRECTSRC_694  5418
ADRREGDIRECTSRC_762  5A8A
ADRREGDIRECTSRC_84  19C2
ADRREGDIRECTSRC_852  6532
ADRREGDIRECT_155    20E8
ADRREGDIRECT_19     13C4
ADRREGDIRECT_219    26BC
ADRREGDIRECT_291    2DEA
ADRREGDIRECT_355    33BE
ADRREGDIRECT_423    3A36
ADRREGDIRECT_491    40AE
ADRREGDIRECT_558    46F2
ADRREGDIRECT_630    4E20
ADRREGDIRECT_694    53F4
ADRREGDIRECT_762    5A66
ADRREGDIRECT_84     199E
ADRREGDIRECT_852    650E
ADRREGINDIRECTDEST_155  2132
ADRREGINDIRECTDEST_19  140E
ADRREGINDIRECTDEST_219  2706
ADRREGINDIRECTDEST_291  2E34
ADRREGINDIRECTDEST_355  3408
ADRREGINDIRECTDEST_423  3A80
ADRREGINDIRECTDEST_491  40F8
ADRREGINDIRECTDEST_558  473C
ADRREGINDIRECTDEST_630  4E6A
ADRREGINDIRECTDEST_694  543E
ADRREGINDIRECTDEST_762  5AB0
ADRREGINDIRECTDEST_84  19E8
ADRREGINDIRECTDEST_852  6558
ADRREGINDIRECTSRC_155  2162
ADRREGINDIRECTSRC_19  143E
ADRREGINDIRECTSRC_219  2736
ADRREGINDIRECTSRC_291  2E64
ADRREGINDIRECTSRC_355  3438
ADRREGINDIRECTSRC_423  3AB0
ADRREGINDIRECTSRC_491  4128
ADRREGINDIRECTSRC_558  476C
ADRREGINDIRECTSRC_630  4E9A
ADRREGINDIRECTSRC_694  546E
ADRREGINDIRECTSRC_762  5AE0
ADRREGINDIRECTSRC_84  1A18
ADRREGINDIRECTSRC_852  6588
ADRREGINDIRECT_155  212A
ADRREGINDIRECT_19   1406
ADRREGINDIRECT_219  26FE
ADRREGINDIRECT_291  2E2C
ADRREGINDIRECT_355  3400
ADRREGINDIRECT_423  3A78
ADRREGINDIRECT_491  40F0
ADRREGINDIRECT_558  4734
ADRREGINDIRECT_630  4E62
ADRREGINDIRECT_694  5436
ADRREGINDIRECT_762  5AA8
ADRREGINDIRECT_84   19E0
ADRREGINDIRECT_852  6550
ADRREGPOSTINCDEST_155  219C
ADRREGPOSTINCDEST_19  1478
ADRREGPOSTINCDEST_219  2770
ADRREGPOSTINCDEST_291  2E9E
ADRREGPOSTINCDEST_355  3472
ADRREGPOSTINCDEST_423  3AEA
ADRREGPOSTINCDEST_491  4162
ADRREGPOSTINCDEST_558  47A6
ADRREGPOSTINCDEST_630  4ED4
ADRREGPOSTINCDEST_694  54A8
ADRREGPOSTINCDEST_762  5B1A
ADRREGPOSTINCDEST_84  1A52
ADRREGPOSTINCDEST_852  65C2
ADRREGPOSTINCSRC_155  21D6
ADRREGPOSTINCSRC_19  14B2
ADRREGPOSTINCSRC_219  27AA
ADRREGPOSTINCSRC_291  2ED8
ADRREGPOSTINCSRC_355  34AC
ADRREGPOSTINCSRC_423  3B24
ADRREGPOSTINCSRC_491  419C
ADRREGPOSTINCSRC_558  47E0
ADRREGPOSTINCSRC_630  4F0E
ADRREGPOSTINCSRC_694  54E2
ADRREGPOSTINCSRC_762  5B54
ADRREGPOSTINCSRC_84  1A8C
ADRREGPOSTINCSRC_852  65FC
ADRREGPOSTINC_155   2194
ADRREGPOSTINC_19    1470
ADRREGPOSTINC_219   2768
ADRREGPOSTINC_291   2E96
ADRREGPOSTINC_355   346A
ADRREGPOSTINC_423   3AE2
ADRREGPOSTINC_491   415A
ADRREGPOSTINC_558   479E
ADRREGPOSTINC_630   4ECC
ADRREGPOSTINC_694   54A0
ADRREGPOSTINC_762   5B12
ADRREGPOSTINC_84    1A4A
ADRREGPOSTINC_852   65BA
ADRREGPREDECDEST_155  221A
ADRREGPREDECDEST_19  14F6
ADRREGPREDECDEST_219  27EE
ADRREGPREDECDEST_291  2F1C
ADRREGPREDECDEST_355  34F0
ADRREGPREDECDEST_423  3B68
ADRREGPREDECDEST_491  41E0
ADRREGPREDECDEST_558  4824
ADRREGPREDECDEST_630  4F52
ADRREGPREDECDEST_694  5526
ADRREGPREDECDEST_762  5B98
ADRREGPREDECDEST_84  1AD0
ADRREGPREDECDEST_852  6640
ADRREGPREDECSRC_155  2254
ADRREGPREDECSRC_19  1530
ADRREGPREDECSRC_219  2828
ADRREGPREDECSRC_291  2F56
ADRREGPREDECSRC_355  352A
ADRREGPREDECSRC_423  3BA2
ADRREGPREDECSRC_491  421A
ADRREGPREDECSRC_558  485E
ADRREGPREDECSRC_630  4F8C
ADRREGPREDECSRC_694  5560
ADRREGPREDECSRC_762  5BD2
ADRREGPREDECSRC_84  1B0A
ADRREGPREDECSRC_852  667A
ADRREGPREDEC_155    2212
ADRREGPREDEC_19     14EE
ADRREGPREDEC_219    27E6
ADRREGPREDEC_291    2F14
ADRREGPREDEC_355    34E8
ADRREGPREDEC_423    3B60
ADRREGPREDEC_491    41D8
ADRREGPREDEC_558    481C
ADRREGPREDEC_630    4F4A
ADRREGPREDEC_694    551E
ADRREGPREDEC_762    5B90
ADRREGPREDEC_84     1AC8
ADRREGPREDEC_852    6638
ADRSOURCE_154       2070
ADRSOURCE_18        134C
ADRSOURCE_218       2644
ADRSOURCE_290       2D72
ADRSOURCE_354       3346
ADRSOURCE_422       39BE
ADRSOURCE_490       4036
ADRSOURCE_557       467A
ADRSOURCE_629       4DA8
ADRSOURCE_693       537C
ADRSOURCE_761       59EE
ADRSOURCE_83        1926
ADRSOURCE_851       6496
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_114           1BAE
ALPHA_115           1BCE
ALPHA_116           1BEE
ALPHA_117           1C10
ALPHA_121           1C4A
ALPHA_122           1C6A
ALPHA_123           1C8A
ALPHA_124           1CAC
ALPHA_126           1CCC
ALPHA_127           1CEC
ALPHA_128           1D0C
ALPHA_129           1D2E
ALPHA_132           1D5E
ALPHA_133           1D7E
ALPHA_134           1D9E
ALPHA_135           1DC0
ALPHA_138           1DF0
ALPHA_139           1E10
ALPHA_140           1E30
ALPHA_141           1E52
ALPHA_143           1E72
ALPHA_144           1E92
ALPHA_145           1EB2
ALPHA_146           1ED4
ALPHA_185           22F8
ALPHA_186           2318
ALPHA_187           2338
ALPHA_188           235A
ALPHA_192           2394
ALPHA_193           23B4
ALPHA_194           23D4
ALPHA_195           23F6
ALPHA_197           2416
ALPHA_198           2436
ALPHA_199           2456
ALPHA_2             1020
ALPHA_200           2478
ALPHA_203           24A8
ALPHA_204           24C8
ALPHA_205           24E8
ALPHA_206           250A
ALPHA_209           253A
ALPHA_210           255A
ALPHA_211           257A
ALPHA_212           259C
ALPHA_214           25BC
ALPHA_215           25DC
ALPHA_216           25FC
ALPHA_217           261E
ALPHA_249           28CC
ALPHA_250           28EC
ALPHA_251           290C
ALPHA_252           292E
ALPHA_256           2968
ALPHA_257           2988
ALPHA_258           29A8
ALPHA_259           29CA
ALPHA_261           29EA
ALPHA_262           2A0A
ALPHA_263           2A2A
ALPHA_264           2A4C
ALPHA_267           2A7C
ALPHA_268           2A9C
ALPHA_269           2ABC
ALPHA_270           2ADE
ALPHA_273           2B0E
ALPHA_274           2B2E
ALPHA_275           2B4E
ALPHA_276           2B70
ALPHA_278           2B90
ALPHA_279           2BB0
ALPHA_280           2BD0
ALPHA_281           2BF2
ALPHA_3             1042
ALPHA_321           2FFA
ALPHA_322           301A
ALPHA_323           303A
ALPHA_324           305C
ALPHA_328           3096
ALPHA_329           30B6
ALPHA_330           30D6
ALPHA_331           30F8
ALPHA_333           3118
ALPHA_334           3138
ALPHA_335           3158
ALPHA_336           317A
ALPHA_339           31AA
ALPHA_340           31CA
ALPHA_341           31EA
ALPHA_342           320C
ALPHA_345           323C
ALPHA_346           325C
ALPHA_347           327C
ALPHA_348           329E
ALPHA_350           32BE
ALPHA_351           32DE
ALPHA_352           32FE
ALPHA_353           3320
ALPHA_385           35CE
ALPHA_386           35EE
ALPHA_387           360E
ALPHA_388           3630
ALPHA_392           366A
ALPHA_393           368A
ALPHA_394           36AA
ALPHA_395           36CC
ALPHA_397           36EC
ALPHA_398           370C
ALPHA_399           372C
ALPHA_4             1062
ALPHA_400           374E
ALPHA_403           377E
ALPHA_404           379E
ALPHA_405           37BE
ALPHA_406           37E0
ALPHA_409           3810
ALPHA_410           3830
ALPHA_411           3850
ALPHA_412           3872
ALPHA_414           3892
ALPHA_415           38B2
ALPHA_416           38D2
ALPHA_417           38F4
ALPHA_453           3C46
ALPHA_454           3C66
ALPHA_455           3C86
ALPHA_456           3CA8
ALPHA_460           3CE2
ALPHA_461           3D02
ALPHA_462           3D22
ALPHA_463           3D44
ALPHA_465           3D64
ALPHA_466           3D84
ALPHA_467           3DA4
ALPHA_468           3DC6
ALPHA_471           3DF6
ALPHA_472           3E16
ALPHA_473           3E36
ALPHA_474           3E58
ALPHA_477           3E88
ALPHA_478           3EA8
ALPHA_479           3EC8
ALPHA_480           3EEA
ALPHA_482           3F0A
ALPHA_483           3F2A
ALPHA_484           3F4A
ALPHA_485           3F6C
ALPHA_49            15D4
ALPHA_5             1082
ALPHA_50            15F4
ALPHA_51            1614
ALPHA_52            1636
ALPHA_521           42BE
ALPHA_522           42DE
ALPHA_523           42FE
ALPHA_524           4320
ALPHA_528           435A
ALPHA_529           437A
ALPHA_530           439A
ALPHA_531           43BC
ALPHA_533           43DC
ALPHA_534           43FC
ALPHA_535           441C
ALPHA_536           443E
ALPHA_539           446E
ALPHA_540           448E
ALPHA_541           44AE
ALPHA_542           44D0
ALPHA_545           4500
ALPHA_546           4520
ALPHA_547           4540
ALPHA_548           4562
ALPHA_550           4582
ALPHA_551           45A2
ALPHA_552           45C2
ALPHA_553           45E4
ALPHA_56            1670
ALPHA_57            1690
ALPHA_58            16B0
ALPHA_588           4902
ALPHA_589           4922
ALPHA_59            16D2
ALPHA_590           4942
ALPHA_591           4964
ALPHA_595           499E
ALPHA_596           49BE
ALPHA_597           49DE
ALPHA_598           4A00
ALPHA_600           4A20
ALPHA_601           4A40
ALPHA_602           4A60
ALPHA_603           4A82
ALPHA_606           4AB2
ALPHA_607           4AD2
ALPHA_608           4AF2
ALPHA_609           4B14
ALPHA_61            16F2
ALPHA_612           4B44
ALPHA_613           4B64
ALPHA_614           4B84
ALPHA_615           4BA6
ALPHA_617           4BC6
ALPHA_618           4BE6
ALPHA_619           4C06
ALPHA_62            1712
ALPHA_620           4C28
ALPHA_63            1732
ALPHA_64            1754
ALPHA_660           5030
ALPHA_661           5050
ALPHA_662           5070
ALPHA_663           5092
ALPHA_667           50CC
ALPHA_668           50EC
ALPHA_669           510C
ALPHA_67            1784
ALPHA_670           512E
ALPHA_672           514E
ALPHA_673           516E
ALPHA_674           518E
ALPHA_675           51B0
ALPHA_678           51E0
ALPHA_679           5200
ALPHA_68            17A4
ALPHA_680           5220
ALPHA_681           5242
ALPHA_684           5272
ALPHA_685           5292
ALPHA_686           52B2
ALPHA_687           52D4
ALPHA_689           52F4
ALPHA_69            17C4
ALPHA_690           5314
ALPHA_691           5334
ALPHA_692           5356
ALPHA_70            17E6
ALPHA_724           5604
ALPHA_725           5624
ALPHA_726           5644
ALPHA_727           5666
ALPHA_73            1816
ALPHA_731           56A0
ALPHA_732           56C0
ALPHA_733           56E0
ALPHA_734           5702
ALPHA_736           5722
ALPHA_737           5742
ALPHA_738           5762
ALPHA_739           5784
ALPHA_74            1836
ALPHA_742           57B4
ALPHA_743           57D4
ALPHA_744           57F4
ALPHA_745           5816
ALPHA_748           5846
ALPHA_749           5866
ALPHA_75            1856
ALPHA_750           5886
ALPHA_751           58A8
ALPHA_753           58C8
ALPHA_754           58E8
ALPHA_755           5908
ALPHA_756           592A
ALPHA_76            1878
ALPHA_78            1898
ALPHA_79            18B8
ALPHA_792           5C76
ALPHA_793           5C96
ALPHA_794           5CB6
ALPHA_795           5CD8
ALPHA_799           5D12
ALPHA_8             10B8
ALPHA_80            18D8
ALPHA_800           5D32
ALPHA_801           5D52
ALPHA_802           5D74
ALPHA_804           5D94
ALPHA_805           5DB4
ALPHA_806           5DD4
ALPHA_807           5DF6
ALPHA_81            18FA
ALPHA_810           5E26
ALPHA_811           5E46
ALPHA_812           5E66
ALPHA_813           5E88
ALPHA_816           5EB8
ALPHA_817           5ED8
ALPHA_818           5EF8
ALPHA_819           5F1A
ALPHA_821           5F3A
ALPHA_822           5F5A
ALPHA_823           5F7A
ALPHA_824           5F9C
ALPHA_882           671E
ALPHA_883           673E
ALPHA_884           675E
ALPHA_885           6780
ALPHA_889           67BA
ALPHA_890           67DA
ALPHA_891           67FA
ALPHA_892           681C
ALPHA_894           683C
ALPHA_895           685C
ALPHA_896           687C
ALPHA_897           689E
ALPHA_9             10DA
ALPHA_900           68CE
ALPHA_901           68EE
ALPHA_902           690E
ALPHA_903           6930
ALPHA_906           6960
ALPHA_907           6980
ALPHA_908           69A0
ALPHA_909           69C2
ALPHA_911           69E2
ALPHA_912           6A02
ALPHA_913           6A22
ALPHA_914           6A44
ALPHA_921           6B18
ALPHA_922           6B38
ALPHA_923           6B58
ALPHA_924           6B7A
ALPHA_925           6BA4
ALPHA_926           6BC4
ALPHA_927           6BE4
ALPHA_928           6C06
AREG_M              61EA
AREG_R              62BE
ARIREG              1264
ARISHIFT            1258
ASL_M               61D2
ASL_R               62A6
ASR_M               61E0
ASR_R               62B4
CHECKFOR0_147       1EFE
CHECKFOR0_148       1F3C
CHECKFOR0_15        1286
CHECKFOR0_16        12CE
CHECKFOR0_284       2C3E
CHECKFOR0_420       3940
CHECKFOR0_488       3FB8
CHECKFOR0_556       4630
CHECKFOR0_623       4C74
CHECKFOR0_759       5976
CHECKFOR0_825       5FC6
CHECKFOR0_830       609A
CHECKFOR0_835       616E
CHECKFOR0_836       61AC
CHECKFOR0_841       6280
CHECKFOR0_846       6354
CHECKFOR0_847       6392
CHECKFOR0_848       63D0
CHECKFOR0_849       640E
CHECKFOR0_850       644C
CHECKFOR0_915       6A6E
CHECKFOR0_916       6AB6
CHECKFOR1_147       1F08
CHECKFOR1_148       1F46
CHECKFOR1_15        1290
CHECKFOR1_16        12D8
CHECKFOR1_284       2C48
CHECKFOR1_420       394A
CHECKFOR1_488       3FC2
CHECKFOR1_556       463A
CHECKFOR1_623       4C7E
CHECKFOR1_759       5980
CHECKFOR1_825       5FD0
CHECKFOR1_830       60A4
CHECKFOR1_835       6178
CHECKFOR1_836       61B6
CHECKFOR1_841       628A
CHECKFOR1_846       635E
CHECKFOR1_847       639C
CHECKFOR1_848       63DA
CHECKFOR1_849       6418
CHECKFOR1_850       6456
CHECKFOR1_915       6A78
CHECKFOR1_916       6AC0
CHECKFORB_17        12FA
CHECKFORB_421       396C
CHECKFORB_489       3FE4
CHECKFORB_760       59A0
CHECKFORB_826       6006
CHECKFORB_831       60DA
CHECKFORB_837       61EC
CHECKFORB_842       62C0
CHECKFORDESTDN_149  1F6C
CHECKFORDESTDN_285  2C6E
CHECKFORDESTDN_624  4CA4
CHECKFORL_17        1326
CHECKFORL_421       3998
CHECKFORL_489       4010
CHECKFORL_760       59CC
CHECKFORL_826       6032
CHECKFORL_831       6106
CHECKFORL_837       6218
CHECKFORL_842       62EC
CHECKFORSRCDN_149   1FB8
CHECKFORSRCDN_285   2CBA
CHECKFORSRCDN_624   4CF0
CHECKFORW_17        1310
CHECKFORW_421       3982
CHECKFORW_489       3FFA
CHECKFORW_760       59B6
CHECKFORW_826       601C
CHECKFORW_831       60F0
CHECKFORW_837       6202
CHECKFORW_842       62D6
COMPLETE_147        1F1C
COMPLETE_148        1F5A
COMPLETE_149        2046
COMPLETE_15         12A4
COMPLETE_154        2078
COMPLETE_155        2628
COMPLETE_16         12EC
COMPLETE_17         1334
COMPLETE_18         1354
COMPLETE_19         1904
COMPLETE_218        264C
COMPLETE_219        2BFC
COMPLETE_284        2C5C
COMPLETE_285        2D48
COMPLETE_290        2D7A
COMPLETE_291        332A
COMPLETE_354        334E
COMPLETE_355        38FE
COMPLETE_420        395E
COMPLETE_421        39A6
COMPLETE_422        39C6
COMPLETE_423        3F76
COMPLETE_488        3FD6
COMPLETE_489        401E
COMPLETE_490        403E
COMPLETE_491        45EE
COMPLETE_556        464E
COMPLETE_557        4682
COMPLETE_558        4C32
COMPLETE_623        4C92
COMPLETE_624        4D7E
COMPLETE_629        4DB0
COMPLETE_630        5360
COMPLETE_693        5384
COMPLETE_694        5934
COMPLETE_759        5994
COMPLETE_760        59D6
COMPLETE_761        59F6
COMPLETE_762        5FA6
COMPLETE_825        5FE4
COMPLETE_826        603C
COMPLETE_83         192E
COMPLETE_830        60B8
COMPLETE_831        6110
COMPLETE_835        618C
COMPLETE_836        61CA
COMPLETE_837        6222
COMPLETE_84         1EDE
COMPLETE_841        629E
COMPLETE_842        62F6
COMPLETE_846        6372
COMPLETE_847        63B0
COMPLETE_848        63EE
COMPLETE_849        642C
COMPLETE_850        646A
COMPLETE_851        649E
COMPLETE_852        6A4E
COMPLETE_915        6A8C
COMPLETE_916        6AD4
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_155  20AC
DATAREGDIRECTDEST_19  1388
DATAREGDIRECTDEST_219  2680
DATAREGDIRECTDEST_291  2DAE
DATAREGDIRECTDEST_355  3382
DATAREGDIRECTDEST_423  39FA
DATAREGDIRECTDEST_491  4072
DATAREGDIRECTDEST_558  46B6
DATAREGDIRECTDEST_630  4DE4
DATAREGDIRECTDEST_694  53B8
DATAREGDIRECTDEST_762  5A2A
DATAREGDIRECTDEST_84  1962
DATAREGDIRECTDEST_852  64D2
DATAREGDIRECTSRC_155  20C8
DATAREGDIRECTSRC_19  13A4
DATAREGDIRECTSRC_219  269C
DATAREGDIRECTSRC_291  2DCA
DATAREGDIRECTSRC_355  339E
DATAREGDIRECTSRC_423  3A16
DATAREGDIRECTSRC_491  408E
DATAREGDIRECTSRC_558  46D2
DATAREGDIRECTSRC_630  4E00
DATAREGDIRECTSRC_694  53D4
DATAREGDIRECTSRC_762  5A46
DATAREGDIRECTSRC_84  197E
DATAREGDIRECTSRC_852  64EE
DATAREGDIRECT_155   20A4
DATAREGDIRECT_19    1380
DATAREGDIRECT_219   2678
DATAREGDIRECT_291   2DA6
DATAREGDIRECT_355   337A
DATAREGDIRECT_423   39F2
DATAREGDIRECT_491   406A
DATAREGDIRECT_558   46AE
DATAREGDIRECT_630   4DDC
DATAREGDIRECT_694   53B0
DATAREGDIRECT_762   5A22
DATAREGDIRECT_84    195A
DATAREGDIRECT_852   64CA
DECODEADD           1F1E
DECODEADDCOMP       2C1E
DECODEADDDESTOP     262C
DECODEADRMODE       1EB7
DECODEAND           4C56
DECODEANDCOMP       5956
DECODEANDDESTOP     5364
DECODEASX_M         618E
DECODEASX_R         6262
DECODEASX_S         6336
DECODEBEQ           6374
DECODEBGE           63B2
DECODEBLT           63F0
DECODEBRA           6A98
DECODEDIVU          3F9A
DECODEJSR           642E
DECODELEA           4612
DECODELSX_M         5FA8
DECODELSX_R         607C
DECODELSX_S         6150
DECODEMOVE          12B0
DECODEMOVEM         1EE0
DECODEMULS          3922
DECODENOP           1268
DECODENOT           5958
DECODERTS           6A50
DECODESUB           2C20
DECODESUBCOMP       3920
DECODESUBDESTOP     332E
DESTDNB_149         1FAA
DESTDNB_285         2CAC
DESTDNB_624         4CE2
DESTDNL_149         1F82
DESTDNL_285         2C84
DESTDNL_624         4CBA
DESTDNW_149         1F90
DESTDNW_285         2C92
DESTDNW_624         4CC8
DONE_10             10FE
DONE_11             111E
DONE_114            1BB2
DONE_115            1BD2
DONE_116            1BF2
DONE_117            1C14
DONE_121            1C4E
DONE_122            1C6E
DONE_123            1C8E
DONE_124            1CB0
DONE_126            1CD0
DONE_127            1CF0
DONE_128            1D10
DONE_129            1D32
DONE_132            1D62
DONE_133            1D82
DONE_134            1DA2
DONE_135            1DC4
DONE_138            1DF4
DONE_139            1E14
DONE_140            1E34
DONE_141            1E56
DONE_143            1E76
DONE_144            1E96
DONE_145            1EB6
DONE_146            1ED8
DONE_185            22FC
DONE_186            231C
DONE_187            233C
DONE_188            235E
DONE_192            2398
DONE_193            23B8
DONE_194            23D8
DONE_195            23FA
DONE_197            241A
DONE_198            243A
DONE_199            245A
DONE_2              1024
DONE_200            247C
DONE_203            24AC
DONE_204            24CC
DONE_205            24EC
DONE_206            250E
DONE_209            253E
DONE_210            255E
DONE_211            257E
DONE_212            25A0
DONE_214            25C0
DONE_215            25E0
DONE_216            2600
DONE_217            2622
DONE_249            28D0
DONE_250            28F0
DONE_251            2910
DONE_252            2932
DONE_256            296C
DONE_257            298C
DONE_258            29AC
DONE_259            29CE
DONE_261            29EE
DONE_262            2A0E
DONE_263            2A2E
DONE_264            2A50
DONE_267            2A80
DONE_268            2AA0
DONE_269            2AC0
DONE_270            2AE2
DONE_273            2B12
DONE_274            2B32
DONE_275            2B52
DONE_276            2B74
DONE_278            2B94
DONE_279            2BB4
DONE_280            2BD4
DONE_281            2BF6
DONE_3              1046
DONE_321            2FFE
DONE_322            301E
DONE_323            303E
DONE_324            3060
DONE_328            309A
DONE_329            30BA
DONE_330            30DA
DONE_331            30FC
DONE_333            311C
DONE_334            313C
DONE_335            315C
DONE_336            317E
DONE_339            31AE
DONE_340            31CE
DONE_341            31EE
DONE_342            3210
DONE_345            3240
DONE_346            3260
DONE_347            3280
DONE_348            32A2
DONE_350            32C2
DONE_351            32E2
DONE_352            3302
DONE_353            3324
DONE_385            35D2
DONE_386            35F2
DONE_387            3612
DONE_388            3634
DONE_392            366E
DONE_393            368E
DONE_394            36AE
DONE_395            36D0
DONE_397            36F0
DONE_398            3710
DONE_399            3730
DONE_4              1066
DONE_400            3752
DONE_403            3782
DONE_404            37A2
DONE_405            37C2
DONE_406            37E4
DONE_409            3814
DONE_410            3834
DONE_411            3854
DONE_412            3876
DONE_414            3896
DONE_415            38B6
DONE_416            38D6
DONE_417            38F8
DONE_453            3C4A
DONE_454            3C6A
DONE_455            3C8A
DONE_456            3CAC
DONE_460            3CE6
DONE_461            3D06
DONE_462            3D26
DONE_463            3D48
DONE_465            3D68
DONE_466            3D88
DONE_467            3DA8
DONE_468            3DCA
DONE_471            3DFA
DONE_472            3E1A
DONE_473            3E3A
DONE_474            3E5C
DONE_477            3E8C
DONE_478            3EAC
DONE_479            3ECC
DONE_480            3EEE
DONE_482            3F0E
DONE_483            3F2E
DONE_484            3F4E
DONE_485            3F70
DONE_49             15D8
DONE_5              1086
DONE_50             15F8
DONE_51             1618
DONE_52             163A
DONE_521            42C2
DONE_522            42E2
DONE_523            4302
DONE_524            4324
DONE_528            435E
DONE_529            437E
DONE_530            439E
DONE_531            43C0
DONE_533            43E0
DONE_534            4400
DONE_535            4420
DONE_536            4442
DONE_539            4472
DONE_540            4492
DONE_541            44B2
DONE_542            44D4
DONE_545            4504
DONE_546            4524
DONE_547            4544
DONE_548            4566
DONE_550            4586
DONE_551            45A6
DONE_552            45C6
DONE_553            45E8
DONE_56             1674
DONE_57             1694
DONE_58             16B4
DONE_588            4906
DONE_589            4926
DONE_59             16D6
DONE_590            4946
DONE_591            4968
DONE_595            49A2
DONE_596            49C2
DONE_597            49E2
DONE_598            4A04
DONE_600            4A24
DONE_601            4A44
DONE_602            4A64
DONE_603            4A86
DONE_606            4AB6
DONE_607            4AD6
DONE_608            4AF6
DONE_609            4B18
DONE_61             16F6
DONE_612            4B48
DONE_613            4B68
DONE_614            4B88
DONE_615            4BAA
DONE_617            4BCA
DONE_618            4BEA
DONE_619            4C0A
DONE_62             1716
DONE_620            4C2C
DONE_63             1736
DONE_64             1758
DONE_660            5034
DONE_661            5054
DONE_662            5074
DONE_663            5096
DONE_667            50D0
DONE_668            50F0
DONE_669            5110
DONE_67             1788
DONE_670            5132
DONE_672            5152
DONE_673            5172
DONE_674            5192
DONE_675            51B4
DONE_678            51E4
DONE_679            5204
DONE_68             17A8
DONE_680            5224
DONE_681            5246
DONE_684            5276
DONE_685            5296
DONE_686            52B6
DONE_687            52D8
DONE_689            52F8
DONE_69             17C8
DONE_690            5318
DONE_691            5338
DONE_692            535A
DONE_70             17EA
DONE_724            5608
DONE_725            5628
DONE_726            5648
DONE_727            566A
DONE_73             181A
DONE_731            56A4
DONE_732            56C4
DONE_733            56E4
DONE_734            5706
DONE_736            5726
DONE_737            5746
DONE_738            5766
DONE_739            5788
DONE_74             183A
DONE_742            57B8
DONE_743            57D8
DONE_744            57F8
DONE_745            581A
DONE_748            584A
DONE_749            586A
DONE_75             185A
DONE_750            588A
DONE_751            58AC
DONE_753            58CC
DONE_754            58EC
DONE_755            590C
DONE_756            592E
DONE_76             187C
DONE_78             189C
DONE_79             18BC
DONE_792            5C7A
DONE_793            5C9A
DONE_794            5CBA
DONE_795            5CDC
DONE_799            5D16
DONE_8              10BC
DONE_80             18DC
DONE_800            5D36
DONE_801            5D56
DONE_802            5D78
DONE_804            5D98
DONE_805            5DB8
DONE_806            5DD8
DONE_807            5DFA
DONE_81             18FE
DONE_810            5E2A
DONE_811            5E4A
DONE_812            5E6A
DONE_813            5E8C
DONE_816            5EBC
DONE_817            5EDC
DONE_818            5EFC
DONE_819            5F1E
DONE_821            5F3E
DONE_822            5F5E
DONE_823            5F7E
DONE_824            5FA0
DONE_882            6722
DONE_883            6742
DONE_884            6762
DONE_885            6784
DONE_889            67BE
DONE_890            67DE
DONE_891            67FE
DONE_892            6820
DONE_894            6840
DONE_895            6860
DONE_896            6880
DONE_897            68A2
DONE_9              10DE
DONE_900            68D2
DONE_901            68F2
DONE_902            6912
DONE_903            6934
DONE_906            6964
DONE_907            6984
DONE_908            69A4
DONE_909            69C6
DONE_911            69E6
DONE_912            6A06
DONE_913            6A26
DONE_914            6A48
DONE_921            6B1C
DONE_922            6B3C
DONE_923            6B5C
DONE_924            6B7E
DONE_925            6BA8
DONE_926            6BC8
DONE_927            6BE8
DONE_928            6C0A
ENDSIM              115E
GOLOOP              113C
IDENTIFYOPCODE      1162
LOGREG              124C
LOOP_147            1EEA
LOOP_148            1F28
LOOP_15             1272
LOOP_16             12BA
LOOP_284            2C2A
LOOP_420            392C
LOOP_488            3FA4
LOOP_556            461C
LOOP_623            4C60
LOOP_759            5962
LOOP_825            5FB2
LOOP_830            6086
LOOP_835            615A
LOOP_836            6198
LOOP_841            626C
LOOP_846            6340
LOOP_847            637E
LOOP_848            63BC
LOOP_849            63FA
LOOP_850            6438
LOOP_915            6A5A
LOOP_916            6AA2
LSL_M               5FEC
LSL_R               60C0
LSR_M               5FFA
LSR_R               60CE
MAIN                1000
NEWLINE             3450
NEXT_147            1F0E
NEXT_148            1F4C
NEXT_149            2042
NEXT_15             1296
NEXT_16             12DE
NEXT_284            2C4E
NEXT_285            2D44
NEXT_420            3950
NEXT_488            3FC8
NEXT_556            4640
NEXT_623            4C84
NEXT_624            4D7A
NEXT_759            5986
NEXT_825            5FD6
NEXT_830            60AA
NEXT_835            617E
NEXT_836            61BC
NEXT_841            6290
NEXT_846            6364
NEXT_847            63A2
NEXT_848            63E0
NEXT_849            641E
NEXT_850            645C
NEXT_915            6A7E
NEXT_916            6AC6
OADD                6F
OAN                 C3
OAND                85
OASL                95
OASR                99
OBEQ                9D
OBGE                A1
OBLANK              D2
OBLT                A5
OBRA                B1
OBSIZE              B5
OCOMMA              C9
ODIVU               7C
ODN                 C1
OHASH               D0
OJSR                A9
OLB                 C5
OLEA                81
OLSIZE              BD
OLSL                8D
OLSR                91
OMOVE               64
OMOVEM              69
OMULS               77
ONOP                60
ONOT                89
OPREDEC             CC
OPSTINC             CE
ORB                 C7
ORTS                AD
OSUB                73
OUTPUTDATA          6B84
OWSIZE              B9
PADD                107
PAND                15C
PASX_M              1B1
PASX_R              1C2
PASX_S              1D3
PBEQ                1E4
PBGE                1F5
PBLT                206
PBRA                239
PDIVU               13A
PJSR                217
PLEA                14B
PLSX_M              17E
PLSX_R              18F
PLSX_S              1A0
PMOVE               E5
PMOVEM              F6
PMULS               129
PNOP                D4
PNOT                16D
PREPAREADRMODE      1CAA
PRINTANDEST         2E65
PRINTANSRC          2F64
PRINTBRANCH         15A8
PRINTCOMMA          308D
PRINTCOUNT          2B00
PRINTDNDEST         2C15
PRINTDNSRC          2D28
PRINTHASH           333B
PRINTLB             31C1
PRINTOPMODE         1695
PRINTPD             315A
PRINTPI             30F3
PRINTRB             3224
PRINTSIGN           3287
PRINTSIZE           F0E
PRINTSIZELOW        127F
PRTS                228
PSUB                118
READINPUT           F4
REG_M               6004
REG_R               60D8
REND                31
RSTART              0
SPACE               33EF
SPLIT0              1170
SPLIT000            117C
SPLIT01             1190
SPLIT0100           119C
SPLIT0100111        11B8
SPLIT0110           11CC
SPLIT01100          11D8
SPLIT01101          11E4
SPLIT1              11F0
SPLIT10             11FC
SPLIT11             1208
SPLIT110            1214
SPLIT111            1238
SRCDNB_149          201C
SRCDNB_285          2D1E
SRCDNB_624          4D54
SRCDNL_149          1FC4
SRCDNL_285          2CC6
SRCDNL_624          4CFC
SRCDNW_149          1FEA
SRCDNW_285          2CEC
SRCDNW_624          4D22
VERIFYOPCODE        A9B
