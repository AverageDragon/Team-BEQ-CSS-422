00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/2/2021 12:39:14 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 53 55 42 00              102  oSUB:   DC.B    'SUB',0
00000077= 4D 55 4C 53 00           103  oMULS:  DC.B    'MULS',0
0000007C= 44 49 56 55 00           104  oDIVU:  DC.B    'DIVU',0
00000081= 4C 45 41 00              105  oLEA:   DC.B    'LEA',0
00000085= 41 4E 44 00              106  oAND:   DC.B    'AND',0
00000089= 4E 4F 54 00              107  oNOT:   DC.B    'NOT',0
0000008D= 4C 53 4C 00              108  oLSL:   DC.B    'LSL',0
00000091= 4C 53 52 00              109  oLSR:   DC.B    'LSR',0
00000095= 41 53 4C 00              110  oASL:   DC.B    'ASL',0
00000099= 41 53 52 00              111  oASR:   DC.B    'ASR',0
0000009D= 42 45 51 00              112  oBEQ:   DC.B    'BEQ',0
000000A1= 42 47 45 00              113  oBGE:   DC.B    'BGE',0
000000A5= 42 4C 54 00              114  oBLT:   DC.B    'BLT',0
000000A9= 4A 53 52 00              115  oJSR:   DC.B    'JSR',0
000000AD= 52 54 53 00              116  oRTS:   DC.B    'RTS',0
000000B1= 42 52 41 00              117  oBRA:   DC.B    'BRA',0
000000B5= 2E 42 20 00              118  oBSize  DC.B    '.B ',0
000000B9= 2E 57 20 00              119  oWSize  DC.B    '.W ',0
000000BD= 2E 4C 20 00              120  oLSize  DC.B    '.L ',0
000000C1= 44 00                    121  oDn     DC.B    'D',0
000000C3= 41 00                    122  oAn     DC.B    'A',0
000000C5= 28 00                    123  oLB     DC.B    '(',0
000000C7= 29 00                    124  oRB     DC.B    ')',0
000000C9= 2C 20 00                 125  oComma  DC.B    ', ',0
000000CC= 2D 00                    126  oPreDec DC.B    '-',0
000000CE= 2B 00                    127  oPstInc DC.B    '+',0
000000D0= 23 00                    128  oHash   DC.B    '#',0
000000D2= 20 00                    129  oBlank  DC.B    ' ',0
000000D4                           130  ; ------------------------------------------------------------
000000D4                           131  ; "Pattern" Variables
000000D4                           132  ; Jonathan
000000D4                           133  ; 
000000D4                           134  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000D4                           135  ; and the opcode isn't actually data
000000D4                           136  ; ------------------------------------------------------------
000000D4= 30 31 30 30 31 31 ...    137  pNOP:   DC.B    '0100111001110001',0
000000E5= 30 30 2E 2E 2E 2E ...    138  pMOVE:  DC.B    '00..............',0
000000F6= 30 31 30 30 31 2E ...    139  pMOVEM: DC.B    '01001.001.......',0
00000107= 31 31 30 31 2E 2E ...    140  pADD:   DC.B    '1101............',0
00000118= 31 30 30 31 2E 2E ...    141  pSUB:   DC.B    '1001............',0
00000129= 31 31 30 30 2E 2E ...    142  pMULS:  DC.B    '1100...111......',0
0000013A= 31 30 30 30 2E 2E ...    143  pDIVU:  DC.B    '1000...011......',0
0000014B= 30 31 30 30 2E 2E ...    144  pLEA:   DC.B    '0100...111......',0
0000015C= 31 31 30 30 2E 2E ...    145  pAND:   DC.B    '1100............',0
0000016D= 30 31 30 30 30 31 ...    146  pNOT:   DC.B    '01000110........',0
0000017E= 31 31 31 30 2E 2E ...    147  pLSx_M: DC.B    '1110......001...',0
0000018F= 31 31 31 30 2E 2E ...    148  pLSx_R: DC.B    '1110......101...',0
000001A0= 31 31 31 30 2E 2E ...    149  pLSx_S: DC.B    '1110......100...',0
000001B1= 31 31 31 30 2E 2E ...    150  pASx_M: DC.B    '1110......000...',0
000001C2= 31 31 31 30 2E 2E ...    151  pASx_R: DC.B    '1110......100...',0
000001D3= 31 31 31 30 2E 2E ...    152  pASx_S: DC.B    '1110......100...',0
000001E4= 30 31 31 30 30 31 ...    153  pBEQ:   DC.B    '01100111........',0
000001F5= 30 31 31 30 31 31 ...    154  pBGE:   DC.B    '01101100........',0
00000206= 30 31 31 30 31 31 ...    155  pBLT:   DC.B    '01101101........',0
00000217= 30 31 30 30 31 31 ...    156  pJSR:   DC.B    '0100111010......',0
00000228= 30 31 30 30 31 31 ...    157  pRTS:   DC.B    '0100111001110101',0
00000239= 30 31 31 30 30 30 ...    158  pBRA:   DC.B    '01100000........',0
0000024A                           159  
0000024A                           160  
0000024A                           161  ; ========================================================================
0000024A                           162  ; Macros
0000024A                           163  ; ========================================================================
0000024A                           164  ; ------------------------------------------------------------
0000024A                           165  ; "convertHtoA" Helper
0000024A                           166  ; Jonathan
0000024A                           167  ;
0000024A                           168  ; 1st argument is a data register containing a single digit of a hex number.
0000024A                           169  ;
0000024A                           170  ; Converts the argument from a hex digit to an ascii character
0000024A                           171  ; ------------------------------------------------------------
0000024A                           172  convertHtoA:    MACRO
0000024A                           173          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
0000024A                           174          BGT     alpha\@
0000024A                           175          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
0000024A                           176          BRA     done\@
0000024A                           177  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
0000024A                           178  done\@: NOP
0000024A                           179          ENDM
0000024A                           180  ; ------------------------------------------------------------
0000024A                           181  ; adrOut
0000024A                           182  ; Gary
0000024A                           183  ;
0000024A                           184  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000024A                           185  ; ------------------------------------------------------------
0000024A                           186  adrOut:         MACRO
0000024A                           187          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           188          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           189          LSR.W   #4, D1      
0000024A                           190          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           191          TRAP    #15         ; Execute output
0000024A                           192          
0000024A                           193          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           194          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000024A                           195          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           196          LSR.W   #4, D1      
0000024A                           197          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           198          TRAP    #15         ; Execute output
0000024A                           199          
0000024A                           200          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           201          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           202          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           203          LSR.W   #4, D1      
0000024A                           204          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           205          TRAP    #15         ; Execute output
0000024A                           206          
0000024A                           207          MOVE.W  (A2), D1    ; Move A2 into D1
0000024A                           208          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000024A                           209          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000024A                           210          LSR.W   #8, D1      ; Get the first hex digit of D1
0000024A                           211          LSR.W   #4, D1      
0000024A                           212          ConvertHtoA D1      ; Convert D1 to a character
0000024A                           213          TRAP    #15         ; Execute output       
0000024A                           214          ENDM 
0000024A                           215  ; ------------------------------------------------------------
0000024A                           216  ; "verifyOpcode" Helper
0000024A                           217  ; Jonathan
0000024A                           218  ;
0000024A                           219  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
0000024A                           220  ; 2nd argument is a data register to check against the template
0000024A                           221  ;
0000024A                           222  ; Verifies that the opcode passed through \2 matches the pattern of \1
0000024A                           223  ; If they do not match, branches to outputData
0000024A                           224  ; ------------------------------------------------------------
0000024A                           225  verifyOpcode:  MACRO
0000024A                           226          LEA     \1, A1      ; Input pattern string
0000024A                           227          MOVE.W  \2, D3      ; input value
0000024A                           228          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
0000024A                           229          
0000024A                           230  loop\@: 
0000024A                           231          CMP.B   #$30, (A1)  ; Check if the template wants a 0
0000024A                           232          BEQ     checkFor0\@
0000024A                           233          CMP.B   #$31, (A1)  ; Check if the template wants a 1
0000024A                           234          BEQ     checkFor1\@
0000024A                           235          BRA     next\@      ; Template has a wildcard, go to next iteration
0000024A                           236          
0000024A                           237  checkFor0\@: 
0000024A                           238          BTST    D1, D3      ; Check if contains 0
0000024A                           239          BNE     outputData  ; Missing a 0 -> Not a valid opcode
0000024A                           240          BRA     next\@
0000024A                           241  
0000024A                           242  checkFor1\@:
0000024A                           243          BTST    D1, D3      ; Check if contains 1
0000024A                           244          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
0000024A                           245  
0000024A                           246  next\@: 
0000024A                           247          CMP.B   #0, D1      ; Compare bit counter to 0
0000024A                           248          BEQ     complete\@  ; Branch to complete if bit counter reached 0
0000024A                           249          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           250          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
0000024A                           251          BRA     loop\@      ; Begin loop again
0000024A                           252  
0000024A                           253  complete\@:  ; Opcode has been verified
0000024A                           254          ENDM
0000024A                           255          
0000024A                           256  ; ------------------------------------------------------------
0000024A                           257  ; "printSize" Helper
0000024A                           258  ; Gary
0000024A                           259  ;
0000024A                           260  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           261  ;
0000024A                           262  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
0000024A                           263  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
0000024A                           264  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
0000024A                           265  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
0000024A                           266  ; ------------------------------------------------------------
0000024A                           267  printSize:  MACRO
0000024A                           268          MOVE.W  \1, D3      ; input value
0000024A                           269          CLR     D7      
0000024A                           270  checkForB\@: 
0000024A                           271          BTST    #13, D3      ; Check if contains 0
0000024A                           272          BNE     checkForW\@  ; If not go to word size
0000024A                           273          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
0000024A                           274          MOVE.B  #14,D0          
0000024A                           275          TRAP    #15
0000024A                           276          BRA     complete\@      
0000024A                           277  checkForW\@: 
0000024A                           278          BTST    #12, D3      ; Check if contains 1
0000024A                           279          BEQ     checkForL\@  ; If not, size cannot be word
0000024A                           280          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
0000024A                           281          MOVE.B  #14,D0          
0000024A                           282          TRAP    #15
0000024A                           283          BRA     complete\@  
0000024A                           284  checkForL\@:
0000024A                           285          MOVE.B  #$1, D7
0000024A                           286          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
0000024A                           287          MOVE.B  #14,D0          
0000024A                           288          TRAP    #15
0000024A                           289  complete\@:  ; Size has been printed
0000024A                           290          ENDM
0000024A                           291          
0000024A                           292          ; ------------------------------------------------------------
0000024A                           293  ; "printSizeLow" Helper
0000024A                           294  ; Gary
0000024A                           295  ;
0000024A                           296  ; 1st argument is the data register with opcode whose size is being decoded
0000024A                           297  ;
0000024A                           298  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
0000024A                           299  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
0000024A                           300  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
0000024A                           301  ; Once matched, size is printed and appended to already printed opcode, macro exits.
0000024A                           302  ; ------------------------------------------------------------
0000024A                           303  printSizeLow:  MACRO
0000024A                           304          MOVE.W  \1, D3      ; input value      
0000024A                           305  checkForB\@: 
0000024A                           306          BTST    #6,  D3      ; Check if contains 0
0000024A                           307          BNE     checkForW\@  ; If not go to word size
0000024A                           308          LEA     oBSize, A1     
0000024A                           309          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           310          TRAP    #15
0000024A                           311          BRA     complete\@      
0000024A                           312  checkForW\@: 
0000024A                           313          BTST    #7, D3      ; Check if contains 0
0000024A                           314          BNE     checkForL\@ ; If not go to longword size
0000024A                           315          LEA     oWSize, A1     
0000024A                           316          MOVE.B  #14,D0       ; Print and end macro       
0000024A                           317          TRAP    #15
0000024A                           318          BRA     complete\@  
0000024A                           319  checkForL\@:
0000024A                           320          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
0000024A                           321          MOVE.B  #14,D0       ; Print and end macro  
0000024A                           322          TRAP    #15
0000024A                           323  complete\@:  ; Size has been printed
0000024A                           324          ENDM
0000024A                           325          
0000024A                           326          
0000024A                           327  ; ------------------------------------------------------------
0000024A                           328  ; "printOpMode" Helper
0000024A                           329  ; Gary
0000024A                           330  ;
0000024A                           331  ; 1st argument holds opcode whose opmode is being decoded
0000024A                           332  ;
0000024A                           333  ; With the opcode in D3, D1 is designated as the bit tracker. Split
0000024A                           334  ; into two sorting mechanisms: first, the macro determines whether
0000024A                           335  ; the register is a source or a destination. Then, the macro determines
0000024A                           336  ; the size and appends it to printed opcode in a similar manner to printSize.
0000024A                           337  ; ------------------------------------------------------------
0000024A                           338  printOpMode:  MACRO
0000024A                           339          MOVE.W  \1, D3      
0000024A                           340          MOVE.B  #8, D1    
0000024A                           341          CLR     D6
0000024A                           342  checkForDestDn\@: 
0000024A                           343          BTST    D1, D3      
0000024A                           344          BNE     checkForSrcDn\@
0000024A                           345          JSR     next\@
0000024A                           346          MOVE.B  #$1, D6
0000024A                           347          BTST    D1, D3      
0000024A                           348          BEQ     DestDnW\@
0000024A                           349  DestDnL\@:        
0000024A                           350          LEA     oLSize, A1     
0000024A                           351          MOVE.B  #14,D0          
0000024A                           352          TRAP    #15
0000024A                           353          BRA     complete\@ 
0000024A                           354  DestDnW\@: 
0000024A                           355          JSR     next\@
0000024A                           356          BTST    D1, D3      
0000024A                           357          BEQ     DestDnB\@
0000024A                           358          LEA     oWSize, A1     
0000024A                           359          MOVE.B  #14,D0          
0000024A                           360          TRAP    #15
0000024A                           361          BRA     complete\@ 
0000024A                           362  DestDnB\@: 
0000024A                           363          LEA     oBSize, A1     
0000024A                           364          MOVE.B  #14,D0          
0000024A                           365          TRAP    #15
0000024A                           366          BRA     complete\@ 
0000024A                           367  checkForSrcDn\@: 
0000024A                           368          JSR     next\@
0000024A                           369          BTST    D1, D3      
0000024A                           370          BEQ     SrcDnW\@
0000024A                           371  SrcDnL\@:        
0000024A                           372          LEA     oLSize, A1     
0000024A                           373          MOVE.B  #14,D0          
0000024A                           374          TRAP    #15
0000024A                           375          printDnDest D3
0000024A                           376          BRA     complete\@ 
0000024A                           377  SrcDnW\@:
0000024A                           378          JSR     next\@
0000024A                           379          BTST    D1, D3     
0000024A                           380          BEQ     SrcDnB\@
0000024A                           381          LEA     oWSize, A1     
0000024A                           382          MOVE.B  #14,D0          
0000024A                           383          TRAP    #15
0000024A                           384          printDnDest D3
0000024A                           385          BRA     complete\@ 
0000024A                           386  SrcDnB\@: 
0000024A                           387          LEA     oBSize, A1     
0000024A                           388          MOVE.B  #14,D0          
0000024A                           389          TRAP    #15
0000024A                           390          printDnDest D3
0000024A                           391          BRA     complete\@ 
0000024A                           392  
0000024A                           393  next\@:
0000024A                           394          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000024A                           395          RTS                
0000024A                           396  
0000024A                           397  complete\@:  ; Opcode has been verified
0000024A                           398          ENDM
0000024A                           399  ; ------------------------------------------------------------
0000024A                           400  ; "prepareAdrMode" Helper
0000024A                           401  ; Gary
0000024A                           402  ; 
0000024A                           403  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
0000024A                           404  ; ------------------------------------------------------------
0000024A                           405  prepareAdrMode: MACRO
0000024A                           406          MOVE.W  \1, D6      ; input value
0000024A                           407          MOVE.W  \2, D1
0000024A                           408          CMP.B   #$01, D6
0000024A                           409          BEQ     AdrSource\@    
0000024A                           410  AdrDest\@:
0000024A                           411          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
0000024A                           412          LSR     #$08, D1
0000024A                           413          LSR     #$05, D1
0000024A                           414          BRA     complete\@ 
0000024A                           415  AdrSource\@:                
0000024A                           416          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
0000024A                           417          LSL     #$02, D1
0000024A                           418          LSR     #$08, D1
0000024A                           419          LSR     #$05, D1
0000024A                           420  complete\@:  ; Opcode has been verified
0000024A                           421          ENDM        
0000024A                           422          
0000024A                           423  ; ------------------------------------------------------------
0000024A                           424  ; "decodeAdrMode" Helper
0000024A                           425  ; Gary
0000024A                           426  ; 
0000024A                           427  ; Executes after prepare macro on D1 which contains only adressing mode
0000024A                           428  ; bits. 
0000024A                           429  ; ------------------------------------------------------------
0000024A                           430  decodeAdrMode:  MACRO
0000024A                           431          MOVE.W  \1, D3      ; holds full opcode
0000024A                           432          MOVE.W  \2, D1      ; holds just opmode
0000024A                           433  
0000024A                           434          CMP.B   #$01, D1
0000024A                           435          BEQ     AdrRegDirect\@    
0000024A                           436          CMP.B   #$02, D1
0000024A                           437          BEQ     AdrRegInDirect\@  
0000024A                           438          CMP.B   #$03, D1
0000024A                           439          BEQ     AdrRegPostInc\@  
0000024A                           440          CMP.B   #$04, D1
0000024A                           441          BEQ     AdrRegPreDec\@
0000024A                           442          CMP.B   #$07, D1
0000024A                           443          BEQ     AdrAbsolute\@    
0000024A                           444          
0000024A                           445  dataRegDirect\@: 
0000024A                           446          CMP.B   #$01, D6
0000024A                           447          BEQ     dataRegDirectSrc\@   
0000024A                           448  dataRegDirectDest\@: 
0000024A                           449          printDnDest D3 
0000024A                           450          BRA     complete\@ 
0000024A                           451  dataRegDirectSrc\@: 
0000024A                           452          printDnSrc D3 
0000024A                           453          BRA     complete\@   
0000024A                           454          
0000024A                           455  AdrRegDirect\@: 
0000024A                           456          CMP.B   #$01, D6
0000024A                           457          BEQ     AdrRegDirectSrc\@   
0000024A                           458  AdrRegDirectDest\@:
0000024A                           459          printAnDest D3
0000024A                           460          BRA     complete\@   
0000024A                           461  AdrRegDirectSrc\@:
0000024A                           462          printAnSrc D3
0000024A                           463          BRA     complete\@   
0000024A                           464         
0000024A                           465  AdrRegInDirect\@:   
0000024A                           466          CMP.B   #$01, D6
0000024A                           467          BEQ     AdrRegInDirectSrc\@   
0000024A                           468  AdrRegInDirectDest\@:
0000024A                           469          printLB
0000024A                           470          printAnDest D3  
0000024A                           471          printRB
0000024A                           472          BRA     complete\@     
0000024A                           473  AdrRegInDirectSrc\@:   
0000024A                           474          printLB
0000024A                           475          printAnSrc D3  
0000024A                           476          printRB
0000024A                           477          BRA     complete\@   
0000024A                           478          
0000024A                           479  AdrRegPostInc\@:   
0000024A                           480          CMP.B   #$01, D6
0000024A                           481          BEQ     AdrRegPostIncSrc\@   
0000024A                           482  AdrRegPostIncDest\@: 
0000024A                           483          printLB
0000024A                           484          printAnDest D3  
0000024A                           485          printRB
0000024A                           486          printPI
0000024A                           487          BRA     complete\@  
0000024A                           488  AdrRegPostIncSrc\@:           
0000024A                           489          printLB
0000024A                           490          printAnSrc D3  
0000024A                           491          printRB
0000024A                           492          printPI
0000024A                           493          BRA     complete\@  
0000024A                           494  AdrRegPreDec\@: 
0000024A                           495          CMP.B   #$01, D6
0000024A                           496          BEQ     AdrRegPreDecSrc\@   
0000024A                           497  AdrRegPreDecDest\@:
0000024A                           498          printPD  
0000024A                           499          printLB
0000024A                           500          printAnDest D3  
0000024A                           501          printRB
0000024A                           502          BRA     complete\@   
0000024A                           503  AdrRegPreDecSrc\@: 
0000024A                           504          printPD  
0000024A                           505          printLB
0000024A                           506          printAnSrc D3  
0000024A                           507          printRB
0000024A                           508          BRA     complete\@
0000024A                           509         
0000024A                           510  AdrAbsolute\@:
0000024A                           511          CMP.B   #$01, D6
0000024A                           512          BNE     AdrAbsoluteDst\@ 
0000024A                           513          
0000024A                           514          MOVE.W  D3, D5
0000024A                           515          BTST    #2, D3
0000024A                           516          BNE     AdrImmediate\@
0000024A                           517          BTST    #0, D3
0000024A                           518          BNE     AdrAbsoluteL\@
0000024A                           519          BRA     AdrAbsoluteW\@
0000024A                           520  AdrAbsoluteDst\@:
0000024A                           521          MOVE.W  D3, D5
0000024A                           522          BTST    #$B, D3
0000024A                           523          BNE     AdrImmediate\@
0000024A                           524          BTST    #$09, D3
0000024A                           525          BNE     AdrAbsoluteL\@
0000024A                           526          BRA     AdrAbsoluteW\@
0000024A                           527  AdrImmediate\@:
0000024A                           528          CMP.B   #1, D7
0000024A                           529          BEQ     AdrImmediateL\@
0000024A                           530  AdrImmediateW\@:
0000024A                           531          MOVE.W  (A2)+, D3
0000024A                           532          printHash
0000024A                           533          printSign
0000024A                           534          adrOut
0000024A                           535          MOVE.W  D5, D3
0000024A                           536          BRA     complete\@
0000024A                           537  AdrImmediateL\@:
0000024A                           538          MOVE.W  (A2)+, D3
0000024A                           539          printHash
0000024A                           540          printSign
0000024A                           541          adrOut 
0000024A                           542          MOVE.W  (A2)+, D3
0000024A                           543          adrOut
0000024A                           544          MOVE.W  D5, D3
0000024A                           545          BRA     complete\@ 
0000024A                           546  AdrAbsoluteW\@:     
0000024A                           547          MOVE.W  (A2)+, D3
0000024A                           548          printSign
0000024A                           549          adrOut
0000024A                           550          MOVE.W  D5, D3
0000024A                           551          BRA     complete\@  
0000024A                           552  AdrAbsoluteL\@:  
0000024A                           553          MOVE.W  (A2)+, D3
0000024A                           554          printSign
0000024A                           555          adrOut 
0000024A                           556          MOVE.W  (A2)+, D3
0000024A                           557          adrOut
0000024A                           558          MOVE.W  D5, D3
0000024A                           559  
0000024A                           560  complete\@:  ; Opcode has been verified
0000024A                           561          ENDM
0000024A                           562  
0000024A                           563  printCount:     MACRO
0000024A                           564          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           565          LSL     #$04, D1
0000024A                           566          LSR     #$08, D1
0000024A                           567          LSR     #$05, D1
0000024A                           568          LEA     oHash, A1     
0000024A                           569          MOVE.B  #14,D0          
0000024A                           570          TRAP    #15
0000024A                           571          MOVE.B  #3,D0          
0000024A                           572          TRAP    #15
0000024A                           573          ENDM
0000024A                           574  
0000024A                           575  printDnDest:    MACRO 
0000024A                           576          MOVE.W  \1, D1      ; bits 9 to 11
0000024A                           577          LSL     #$04, D1
0000024A                           578          LSR     #$08, D1
0000024A                           579          LSR     #$05, D1
0000024A                           580          LEA     oDn, A1     
0000024A                           581          MOVE.B  #14,D0          
0000024A                           582          TRAP    #15
0000024A                           583          MOVE.B  #3,D0          
0000024A                           584          TRAP    #15
0000024A                           585          ENDM
0000024A                           586  printDnSrc:    MACRO   
0000024A                           587          CLR.L   D1
0000024A                           588          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           589          LSL     #$08, D1
0000024A                           590          LSL     #$05, D1
0000024A                           591          LSR     #$08, D1
0000024A                           592          LSR     #$05, D1
0000024A                           593          LEA     oDn, A1     
0000024A                           594          MOVE.B  #14,D0          
0000024A                           595          TRAP    #15
0000024A                           596          MOVE.B  #3,D0          
0000024A                           597          TRAP    #15
0000024A                           598          ENDM
0000024A                           599  printAnDest:    MACRO
0000024A                           600          MOVE.W  \1, D1
0000024A                           601          LSL     #$04, D1
0000024A                           602          LSR     #$08, D1
0000024A                           603          LSR     #$05, D1
0000024A                           604          LEA     oAn, A1     
0000024A                           605          MOVE.B  #14,D0          
0000024A                           606          TRAP    #15
0000024A                           607          MOVE.B  #3,D0          
0000024A                           608          TRAP    #15
0000024A                           609          ENDM
0000024A                           610  printAnSrc:    MACRO   
0000024A                           611          MOVE.W  \1, D1   ; bits 0 to 2
0000024A                           612          LSL     #$08, D1
0000024A                           613          LSL     #$05, D1
0000024A                           614          LSR     #$08, D1
0000024A                           615          LSR     #$05, D1
0000024A                           616          LEA     oAn, A1     
0000024A                           617          MOVE.B  #14,D0          
0000024A                           618          TRAP    #15
0000024A                           619          MOVE.B  #3,D0          
0000024A                           620          TRAP    #15
0000024A                           621          ENDM
0000024A                           622  printComma:    MACRO
0000024A                           623          LEA     oComma, A1     
0000024A                           624          MOVE.B  #14,D0          
0000024A                           625          TRAP    #15
0000024A                           626          ENDM
0000024A                           627  printPI:    MACRO
0000024A                           628          LEA     oPstInc, A1     
0000024A                           629          MOVE.B  #14,D0          
0000024A                           630          TRAP    #15
0000024A                           631          ENDM
0000024A                           632  printPD:    MACRO
0000024A                           633          LEA     oPreDec, A1     
0000024A                           634          MOVE.B  #14,D0          
0000024A                           635          TRAP    #15
0000024A                           636          ENDM
0000024A                           637  
0000024A                           638  printLB:    MACRO
0000024A                           639          LEA     oLB, A1     
0000024A                           640          MOVE.B  #14,D0          
0000024A                           641          TRAP    #15
0000024A                           642          ENDM
0000024A                           643  printRB:    MACRO
0000024A                           644          LEA     oRB, A1     
0000024A                           645          MOVE.B  #14,D0          
0000024A                           646          TRAP    #15
0000024A                           647          ENDM
0000024A                           648  printSign:  MACRO
0000024A                           649          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           650          MOVE.W  #36, D1     ; An = sign
0000024A                           651          TRAP    #15         ; Output = sign
0000024A                           652          ENDM
0000024A                           653  printHash:  MACRO
0000024A                           654          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000024A                           655          MOVE.W  #35, D1     ; An = sign
0000024A                           656          TRAP    #15         ; Output = sign
0000024A                           657          ENDM
0000024A                           658          
0000024A                           659  space:      MACRO
0000024A                           660          LEA     oBlank, A1
0000024A                           661          MOVE.B  #14,D0          
0000024A                           662          TRAP    #15
0000024A                           663          ENDM
0000024A                           664  newLine:    MACRO
0000024A                           665          LEA     oBlank, A1
0000024A                           666          MOVE.B  #13,D0          
0000024A                           667          TRAP    #15
0000024A                           668          ENDM
0000024A                           669  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000024A                           670  ; "main" routine
0000024A                           671  ; Dylan, Gary
0000024A                           672  ; 
0000024A                           673  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
0000024A                           674  ; ========================================================================
00001000                           675          ORG     $1000
00001000                           676          OPT     MEX
00001000                           677          
00001000  43F8 0000                678  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                679          MOVE.B  #13, D0
00001008  4E4F                     680          TRAP    #15
0000100A                           681m         readInput   D2      ; Read 4 digit hex input
0000100A                           682m         ; READ USER's input
0000100A  103C 0005                683m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     684m         TRAP    #15
00001010                           685mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                686mm         CMPI.B  #$39, D1
00001014  6E00 000A                687mm         BGT     ALPHA_2
00001018  0401 0030                688mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                689mm         BRA     DONE_2
00001020  0401 0037                690mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     691mm DONE_2: NOP
00001026                           692mm         ENDM
00001026  E149                     693m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     694m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     695m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           696m         
0000102C  323C 0000                697m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     698m         TRAP    #15         ; READ SECOND DIGIT
00001032                           699mm         CONVERTATOH D1
00001032  0C01 0039                700mm         CMPI.B  #$39, D1
00001036  6E00 000A                701mm         BGT     ALPHA_3
0000103A  0401 0030                702mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                703mm         BRA     DONE_3
00001042  0401 0037                704mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     705mm DONE_3: NOP
00001048                           706mm         ENDM
00001048  E149                     707m         LSL.W   #8, D1      
0000104A  D441                     708m         ADD.W   D1, D2
0000104C                           709m         
0000104C  323C 0000                710m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     711m         TRAP    #15         ; READ THIRD DIGIT
00001052                           712mm         CONVERTATOH D1
00001052  0C01 0039                713mm         CMPI.B  #$39, D1
00001056  6E00 000A                714mm         BGT     ALPHA_4
0000105A  0401 0030                715mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                716mm         BRA     DONE_4
00001062  0401 0037                717mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     718mm DONE_4: NOP
00001068                           719mm         ENDM
00001068  E949                     720m         LSL.W   #4, D1      
0000106A  D441                     721m         ADD.W   D1, D2
0000106C                           722m         
0000106C  323C 0000                723m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     724m         TRAP    #15         ; READ FINAL DIGIT
00001072                           725mm         CONVERTATOH D1     
00001072  0C01 0039                726mm         CMPI.B  #$39, D1
00001076  6E00 000A                727mm         BGT     ALPHA_5
0000107A  0401 0030                728mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                729mm         BRA     DONE_5
00001082  0401 0037                730mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     731mm DONE_5: NOP
00001088                           732mm         ENDM
00001088  D441                     733m         ADD.W   D1, D2
0000108A  3402                     734m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           735m         ENDM
0000108C  3442                     736          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           737m         newline
0000108E  43F8 00D2                738m         LEA     OBLANK, A1
00001092  103C 000D                739m         MOVE.B  #13,D0          
00001096  4E4F                     740m         TRAP    #15
00001098                           741m         ENDM
00001098                           742          
00001098  43F8 0031                743          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                744          MOVE.B  #13, D0
000010A0  4E4F                     745          TRAP    #15
000010A2                           746m         readInput   D2      ; Read 4 digit hex input
000010A2                           747m         ; READ USER's input
000010A2  103C 0005                748m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     749m         TRAP    #15
000010A8                           750mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                751mm         CMPI.B  #$39, D1
000010AC  6E00 000A                752mm         BGT     ALPHA_8
000010B0  0401 0030                753mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                754mm         BRA     DONE_8
000010B8  0401 0037                755mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     756mm DONE_8: NOP
000010BE                           757mm         ENDM
000010BE  E149                     758m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     759m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     760m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           761m         
000010C4  323C 0000                762m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     763m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           764mm         CONVERTATOH D1
000010CA  0C01 0039                765mm         CMPI.B  #$39, D1
000010CE  6E00 000A                766mm         BGT     ALPHA_9
000010D2  0401 0030                767mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                768mm         BRA     DONE_9
000010DA  0401 0037                769mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     770mm DONE_9: NOP
000010E0                           771mm         ENDM
000010E0  E149                     772m         LSL.W   #8, D1      
000010E2  D441                     773m         ADD.W   D1, D2
000010E4                           774m         
000010E4  323C 0000                775m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     776m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           777mm         CONVERTATOH D1
000010EA  0C01 0039                778mm         CMPI.B  #$39, D1
000010EE  6E00 000A                779mm         BGT     ALPHA_10
000010F2  0401 0030                780mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                781mm         BRA     DONE_10
000010FA  0401 0037                782mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     783mm DONE_10: NOP
00001100                           784mm         ENDM
00001100  E949                     785m         LSL.W   #4, D1      
00001102  D441                     786m         ADD.W   D1, D2
00001104                           787m         
00001104  323C 0000                788m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     789m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           790mm         CONVERTATOH D1     
0000110A  0C01 0039                791mm         CMPI.B  #$39, D1
0000110E  6E00 000A                792mm         BGT     ALPHA_11
00001112  0401 0030                793mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                794mm         BRA     DONE_11
0000111A  0401 0037                795mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     796mm DONE_11: NOP
00001120                           797mm         ENDM
00001120  D441                     798m         ADD.W   D1, D2
00001122  3402                     799m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           800m         ENDM
00001124  31C2 0500                801          MOVE.W  D2, ($500)  ; Store at mem location $500
00001128                           802m         newline
00001128  43F8 00D2                803m         LEA     OBLANK, A1
0000112C  103C 000D                804m         MOVE.B  #13,D0          
00001130  4E4F                     805m         TRAP    #15
00001132                           806m         ENDM
00001132                           807m         newline
00001132  43F8 00D2                808m         LEA     OBLANK, A1
00001136  103C 000D                809m         MOVE.B  #13,D0          
0000113A  4E4F                     810m         TRAP    #15
0000113C                           811m         ENDM
0000113C                           812          
0000113C  7200                     813  goLoop: MOVE.L  #0, D1
0000113E  3238 0500                814          MOVE.W  ($500), D1
00001142  240A                     815          MOVE.L  A2, D2
00001144  B282                     816          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 0016                817          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A  4EB9 00001162            818          JSR     identifyOpcode  ; Decode what is at A2
00001150  381A                     819          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
00001152                           820m         newline
00001152  43F8 00D2                821m         LEA     OBLANK, A1
00001156  103C 000D                822m         MOVE.B  #13,D0          
0000115A  4E4F                     823m         TRAP    #15
0000115C                           824m         ENDM
0000115C  60DE                     825          BRA     goLoop
0000115E                           826          
0000115E                           827          
0000115E                           828          
0000115E  FFFF FFFF                829  endSim: SIMHALT             ; halt simulator
00001162                           830          
00001162                           831          
00001162                           832  ; ========================================================================
00001162                           833  ; "identifyOpcode" subroutine
00001162                           834  ; Jonathan
00001162                           835  ; 
00001162                           836  ; Reads the Word at A2 and determines which opcode it represents.
00001162                           837  ; When the opcode is identified, the appropriate "decodeX" subroutine
00001162                           838  ; is invoked.
00001162                           839  ;
00001162                           840  ; Uses a generated Trie structure to determine where to split on which bits
00001162                           841  ; in order to efficiently identify the exact opcode
00001162                           842  ; ========================================================================
00001162                           843  identifyOpcode:
00001162  3612                     844          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001164  0803 000F                845          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001168  6700 0006                846          BEQ     split0      ; Split based on the first bit
0000116C  6000 0082                847          BRA     split1
00001170                           848  
00001170                           849  split0: 
00001170  0803 000E                850          BTST    #$E, D3     ; Check the 2nd bit
00001174  6700 0006                851          BEQ     split000    ; MOVE follows 00+        
00001178  6000 0016                852          BRA     split01
0000117C                           853          
0000117C                           854  split000:        
0000117C  0803 000D                855          BTST    #$D, D3     ; Check the 3rd bit
00001180  6600 012E                856          BNE     decodeMOVE
00001184  0803 000C                857          BTST    #$C, D3     ; Check the 3rd bit
00001188  6600 0126                858          BNE     decodeMOVE
0000118C  6000 5948                859          BRA     outputData
00001190                           860  split01:
00001190  0803 000D                861          BTST    #$D, D3     ; Check the 3rd bit
00001194  6700 0006                862          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001198  6000 0032                863          BRA     split0110   ; Code is 011, but all subcodes are 0110        
0000119C                           864  
0000119C                           865  split0100:
0000119C  0803 0008                866          BTST    #$8, D3     ; Check the 8th bit for LEA
000011A0  6600 3470                867          BNE     decodeLEA   ; LEA follows 0100XXX1+
000011A4  0803 000B                868          BTST    #$B, D3     ; Check the 5th bit for NOT
000011A8  6700 47AE                869          BEQ     decodeNOT   ; NOT follows 01000+
000011AC  0803 0009                870          BTST    #$9, D3     ; Check the 7th bit
000011B0  6700 0D2E                871          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
000011B4  6000 0002                872          BRA     split0100111
000011B8                           873  
000011B8                           874  split0100111:
000011B8  0803 0007                875          BTST    #$7, D3     ; Check the 9th bit for JSR
000011BC  6600 5270                876          BNE     decodeJSR   ; JSR follows 010011101+
000011C0  0803 0002                877          BTST    #$2, D3     ; Check the 14th bit
000011C4  6700 00A2                878          BEQ     decodeNOP   ; NOP follows 01001110011100+
000011C8  6000 5886                879          BRA     decodeRTS   ; RTS follows 01001110011101+
000011CC                           880  
000011CC                           881  split0110:
000011CC  0803 000B                882          BTST    #$B, D3     ; Check the 5th bit
000011D0  6700 0006                883          BEQ     split01100
000011D4  6000 000E                884          BRA     split01101
000011D8                           885  
000011D8                           886  split01100:
000011D8  0803 000A                887          BTST    #$A, D3     ; Check the 6th bit
000011DC  6700 58BA                888          BEQ     decodeBRA   ; BRA starts with 011000
000011E0  6000 5192                889          BRA     decodeBEQ   ; BEQ starts with 011001
000011E4                           890          
000011E4                           891  split01101:
000011E4  0803 0008                892          BTST    #$8, D3     ; Check the 8th bit
000011E8  6700 51C8                893          BEQ     decodeBGE   ; BGE starts with 01101100
000011EC  6000 5202                894          BRA     decodeBLT   ; BLT starts with 01101101
000011F0                           895          
000011F0                           896  split1: 
000011F0  0803 000E                897          BTST    #$E, D3     ; Check the 2nd bit
000011F4  6700 0006                898          BEQ     split10
000011F8  6000 000E                899          BRA     split11
000011FC                           900  
000011FC                           901  split10:
000011FC  0803 000C                902          BTST    #$C, D3     ; Check the 4th bit
00001200  6700 2D98                903          BEQ     decodeDIVU  ; DIVU follows 1000+
00001204  6000 1A1A                904          BRA     decodeSUB   ; SUB follows 1001+
00001208                           905  
00001208                           906  split11:
00001208  0803 000D                907          BTST    #$D, D3     ; Check the 3rd bit
0000120C  6700 0006                908          BEQ     split110
00001210  6000 0026                909          BRA     split111
00001214                           910  
00001214                           911  split110:
00001214  0803 000C                912          BTST    #$C, D3     ; Check the 4th bit for ADD
00001218  6600 0D04                913          BNE     decodeADD   ; ADD follows 1101+
0000121C  0803 0008                914          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
00001220  6700 3A34                915          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
00001224  0803 0007                916          BTST    #$7, D3
00001228  6700 3A2C                917          BEQ     decodeAND
0000122C  0803 0006                918          BTST    #$6, D3
00001230  6700 3A24                919          BEQ     decodeAND
00001234  6000 26EC                920          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
00001238                           921  
00001238                           922  split111: 
00001238  0803 0003                923          BTST    #$3, D3     ; Check 13th bit
0000123C  6700 001A                924          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
00001240                           925     
00001240  0803 0005                926          BTST    #$5, D3     
00001244  6600 0006                927          BNE     logReg     
00001248  6000 4D5E                928          BRA     decodeLSx_M
0000124C  0803 000C                929  logReg: BTST    #12, D3         
00001250  6700 4E2A                930          BEQ     decodeLSx_R
00001254  6000 5880                931          BRA     outputData
00001258                           932  
00001258                           933  ariShift: ; Special split specifically for Arithmetic Shift
00001258  0803 0005                934          BTST    #$5, D3     
0000125C  6600 0006                935          BNE     ariReg
00001260  6000 4F2C                936          BRA     decodeASx_M    
00001264  6000 4FFC                937  ariReg: BRA     decodeASx_R
00001268                           938              
00001268                           939  
00001268                           940  ; ========================================================================
00001268                           941  ; "decodeX" subroutines
00001268                           942  ; Gary, Dylan
00001268                           943  ; 
00001268                           944  ; Set of subroutines which are invoked by identifyOpcode.
00001268                           945  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
00001268                           946  ; the instruction.
00001268                           947  ;
00001268                           948  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
00001268                           949  ; opcode) to record the parameters (such as destination register). If the
00001268                           950  ; opcode indicates that the next word represents a destination address, then
00001268                           951  ; decodeLEA will advance A2 to the next word and decode that.
00001268                           952  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
00001268                           953  ; ========================================================================
00001268                           954  
00001268                           955  ; ------------------------------------------------------------
00001268                           956  ; 1. "decodeNOP" subroutine
00001268                           957  ; AUTHOR
00001268                           958  ;
00001268                           959  ; TODO: DESCRIPTION
00001268                           960  ; ------------------------------------------------------------
00001268                           961  decodeNOP:
00001268                           962m         verifyOpcode    pNOP, (A2)
00001268  43F8 00D4                963m         LEA     PNOP, A1      ; INPUT PATTERN STRING
0000126C  3612                     964m         MOVE.W  (A2), D3      ; INPUT VALUE
0000126E  123C 000F                965m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001272                           966m         
00001272                           967m LOOP_15: 
00001272  0C11 0030                968m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001276  6700 000E                969m         BEQ     CHECKFOR0_15
0000127A  0C11 0031                970m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000127E  6700 0010                971m         BEQ     CHECKFOR1_15
00001282  6000 0012                972m         BRA     NEXT_15      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001286                           973m         
00001286                           974m CHECKFOR0_15: 
00001286  0303                     975m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001288  6600 584C                976m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000128C  6000 0008                977m         BRA     NEXT_15
00001290                           978m 
00001290                           979m CHECKFOR1_15:
00001290  0303                     980m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001292  6700 5842                981m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001296                           982m 
00001296                           983m NEXT_15: 
00001296  B23C 0000                984m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000129A  6700 0008                985m         BEQ     COMPLETE_15  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000129E  5301                     986m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012A0  1819                     987m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012A2  60CE                     988m         BRA     LOOP_15      ; BEGIN LOOP AGAIN
000012A4                           989m 
000012A4                           990m COMPLETE_15:  ; OPCODE HAS BEEN VERIFIED
000012A4                           991m         ENDM
000012A4  43F8 0060                992          LEA     oNOP, A1     ; Loads byteVAR
000012A8  103C 000E                993          MOVE.B  #14,D0          
000012AC  4E4F                     994          TRAP    #15
000012AE  4E75                     995          RTS                 ; Return from decodeNOP subroutine
000012B0                           996  
000012B0                           997  
000012B0                           998  ; ------------------------------------------------------------
000012B0                           999  ; 2. "decodeMOVE" subroutine
000012B0                          1000  ; AUTHOR
000012B0                          1001  ;
000012B0                          1002  ; TODO: DESCRIPTION
000012B0                          1003  ; ------------------------------------------------------------
000012B0                          1004  decodeMOVE:
000012B0                          1005m         verifyOpcode    pMOVE, (A2)
000012B0  43F8 00E5               1006m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
000012B4  3612                    1007m         MOVE.W  (A2), D3      ; INPUT VALUE
000012B6  123C 000F               1008m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000012BA                          1009m         
000012BA                          1010m LOOP_16: 
000012BA  0C11 0030               1011m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000012BE  6700 000E               1012m         BEQ     CHECKFOR0_16
000012C2  0C11 0031               1013m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000012C6  6700 0010               1014m         BEQ     CHECKFOR1_16
000012CA  6000 0012               1015m         BRA     NEXT_16      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000012CE                          1016m         
000012CE                          1017m CHECKFOR0_16: 
000012CE  0303                    1018m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000012D0  6600 5804               1019m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000012D4  6000 0008               1020m         BRA     NEXT_16
000012D8                          1021m 
000012D8                          1022m CHECKFOR1_16:
000012D8  0303                    1023m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000012DA  6700 57FA               1024m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000012DE                          1025m 
000012DE                          1026m NEXT_16: 
000012DE  B23C 0000               1027m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000012E2  6700 0008               1028m         BEQ     COMPLETE_16  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000012E6  5301                    1029m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000012E8  1819                    1030m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000012EA  60CE                    1031m         BRA     LOOP_16      ; BEGIN LOOP AGAIN
000012EC                          1032m 
000012EC                          1033m COMPLETE_16:  ; OPCODE HAS BEEN VERIFIED
000012EC                          1034m         ENDM
000012EC  43F8 0064               1035          LEA     oMOVE, A1     
000012F0  103C 000E               1036          MOVE.B  #14,D0          
000012F4  4E4F                    1037          TRAP    #15
000012F6                          1038m         printSize       (A2)
000012F6  3612                    1039m         MOVE.W  (A2), D3      ; INPUT VALUE
000012F8  4247                    1040m         CLR     D7      
000012FA                          1041m CHECKFORB_17: 
000012FA  0803 000D               1042m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000012FE  6600 0010               1043m         BNE     CHECKFORW_17  ; IF NOT GO TO WORD SIZE
00001302  43F8 00B5               1044m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00001306  103C 000E               1045m         MOVE.B  #14,D0          
0000130A  4E4F                    1046m         TRAP    #15
0000130C  6000 0026               1047m         BRA     COMPLETE_17      
00001310                          1048m CHECKFORW_17: 
00001310  0803 000C               1049m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00001314  6700 0010               1050m         BEQ     CHECKFORL_17  ; IF NOT, SIZE CANNOT BE WORD
00001318  43F8 00B9               1051m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000131C  103C 000E               1052m         MOVE.B  #14,D0          
00001320  4E4F                    1053m         TRAP    #15
00001322  6000 0010               1054m         BRA     COMPLETE_17  
00001326                          1055m CHECKFORL_17:
00001326  1E3C 0001               1056m         MOVE.B  #$1, D7
0000132A  43F8 00BD               1057m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
0000132E  103C 000E               1058m         MOVE.B  #14,D0          
00001332  4E4F                    1059m         TRAP    #15
00001334                          1060m COMPLETE_17:  ; SIZE HAS BEEN PRINTED
00001334                          1061m         ENDM
00001334                          1062m         prepareAdrMode  #$1, (A2)
00001334  3C3C 0001               1063m         MOVE.W  #$1, D6      ; INPUT VALUE
00001338  3212                    1064m         MOVE.W  (A2), D1
0000133A  BC3C 0001               1065m         CMP.B   #$01, D6
0000133E  6700 000C               1066m         BEQ     ADRSOURCE_18    
00001342                          1067m ADRDEST_18:
00001342  EF49                    1068m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00001344  E049                    1069m         LSR     #$08, D1
00001346  EA49                    1070m         LSR     #$05, D1
00001348  6000 000A               1071m         BRA     COMPLETE_18 
0000134C                          1072m ADRSOURCE_18:                
0000134C  E149                    1073m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000134E  E549                    1074m         LSL     #$02, D1
00001350  E049                    1075m         LSR     #$08, D1
00001352  EA49                    1076m         LSR     #$05, D1
00001354                          1077m COMPLETE_18:  ; OPCODE HAS BEEN VERIFIED
00001354                          1078m         ENDM        
00001354                          1079m         decodeAdrMode   (A2), D1
00001354  3612                    1080m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00001356  3201                    1081m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001358                          1082m 
00001358  B23C 0001               1083m         CMP.B   #$01, D1
0000135C  6700 0066               1084m         BEQ     ADRREGDIRECT_19    
00001360  B23C 0002               1085m         CMP.B   #$02, D1
00001364  6700 00A0               1086m         BEQ     ADRREGINDIRECT_19  
00001368  B23C 0003               1087m         CMP.B   #$03, D1
0000136C  6700 0102               1088m         BEQ     ADRREGPOSTINC_19  
00001370  B23C 0004               1089m         CMP.B   #$04, D1
00001374  6700 0178               1090m         BEQ     ADRREGPREDEC_19
00001378  B23C 0007               1091m         CMP.B   #$07, D1
0000137C  6700 01EE               1092m         BEQ     ADRABSOLUTE_19    
00001380                          1093m         
00001380                          1094m DATAREGDIRECT_19: 
00001380  BC3C 0001               1095m         CMP.B   #$01, D6
00001384  6700 001E               1096m         BEQ     DATAREGDIRECTSRC_19   
00001388                          1097m DATAREGDIRECTDEST_19: 
00001388                          1098mm         PRINTDNDEST D3 
00001388  3203                    1099mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000138A  E949                    1100mm         LSL     #$04, D1
0000138C  E049                    1101mm         LSR     #$08, D1
0000138E  EA49                    1102mm         LSR     #$05, D1
00001390  43F8 00C1               1103mm         LEA     ODN, A1     
00001394  103C 000E               1104mm         MOVE.B  #14,D0          
00001398  4E4F                    1105mm         TRAP    #15
0000139A  103C 0003               1106mm         MOVE.B  #3,D0          
0000139E  4E4F                    1107mm         TRAP    #15
000013A0                          1108mm         ENDM
000013A0  6000 0562               1109m         BRA     COMPLETE_19 
000013A4                          1110m DATAREGDIRECTSRC_19: 
000013A4                          1111mm         PRINTDNSRC D3 
000013A4  4281                    1112mm         CLR.L   D1
000013A6  3203                    1113mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013A8  E149                    1114mm         LSL     #$08, D1
000013AA  EB49                    1115mm         LSL     #$05, D1
000013AC  E049                    1116mm         LSR     #$08, D1
000013AE  EA49                    1117mm         LSR     #$05, D1
000013B0  43F8 00C1               1118mm         LEA     ODN, A1     
000013B4  103C 000E               1119mm         MOVE.B  #14,D0          
000013B8  4E4F                    1120mm         TRAP    #15
000013BA  103C 0003               1121mm         MOVE.B  #3,D0          
000013BE  4E4F                    1122mm         TRAP    #15
000013C0                          1123mm         ENDM
000013C0  6000 0542               1124m         BRA     COMPLETE_19   
000013C4                          1125m         
000013C4                          1126m ADRREGDIRECT_19: 
000013C4  BC3C 0001               1127m         CMP.B   #$01, D6
000013C8  6700 001E               1128m         BEQ     ADRREGDIRECTSRC_19   
000013CC                          1129m ADRREGDIRECTDEST_19:
000013CC                          1130mm         PRINTANDEST D3
000013CC  3203                    1131mm         MOVE.W  D3, D1
000013CE  E949                    1132mm         LSL     #$04, D1
000013D0  E049                    1133mm         LSR     #$08, D1
000013D2  EA49                    1134mm         LSR     #$05, D1
000013D4  43F8 00C3               1135mm         LEA     OAN, A1     
000013D8  103C 000E               1136mm         MOVE.B  #14,D0          
000013DC  4E4F                    1137mm         TRAP    #15
000013DE  103C 0003               1138mm         MOVE.B  #3,D0          
000013E2  4E4F                    1139mm         TRAP    #15
000013E4                          1140mm         ENDM
000013E4  6000 051E               1141m         BRA     COMPLETE_19   
000013E8                          1142m ADRREGDIRECTSRC_19:
000013E8                          1143mm         PRINTANSRC D3
000013E8  3203                    1144mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000013EA  E149                    1145mm         LSL     #$08, D1
000013EC  EB49                    1146mm         LSL     #$05, D1
000013EE  E049                    1147mm         LSR     #$08, D1
000013F0  EA49                    1148mm         LSR     #$05, D1
000013F2  43F8 00C3               1149mm         LEA     OAN, A1     
000013F6  103C 000E               1150mm         MOVE.B  #14,D0          
000013FA  4E4F                    1151mm         TRAP    #15
000013FC  103C 0003               1152mm         MOVE.B  #3,D0          
00001400  4E4F                    1153mm         TRAP    #15
00001402                          1154mm         ENDM
00001402  6000 0500               1155m         BRA     COMPLETE_19   
00001406                          1156m        
00001406                          1157m ADRREGINDIRECT_19:   
00001406  BC3C 0001               1158m         CMP.B   #$01, D6
0000140A  6700 0032               1159m         BEQ     ADRREGINDIRECTSRC_19   
0000140E                          1160m ADRREGINDIRECTDEST_19:
0000140E                          1161mm         PRINTLB
0000140E  43F8 00C5               1162mm         LEA     OLB, A1     
00001412  103C 000E               1163mm         MOVE.B  #14,D0          
00001416  4E4F                    1164mm         TRAP    #15
00001418                          1165mm         ENDM
00001418                          1166mm         PRINTANDEST D3  
00001418  3203                    1167mm         MOVE.W  D3, D1
0000141A  E949                    1168mm         LSL     #$04, D1
0000141C  E049                    1169mm         LSR     #$08, D1
0000141E  EA49                    1170mm         LSR     #$05, D1
00001420  43F8 00C3               1171mm         LEA     OAN, A1     
00001424  103C 000E               1172mm         MOVE.B  #14,D0          
00001428  4E4F                    1173mm         TRAP    #15
0000142A  103C 0003               1174mm         MOVE.B  #3,D0          
0000142E  4E4F                    1175mm         TRAP    #15
00001430                          1176mm         ENDM
00001430                          1177mm         PRINTRB
00001430  43F8 00C7               1178mm         LEA     ORB, A1     
00001434  103C 000E               1179mm         MOVE.B  #14,D0          
00001438  4E4F                    1180mm         TRAP    #15
0000143A                          1181mm         ENDM
0000143A  6000 04C8               1182m         BRA     COMPLETE_19     
0000143E                          1183m ADRREGINDIRECTSRC_19:   
0000143E                          1184mm         PRINTLB
0000143E  43F8 00C5               1185mm         LEA     OLB, A1     
00001442  103C 000E               1186mm         MOVE.B  #14,D0          
00001446  4E4F                    1187mm         TRAP    #15
00001448                          1188mm         ENDM
00001448                          1189mm         PRINTANSRC D3  
00001448  3203                    1190mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144A  E149                    1191mm         LSL     #$08, D1
0000144C  EB49                    1192mm         LSL     #$05, D1
0000144E  E049                    1193mm         LSR     #$08, D1
00001450  EA49                    1194mm         LSR     #$05, D1
00001452  43F8 00C3               1195mm         LEA     OAN, A1     
00001456  103C 000E               1196mm         MOVE.B  #14,D0          
0000145A  4E4F                    1197mm         TRAP    #15
0000145C  103C 0003               1198mm         MOVE.B  #3,D0          
00001460  4E4F                    1199mm         TRAP    #15
00001462                          1200mm         ENDM
00001462                          1201mm         PRINTRB
00001462  43F8 00C7               1202mm         LEA     ORB, A1     
00001466  103C 000E               1203mm         MOVE.B  #14,D0          
0000146A  4E4F                    1204mm         TRAP    #15
0000146C                          1205mm         ENDM
0000146C  6000 0496               1206m         BRA     COMPLETE_19   
00001470                          1207m         
00001470                          1208m ADRREGPOSTINC_19:   
00001470  BC3C 0001               1209m         CMP.B   #$01, D6
00001474  6700 003C               1210m         BEQ     ADRREGPOSTINCSRC_19   
00001478                          1211m ADRREGPOSTINCDEST_19: 
00001478                          1212mm         PRINTLB
00001478  43F8 00C5               1213mm         LEA     OLB, A1     
0000147C  103C 000E               1214mm         MOVE.B  #14,D0          
00001480  4E4F                    1215mm         TRAP    #15
00001482                          1216mm         ENDM
00001482                          1217mm         PRINTANDEST D3  
00001482  3203                    1218mm         MOVE.W  D3, D1
00001484  E949                    1219mm         LSL     #$04, D1
00001486  E049                    1220mm         LSR     #$08, D1
00001488  EA49                    1221mm         LSR     #$05, D1
0000148A  43F8 00C3               1222mm         LEA     OAN, A1     
0000148E  103C 000E               1223mm         MOVE.B  #14,D0          
00001492  4E4F                    1224mm         TRAP    #15
00001494  103C 0003               1225mm         MOVE.B  #3,D0          
00001498  4E4F                    1226mm         TRAP    #15
0000149A                          1227mm         ENDM
0000149A                          1228mm         PRINTRB
0000149A  43F8 00C7               1229mm         LEA     ORB, A1     
0000149E  103C 000E               1230mm         MOVE.B  #14,D0          
000014A2  4E4F                    1231mm         TRAP    #15
000014A4                          1232mm         ENDM
000014A4                          1233mm         PRINTPI
000014A4  43F8 00CE               1234mm         LEA     OPSTINC, A1     
000014A8  103C 000E               1235mm         MOVE.B  #14,D0          
000014AC  4E4F                    1236mm         TRAP    #15
000014AE                          1237mm         ENDM
000014AE  6000 0454               1238m         BRA     COMPLETE_19  
000014B2                          1239m ADRREGPOSTINCSRC_19:           
000014B2                          1240mm         PRINTLB
000014B2  43F8 00C5               1241mm         LEA     OLB, A1     
000014B6  103C 000E               1242mm         MOVE.B  #14,D0          
000014BA  4E4F                    1243mm         TRAP    #15
000014BC                          1244mm         ENDM
000014BC                          1245mm         PRINTANSRC D3  
000014BC  3203                    1246mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014BE  E149                    1247mm         LSL     #$08, D1
000014C0  EB49                    1248mm         LSL     #$05, D1
000014C2  E049                    1249mm         LSR     #$08, D1
000014C4  EA49                    1250mm         LSR     #$05, D1
000014C6  43F8 00C3               1251mm         LEA     OAN, A1     
000014CA  103C 000E               1252mm         MOVE.B  #14,D0          
000014CE  4E4F                    1253mm         TRAP    #15
000014D0  103C 0003               1254mm         MOVE.B  #3,D0          
000014D4  4E4F                    1255mm         TRAP    #15
000014D6                          1256mm         ENDM
000014D6                          1257mm         PRINTRB
000014D6  43F8 00C7               1258mm         LEA     ORB, A1     
000014DA  103C 000E               1259mm         MOVE.B  #14,D0          
000014DE  4E4F                    1260mm         TRAP    #15
000014E0                          1261mm         ENDM
000014E0                          1262mm         PRINTPI
000014E0  43F8 00CE               1263mm         LEA     OPSTINC, A1     
000014E4  103C 000E               1264mm         MOVE.B  #14,D0          
000014E8  4E4F                    1265mm         TRAP    #15
000014EA                          1266mm         ENDM
000014EA  6000 0418               1267m         BRA     COMPLETE_19  
000014EE                          1268m ADRREGPREDEC_19: 
000014EE  BC3C 0001               1269m         CMP.B   #$01, D6
000014F2  6700 003C               1270m         BEQ     ADRREGPREDECSRC_19   
000014F6                          1271m ADRREGPREDECDEST_19:
000014F6                          1272mm         PRINTPD  
000014F6  43F8 00CC               1273mm         LEA     OPREDEC, A1     
000014FA  103C 000E               1274mm         MOVE.B  #14,D0          
000014FE  4E4F                    1275mm         TRAP    #15
00001500                          1276mm         ENDM
00001500                          1277mm         PRINTLB
00001500  43F8 00C5               1278mm         LEA     OLB, A1     
00001504  103C 000E               1279mm         MOVE.B  #14,D0          
00001508  4E4F                    1280mm         TRAP    #15
0000150A                          1281mm         ENDM
0000150A                          1282mm         PRINTANDEST D3  
0000150A  3203                    1283mm         MOVE.W  D3, D1
0000150C  E949                    1284mm         LSL     #$04, D1
0000150E  E049                    1285mm         LSR     #$08, D1
00001510  EA49                    1286mm         LSR     #$05, D1
00001512  43F8 00C3               1287mm         LEA     OAN, A1     
00001516  103C 000E               1288mm         MOVE.B  #14,D0          
0000151A  4E4F                    1289mm         TRAP    #15
0000151C  103C 0003               1290mm         MOVE.B  #3,D0          
00001520  4E4F                    1291mm         TRAP    #15
00001522                          1292mm         ENDM
00001522                          1293mm         PRINTRB
00001522  43F8 00C7               1294mm         LEA     ORB, A1     
00001526  103C 000E               1295mm         MOVE.B  #14,D0          
0000152A  4E4F                    1296mm         TRAP    #15
0000152C                          1297mm         ENDM
0000152C  6000 03D6               1298m         BRA     COMPLETE_19   
00001530                          1299m ADRREGPREDECSRC_19: 
00001530                          1300mm         PRINTPD  
00001530  43F8 00CC               1301mm         LEA     OPREDEC, A1     
00001534  103C 000E               1302mm         MOVE.B  #14,D0          
00001538  4E4F                    1303mm         TRAP    #15
0000153A                          1304mm         ENDM
0000153A                          1305mm         PRINTLB
0000153A  43F8 00C5               1306mm         LEA     OLB, A1     
0000153E  103C 000E               1307mm         MOVE.B  #14,D0          
00001542  4E4F                    1308mm         TRAP    #15
00001544                          1309mm         ENDM
00001544                          1310mm         PRINTANSRC D3  
00001544  3203                    1311mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001546  E149                    1312mm         LSL     #$08, D1
00001548  EB49                    1313mm         LSL     #$05, D1
0000154A  E049                    1314mm         LSR     #$08, D1
0000154C  EA49                    1315mm         LSR     #$05, D1
0000154E  43F8 00C3               1316mm         LEA     OAN, A1     
00001552  103C 000E               1317mm         MOVE.B  #14,D0          
00001556  4E4F                    1318mm         TRAP    #15
00001558  103C 0003               1319mm         MOVE.B  #3,D0          
0000155C  4E4F                    1320mm         TRAP    #15
0000155E                          1321mm         ENDM
0000155E                          1322mm         PRINTRB
0000155E  43F8 00C7               1323mm         LEA     ORB, A1     
00001562  103C 000E               1324mm         MOVE.B  #14,D0          
00001566  4E4F                    1325mm         TRAP    #15
00001568                          1326mm         ENDM
00001568  6000 039A               1327m         BRA     COMPLETE_19
0000156C                          1328m        
0000156C                          1329m ADRABSOLUTE_19:
0000156C  BC3C 0001               1330m         CMP.B   #$01, D6
00001570  6600 0018               1331m         BNE     ADRABSOLUTEDST_19 
00001574                          1332m         
00001574  3A03                    1333m         MOVE.W  D3, D5
00001576  0803 0002               1334m         BTST    #2, D3
0000157A  6600 0024               1335m         BNE     ADRIMMEDIATE_19
0000157E  0803 0000               1336m         BTST    #0, D3
00001582  6600 0270               1337m         BNE     ADRABSOLUTEL_19
00001586  6000 01DA               1338m         BRA     ADRABSOLUTEW_19
0000158A                          1339m ADRABSOLUTEDST_19:
0000158A  3A03                    1340m         MOVE.W  D3, D5
0000158C  0803 000B               1341m         BTST    #$B, D3
00001590  6600 000E               1342m         BNE     ADRIMMEDIATE_19
00001594  0803 0009               1343m         BTST    #$09, D3
00001598  6600 025A               1344m         BNE     ADRABSOLUTEL_19
0000159C  6000 01C4               1345m         BRA     ADRABSOLUTEW_19
000015A0                          1346m ADRIMMEDIATE_19:
000015A0  BE3C 0001               1347m         CMP.B   #1, D7
000015A4  6700 009E               1348m         BEQ     ADRIMMEDIATEL_19
000015A8                          1349m ADRIMMEDIATEW_19:
000015A8  361A                    1350m         MOVE.W  (A2)+, D3
000015AA                          1351mm         PRINTHASH
000015AA  103C 0006               1352mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015AE  323C 0023               1353mm         MOVE.W  #35, D1     ; AN = SIGN
000015B2  4E4F                    1354mm         TRAP    #15         ; OUTPUT = SIGN
000015B4                          1355mm         ENDM
000015B4                          1356mm         PRINTSIGN
000015B4  103C 0006               1357mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000015B8  323C 0024               1358mm         MOVE.W  #36, D1     ; AN = SIGN
000015BC  4E4F                    1359mm         TRAP    #15         ; OUTPUT = SIGN
000015BE                          1360mm         ENDM
000015BE                          1361mm         ADROUT
000015BE  3212                    1362mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015C0  E049                    1363mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015C2  E849                    1364mm         LSR.W   #4, D1      
000015C4                          1365mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015C4  0C01 0009               1366mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015C8  6E00 000A               1367mmm         BGT     ALPHA_49
000015CC  0601 0030               1368mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015D0  6000 0006               1369mmm         BRA     DONE_49
000015D4  0601 0037               1370mmm ALPHA_49: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015D8  4E71                    1371mmm DONE_49: NOP
000015DA                          1372mmm         ENDM
000015DA  4E4F                    1373mm         TRAP    #15         ; EXECUTE OUTPUT
000015DC                          1374mm         
000015DC  3212                    1375mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015DE  E949                    1376mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000015E0  E049                    1377mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000015E2  E849                    1378mm         LSR.W   #4, D1      
000015E4                          1379mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000015E4  0C01 0009               1380mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000015E8  6E00 000A               1381mmm         BGT     ALPHA_50
000015EC  0601 0030               1382mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000015F0  6000 0006               1383mmm         BRA     DONE_50
000015F4  0601 0037               1384mmm ALPHA_50: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000015F8  4E71                    1385mmm DONE_50: NOP
000015FA                          1386mmm         ENDM
000015FA  4E4F                    1387mm         TRAP    #15         ; EXECUTE OUTPUT
000015FC                          1388mm         
000015FC  3212                    1389mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000015FE  E149                    1390mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001600  E049                    1391mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001602  E849                    1392mm         LSR.W   #4, D1      
00001604                          1393mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001604  0C01 0009               1394mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001608  6E00 000A               1395mmm         BGT     ALPHA_51
0000160C  0601 0030               1396mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001610  6000 0006               1397mmm         BRA     DONE_51
00001614  0601 0037               1398mmm ALPHA_51: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001618  4E71                    1399mmm DONE_51: NOP
0000161A                          1400mmm         ENDM
0000161A  4E4F                    1401mm         TRAP    #15         ; EXECUTE OUTPUT
0000161C                          1402mm         
0000161C  3212                    1403mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000161E  E149                    1404mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001620  E949                    1405mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001622  E049                    1406mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001624  E849                    1407mm         LSR.W   #4, D1      
00001626                          1408mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001626  0C01 0009               1409mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000162A  6E00 000A               1410mmm         BGT     ALPHA_52
0000162E  0601 0030               1411mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001632  6000 0006               1412mmm         BRA     DONE_52
00001636  0601 0037               1413mmm ALPHA_52: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000163A  4E71                    1414mmm DONE_52: NOP
0000163C                          1415mmm         ENDM
0000163C  4E4F                    1416mm         TRAP    #15         ; EXECUTE OUTPUT       
0000163E                          1417mm         ENDM 
0000163E  3605                    1418m         MOVE.W  D5, D3
00001640  6000 02C2               1419m         BRA     COMPLETE_19
00001644                          1420m ADRIMMEDIATEL_19:
00001644  361A                    1421m         MOVE.W  (A2)+, D3
00001646                          1422mm         PRINTHASH
00001646  103C 0006               1423mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000164A  323C 0023               1424mm         MOVE.W  #35, D1     ; AN = SIGN
0000164E  4E4F                    1425mm         TRAP    #15         ; OUTPUT = SIGN
00001650                          1426mm         ENDM
00001650                          1427mm         PRINTSIGN
00001650  103C 0006               1428mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001654  323C 0024               1429mm         MOVE.W  #36, D1     ; AN = SIGN
00001658  4E4F                    1430mm         TRAP    #15         ; OUTPUT = SIGN
0000165A                          1431mm         ENDM
0000165A                          1432mm         ADROUT 
0000165A  3212                    1433mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000165C  E049                    1434mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000165E  E849                    1435mm         LSR.W   #4, D1      
00001660                          1436mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001660  0C01 0009               1437mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001664  6E00 000A               1438mmm         BGT     ALPHA_56
00001668  0601 0030               1439mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000166C  6000 0006               1440mmm         BRA     DONE_56
00001670  0601 0037               1441mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001674  4E71                    1442mmm DONE_56: NOP
00001676                          1443mmm         ENDM
00001676  4E4F                    1444mm         TRAP    #15         ; EXECUTE OUTPUT
00001678                          1445mm         
00001678  3212                    1446mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000167A  E949                    1447mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000167C  E049                    1448mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000167E  E849                    1449mm         LSR.W   #4, D1      
00001680                          1450mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001680  0C01 0009               1451mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001684  6E00 000A               1452mmm         BGT     ALPHA_57
00001688  0601 0030               1453mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000168C  6000 0006               1454mmm         BRA     DONE_57
00001690  0601 0037               1455mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001694  4E71                    1456mmm DONE_57: NOP
00001696                          1457mmm         ENDM
00001696  4E4F                    1458mm         TRAP    #15         ; EXECUTE OUTPUT
00001698                          1459mm         
00001698  3212                    1460mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000169A  E149                    1461mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000169C  E049                    1462mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000169E  E849                    1463mm         LSR.W   #4, D1      
000016A0                          1464mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016A0  0C01 0009               1465mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016A4  6E00 000A               1466mmm         BGT     ALPHA_58
000016A8  0601 0030               1467mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016AC  6000 0006               1468mmm         BRA     DONE_58
000016B0  0601 0037               1469mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016B4  4E71                    1470mmm DONE_58: NOP
000016B6                          1471mmm         ENDM
000016B6  4E4F                    1472mm         TRAP    #15         ; EXECUTE OUTPUT
000016B8                          1473mm         
000016B8  3212                    1474mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016BA  E149                    1475mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016BC  E949                    1476mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016BE  E049                    1477mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016C0  E849                    1478mm         LSR.W   #4, D1      
000016C2                          1479mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016C2  0C01 0009               1480mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016C6  6E00 000A               1481mmm         BGT     ALPHA_59
000016CA  0601 0030               1482mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016CE  6000 0006               1483mmm         BRA     DONE_59
000016D2  0601 0037               1484mmm ALPHA_59: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016D6  4E71                    1485mmm DONE_59: NOP
000016D8                          1486mmm         ENDM
000016D8  4E4F                    1487mm         TRAP    #15         ; EXECUTE OUTPUT       
000016DA                          1488mm         ENDM 
000016DA  361A                    1489m         MOVE.W  (A2)+, D3
000016DC                          1490mm         ADROUT
000016DC  3212                    1491mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016DE  E049                    1492mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016E0  E849                    1493mm         LSR.W   #4, D1      
000016E2                          1494mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016E2  0C01 0009               1495mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016E6  6E00 000A               1496mmm         BGT     ALPHA_61
000016EA  0601 0030               1497mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016EE  6000 0006               1498mmm         BRA     DONE_61
000016F2  0601 0037               1499mmm ALPHA_61: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016F6  4E71                    1500mmm DONE_61: NOP
000016F8                          1501mmm         ENDM
000016F8  4E4F                    1502mm         TRAP    #15         ; EXECUTE OUTPUT
000016FA                          1503mm         
000016FA  3212                    1504mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016FC  E949                    1505mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000016FE  E049                    1506mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001700  E849                    1507mm         LSR.W   #4, D1      
00001702                          1508mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001702  0C01 0009               1509mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001706  6E00 000A               1510mmm         BGT     ALPHA_62
0000170A  0601 0030               1511mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000170E  6000 0006               1512mmm         BRA     DONE_62
00001712  0601 0037               1513mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001716  4E71                    1514mmm DONE_62: NOP
00001718                          1515mmm         ENDM
00001718  4E4F                    1516mm         TRAP    #15         ; EXECUTE OUTPUT
0000171A                          1517mm         
0000171A  3212                    1518mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000171C  E149                    1519mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000171E  E049                    1520mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001720  E849                    1521mm         LSR.W   #4, D1      
00001722                          1522mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001722  0C01 0009               1523mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001726  6E00 000A               1524mmm         BGT     ALPHA_63
0000172A  0601 0030               1525mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000172E  6000 0006               1526mmm         BRA     DONE_63
00001732  0601 0037               1527mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001736  4E71                    1528mmm DONE_63: NOP
00001738                          1529mmm         ENDM
00001738  4E4F                    1530mm         TRAP    #15         ; EXECUTE OUTPUT
0000173A                          1531mm         
0000173A  3212                    1532mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000173C  E149                    1533mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000173E  E949                    1534mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001740  E049                    1535mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001742  E849                    1536mm         LSR.W   #4, D1      
00001744                          1537mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001744  0C01 0009               1538mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001748  6E00 000A               1539mmm         BGT     ALPHA_64
0000174C  0601 0030               1540mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001750  6000 0006               1541mmm         BRA     DONE_64
00001754  0601 0037               1542mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001758  4E71                    1543mmm DONE_64: NOP
0000175A                          1544mmm         ENDM
0000175A  4E4F                    1545mm         TRAP    #15         ; EXECUTE OUTPUT       
0000175C                          1546mm         ENDM 
0000175C  3605                    1547m         MOVE.W  D5, D3
0000175E  6000 01A4               1548m         BRA     COMPLETE_19 
00001762                          1549m ADRABSOLUTEW_19:     
00001762  361A                    1550m         MOVE.W  (A2)+, D3
00001764                          1551mm         PRINTSIGN
00001764  103C 0006               1552mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001768  323C 0024               1553mm         MOVE.W  #36, D1     ; AN = SIGN
0000176C  4E4F                    1554mm         TRAP    #15         ; OUTPUT = SIGN
0000176E                          1555mm         ENDM
0000176E                          1556mm         ADROUT
0000176E  3212                    1557mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001770  E049                    1558mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001772  E849                    1559mm         LSR.W   #4, D1      
00001774                          1560mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001774  0C01 0009               1561mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001778  6E00 000A               1562mmm         BGT     ALPHA_67
0000177C  0601 0030               1563mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001780  6000 0006               1564mmm         BRA     DONE_67
00001784  0601 0037               1565mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001788  4E71                    1566mmm DONE_67: NOP
0000178A                          1567mmm         ENDM
0000178A  4E4F                    1568mm         TRAP    #15         ; EXECUTE OUTPUT
0000178C                          1569mm         
0000178C  3212                    1570mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000178E  E949                    1571mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001790  E049                    1572mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001792  E849                    1573mm         LSR.W   #4, D1      
00001794                          1574mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001794  0C01 0009               1575mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001798  6E00 000A               1576mmm         BGT     ALPHA_68
0000179C  0601 0030               1577mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017A0  6000 0006               1578mmm         BRA     DONE_68
000017A4  0601 0037               1579mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017A8  4E71                    1580mmm DONE_68: NOP
000017AA                          1581mmm         ENDM
000017AA  4E4F                    1582mm         TRAP    #15         ; EXECUTE OUTPUT
000017AC                          1583mm         
000017AC  3212                    1584mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017AE  E149                    1585mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017B0  E049                    1586mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017B2  E849                    1587mm         LSR.W   #4, D1      
000017B4                          1588mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017B4  0C01 0009               1589mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017B8  6E00 000A               1590mmm         BGT     ALPHA_69
000017BC  0601 0030               1591mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017C0  6000 0006               1592mmm         BRA     DONE_69
000017C4  0601 0037               1593mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017C8  4E71                    1594mmm DONE_69: NOP
000017CA                          1595mmm         ENDM
000017CA  4E4F                    1596mm         TRAP    #15         ; EXECUTE OUTPUT
000017CC                          1597mm         
000017CC  3212                    1598mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017CE  E149                    1599mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017D0  E949                    1600mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017D2  E049                    1601mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017D4  E849                    1602mm         LSR.W   #4, D1      
000017D6                          1603mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017D6  0C01 0009               1604mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017DA  6E00 000A               1605mmm         BGT     ALPHA_70
000017DE  0601 0030               1606mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017E2  6000 0006               1607mmm         BRA     DONE_70
000017E6  0601 0037               1608mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017EA  4E71                    1609mmm DONE_70: NOP
000017EC                          1610mmm         ENDM
000017EC  4E4F                    1611mm         TRAP    #15         ; EXECUTE OUTPUT       
000017EE                          1612mm         ENDM 
000017EE  3605                    1613m         MOVE.W  D5, D3
000017F0  6000 0112               1614m         BRA     COMPLETE_19  
000017F4                          1615m ADRABSOLUTEL_19:  
000017F4  361A                    1616m         MOVE.W  (A2)+, D3
000017F6                          1617mm         PRINTSIGN
000017F6  103C 0006               1618mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000017FA  323C 0024               1619mm         MOVE.W  #36, D1     ; AN = SIGN
000017FE  4E4F                    1620mm         TRAP    #15         ; OUTPUT = SIGN
00001800                          1621mm         ENDM
00001800                          1622mm         ADROUT 
00001800  3212                    1623mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001802  E049                    1624mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001804  E849                    1625mm         LSR.W   #4, D1      
00001806                          1626mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001806  0C01 0009               1627mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000180A  6E00 000A               1628mmm         BGT     ALPHA_73
0000180E  0601 0030               1629mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001812  6000 0006               1630mmm         BRA     DONE_73
00001816  0601 0037               1631mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000181A  4E71                    1632mmm DONE_73: NOP
0000181C                          1633mmm         ENDM
0000181C  4E4F                    1634mm         TRAP    #15         ; EXECUTE OUTPUT
0000181E                          1635mm         
0000181E  3212                    1636mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001820  E949                    1637mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001822  E049                    1638mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001824  E849                    1639mm         LSR.W   #4, D1      
00001826                          1640mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001826  0C01 0009               1641mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000182A  6E00 000A               1642mmm         BGT     ALPHA_74
0000182E  0601 0030               1643mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001832  6000 0006               1644mmm         BRA     DONE_74
00001836  0601 0037               1645mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000183A  4E71                    1646mmm DONE_74: NOP
0000183C                          1647mmm         ENDM
0000183C  4E4F                    1648mm         TRAP    #15         ; EXECUTE OUTPUT
0000183E                          1649mm         
0000183E  3212                    1650mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001840  E149                    1651mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001842  E049                    1652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001844  E849                    1653mm         LSR.W   #4, D1      
00001846                          1654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001846  0C01 0009               1655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000184A  6E00 000A               1656mmm         BGT     ALPHA_75
0000184E  0601 0030               1657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001852  6000 0006               1658mmm         BRA     DONE_75
00001856  0601 0037               1659mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000185A  4E71                    1660mmm DONE_75: NOP
0000185C                          1661mmm         ENDM
0000185C  4E4F                    1662mm         TRAP    #15         ; EXECUTE OUTPUT
0000185E                          1663mm         
0000185E  3212                    1664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001860  E149                    1665mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001862  E949                    1666mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001864  E049                    1667mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001866  E849                    1668mm         LSR.W   #4, D1      
00001868                          1669mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001868  0C01 0009               1670mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000186C  6E00 000A               1671mmm         BGT     ALPHA_76
00001870  0601 0030               1672mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001874  6000 0006               1673mmm         BRA     DONE_76
00001878  0601 0037               1674mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000187C  4E71                    1675mmm DONE_76: NOP
0000187E                          1676mmm         ENDM
0000187E  4E4F                    1677mm         TRAP    #15         ; EXECUTE OUTPUT       
00001880                          1678mm         ENDM 
00001880  361A                    1679m         MOVE.W  (A2)+, D3
00001882                          1680mm         ADROUT
00001882  3212                    1681mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001884  E049                    1682mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001886  E849                    1683mm         LSR.W   #4, D1      
00001888                          1684mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001888  0C01 0009               1685mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000188C  6E00 000A               1686mmm         BGT     ALPHA_78
00001890  0601 0030               1687mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001894  6000 0006               1688mmm         BRA     DONE_78
00001898  0601 0037               1689mmm ALPHA_78: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000189C  4E71                    1690mmm DONE_78: NOP
0000189E                          1691mmm         ENDM
0000189E  4E4F                    1692mm         TRAP    #15         ; EXECUTE OUTPUT
000018A0                          1693mm         
000018A0  3212                    1694mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018A2  E949                    1695mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018A4  E049                    1696mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A6  E849                    1697mm         LSR.W   #4, D1      
000018A8                          1698mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018A8  0C01 0009               1699mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AC  6E00 000A               1700mmm         BGT     ALPHA_79
000018B0  0601 0030               1701mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B4  6000 0006               1702mmm         BRA     DONE_79
000018B8  0601 0037               1703mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BC  4E71                    1704mmm DONE_79: NOP
000018BE                          1705mmm         ENDM
000018BE  4E4F                    1706mm         TRAP    #15         ; EXECUTE OUTPUT
000018C0                          1707mm         
000018C0  3212                    1708mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018C2  E149                    1709mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018C4  E049                    1710mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018C6  E849                    1711mm         LSR.W   #4, D1      
000018C8                          1712mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018C8  0C01 0009               1713mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018CC  6E00 000A               1714mmm         BGT     ALPHA_80
000018D0  0601 0030               1715mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018D4  6000 0006               1716mmm         BRA     DONE_80
000018D8  0601 0037               1717mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018DC  4E71                    1718mmm DONE_80: NOP
000018DE                          1719mmm         ENDM
000018DE  4E4F                    1720mm         TRAP    #15         ; EXECUTE OUTPUT
000018E0                          1721mm         
000018E0  3212                    1722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018E2  E149                    1723mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018E4  E949                    1724mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000018E6  E049                    1725mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018E8  E849                    1726mm         LSR.W   #4, D1      
000018EA                          1727mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018EA  0C01 0009               1728mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018EE  6E00 000A               1729mmm         BGT     ALPHA_81
000018F2  0601 0030               1730mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018F6  6000 0006               1731mmm         BRA     DONE_81
000018FA  0601 0037               1732mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018FE  4E71                    1733mmm DONE_81: NOP
00001900                          1734mmm         ENDM
00001900  4E4F                    1735mm         TRAP    #15         ; EXECUTE OUTPUT       
00001902                          1736mm         ENDM 
00001902  3605                    1737m         MOVE.W  D5, D3
00001904                          1738m 
00001904                          1739m COMPLETE_19:  ; OPCODE HAS BEEN VERIFIED
00001904                          1740m         ENDM
00001904                          1741m         printComma
00001904  43F8 00C9               1742m         LEA     OCOMMA, A1     
00001908  103C 000E               1743m         MOVE.B  #14,D0          
0000190C  4E4F                    1744m         TRAP    #15
0000190E                          1745m         ENDM
0000190E                          1746m         prepareAdrMode  #$0,  D3
0000190E  3C3C 0000               1747m         MOVE.W  #$0, D6      ; INPUT VALUE
00001912  3203                    1748m         MOVE.W  D3, D1
00001914  BC3C 0001               1749m         CMP.B   #$01, D6
00001918  6700 000C               1750m         BEQ     ADRSOURCE_83    
0000191C                          1751m ADRDEST_83:
0000191C  EF49                    1752m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000191E  E049                    1753m         LSR     #$08, D1
00001920  EA49                    1754m         LSR     #$05, D1
00001922  6000 000A               1755m         BRA     COMPLETE_83 
00001926                          1756m ADRSOURCE_83:                
00001926  E149                    1757m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00001928  E549                    1758m         LSL     #$02, D1
0000192A  E049                    1759m         LSR     #$08, D1
0000192C  EA49                    1760m         LSR     #$05, D1
0000192E                          1761m COMPLETE_83:  ; OPCODE HAS BEEN VERIFIED
0000192E                          1762m         ENDM        
0000192E                          1763m         decodeAdrMode   D3, D1
0000192E  3603                    1764m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
00001930  3201                    1765m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00001932                          1766m 
00001932  B23C 0001               1767m         CMP.B   #$01, D1
00001936  6700 0066               1768m         BEQ     ADRREGDIRECT_84    
0000193A  B23C 0002               1769m         CMP.B   #$02, D1
0000193E  6700 00A0               1770m         BEQ     ADRREGINDIRECT_84  
00001942  B23C 0003               1771m         CMP.B   #$03, D1
00001946  6700 0102               1772m         BEQ     ADRREGPOSTINC_84  
0000194A  B23C 0004               1773m         CMP.B   #$04, D1
0000194E  6700 0178               1774m         BEQ     ADRREGPREDEC_84
00001952  B23C 0007               1775m         CMP.B   #$07, D1
00001956  6700 01EE               1776m         BEQ     ADRABSOLUTE_84    
0000195A                          1777m         
0000195A                          1778m DATAREGDIRECT_84: 
0000195A  BC3C 0001               1779m         CMP.B   #$01, D6
0000195E  6700 001E               1780m         BEQ     DATAREGDIRECTSRC_84   
00001962                          1781m DATAREGDIRECTDEST_84: 
00001962                          1782mm         PRINTDNDEST D3 
00001962  3203                    1783mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001964  E949                    1784mm         LSL     #$04, D1
00001966  E049                    1785mm         LSR     #$08, D1
00001968  EA49                    1786mm         LSR     #$05, D1
0000196A  43F8 00C1               1787mm         LEA     ODN, A1     
0000196E  103C 000E               1788mm         MOVE.B  #14,D0          
00001972  4E4F                    1789mm         TRAP    #15
00001974  103C 0003               1790mm         MOVE.B  #3,D0          
00001978  4E4F                    1791mm         TRAP    #15
0000197A                          1792mm         ENDM
0000197A  6000 0562               1793m         BRA     COMPLETE_84 
0000197E                          1794m DATAREGDIRECTSRC_84: 
0000197E                          1795mm         PRINTDNSRC D3 
0000197E  4281                    1796mm         CLR.L   D1
00001980  3203                    1797mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001982  E149                    1798mm         LSL     #$08, D1
00001984  EB49                    1799mm         LSL     #$05, D1
00001986  E049                    1800mm         LSR     #$08, D1
00001988  EA49                    1801mm         LSR     #$05, D1
0000198A  43F8 00C1               1802mm         LEA     ODN, A1     
0000198E  103C 000E               1803mm         MOVE.B  #14,D0          
00001992  4E4F                    1804mm         TRAP    #15
00001994  103C 0003               1805mm         MOVE.B  #3,D0          
00001998  4E4F                    1806mm         TRAP    #15
0000199A                          1807mm         ENDM
0000199A  6000 0542               1808m         BRA     COMPLETE_84   
0000199E                          1809m         
0000199E                          1810m ADRREGDIRECT_84: 
0000199E  BC3C 0001               1811m         CMP.B   #$01, D6
000019A2  6700 001E               1812m         BEQ     ADRREGDIRECTSRC_84   
000019A6                          1813m ADRREGDIRECTDEST_84:
000019A6                          1814mm         PRINTANDEST D3
000019A6  3203                    1815mm         MOVE.W  D3, D1
000019A8  E949                    1816mm         LSL     #$04, D1
000019AA  E049                    1817mm         LSR     #$08, D1
000019AC  EA49                    1818mm         LSR     #$05, D1
000019AE  43F8 00C3               1819mm         LEA     OAN, A1     
000019B2  103C 000E               1820mm         MOVE.B  #14,D0          
000019B6  4E4F                    1821mm         TRAP    #15
000019B8  103C 0003               1822mm         MOVE.B  #3,D0          
000019BC  4E4F                    1823mm         TRAP    #15
000019BE                          1824mm         ENDM
000019BE  6000 051E               1825m         BRA     COMPLETE_84   
000019C2                          1826m ADRREGDIRECTSRC_84:
000019C2                          1827mm         PRINTANSRC D3
000019C2  3203                    1828mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000019C4  E149                    1829mm         LSL     #$08, D1
000019C6  EB49                    1830mm         LSL     #$05, D1
000019C8  E049                    1831mm         LSR     #$08, D1
000019CA  EA49                    1832mm         LSR     #$05, D1
000019CC  43F8 00C3               1833mm         LEA     OAN, A1     
000019D0  103C 000E               1834mm         MOVE.B  #14,D0          
000019D4  4E4F                    1835mm         TRAP    #15
000019D6  103C 0003               1836mm         MOVE.B  #3,D0          
000019DA  4E4F                    1837mm         TRAP    #15
000019DC                          1838mm         ENDM
000019DC  6000 0500               1839m         BRA     COMPLETE_84   
000019E0                          1840m        
000019E0                          1841m ADRREGINDIRECT_84:   
000019E0  BC3C 0001               1842m         CMP.B   #$01, D6
000019E4  6700 0032               1843m         BEQ     ADRREGINDIRECTSRC_84   
000019E8                          1844m ADRREGINDIRECTDEST_84:
000019E8                          1845mm         PRINTLB
000019E8  43F8 00C5               1846mm         LEA     OLB, A1     
000019EC  103C 000E               1847mm         MOVE.B  #14,D0          
000019F0  4E4F                    1848mm         TRAP    #15
000019F2                          1849mm         ENDM
000019F2                          1850mm         PRINTANDEST D3  
000019F2  3203                    1851mm         MOVE.W  D3, D1
000019F4  E949                    1852mm         LSL     #$04, D1
000019F6  E049                    1853mm         LSR     #$08, D1
000019F8  EA49                    1854mm         LSR     #$05, D1
000019FA  43F8 00C3               1855mm         LEA     OAN, A1     
000019FE  103C 000E               1856mm         MOVE.B  #14,D0          
00001A02  4E4F                    1857mm         TRAP    #15
00001A04  103C 0003               1858mm         MOVE.B  #3,D0          
00001A08  4E4F                    1859mm         TRAP    #15
00001A0A                          1860mm         ENDM
00001A0A                          1861mm         PRINTRB
00001A0A  43F8 00C7               1862mm         LEA     ORB, A1     
00001A0E  103C 000E               1863mm         MOVE.B  #14,D0          
00001A12  4E4F                    1864mm         TRAP    #15
00001A14                          1865mm         ENDM
00001A14  6000 04C8               1866m         BRA     COMPLETE_84     
00001A18                          1867m ADRREGINDIRECTSRC_84:   
00001A18                          1868mm         PRINTLB
00001A18  43F8 00C5               1869mm         LEA     OLB, A1     
00001A1C  103C 000E               1870mm         MOVE.B  #14,D0          
00001A20  4E4F                    1871mm         TRAP    #15
00001A22                          1872mm         ENDM
00001A22                          1873mm         PRINTANSRC D3  
00001A22  3203                    1874mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A24  E149                    1875mm         LSL     #$08, D1
00001A26  EB49                    1876mm         LSL     #$05, D1
00001A28  E049                    1877mm         LSR     #$08, D1
00001A2A  EA49                    1878mm         LSR     #$05, D1
00001A2C  43F8 00C3               1879mm         LEA     OAN, A1     
00001A30  103C 000E               1880mm         MOVE.B  #14,D0          
00001A34  4E4F                    1881mm         TRAP    #15
00001A36  103C 0003               1882mm         MOVE.B  #3,D0          
00001A3A  4E4F                    1883mm         TRAP    #15
00001A3C                          1884mm         ENDM
00001A3C                          1885mm         PRINTRB
00001A3C  43F8 00C7               1886mm         LEA     ORB, A1     
00001A40  103C 000E               1887mm         MOVE.B  #14,D0          
00001A44  4E4F                    1888mm         TRAP    #15
00001A46                          1889mm         ENDM
00001A46  6000 0496               1890m         BRA     COMPLETE_84   
00001A4A                          1891m         
00001A4A                          1892m ADRREGPOSTINC_84:   
00001A4A  BC3C 0001               1893m         CMP.B   #$01, D6
00001A4E  6700 003C               1894m         BEQ     ADRREGPOSTINCSRC_84   
00001A52                          1895m ADRREGPOSTINCDEST_84: 
00001A52                          1896mm         PRINTLB
00001A52  43F8 00C5               1897mm         LEA     OLB, A1     
00001A56  103C 000E               1898mm         MOVE.B  #14,D0          
00001A5A  4E4F                    1899mm         TRAP    #15
00001A5C                          1900mm         ENDM
00001A5C                          1901mm         PRINTANDEST D3  
00001A5C  3203                    1902mm         MOVE.W  D3, D1
00001A5E  E949                    1903mm         LSL     #$04, D1
00001A60  E049                    1904mm         LSR     #$08, D1
00001A62  EA49                    1905mm         LSR     #$05, D1
00001A64  43F8 00C3               1906mm         LEA     OAN, A1     
00001A68  103C 000E               1907mm         MOVE.B  #14,D0          
00001A6C  4E4F                    1908mm         TRAP    #15
00001A6E  103C 0003               1909mm         MOVE.B  #3,D0          
00001A72  4E4F                    1910mm         TRAP    #15
00001A74                          1911mm         ENDM
00001A74                          1912mm         PRINTRB
00001A74  43F8 00C7               1913mm         LEA     ORB, A1     
00001A78  103C 000E               1914mm         MOVE.B  #14,D0          
00001A7C  4E4F                    1915mm         TRAP    #15
00001A7E                          1916mm         ENDM
00001A7E                          1917mm         PRINTPI
00001A7E  43F8 00CE               1918mm         LEA     OPSTINC, A1     
00001A82  103C 000E               1919mm         MOVE.B  #14,D0          
00001A86  4E4F                    1920mm         TRAP    #15
00001A88                          1921mm         ENDM
00001A88  6000 0454               1922m         BRA     COMPLETE_84  
00001A8C                          1923m ADRREGPOSTINCSRC_84:           
00001A8C                          1924mm         PRINTLB
00001A8C  43F8 00C5               1925mm         LEA     OLB, A1     
00001A90  103C 000E               1926mm         MOVE.B  #14,D0          
00001A94  4E4F                    1927mm         TRAP    #15
00001A96                          1928mm         ENDM
00001A96                          1929mm         PRINTANSRC D3  
00001A96  3203                    1930mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A98  E149                    1931mm         LSL     #$08, D1
00001A9A  EB49                    1932mm         LSL     #$05, D1
00001A9C  E049                    1933mm         LSR     #$08, D1
00001A9E  EA49                    1934mm         LSR     #$05, D1
00001AA0  43F8 00C3               1935mm         LEA     OAN, A1     
00001AA4  103C 000E               1936mm         MOVE.B  #14,D0          
00001AA8  4E4F                    1937mm         TRAP    #15
00001AAA  103C 0003               1938mm         MOVE.B  #3,D0          
00001AAE  4E4F                    1939mm         TRAP    #15
00001AB0                          1940mm         ENDM
00001AB0                          1941mm         PRINTRB
00001AB0  43F8 00C7               1942mm         LEA     ORB, A1     
00001AB4  103C 000E               1943mm         MOVE.B  #14,D0          
00001AB8  4E4F                    1944mm         TRAP    #15
00001ABA                          1945mm         ENDM
00001ABA                          1946mm         PRINTPI
00001ABA  43F8 00CE               1947mm         LEA     OPSTINC, A1     
00001ABE  103C 000E               1948mm         MOVE.B  #14,D0          
00001AC2  4E4F                    1949mm         TRAP    #15
00001AC4                          1950mm         ENDM
00001AC4  6000 0418               1951m         BRA     COMPLETE_84  
00001AC8                          1952m ADRREGPREDEC_84: 
00001AC8  BC3C 0001               1953m         CMP.B   #$01, D6
00001ACC  6700 003C               1954m         BEQ     ADRREGPREDECSRC_84   
00001AD0                          1955m ADRREGPREDECDEST_84:
00001AD0                          1956mm         PRINTPD  
00001AD0  43F8 00CC               1957mm         LEA     OPREDEC, A1     
00001AD4  103C 000E               1958mm         MOVE.B  #14,D0          
00001AD8  4E4F                    1959mm         TRAP    #15
00001ADA                          1960mm         ENDM
00001ADA                          1961mm         PRINTLB
00001ADA  43F8 00C5               1962mm         LEA     OLB, A1     
00001ADE  103C 000E               1963mm         MOVE.B  #14,D0          
00001AE2  4E4F                    1964mm         TRAP    #15
00001AE4                          1965mm         ENDM
00001AE4                          1966mm         PRINTANDEST D3  
00001AE4  3203                    1967mm         MOVE.W  D3, D1
00001AE6  E949                    1968mm         LSL     #$04, D1
00001AE8  E049                    1969mm         LSR     #$08, D1
00001AEA  EA49                    1970mm         LSR     #$05, D1
00001AEC  43F8 00C3               1971mm         LEA     OAN, A1     
00001AF0  103C 000E               1972mm         MOVE.B  #14,D0          
00001AF4  4E4F                    1973mm         TRAP    #15
00001AF6  103C 0003               1974mm         MOVE.B  #3,D0          
00001AFA  4E4F                    1975mm         TRAP    #15
00001AFC                          1976mm         ENDM
00001AFC                          1977mm         PRINTRB
00001AFC  43F8 00C7               1978mm         LEA     ORB, A1     
00001B00  103C 000E               1979mm         MOVE.B  #14,D0          
00001B04  4E4F                    1980mm         TRAP    #15
00001B06                          1981mm         ENDM
00001B06  6000 03D6               1982m         BRA     COMPLETE_84   
00001B0A                          1983m ADRREGPREDECSRC_84: 
00001B0A                          1984mm         PRINTPD  
00001B0A  43F8 00CC               1985mm         LEA     OPREDEC, A1     
00001B0E  103C 000E               1986mm         MOVE.B  #14,D0          
00001B12  4E4F                    1987mm         TRAP    #15
00001B14                          1988mm         ENDM
00001B14                          1989mm         PRINTLB
00001B14  43F8 00C5               1990mm         LEA     OLB, A1     
00001B18  103C 000E               1991mm         MOVE.B  #14,D0          
00001B1C  4E4F                    1992mm         TRAP    #15
00001B1E                          1993mm         ENDM
00001B1E                          1994mm         PRINTANSRC D3  
00001B1E  3203                    1995mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B20  E149                    1996mm         LSL     #$08, D1
00001B22  EB49                    1997mm         LSL     #$05, D1
00001B24  E049                    1998mm         LSR     #$08, D1
00001B26  EA49                    1999mm         LSR     #$05, D1
00001B28  43F8 00C3               2000mm         LEA     OAN, A1     
00001B2C  103C 000E               2001mm         MOVE.B  #14,D0          
00001B30  4E4F                    2002mm         TRAP    #15
00001B32  103C 0003               2003mm         MOVE.B  #3,D0          
00001B36  4E4F                    2004mm         TRAP    #15
00001B38                          2005mm         ENDM
00001B38                          2006mm         PRINTRB
00001B38  43F8 00C7               2007mm         LEA     ORB, A1     
00001B3C  103C 000E               2008mm         MOVE.B  #14,D0          
00001B40  4E4F                    2009mm         TRAP    #15
00001B42                          2010mm         ENDM
00001B42  6000 039A               2011m         BRA     COMPLETE_84
00001B46                          2012m        
00001B46                          2013m ADRABSOLUTE_84:
00001B46  BC3C 0001               2014m         CMP.B   #$01, D6
00001B4A  6600 0018               2015m         BNE     ADRABSOLUTEDST_84 
00001B4E                          2016m         
00001B4E  3A03                    2017m         MOVE.W  D3, D5
00001B50  0803 0002               2018m         BTST    #2, D3
00001B54  6600 0024               2019m         BNE     ADRIMMEDIATE_84
00001B58  0803 0000               2020m         BTST    #0, D3
00001B5C  6600 0270               2021m         BNE     ADRABSOLUTEL_84
00001B60  6000 01DA               2022m         BRA     ADRABSOLUTEW_84
00001B64                          2023m ADRABSOLUTEDST_84:
00001B64  3A03                    2024m         MOVE.W  D3, D5
00001B66  0803 000B               2025m         BTST    #$B, D3
00001B6A  6600 000E               2026m         BNE     ADRIMMEDIATE_84
00001B6E  0803 0009               2027m         BTST    #$09, D3
00001B72  6600 025A               2028m         BNE     ADRABSOLUTEL_84
00001B76  6000 01C4               2029m         BRA     ADRABSOLUTEW_84
00001B7A                          2030m ADRIMMEDIATE_84:
00001B7A  BE3C 0001               2031m         CMP.B   #1, D7
00001B7E  6700 009E               2032m         BEQ     ADRIMMEDIATEL_84
00001B82                          2033m ADRIMMEDIATEW_84:
00001B82  361A                    2034m         MOVE.W  (A2)+, D3
00001B84                          2035mm         PRINTHASH
00001B84  103C 0006               2036mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B88  323C 0023               2037mm         MOVE.W  #35, D1     ; AN = SIGN
00001B8C  4E4F                    2038mm         TRAP    #15         ; OUTPUT = SIGN
00001B8E                          2039mm         ENDM
00001B8E                          2040mm         PRINTSIGN
00001B8E  103C 0006               2041mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001B92  323C 0024               2042mm         MOVE.W  #36, D1     ; AN = SIGN
00001B96  4E4F                    2043mm         TRAP    #15         ; OUTPUT = SIGN
00001B98                          2044mm         ENDM
00001B98                          2045mm         ADROUT
00001B98  3212                    2046mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001B9A  E049                    2047mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001B9C  E849                    2048mm         LSR.W   #4, D1      
00001B9E                          2049mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001B9E  0C01 0009               2050mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BA2  6E00 000A               2051mmm         BGT     ALPHA_114
00001BA6  0601 0030               2052mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BAA  6000 0006               2053mmm         BRA     DONE_114
00001BAE  0601 0037               2054mmm ALPHA_114: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BB2  4E71                    2055mmm DONE_114: NOP
00001BB4                          2056mmm         ENDM
00001BB4  4E4F                    2057mm         TRAP    #15         ; EXECUTE OUTPUT
00001BB6                          2058mm         
00001BB6  3212                    2059mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BB8  E949                    2060mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001BBA  E049                    2061mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BBC  E849                    2062mm         LSR.W   #4, D1      
00001BBE                          2063mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BBE  0C01 0009               2064mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BC2  6E00 000A               2065mmm         BGT     ALPHA_115
00001BC6  0601 0030               2066mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BCA  6000 0006               2067mmm         BRA     DONE_115
00001BCE  0601 0037               2068mmm ALPHA_115: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BD2  4E71                    2069mmm DONE_115: NOP
00001BD4                          2070mmm         ENDM
00001BD4  4E4F                    2071mm         TRAP    #15         ; EXECUTE OUTPUT
00001BD6                          2072mm         
00001BD6  3212                    2073mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BD8  E149                    2074mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BDA  E049                    2075mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BDC  E849                    2076mm         LSR.W   #4, D1      
00001BDE                          2077mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001BDE  0C01 0009               2078mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001BE2  6E00 000A               2079mmm         BGT     ALPHA_116
00001BE6  0601 0030               2080mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001BEA  6000 0006               2081mmm         BRA     DONE_116
00001BEE  0601 0037               2082mmm ALPHA_116: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001BF2  4E71                    2083mmm DONE_116: NOP
00001BF4                          2084mmm         ENDM
00001BF4  4E4F                    2085mm         TRAP    #15         ; EXECUTE OUTPUT
00001BF6                          2086mm         
00001BF6  3212                    2087mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001BF8  E149                    2088mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001BFA  E949                    2089mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001BFC  E049                    2090mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001BFE  E849                    2091mm         LSR.W   #4, D1      
00001C00                          2092mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C00  0C01 0009               2093mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C04  6E00 000A               2094mmm         BGT     ALPHA_117
00001C08  0601 0030               2095mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C0C  6000 0006               2096mmm         BRA     DONE_117
00001C10  0601 0037               2097mmm ALPHA_117: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C14  4E71                    2098mmm DONE_117: NOP
00001C16                          2099mmm         ENDM
00001C16  4E4F                    2100mm         TRAP    #15         ; EXECUTE OUTPUT       
00001C18                          2101mm         ENDM 
00001C18  3605                    2102m         MOVE.W  D5, D3
00001C1A  6000 02C2               2103m         BRA     COMPLETE_84
00001C1E                          2104m ADRIMMEDIATEL_84:
00001C1E  361A                    2105m         MOVE.W  (A2)+, D3
00001C20                          2106mm         PRINTHASH
00001C20  103C 0006               2107mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C24  323C 0023               2108mm         MOVE.W  #35, D1     ; AN = SIGN
00001C28  4E4F                    2109mm         TRAP    #15         ; OUTPUT = SIGN
00001C2A                          2110mm         ENDM
00001C2A                          2111mm         PRINTSIGN
00001C2A  103C 0006               2112mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C2E  323C 0024               2113mm         MOVE.W  #36, D1     ; AN = SIGN
00001C32  4E4F                    2114mm         TRAP    #15         ; OUTPUT = SIGN
00001C34                          2115mm         ENDM
00001C34                          2116mm         ADROUT 
00001C34  3212                    2117mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C36  E049                    2118mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C38  E849                    2119mm         LSR.W   #4, D1      
00001C3A                          2120mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C3A  0C01 0009               2121mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C3E  6E00 000A               2122mmm         BGT     ALPHA_121
00001C42  0601 0030               2123mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C46  6000 0006               2124mmm         BRA     DONE_121
00001C4A  0601 0037               2125mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C4E  4E71                    2126mmm DONE_121: NOP
00001C50                          2127mmm         ENDM
00001C50  4E4F                    2128mm         TRAP    #15         ; EXECUTE OUTPUT
00001C52                          2129mm         
00001C52  3212                    2130mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C54  E949                    2131mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C56  E049                    2132mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C58  E849                    2133mm         LSR.W   #4, D1      
00001C5A                          2134mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C5A  0C01 0009               2135mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C5E  6E00 000A               2136mmm         BGT     ALPHA_122
00001C62  0601 0030               2137mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C66  6000 0006               2138mmm         BRA     DONE_122
00001C6A  0601 0037               2139mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C6E  4E71                    2140mmm DONE_122: NOP
00001C70                          2141mmm         ENDM
00001C70  4E4F                    2142mm         TRAP    #15         ; EXECUTE OUTPUT
00001C72                          2143mm         
00001C72  3212                    2144mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C74  E149                    2145mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C76  E049                    2146mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C78  E849                    2147mm         LSR.W   #4, D1      
00001C7A                          2148mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C7A  0C01 0009               2149mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C7E  6E00 000A               2150mmm         BGT     ALPHA_123
00001C82  0601 0030               2151mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C86  6000 0006               2152mmm         BRA     DONE_123
00001C8A  0601 0037               2153mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C8E  4E71                    2154mmm DONE_123: NOP
00001C90                          2155mmm         ENDM
00001C90  4E4F                    2156mm         TRAP    #15         ; EXECUTE OUTPUT
00001C92                          2157mm         
00001C92  3212                    2158mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C94  E149                    2159mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C96  E949                    2160mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001C98  E049                    2161mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C9A  E849                    2162mm         LSR.W   #4, D1      
00001C9C                          2163mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C9C  0C01 0009               2164mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA0  6E00 000A               2165mmm         BGT     ALPHA_124
00001CA4  0601 0030               2166mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CA8  6000 0006               2167mmm         BRA     DONE_124
00001CAC  0601 0037               2168mmm ALPHA_124: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB0  4E71                    2169mmm DONE_124: NOP
00001CB2                          2170mmm         ENDM
00001CB2  4E4F                    2171mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CB4                          2172mm         ENDM 
00001CB4  361A                    2173m         MOVE.W  (A2)+, D3
00001CB6                          2174mm         ADROUT
00001CB6  3212                    2175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CB8  E049                    2176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CBA  E849                    2177mm         LSR.W   #4, D1      
00001CBC                          2178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CBC  0C01 0009               2179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CC0  6E00 000A               2180mmm         BGT     ALPHA_126
00001CC4  0601 0030               2181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CC8  6000 0006               2182mmm         BRA     DONE_126
00001CCC  0601 0037               2183mmm ALPHA_126: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CD0  4E71                    2184mmm DONE_126: NOP
00001CD2                          2185mmm         ENDM
00001CD2  4E4F                    2186mm         TRAP    #15         ; EXECUTE OUTPUT
00001CD4                          2187mm         
00001CD4  3212                    2188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CD6  E949                    2189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001CD8  E049                    2190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDA  E849                    2191mm         LSR.W   #4, D1      
00001CDC                          2192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDC  0C01 0009               2193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE0  6E00 000A               2194mmm         BGT     ALPHA_127
00001CE4  0601 0030               2195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CE8  6000 0006               2196mmm         BRA     DONE_127
00001CEC  0601 0037               2197mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF0  4E71                    2198mmm DONE_127: NOP
00001CF2                          2199mmm         ENDM
00001CF2  4E4F                    2200mm         TRAP    #15         ; EXECUTE OUTPUT
00001CF4                          2201mm         
00001CF4  3212                    2202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CF6  E149                    2203mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001CF8  E049                    2204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFA  E849                    2205mm         LSR.W   #4, D1      
00001CFC                          2206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFC  0C01 0009               2207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D00  6E00 000A               2208mmm         BGT     ALPHA_128
00001D04  0601 0030               2209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D08  6000 0006               2210mmm         BRA     DONE_128
00001D0C  0601 0037               2211mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D10  4E71                    2212mmm DONE_128: NOP
00001D12                          2213mmm         ENDM
00001D12  4E4F                    2214mm         TRAP    #15         ; EXECUTE OUTPUT
00001D14                          2215mm         
00001D14  3212                    2216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D16  E149                    2217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D18  E949                    2218mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D1A  E049                    2219mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2220mm         LSR.W   #4, D1      
00001D1E                          2221mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2222mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2223mmm         BGT     ALPHA_129
00001D26  0601 0030               2224mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2225mmm         BRA     DONE_129
00001D2E  0601 0037               2226mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2227mmm DONE_129: NOP
00001D34                          2228mmm         ENDM
00001D34  4E4F                    2229mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D36                          2230mm         ENDM 
00001D36  3605                    2231m         MOVE.W  D5, D3
00001D38  6000 01A4               2232m         BRA     COMPLETE_84 
00001D3C                          2233m ADRABSOLUTEW_84:     
00001D3C  361A                    2234m         MOVE.W  (A2)+, D3
00001D3E                          2235mm         PRINTSIGN
00001D3E  103C 0006               2236mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001D42  323C 0024               2237mm         MOVE.W  #36, D1     ; AN = SIGN
00001D46  4E4F                    2238mm         TRAP    #15         ; OUTPUT = SIGN
00001D48                          2239mm         ENDM
00001D48                          2240mm         ADROUT
00001D48  3212                    2241mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D4A  E049                    2242mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D4C  E849                    2243mm         LSR.W   #4, D1      
00001D4E                          2244mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D4E  0C01 0009               2245mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D52  6E00 000A               2246mmm         BGT     ALPHA_132
00001D56  0601 0030               2247mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D5A  6000 0006               2248mmm         BRA     DONE_132
00001D5E  0601 0037               2249mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D62  4E71                    2250mmm DONE_132: NOP
00001D64                          2251mmm         ENDM
00001D64  4E4F                    2252mm         TRAP    #15         ; EXECUTE OUTPUT
00001D66                          2253mm         
00001D66  3212                    2254mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D68  E949                    2255mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D6A  E049                    2256mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D6C  E849                    2257mm         LSR.W   #4, D1      
00001D6E                          2258mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D6E  0C01 0009               2259mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D72  6E00 000A               2260mmm         BGT     ALPHA_133
00001D76  0601 0030               2261mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D7A  6000 0006               2262mmm         BRA     DONE_133
00001D7E  0601 0037               2263mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D82  4E71                    2264mmm DONE_133: NOP
00001D84                          2265mmm         ENDM
00001D84  4E4F                    2266mm         TRAP    #15         ; EXECUTE OUTPUT
00001D86                          2267mm         
00001D86  3212                    2268mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D88  E149                    2269mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D8A  E049                    2270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D8C  E849                    2271mm         LSR.W   #4, D1      
00001D8E                          2272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D8E  0C01 0009               2273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D92  6E00 000A               2274mmm         BGT     ALPHA_134
00001D96  0601 0030               2275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D9A  6000 0006               2276mmm         BRA     DONE_134
00001D9E  0601 0037               2277mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DA2  4E71                    2278mmm DONE_134: NOP
00001DA4                          2279mmm         ENDM
00001DA4  4E4F                    2280mm         TRAP    #15         ; EXECUTE OUTPUT
00001DA6                          2281mm         
00001DA6  3212                    2282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DA8  E149                    2283mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DAA  E949                    2284mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DAC  E049                    2285mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DAE  E849                    2286mm         LSR.W   #4, D1      
00001DB0                          2287mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DB0  0C01 0009               2288mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DB4  6E00 000A               2289mmm         BGT     ALPHA_135
00001DB8  0601 0030               2290mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DBC  6000 0006               2291mmm         BRA     DONE_135
00001DC0  0601 0037               2292mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DC4  4E71                    2293mmm DONE_135: NOP
00001DC6                          2294mmm         ENDM
00001DC6  4E4F                    2295mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DC8                          2296mm         ENDM 
00001DC8  3605                    2297m         MOVE.W  D5, D3
00001DCA  6000 0112               2298m         BRA     COMPLETE_84  
00001DCE                          2299m ADRABSOLUTEL_84:  
00001DCE  361A                    2300m         MOVE.W  (A2)+, D3
00001DD0                          2301mm         PRINTSIGN
00001DD0  103C 0006               2302mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001DD4  323C 0024               2303mm         MOVE.W  #36, D1     ; AN = SIGN
00001DD8  4E4F                    2304mm         TRAP    #15         ; OUTPUT = SIGN
00001DDA                          2305mm         ENDM
00001DDA                          2306mm         ADROUT 
00001DDA  3212                    2307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DDC  E049                    2308mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DDE  E849                    2309mm         LSR.W   #4, D1      
00001DE0                          2310mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DE0  0C01 0009               2311mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DE4  6E00 000A               2312mmm         BGT     ALPHA_138
00001DE8  0601 0030               2313mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DEC  6000 0006               2314mmm         BRA     DONE_138
00001DF0  0601 0037               2315mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DF4  4E71                    2316mmm DONE_138: NOP
00001DF6                          2317mmm         ENDM
00001DF6  4E4F                    2318mm         TRAP    #15         ; EXECUTE OUTPUT
00001DF8                          2319mm         
00001DF8  3212                    2320mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DFA  E949                    2321mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001DFC  E049                    2322mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DFE  E849                    2323mm         LSR.W   #4, D1      
00001E00                          2324mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E00  0C01 0009               2325mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E04  6E00 000A               2326mmm         BGT     ALPHA_139
00001E08  0601 0030               2327mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E0C  6000 0006               2328mmm         BRA     DONE_139
00001E10  0601 0037               2329mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E14  4E71                    2330mmm DONE_139: NOP
00001E16                          2331mmm         ENDM
00001E16  4E4F                    2332mm         TRAP    #15         ; EXECUTE OUTPUT
00001E18                          2333mm         
00001E18  3212                    2334mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E1A  E149                    2335mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E1C  E049                    2336mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E1E  E849                    2337mm         LSR.W   #4, D1      
00001E20                          2338mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E20  0C01 0009               2339mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E24  6E00 000A               2340mmm         BGT     ALPHA_140
00001E28  0601 0030               2341mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E2C  6000 0006               2342mmm         BRA     DONE_140
00001E30  0601 0037               2343mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E34  4E71                    2344mmm DONE_140: NOP
00001E36                          2345mmm         ENDM
00001E36  4E4F                    2346mm         TRAP    #15         ; EXECUTE OUTPUT
00001E38                          2347mm         
00001E38  3212                    2348mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E3A  E149                    2349mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E3C  E949                    2350mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E3E  E049                    2351mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E40  E849                    2352mm         LSR.W   #4, D1      
00001E42                          2353mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E42  0C01 0009               2354mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E46  6E00 000A               2355mmm         BGT     ALPHA_141
00001E4A  0601 0030               2356mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E4E  6000 0006               2357mmm         BRA     DONE_141
00001E52  0601 0037               2358mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E56  4E71                    2359mmm DONE_141: NOP
00001E58                          2360mmm         ENDM
00001E58  4E4F                    2361mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E5A                          2362mm         ENDM 
00001E5A  361A                    2363m         MOVE.W  (A2)+, D3
00001E5C                          2364mm         ADROUT
00001E5C  3212                    2365mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E5E  E049                    2366mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E60  E849                    2367mm         LSR.W   #4, D1      
00001E62                          2368mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E62  0C01 0009               2369mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E66  6E00 000A               2370mmm         BGT     ALPHA_143
00001E6A  0601 0030               2371mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E6E  6000 0006               2372mmm         BRA     DONE_143
00001E72  0601 0037               2373mmm ALPHA_143: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E76  4E71                    2374mmm DONE_143: NOP
00001E78                          2375mmm         ENDM
00001E78  4E4F                    2376mm         TRAP    #15         ; EXECUTE OUTPUT
00001E7A                          2377mm         
00001E7A  3212                    2378mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E7C  E949                    2379mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E7E  E049                    2380mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E80  E849                    2381mm         LSR.W   #4, D1      
00001E82                          2382mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E82  0C01 0009               2383mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E86  6E00 000A               2384mmm         BGT     ALPHA_144
00001E8A  0601 0030               2385mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E8E  6000 0006               2386mmm         BRA     DONE_144
00001E92  0601 0037               2387mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E96  4E71                    2388mmm DONE_144: NOP
00001E98                          2389mmm         ENDM
00001E98  4E4F                    2390mm         TRAP    #15         ; EXECUTE OUTPUT
00001E9A                          2391mm         
00001E9A  3212                    2392mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E9C  E149                    2393mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E9E  E049                    2394mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EA0  E849                    2395mm         LSR.W   #4, D1      
00001EA2                          2396mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EA2  0C01 0009               2397mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EA6  6E00 000A               2398mmm         BGT     ALPHA_145
00001EAA  0601 0030               2399mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EAE  6000 0006               2400mmm         BRA     DONE_145
00001EB2  0601 0037               2401mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EB6  4E71                    2402mmm DONE_145: NOP
00001EB8                          2403mmm         ENDM
00001EB8  4E4F                    2404mm         TRAP    #15         ; EXECUTE OUTPUT
00001EBA                          2405mm         
00001EBA  3212                    2406mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EBC  E149                    2407mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EBE  E949                    2408mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001EC0  E049                    2409mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EC2  E849                    2410mm         LSR.W   #4, D1      
00001EC4                          2411mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EC4  0C01 0009               2412mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EC8  6E00 000A               2413mmm         BGT     ALPHA_146
00001ECC  0601 0030               2414mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001ED0  6000 0006               2415mmm         BRA     DONE_146
00001ED4  0601 0037               2416mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001ED8  4E71                    2417mmm DONE_146: NOP
00001EDA                          2418mmm         ENDM
00001EDA  4E4F                    2419mm         TRAP    #15         ; EXECUTE OUTPUT       
00001EDC                          2420mm         ENDM 
00001EDC  3605                    2421m         MOVE.W  D5, D3
00001EDE                          2422m 
00001EDE                          2423m COMPLETE_84:  ; OPCODE HAS BEEN VERIFIED
00001EDE                          2424m         ENDM
00001EDE  4E75                    2425          RTS                 ; Return from decodeMOVE subroutine
00001EE0                          2426  
00001EE0                          2427  
00001EE0                          2428  ; ------------------------------------------------------------
00001EE0                          2429  ; 3. "decodeMOVEM" subroutine
00001EE0                          2430  ; AUTHOR
00001EE0                          2431  ;
00001EE0                          2432  ; TODO: DESCRIPTION
00001EE0                          2433  ; ------------------------------------------------------------
00001EE0                          2434  decodeMOVEM:
00001EE0                          2435m         verifyOpcode    pMOVEM, (A2)
00001EE0  43F8 00F6               2436m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001EE4  3612                    2437m         MOVE.W  (A2), D3      ; INPUT VALUE
00001EE6  123C 000F               2438m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001EEA                          2439m         
00001EEA                          2440m LOOP_147: 
00001EEA  0C11 0030               2441m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001EEE  6700 000E               2442m         BEQ     CHECKFOR0_147
00001EF2  0C11 0031               2443m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001EF6  6700 0010               2444m         BEQ     CHECKFOR1_147
00001EFA  6000 0012               2445m         BRA     NEXT_147      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001EFE                          2446m         
00001EFE                          2447m CHECKFOR0_147: 
00001EFE  0303                    2448m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F00  6600 4BD4               2449m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F04  6000 0008               2450m         BRA     NEXT_147
00001F08                          2451m 
00001F08                          2452m CHECKFOR1_147:
00001F08  0303                    2453m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F0A  6700 4BCA               2454m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F0E                          2455m 
00001F0E                          2456m NEXT_147: 
00001F0E  B23C 0000               2457m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F12  6700 0008               2458m         BEQ     COMPLETE_147  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F16  5301                    2459m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F18  1819                    2460m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F1A  60CE                    2461m         BRA     LOOP_147      ; BEGIN LOOP AGAIN
00001F1C                          2462m 
00001F1C                          2463m COMPLETE_147:  ; OPCODE HAS BEEN VERIFIED
00001F1C                          2464m         ENDM
00001F1C                          2465          ; put code here
00001F1C  4E75                    2466          RTS                 ; Return from decodeMOVEM subroutine
00001F1E                          2467  
00001F1E                          2468  
00001F1E                          2469  ; ------------------------------------------------------------
00001F1E                          2470  ; 4. "decodeADD" subroutine
00001F1E                          2471  ; AUTHOR
00001F1E                          2472  ;
00001F1E                          2473  ; TODO: DESCRIPTION
00001F1E                          2474  ; ------------------------------------------------------------
00001F1E                          2475  decodeADD:
00001F1E                          2476m         verifyOpcode    pADD, (A2)
00001F1E  43F8 0107               2477m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001F22  3612                    2478m         MOVE.W  (A2), D3      ; INPUT VALUE
00001F24  123C 000F               2479m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001F28                          2480m         
00001F28                          2481m LOOP_148: 
00001F28  0C11 0030               2482m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001F2C  6700 000E               2483m         BEQ     CHECKFOR0_148
00001F30  0C11 0031               2484m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F34  6700 0010               2485m         BEQ     CHECKFOR1_148
00001F38  6000 0012               2486m         BRA     NEXT_148      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001F3C                          2487m         
00001F3C                          2488m CHECKFOR0_148: 
00001F3C  0303                    2489m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001F3E  6600 4B96               2490m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001F42  6000 0008               2491m         BRA     NEXT_148
00001F46                          2492m 
00001F46                          2493m CHECKFOR1_148:
00001F46  0303                    2494m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001F48  6700 4B8C               2495m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001F4C                          2496m 
00001F4C                          2497m NEXT_148: 
00001F4C  B23C 0000               2498m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001F50  6700 0008               2499m         BEQ     COMPLETE_148  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001F54  5301                    2500m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001F56  1819                    2501m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001F58  60CE                    2502m         BRA     LOOP_148      ; BEGIN LOOP AGAIN
00001F5A                          2503m 
00001F5A                          2504m COMPLETE_148:  ; OPCODE HAS BEEN VERIFIED
00001F5A                          2505m         ENDM
00001F5A  43F8 006F               2506          LEA     oADD, A1     
00001F5E  103C 000E               2507          MOVE.B  #14,D0          
00001F62  4E4F                    2508          TRAP    #15
00001F64                          2509m         printOpMode     (A2)
00001F64  3612                    2510m         MOVE.W  (A2), D3      
00001F66  123C 0008               2511m         MOVE.B  #8, D1    
00001F6A  4246                    2512m         CLR     D6
00001F6C                          2513m CHECKFORDESTDN_149: 
00001F6C  0303                    2514m         BTST    D1, D3      
00001F6E  6600 0048               2515m         BNE     CHECKFORSRCDN_149
00001F72  4EB9 00002042           2516m         JSR     NEXT_149
00001F78  1C3C 0001               2517m         MOVE.B  #$1, D6
00001F7C  0303                    2518m         BTST    D1, D3      
00001F7E  6700 0010               2519m         BEQ     DESTDNW_149
00001F82                          2520m DESTDNL_149:        
00001F82  43F8 00BD               2521m         LEA     OLSIZE, A1     
00001F86  103C 000E               2522m         MOVE.B  #14,D0          
00001F8A  4E4F                    2523m         TRAP    #15
00001F8C  6000 00B8               2524m         BRA     COMPLETE_149 
00001F90                          2525m DESTDNW_149: 
00001F90  4EB9 00002042           2526m         JSR     NEXT_149
00001F96  0303                    2527m         BTST    D1, D3      
00001F98  6700 0010               2528m         BEQ     DESTDNB_149
00001F9C  43F8 00B9               2529m         LEA     OWSIZE, A1     
00001FA0  103C 000E               2530m         MOVE.B  #14,D0          
00001FA4  4E4F                    2531m         TRAP    #15
00001FA6  6000 009E               2532m         BRA     COMPLETE_149 
00001FAA                          2533m DESTDNB_149: 
00001FAA  43F8 00B5               2534m         LEA     OBSIZE, A1     
00001FAE  103C 000E               2535m         MOVE.B  #14,D0          
00001FB2  4E4F                    2536m         TRAP    #15
00001FB4  6000 0090               2537m         BRA     COMPLETE_149 
00001FB8                          2538m CHECKFORSRCDN_149: 
00001FB8  4EB9 00002042           2539m         JSR     NEXT_149
00001FBE  0303                    2540m         BTST    D1, D3      
00001FC0  6700 0028               2541m         BEQ     SRCDNW_149
00001FC4                          2542m SRCDNL_149:        
00001FC4  43F8 00BD               2543m         LEA     OLSIZE, A1     
00001FC8  103C 000E               2544m         MOVE.B  #14,D0          
00001FCC  4E4F                    2545m         TRAP    #15
00001FCE                          2546mm         PRINTDNDEST D3
00001FCE  3203                    2547mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001FD0  E949                    2548mm         LSL     #$04, D1
00001FD2  E049                    2549mm         LSR     #$08, D1
00001FD4  EA49                    2550mm         LSR     #$05, D1
00001FD6  43F8 00C1               2551mm         LEA     ODN, A1     
00001FDA  103C 000E               2552mm         MOVE.B  #14,D0          
00001FDE  4E4F                    2553mm         TRAP    #15
00001FE0  103C 0003               2554mm         MOVE.B  #3,D0          
00001FE4  4E4F                    2555mm         TRAP    #15
00001FE6                          2556mm         ENDM
00001FE6  6000 005E               2557m         BRA     COMPLETE_149 
00001FEA                          2558m SRCDNW_149:
00001FEA  4EB9 00002042           2559m         JSR     NEXT_149
00001FF0  0303                    2560m         BTST    D1, D3     
00001FF2  6700 0028               2561m         BEQ     SRCDNB_149
00001FF6  43F8 00B9               2562m         LEA     OWSIZE, A1     
00001FFA  103C 000E               2563m         MOVE.B  #14,D0          
00001FFE  4E4F                    2564m         TRAP    #15
00002000                          2565mm         PRINTDNDEST D3
00002000  3203                    2566mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002002  E949                    2567mm         LSL     #$04, D1
00002004  E049                    2568mm         LSR     #$08, D1
00002006  EA49                    2569mm         LSR     #$05, D1
00002008  43F8 00C1               2570mm         LEA     ODN, A1     
0000200C  103C 000E               2571mm         MOVE.B  #14,D0          
00002010  4E4F                    2572mm         TRAP    #15
00002012  103C 0003               2573mm         MOVE.B  #3,D0          
00002016  4E4F                    2574mm         TRAP    #15
00002018                          2575mm         ENDM
00002018  6000 002C               2576m         BRA     COMPLETE_149 
0000201C                          2577m SRCDNB_149: 
0000201C  43F8 00B5               2578m         LEA     OBSIZE, A1     
00002020  103C 000E               2579m         MOVE.B  #14,D0          
00002024  4E4F                    2580m         TRAP    #15
00002026                          2581mm         PRINTDNDEST D3
00002026  3203                    2582mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002028  E949                    2583mm         LSL     #$04, D1
0000202A  E049                    2584mm         LSR     #$08, D1
0000202C  EA49                    2585mm         LSR     #$05, D1
0000202E  43F8 00C1               2586mm         LEA     ODN, A1     
00002032  103C 000E               2587mm         MOVE.B  #14,D0          
00002036  4E4F                    2588mm         TRAP    #15
00002038  103C 0003               2589mm         MOVE.B  #3,D0          
0000203C  4E4F                    2590mm         TRAP    #15
0000203E                          2591mm         ENDM
0000203E  6000 0006               2592m         BRA     COMPLETE_149 
00002042                          2593m 
00002042                          2594m NEXT_149:
00002042  5301                    2595m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002044  4E75                    2596m         RTS                
00002046                          2597m 
00002046                          2598m COMPLETE_149:  ; OPCODE HAS BEEN VERIFIED
00002046                          2599m         ENDM
00002046  BC3C 0001               2600          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
0000204A  6700 05E0               2601          BEQ     decodeAddDestOp
0000204E                          2602m         printComma
0000204E  43F8 00C9               2603m         LEA     OCOMMA, A1     
00002052  103C 000E               2604m         MOVE.B  #14,D0          
00002056  4E4F                    2605m         TRAP    #15
00002058                          2606m         ENDM
00002058                          2607m         prepareAdrMode  #$0, (A2)
00002058  3C3C 0000               2608m         MOVE.W  #$0, D6      ; INPUT VALUE
0000205C  3212                    2609m         MOVE.W  (A2), D1
0000205E  BC3C 0001               2610m         CMP.B   #$01, D6
00002062  6700 000C               2611m         BEQ     ADRSOURCE_154    
00002066                          2612m ADRDEST_154:
00002066  EF49                    2613m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002068  E049                    2614m         LSR     #$08, D1
0000206A  EA49                    2615m         LSR     #$05, D1
0000206C  6000 000A               2616m         BRA     COMPLETE_154 
00002070                          2617m ADRSOURCE_154:                
00002070  E149                    2618m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002072  E549                    2619m         LSL     #$02, D1
00002074  E049                    2620m         LSR     #$08, D1
00002076  EA49                    2621m         LSR     #$05, D1
00002078                          2622m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
00002078                          2623m         ENDM        
00002078                          2624m         decodeAdrMode   (A2), D1
00002078  3612                    2625m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000207A  3201                    2626m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000207C                          2627m 
0000207C  B23C 0001               2628m         CMP.B   #$01, D1
00002080  6700 0066               2629m         BEQ     ADRREGDIRECT_155    
00002084  B23C 0002               2630m         CMP.B   #$02, D1
00002088  6700 00A0               2631m         BEQ     ADRREGINDIRECT_155  
0000208C  B23C 0003               2632m         CMP.B   #$03, D1
00002090  6700 0102               2633m         BEQ     ADRREGPOSTINC_155  
00002094  B23C 0004               2634m         CMP.B   #$04, D1
00002098  6700 0178               2635m         BEQ     ADRREGPREDEC_155
0000209C  B23C 0007               2636m         CMP.B   #$07, D1
000020A0  6700 01EE               2637m         BEQ     ADRABSOLUTE_155    
000020A4                          2638m         
000020A4                          2639m DATAREGDIRECT_155: 
000020A4  BC3C 0001               2640m         CMP.B   #$01, D6
000020A8  6700 001E               2641m         BEQ     DATAREGDIRECTSRC_155   
000020AC                          2642m DATAREGDIRECTDEST_155: 
000020AC                          2643mm         PRINTDNDEST D3 
000020AC  3203                    2644mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020AE  E949                    2645mm         LSL     #$04, D1
000020B0  E049                    2646mm         LSR     #$08, D1
000020B2  EA49                    2647mm         LSR     #$05, D1
000020B4  43F8 00C1               2648mm         LEA     ODN, A1     
000020B8  103C 000E               2649mm         MOVE.B  #14,D0          
000020BC  4E4F                    2650mm         TRAP    #15
000020BE  103C 0003               2651mm         MOVE.B  #3,D0          
000020C2  4E4F                    2652mm         TRAP    #15
000020C4                          2653mm         ENDM
000020C4  6000 0562               2654m         BRA     COMPLETE_155 
000020C8                          2655m DATAREGDIRECTSRC_155: 
000020C8                          2656mm         PRINTDNSRC D3 
000020C8  4281                    2657mm         CLR.L   D1
000020CA  3203                    2658mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000020CC  E149                    2659mm         LSL     #$08, D1
000020CE  EB49                    2660mm         LSL     #$05, D1
000020D0  E049                    2661mm         LSR     #$08, D1
000020D2  EA49                    2662mm         LSR     #$05, D1
000020D4  43F8 00C1               2663mm         LEA     ODN, A1     
000020D8  103C 000E               2664mm         MOVE.B  #14,D0          
000020DC  4E4F                    2665mm         TRAP    #15
000020DE  103C 0003               2666mm         MOVE.B  #3,D0          
000020E2  4E4F                    2667mm         TRAP    #15
000020E4                          2668mm         ENDM
000020E4  6000 0542               2669m         BRA     COMPLETE_155   
000020E8                          2670m         
000020E8                          2671m ADRREGDIRECT_155: 
000020E8  BC3C 0001               2672m         CMP.B   #$01, D6
000020EC  6700 001E               2673m         BEQ     ADRREGDIRECTSRC_155   
000020F0                          2674m ADRREGDIRECTDEST_155:
000020F0                          2675mm         PRINTANDEST D3
000020F0  3203                    2676mm         MOVE.W  D3, D1
000020F2  E949                    2677mm         LSL     #$04, D1
000020F4  E049                    2678mm         LSR     #$08, D1
000020F6  EA49                    2679mm         LSR     #$05, D1
000020F8  43F8 00C3               2680mm         LEA     OAN, A1     
000020FC  103C 000E               2681mm         MOVE.B  #14,D0          
00002100  4E4F                    2682mm         TRAP    #15
00002102  103C 0003               2683mm         MOVE.B  #3,D0          
00002106  4E4F                    2684mm         TRAP    #15
00002108                          2685mm         ENDM
00002108  6000 051E               2686m         BRA     COMPLETE_155   
0000210C                          2687m ADRREGDIRECTSRC_155:
0000210C                          2688mm         PRINTANSRC D3
0000210C  3203                    2689mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000210E  E149                    2690mm         LSL     #$08, D1
00002110  EB49                    2691mm         LSL     #$05, D1
00002112  E049                    2692mm         LSR     #$08, D1
00002114  EA49                    2693mm         LSR     #$05, D1
00002116  43F8 00C3               2694mm         LEA     OAN, A1     
0000211A  103C 000E               2695mm         MOVE.B  #14,D0          
0000211E  4E4F                    2696mm         TRAP    #15
00002120  103C 0003               2697mm         MOVE.B  #3,D0          
00002124  4E4F                    2698mm         TRAP    #15
00002126                          2699mm         ENDM
00002126  6000 0500               2700m         BRA     COMPLETE_155   
0000212A                          2701m        
0000212A                          2702m ADRREGINDIRECT_155:   
0000212A  BC3C 0001               2703m         CMP.B   #$01, D6
0000212E  6700 0032               2704m         BEQ     ADRREGINDIRECTSRC_155   
00002132                          2705m ADRREGINDIRECTDEST_155:
00002132                          2706mm         PRINTLB
00002132  43F8 00C5               2707mm         LEA     OLB, A1     
00002136  103C 000E               2708mm         MOVE.B  #14,D0          
0000213A  4E4F                    2709mm         TRAP    #15
0000213C                          2710mm         ENDM
0000213C                          2711mm         PRINTANDEST D3  
0000213C  3203                    2712mm         MOVE.W  D3, D1
0000213E  E949                    2713mm         LSL     #$04, D1
00002140  E049                    2714mm         LSR     #$08, D1
00002142  EA49                    2715mm         LSR     #$05, D1
00002144  43F8 00C3               2716mm         LEA     OAN, A1     
00002148  103C 000E               2717mm         MOVE.B  #14,D0          
0000214C  4E4F                    2718mm         TRAP    #15
0000214E  103C 0003               2719mm         MOVE.B  #3,D0          
00002152  4E4F                    2720mm         TRAP    #15
00002154                          2721mm         ENDM
00002154                          2722mm         PRINTRB
00002154  43F8 00C7               2723mm         LEA     ORB, A1     
00002158  103C 000E               2724mm         MOVE.B  #14,D0          
0000215C  4E4F                    2725mm         TRAP    #15
0000215E                          2726mm         ENDM
0000215E  6000 04C8               2727m         BRA     COMPLETE_155     
00002162                          2728m ADRREGINDIRECTSRC_155:   
00002162                          2729mm         PRINTLB
00002162  43F8 00C5               2730mm         LEA     OLB, A1     
00002166  103C 000E               2731mm         MOVE.B  #14,D0          
0000216A  4E4F                    2732mm         TRAP    #15
0000216C                          2733mm         ENDM
0000216C                          2734mm         PRINTANSRC D3  
0000216C  3203                    2735mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000216E  E149                    2736mm         LSL     #$08, D1
00002170  EB49                    2737mm         LSL     #$05, D1
00002172  E049                    2738mm         LSR     #$08, D1
00002174  EA49                    2739mm         LSR     #$05, D1
00002176  43F8 00C3               2740mm         LEA     OAN, A1     
0000217A  103C 000E               2741mm         MOVE.B  #14,D0          
0000217E  4E4F                    2742mm         TRAP    #15
00002180  103C 0003               2743mm         MOVE.B  #3,D0          
00002184  4E4F                    2744mm         TRAP    #15
00002186                          2745mm         ENDM
00002186                          2746mm         PRINTRB
00002186  43F8 00C7               2747mm         LEA     ORB, A1     
0000218A  103C 000E               2748mm         MOVE.B  #14,D0          
0000218E  4E4F                    2749mm         TRAP    #15
00002190                          2750mm         ENDM
00002190  6000 0496               2751m         BRA     COMPLETE_155   
00002194                          2752m         
00002194                          2753m ADRREGPOSTINC_155:   
00002194  BC3C 0001               2754m         CMP.B   #$01, D6
00002198  6700 003C               2755m         BEQ     ADRREGPOSTINCSRC_155   
0000219C                          2756m ADRREGPOSTINCDEST_155: 
0000219C                          2757mm         PRINTLB
0000219C  43F8 00C5               2758mm         LEA     OLB, A1     
000021A0  103C 000E               2759mm         MOVE.B  #14,D0          
000021A4  4E4F                    2760mm         TRAP    #15
000021A6                          2761mm         ENDM
000021A6                          2762mm         PRINTANDEST D3  
000021A6  3203                    2763mm         MOVE.W  D3, D1
000021A8  E949                    2764mm         LSL     #$04, D1
000021AA  E049                    2765mm         LSR     #$08, D1
000021AC  EA49                    2766mm         LSR     #$05, D1
000021AE  43F8 00C3               2767mm         LEA     OAN, A1     
000021B2  103C 000E               2768mm         MOVE.B  #14,D0          
000021B6  4E4F                    2769mm         TRAP    #15
000021B8  103C 0003               2770mm         MOVE.B  #3,D0          
000021BC  4E4F                    2771mm         TRAP    #15
000021BE                          2772mm         ENDM
000021BE                          2773mm         PRINTRB
000021BE  43F8 00C7               2774mm         LEA     ORB, A1     
000021C2  103C 000E               2775mm         MOVE.B  #14,D0          
000021C6  4E4F                    2776mm         TRAP    #15
000021C8                          2777mm         ENDM
000021C8                          2778mm         PRINTPI
000021C8  43F8 00CE               2779mm         LEA     OPSTINC, A1     
000021CC  103C 000E               2780mm         MOVE.B  #14,D0          
000021D0  4E4F                    2781mm         TRAP    #15
000021D2                          2782mm         ENDM
000021D2  6000 0454               2783m         BRA     COMPLETE_155  
000021D6                          2784m ADRREGPOSTINCSRC_155:           
000021D6                          2785mm         PRINTLB
000021D6  43F8 00C5               2786mm         LEA     OLB, A1     
000021DA  103C 000E               2787mm         MOVE.B  #14,D0          
000021DE  4E4F                    2788mm         TRAP    #15
000021E0                          2789mm         ENDM
000021E0                          2790mm         PRINTANSRC D3  
000021E0  3203                    2791mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021E2  E149                    2792mm         LSL     #$08, D1
000021E4  EB49                    2793mm         LSL     #$05, D1
000021E6  E049                    2794mm         LSR     #$08, D1
000021E8  EA49                    2795mm         LSR     #$05, D1
000021EA  43F8 00C3               2796mm         LEA     OAN, A1     
000021EE  103C 000E               2797mm         MOVE.B  #14,D0          
000021F2  4E4F                    2798mm         TRAP    #15
000021F4  103C 0003               2799mm         MOVE.B  #3,D0          
000021F8  4E4F                    2800mm         TRAP    #15
000021FA                          2801mm         ENDM
000021FA                          2802mm         PRINTRB
000021FA  43F8 00C7               2803mm         LEA     ORB, A1     
000021FE  103C 000E               2804mm         MOVE.B  #14,D0          
00002202  4E4F                    2805mm         TRAP    #15
00002204                          2806mm         ENDM
00002204                          2807mm         PRINTPI
00002204  43F8 00CE               2808mm         LEA     OPSTINC, A1     
00002208  103C 000E               2809mm         MOVE.B  #14,D0          
0000220C  4E4F                    2810mm         TRAP    #15
0000220E                          2811mm         ENDM
0000220E  6000 0418               2812m         BRA     COMPLETE_155  
00002212                          2813m ADRREGPREDEC_155: 
00002212  BC3C 0001               2814m         CMP.B   #$01, D6
00002216  6700 003C               2815m         BEQ     ADRREGPREDECSRC_155   
0000221A                          2816m ADRREGPREDECDEST_155:
0000221A                          2817mm         PRINTPD  
0000221A  43F8 00CC               2818mm         LEA     OPREDEC, A1     
0000221E  103C 000E               2819mm         MOVE.B  #14,D0          
00002222  4E4F                    2820mm         TRAP    #15
00002224                          2821mm         ENDM
00002224                          2822mm         PRINTLB
00002224  43F8 00C5               2823mm         LEA     OLB, A1     
00002228  103C 000E               2824mm         MOVE.B  #14,D0          
0000222C  4E4F                    2825mm         TRAP    #15
0000222E                          2826mm         ENDM
0000222E                          2827mm         PRINTANDEST D3  
0000222E  3203                    2828mm         MOVE.W  D3, D1
00002230  E949                    2829mm         LSL     #$04, D1
00002232  E049                    2830mm         LSR     #$08, D1
00002234  EA49                    2831mm         LSR     #$05, D1
00002236  43F8 00C3               2832mm         LEA     OAN, A1     
0000223A  103C 000E               2833mm         MOVE.B  #14,D0          
0000223E  4E4F                    2834mm         TRAP    #15
00002240  103C 0003               2835mm         MOVE.B  #3,D0          
00002244  4E4F                    2836mm         TRAP    #15
00002246                          2837mm         ENDM
00002246                          2838mm         PRINTRB
00002246  43F8 00C7               2839mm         LEA     ORB, A1     
0000224A  103C 000E               2840mm         MOVE.B  #14,D0          
0000224E  4E4F                    2841mm         TRAP    #15
00002250                          2842mm         ENDM
00002250  6000 03D6               2843m         BRA     COMPLETE_155   
00002254                          2844m ADRREGPREDECSRC_155: 
00002254                          2845mm         PRINTPD  
00002254  43F8 00CC               2846mm         LEA     OPREDEC, A1     
00002258  103C 000E               2847mm         MOVE.B  #14,D0          
0000225C  4E4F                    2848mm         TRAP    #15
0000225E                          2849mm         ENDM
0000225E                          2850mm         PRINTLB
0000225E  43F8 00C5               2851mm         LEA     OLB, A1     
00002262  103C 000E               2852mm         MOVE.B  #14,D0          
00002266  4E4F                    2853mm         TRAP    #15
00002268                          2854mm         ENDM
00002268                          2855mm         PRINTANSRC D3  
00002268  3203                    2856mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000226A  E149                    2857mm         LSL     #$08, D1
0000226C  EB49                    2858mm         LSL     #$05, D1
0000226E  E049                    2859mm         LSR     #$08, D1
00002270  EA49                    2860mm         LSR     #$05, D1
00002272  43F8 00C3               2861mm         LEA     OAN, A1     
00002276  103C 000E               2862mm         MOVE.B  #14,D0          
0000227A  4E4F                    2863mm         TRAP    #15
0000227C  103C 0003               2864mm         MOVE.B  #3,D0          
00002280  4E4F                    2865mm         TRAP    #15
00002282                          2866mm         ENDM
00002282                          2867mm         PRINTRB
00002282  43F8 00C7               2868mm         LEA     ORB, A1     
00002286  103C 000E               2869mm         MOVE.B  #14,D0          
0000228A  4E4F                    2870mm         TRAP    #15
0000228C                          2871mm         ENDM
0000228C  6000 039A               2872m         BRA     COMPLETE_155
00002290                          2873m        
00002290                          2874m ADRABSOLUTE_155:
00002290  BC3C 0001               2875m         CMP.B   #$01, D6
00002294  6600 0018               2876m         BNE     ADRABSOLUTEDST_155 
00002298                          2877m         
00002298  3A03                    2878m         MOVE.W  D3, D5
0000229A  0803 0002               2879m         BTST    #2, D3
0000229E  6600 0024               2880m         BNE     ADRIMMEDIATE_155
000022A2  0803 0000               2881m         BTST    #0, D3
000022A6  6600 0270               2882m         BNE     ADRABSOLUTEL_155
000022AA  6000 01DA               2883m         BRA     ADRABSOLUTEW_155
000022AE                          2884m ADRABSOLUTEDST_155:
000022AE  3A03                    2885m         MOVE.W  D3, D5
000022B0  0803 000B               2886m         BTST    #$B, D3
000022B4  6600 000E               2887m         BNE     ADRIMMEDIATE_155
000022B8  0803 0009               2888m         BTST    #$09, D3
000022BC  6600 025A               2889m         BNE     ADRABSOLUTEL_155
000022C0  6000 01C4               2890m         BRA     ADRABSOLUTEW_155
000022C4                          2891m ADRIMMEDIATE_155:
000022C4  BE3C 0001               2892m         CMP.B   #1, D7
000022C8  6700 009E               2893m         BEQ     ADRIMMEDIATEL_155
000022CC                          2894m ADRIMMEDIATEW_155:
000022CC  361A                    2895m         MOVE.W  (A2)+, D3
000022CE                          2896mm         PRINTHASH
000022CE  103C 0006               2897mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022D2  323C 0023               2898mm         MOVE.W  #35, D1     ; AN = SIGN
000022D6  4E4F                    2899mm         TRAP    #15         ; OUTPUT = SIGN
000022D8                          2900mm         ENDM
000022D8                          2901mm         PRINTSIGN
000022D8  103C 0006               2902mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000022DC  323C 0024               2903mm         MOVE.W  #36, D1     ; AN = SIGN
000022E0  4E4F                    2904mm         TRAP    #15         ; OUTPUT = SIGN
000022E2                          2905mm         ENDM
000022E2                          2906mm         ADROUT
000022E2  3212                    2907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000022E4  E049                    2908mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000022E6  E849                    2909mm         LSR.W   #4, D1      
000022E8                          2910mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000022E8  0C01 0009               2911mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000022EC  6E00 000A               2912mmm         BGT     ALPHA_185
000022F0  0601 0030               2913mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000022F4  6000 0006               2914mmm         BRA     DONE_185
000022F8  0601 0037               2915mmm ALPHA_185: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000022FC  4E71                    2916mmm DONE_185: NOP
000022FE                          2917mmm         ENDM
000022FE  4E4F                    2918mm         TRAP    #15         ; EXECUTE OUTPUT
00002300                          2919mm         
00002300  3212                    2920mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002302  E949                    2921mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002304  E049                    2922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002306  E849                    2923mm         LSR.W   #4, D1      
00002308                          2924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002308  0C01 0009               2925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000230C  6E00 000A               2926mmm         BGT     ALPHA_186
00002310  0601 0030               2927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002314  6000 0006               2928mmm         BRA     DONE_186
00002318  0601 0037               2929mmm ALPHA_186: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000231C  4E71                    2930mmm DONE_186: NOP
0000231E                          2931mmm         ENDM
0000231E  4E4F                    2932mm         TRAP    #15         ; EXECUTE OUTPUT
00002320                          2933mm         
00002320  3212                    2934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002322  E149                    2935mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002324  E049                    2936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002326  E849                    2937mm         LSR.W   #4, D1      
00002328                          2938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002328  0C01 0009               2939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000232C  6E00 000A               2940mmm         BGT     ALPHA_187
00002330  0601 0030               2941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002334  6000 0006               2942mmm         BRA     DONE_187
00002338  0601 0037               2943mmm ALPHA_187: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000233C  4E71                    2944mmm DONE_187: NOP
0000233E                          2945mmm         ENDM
0000233E  4E4F                    2946mm         TRAP    #15         ; EXECUTE OUTPUT
00002340                          2947mm         
00002340  3212                    2948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002342  E149                    2949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002344  E949                    2950mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002346  E049                    2951mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002348  E849                    2952mm         LSR.W   #4, D1      
0000234A                          2953mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000234A  0C01 0009               2954mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000234E  6E00 000A               2955mmm         BGT     ALPHA_188
00002352  0601 0030               2956mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002356  6000 0006               2957mmm         BRA     DONE_188
0000235A  0601 0037               2958mmm ALPHA_188: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000235E  4E71                    2959mmm DONE_188: NOP
00002360                          2960mmm         ENDM
00002360  4E4F                    2961mm         TRAP    #15         ; EXECUTE OUTPUT       
00002362                          2962mm         ENDM 
00002362  3605                    2963m         MOVE.W  D5, D3
00002364  6000 02C2               2964m         BRA     COMPLETE_155
00002368                          2965m ADRIMMEDIATEL_155:
00002368  361A                    2966m         MOVE.W  (A2)+, D3
0000236A                          2967mm         PRINTHASH
0000236A  103C 0006               2968mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000236E  323C 0023               2969mm         MOVE.W  #35, D1     ; AN = SIGN
00002372  4E4F                    2970mm         TRAP    #15         ; OUTPUT = SIGN
00002374                          2971mm         ENDM
00002374                          2972mm         PRINTSIGN
00002374  103C 0006               2973mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002378  323C 0024               2974mm         MOVE.W  #36, D1     ; AN = SIGN
0000237C  4E4F                    2975mm         TRAP    #15         ; OUTPUT = SIGN
0000237E                          2976mm         ENDM
0000237E                          2977mm         ADROUT 
0000237E  3212                    2978mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002380  E049                    2979mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002382  E849                    2980mm         LSR.W   #4, D1      
00002384                          2981mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002384  0C01 0009               2982mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002388  6E00 000A               2983mmm         BGT     ALPHA_192
0000238C  0601 0030               2984mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002390  6000 0006               2985mmm         BRA     DONE_192
00002394  0601 0037               2986mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002398  4E71                    2987mmm DONE_192: NOP
0000239A                          2988mmm         ENDM
0000239A  4E4F                    2989mm         TRAP    #15         ; EXECUTE OUTPUT
0000239C                          2990mm         
0000239C  3212                    2991mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000239E  E949                    2992mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023A0  E049                    2993mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023A2  E849                    2994mm         LSR.W   #4, D1      
000023A4                          2995mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023A4  0C01 0009               2996mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023A8  6E00 000A               2997mmm         BGT     ALPHA_193
000023AC  0601 0030               2998mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023B0  6000 0006               2999mmm         BRA     DONE_193
000023B4  0601 0037               3000mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023B8  4E71                    3001mmm DONE_193: NOP
000023BA                          3002mmm         ENDM
000023BA  4E4F                    3003mm         TRAP    #15         ; EXECUTE OUTPUT
000023BC                          3004mm         
000023BC  3212                    3005mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023BE  E149                    3006mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023C0  E049                    3007mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023C2  E849                    3008mm         LSR.W   #4, D1      
000023C4                          3009mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023C4  0C01 0009               3010mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023C8  6E00 000A               3011mmm         BGT     ALPHA_194
000023CC  0601 0030               3012mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023D0  6000 0006               3013mmm         BRA     DONE_194
000023D4  0601 0037               3014mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023D8  4E71                    3015mmm DONE_194: NOP
000023DA                          3016mmm         ENDM
000023DA  4E4F                    3017mm         TRAP    #15         ; EXECUTE OUTPUT
000023DC                          3018mm         
000023DC  3212                    3019mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023DE  E149                    3020mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023E0  E949                    3021mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000023E2  E049                    3022mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023E4  E849                    3023mm         LSR.W   #4, D1      
000023E6                          3024mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023E6  0C01 0009               3025mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023EA  6E00 000A               3026mmm         BGT     ALPHA_195
000023EE  0601 0030               3027mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023F2  6000 0006               3028mmm         BRA     DONE_195
000023F6  0601 0037               3029mmm ALPHA_195: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023FA  4E71                    3030mmm DONE_195: NOP
000023FC                          3031mmm         ENDM
000023FC  4E4F                    3032mm         TRAP    #15         ; EXECUTE OUTPUT       
000023FE                          3033mm         ENDM 
000023FE  361A                    3034m         MOVE.W  (A2)+, D3
00002400                          3035mm         ADROUT
00002400  3212                    3036mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002402  E049                    3037mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002404  E849                    3038mm         LSR.W   #4, D1      
00002406                          3039mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002406  0C01 0009               3040mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000240A  6E00 000A               3041mmm         BGT     ALPHA_197
0000240E  0601 0030               3042mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002412  6000 0006               3043mmm         BRA     DONE_197
00002416  0601 0037               3044mmm ALPHA_197: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000241A  4E71                    3045mmm DONE_197: NOP
0000241C                          3046mmm         ENDM
0000241C  4E4F                    3047mm         TRAP    #15         ; EXECUTE OUTPUT
0000241E                          3048mm         
0000241E  3212                    3049mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002420  E949                    3050mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002422  E049                    3051mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002424  E849                    3052mm         LSR.W   #4, D1      
00002426                          3053mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002426  0C01 0009               3054mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000242A  6E00 000A               3055mmm         BGT     ALPHA_198
0000242E  0601 0030               3056mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002432  6000 0006               3057mmm         BRA     DONE_198
00002436  0601 0037               3058mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000243A  4E71                    3059mmm DONE_198: NOP
0000243C                          3060mmm         ENDM
0000243C  4E4F                    3061mm         TRAP    #15         ; EXECUTE OUTPUT
0000243E                          3062mm         
0000243E  3212                    3063mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002440  E149                    3064mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002442  E049                    3065mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002444  E849                    3066mm         LSR.W   #4, D1      
00002446                          3067mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002446  0C01 0009               3068mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000244A  6E00 000A               3069mmm         BGT     ALPHA_199
0000244E  0601 0030               3070mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002452  6000 0006               3071mmm         BRA     DONE_199
00002456  0601 0037               3072mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000245A  4E71                    3073mmm DONE_199: NOP
0000245C                          3074mmm         ENDM
0000245C  4E4F                    3075mm         TRAP    #15         ; EXECUTE OUTPUT
0000245E                          3076mm         
0000245E  3212                    3077mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002460  E149                    3078mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002462  E949                    3079mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002464  E049                    3080mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002466  E849                    3081mm         LSR.W   #4, D1      
00002468                          3082mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002468  0C01 0009               3083mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000246C  6E00 000A               3084mmm         BGT     ALPHA_200
00002470  0601 0030               3085mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002474  6000 0006               3086mmm         BRA     DONE_200
00002478  0601 0037               3087mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000247C  4E71                    3088mmm DONE_200: NOP
0000247E                          3089mmm         ENDM
0000247E  4E4F                    3090mm         TRAP    #15         ; EXECUTE OUTPUT       
00002480                          3091mm         ENDM 
00002480  3605                    3092m         MOVE.W  D5, D3
00002482  6000 01A4               3093m         BRA     COMPLETE_155 
00002486                          3094m ADRABSOLUTEW_155:     
00002486  361A                    3095m         MOVE.W  (A2)+, D3
00002488                          3096mm         PRINTSIGN
00002488  103C 0006               3097mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000248C  323C 0024               3098mm         MOVE.W  #36, D1     ; AN = SIGN
00002490  4E4F                    3099mm         TRAP    #15         ; OUTPUT = SIGN
00002492                          3100mm         ENDM
00002492                          3101mm         ADROUT
00002492  3212                    3102mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002494  E049                    3103mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002496  E849                    3104mm         LSR.W   #4, D1      
00002498                          3105mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002498  0C01 0009               3106mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000249C  6E00 000A               3107mmm         BGT     ALPHA_203
000024A0  0601 0030               3108mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024A4  6000 0006               3109mmm         BRA     DONE_203
000024A8  0601 0037               3110mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024AC  4E71                    3111mmm DONE_203: NOP
000024AE                          3112mmm         ENDM
000024AE  4E4F                    3113mm         TRAP    #15         ; EXECUTE OUTPUT
000024B0                          3114mm         
000024B0  3212                    3115mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024B2  E949                    3116mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024B4  E049                    3117mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024B6  E849                    3118mm         LSR.W   #4, D1      
000024B8                          3119mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024B8  0C01 0009               3120mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024BC  6E00 000A               3121mmm         BGT     ALPHA_204
000024C0  0601 0030               3122mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024C4  6000 0006               3123mmm         BRA     DONE_204
000024C8  0601 0037               3124mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024CC  4E71                    3125mmm DONE_204: NOP
000024CE                          3126mmm         ENDM
000024CE  4E4F                    3127mm         TRAP    #15         ; EXECUTE OUTPUT
000024D0                          3128mm         
000024D0  3212                    3129mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024D2  E149                    3130mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024D4  E049                    3131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024D6  E849                    3132mm         LSR.W   #4, D1      
000024D8                          3133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024D8  0C01 0009               3134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024DC  6E00 000A               3135mmm         BGT     ALPHA_205
000024E0  0601 0030               3136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024E4  6000 0006               3137mmm         BRA     DONE_205
000024E8  0601 0037               3138mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024EC  4E71                    3139mmm DONE_205: NOP
000024EE                          3140mmm         ENDM
000024EE  4E4F                    3141mm         TRAP    #15         ; EXECUTE OUTPUT
000024F0                          3142mm         
000024F0  3212                    3143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024F2  E149                    3144mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024F4  E949                    3145mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000024F6  E049                    3146mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024F8  E849                    3147mm         LSR.W   #4, D1      
000024FA                          3148mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024FA  0C01 0009               3149mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024FE  6E00 000A               3150mmm         BGT     ALPHA_206
00002502  0601 0030               3151mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002506  6000 0006               3152mmm         BRA     DONE_206
0000250A  0601 0037               3153mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000250E  4E71                    3154mmm DONE_206: NOP
00002510                          3155mmm         ENDM
00002510  4E4F                    3156mm         TRAP    #15         ; EXECUTE OUTPUT       
00002512                          3157mm         ENDM 
00002512  3605                    3158m         MOVE.W  D5, D3
00002514  6000 0112               3159m         BRA     COMPLETE_155  
00002518                          3160m ADRABSOLUTEL_155:  
00002518  361A                    3161m         MOVE.W  (A2)+, D3
0000251A                          3162mm         PRINTSIGN
0000251A  103C 0006               3163mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000251E  323C 0024               3164mm         MOVE.W  #36, D1     ; AN = SIGN
00002522  4E4F                    3165mm         TRAP    #15         ; OUTPUT = SIGN
00002524                          3166mm         ENDM
00002524                          3167mm         ADROUT 
00002524  3212                    3168mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002526  E049                    3169mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002528  E849                    3170mm         LSR.W   #4, D1      
0000252A                          3171mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000252A  0C01 0009               3172mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000252E  6E00 000A               3173mmm         BGT     ALPHA_209
00002532  0601 0030               3174mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002536  6000 0006               3175mmm         BRA     DONE_209
0000253A  0601 0037               3176mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000253E  4E71                    3177mmm DONE_209: NOP
00002540                          3178mmm         ENDM
00002540  4E4F                    3179mm         TRAP    #15         ; EXECUTE OUTPUT
00002542                          3180mm         
00002542  3212                    3181mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002544  E949                    3182mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002546  E049                    3183mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002548  E849                    3184mm         LSR.W   #4, D1      
0000254A                          3185mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000254A  0C01 0009               3186mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000254E  6E00 000A               3187mmm         BGT     ALPHA_210
00002552  0601 0030               3188mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002556  6000 0006               3189mmm         BRA     DONE_210
0000255A  0601 0037               3190mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000255E  4E71                    3191mmm DONE_210: NOP
00002560                          3192mmm         ENDM
00002560  4E4F                    3193mm         TRAP    #15         ; EXECUTE OUTPUT
00002562                          3194mm         
00002562  3212                    3195mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002564  E149                    3196mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002566  E049                    3197mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002568  E849                    3198mm         LSR.W   #4, D1      
0000256A                          3199mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000256A  0C01 0009               3200mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000256E  6E00 000A               3201mmm         BGT     ALPHA_211
00002572  0601 0030               3202mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002576  6000 0006               3203mmm         BRA     DONE_211
0000257A  0601 0037               3204mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000257E  4E71                    3205mmm DONE_211: NOP
00002580                          3206mmm         ENDM
00002580  4E4F                    3207mm         TRAP    #15         ; EXECUTE OUTPUT
00002582                          3208mm         
00002582  3212                    3209mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002584  E149                    3210mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002586  E949                    3211mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002588  E049                    3212mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000258A  E849                    3213mm         LSR.W   #4, D1      
0000258C                          3214mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000258C  0C01 0009               3215mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002590  6E00 000A               3216mmm         BGT     ALPHA_212
00002594  0601 0030               3217mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002598  6000 0006               3218mmm         BRA     DONE_212
0000259C  0601 0037               3219mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025A0  4E71                    3220mmm DONE_212: NOP
000025A2                          3221mmm         ENDM
000025A2  4E4F                    3222mm         TRAP    #15         ; EXECUTE OUTPUT       
000025A4                          3223mm         ENDM 
000025A4  361A                    3224m         MOVE.W  (A2)+, D3
000025A6                          3225mm         ADROUT
000025A6  3212                    3226mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A8  E049                    3227mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025AA  E849                    3228mm         LSR.W   #4, D1      
000025AC                          3229mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025AC  0C01 0009               3230mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025B0  6E00 000A               3231mmm         BGT     ALPHA_214
000025B4  0601 0030               3232mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B8  6000 0006               3233mmm         BRA     DONE_214
000025BC  0601 0037               3234mmm ALPHA_214: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025C0  4E71                    3235mmm DONE_214: NOP
000025C2                          3236mmm         ENDM
000025C2  4E4F                    3237mm         TRAP    #15         ; EXECUTE OUTPUT
000025C4                          3238mm         
000025C4  3212                    3239mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025C6  E949                    3240mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025C8  E049                    3241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025CA  E849                    3242mm         LSR.W   #4, D1      
000025CC                          3243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025CC  0C01 0009               3244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025D0  6E00 000A               3245mmm         BGT     ALPHA_215
000025D4  0601 0030               3246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025D8  6000 0006               3247mmm         BRA     DONE_215
000025DC  0601 0037               3248mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025E0  4E71                    3249mmm DONE_215: NOP
000025E2                          3250mmm         ENDM
000025E2  4E4F                    3251mm         TRAP    #15         ; EXECUTE OUTPUT
000025E4                          3252mm         
000025E4  3212                    3253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025E6  E149                    3254mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025E8  E049                    3255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025EA  E849                    3256mm         LSR.W   #4, D1      
000025EC                          3257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025EC  0C01 0009               3258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025F0  6E00 000A               3259mmm         BGT     ALPHA_216
000025F4  0601 0030               3260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025F8  6000 0006               3261mmm         BRA     DONE_216
000025FC  0601 0037               3262mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002600  4E71                    3263mmm DONE_216: NOP
00002602                          3264mmm         ENDM
00002602  4E4F                    3265mm         TRAP    #15         ; EXECUTE OUTPUT
00002604                          3266mm         
00002604  3212                    3267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002606  E149                    3268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002608  E949                    3269mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000260A  E049                    3270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000260C  E849                    3271mm         LSR.W   #4, D1      
0000260E                          3272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000260E  0C01 0009               3273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002612  6E00 000A               3274mmm         BGT     ALPHA_217
00002616  0601 0030               3275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000261A  6000 0006               3276mmm         BRA     DONE_217
0000261E  0601 0037               3277mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002622  4E71                    3278mmm DONE_217: NOP
00002624                          3279mmm         ENDM
00002624  4E4F                    3280mm         TRAP    #15         ; EXECUTE OUTPUT       
00002626                          3281mm         ENDM 
00002626  3605                    3282m         MOVE.W  D5, D3
00002628                          3283m 
00002628                          3284m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
00002628                          3285m         ENDM
00002628  6000 05F4               3286          BRA     decodeADDcomp
0000262C                          3287  decodeAddDestOp:
0000262C                          3288m         prepareAdrMode  #$1,(A2)
0000262C  3C3C 0001               3289m         MOVE.W  #$1, D6      ; INPUT VALUE
00002630  3212                    3290m         MOVE.W  (A2), D1
00002632  BC3C 0001               3291m         CMP.B   #$01, D6
00002636  6700 000C               3292m         BEQ     ADRSOURCE_218    
0000263A                          3293m ADRDEST_218:
0000263A  EF49                    3294m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000263C  E049                    3295m         LSR     #$08, D1
0000263E  EA49                    3296m         LSR     #$05, D1
00002640  6000 000A               3297m         BRA     COMPLETE_218 
00002644                          3298m ADRSOURCE_218:                
00002644  E149                    3299m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002646  E549                    3300m         LSL     #$02, D1
00002648  E049                    3301m         LSR     #$08, D1
0000264A  EA49                    3302m         LSR     #$05, D1
0000264C                          3303m COMPLETE_218:  ; OPCODE HAS BEEN VERIFIED
0000264C                          3304m         ENDM        
0000264C                          3305m         decodeAdrMode   (A2), D1
0000264C  3612                    3306m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
0000264E  3201                    3307m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002650                          3308m 
00002650  B23C 0001               3309m         CMP.B   #$01, D1
00002654  6700 0066               3310m         BEQ     ADRREGDIRECT_219    
00002658  B23C 0002               3311m         CMP.B   #$02, D1
0000265C  6700 00A0               3312m         BEQ     ADRREGINDIRECT_219  
00002660  B23C 0003               3313m         CMP.B   #$03, D1
00002664  6700 0102               3314m         BEQ     ADRREGPOSTINC_219  
00002668  B23C 0004               3315m         CMP.B   #$04, D1
0000266C  6700 0178               3316m         BEQ     ADRREGPREDEC_219
00002670  B23C 0007               3317m         CMP.B   #$07, D1
00002674  6700 01EE               3318m         BEQ     ADRABSOLUTE_219    
00002678                          3319m         
00002678                          3320m DATAREGDIRECT_219: 
00002678  BC3C 0001               3321m         CMP.B   #$01, D6
0000267C  6700 001E               3322m         BEQ     DATAREGDIRECTSRC_219   
00002680                          3323m DATAREGDIRECTDEST_219: 
00002680                          3324mm         PRINTDNDEST D3 
00002680  3203                    3325mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002682  E949                    3326mm         LSL     #$04, D1
00002684  E049                    3327mm         LSR     #$08, D1
00002686  EA49                    3328mm         LSR     #$05, D1
00002688  43F8 00C1               3329mm         LEA     ODN, A1     
0000268C  103C 000E               3330mm         MOVE.B  #14,D0          
00002690  4E4F                    3331mm         TRAP    #15
00002692  103C 0003               3332mm         MOVE.B  #3,D0          
00002696  4E4F                    3333mm         TRAP    #15
00002698                          3334mm         ENDM
00002698  6000 0562               3335m         BRA     COMPLETE_219 
0000269C                          3336m DATAREGDIRECTSRC_219: 
0000269C                          3337mm         PRINTDNSRC D3 
0000269C  4281                    3338mm         CLR.L   D1
0000269E  3203                    3339mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026A0  E149                    3340mm         LSL     #$08, D1
000026A2  EB49                    3341mm         LSL     #$05, D1
000026A4  E049                    3342mm         LSR     #$08, D1
000026A6  EA49                    3343mm         LSR     #$05, D1
000026A8  43F8 00C1               3344mm         LEA     ODN, A1     
000026AC  103C 000E               3345mm         MOVE.B  #14,D0          
000026B0  4E4F                    3346mm         TRAP    #15
000026B2  103C 0003               3347mm         MOVE.B  #3,D0          
000026B6  4E4F                    3348mm         TRAP    #15
000026B8                          3349mm         ENDM
000026B8  6000 0542               3350m         BRA     COMPLETE_219   
000026BC                          3351m         
000026BC                          3352m ADRREGDIRECT_219: 
000026BC  BC3C 0001               3353m         CMP.B   #$01, D6
000026C0  6700 001E               3354m         BEQ     ADRREGDIRECTSRC_219   
000026C4                          3355m ADRREGDIRECTDEST_219:
000026C4                          3356mm         PRINTANDEST D3
000026C4  3203                    3357mm         MOVE.W  D3, D1
000026C6  E949                    3358mm         LSL     #$04, D1
000026C8  E049                    3359mm         LSR     #$08, D1
000026CA  EA49                    3360mm         LSR     #$05, D1
000026CC  43F8 00C3               3361mm         LEA     OAN, A1     
000026D0  103C 000E               3362mm         MOVE.B  #14,D0          
000026D4  4E4F                    3363mm         TRAP    #15
000026D6  103C 0003               3364mm         MOVE.B  #3,D0          
000026DA  4E4F                    3365mm         TRAP    #15
000026DC                          3366mm         ENDM
000026DC  6000 051E               3367m         BRA     COMPLETE_219   
000026E0                          3368m ADRREGDIRECTSRC_219:
000026E0                          3369mm         PRINTANSRC D3
000026E0  3203                    3370mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000026E2  E149                    3371mm         LSL     #$08, D1
000026E4  EB49                    3372mm         LSL     #$05, D1
000026E6  E049                    3373mm         LSR     #$08, D1
000026E8  EA49                    3374mm         LSR     #$05, D1
000026EA  43F8 00C3               3375mm         LEA     OAN, A1     
000026EE  103C 000E               3376mm         MOVE.B  #14,D0          
000026F2  4E4F                    3377mm         TRAP    #15
000026F4  103C 0003               3378mm         MOVE.B  #3,D0          
000026F8  4E4F                    3379mm         TRAP    #15
000026FA                          3380mm         ENDM
000026FA  6000 0500               3381m         BRA     COMPLETE_219   
000026FE                          3382m        
000026FE                          3383m ADRREGINDIRECT_219:   
000026FE  BC3C 0001               3384m         CMP.B   #$01, D6
00002702  6700 0032               3385m         BEQ     ADRREGINDIRECTSRC_219   
00002706                          3386m ADRREGINDIRECTDEST_219:
00002706                          3387mm         PRINTLB
00002706  43F8 00C5               3388mm         LEA     OLB, A1     
0000270A  103C 000E               3389mm         MOVE.B  #14,D0          
0000270E  4E4F                    3390mm         TRAP    #15
00002710                          3391mm         ENDM
00002710                          3392mm         PRINTANDEST D3  
00002710  3203                    3393mm         MOVE.W  D3, D1
00002712  E949                    3394mm         LSL     #$04, D1
00002714  E049                    3395mm         LSR     #$08, D1
00002716  EA49                    3396mm         LSR     #$05, D1
00002718  43F8 00C3               3397mm         LEA     OAN, A1     
0000271C  103C 000E               3398mm         MOVE.B  #14,D0          
00002720  4E4F                    3399mm         TRAP    #15
00002722  103C 0003               3400mm         MOVE.B  #3,D0          
00002726  4E4F                    3401mm         TRAP    #15
00002728                          3402mm         ENDM
00002728                          3403mm         PRINTRB
00002728  43F8 00C7               3404mm         LEA     ORB, A1     
0000272C  103C 000E               3405mm         MOVE.B  #14,D0          
00002730  4E4F                    3406mm         TRAP    #15
00002732                          3407mm         ENDM
00002732  6000 04C8               3408m         BRA     COMPLETE_219     
00002736                          3409m ADRREGINDIRECTSRC_219:   
00002736                          3410mm         PRINTLB
00002736  43F8 00C5               3411mm         LEA     OLB, A1     
0000273A  103C 000E               3412mm         MOVE.B  #14,D0          
0000273E  4E4F                    3413mm         TRAP    #15
00002740                          3414mm         ENDM
00002740                          3415mm         PRINTANSRC D3  
00002740  3203                    3416mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002742  E149                    3417mm         LSL     #$08, D1
00002744  EB49                    3418mm         LSL     #$05, D1
00002746  E049                    3419mm         LSR     #$08, D1
00002748  EA49                    3420mm         LSR     #$05, D1
0000274A  43F8 00C3               3421mm         LEA     OAN, A1     
0000274E  103C 000E               3422mm         MOVE.B  #14,D0          
00002752  4E4F                    3423mm         TRAP    #15
00002754  103C 0003               3424mm         MOVE.B  #3,D0          
00002758  4E4F                    3425mm         TRAP    #15
0000275A                          3426mm         ENDM
0000275A                          3427mm         PRINTRB
0000275A  43F8 00C7               3428mm         LEA     ORB, A1     
0000275E  103C 000E               3429mm         MOVE.B  #14,D0          
00002762  4E4F                    3430mm         TRAP    #15
00002764                          3431mm         ENDM
00002764  6000 0496               3432m         BRA     COMPLETE_219   
00002768                          3433m         
00002768                          3434m ADRREGPOSTINC_219:   
00002768  BC3C 0001               3435m         CMP.B   #$01, D6
0000276C  6700 003C               3436m         BEQ     ADRREGPOSTINCSRC_219   
00002770                          3437m ADRREGPOSTINCDEST_219: 
00002770                          3438mm         PRINTLB
00002770  43F8 00C5               3439mm         LEA     OLB, A1     
00002774  103C 000E               3440mm         MOVE.B  #14,D0          
00002778  4E4F                    3441mm         TRAP    #15
0000277A                          3442mm         ENDM
0000277A                          3443mm         PRINTANDEST D3  
0000277A  3203                    3444mm         MOVE.W  D3, D1
0000277C  E949                    3445mm         LSL     #$04, D1
0000277E  E049                    3446mm         LSR     #$08, D1
00002780  EA49                    3447mm         LSR     #$05, D1
00002782  43F8 00C3               3448mm         LEA     OAN, A1     
00002786  103C 000E               3449mm         MOVE.B  #14,D0          
0000278A  4E4F                    3450mm         TRAP    #15
0000278C  103C 0003               3451mm         MOVE.B  #3,D0          
00002790  4E4F                    3452mm         TRAP    #15
00002792                          3453mm         ENDM
00002792                          3454mm         PRINTRB
00002792  43F8 00C7               3455mm         LEA     ORB, A1     
00002796  103C 000E               3456mm         MOVE.B  #14,D0          
0000279A  4E4F                    3457mm         TRAP    #15
0000279C                          3458mm         ENDM
0000279C                          3459mm         PRINTPI
0000279C  43F8 00CE               3460mm         LEA     OPSTINC, A1     
000027A0  103C 000E               3461mm         MOVE.B  #14,D0          
000027A4  4E4F                    3462mm         TRAP    #15
000027A6                          3463mm         ENDM
000027A6  6000 0454               3464m         BRA     COMPLETE_219  
000027AA                          3465m ADRREGPOSTINCSRC_219:           
000027AA                          3466mm         PRINTLB
000027AA  43F8 00C5               3467mm         LEA     OLB, A1     
000027AE  103C 000E               3468mm         MOVE.B  #14,D0          
000027B2  4E4F                    3469mm         TRAP    #15
000027B4                          3470mm         ENDM
000027B4                          3471mm         PRINTANSRC D3  
000027B4  3203                    3472mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027B6  E149                    3473mm         LSL     #$08, D1
000027B8  EB49                    3474mm         LSL     #$05, D1
000027BA  E049                    3475mm         LSR     #$08, D1
000027BC  EA49                    3476mm         LSR     #$05, D1
000027BE  43F8 00C3               3477mm         LEA     OAN, A1     
000027C2  103C 000E               3478mm         MOVE.B  #14,D0          
000027C6  4E4F                    3479mm         TRAP    #15
000027C8  103C 0003               3480mm         MOVE.B  #3,D0          
000027CC  4E4F                    3481mm         TRAP    #15
000027CE                          3482mm         ENDM
000027CE                          3483mm         PRINTRB
000027CE  43F8 00C7               3484mm         LEA     ORB, A1     
000027D2  103C 000E               3485mm         MOVE.B  #14,D0          
000027D6  4E4F                    3486mm         TRAP    #15
000027D8                          3487mm         ENDM
000027D8                          3488mm         PRINTPI
000027D8  43F8 00CE               3489mm         LEA     OPSTINC, A1     
000027DC  103C 000E               3490mm         MOVE.B  #14,D0          
000027E0  4E4F                    3491mm         TRAP    #15
000027E2                          3492mm         ENDM
000027E2  6000 0418               3493m         BRA     COMPLETE_219  
000027E6                          3494m ADRREGPREDEC_219: 
000027E6  BC3C 0001               3495m         CMP.B   #$01, D6
000027EA  6700 003C               3496m         BEQ     ADRREGPREDECSRC_219   
000027EE                          3497m ADRREGPREDECDEST_219:
000027EE                          3498mm         PRINTPD  
000027EE  43F8 00CC               3499mm         LEA     OPREDEC, A1     
000027F2  103C 000E               3500mm         MOVE.B  #14,D0          
000027F6  4E4F                    3501mm         TRAP    #15
000027F8                          3502mm         ENDM
000027F8                          3503mm         PRINTLB
000027F8  43F8 00C5               3504mm         LEA     OLB, A1     
000027FC  103C 000E               3505mm         MOVE.B  #14,D0          
00002800  4E4F                    3506mm         TRAP    #15
00002802                          3507mm         ENDM
00002802                          3508mm         PRINTANDEST D3  
00002802  3203                    3509mm         MOVE.W  D3, D1
00002804  E949                    3510mm         LSL     #$04, D1
00002806  E049                    3511mm         LSR     #$08, D1
00002808  EA49                    3512mm         LSR     #$05, D1
0000280A  43F8 00C3               3513mm         LEA     OAN, A1     
0000280E  103C 000E               3514mm         MOVE.B  #14,D0          
00002812  4E4F                    3515mm         TRAP    #15
00002814  103C 0003               3516mm         MOVE.B  #3,D0          
00002818  4E4F                    3517mm         TRAP    #15
0000281A                          3518mm         ENDM
0000281A                          3519mm         PRINTRB
0000281A  43F8 00C7               3520mm         LEA     ORB, A1     
0000281E  103C 000E               3521mm         MOVE.B  #14,D0          
00002822  4E4F                    3522mm         TRAP    #15
00002824                          3523mm         ENDM
00002824  6000 03D6               3524m         BRA     COMPLETE_219   
00002828                          3525m ADRREGPREDECSRC_219: 
00002828                          3526mm         PRINTPD  
00002828  43F8 00CC               3527mm         LEA     OPREDEC, A1     
0000282C  103C 000E               3528mm         MOVE.B  #14,D0          
00002830  4E4F                    3529mm         TRAP    #15
00002832                          3530mm         ENDM
00002832                          3531mm         PRINTLB
00002832  43F8 00C5               3532mm         LEA     OLB, A1     
00002836  103C 000E               3533mm         MOVE.B  #14,D0          
0000283A  4E4F                    3534mm         TRAP    #15
0000283C                          3535mm         ENDM
0000283C                          3536mm         PRINTANSRC D3  
0000283C  3203                    3537mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000283E  E149                    3538mm         LSL     #$08, D1
00002840  EB49                    3539mm         LSL     #$05, D1
00002842  E049                    3540mm         LSR     #$08, D1
00002844  EA49                    3541mm         LSR     #$05, D1
00002846  43F8 00C3               3542mm         LEA     OAN, A1     
0000284A  103C 000E               3543mm         MOVE.B  #14,D0          
0000284E  4E4F                    3544mm         TRAP    #15
00002850  103C 0003               3545mm         MOVE.B  #3,D0          
00002854  4E4F                    3546mm         TRAP    #15
00002856                          3547mm         ENDM
00002856                          3548mm         PRINTRB
00002856  43F8 00C7               3549mm         LEA     ORB, A1     
0000285A  103C 000E               3550mm         MOVE.B  #14,D0          
0000285E  4E4F                    3551mm         TRAP    #15
00002860                          3552mm         ENDM
00002860  6000 039A               3553m         BRA     COMPLETE_219
00002864                          3554m        
00002864                          3555m ADRABSOLUTE_219:
00002864  BC3C 0001               3556m         CMP.B   #$01, D6
00002868  6600 0018               3557m         BNE     ADRABSOLUTEDST_219 
0000286C                          3558m         
0000286C  3A03                    3559m         MOVE.W  D3, D5
0000286E  0803 0002               3560m         BTST    #2, D3
00002872  6600 0024               3561m         BNE     ADRIMMEDIATE_219
00002876  0803 0000               3562m         BTST    #0, D3
0000287A  6600 0270               3563m         BNE     ADRABSOLUTEL_219
0000287E  6000 01DA               3564m         BRA     ADRABSOLUTEW_219
00002882                          3565m ADRABSOLUTEDST_219:
00002882  3A03                    3566m         MOVE.W  D3, D5
00002884  0803 000B               3567m         BTST    #$B, D3
00002888  6600 000E               3568m         BNE     ADRIMMEDIATE_219
0000288C  0803 0009               3569m         BTST    #$09, D3
00002890  6600 025A               3570m         BNE     ADRABSOLUTEL_219
00002894  6000 01C4               3571m         BRA     ADRABSOLUTEW_219
00002898                          3572m ADRIMMEDIATE_219:
00002898  BE3C 0001               3573m         CMP.B   #1, D7
0000289C  6700 009E               3574m         BEQ     ADRIMMEDIATEL_219
000028A0                          3575m ADRIMMEDIATEW_219:
000028A0  361A                    3576m         MOVE.W  (A2)+, D3
000028A2                          3577mm         PRINTHASH
000028A2  103C 0006               3578mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028A6  323C 0023               3579mm         MOVE.W  #35, D1     ; AN = SIGN
000028AA  4E4F                    3580mm         TRAP    #15         ; OUTPUT = SIGN
000028AC                          3581mm         ENDM
000028AC                          3582mm         PRINTSIGN
000028AC  103C 0006               3583mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000028B0  323C 0024               3584mm         MOVE.W  #36, D1     ; AN = SIGN
000028B4  4E4F                    3585mm         TRAP    #15         ; OUTPUT = SIGN
000028B6                          3586mm         ENDM
000028B6                          3587mm         ADROUT
000028B6  3212                    3588mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028B8  E049                    3589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028BA  E849                    3590mm         LSR.W   #4, D1      
000028BC                          3591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028BC  0C01 0009               3592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028C0  6E00 000A               3593mmm         BGT     ALPHA_249
000028C4  0601 0030               3594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028C8  6000 0006               3595mmm         BRA     DONE_249
000028CC  0601 0037               3596mmm ALPHA_249: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028D0  4E71                    3597mmm DONE_249: NOP
000028D2                          3598mmm         ENDM
000028D2  4E4F                    3599mm         TRAP    #15         ; EXECUTE OUTPUT
000028D4                          3600mm         
000028D4  3212                    3601mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028D6  E949                    3602mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000028D8  E049                    3603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028DA  E849                    3604mm         LSR.W   #4, D1      
000028DC                          3605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028DC  0C01 0009               3606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000028E0  6E00 000A               3607mmm         BGT     ALPHA_250
000028E4  0601 0030               3608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000028E8  6000 0006               3609mmm         BRA     DONE_250
000028EC  0601 0037               3610mmm ALPHA_250: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000028F0  4E71                    3611mmm DONE_250: NOP
000028F2                          3612mmm         ENDM
000028F2  4E4F                    3613mm         TRAP    #15         ; EXECUTE OUTPUT
000028F4                          3614mm         
000028F4  3212                    3615mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000028F6  E149                    3616mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000028F8  E049                    3617mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000028FA  E849                    3618mm         LSR.W   #4, D1      
000028FC                          3619mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000028FC  0C01 0009               3620mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002900  6E00 000A               3621mmm         BGT     ALPHA_251
00002904  0601 0030               3622mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002908  6000 0006               3623mmm         BRA     DONE_251
0000290C  0601 0037               3624mmm ALPHA_251: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002910  4E71                    3625mmm DONE_251: NOP
00002912                          3626mmm         ENDM
00002912  4E4F                    3627mm         TRAP    #15         ; EXECUTE OUTPUT
00002914                          3628mm         
00002914  3212                    3629mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002916  E149                    3630mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002918  E949                    3631mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000291A  E049                    3632mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000291C  E849                    3633mm         LSR.W   #4, D1      
0000291E                          3634mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000291E  0C01 0009               3635mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002922  6E00 000A               3636mmm         BGT     ALPHA_252
00002926  0601 0030               3637mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000292A  6000 0006               3638mmm         BRA     DONE_252
0000292E  0601 0037               3639mmm ALPHA_252: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002932  4E71                    3640mmm DONE_252: NOP
00002934                          3641mmm         ENDM
00002934  4E4F                    3642mm         TRAP    #15         ; EXECUTE OUTPUT       
00002936                          3643mm         ENDM 
00002936  3605                    3644m         MOVE.W  D5, D3
00002938  6000 02C2               3645m         BRA     COMPLETE_219
0000293C                          3646m ADRIMMEDIATEL_219:
0000293C  361A                    3647m         MOVE.W  (A2)+, D3
0000293E                          3648mm         PRINTHASH
0000293E  103C 0006               3649mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002942  323C 0023               3650mm         MOVE.W  #35, D1     ; AN = SIGN
00002946  4E4F                    3651mm         TRAP    #15         ; OUTPUT = SIGN
00002948                          3652mm         ENDM
00002948                          3653mm         PRINTSIGN
00002948  103C 0006               3654mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000294C  323C 0024               3655mm         MOVE.W  #36, D1     ; AN = SIGN
00002950  4E4F                    3656mm         TRAP    #15         ; OUTPUT = SIGN
00002952                          3657mm         ENDM
00002952                          3658mm         ADROUT 
00002952  3212                    3659mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002954  E049                    3660mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002956  E849                    3661mm         LSR.W   #4, D1      
00002958                          3662mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002958  0C01 0009               3663mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000295C  6E00 000A               3664mmm         BGT     ALPHA_256
00002960  0601 0030               3665mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002964  6000 0006               3666mmm         BRA     DONE_256
00002968  0601 0037               3667mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000296C  4E71                    3668mmm DONE_256: NOP
0000296E                          3669mmm         ENDM
0000296E  4E4F                    3670mm         TRAP    #15         ; EXECUTE OUTPUT
00002970                          3671mm         
00002970  3212                    3672mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002972  E949                    3673mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002974  E049                    3674mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002976  E849                    3675mm         LSR.W   #4, D1      
00002978                          3676mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002978  0C01 0009               3677mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000297C  6E00 000A               3678mmm         BGT     ALPHA_257
00002980  0601 0030               3679mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002984  6000 0006               3680mmm         BRA     DONE_257
00002988  0601 0037               3681mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000298C  4E71                    3682mmm DONE_257: NOP
0000298E                          3683mmm         ENDM
0000298E  4E4F                    3684mm         TRAP    #15         ; EXECUTE OUTPUT
00002990                          3685mm         
00002990  3212                    3686mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002992  E149                    3687mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002994  E049                    3688mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002996  E849                    3689mm         LSR.W   #4, D1      
00002998                          3690mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002998  0C01 0009               3691mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000299C  6E00 000A               3692mmm         BGT     ALPHA_258
000029A0  0601 0030               3693mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029A4  6000 0006               3694mmm         BRA     DONE_258
000029A8  0601 0037               3695mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029AC  4E71                    3696mmm DONE_258: NOP
000029AE                          3697mmm         ENDM
000029AE  4E4F                    3698mm         TRAP    #15         ; EXECUTE OUTPUT
000029B0                          3699mm         
000029B0  3212                    3700mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029B2  E149                    3701mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029B4  E949                    3702mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000029B6  E049                    3703mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029B8  E849                    3704mm         LSR.W   #4, D1      
000029BA                          3705mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029BA  0C01 0009               3706mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029BE  6E00 000A               3707mmm         BGT     ALPHA_259
000029C2  0601 0030               3708mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029C6  6000 0006               3709mmm         BRA     DONE_259
000029CA  0601 0037               3710mmm ALPHA_259: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029CE  4E71                    3711mmm DONE_259: NOP
000029D0                          3712mmm         ENDM
000029D0  4E4F                    3713mm         TRAP    #15         ; EXECUTE OUTPUT       
000029D2                          3714mm         ENDM 
000029D2  361A                    3715m         MOVE.W  (A2)+, D3
000029D4                          3716mm         ADROUT
000029D4  3212                    3717mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029D6  E049                    3718mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029D8  E849                    3719mm         LSR.W   #4, D1      
000029DA                          3720mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029DA  0C01 0009               3721mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029DE  6E00 000A               3722mmm         BGT     ALPHA_261
000029E2  0601 0030               3723mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029E6  6000 0006               3724mmm         BRA     DONE_261
000029EA  0601 0037               3725mmm ALPHA_261: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029EE  4E71                    3726mmm DONE_261: NOP
000029F0                          3727mmm         ENDM
000029F0  4E4F                    3728mm         TRAP    #15         ; EXECUTE OUTPUT
000029F2                          3729mm         
000029F2  3212                    3730mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029F4  E949                    3731mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000029F6  E049                    3732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029F8  E849                    3733mm         LSR.W   #4, D1      
000029FA                          3734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029FA  0C01 0009               3735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029FE  6E00 000A               3736mmm         BGT     ALPHA_262
00002A02  0601 0030               3737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A06  6000 0006               3738mmm         BRA     DONE_262
00002A0A  0601 0037               3739mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A0E  4E71                    3740mmm DONE_262: NOP
00002A10                          3741mmm         ENDM
00002A10  4E4F                    3742mm         TRAP    #15         ; EXECUTE OUTPUT
00002A12                          3743mm         
00002A12  3212                    3744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A14  E149                    3745mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A16  E049                    3746mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A18  E849                    3747mm         LSR.W   #4, D1      
00002A1A                          3748mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A1A  0C01 0009               3749mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A1E  6E00 000A               3750mmm         BGT     ALPHA_263
00002A22  0601 0030               3751mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A26  6000 0006               3752mmm         BRA     DONE_263
00002A2A  0601 0037               3753mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A2E  4E71                    3754mmm DONE_263: NOP
00002A30                          3755mmm         ENDM
00002A30  4E4F                    3756mm         TRAP    #15         ; EXECUTE OUTPUT
00002A32                          3757mm         
00002A32  3212                    3758mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A34  E149                    3759mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A36  E949                    3760mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A38  E049                    3761mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A3A  E849                    3762mm         LSR.W   #4, D1      
00002A3C                          3763mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A3C  0C01 0009               3764mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A40  6E00 000A               3765mmm         BGT     ALPHA_264
00002A44  0601 0030               3766mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A48  6000 0006               3767mmm         BRA     DONE_264
00002A4C  0601 0037               3768mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A50  4E71                    3769mmm DONE_264: NOP
00002A52                          3770mmm         ENDM
00002A52  4E4F                    3771mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A54                          3772mm         ENDM 
00002A54  3605                    3773m         MOVE.W  D5, D3
00002A56  6000 01A4               3774m         BRA     COMPLETE_219 
00002A5A                          3775m ADRABSOLUTEW_219:     
00002A5A  361A                    3776m         MOVE.W  (A2)+, D3
00002A5C                          3777mm         PRINTSIGN
00002A5C  103C 0006               3778mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002A60  323C 0024               3779mm         MOVE.W  #36, D1     ; AN = SIGN
00002A64  4E4F                    3780mm         TRAP    #15         ; OUTPUT = SIGN
00002A66                          3781mm         ENDM
00002A66                          3782mm         ADROUT
00002A66  3212                    3783mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A68  E049                    3784mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A6A  E849                    3785mm         LSR.W   #4, D1      
00002A6C                          3786mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A6C  0C01 0009               3787mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A70  6E00 000A               3788mmm         BGT     ALPHA_267
00002A74  0601 0030               3789mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A78  6000 0006               3790mmm         BRA     DONE_267
00002A7C  0601 0037               3791mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A80  4E71                    3792mmm DONE_267: NOP
00002A82                          3793mmm         ENDM
00002A82  4E4F                    3794mm         TRAP    #15         ; EXECUTE OUTPUT
00002A84                          3795mm         
00002A84  3212                    3796mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A86  E949                    3797mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A88  E049                    3798mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A8A  E849                    3799mm         LSR.W   #4, D1      
00002A8C                          3800mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A8C  0C01 0009               3801mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A90  6E00 000A               3802mmm         BGT     ALPHA_268
00002A94  0601 0030               3803mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A98  6000 0006               3804mmm         BRA     DONE_268
00002A9C  0601 0037               3805mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AA0  4E71                    3806mmm DONE_268: NOP
00002AA2                          3807mmm         ENDM
00002AA2  4E4F                    3808mm         TRAP    #15         ; EXECUTE OUTPUT
00002AA4                          3809mm         
00002AA4  3212                    3810mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AA6  E149                    3811mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AA8  E049                    3812mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AAA  E849                    3813mm         LSR.W   #4, D1      
00002AAC                          3814mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AAC  0C01 0009               3815mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AB0  6E00 000A               3816mmm         BGT     ALPHA_269
00002AB4  0601 0030               3817mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AB8  6000 0006               3818mmm         BRA     DONE_269
00002ABC  0601 0037               3819mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AC0  4E71                    3820mmm DONE_269: NOP
00002AC2                          3821mmm         ENDM
00002AC2  4E4F                    3822mm         TRAP    #15         ; EXECUTE OUTPUT
00002AC4                          3823mm         
00002AC4  3212                    3824mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AC6  E149                    3825mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AC8  E949                    3826mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002ACA  E049                    3827mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002ACC  E849                    3828mm         LSR.W   #4, D1      
00002ACE                          3829mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002ACE  0C01 0009               3830mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AD2  6E00 000A               3831mmm         BGT     ALPHA_270
00002AD6  0601 0030               3832mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002ADA  6000 0006               3833mmm         BRA     DONE_270
00002ADE  0601 0037               3834mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AE2  4E71                    3835mmm DONE_270: NOP
00002AE4                          3836mmm         ENDM
00002AE4  4E4F                    3837mm         TRAP    #15         ; EXECUTE OUTPUT       
00002AE6                          3838mm         ENDM 
00002AE6  3605                    3839m         MOVE.W  D5, D3
00002AE8  6000 0112               3840m         BRA     COMPLETE_219  
00002AEC                          3841m ADRABSOLUTEL_219:  
00002AEC  361A                    3842m         MOVE.W  (A2)+, D3
00002AEE                          3843mm         PRINTSIGN
00002AEE  103C 0006               3844mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002AF2  323C 0024               3845mm         MOVE.W  #36, D1     ; AN = SIGN
00002AF6  4E4F                    3846mm         TRAP    #15         ; OUTPUT = SIGN
00002AF8                          3847mm         ENDM
00002AF8                          3848mm         ADROUT 
00002AF8  3212                    3849mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AFA  E049                    3850mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AFC  E849                    3851mm         LSR.W   #4, D1      
00002AFE                          3852mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AFE  0C01 0009               3853mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B02  6E00 000A               3854mmm         BGT     ALPHA_273
00002B06  0601 0030               3855mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B0A  6000 0006               3856mmm         BRA     DONE_273
00002B0E  0601 0037               3857mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B12  4E71                    3858mmm DONE_273: NOP
00002B14                          3859mmm         ENDM
00002B14  4E4F                    3860mm         TRAP    #15         ; EXECUTE OUTPUT
00002B16                          3861mm         
00002B16  3212                    3862mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B18  E949                    3863mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B1A  E049                    3864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B1C  E849                    3865mm         LSR.W   #4, D1      
00002B1E                          3866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1E  0C01 0009               3867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B22  6E00 000A               3868mmm         BGT     ALPHA_274
00002B26  0601 0030               3869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B2A  6000 0006               3870mmm         BRA     DONE_274
00002B2E  0601 0037               3871mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B32  4E71                    3872mmm DONE_274: NOP
00002B34                          3873mmm         ENDM
00002B34  4E4F                    3874mm         TRAP    #15         ; EXECUTE OUTPUT
00002B36                          3875mm         
00002B36  3212                    3876mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B38  E149                    3877mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B3A  E049                    3878mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B3C  E849                    3879mm         LSR.W   #4, D1      
00002B3E                          3880mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3E  0C01 0009               3881mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B42  6E00 000A               3882mmm         BGT     ALPHA_275
00002B46  0601 0030               3883mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B4A  6000 0006               3884mmm         BRA     DONE_275
00002B4E  0601 0037               3885mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B52  4E71                    3886mmm DONE_275: NOP
00002B54                          3887mmm         ENDM
00002B54  4E4F                    3888mm         TRAP    #15         ; EXECUTE OUTPUT
00002B56                          3889mm         
00002B56  3212                    3890mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B58  E149                    3891mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B5A  E949                    3892mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B5C  E049                    3893mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B5E  E849                    3894mm         LSR.W   #4, D1      
00002B60                          3895mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B60  0C01 0009               3896mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B64  6E00 000A               3897mmm         BGT     ALPHA_276
00002B68  0601 0030               3898mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B6C  6000 0006               3899mmm         BRA     DONE_276
00002B70  0601 0037               3900mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B74  4E71                    3901mmm DONE_276: NOP
00002B76                          3902mmm         ENDM
00002B76  4E4F                    3903mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B78                          3904mm         ENDM 
00002B78  361A                    3905m         MOVE.W  (A2)+, D3
00002B7A                          3906mm         ADROUT
00002B7A  3212                    3907mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B7C  E049                    3908mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7E  E849                    3909mm         LSR.W   #4, D1      
00002B80                          3910mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B80  0C01 0009               3911mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B84  6E00 000A               3912mmm         BGT     ALPHA_278
00002B88  0601 0030               3913mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B8C  6000 0006               3914mmm         BRA     DONE_278
00002B90  0601 0037               3915mmm ALPHA_278: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B94  4E71                    3916mmm DONE_278: NOP
00002B96                          3917mmm         ENDM
00002B96  4E4F                    3918mm         TRAP    #15         ; EXECUTE OUTPUT
00002B98                          3919mm         
00002B98  3212                    3920mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B9A  E949                    3921mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B9C  E049                    3922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B9E  E849                    3923mm         LSR.W   #4, D1      
00002BA0                          3924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BA0  0C01 0009               3925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BA4  6E00 000A               3926mmm         BGT     ALPHA_279
00002BA8  0601 0030               3927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BAC  6000 0006               3928mmm         BRA     DONE_279
00002BB0  0601 0037               3929mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BB4  4E71                    3930mmm DONE_279: NOP
00002BB6                          3931mmm         ENDM
00002BB6  4E4F                    3932mm         TRAP    #15         ; EXECUTE OUTPUT
00002BB8                          3933mm         
00002BB8  3212                    3934mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BBA  E149                    3935mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BBC  E049                    3936mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BBE  E849                    3937mm         LSR.W   #4, D1      
00002BC0                          3938mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BC0  0C01 0009               3939mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BC4  6E00 000A               3940mmm         BGT     ALPHA_280
00002BC8  0601 0030               3941mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BCC  6000 0006               3942mmm         BRA     DONE_280
00002BD0  0601 0037               3943mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BD4  4E71                    3944mmm DONE_280: NOP
00002BD6                          3945mmm         ENDM
00002BD6  4E4F                    3946mm         TRAP    #15         ; EXECUTE OUTPUT
00002BD8                          3947mm         
00002BD8  3212                    3948mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BDA  E149                    3949mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BDC  E949                    3950mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002BDE  E049                    3951mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BE0  E849                    3952mm         LSR.W   #4, D1      
00002BE2                          3953mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BE2  0C01 0009               3954mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BE6  6E00 000A               3955mmm         BGT     ALPHA_281
00002BEA  0601 0030               3956mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BEE  6000 0006               3957mmm         BRA     DONE_281
00002BF2  0601 0037               3958mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BF6  4E71                    3959mmm DONE_281: NOP
00002BF8                          3960mmm         ENDM
00002BF8  4E4F                    3961mm         TRAP    #15         ; EXECUTE OUTPUT       
00002BFA                          3962mm         ENDM 
00002BFA  3605                    3963m         MOVE.W  D5, D3
00002BFC                          3964m 
00002BFC                          3965m COMPLETE_219:  ; OPCODE HAS BEEN VERIFIED
00002BFC                          3966m         ENDM
00002BFC                          3967m         printComma
00002BFC  43F8 00C9               3968m         LEA     OCOMMA, A1     
00002C00  103C 000E               3969m         MOVE.B  #14,D0          
00002C04  4E4F                    3970m         TRAP    #15
00002C06                          3971m         ENDM
00002C06                          3972m         printDnDest     D3
00002C06  3203                    3973m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002C08  E949                    3974m         LSL     #$04, D1
00002C0A  E049                    3975m         LSR     #$08, D1
00002C0C  EA49                    3976m         LSR     #$05, D1
00002C0E  43F8 00C1               3977m         LEA     ODN, A1     
00002C12  103C 000E               3978m         MOVE.B  #14,D0          
00002C16  4E4F                    3979m         TRAP    #15
00002C18  103C 0003               3980m         MOVE.B  #3,D0          
00002C1C  4E4F                    3981m         TRAP    #15
00002C1E                          3982m         ENDM
00002C1E                          3983  decodeADDcomp:
00002C1E  4E75                    3984          RTS                ; Return from decodeADD subroutine
00002C20                          3985  
00002C20                          3986  
00002C20                          3987  ; ------------------------------------------------------------
00002C20                          3988  ; 5. "decodeSUB" subroutine
00002C20                          3989  ; AUTHOR
00002C20                          3990  ;
00002C20                          3991  ; TODO: DESCRIPTION
00002C20                          3992  ; ------------------------------------------------------------
00002C20                          3993  decodeSUB:
00002C20                          3994m         verifyOpcode    pSUB, (A2)
00002C20  43F8 0118               3995m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002C24  3612                    3996m         MOVE.W  (A2), D3      ; INPUT VALUE
00002C26  123C 000F               3997m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002C2A                          3998m         
00002C2A                          3999m LOOP_284: 
00002C2A  0C11 0030               4000m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002C2E  6700 000E               4001m         BEQ     CHECKFOR0_284
00002C32  0C11 0031               4002m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002C36  6700 0010               4003m         BEQ     CHECKFOR1_284
00002C3A  6000 0012               4004m         BRA     NEXT_284      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002C3E                          4005m         
00002C3E                          4006m CHECKFOR0_284: 
00002C3E  0303                    4007m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002C40  6600 3E94               4008m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002C44  6000 0008               4009m         BRA     NEXT_284
00002C48                          4010m 
00002C48                          4011m CHECKFOR1_284:
00002C48  0303                    4012m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002C4A  6700 3E8A               4013m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002C4E                          4014m 
00002C4E                          4015m NEXT_284: 
00002C4E  B23C 0000               4016m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002C52  6700 0008               4017m         BEQ     COMPLETE_284  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002C56  5301                    4018m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002C58  1819                    4019m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002C5A  60CE                    4020m         BRA     LOOP_284      ; BEGIN LOOP AGAIN
00002C5C                          4021m 
00002C5C                          4022m COMPLETE_284:  ; OPCODE HAS BEEN VERIFIED
00002C5C                          4023m         ENDM
00002C5C  43F8 0073               4024          LEA     oSUB, A1     
00002C60  103C 000E               4025          MOVE.B  #14,D0          
00002C64  4E4F                    4026          TRAP    #15
00002C66                          4027m         printOpMode     (A2)
00002C66  3612                    4028m         MOVE.W  (A2), D3      
00002C68  123C 0008               4029m         MOVE.B  #8, D1    
00002C6C  4246                    4030m         CLR     D6
00002C6E                          4031m CHECKFORDESTDN_285: 
00002C6E  0303                    4032m         BTST    D1, D3      
00002C70  6600 0048               4033m         BNE     CHECKFORSRCDN_285
00002C74  4EB9 00002D44           4034m         JSR     NEXT_285
00002C7A  1C3C 0001               4035m         MOVE.B  #$1, D6
00002C7E  0303                    4036m         BTST    D1, D3      
00002C80  6700 0010               4037m         BEQ     DESTDNW_285
00002C84                          4038m DESTDNL_285:        
00002C84  43F8 00BD               4039m         LEA     OLSIZE, A1     
00002C88  103C 000E               4040m         MOVE.B  #14,D0          
00002C8C  4E4F                    4041m         TRAP    #15
00002C8E  6000 00B8               4042m         BRA     COMPLETE_285 
00002C92                          4043m DESTDNW_285: 
00002C92  4EB9 00002D44           4044m         JSR     NEXT_285
00002C98  0303                    4045m         BTST    D1, D3      
00002C9A  6700 0010               4046m         BEQ     DESTDNB_285
00002C9E  43F8 00B9               4047m         LEA     OWSIZE, A1     
00002CA2  103C 000E               4048m         MOVE.B  #14,D0          
00002CA6  4E4F                    4049m         TRAP    #15
00002CA8  6000 009E               4050m         BRA     COMPLETE_285 
00002CAC                          4051m DESTDNB_285: 
00002CAC  43F8 00B5               4052m         LEA     OBSIZE, A1     
00002CB0  103C 000E               4053m         MOVE.B  #14,D0          
00002CB4  4E4F                    4054m         TRAP    #15
00002CB6  6000 0090               4055m         BRA     COMPLETE_285 
00002CBA                          4056m CHECKFORSRCDN_285: 
00002CBA  4EB9 00002D44           4057m         JSR     NEXT_285
00002CC0  0303                    4058m         BTST    D1, D3      
00002CC2  6700 0028               4059m         BEQ     SRCDNW_285
00002CC6                          4060m SRCDNL_285:        
00002CC6  43F8 00BD               4061m         LEA     OLSIZE, A1     
00002CCA  103C 000E               4062m         MOVE.B  #14,D0          
00002CCE  4E4F                    4063m         TRAP    #15
00002CD0                          4064mm         PRINTDNDEST D3
00002CD0  3203                    4065mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002CD2  E949                    4066mm         LSL     #$04, D1
00002CD4  E049                    4067mm         LSR     #$08, D1
00002CD6  EA49                    4068mm         LSR     #$05, D1
00002CD8  43F8 00C1               4069mm         LEA     ODN, A1     
00002CDC  103C 000E               4070mm         MOVE.B  #14,D0          
00002CE0  4E4F                    4071mm         TRAP    #15
00002CE2  103C 0003               4072mm         MOVE.B  #3,D0          
00002CE6  4E4F                    4073mm         TRAP    #15
00002CE8                          4074mm         ENDM
00002CE8  6000 005E               4075m         BRA     COMPLETE_285 
00002CEC                          4076m SRCDNW_285:
00002CEC  4EB9 00002D44           4077m         JSR     NEXT_285
00002CF2  0303                    4078m         BTST    D1, D3     
00002CF4  6700 0028               4079m         BEQ     SRCDNB_285
00002CF8  43F8 00B9               4080m         LEA     OWSIZE, A1     
00002CFC  103C 000E               4081m         MOVE.B  #14,D0          
00002D00  4E4F                    4082m         TRAP    #15
00002D02                          4083mm         PRINTDNDEST D3
00002D02  3203                    4084mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D04  E949                    4085mm         LSL     #$04, D1
00002D06  E049                    4086mm         LSR     #$08, D1
00002D08  EA49                    4087mm         LSR     #$05, D1
00002D0A  43F8 00C1               4088mm         LEA     ODN, A1     
00002D0E  103C 000E               4089mm         MOVE.B  #14,D0          
00002D12  4E4F                    4090mm         TRAP    #15
00002D14  103C 0003               4091mm         MOVE.B  #3,D0          
00002D18  4E4F                    4092mm         TRAP    #15
00002D1A                          4093mm         ENDM
00002D1A  6000 002C               4094m         BRA     COMPLETE_285 
00002D1E                          4095m SRCDNB_285: 
00002D1E  43F8 00B5               4096m         LEA     OBSIZE, A1     
00002D22  103C 000E               4097m         MOVE.B  #14,D0          
00002D26  4E4F                    4098m         TRAP    #15
00002D28                          4099mm         PRINTDNDEST D3
00002D28  3203                    4100mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D2A  E949                    4101mm         LSL     #$04, D1
00002D2C  E049                    4102mm         LSR     #$08, D1
00002D2E  EA49                    4103mm         LSR     #$05, D1
00002D30  43F8 00C1               4104mm         LEA     ODN, A1     
00002D34  103C 000E               4105mm         MOVE.B  #14,D0          
00002D38  4E4F                    4106mm         TRAP    #15
00002D3A  103C 0003               4107mm         MOVE.B  #3,D0          
00002D3E  4E4F                    4108mm         TRAP    #15
00002D40                          4109mm         ENDM
00002D40  6000 0006               4110m         BRA     COMPLETE_285 
00002D44                          4111m 
00002D44                          4112m NEXT_285:
00002D44  5301                    4113m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D46  4E75                    4114m         RTS                
00002D48                          4115m 
00002D48                          4116m COMPLETE_285:  ; OPCODE HAS BEEN VERIFIED
00002D48                          4117m         ENDM
00002D48  BC3C 0001               4118          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002D4C  6700 05E0               4119          BEQ     decodeSubDestOp
00002D50                          4120m         printComma
00002D50  43F8 00C9               4121m         LEA     OCOMMA, A1     
00002D54  103C 000E               4122m         MOVE.B  #14,D0          
00002D58  4E4F                    4123m         TRAP    #15
00002D5A                          4124m         ENDM
00002D5A                          4125m         prepareAdrMode  #$0, (A2)
00002D5A  3C3C 0000               4126m         MOVE.W  #$0, D6      ; INPUT VALUE
00002D5E  3212                    4127m         MOVE.W  (A2), D1
00002D60  BC3C 0001               4128m         CMP.B   #$01, D6
00002D64  6700 000C               4129m         BEQ     ADRSOURCE_290    
00002D68                          4130m ADRDEST_290:
00002D68  EF49                    4131m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002D6A  E049                    4132m         LSR     #$08, D1
00002D6C  EA49                    4133m         LSR     #$05, D1
00002D6E  6000 000A               4134m         BRA     COMPLETE_290 
00002D72                          4135m ADRSOURCE_290:                
00002D72  E149                    4136m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002D74  E549                    4137m         LSL     #$02, D1
00002D76  E049                    4138m         LSR     #$08, D1
00002D78  EA49                    4139m         LSR     #$05, D1
00002D7A                          4140m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D7A                          4141m         ENDM        
00002D7A                          4142m         decodeAdrMode   (A2), D1
00002D7A  3612                    4143m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002D7C  3201                    4144m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002D7E                          4145m 
00002D7E  B23C 0001               4146m         CMP.B   #$01, D1
00002D82  6700 0066               4147m         BEQ     ADRREGDIRECT_291    
00002D86  B23C 0002               4148m         CMP.B   #$02, D1
00002D8A  6700 00A0               4149m         BEQ     ADRREGINDIRECT_291  
00002D8E  B23C 0003               4150m         CMP.B   #$03, D1
00002D92  6700 0102               4151m         BEQ     ADRREGPOSTINC_291  
00002D96  B23C 0004               4152m         CMP.B   #$04, D1
00002D9A  6700 0178               4153m         BEQ     ADRREGPREDEC_291
00002D9E  B23C 0007               4154m         CMP.B   #$07, D1
00002DA2  6700 01EE               4155m         BEQ     ADRABSOLUTE_291    
00002DA6                          4156m         
00002DA6                          4157m DATAREGDIRECT_291: 
00002DA6  BC3C 0001               4158m         CMP.B   #$01, D6
00002DAA  6700 001E               4159m         BEQ     DATAREGDIRECTSRC_291   
00002DAE                          4160m DATAREGDIRECTDEST_291: 
00002DAE                          4161mm         PRINTDNDEST D3 
00002DAE  3203                    4162mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DB0  E949                    4163mm         LSL     #$04, D1
00002DB2  E049                    4164mm         LSR     #$08, D1
00002DB4  EA49                    4165mm         LSR     #$05, D1
00002DB6  43F8 00C1               4166mm         LEA     ODN, A1     
00002DBA  103C 000E               4167mm         MOVE.B  #14,D0          
00002DBE  4E4F                    4168mm         TRAP    #15
00002DC0  103C 0003               4169mm         MOVE.B  #3,D0          
00002DC4  4E4F                    4170mm         TRAP    #15
00002DC6                          4171mm         ENDM
00002DC6  6000 0562               4172m         BRA     COMPLETE_291 
00002DCA                          4173m DATAREGDIRECTSRC_291: 
00002DCA                          4174mm         PRINTDNSRC D3 
00002DCA  4281                    4175mm         CLR.L   D1
00002DCC  3203                    4176mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002DCE  E149                    4177mm         LSL     #$08, D1
00002DD0  EB49                    4178mm         LSL     #$05, D1
00002DD2  E049                    4179mm         LSR     #$08, D1
00002DD4  EA49                    4180mm         LSR     #$05, D1
00002DD6  43F8 00C1               4181mm         LEA     ODN, A1     
00002DDA  103C 000E               4182mm         MOVE.B  #14,D0          
00002DDE  4E4F                    4183mm         TRAP    #15
00002DE0  103C 0003               4184mm         MOVE.B  #3,D0          
00002DE4  4E4F                    4185mm         TRAP    #15
00002DE6                          4186mm         ENDM
00002DE6  6000 0542               4187m         BRA     COMPLETE_291   
00002DEA                          4188m         
00002DEA                          4189m ADRREGDIRECT_291: 
00002DEA  BC3C 0001               4190m         CMP.B   #$01, D6
00002DEE  6700 001E               4191m         BEQ     ADRREGDIRECTSRC_291   
00002DF2                          4192m ADRREGDIRECTDEST_291:
00002DF2                          4193mm         PRINTANDEST D3
00002DF2  3203                    4194mm         MOVE.W  D3, D1
00002DF4  E949                    4195mm         LSL     #$04, D1
00002DF6  E049                    4196mm         LSR     #$08, D1
00002DF8  EA49                    4197mm         LSR     #$05, D1
00002DFA  43F8 00C3               4198mm         LEA     OAN, A1     
00002DFE  103C 000E               4199mm         MOVE.B  #14,D0          
00002E02  4E4F                    4200mm         TRAP    #15
00002E04  103C 0003               4201mm         MOVE.B  #3,D0          
00002E08  4E4F                    4202mm         TRAP    #15
00002E0A                          4203mm         ENDM
00002E0A  6000 051E               4204m         BRA     COMPLETE_291   
00002E0E                          4205m ADRREGDIRECTSRC_291:
00002E0E                          4206mm         PRINTANSRC D3
00002E0E  3203                    4207mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E10  E149                    4208mm         LSL     #$08, D1
00002E12  EB49                    4209mm         LSL     #$05, D1
00002E14  E049                    4210mm         LSR     #$08, D1
00002E16  EA49                    4211mm         LSR     #$05, D1
00002E18  43F8 00C3               4212mm         LEA     OAN, A1     
00002E1C  103C 000E               4213mm         MOVE.B  #14,D0          
00002E20  4E4F                    4214mm         TRAP    #15
00002E22  103C 0003               4215mm         MOVE.B  #3,D0          
00002E26  4E4F                    4216mm         TRAP    #15
00002E28                          4217mm         ENDM
00002E28  6000 0500               4218m         BRA     COMPLETE_291   
00002E2C                          4219m        
00002E2C                          4220m ADRREGINDIRECT_291:   
00002E2C  BC3C 0001               4221m         CMP.B   #$01, D6
00002E30  6700 0032               4222m         BEQ     ADRREGINDIRECTSRC_291   
00002E34                          4223m ADRREGINDIRECTDEST_291:
00002E34                          4224mm         PRINTLB
00002E34  43F8 00C5               4225mm         LEA     OLB, A1     
00002E38  103C 000E               4226mm         MOVE.B  #14,D0          
00002E3C  4E4F                    4227mm         TRAP    #15
00002E3E                          4228mm         ENDM
00002E3E                          4229mm         PRINTANDEST D3  
00002E3E  3203                    4230mm         MOVE.W  D3, D1
00002E40  E949                    4231mm         LSL     #$04, D1
00002E42  E049                    4232mm         LSR     #$08, D1
00002E44  EA49                    4233mm         LSR     #$05, D1
00002E46  43F8 00C3               4234mm         LEA     OAN, A1     
00002E4A  103C 000E               4235mm         MOVE.B  #14,D0          
00002E4E  4E4F                    4236mm         TRAP    #15
00002E50  103C 0003               4237mm         MOVE.B  #3,D0          
00002E54  4E4F                    4238mm         TRAP    #15
00002E56                          4239mm         ENDM
00002E56                          4240mm         PRINTRB
00002E56  43F8 00C7               4241mm         LEA     ORB, A1     
00002E5A  103C 000E               4242mm         MOVE.B  #14,D0          
00002E5E  4E4F                    4243mm         TRAP    #15
00002E60                          4244mm         ENDM
00002E60  6000 04C8               4245m         BRA     COMPLETE_291     
00002E64                          4246m ADRREGINDIRECTSRC_291:   
00002E64                          4247mm         PRINTLB
00002E64  43F8 00C5               4248mm         LEA     OLB, A1     
00002E68  103C 000E               4249mm         MOVE.B  #14,D0          
00002E6C  4E4F                    4250mm         TRAP    #15
00002E6E                          4251mm         ENDM
00002E6E                          4252mm         PRINTANSRC D3  
00002E6E  3203                    4253mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E70  E149                    4254mm         LSL     #$08, D1
00002E72  EB49                    4255mm         LSL     #$05, D1
00002E74  E049                    4256mm         LSR     #$08, D1
00002E76  EA49                    4257mm         LSR     #$05, D1
00002E78  43F8 00C3               4258mm         LEA     OAN, A1     
00002E7C  103C 000E               4259mm         MOVE.B  #14,D0          
00002E80  4E4F                    4260mm         TRAP    #15
00002E82  103C 0003               4261mm         MOVE.B  #3,D0          
00002E86  4E4F                    4262mm         TRAP    #15
00002E88                          4263mm         ENDM
00002E88                          4264mm         PRINTRB
00002E88  43F8 00C7               4265mm         LEA     ORB, A1     
00002E8C  103C 000E               4266mm         MOVE.B  #14,D0          
00002E90  4E4F                    4267mm         TRAP    #15
00002E92                          4268mm         ENDM
00002E92  6000 0496               4269m         BRA     COMPLETE_291   
00002E96                          4270m         
00002E96                          4271m ADRREGPOSTINC_291:   
00002E96  BC3C 0001               4272m         CMP.B   #$01, D6
00002E9A  6700 003C               4273m         BEQ     ADRREGPOSTINCSRC_291   
00002E9E                          4274m ADRREGPOSTINCDEST_291: 
00002E9E                          4275mm         PRINTLB
00002E9E  43F8 00C5               4276mm         LEA     OLB, A1     
00002EA2  103C 000E               4277mm         MOVE.B  #14,D0          
00002EA6  4E4F                    4278mm         TRAP    #15
00002EA8                          4279mm         ENDM
00002EA8                          4280mm         PRINTANDEST D3  
00002EA8  3203                    4281mm         MOVE.W  D3, D1
00002EAA  E949                    4282mm         LSL     #$04, D1
00002EAC  E049                    4283mm         LSR     #$08, D1
00002EAE  EA49                    4284mm         LSR     #$05, D1
00002EB0  43F8 00C3               4285mm         LEA     OAN, A1     
00002EB4  103C 000E               4286mm         MOVE.B  #14,D0          
00002EB8  4E4F                    4287mm         TRAP    #15
00002EBA  103C 0003               4288mm         MOVE.B  #3,D0          
00002EBE  4E4F                    4289mm         TRAP    #15
00002EC0                          4290mm         ENDM
00002EC0                          4291mm         PRINTRB
00002EC0  43F8 00C7               4292mm         LEA     ORB, A1     
00002EC4  103C 000E               4293mm         MOVE.B  #14,D0          
00002EC8  4E4F                    4294mm         TRAP    #15
00002ECA                          4295mm         ENDM
00002ECA                          4296mm         PRINTPI
00002ECA  43F8 00CE               4297mm         LEA     OPSTINC, A1     
00002ECE  103C 000E               4298mm         MOVE.B  #14,D0          
00002ED2  4E4F                    4299mm         TRAP    #15
00002ED4                          4300mm         ENDM
00002ED4  6000 0454               4301m         BRA     COMPLETE_291  
00002ED8                          4302m ADRREGPOSTINCSRC_291:           
00002ED8                          4303mm         PRINTLB
00002ED8  43F8 00C5               4304mm         LEA     OLB, A1     
00002EDC  103C 000E               4305mm         MOVE.B  #14,D0          
00002EE0  4E4F                    4306mm         TRAP    #15
00002EE2                          4307mm         ENDM
00002EE2                          4308mm         PRINTANSRC D3  
00002EE2  3203                    4309mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EE4  E149                    4310mm         LSL     #$08, D1
00002EE6  EB49                    4311mm         LSL     #$05, D1
00002EE8  E049                    4312mm         LSR     #$08, D1
00002EEA  EA49                    4313mm         LSR     #$05, D1
00002EEC  43F8 00C3               4314mm         LEA     OAN, A1     
00002EF0  103C 000E               4315mm         MOVE.B  #14,D0          
00002EF4  4E4F                    4316mm         TRAP    #15
00002EF6  103C 0003               4317mm         MOVE.B  #3,D0          
00002EFA  4E4F                    4318mm         TRAP    #15
00002EFC                          4319mm         ENDM
00002EFC                          4320mm         PRINTRB
00002EFC  43F8 00C7               4321mm         LEA     ORB, A1     
00002F00  103C 000E               4322mm         MOVE.B  #14,D0          
00002F04  4E4F                    4323mm         TRAP    #15
00002F06                          4324mm         ENDM
00002F06                          4325mm         PRINTPI
00002F06  43F8 00CE               4326mm         LEA     OPSTINC, A1     
00002F0A  103C 000E               4327mm         MOVE.B  #14,D0          
00002F0E  4E4F                    4328mm         TRAP    #15
00002F10                          4329mm         ENDM
00002F10  6000 0418               4330m         BRA     COMPLETE_291  
00002F14                          4331m ADRREGPREDEC_291: 
00002F14  BC3C 0001               4332m         CMP.B   #$01, D6
00002F18  6700 003C               4333m         BEQ     ADRREGPREDECSRC_291   
00002F1C                          4334m ADRREGPREDECDEST_291:
00002F1C                          4335mm         PRINTPD  
00002F1C  43F8 00CC               4336mm         LEA     OPREDEC, A1     
00002F20  103C 000E               4337mm         MOVE.B  #14,D0          
00002F24  4E4F                    4338mm         TRAP    #15
00002F26                          4339mm         ENDM
00002F26                          4340mm         PRINTLB
00002F26  43F8 00C5               4341mm         LEA     OLB, A1     
00002F2A  103C 000E               4342mm         MOVE.B  #14,D0          
00002F2E  4E4F                    4343mm         TRAP    #15
00002F30                          4344mm         ENDM
00002F30                          4345mm         PRINTANDEST D3  
00002F30  3203                    4346mm         MOVE.W  D3, D1
00002F32  E949                    4347mm         LSL     #$04, D1
00002F34  E049                    4348mm         LSR     #$08, D1
00002F36  EA49                    4349mm         LSR     #$05, D1
00002F38  43F8 00C3               4350mm         LEA     OAN, A1     
00002F3C  103C 000E               4351mm         MOVE.B  #14,D0          
00002F40  4E4F                    4352mm         TRAP    #15
00002F42  103C 0003               4353mm         MOVE.B  #3,D0          
00002F46  4E4F                    4354mm         TRAP    #15
00002F48                          4355mm         ENDM
00002F48                          4356mm         PRINTRB
00002F48  43F8 00C7               4357mm         LEA     ORB, A1     
00002F4C  103C 000E               4358mm         MOVE.B  #14,D0          
00002F50  4E4F                    4359mm         TRAP    #15
00002F52                          4360mm         ENDM
00002F52  6000 03D6               4361m         BRA     COMPLETE_291   
00002F56                          4362m ADRREGPREDECSRC_291: 
00002F56                          4363mm         PRINTPD  
00002F56  43F8 00CC               4364mm         LEA     OPREDEC, A1     
00002F5A  103C 000E               4365mm         MOVE.B  #14,D0          
00002F5E  4E4F                    4366mm         TRAP    #15
00002F60                          4367mm         ENDM
00002F60                          4368mm         PRINTLB
00002F60  43F8 00C5               4369mm         LEA     OLB, A1     
00002F64  103C 000E               4370mm         MOVE.B  #14,D0          
00002F68  4E4F                    4371mm         TRAP    #15
00002F6A                          4372mm         ENDM
00002F6A                          4373mm         PRINTANSRC D3  
00002F6A  3203                    4374mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F6C  E149                    4375mm         LSL     #$08, D1
00002F6E  EB49                    4376mm         LSL     #$05, D1
00002F70  E049                    4377mm         LSR     #$08, D1
00002F72  EA49                    4378mm         LSR     #$05, D1
00002F74  43F8 00C3               4379mm         LEA     OAN, A1     
00002F78  103C 000E               4380mm         MOVE.B  #14,D0          
00002F7C  4E4F                    4381mm         TRAP    #15
00002F7E  103C 0003               4382mm         MOVE.B  #3,D0          
00002F82  4E4F                    4383mm         TRAP    #15
00002F84                          4384mm         ENDM
00002F84                          4385mm         PRINTRB
00002F84  43F8 00C7               4386mm         LEA     ORB, A1     
00002F88  103C 000E               4387mm         MOVE.B  #14,D0          
00002F8C  4E4F                    4388mm         TRAP    #15
00002F8E                          4389mm         ENDM
00002F8E  6000 039A               4390m         BRA     COMPLETE_291
00002F92                          4391m        
00002F92                          4392m ADRABSOLUTE_291:
00002F92  BC3C 0001               4393m         CMP.B   #$01, D6
00002F96  6600 0018               4394m         BNE     ADRABSOLUTEDST_291 
00002F9A                          4395m         
00002F9A  3A03                    4396m         MOVE.W  D3, D5
00002F9C  0803 0002               4397m         BTST    #2, D3
00002FA0  6600 0024               4398m         BNE     ADRIMMEDIATE_291
00002FA4  0803 0000               4399m         BTST    #0, D3
00002FA8  6600 0270               4400m         BNE     ADRABSOLUTEL_291
00002FAC  6000 01DA               4401m         BRA     ADRABSOLUTEW_291
00002FB0                          4402m ADRABSOLUTEDST_291:
00002FB0  3A03                    4403m         MOVE.W  D3, D5
00002FB2  0803 000B               4404m         BTST    #$B, D3
00002FB6  6600 000E               4405m         BNE     ADRIMMEDIATE_291
00002FBA  0803 0009               4406m         BTST    #$09, D3
00002FBE  6600 025A               4407m         BNE     ADRABSOLUTEL_291
00002FC2  6000 01C4               4408m         BRA     ADRABSOLUTEW_291
00002FC6                          4409m ADRIMMEDIATE_291:
00002FC6  BE3C 0001               4410m         CMP.B   #1, D7
00002FCA  6700 009E               4411m         BEQ     ADRIMMEDIATEL_291
00002FCE                          4412m ADRIMMEDIATEW_291:
00002FCE  361A                    4413m         MOVE.W  (A2)+, D3
00002FD0                          4414mm         PRINTHASH
00002FD0  103C 0006               4415mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FD4  323C 0023               4416mm         MOVE.W  #35, D1     ; AN = SIGN
00002FD8  4E4F                    4417mm         TRAP    #15         ; OUTPUT = SIGN
00002FDA                          4418mm         ENDM
00002FDA                          4419mm         PRINTSIGN
00002FDA  103C 0006               4420mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002FDE  323C 0024               4421mm         MOVE.W  #36, D1     ; AN = SIGN
00002FE2  4E4F                    4422mm         TRAP    #15         ; OUTPUT = SIGN
00002FE4                          4423mm         ENDM
00002FE4                          4424mm         ADROUT
00002FE4  3212                    4425mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002FE6  E049                    4426mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002FE8  E849                    4427mm         LSR.W   #4, D1      
00002FEA                          4428mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002FEA  0C01 0009               4429mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002FEE  6E00 000A               4430mmm         BGT     ALPHA_321
00002FF2  0601 0030               4431mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002FF6  6000 0006               4432mmm         BRA     DONE_321
00002FFA  0601 0037               4433mmm ALPHA_321: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002FFE  4E71                    4434mmm DONE_321: NOP
00003000                          4435mmm         ENDM
00003000  4E4F                    4436mm         TRAP    #15         ; EXECUTE OUTPUT
00003002                          4437mm         
00003002  3212                    4438mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003004  E949                    4439mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003006  E049                    4440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003008  E849                    4441mm         LSR.W   #4, D1      
0000300A                          4442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000300A  0C01 0009               4443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000300E  6E00 000A               4444mmm         BGT     ALPHA_322
00003012  0601 0030               4445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003016  6000 0006               4446mmm         BRA     DONE_322
0000301A  0601 0037               4447mmm ALPHA_322: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000301E  4E71                    4448mmm DONE_322: NOP
00003020                          4449mmm         ENDM
00003020  4E4F                    4450mm         TRAP    #15         ; EXECUTE OUTPUT
00003022                          4451mm         
00003022  3212                    4452mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003024  E149                    4453mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003026  E049                    4454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003028  E849                    4455mm         LSR.W   #4, D1      
0000302A                          4456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000302A  0C01 0009               4457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000302E  6E00 000A               4458mmm         BGT     ALPHA_323
00003032  0601 0030               4459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003036  6000 0006               4460mmm         BRA     DONE_323
0000303A  0601 0037               4461mmm ALPHA_323: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000303E  4E71                    4462mmm DONE_323: NOP
00003040                          4463mmm         ENDM
00003040  4E4F                    4464mm         TRAP    #15         ; EXECUTE OUTPUT
00003042                          4465mm         
00003042  3212                    4466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003044  E149                    4467mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003046  E949                    4468mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003048  E049                    4469mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000304A  E849                    4470mm         LSR.W   #4, D1      
0000304C                          4471mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000304C  0C01 0009               4472mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003050  6E00 000A               4473mmm         BGT     ALPHA_324
00003054  0601 0030               4474mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003058  6000 0006               4475mmm         BRA     DONE_324
0000305C  0601 0037               4476mmm ALPHA_324: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003060  4E71                    4477mmm DONE_324: NOP
00003062                          4478mmm         ENDM
00003062  4E4F                    4479mm         TRAP    #15         ; EXECUTE OUTPUT       
00003064                          4480mm         ENDM 
00003064  3605                    4481m         MOVE.W  D5, D3
00003066  6000 02C2               4482m         BRA     COMPLETE_291
0000306A                          4483m ADRIMMEDIATEL_291:
0000306A  361A                    4484m         MOVE.W  (A2)+, D3
0000306C                          4485mm         PRINTHASH
0000306C  103C 0006               4486mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003070  323C 0023               4487mm         MOVE.W  #35, D1     ; AN = SIGN
00003074  4E4F                    4488mm         TRAP    #15         ; OUTPUT = SIGN
00003076                          4489mm         ENDM
00003076                          4490mm         PRINTSIGN
00003076  103C 0006               4491mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000307A  323C 0024               4492mm         MOVE.W  #36, D1     ; AN = SIGN
0000307E  4E4F                    4493mm         TRAP    #15         ; OUTPUT = SIGN
00003080                          4494mm         ENDM
00003080                          4495mm         ADROUT 
00003080  3212                    4496mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003082  E049                    4497mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003084  E849                    4498mm         LSR.W   #4, D1      
00003086                          4499mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003086  0C01 0009               4500mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000308A  6E00 000A               4501mmm         BGT     ALPHA_328
0000308E  0601 0030               4502mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003092  6000 0006               4503mmm         BRA     DONE_328
00003096  0601 0037               4504mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000309A  4E71                    4505mmm DONE_328: NOP
0000309C                          4506mmm         ENDM
0000309C  4E4F                    4507mm         TRAP    #15         ; EXECUTE OUTPUT
0000309E                          4508mm         
0000309E  3212                    4509mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030A0  E949                    4510mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000030A2  E049                    4511mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030A4  E849                    4512mm         LSR.W   #4, D1      
000030A6                          4513mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030A6  0C01 0009               4514mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030AA  6E00 000A               4515mmm         BGT     ALPHA_329
000030AE  0601 0030               4516mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030B2  6000 0006               4517mmm         BRA     DONE_329
000030B6  0601 0037               4518mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030BA  4E71                    4519mmm DONE_329: NOP
000030BC                          4520mmm         ENDM
000030BC  4E4F                    4521mm         TRAP    #15         ; EXECUTE OUTPUT
000030BE                          4522mm         
000030BE  3212                    4523mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030C0  E149                    4524mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030C2  E049                    4525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030C4  E849                    4526mm         LSR.W   #4, D1      
000030C6                          4527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030C6  0C01 0009               4528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030CA  6E00 000A               4529mmm         BGT     ALPHA_330
000030CE  0601 0030               4530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030D2  6000 0006               4531mmm         BRA     DONE_330
000030D6  0601 0037               4532mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030DA  4E71                    4533mmm DONE_330: NOP
000030DC                          4534mmm         ENDM
000030DC  4E4F                    4535mm         TRAP    #15         ; EXECUTE OUTPUT
000030DE                          4536mm         
000030DE  3212                    4537mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030E0  E149                    4538mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030E2  E949                    4539mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000030E4  E049                    4540mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030E6  E849                    4541mm         LSR.W   #4, D1      
000030E8                          4542mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030E8  0C01 0009               4543mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030EC  6E00 000A               4544mmm         BGT     ALPHA_331
000030F0  0601 0030               4545mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030F4  6000 0006               4546mmm         BRA     DONE_331
000030F8  0601 0037               4547mmm ALPHA_331: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030FC  4E71                    4548mmm DONE_331: NOP
000030FE                          4549mmm         ENDM
000030FE  4E4F                    4550mm         TRAP    #15         ; EXECUTE OUTPUT       
00003100                          4551mm         ENDM 
00003100  361A                    4552m         MOVE.W  (A2)+, D3
00003102                          4553mm         ADROUT
00003102  3212                    4554mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003104  E049                    4555mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003106  E849                    4556mm         LSR.W   #4, D1      
00003108                          4557mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003108  0C01 0009               4558mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000310C  6E00 000A               4559mmm         BGT     ALPHA_333
00003110  0601 0030               4560mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003114  6000 0006               4561mmm         BRA     DONE_333
00003118  0601 0037               4562mmm ALPHA_333: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000311C  4E71                    4563mmm DONE_333: NOP
0000311E                          4564mmm         ENDM
0000311E  4E4F                    4565mm         TRAP    #15         ; EXECUTE OUTPUT
00003120                          4566mm         
00003120  3212                    4567mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003122  E949                    4568mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003124  E049                    4569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003126  E849                    4570mm         LSR.W   #4, D1      
00003128                          4571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003128  0C01 0009               4572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000312C  6E00 000A               4573mmm         BGT     ALPHA_334
00003130  0601 0030               4574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003134  6000 0006               4575mmm         BRA     DONE_334
00003138  0601 0037               4576mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000313C  4E71                    4577mmm DONE_334: NOP
0000313E                          4578mmm         ENDM
0000313E  4E4F                    4579mm         TRAP    #15         ; EXECUTE OUTPUT
00003140                          4580mm         
00003140  3212                    4581mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003142  E149                    4582mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003144  E049                    4583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003146  E849                    4584mm         LSR.W   #4, D1      
00003148                          4585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003148  0C01 0009               4586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000314C  6E00 000A               4587mmm         BGT     ALPHA_335
00003150  0601 0030               4588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003154  6000 0006               4589mmm         BRA     DONE_335
00003158  0601 0037               4590mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000315C  4E71                    4591mmm DONE_335: NOP
0000315E                          4592mmm         ENDM
0000315E  4E4F                    4593mm         TRAP    #15         ; EXECUTE OUTPUT
00003160                          4594mm         
00003160  3212                    4595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003162  E149                    4596mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003164  E949                    4597mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003166  E049                    4598mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003168  E849                    4599mm         LSR.W   #4, D1      
0000316A                          4600mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000316A  0C01 0009               4601mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000316E  6E00 000A               4602mmm         BGT     ALPHA_336
00003172  0601 0030               4603mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003176  6000 0006               4604mmm         BRA     DONE_336
0000317A  0601 0037               4605mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000317E  4E71                    4606mmm DONE_336: NOP
00003180                          4607mmm         ENDM
00003180  4E4F                    4608mm         TRAP    #15         ; EXECUTE OUTPUT       
00003182                          4609mm         ENDM 
00003182  3605                    4610m         MOVE.W  D5, D3
00003184  6000 01A4               4611m         BRA     COMPLETE_291 
00003188                          4612m ADRABSOLUTEW_291:     
00003188  361A                    4613m         MOVE.W  (A2)+, D3
0000318A                          4614mm         PRINTSIGN
0000318A  103C 0006               4615mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000318E  323C 0024               4616mm         MOVE.W  #36, D1     ; AN = SIGN
00003192  4E4F                    4617mm         TRAP    #15         ; OUTPUT = SIGN
00003194                          4618mm         ENDM
00003194                          4619mm         ADROUT
00003194  3212                    4620mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003196  E049                    4621mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003198  E849                    4622mm         LSR.W   #4, D1      
0000319A                          4623mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000319A  0C01 0009               4624mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000319E  6E00 000A               4625mmm         BGT     ALPHA_339
000031A2  0601 0030               4626mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031A6  6000 0006               4627mmm         BRA     DONE_339
000031AA  0601 0037               4628mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031AE  4E71                    4629mmm DONE_339: NOP
000031B0                          4630mmm         ENDM
000031B0  4E4F                    4631mm         TRAP    #15         ; EXECUTE OUTPUT
000031B2                          4632mm         
000031B2  3212                    4633mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031B4  E949                    4634mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031B6  E049                    4635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031B8  E849                    4636mm         LSR.W   #4, D1      
000031BA                          4637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031BA  0C01 0009               4638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031BE  6E00 000A               4639mmm         BGT     ALPHA_340
000031C2  0601 0030               4640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031C6  6000 0006               4641mmm         BRA     DONE_340
000031CA  0601 0037               4642mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031CE  4E71                    4643mmm DONE_340: NOP
000031D0                          4644mmm         ENDM
000031D0  4E4F                    4645mm         TRAP    #15         ; EXECUTE OUTPUT
000031D2                          4646mm         
000031D2  3212                    4647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031D4  E149                    4648mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031D6  E049                    4649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031D8  E849                    4650mm         LSR.W   #4, D1      
000031DA                          4651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031DA  0C01 0009               4652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031DE  6E00 000A               4653mmm         BGT     ALPHA_341
000031E2  0601 0030               4654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031E6  6000 0006               4655mmm         BRA     DONE_341
000031EA  0601 0037               4656mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031EE  4E71                    4657mmm DONE_341: NOP
000031F0                          4658mmm         ENDM
000031F0  4E4F                    4659mm         TRAP    #15         ; EXECUTE OUTPUT
000031F2                          4660mm         
000031F2  3212                    4661mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031F4  E149                    4662mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031F6  E949                    4663mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000031F8  E049                    4664mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031FA  E849                    4665mm         LSR.W   #4, D1      
000031FC                          4666mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031FC  0C01 0009               4667mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003200  6E00 000A               4668mmm         BGT     ALPHA_342
00003204  0601 0030               4669mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003208  6000 0006               4670mmm         BRA     DONE_342
0000320C  0601 0037               4671mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003210  4E71                    4672mmm DONE_342: NOP
00003212                          4673mmm         ENDM
00003212  4E4F                    4674mm         TRAP    #15         ; EXECUTE OUTPUT       
00003214                          4675mm         ENDM 
00003214  3605                    4676m         MOVE.W  D5, D3
00003216  6000 0112               4677m         BRA     COMPLETE_291  
0000321A                          4678m ADRABSOLUTEL_291:  
0000321A  361A                    4679m         MOVE.W  (A2)+, D3
0000321C                          4680mm         PRINTSIGN
0000321C  103C 0006               4681mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003220  323C 0024               4682mm         MOVE.W  #36, D1     ; AN = SIGN
00003224  4E4F                    4683mm         TRAP    #15         ; OUTPUT = SIGN
00003226                          4684mm         ENDM
00003226                          4685mm         ADROUT 
00003226  3212                    4686mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003228  E049                    4687mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000322A  E849                    4688mm         LSR.W   #4, D1      
0000322C                          4689mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000322C  0C01 0009               4690mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003230  6E00 000A               4691mmm         BGT     ALPHA_345
00003234  0601 0030               4692mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003238  6000 0006               4693mmm         BRA     DONE_345
0000323C  0601 0037               4694mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003240  4E71                    4695mmm DONE_345: NOP
00003242                          4696mmm         ENDM
00003242  4E4F                    4697mm         TRAP    #15         ; EXECUTE OUTPUT
00003244                          4698mm         
00003244  3212                    4699mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003246  E949                    4700mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003248  E049                    4701mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000324A  E849                    4702mm         LSR.W   #4, D1      
0000324C                          4703mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000324C  0C01 0009               4704mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003250  6E00 000A               4705mmm         BGT     ALPHA_346
00003254  0601 0030               4706mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003258  6000 0006               4707mmm         BRA     DONE_346
0000325C  0601 0037               4708mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003260  4E71                    4709mmm DONE_346: NOP
00003262                          4710mmm         ENDM
00003262  4E4F                    4711mm         TRAP    #15         ; EXECUTE OUTPUT
00003264                          4712mm         
00003264  3212                    4713mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003266  E149                    4714mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003268  E049                    4715mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000326A  E849                    4716mm         LSR.W   #4, D1      
0000326C                          4717mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000326C  0C01 0009               4718mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003270  6E00 000A               4719mmm         BGT     ALPHA_347
00003274  0601 0030               4720mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003278  6000 0006               4721mmm         BRA     DONE_347
0000327C  0601 0037               4722mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003280  4E71                    4723mmm DONE_347: NOP
00003282                          4724mmm         ENDM
00003282  4E4F                    4725mm         TRAP    #15         ; EXECUTE OUTPUT
00003284                          4726mm         
00003284  3212                    4727mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003286  E149                    4728mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003288  E949                    4729mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000328A  E049                    4730mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000328C  E849                    4731mm         LSR.W   #4, D1      
0000328E                          4732mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000328E  0C01 0009               4733mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003292  6E00 000A               4734mmm         BGT     ALPHA_348
00003296  0601 0030               4735mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329A  6000 0006               4736mmm         BRA     DONE_348
0000329E  0601 0037               4737mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A2  4E71                    4738mmm DONE_348: NOP
000032A4                          4739mmm         ENDM
000032A4  4E4F                    4740mm         TRAP    #15         ; EXECUTE OUTPUT       
000032A6                          4741mm         ENDM 
000032A6  361A                    4742m         MOVE.W  (A2)+, D3
000032A8                          4743mm         ADROUT
000032A8  3212                    4744mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032AA  E049                    4745mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032AC  E849                    4746mm         LSR.W   #4, D1      
000032AE                          4747mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032AE  0C01 0009               4748mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032B2  6E00 000A               4749mmm         BGT     ALPHA_350
000032B6  0601 0030               4750mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032BA  6000 0006               4751mmm         BRA     DONE_350
000032BE  0601 0037               4752mmm ALPHA_350: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032C2  4E71                    4753mmm DONE_350: NOP
000032C4                          4754mmm         ENDM
000032C4  4E4F                    4755mm         TRAP    #15         ; EXECUTE OUTPUT
000032C6                          4756mm         
000032C6  3212                    4757mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032C8  E949                    4758mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000032CA  E049                    4759mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032CC  E849                    4760mm         LSR.W   #4, D1      
000032CE                          4761mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032CE  0C01 0009               4762mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032D2  6E00 000A               4763mmm         BGT     ALPHA_351
000032D6  0601 0030               4764mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032DA  6000 0006               4765mmm         BRA     DONE_351
000032DE  0601 0037               4766mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032E2  4E71                    4767mmm DONE_351: NOP
000032E4                          4768mmm         ENDM
000032E4  4E4F                    4769mm         TRAP    #15         ; EXECUTE OUTPUT
000032E6                          4770mm         
000032E6  3212                    4771mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E8  E149                    4772mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032EA  E049                    4773mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032EC  E849                    4774mm         LSR.W   #4, D1      
000032EE                          4775mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032EE  0C01 0009               4776mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032F2  6E00 000A               4777mmm         BGT     ALPHA_352
000032F6  0601 0030               4778mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032FA  6000 0006               4779mmm         BRA     DONE_352
000032FE  0601 0037               4780mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003302  4E71                    4781mmm DONE_352: NOP
00003304                          4782mmm         ENDM
00003304  4E4F                    4783mm         TRAP    #15         ; EXECUTE OUTPUT
00003306                          4784mm         
00003306  3212                    4785mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003308  E149                    4786mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000330A  E949                    4787mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000330C  E049                    4788mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000330E  E849                    4789mm         LSR.W   #4, D1      
00003310                          4790mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003310  0C01 0009               4791mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003314  6E00 000A               4792mmm         BGT     ALPHA_353
00003318  0601 0030               4793mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000331C  6000 0006               4794mmm         BRA     DONE_353
00003320  0601 0037               4795mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003324  4E71                    4796mmm DONE_353: NOP
00003326                          4797mmm         ENDM
00003326  4E4F                    4798mm         TRAP    #15         ; EXECUTE OUTPUT       
00003328                          4799mm         ENDM 
00003328  3605                    4800m         MOVE.W  D5, D3
0000332A                          4801m 
0000332A                          4802m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
0000332A                          4803m         ENDM
0000332A  6000 05F4               4804          BRA     decodeSUBcomp
0000332E                          4805  decodeSubDestOp:
0000332E                          4806m         prepareAdrMode  #$1,(A2)
0000332E  3C3C 0001               4807m         MOVE.W  #$1, D6      ; INPUT VALUE
00003332  3212                    4808m         MOVE.W  (A2), D1
00003334  BC3C 0001               4809m         CMP.B   #$01, D6
00003338  6700 000C               4810m         BEQ     ADRSOURCE_354    
0000333C                          4811m ADRDEST_354:
0000333C  EF49                    4812m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000333E  E049                    4813m         LSR     #$08, D1
00003340  EA49                    4814m         LSR     #$05, D1
00003342  6000 000A               4815m         BRA     COMPLETE_354 
00003346                          4816m ADRSOURCE_354:                
00003346  E149                    4817m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003348  E549                    4818m         LSL     #$02, D1
0000334A  E049                    4819m         LSR     #$08, D1
0000334C  EA49                    4820m         LSR     #$05, D1
0000334E                          4821m COMPLETE_354:  ; OPCODE HAS BEEN VERIFIED
0000334E                          4822m         ENDM        
0000334E                          4823m         decodeAdrMode   (A2), D1
0000334E  3612                    4824m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003350  3201                    4825m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003352                          4826m 
00003352  B23C 0001               4827m         CMP.B   #$01, D1
00003356  6700 0066               4828m         BEQ     ADRREGDIRECT_355    
0000335A  B23C 0002               4829m         CMP.B   #$02, D1
0000335E  6700 00A0               4830m         BEQ     ADRREGINDIRECT_355  
00003362  B23C 0003               4831m         CMP.B   #$03, D1
00003366  6700 0102               4832m         BEQ     ADRREGPOSTINC_355  
0000336A  B23C 0004               4833m         CMP.B   #$04, D1
0000336E  6700 0178               4834m         BEQ     ADRREGPREDEC_355
00003372  B23C 0007               4835m         CMP.B   #$07, D1
00003376  6700 01EE               4836m         BEQ     ADRABSOLUTE_355    
0000337A                          4837m         
0000337A                          4838m DATAREGDIRECT_355: 
0000337A  BC3C 0001               4839m         CMP.B   #$01, D6
0000337E  6700 001E               4840m         BEQ     DATAREGDIRECTSRC_355   
00003382                          4841m DATAREGDIRECTDEST_355: 
00003382                          4842mm         PRINTDNDEST D3 
00003382  3203                    4843mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003384  E949                    4844mm         LSL     #$04, D1
00003386  E049                    4845mm         LSR     #$08, D1
00003388  EA49                    4846mm         LSR     #$05, D1
0000338A  43F8 00C1               4847mm         LEA     ODN, A1     
0000338E  103C 000E               4848mm         MOVE.B  #14,D0          
00003392  4E4F                    4849mm         TRAP    #15
00003394  103C 0003               4850mm         MOVE.B  #3,D0          
00003398  4E4F                    4851mm         TRAP    #15
0000339A                          4852mm         ENDM
0000339A  6000 0562               4853m         BRA     COMPLETE_355 
0000339E                          4854m DATAREGDIRECTSRC_355: 
0000339E                          4855mm         PRINTDNSRC D3 
0000339E  4281                    4856mm         CLR.L   D1
000033A0  3203                    4857mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033A2  E149                    4858mm         LSL     #$08, D1
000033A4  EB49                    4859mm         LSL     #$05, D1
000033A6  E049                    4860mm         LSR     #$08, D1
000033A8  EA49                    4861mm         LSR     #$05, D1
000033AA  43F8 00C1               4862mm         LEA     ODN, A1     
000033AE  103C 000E               4863mm         MOVE.B  #14,D0          
000033B2  4E4F                    4864mm         TRAP    #15
000033B4  103C 0003               4865mm         MOVE.B  #3,D0          
000033B8  4E4F                    4866mm         TRAP    #15
000033BA                          4867mm         ENDM
000033BA  6000 0542               4868m         BRA     COMPLETE_355   
000033BE                          4869m         
000033BE                          4870m ADRREGDIRECT_355: 
000033BE  BC3C 0001               4871m         CMP.B   #$01, D6
000033C2  6700 001E               4872m         BEQ     ADRREGDIRECTSRC_355   
000033C6                          4873m ADRREGDIRECTDEST_355:
000033C6                          4874mm         PRINTANDEST D3
000033C6  3203                    4875mm         MOVE.W  D3, D1
000033C8  E949                    4876mm         LSL     #$04, D1
000033CA  E049                    4877mm         LSR     #$08, D1
000033CC  EA49                    4878mm         LSR     #$05, D1
000033CE  43F8 00C3               4879mm         LEA     OAN, A1     
000033D2  103C 000E               4880mm         MOVE.B  #14,D0          
000033D6  4E4F                    4881mm         TRAP    #15
000033D8  103C 0003               4882mm         MOVE.B  #3,D0          
000033DC  4E4F                    4883mm         TRAP    #15
000033DE                          4884mm         ENDM
000033DE  6000 051E               4885m         BRA     COMPLETE_355   
000033E2                          4886m ADRREGDIRECTSRC_355:
000033E2                          4887mm         PRINTANSRC D3
000033E2  3203                    4888mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000033E4  E149                    4889mm         LSL     #$08, D1
000033E6  EB49                    4890mm         LSL     #$05, D1
000033E8  E049                    4891mm         LSR     #$08, D1
000033EA  EA49                    4892mm         LSR     #$05, D1
000033EC  43F8 00C3               4893mm         LEA     OAN, A1     
000033F0  103C 000E               4894mm         MOVE.B  #14,D0          
000033F4  4E4F                    4895mm         TRAP    #15
000033F6  103C 0003               4896mm         MOVE.B  #3,D0          
000033FA  4E4F                    4897mm         TRAP    #15
000033FC                          4898mm         ENDM
000033FC  6000 0500               4899m         BRA     COMPLETE_355   
00003400                          4900m        
00003400                          4901m ADRREGINDIRECT_355:   
00003400  BC3C 0001               4902m         CMP.B   #$01, D6
00003404  6700 0032               4903m         BEQ     ADRREGINDIRECTSRC_355   
00003408                          4904m ADRREGINDIRECTDEST_355:
00003408                          4905mm         PRINTLB
00003408  43F8 00C5               4906mm         LEA     OLB, A1     
0000340C  103C 000E               4907mm         MOVE.B  #14,D0          
00003410  4E4F                    4908mm         TRAP    #15
00003412                          4909mm         ENDM
00003412                          4910mm         PRINTANDEST D3  
00003412  3203                    4911mm         MOVE.W  D3, D1
00003414  E949                    4912mm         LSL     #$04, D1
00003416  E049                    4913mm         LSR     #$08, D1
00003418  EA49                    4914mm         LSR     #$05, D1
0000341A  43F8 00C3               4915mm         LEA     OAN, A1     
0000341E  103C 000E               4916mm         MOVE.B  #14,D0          
00003422  4E4F                    4917mm         TRAP    #15
00003424  103C 0003               4918mm         MOVE.B  #3,D0          
00003428  4E4F                    4919mm         TRAP    #15
0000342A                          4920mm         ENDM
0000342A                          4921mm         PRINTRB
0000342A  43F8 00C7               4922mm         LEA     ORB, A1     
0000342E  103C 000E               4923mm         MOVE.B  #14,D0          
00003432  4E4F                    4924mm         TRAP    #15
00003434                          4925mm         ENDM
00003434  6000 04C8               4926m         BRA     COMPLETE_355     
00003438                          4927m ADRREGINDIRECTSRC_355:   
00003438                          4928mm         PRINTLB
00003438  43F8 00C5               4929mm         LEA     OLB, A1     
0000343C  103C 000E               4930mm         MOVE.B  #14,D0          
00003440  4E4F                    4931mm         TRAP    #15
00003442                          4932mm         ENDM
00003442                          4933mm         PRINTANSRC D3  
00003442  3203                    4934mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003444  E149                    4935mm         LSL     #$08, D1
00003446  EB49                    4936mm         LSL     #$05, D1
00003448  E049                    4937mm         LSR     #$08, D1
0000344A  EA49                    4938mm         LSR     #$05, D1
0000344C  43F8 00C3               4939mm         LEA     OAN, A1     
00003450  103C 000E               4940mm         MOVE.B  #14,D0          
00003454  4E4F                    4941mm         TRAP    #15
00003456  103C 0003               4942mm         MOVE.B  #3,D0          
0000345A  4E4F                    4943mm         TRAP    #15
0000345C                          4944mm         ENDM
0000345C                          4945mm         PRINTRB
0000345C  43F8 00C7               4946mm         LEA     ORB, A1     
00003460  103C 000E               4947mm         MOVE.B  #14,D0          
00003464  4E4F                    4948mm         TRAP    #15
00003466                          4949mm         ENDM
00003466  6000 0496               4950m         BRA     COMPLETE_355   
0000346A                          4951m         
0000346A                          4952m ADRREGPOSTINC_355:   
0000346A  BC3C 0001               4953m         CMP.B   #$01, D6
0000346E  6700 003C               4954m         BEQ     ADRREGPOSTINCSRC_355   
00003472                          4955m ADRREGPOSTINCDEST_355: 
00003472                          4956mm         PRINTLB
00003472  43F8 00C5               4957mm         LEA     OLB, A1     
00003476  103C 000E               4958mm         MOVE.B  #14,D0          
0000347A  4E4F                    4959mm         TRAP    #15
0000347C                          4960mm         ENDM
0000347C                          4961mm         PRINTANDEST D3  
0000347C  3203                    4962mm         MOVE.W  D3, D1
0000347E  E949                    4963mm         LSL     #$04, D1
00003480  E049                    4964mm         LSR     #$08, D1
00003482  EA49                    4965mm         LSR     #$05, D1
00003484  43F8 00C3               4966mm         LEA     OAN, A1     
00003488  103C 000E               4967mm         MOVE.B  #14,D0          
0000348C  4E4F                    4968mm         TRAP    #15
0000348E  103C 0003               4969mm         MOVE.B  #3,D0          
00003492  4E4F                    4970mm         TRAP    #15
00003494                          4971mm         ENDM
00003494                          4972mm         PRINTRB
00003494  43F8 00C7               4973mm         LEA     ORB, A1     
00003498  103C 000E               4974mm         MOVE.B  #14,D0          
0000349C  4E4F                    4975mm         TRAP    #15
0000349E                          4976mm         ENDM
0000349E                          4977mm         PRINTPI
0000349E  43F8 00CE               4978mm         LEA     OPSTINC, A1     
000034A2  103C 000E               4979mm         MOVE.B  #14,D0          
000034A6  4E4F                    4980mm         TRAP    #15
000034A8                          4981mm         ENDM
000034A8  6000 0454               4982m         BRA     COMPLETE_355  
000034AC                          4983m ADRREGPOSTINCSRC_355:           
000034AC                          4984mm         PRINTLB
000034AC  43F8 00C5               4985mm         LEA     OLB, A1     
000034B0  103C 000E               4986mm         MOVE.B  #14,D0          
000034B4  4E4F                    4987mm         TRAP    #15
000034B6                          4988mm         ENDM
000034B6                          4989mm         PRINTANSRC D3  
000034B6  3203                    4990mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034B8  E149                    4991mm         LSL     #$08, D1
000034BA  EB49                    4992mm         LSL     #$05, D1
000034BC  E049                    4993mm         LSR     #$08, D1
000034BE  EA49                    4994mm         LSR     #$05, D1
000034C0  43F8 00C3               4995mm         LEA     OAN, A1     
000034C4  103C 000E               4996mm         MOVE.B  #14,D0          
000034C8  4E4F                    4997mm         TRAP    #15
000034CA  103C 0003               4998mm         MOVE.B  #3,D0          
000034CE  4E4F                    4999mm         TRAP    #15
000034D0                          5000mm         ENDM
000034D0                          5001mm         PRINTRB
000034D0  43F8 00C7               5002mm         LEA     ORB, A1     
000034D4  103C 000E               5003mm         MOVE.B  #14,D0          
000034D8  4E4F                    5004mm         TRAP    #15
000034DA                          5005mm         ENDM
000034DA                          5006mm         PRINTPI
000034DA  43F8 00CE               5007mm         LEA     OPSTINC, A1     
000034DE  103C 000E               5008mm         MOVE.B  #14,D0          
000034E2  4E4F                    5009mm         TRAP    #15
000034E4                          5010mm         ENDM
000034E4  6000 0418               5011m         BRA     COMPLETE_355  
000034E8                          5012m ADRREGPREDEC_355: 
000034E8  BC3C 0001               5013m         CMP.B   #$01, D6
000034EC  6700 003C               5014m         BEQ     ADRREGPREDECSRC_355   
000034F0                          5015m ADRREGPREDECDEST_355:
000034F0                          5016mm         PRINTPD  
000034F0  43F8 00CC               5017mm         LEA     OPREDEC, A1     
000034F4  103C 000E               5018mm         MOVE.B  #14,D0          
000034F8  4E4F                    5019mm         TRAP    #15
000034FA                          5020mm         ENDM
000034FA                          5021mm         PRINTLB
000034FA  43F8 00C5               5022mm         LEA     OLB, A1     
000034FE  103C 000E               5023mm         MOVE.B  #14,D0          
00003502  4E4F                    5024mm         TRAP    #15
00003504                          5025mm         ENDM
00003504                          5026mm         PRINTANDEST D3  
00003504  3203                    5027mm         MOVE.W  D3, D1
00003506  E949                    5028mm         LSL     #$04, D1
00003508  E049                    5029mm         LSR     #$08, D1
0000350A  EA49                    5030mm         LSR     #$05, D1
0000350C  43F8 00C3               5031mm         LEA     OAN, A1     
00003510  103C 000E               5032mm         MOVE.B  #14,D0          
00003514  4E4F                    5033mm         TRAP    #15
00003516  103C 0003               5034mm         MOVE.B  #3,D0          
0000351A  4E4F                    5035mm         TRAP    #15
0000351C                          5036mm         ENDM
0000351C                          5037mm         PRINTRB
0000351C  43F8 00C7               5038mm         LEA     ORB, A1     
00003520  103C 000E               5039mm         MOVE.B  #14,D0          
00003524  4E4F                    5040mm         TRAP    #15
00003526                          5041mm         ENDM
00003526  6000 03D6               5042m         BRA     COMPLETE_355   
0000352A                          5043m ADRREGPREDECSRC_355: 
0000352A                          5044mm         PRINTPD  
0000352A  43F8 00CC               5045mm         LEA     OPREDEC, A1     
0000352E  103C 000E               5046mm         MOVE.B  #14,D0          
00003532  4E4F                    5047mm         TRAP    #15
00003534                          5048mm         ENDM
00003534                          5049mm         PRINTLB
00003534  43F8 00C5               5050mm         LEA     OLB, A1     
00003538  103C 000E               5051mm         MOVE.B  #14,D0          
0000353C  4E4F                    5052mm         TRAP    #15
0000353E                          5053mm         ENDM
0000353E                          5054mm         PRINTANSRC D3  
0000353E  3203                    5055mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003540  E149                    5056mm         LSL     #$08, D1
00003542  EB49                    5057mm         LSL     #$05, D1
00003544  E049                    5058mm         LSR     #$08, D1
00003546  EA49                    5059mm         LSR     #$05, D1
00003548  43F8 00C3               5060mm         LEA     OAN, A1     
0000354C  103C 000E               5061mm         MOVE.B  #14,D0          
00003550  4E4F                    5062mm         TRAP    #15
00003552  103C 0003               5063mm         MOVE.B  #3,D0          
00003556  4E4F                    5064mm         TRAP    #15
00003558                          5065mm         ENDM
00003558                          5066mm         PRINTRB
00003558  43F8 00C7               5067mm         LEA     ORB, A1     
0000355C  103C 000E               5068mm         MOVE.B  #14,D0          
00003560  4E4F                    5069mm         TRAP    #15
00003562                          5070mm         ENDM
00003562  6000 039A               5071m         BRA     COMPLETE_355
00003566                          5072m        
00003566                          5073m ADRABSOLUTE_355:
00003566  BC3C 0001               5074m         CMP.B   #$01, D6
0000356A  6600 0018               5075m         BNE     ADRABSOLUTEDST_355 
0000356E                          5076m         
0000356E  3A03                    5077m         MOVE.W  D3, D5
00003570  0803 0002               5078m         BTST    #2, D3
00003574  6600 0024               5079m         BNE     ADRIMMEDIATE_355
00003578  0803 0000               5080m         BTST    #0, D3
0000357C  6600 0270               5081m         BNE     ADRABSOLUTEL_355
00003580  6000 01DA               5082m         BRA     ADRABSOLUTEW_355
00003584                          5083m ADRABSOLUTEDST_355:
00003584  3A03                    5084m         MOVE.W  D3, D5
00003586  0803 000B               5085m         BTST    #$B, D3
0000358A  6600 000E               5086m         BNE     ADRIMMEDIATE_355
0000358E  0803 0009               5087m         BTST    #$09, D3
00003592  6600 025A               5088m         BNE     ADRABSOLUTEL_355
00003596  6000 01C4               5089m         BRA     ADRABSOLUTEW_355
0000359A                          5090m ADRIMMEDIATE_355:
0000359A  BE3C 0001               5091m         CMP.B   #1, D7
0000359E  6700 009E               5092m         BEQ     ADRIMMEDIATEL_355
000035A2                          5093m ADRIMMEDIATEW_355:
000035A2  361A                    5094m         MOVE.W  (A2)+, D3
000035A4                          5095mm         PRINTHASH
000035A4  103C 0006               5096mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035A8  323C 0023               5097mm         MOVE.W  #35, D1     ; AN = SIGN
000035AC  4E4F                    5098mm         TRAP    #15         ; OUTPUT = SIGN
000035AE                          5099mm         ENDM
000035AE                          5100mm         PRINTSIGN
000035AE  103C 0006               5101mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000035B2  323C 0024               5102mm         MOVE.W  #36, D1     ; AN = SIGN
000035B6  4E4F                    5103mm         TRAP    #15         ; OUTPUT = SIGN
000035B8                          5104mm         ENDM
000035B8                          5105mm         ADROUT
000035B8  3212                    5106mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035BA  E049                    5107mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035BC  E849                    5108mm         LSR.W   #4, D1      
000035BE                          5109mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035BE  0C01 0009               5110mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035C2  6E00 000A               5111mmm         BGT     ALPHA_385
000035C6  0601 0030               5112mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035CA  6000 0006               5113mmm         BRA     DONE_385
000035CE  0601 0037               5114mmm ALPHA_385: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035D2  4E71                    5115mmm DONE_385: NOP
000035D4                          5116mmm         ENDM
000035D4  4E4F                    5117mm         TRAP    #15         ; EXECUTE OUTPUT
000035D6                          5118mm         
000035D6  3212                    5119mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035D8  E949                    5120mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000035DA  E049                    5121mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035DC  E849                    5122mm         LSR.W   #4, D1      
000035DE                          5123mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035DE  0C01 0009               5124mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000035E2  6E00 000A               5125mmm         BGT     ALPHA_386
000035E6  0601 0030               5126mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000035EA  6000 0006               5127mmm         BRA     DONE_386
000035EE  0601 0037               5128mmm ALPHA_386: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000035F2  4E71                    5129mmm DONE_386: NOP
000035F4                          5130mmm         ENDM
000035F4  4E4F                    5131mm         TRAP    #15         ; EXECUTE OUTPUT
000035F6                          5132mm         
000035F6  3212                    5133mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000035F8  E149                    5134mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000035FA  E049                    5135mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000035FC  E849                    5136mm         LSR.W   #4, D1      
000035FE                          5137mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000035FE  0C01 0009               5138mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003602  6E00 000A               5139mmm         BGT     ALPHA_387
00003606  0601 0030               5140mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000360A  6000 0006               5141mmm         BRA     DONE_387
0000360E  0601 0037               5142mmm ALPHA_387: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003612  4E71                    5143mmm DONE_387: NOP
00003614                          5144mmm         ENDM
00003614  4E4F                    5145mm         TRAP    #15         ; EXECUTE OUTPUT
00003616                          5146mm         
00003616  3212                    5147mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003618  E149                    5148mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000361A  E949                    5149mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000361C  E049                    5150mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000361E  E849                    5151mm         LSR.W   #4, D1      
00003620                          5152mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003620  0C01 0009               5153mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003624  6E00 000A               5154mmm         BGT     ALPHA_388
00003628  0601 0030               5155mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000362C  6000 0006               5156mmm         BRA     DONE_388
00003630  0601 0037               5157mmm ALPHA_388: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003634  4E71                    5158mmm DONE_388: NOP
00003636                          5159mmm         ENDM
00003636  4E4F                    5160mm         TRAP    #15         ; EXECUTE OUTPUT       
00003638                          5161mm         ENDM 
00003638  3605                    5162m         MOVE.W  D5, D3
0000363A  6000 02C2               5163m         BRA     COMPLETE_355
0000363E                          5164m ADRIMMEDIATEL_355:
0000363E  361A                    5165m         MOVE.W  (A2)+, D3
00003640                          5166mm         PRINTHASH
00003640  103C 0006               5167mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003644  323C 0023               5168mm         MOVE.W  #35, D1     ; AN = SIGN
00003648  4E4F                    5169mm         TRAP    #15         ; OUTPUT = SIGN
0000364A                          5170mm         ENDM
0000364A                          5171mm         PRINTSIGN
0000364A  103C 0006               5172mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000364E  323C 0024               5173mm         MOVE.W  #36, D1     ; AN = SIGN
00003652  4E4F                    5174mm         TRAP    #15         ; OUTPUT = SIGN
00003654                          5175mm         ENDM
00003654                          5176mm         ADROUT 
00003654  3212                    5177mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003656  E049                    5178mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003658  E849                    5179mm         LSR.W   #4, D1      
0000365A                          5180mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000365A  0C01 0009               5181mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000365E  6E00 000A               5182mmm         BGT     ALPHA_392
00003662  0601 0030               5183mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003666  6000 0006               5184mmm         BRA     DONE_392
0000366A  0601 0037               5185mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000366E  4E71                    5186mmm DONE_392: NOP
00003670                          5187mmm         ENDM
00003670  4E4F                    5188mm         TRAP    #15         ; EXECUTE OUTPUT
00003672                          5189mm         
00003672  3212                    5190mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003674  E949                    5191mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003676  E049                    5192mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003678  E849                    5193mm         LSR.W   #4, D1      
0000367A                          5194mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000367A  0C01 0009               5195mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000367E  6E00 000A               5196mmm         BGT     ALPHA_393
00003682  0601 0030               5197mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003686  6000 0006               5198mmm         BRA     DONE_393
0000368A  0601 0037               5199mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000368E  4E71                    5200mmm DONE_393: NOP
00003690                          5201mmm         ENDM
00003690  4E4F                    5202mm         TRAP    #15         ; EXECUTE OUTPUT
00003692                          5203mm         
00003692  3212                    5204mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003694  E149                    5205mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003696  E049                    5206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003698  E849                    5207mm         LSR.W   #4, D1      
0000369A                          5208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000369A  0C01 0009               5209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000369E  6E00 000A               5210mmm         BGT     ALPHA_394
000036A2  0601 0030               5211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036A6  6000 0006               5212mmm         BRA     DONE_394
000036AA  0601 0037               5213mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036AE  4E71                    5214mmm DONE_394: NOP
000036B0                          5215mmm         ENDM
000036B0  4E4F                    5216mm         TRAP    #15         ; EXECUTE OUTPUT
000036B2                          5217mm         
000036B2  3212                    5218mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036B4  E149                    5219mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036B6  E949                    5220mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000036B8  E049                    5221mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036BA  E849                    5222mm         LSR.W   #4, D1      
000036BC                          5223mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036BC  0C01 0009               5224mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036C0  6E00 000A               5225mmm         BGT     ALPHA_395
000036C4  0601 0030               5226mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036C8  6000 0006               5227mmm         BRA     DONE_395
000036CC  0601 0037               5228mmm ALPHA_395: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036D0  4E71                    5229mmm DONE_395: NOP
000036D2                          5230mmm         ENDM
000036D2  4E4F                    5231mm         TRAP    #15         ; EXECUTE OUTPUT       
000036D4                          5232mm         ENDM 
000036D4  361A                    5233m         MOVE.W  (A2)+, D3
000036D6                          5234mm         ADROUT
000036D6  3212                    5235mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036D8  E049                    5236mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036DA  E849                    5237mm         LSR.W   #4, D1      
000036DC                          5238mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036DC  0C01 0009               5239mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036E0  6E00 000A               5240mmm         BGT     ALPHA_397
000036E4  0601 0030               5241mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036E8  6000 0006               5242mmm         BRA     DONE_397
000036EC  0601 0037               5243mmm ALPHA_397: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036F0  4E71                    5244mmm DONE_397: NOP
000036F2                          5245mmm         ENDM
000036F2  4E4F                    5246mm         TRAP    #15         ; EXECUTE OUTPUT
000036F4                          5247mm         
000036F4  3212                    5248mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036F6  E949                    5249mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000036F8  E049                    5250mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036FA  E849                    5251mm         LSR.W   #4, D1      
000036FC                          5252mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036FC  0C01 0009               5253mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003700  6E00 000A               5254mmm         BGT     ALPHA_398
00003704  0601 0030               5255mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003708  6000 0006               5256mmm         BRA     DONE_398
0000370C  0601 0037               5257mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003710  4E71                    5258mmm DONE_398: NOP
00003712                          5259mmm         ENDM
00003712  4E4F                    5260mm         TRAP    #15         ; EXECUTE OUTPUT
00003714                          5261mm         
00003714  3212                    5262mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003716  E149                    5263mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003718  E049                    5264mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000371A  E849                    5265mm         LSR.W   #4, D1      
0000371C                          5266mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000371C  0C01 0009               5267mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003720  6E00 000A               5268mmm         BGT     ALPHA_399
00003724  0601 0030               5269mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003728  6000 0006               5270mmm         BRA     DONE_399
0000372C  0601 0037               5271mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003730  4E71                    5272mmm DONE_399: NOP
00003732                          5273mmm         ENDM
00003732  4E4F                    5274mm         TRAP    #15         ; EXECUTE OUTPUT
00003734                          5275mm         
00003734  3212                    5276mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003736  E149                    5277mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003738  E949                    5278mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000373A  E049                    5279mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000373C  E849                    5280mm         LSR.W   #4, D1      
0000373E                          5281mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000373E  0C01 0009               5282mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003742  6E00 000A               5283mmm         BGT     ALPHA_400
00003746  0601 0030               5284mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000374A  6000 0006               5285mmm         BRA     DONE_400
0000374E  0601 0037               5286mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003752  4E71                    5287mmm DONE_400: NOP
00003754                          5288mmm         ENDM
00003754  4E4F                    5289mm         TRAP    #15         ; EXECUTE OUTPUT       
00003756                          5290mm         ENDM 
00003756  3605                    5291m         MOVE.W  D5, D3
00003758  6000 01A4               5292m         BRA     COMPLETE_355 
0000375C                          5293m ADRABSOLUTEW_355:     
0000375C  361A                    5294m         MOVE.W  (A2)+, D3
0000375E                          5295mm         PRINTSIGN
0000375E  103C 0006               5296mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003762  323C 0024               5297mm         MOVE.W  #36, D1     ; AN = SIGN
00003766  4E4F                    5298mm         TRAP    #15         ; OUTPUT = SIGN
00003768                          5299mm         ENDM
00003768                          5300mm         ADROUT
00003768  3212                    5301mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000376A  E049                    5302mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000376C  E849                    5303mm         LSR.W   #4, D1      
0000376E                          5304mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000376E  0C01 0009               5305mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003772  6E00 000A               5306mmm         BGT     ALPHA_403
00003776  0601 0030               5307mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000377A  6000 0006               5308mmm         BRA     DONE_403
0000377E  0601 0037               5309mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003782  4E71                    5310mmm DONE_403: NOP
00003784                          5311mmm         ENDM
00003784  4E4F                    5312mm         TRAP    #15         ; EXECUTE OUTPUT
00003786                          5313mm         
00003786  3212                    5314mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003788  E949                    5315mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000378A  E049                    5316mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000378C  E849                    5317mm         LSR.W   #4, D1      
0000378E                          5318mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000378E  0C01 0009               5319mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003792  6E00 000A               5320mmm         BGT     ALPHA_404
00003796  0601 0030               5321mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000379A  6000 0006               5322mmm         BRA     DONE_404
0000379E  0601 0037               5323mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037A2  4E71                    5324mmm DONE_404: NOP
000037A4                          5325mmm         ENDM
000037A4  4E4F                    5326mm         TRAP    #15         ; EXECUTE OUTPUT
000037A6                          5327mm         
000037A6  3212                    5328mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037A8  E149                    5329mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037AA  E049                    5330mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037AC  E849                    5331mm         LSR.W   #4, D1      
000037AE                          5332mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037AE  0C01 0009               5333mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B2  6E00 000A               5334mmm         BGT     ALPHA_405
000037B6  0601 0030               5335mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037BA  6000 0006               5336mmm         BRA     DONE_405
000037BE  0601 0037               5337mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C2  4E71                    5338mmm DONE_405: NOP
000037C4                          5339mmm         ENDM
000037C4  4E4F                    5340mm         TRAP    #15         ; EXECUTE OUTPUT
000037C6                          5341mm         
000037C6  3212                    5342mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037C8  E149                    5343mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037CA  E949                    5344mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037CC  E049                    5345mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037CE  E849                    5346mm         LSR.W   #4, D1      
000037D0                          5347mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D0  0C01 0009               5348mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D4  6E00 000A               5349mmm         BGT     ALPHA_406
000037D8  0601 0030               5350mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037DC  6000 0006               5351mmm         BRA     DONE_406
000037E0  0601 0037               5352mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E4  4E71                    5353mmm DONE_406: NOP
000037E6                          5354mmm         ENDM
000037E6  4E4F                    5355mm         TRAP    #15         ; EXECUTE OUTPUT       
000037E8                          5356mm         ENDM 
000037E8  3605                    5357m         MOVE.W  D5, D3
000037EA  6000 0112               5358m         BRA     COMPLETE_355  
000037EE                          5359m ADRABSOLUTEL_355:  
000037EE  361A                    5360m         MOVE.W  (A2)+, D3
000037F0                          5361mm         PRINTSIGN
000037F0  103C 0006               5362mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000037F4  323C 0024               5363mm         MOVE.W  #36, D1     ; AN = SIGN
000037F8  4E4F                    5364mm         TRAP    #15         ; OUTPUT = SIGN
000037FA                          5365mm         ENDM
000037FA                          5366mm         ADROUT 
000037FA  3212                    5367mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037FC  E049                    5368mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037FE  E849                    5369mm         LSR.W   #4, D1      
00003800                          5370mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003800  0C01 0009               5371mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003804  6E00 000A               5372mmm         BGT     ALPHA_409
00003808  0601 0030               5373mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000380C  6000 0006               5374mmm         BRA     DONE_409
00003810  0601 0037               5375mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003814  4E71                    5376mmm DONE_409: NOP
00003816                          5377mmm         ENDM
00003816  4E4F                    5378mm         TRAP    #15         ; EXECUTE OUTPUT
00003818                          5379mm         
00003818  3212                    5380mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000381A  E949                    5381mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000381C  E049                    5382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000381E  E849                    5383mm         LSR.W   #4, D1      
00003820                          5384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003820  0C01 0009               5385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003824  6E00 000A               5386mmm         BGT     ALPHA_410
00003828  0601 0030               5387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000382C  6000 0006               5388mmm         BRA     DONE_410
00003830  0601 0037               5389mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003834  4E71                    5390mmm DONE_410: NOP
00003836                          5391mmm         ENDM
00003836  4E4F                    5392mm         TRAP    #15         ; EXECUTE OUTPUT
00003838                          5393mm         
00003838  3212                    5394mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000383A  E149                    5395mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000383C  E049                    5396mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000383E  E849                    5397mm         LSR.W   #4, D1      
00003840                          5398mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003840  0C01 0009               5399mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003844  6E00 000A               5400mmm         BGT     ALPHA_411
00003848  0601 0030               5401mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000384C  6000 0006               5402mmm         BRA     DONE_411
00003850  0601 0037               5403mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003854  4E71                    5404mmm DONE_411: NOP
00003856                          5405mmm         ENDM
00003856  4E4F                    5406mm         TRAP    #15         ; EXECUTE OUTPUT
00003858                          5407mm         
00003858  3212                    5408mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000385A  E149                    5409mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000385C  E949                    5410mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000385E  E049                    5411mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003860  E849                    5412mm         LSR.W   #4, D1      
00003862                          5413mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003862  0C01 0009               5414mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003866  6E00 000A               5415mmm         BGT     ALPHA_412
0000386A  0601 0030               5416mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000386E  6000 0006               5417mmm         BRA     DONE_412
00003872  0601 0037               5418mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003876  4E71                    5419mmm DONE_412: NOP
00003878                          5420mmm         ENDM
00003878  4E4F                    5421mm         TRAP    #15         ; EXECUTE OUTPUT       
0000387A                          5422mm         ENDM 
0000387A  361A                    5423m         MOVE.W  (A2)+, D3
0000387C                          5424mm         ADROUT
0000387C  3212                    5425mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000387E  E049                    5426mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003880  E849                    5427mm         LSR.W   #4, D1      
00003882                          5428mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003882  0C01 0009               5429mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003886  6E00 000A               5430mmm         BGT     ALPHA_414
0000388A  0601 0030               5431mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000388E  6000 0006               5432mmm         BRA     DONE_414
00003892  0601 0037               5433mmm ALPHA_414: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003896  4E71                    5434mmm DONE_414: NOP
00003898                          5435mmm         ENDM
00003898  4E4F                    5436mm         TRAP    #15         ; EXECUTE OUTPUT
0000389A                          5437mm         
0000389A  3212                    5438mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000389C  E949                    5439mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000389E  E049                    5440mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038A0  E849                    5441mm         LSR.W   #4, D1      
000038A2                          5442mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038A2  0C01 0009               5443mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038A6  6E00 000A               5444mmm         BGT     ALPHA_415
000038AA  0601 0030               5445mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038AE  6000 0006               5446mmm         BRA     DONE_415
000038B2  0601 0037               5447mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038B6  4E71                    5448mmm DONE_415: NOP
000038B8                          5449mmm         ENDM
000038B8  4E4F                    5450mm         TRAP    #15         ; EXECUTE OUTPUT
000038BA                          5451mm         
000038BA  3212                    5452mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038BC  E149                    5453mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038BE  E049                    5454mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038C0  E849                    5455mm         LSR.W   #4, D1      
000038C2                          5456mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038C2  0C01 0009               5457mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038C6  6E00 000A               5458mmm         BGT     ALPHA_416
000038CA  0601 0030               5459mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038CE  6000 0006               5460mmm         BRA     DONE_416
000038D2  0601 0037               5461mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038D6  4E71                    5462mmm DONE_416: NOP
000038D8                          5463mmm         ENDM
000038D8  4E4F                    5464mm         TRAP    #15         ; EXECUTE OUTPUT
000038DA                          5465mm         
000038DA  3212                    5466mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038DC  E149                    5467mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038DE  E949                    5468mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000038E0  E049                    5469mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038E2  E849                    5470mm         LSR.W   #4, D1      
000038E4                          5471mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038E4  0C01 0009               5472mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038E8  6E00 000A               5473mmm         BGT     ALPHA_417
000038EC  0601 0030               5474mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038F0  6000 0006               5475mmm         BRA     DONE_417
000038F4  0601 0037               5476mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038F8  4E71                    5477mmm DONE_417: NOP
000038FA                          5478mmm         ENDM
000038FA  4E4F                    5479mm         TRAP    #15         ; EXECUTE OUTPUT       
000038FC                          5480mm         ENDM 
000038FC  3605                    5481m         MOVE.W  D5, D3
000038FE                          5482m 
000038FE                          5483m COMPLETE_355:  ; OPCODE HAS BEEN VERIFIED
000038FE                          5484m         ENDM
000038FE                          5485m         printComma
000038FE  43F8 00C9               5486m         LEA     OCOMMA, A1     
00003902  103C 000E               5487m         MOVE.B  #14,D0          
00003906  4E4F                    5488m         TRAP    #15
00003908                          5489m         ENDM
00003908                          5490m         printDnDest     D3
00003908  3203                    5491m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000390A  E949                    5492m         LSL     #$04, D1
0000390C  E049                    5493m         LSR     #$08, D1
0000390E  EA49                    5494m         LSR     #$05, D1
00003910  43F8 00C1               5495m         LEA     ODN, A1     
00003914  103C 000E               5496m         MOVE.B  #14,D0          
00003918  4E4F                    5497m         TRAP    #15
0000391A  103C 0003               5498m         MOVE.B  #3,D0          
0000391E  4E4F                    5499m         TRAP    #15
00003920                          5500m         ENDM
00003920                          5501  decodeSUBcomp:
00003920  4E75                    5502          RTS                ; Return from decodeSUBcomp subroutine
00003922                          5503  
00003922                          5504  
00003922                          5505  ; ------------------------------------------------------------
00003922                          5506  ; 6. "decodeMULS" subroutine
00003922                          5507  ; AUTHOR
00003922                          5508  ;
00003922                          5509  ; TODO: DESCRIPTION MULS
00003922                          5510  ; ------------------------------------------------------------
00003922                          5511  decodeMULS:
00003922                          5512m         verifyOpcode    pMULS, (A2)
00003922  43F8 0129               5513m         LEA     PMULS, A1      ; INPUT PATTERN STRING
00003926  3612                    5514m         MOVE.W  (A2), D3      ; INPUT VALUE
00003928  123C 000F               5515m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000392C                          5516m         
0000392C                          5517m LOOP_420: 
0000392C  0C11 0030               5518m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003930  6700 000E               5519m         BEQ     CHECKFOR0_420
00003934  0C11 0031               5520m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003938  6700 0010               5521m         BEQ     CHECKFOR1_420
0000393C  6000 0012               5522m         BRA     NEXT_420      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003940                          5523m         
00003940                          5524m CHECKFOR0_420: 
00003940  0303                    5525m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003942  6600 3192               5526m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003946  6000 0008               5527m         BRA     NEXT_420
0000394A                          5528m 
0000394A                          5529m CHECKFOR1_420:
0000394A  0303                    5530m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000394C  6700 3188               5531m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003950                          5532m 
00003950                          5533m NEXT_420: 
00003950  B23C 0000               5534m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003954  6700 0008               5535m         BEQ     COMPLETE_420  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003958  5301                    5536m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000395A  1819                    5537m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000395C  60CE                    5538m         BRA     LOOP_420      ; BEGIN LOOP AGAIN
0000395E                          5539m 
0000395E                          5540m COMPLETE_420:  ; OPCODE HAS BEEN VERIFIED
0000395E                          5541m         ENDM
0000395E  43F8 0077               5542          LEA     oMULS, A1     
00003962  103C 000E               5543          MOVE.B  #14,D0          
00003966  4E4F                    5544          TRAP    #15
00003968                          5545m         printSize       (A2)
00003968  3612                    5546m         MOVE.W  (A2), D3      ; INPUT VALUE
0000396A  4247                    5547m         CLR     D7      
0000396C                          5548m CHECKFORB_421: 
0000396C  0803 000D               5549m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003970  6600 0010               5550m         BNE     CHECKFORW_421  ; IF NOT GO TO WORD SIZE
00003974  43F8 00B5               5551m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003978  103C 000E               5552m         MOVE.B  #14,D0          
0000397C  4E4F                    5553m         TRAP    #15
0000397E  6000 0026               5554m         BRA     COMPLETE_421      
00003982                          5555m CHECKFORW_421: 
00003982  0803 000C               5556m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003986  6700 0010               5557m         BEQ     CHECKFORL_421  ; IF NOT, SIZE CANNOT BE WORD
0000398A  43F8 00B9               5558m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
0000398E  103C 000E               5559m         MOVE.B  #14,D0          
00003992  4E4F                    5560m         TRAP    #15
00003994  6000 0010               5561m         BRA     COMPLETE_421  
00003998                          5562m CHECKFORL_421:
00003998  1E3C 0001               5563m         MOVE.B  #$1, D7
0000399C  43F8 00BD               5564m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000039A0  103C 000E               5565m         MOVE.B  #14,D0          
000039A4  4E4F                    5566m         TRAP    #15
000039A6                          5567m COMPLETE_421:  ; SIZE HAS BEEN PRINTED
000039A6                          5568m         ENDM
000039A6                          5569m         prepareAdrMode  #$1, (A2)
000039A6  3C3C 0001               5570m         MOVE.W  #$1, D6      ; INPUT VALUE
000039AA  3212                    5571m         MOVE.W  (A2), D1
000039AC  BC3C 0001               5572m         CMP.B   #$01, D6
000039B0  6700 000C               5573m         BEQ     ADRSOURCE_422    
000039B4                          5574m ADRDEST_422:
000039B4  EF49                    5575m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000039B6  E049                    5576m         LSR     #$08, D1
000039B8  EA49                    5577m         LSR     #$05, D1
000039BA  6000 000A               5578m         BRA     COMPLETE_422 
000039BE                          5579m ADRSOURCE_422:                
000039BE  E149                    5580m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000039C0  E549                    5581m         LSL     #$02, D1
000039C2  E049                    5582m         LSR     #$08, D1
000039C4  EA49                    5583m         LSR     #$05, D1
000039C6                          5584m COMPLETE_422:  ; OPCODE HAS BEEN VERIFIED
000039C6                          5585m         ENDM        
000039C6                          5586m         decodeAdrMode   (A2), D1
000039C6  3612                    5587m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000039C8  3201                    5588m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000039CA                          5589m 
000039CA  B23C 0001               5590m         CMP.B   #$01, D1
000039CE  6700 0066               5591m         BEQ     ADRREGDIRECT_423    
000039D2  B23C 0002               5592m         CMP.B   #$02, D1
000039D6  6700 00A0               5593m         BEQ     ADRREGINDIRECT_423  
000039DA  B23C 0003               5594m         CMP.B   #$03, D1
000039DE  6700 0102               5595m         BEQ     ADRREGPOSTINC_423  
000039E2  B23C 0004               5596m         CMP.B   #$04, D1
000039E6  6700 0178               5597m         BEQ     ADRREGPREDEC_423
000039EA  B23C 0007               5598m         CMP.B   #$07, D1
000039EE  6700 01EE               5599m         BEQ     ADRABSOLUTE_423    
000039F2                          5600m         
000039F2                          5601m DATAREGDIRECT_423: 
000039F2  BC3C 0001               5602m         CMP.B   #$01, D6
000039F6  6700 001E               5603m         BEQ     DATAREGDIRECTSRC_423   
000039FA                          5604m DATAREGDIRECTDEST_423: 
000039FA                          5605mm         PRINTDNDEST D3 
000039FA  3203                    5606mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000039FC  E949                    5607mm         LSL     #$04, D1
000039FE  E049                    5608mm         LSR     #$08, D1
00003A00  EA49                    5609mm         LSR     #$05, D1
00003A02  43F8 00C1               5610mm         LEA     ODN, A1     
00003A06  103C 000E               5611mm         MOVE.B  #14,D0          
00003A0A  4E4F                    5612mm         TRAP    #15
00003A0C  103C 0003               5613mm         MOVE.B  #3,D0          
00003A10  4E4F                    5614mm         TRAP    #15
00003A12                          5615mm         ENDM
00003A12  6000 0562               5616m         BRA     COMPLETE_423 
00003A16                          5617m DATAREGDIRECTSRC_423: 
00003A16                          5618mm         PRINTDNSRC D3 
00003A16  4281                    5619mm         CLR.L   D1
00003A18  3203                    5620mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A1A  E149                    5621mm         LSL     #$08, D1
00003A1C  EB49                    5622mm         LSL     #$05, D1
00003A1E  E049                    5623mm         LSR     #$08, D1
00003A20  EA49                    5624mm         LSR     #$05, D1
00003A22  43F8 00C1               5625mm         LEA     ODN, A1     
00003A26  103C 000E               5626mm         MOVE.B  #14,D0          
00003A2A  4E4F                    5627mm         TRAP    #15
00003A2C  103C 0003               5628mm         MOVE.B  #3,D0          
00003A30  4E4F                    5629mm         TRAP    #15
00003A32                          5630mm         ENDM
00003A32  6000 0542               5631m         BRA     COMPLETE_423   
00003A36                          5632m         
00003A36                          5633m ADRREGDIRECT_423: 
00003A36  BC3C 0001               5634m         CMP.B   #$01, D6
00003A3A  6700 001E               5635m         BEQ     ADRREGDIRECTSRC_423   
00003A3E                          5636m ADRREGDIRECTDEST_423:
00003A3E                          5637mm         PRINTANDEST D3
00003A3E  3203                    5638mm         MOVE.W  D3, D1
00003A40  E949                    5639mm         LSL     #$04, D1
00003A42  E049                    5640mm         LSR     #$08, D1
00003A44  EA49                    5641mm         LSR     #$05, D1
00003A46  43F8 00C3               5642mm         LEA     OAN, A1     
00003A4A  103C 000E               5643mm         MOVE.B  #14,D0          
00003A4E  4E4F                    5644mm         TRAP    #15
00003A50  103C 0003               5645mm         MOVE.B  #3,D0          
00003A54  4E4F                    5646mm         TRAP    #15
00003A56                          5647mm         ENDM
00003A56  6000 051E               5648m         BRA     COMPLETE_423   
00003A5A                          5649m ADRREGDIRECTSRC_423:
00003A5A                          5650mm         PRINTANSRC D3
00003A5A  3203                    5651mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A5C  E149                    5652mm         LSL     #$08, D1
00003A5E  EB49                    5653mm         LSL     #$05, D1
00003A60  E049                    5654mm         LSR     #$08, D1
00003A62  EA49                    5655mm         LSR     #$05, D1
00003A64  43F8 00C3               5656mm         LEA     OAN, A1     
00003A68  103C 000E               5657mm         MOVE.B  #14,D0          
00003A6C  4E4F                    5658mm         TRAP    #15
00003A6E  103C 0003               5659mm         MOVE.B  #3,D0          
00003A72  4E4F                    5660mm         TRAP    #15
00003A74                          5661mm         ENDM
00003A74  6000 0500               5662m         BRA     COMPLETE_423   
00003A78                          5663m        
00003A78                          5664m ADRREGINDIRECT_423:   
00003A78  BC3C 0001               5665m         CMP.B   #$01, D6
00003A7C  6700 0032               5666m         BEQ     ADRREGINDIRECTSRC_423   
00003A80                          5667m ADRREGINDIRECTDEST_423:
00003A80                          5668mm         PRINTLB
00003A80  43F8 00C5               5669mm         LEA     OLB, A1     
00003A84  103C 000E               5670mm         MOVE.B  #14,D0          
00003A88  4E4F                    5671mm         TRAP    #15
00003A8A                          5672mm         ENDM
00003A8A                          5673mm         PRINTANDEST D3  
00003A8A  3203                    5674mm         MOVE.W  D3, D1
00003A8C  E949                    5675mm         LSL     #$04, D1
00003A8E  E049                    5676mm         LSR     #$08, D1
00003A90  EA49                    5677mm         LSR     #$05, D1
00003A92  43F8 00C3               5678mm         LEA     OAN, A1     
00003A96  103C 000E               5679mm         MOVE.B  #14,D0          
00003A9A  4E4F                    5680mm         TRAP    #15
00003A9C  103C 0003               5681mm         MOVE.B  #3,D0          
00003AA0  4E4F                    5682mm         TRAP    #15
00003AA2                          5683mm         ENDM
00003AA2                          5684mm         PRINTRB
00003AA2  43F8 00C7               5685mm         LEA     ORB, A1     
00003AA6  103C 000E               5686mm         MOVE.B  #14,D0          
00003AAA  4E4F                    5687mm         TRAP    #15
00003AAC                          5688mm         ENDM
00003AAC  6000 04C8               5689m         BRA     COMPLETE_423     
00003AB0                          5690m ADRREGINDIRECTSRC_423:   
00003AB0                          5691mm         PRINTLB
00003AB0  43F8 00C5               5692mm         LEA     OLB, A1     
00003AB4  103C 000E               5693mm         MOVE.B  #14,D0          
00003AB8  4E4F                    5694mm         TRAP    #15
00003ABA                          5695mm         ENDM
00003ABA                          5696mm         PRINTANSRC D3  
00003ABA  3203                    5697mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003ABC  E149                    5698mm         LSL     #$08, D1
00003ABE  EB49                    5699mm         LSL     #$05, D1
00003AC0  E049                    5700mm         LSR     #$08, D1
00003AC2  EA49                    5701mm         LSR     #$05, D1
00003AC4  43F8 00C3               5702mm         LEA     OAN, A1     
00003AC8  103C 000E               5703mm         MOVE.B  #14,D0          
00003ACC  4E4F                    5704mm         TRAP    #15
00003ACE  103C 0003               5705mm         MOVE.B  #3,D0          
00003AD2  4E4F                    5706mm         TRAP    #15
00003AD4                          5707mm         ENDM
00003AD4                          5708mm         PRINTRB
00003AD4  43F8 00C7               5709mm         LEA     ORB, A1     
00003AD8  103C 000E               5710mm         MOVE.B  #14,D0          
00003ADC  4E4F                    5711mm         TRAP    #15
00003ADE                          5712mm         ENDM
00003ADE  6000 0496               5713m         BRA     COMPLETE_423   
00003AE2                          5714m         
00003AE2                          5715m ADRREGPOSTINC_423:   
00003AE2  BC3C 0001               5716m         CMP.B   #$01, D6
00003AE6  6700 003C               5717m         BEQ     ADRREGPOSTINCSRC_423   
00003AEA                          5718m ADRREGPOSTINCDEST_423: 
00003AEA                          5719mm         PRINTLB
00003AEA  43F8 00C5               5720mm         LEA     OLB, A1     
00003AEE  103C 000E               5721mm         MOVE.B  #14,D0          
00003AF2  4E4F                    5722mm         TRAP    #15
00003AF4                          5723mm         ENDM
00003AF4                          5724mm         PRINTANDEST D3  
00003AF4  3203                    5725mm         MOVE.W  D3, D1
00003AF6  E949                    5726mm         LSL     #$04, D1
00003AF8  E049                    5727mm         LSR     #$08, D1
00003AFA  EA49                    5728mm         LSR     #$05, D1
00003AFC  43F8 00C3               5729mm         LEA     OAN, A1     
00003B00  103C 000E               5730mm         MOVE.B  #14,D0          
00003B04  4E4F                    5731mm         TRAP    #15
00003B06  103C 0003               5732mm         MOVE.B  #3,D0          
00003B0A  4E4F                    5733mm         TRAP    #15
00003B0C                          5734mm         ENDM
00003B0C                          5735mm         PRINTRB
00003B0C  43F8 00C7               5736mm         LEA     ORB, A1     
00003B10  103C 000E               5737mm         MOVE.B  #14,D0          
00003B14  4E4F                    5738mm         TRAP    #15
00003B16                          5739mm         ENDM
00003B16                          5740mm         PRINTPI
00003B16  43F8 00CE               5741mm         LEA     OPSTINC, A1     
00003B1A  103C 000E               5742mm         MOVE.B  #14,D0          
00003B1E  4E4F                    5743mm         TRAP    #15
00003B20                          5744mm         ENDM
00003B20  6000 0454               5745m         BRA     COMPLETE_423  
00003B24                          5746m ADRREGPOSTINCSRC_423:           
00003B24                          5747mm         PRINTLB
00003B24  43F8 00C5               5748mm         LEA     OLB, A1     
00003B28  103C 000E               5749mm         MOVE.B  #14,D0          
00003B2C  4E4F                    5750mm         TRAP    #15
00003B2E                          5751mm         ENDM
00003B2E                          5752mm         PRINTANSRC D3  
00003B2E  3203                    5753mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B30  E149                    5754mm         LSL     #$08, D1
00003B32  EB49                    5755mm         LSL     #$05, D1
00003B34  E049                    5756mm         LSR     #$08, D1
00003B36  EA49                    5757mm         LSR     #$05, D1
00003B38  43F8 00C3               5758mm         LEA     OAN, A1     
00003B3C  103C 000E               5759mm         MOVE.B  #14,D0          
00003B40  4E4F                    5760mm         TRAP    #15
00003B42  103C 0003               5761mm         MOVE.B  #3,D0          
00003B46  4E4F                    5762mm         TRAP    #15
00003B48                          5763mm         ENDM
00003B48                          5764mm         PRINTRB
00003B48  43F8 00C7               5765mm         LEA     ORB, A1     
00003B4C  103C 000E               5766mm         MOVE.B  #14,D0          
00003B50  4E4F                    5767mm         TRAP    #15
00003B52                          5768mm         ENDM
00003B52                          5769mm         PRINTPI
00003B52  43F8 00CE               5770mm         LEA     OPSTINC, A1     
00003B56  103C 000E               5771mm         MOVE.B  #14,D0          
00003B5A  4E4F                    5772mm         TRAP    #15
00003B5C                          5773mm         ENDM
00003B5C  6000 0418               5774m         BRA     COMPLETE_423  
00003B60                          5775m ADRREGPREDEC_423: 
00003B60  BC3C 0001               5776m         CMP.B   #$01, D6
00003B64  6700 003C               5777m         BEQ     ADRREGPREDECSRC_423   
00003B68                          5778m ADRREGPREDECDEST_423:
00003B68                          5779mm         PRINTPD  
00003B68  43F8 00CC               5780mm         LEA     OPREDEC, A1     
00003B6C  103C 000E               5781mm         MOVE.B  #14,D0          
00003B70  4E4F                    5782mm         TRAP    #15
00003B72                          5783mm         ENDM
00003B72                          5784mm         PRINTLB
00003B72  43F8 00C5               5785mm         LEA     OLB, A1     
00003B76  103C 000E               5786mm         MOVE.B  #14,D0          
00003B7A  4E4F                    5787mm         TRAP    #15
00003B7C                          5788mm         ENDM
00003B7C                          5789mm         PRINTANDEST D3  
00003B7C  3203                    5790mm         MOVE.W  D3, D1
00003B7E  E949                    5791mm         LSL     #$04, D1
00003B80  E049                    5792mm         LSR     #$08, D1
00003B82  EA49                    5793mm         LSR     #$05, D1
00003B84  43F8 00C3               5794mm         LEA     OAN, A1     
00003B88  103C 000E               5795mm         MOVE.B  #14,D0          
00003B8C  4E4F                    5796mm         TRAP    #15
00003B8E  103C 0003               5797mm         MOVE.B  #3,D0          
00003B92  4E4F                    5798mm         TRAP    #15
00003B94                          5799mm         ENDM
00003B94                          5800mm         PRINTRB
00003B94  43F8 00C7               5801mm         LEA     ORB, A1     
00003B98  103C 000E               5802mm         MOVE.B  #14,D0          
00003B9C  4E4F                    5803mm         TRAP    #15
00003B9E                          5804mm         ENDM
00003B9E  6000 03D6               5805m         BRA     COMPLETE_423   
00003BA2                          5806m ADRREGPREDECSRC_423: 
00003BA2                          5807mm         PRINTPD  
00003BA2  43F8 00CC               5808mm         LEA     OPREDEC, A1     
00003BA6  103C 000E               5809mm         MOVE.B  #14,D0          
00003BAA  4E4F                    5810mm         TRAP    #15
00003BAC                          5811mm         ENDM
00003BAC                          5812mm         PRINTLB
00003BAC  43F8 00C5               5813mm         LEA     OLB, A1     
00003BB0  103C 000E               5814mm         MOVE.B  #14,D0          
00003BB4  4E4F                    5815mm         TRAP    #15
00003BB6                          5816mm         ENDM
00003BB6                          5817mm         PRINTANSRC D3  
00003BB6  3203                    5818mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BB8  E149                    5819mm         LSL     #$08, D1
00003BBA  EB49                    5820mm         LSL     #$05, D1
00003BBC  E049                    5821mm         LSR     #$08, D1
00003BBE  EA49                    5822mm         LSR     #$05, D1
00003BC0  43F8 00C3               5823mm         LEA     OAN, A1     
00003BC4  103C 000E               5824mm         MOVE.B  #14,D0          
00003BC8  4E4F                    5825mm         TRAP    #15
00003BCA  103C 0003               5826mm         MOVE.B  #3,D0          
00003BCE  4E4F                    5827mm         TRAP    #15
00003BD0                          5828mm         ENDM
00003BD0                          5829mm         PRINTRB
00003BD0  43F8 00C7               5830mm         LEA     ORB, A1     
00003BD4  103C 000E               5831mm         MOVE.B  #14,D0          
00003BD8  4E4F                    5832mm         TRAP    #15
00003BDA                          5833mm         ENDM
00003BDA  6000 039A               5834m         BRA     COMPLETE_423
00003BDE                          5835m        
00003BDE                          5836m ADRABSOLUTE_423:
00003BDE  BC3C 0001               5837m         CMP.B   #$01, D6
00003BE2  6600 0018               5838m         BNE     ADRABSOLUTEDST_423 
00003BE6                          5839m         
00003BE6  3A03                    5840m         MOVE.W  D3, D5
00003BE8  0803 0002               5841m         BTST    #2, D3
00003BEC  6600 0024               5842m         BNE     ADRIMMEDIATE_423
00003BF0  0803 0000               5843m         BTST    #0, D3
00003BF4  6600 0270               5844m         BNE     ADRABSOLUTEL_423
00003BF8  6000 01DA               5845m         BRA     ADRABSOLUTEW_423
00003BFC                          5846m ADRABSOLUTEDST_423:
00003BFC  3A03                    5847m         MOVE.W  D3, D5
00003BFE  0803 000B               5848m         BTST    #$B, D3
00003C02  6600 000E               5849m         BNE     ADRIMMEDIATE_423
00003C06  0803 0009               5850m         BTST    #$09, D3
00003C0A  6600 025A               5851m         BNE     ADRABSOLUTEL_423
00003C0E  6000 01C4               5852m         BRA     ADRABSOLUTEW_423
00003C12                          5853m ADRIMMEDIATE_423:
00003C12  BE3C 0001               5854m         CMP.B   #1, D7
00003C16  6700 009E               5855m         BEQ     ADRIMMEDIATEL_423
00003C1A                          5856m ADRIMMEDIATEW_423:
00003C1A  361A                    5857m         MOVE.W  (A2)+, D3
00003C1C                          5858mm         PRINTHASH
00003C1C  103C 0006               5859mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C20  323C 0023               5860mm         MOVE.W  #35, D1     ; AN = SIGN
00003C24  4E4F                    5861mm         TRAP    #15         ; OUTPUT = SIGN
00003C26                          5862mm         ENDM
00003C26                          5863mm         PRINTSIGN
00003C26  103C 0006               5864mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C2A  323C 0024               5865mm         MOVE.W  #36, D1     ; AN = SIGN
00003C2E  4E4F                    5866mm         TRAP    #15         ; OUTPUT = SIGN
00003C30                          5867mm         ENDM
00003C30                          5868mm         ADROUT
00003C30  3212                    5869mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C32  E049                    5870mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C34  E849                    5871mm         LSR.W   #4, D1      
00003C36                          5872mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C36  0C01 0009               5873mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C3A  6E00 000A               5874mmm         BGT     ALPHA_453
00003C3E  0601 0030               5875mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C42  6000 0006               5876mmm         BRA     DONE_453
00003C46  0601 0037               5877mmm ALPHA_453: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C4A  4E71                    5878mmm DONE_453: NOP
00003C4C                          5879mmm         ENDM
00003C4C  4E4F                    5880mm         TRAP    #15         ; EXECUTE OUTPUT
00003C4E                          5881mm         
00003C4E  3212                    5882mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C50  E949                    5883mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003C52  E049                    5884mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C54  E849                    5885mm         LSR.W   #4, D1      
00003C56                          5886mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C56  0C01 0009               5887mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C5A  6E00 000A               5888mmm         BGT     ALPHA_454
00003C5E  0601 0030               5889mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C62  6000 0006               5890mmm         BRA     DONE_454
00003C66  0601 0037               5891mmm ALPHA_454: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C6A  4E71                    5892mmm DONE_454: NOP
00003C6C                          5893mmm         ENDM
00003C6C  4E4F                    5894mm         TRAP    #15         ; EXECUTE OUTPUT
00003C6E                          5895mm         
00003C6E  3212                    5896mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C70  E149                    5897mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C72  E049                    5898mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C74  E849                    5899mm         LSR.W   #4, D1      
00003C76                          5900mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C76  0C01 0009               5901mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C7A  6E00 000A               5902mmm         BGT     ALPHA_455
00003C7E  0601 0030               5903mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003C82  6000 0006               5904mmm         BRA     DONE_455
00003C86  0601 0037               5905mmm ALPHA_455: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003C8A  4E71                    5906mmm DONE_455: NOP
00003C8C                          5907mmm         ENDM
00003C8C  4E4F                    5908mm         TRAP    #15         ; EXECUTE OUTPUT
00003C8E                          5909mm         
00003C8E  3212                    5910mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003C90  E149                    5911mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003C92  E949                    5912mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003C94  E049                    5913mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003C96  E849                    5914mm         LSR.W   #4, D1      
00003C98                          5915mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003C98  0C01 0009               5916mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003C9C  6E00 000A               5917mmm         BGT     ALPHA_456
00003CA0  0601 0030               5918mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CA4  6000 0006               5919mmm         BRA     DONE_456
00003CA8  0601 0037               5920mmm ALPHA_456: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CAC  4E71                    5921mmm DONE_456: NOP
00003CAE                          5922mmm         ENDM
00003CAE  4E4F                    5923mm         TRAP    #15         ; EXECUTE OUTPUT       
00003CB0                          5924mm         ENDM 
00003CB0  3605                    5925m         MOVE.W  D5, D3
00003CB2  6000 02C2               5926m         BRA     COMPLETE_423
00003CB6                          5927m ADRIMMEDIATEL_423:
00003CB6  361A                    5928m         MOVE.W  (A2)+, D3
00003CB8                          5929mm         PRINTHASH
00003CB8  103C 0006               5930mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CBC  323C 0023               5931mm         MOVE.W  #35, D1     ; AN = SIGN
00003CC0  4E4F                    5932mm         TRAP    #15         ; OUTPUT = SIGN
00003CC2                          5933mm         ENDM
00003CC2                          5934mm         PRINTSIGN
00003CC2  103C 0006               5935mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CC6  323C 0024               5936mm         MOVE.W  #36, D1     ; AN = SIGN
00003CCA  4E4F                    5937mm         TRAP    #15         ; OUTPUT = SIGN
00003CCC                          5938mm         ENDM
00003CCC                          5939mm         ADROUT 
00003CCC  3212                    5940mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CCE  E049                    5941mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CD0  E849                    5942mm         LSR.W   #4, D1      
00003CD2                          5943mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CD2  0C01 0009               5944mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CD6  6E00 000A               5945mmm         BGT     ALPHA_460
00003CDA  0601 0030               5946mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CDE  6000 0006               5947mmm         BRA     DONE_460
00003CE2  0601 0037               5948mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CE6  4E71                    5949mmm DONE_460: NOP
00003CE8                          5950mmm         ENDM
00003CE8  4E4F                    5951mm         TRAP    #15         ; EXECUTE OUTPUT
00003CEA                          5952mm         
00003CEA  3212                    5953mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CEC  E949                    5954mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003CEE  E049                    5955mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CF0  E849                    5956mm         LSR.W   #4, D1      
00003CF2                          5957mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CF2  0C01 0009               5958mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CF6  6E00 000A               5959mmm         BGT     ALPHA_461
00003CFA  0601 0030               5960mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CFE  6000 0006               5961mmm         BRA     DONE_461
00003D02  0601 0037               5962mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D06  4E71                    5963mmm DONE_461: NOP
00003D08                          5964mmm         ENDM
00003D08  4E4F                    5965mm         TRAP    #15         ; EXECUTE OUTPUT
00003D0A                          5966mm         
00003D0A  3212                    5967mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D0C  E149                    5968mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D0E  E049                    5969mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D10  E849                    5970mm         LSR.W   #4, D1      
00003D12                          5971mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D12  0C01 0009               5972mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D16  6E00 000A               5973mmm         BGT     ALPHA_462
00003D1A  0601 0030               5974mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D1E  6000 0006               5975mmm         BRA     DONE_462
00003D22  0601 0037               5976mmm ALPHA_462: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D26  4E71                    5977mmm DONE_462: NOP
00003D28                          5978mmm         ENDM
00003D28  4E4F                    5979mm         TRAP    #15         ; EXECUTE OUTPUT
00003D2A                          5980mm         
00003D2A  3212                    5981mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D2C  E149                    5982mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D2E  E949                    5983mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003D30  E049                    5984mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D32  E849                    5985mm         LSR.W   #4, D1      
00003D34                          5986mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D34  0C01 0009               5987mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D38  6E00 000A               5988mmm         BGT     ALPHA_463
00003D3C  0601 0030               5989mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D40  6000 0006               5990mmm         BRA     DONE_463
00003D44  0601 0037               5991mmm ALPHA_463: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D48  4E71                    5992mmm DONE_463: NOP
00003D4A                          5993mmm         ENDM
00003D4A  4E4F                    5994mm         TRAP    #15         ; EXECUTE OUTPUT       
00003D4C                          5995mm         ENDM 
00003D4C  361A                    5996m         MOVE.W  (A2)+, D3
00003D4E                          5997mm         ADROUT
00003D4E  3212                    5998mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D50  E049                    5999mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D52  E849                    6000mm         LSR.W   #4, D1      
00003D54                          6001mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D54  0C01 0009               6002mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D58  6E00 000A               6003mmm         BGT     ALPHA_465
00003D5C  0601 0030               6004mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D60  6000 0006               6005mmm         BRA     DONE_465
00003D64  0601 0037               6006mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D68  4E71                    6007mmm DONE_465: NOP
00003D6A                          6008mmm         ENDM
00003D6A  4E4F                    6009mm         TRAP    #15         ; EXECUTE OUTPUT
00003D6C                          6010mm         
00003D6C  3212                    6011mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D6E  E949                    6012mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D70  E049                    6013mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D72  E849                    6014mm         LSR.W   #4, D1      
00003D74                          6015mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D74  0C01 0009               6016mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D78  6E00 000A               6017mmm         BGT     ALPHA_466
00003D7C  0601 0030               6018mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D80  6000 0006               6019mmm         BRA     DONE_466
00003D84  0601 0037               6020mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D88  4E71                    6021mmm DONE_466: NOP
00003D8A                          6022mmm         ENDM
00003D8A  4E4F                    6023mm         TRAP    #15         ; EXECUTE OUTPUT
00003D8C                          6024mm         
00003D8C  3212                    6025mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D8E  E149                    6026mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D90  E049                    6027mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D92  E849                    6028mm         LSR.W   #4, D1      
00003D94                          6029mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D94  0C01 0009               6030mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D98  6E00 000A               6031mmm         BGT     ALPHA_467
00003D9C  0601 0030               6032mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DA0  6000 0006               6033mmm         BRA     DONE_467
00003DA4  0601 0037               6034mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DA8  4E71                    6035mmm DONE_467: NOP
00003DAA                          6036mmm         ENDM
00003DAA  4E4F                    6037mm         TRAP    #15         ; EXECUTE OUTPUT
00003DAC                          6038mm         
00003DAC  3212                    6039mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DAE  E149                    6040mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DB0  E949                    6041mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DB2  E049                    6042mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DB4  E849                    6043mm         LSR.W   #4, D1      
00003DB6                          6044mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DB6  0C01 0009               6045mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DBA  6E00 000A               6046mmm         BGT     ALPHA_468
00003DBE  0601 0030               6047mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DC2  6000 0006               6048mmm         BRA     DONE_468
00003DC6  0601 0037               6049mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DCA  4E71                    6050mmm DONE_468: NOP
00003DCC                          6051mmm         ENDM
00003DCC  4E4F                    6052mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DCE                          6053mm         ENDM 
00003DCE  3605                    6054m         MOVE.W  D5, D3
00003DD0  6000 01A4               6055m         BRA     COMPLETE_423 
00003DD4                          6056m ADRABSOLUTEW_423:     
00003DD4  361A                    6057m         MOVE.W  (A2)+, D3
00003DD6                          6058mm         PRINTSIGN
00003DD6  103C 0006               6059mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003DDA  323C 0024               6060mm         MOVE.W  #36, D1     ; AN = SIGN
00003DDE  4E4F                    6061mm         TRAP    #15         ; OUTPUT = SIGN
00003DE0                          6062mm         ENDM
00003DE0                          6063mm         ADROUT
00003DE0  3212                    6064mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DE2  E049                    6065mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DE4  E849                    6066mm         LSR.W   #4, D1      
00003DE6                          6067mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DE6  0C01 0009               6068mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DEA  6E00 000A               6069mmm         BGT     ALPHA_471
00003DEE  0601 0030               6070mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DF2  6000 0006               6071mmm         BRA     DONE_471
00003DF6  0601 0037               6072mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DFA  4E71                    6073mmm DONE_471: NOP
00003DFC                          6074mmm         ENDM
00003DFC  4E4F                    6075mm         TRAP    #15         ; EXECUTE OUTPUT
00003DFE                          6076mm         
00003DFE  3212                    6077mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E00  E949                    6078mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E02  E049                    6079mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E04  E849                    6080mm         LSR.W   #4, D1      
00003E06                          6081mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E06  0C01 0009               6082mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E0A  6E00 000A               6083mmm         BGT     ALPHA_472
00003E0E  0601 0030               6084mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E12  6000 0006               6085mmm         BRA     DONE_472
00003E16  0601 0037               6086mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E1A  4E71                    6087mmm DONE_472: NOP
00003E1C                          6088mmm         ENDM
00003E1C  4E4F                    6089mm         TRAP    #15         ; EXECUTE OUTPUT
00003E1E                          6090mm         
00003E1E  3212                    6091mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E20  E149                    6092mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E22  E049                    6093mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E24  E849                    6094mm         LSR.W   #4, D1      
00003E26                          6095mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E26  0C01 0009               6096mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E2A  6E00 000A               6097mmm         BGT     ALPHA_473
00003E2E  0601 0030               6098mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E32  6000 0006               6099mmm         BRA     DONE_473
00003E36  0601 0037               6100mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E3A  4E71                    6101mmm DONE_473: NOP
00003E3C                          6102mmm         ENDM
00003E3C  4E4F                    6103mm         TRAP    #15         ; EXECUTE OUTPUT
00003E3E                          6104mm         
00003E3E  3212                    6105mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E40  E149                    6106mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E42  E949                    6107mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E44  E049                    6108mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E46  E849                    6109mm         LSR.W   #4, D1      
00003E48                          6110mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E48  0C01 0009               6111mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E4C  6E00 000A               6112mmm         BGT     ALPHA_474
00003E50  0601 0030               6113mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E54  6000 0006               6114mmm         BRA     DONE_474
00003E58  0601 0037               6115mmm ALPHA_474: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E5C  4E71                    6116mmm DONE_474: NOP
00003E5E                          6117mmm         ENDM
00003E5E  4E4F                    6118mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E60                          6119mm         ENDM 
00003E60  3605                    6120m         MOVE.W  D5, D3
00003E62  6000 0112               6121m         BRA     COMPLETE_423  
00003E66                          6122m ADRABSOLUTEL_423:  
00003E66  361A                    6123m         MOVE.W  (A2)+, D3
00003E68                          6124mm         PRINTSIGN
00003E68  103C 0006               6125mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E6C  323C 0024               6126mm         MOVE.W  #36, D1     ; AN = SIGN
00003E70  4E4F                    6127mm         TRAP    #15         ; OUTPUT = SIGN
00003E72                          6128mm         ENDM
00003E72                          6129mm         ADROUT 
00003E72  3212                    6130mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E74  E049                    6131mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E76  E849                    6132mm         LSR.W   #4, D1      
00003E78                          6133mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E78  0C01 0009               6134mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E7C  6E00 000A               6135mmm         BGT     ALPHA_477
00003E80  0601 0030               6136mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E84  6000 0006               6137mmm         BRA     DONE_477
00003E88  0601 0037               6138mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E8C  4E71                    6139mmm DONE_477: NOP
00003E8E                          6140mmm         ENDM
00003E8E  4E4F                    6141mm         TRAP    #15         ; EXECUTE OUTPUT
00003E90                          6142mm         
00003E90  3212                    6143mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E92  E949                    6144mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E94  E049                    6145mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E96  E849                    6146mm         LSR.W   #4, D1      
00003E98                          6147mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E98  0C01 0009               6148mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E9C  6E00 000A               6149mmm         BGT     ALPHA_478
00003EA0  0601 0030               6150mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EA4  6000 0006               6151mmm         BRA     DONE_478
00003EA8  0601 0037               6152mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EAC  4E71                    6153mmm DONE_478: NOP
00003EAE                          6154mmm         ENDM
00003EAE  4E4F                    6155mm         TRAP    #15         ; EXECUTE OUTPUT
00003EB0                          6156mm         
00003EB0  3212                    6157mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EB2  E149                    6158mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EB4  E049                    6159mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EB6  E849                    6160mm         LSR.W   #4, D1      
00003EB8                          6161mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EB8  0C01 0009               6162mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EBC  6E00 000A               6163mmm         BGT     ALPHA_479
00003EC0  0601 0030               6164mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EC4  6000 0006               6165mmm         BRA     DONE_479
00003EC8  0601 0037               6166mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ECC  4E71                    6167mmm DONE_479: NOP
00003ECE                          6168mmm         ENDM
00003ECE  4E4F                    6169mm         TRAP    #15         ; EXECUTE OUTPUT
00003ED0                          6170mm         
00003ED0  3212                    6171mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003ED2  E149                    6172mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003ED4  E949                    6173mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003ED6  E049                    6174mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003ED8  E849                    6175mm         LSR.W   #4, D1      
00003EDA                          6176mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EDA  0C01 0009               6177mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EDE  6E00 000A               6178mmm         BGT     ALPHA_480
00003EE2  0601 0030               6179mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EE6  6000 0006               6180mmm         BRA     DONE_480
00003EEA  0601 0037               6181mmm ALPHA_480: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EEE  4E71                    6182mmm DONE_480: NOP
00003EF0                          6183mmm         ENDM
00003EF0  4E4F                    6184mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EF2                          6185mm         ENDM 
00003EF2  361A                    6186m         MOVE.W  (A2)+, D3
00003EF4                          6187mm         ADROUT
00003EF4  3212                    6188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EF6  E049                    6189mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EF8  E849                    6190mm         LSR.W   #4, D1      
00003EFA                          6191mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EFA  0C01 0009               6192mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EFE  6E00 000A               6193mmm         BGT     ALPHA_482
00003F02  0601 0030               6194mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F06  6000 0006               6195mmm         BRA     DONE_482
00003F0A  0601 0037               6196mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F0E  4E71                    6197mmm DONE_482: NOP
00003F10                          6198mmm         ENDM
00003F10  4E4F                    6199mm         TRAP    #15         ; EXECUTE OUTPUT
00003F12                          6200mm         
00003F12  3212                    6201mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F14  E949                    6202mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F16  E049                    6203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F18  E849                    6204mm         LSR.W   #4, D1      
00003F1A                          6205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F1A  0C01 0009               6206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F1E  6E00 000A               6207mmm         BGT     ALPHA_483
00003F22  0601 0030               6208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F26  6000 0006               6209mmm         BRA     DONE_483
00003F2A  0601 0037               6210mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F2E  4E71                    6211mmm DONE_483: NOP
00003F30                          6212mmm         ENDM
00003F30  4E4F                    6213mm         TRAP    #15         ; EXECUTE OUTPUT
00003F32                          6214mm         
00003F32  3212                    6215mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F34  E149                    6216mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F36  E049                    6217mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F38  E849                    6218mm         LSR.W   #4, D1      
00003F3A                          6219mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F3A  0C01 0009               6220mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F3E  6E00 000A               6221mmm         BGT     ALPHA_484
00003F42  0601 0030               6222mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F46  6000 0006               6223mmm         BRA     DONE_484
00003F4A  0601 0037               6224mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F4E  4E71                    6225mmm DONE_484: NOP
00003F50                          6226mmm         ENDM
00003F50  4E4F                    6227mm         TRAP    #15         ; EXECUTE OUTPUT
00003F52                          6228mm         
00003F52  3212                    6229mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F54  E149                    6230mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F56  E949                    6231mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F58  E049                    6232mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F5A  E849                    6233mm         LSR.W   #4, D1      
00003F5C                          6234mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F5C  0C01 0009               6235mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F60  6E00 000A               6236mmm         BGT     ALPHA_485
00003F64  0601 0030               6237mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F68  6000 0006               6238mmm         BRA     DONE_485
00003F6C  0601 0037               6239mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F70  4E71                    6240mmm DONE_485: NOP
00003F72                          6241mmm         ENDM
00003F72  4E4F                    6242mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F74                          6243mm         ENDM 
00003F74  3605                    6244m         MOVE.W  D5, D3
00003F76                          6245m 
00003F76                          6246m COMPLETE_423:  ; OPCODE HAS BEEN VERIFIED
00003F76                          6247m         ENDM
00003F76                          6248m         printComma
00003F76  43F8 00C9               6249m         LEA     OCOMMA, A1     
00003F7A  103C 000E               6250m         MOVE.B  #14,D0          
00003F7E  4E4F                    6251m         TRAP    #15
00003F80                          6252m         ENDM
00003F80                          6253m         printDnDest     D3
00003F80  3203                    6254m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003F82  E949                    6255m         LSL     #$04, D1
00003F84  E049                    6256m         LSR     #$08, D1
00003F86  EA49                    6257m         LSR     #$05, D1
00003F88  43F8 00C1               6258m         LEA     ODN, A1     
00003F8C  103C 000E               6259m         MOVE.B  #14,D0          
00003F90  4E4F                    6260m         TRAP    #15
00003F92  103C 0003               6261m         MOVE.B  #3,D0          
00003F96  4E4F                    6262m         TRAP    #15
00003F98                          6263m         ENDM
00003F98  4E75                    6264          RTS                 ; Return from decodeMULS subroutine
00003F9A                          6265          
00003F9A                          6266  ; ------------------------------------------------------------
00003F9A                          6267  ; 7. "decodeDIVU" subroutine
00003F9A                          6268  ; AUTHOR
00003F9A                          6269  ;
00003F9A                          6270  ; TODO: DESCRIPTION DIVU
00003F9A                          6271  ; ------------------------------------------------------------
00003F9A                          6272  decodeDIVU:
00003F9A                          6273m         verifyOpcode    pDIVU, (A2)
00003F9A  43F8 013A               6274m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
00003F9E  3612                    6275m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FA0  123C 000F               6276m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00003FA4                          6277m         
00003FA4                          6278m LOOP_488: 
00003FA4  0C11 0030               6279m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00003FA8  6700 000E               6280m         BEQ     CHECKFOR0_488
00003FAC  0C11 0031               6281m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00003FB0  6700 0010               6282m         BEQ     CHECKFOR1_488
00003FB4  6000 0012               6283m         BRA     NEXT_488      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00003FB8                          6284m         
00003FB8                          6285m CHECKFOR0_488: 
00003FB8  0303                    6286m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00003FBA  6600 2B1A               6287m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00003FBE  6000 0008               6288m         BRA     NEXT_488
00003FC2                          6289m 
00003FC2                          6290m CHECKFOR1_488:
00003FC2  0303                    6291m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003FC4  6700 2B10               6292m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003FC8                          6293m 
00003FC8                          6294m NEXT_488: 
00003FC8  B23C 0000               6295m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003FCC  6700 0008               6296m         BEQ     COMPLETE_488  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003FD0  5301                    6297m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003FD2  1819                    6298m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003FD4  60CE                    6299m         BRA     LOOP_488      ; BEGIN LOOP AGAIN
00003FD6                          6300m 
00003FD6                          6301m COMPLETE_488:  ; OPCODE HAS BEEN VERIFIED
00003FD6                          6302m         ENDM
00003FD6  43F8 007C               6303          LEA     oDIVU, A1     
00003FDA  103C 000E               6304          MOVE.B  #14,D0          
00003FDE  4E4F                    6305          TRAP    #15
00003FE0                          6306m         printSize       (A2)
00003FE0  3612                    6307m         MOVE.W  (A2), D3      ; INPUT VALUE
00003FE2  4247                    6308m         CLR     D7      
00003FE4                          6309m CHECKFORB_489: 
00003FE4  0803 000D               6310m         BTST    #13, D3      ; CHECK IF CONTAINS 0
00003FE8  6600 0010               6311m         BNE     CHECKFORW_489  ; IF NOT GO TO WORD SIZE
00003FEC  43F8 00B5               6312m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
00003FF0  103C 000E               6313m         MOVE.B  #14,D0          
00003FF4  4E4F                    6314m         TRAP    #15
00003FF6  6000 0026               6315m         BRA     COMPLETE_489      
00003FFA                          6316m CHECKFORW_489: 
00003FFA  0803 000C               6317m         BTST    #12, D3      ; CHECK IF CONTAINS 1
00003FFE  6700 0010               6318m         BEQ     CHECKFORL_489  ; IF NOT, SIZE CANNOT BE WORD
00004002  43F8 00B9               6319m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
00004006  103C 000E               6320m         MOVE.B  #14,D0          
0000400A  4E4F                    6321m         TRAP    #15
0000400C  6000 0010               6322m         BRA     COMPLETE_489  
00004010                          6323m CHECKFORL_489:
00004010  1E3C 0001               6324m         MOVE.B  #$1, D7
00004014  43F8 00BD               6325m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
00004018  103C 000E               6326m         MOVE.B  #14,D0          
0000401C  4E4F                    6327m         TRAP    #15
0000401E                          6328m COMPLETE_489:  ; SIZE HAS BEEN PRINTED
0000401E                          6329m         ENDM
0000401E                          6330m         prepareAdrMode  #$1, (A2)
0000401E  3C3C 0001               6331m         MOVE.W  #$1, D6      ; INPUT VALUE
00004022  3212                    6332m         MOVE.W  (A2), D1
00004024  BC3C 0001               6333m         CMP.B   #$01, D6
00004028  6700 000C               6334m         BEQ     ADRSOURCE_490    
0000402C                          6335m ADRDEST_490:
0000402C  EF49                    6336m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000402E  E049                    6337m         LSR     #$08, D1
00004030  EA49                    6338m         LSR     #$05, D1
00004032  6000 000A               6339m         BRA     COMPLETE_490 
00004036                          6340m ADRSOURCE_490:                
00004036  E149                    6341m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004038  E549                    6342m         LSL     #$02, D1
0000403A  E049                    6343m         LSR     #$08, D1
0000403C  EA49                    6344m         LSR     #$05, D1
0000403E                          6345m COMPLETE_490:  ; OPCODE HAS BEEN VERIFIED
0000403E                          6346m         ENDM        
0000403E                          6347m         decodeAdrMode   (A2), D1
0000403E  3612                    6348m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004040  3201                    6349m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004042                          6350m 
00004042  B23C 0001               6351m         CMP.B   #$01, D1
00004046  6700 0066               6352m         BEQ     ADRREGDIRECT_491    
0000404A  B23C 0002               6353m         CMP.B   #$02, D1
0000404E  6700 00A0               6354m         BEQ     ADRREGINDIRECT_491  
00004052  B23C 0003               6355m         CMP.B   #$03, D1
00004056  6700 0102               6356m         BEQ     ADRREGPOSTINC_491  
0000405A  B23C 0004               6357m         CMP.B   #$04, D1
0000405E  6700 0178               6358m         BEQ     ADRREGPREDEC_491
00004062  B23C 0007               6359m         CMP.B   #$07, D1
00004066  6700 01EE               6360m         BEQ     ADRABSOLUTE_491    
0000406A                          6361m         
0000406A                          6362m DATAREGDIRECT_491: 
0000406A  BC3C 0001               6363m         CMP.B   #$01, D6
0000406E  6700 001E               6364m         BEQ     DATAREGDIRECTSRC_491   
00004072                          6365m DATAREGDIRECTDEST_491: 
00004072                          6366mm         PRINTDNDEST D3 
00004072  3203                    6367mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004074  E949                    6368mm         LSL     #$04, D1
00004076  E049                    6369mm         LSR     #$08, D1
00004078  EA49                    6370mm         LSR     #$05, D1
0000407A  43F8 00C1               6371mm         LEA     ODN, A1     
0000407E  103C 000E               6372mm         MOVE.B  #14,D0          
00004082  4E4F                    6373mm         TRAP    #15
00004084  103C 0003               6374mm         MOVE.B  #3,D0          
00004088  4E4F                    6375mm         TRAP    #15
0000408A                          6376mm         ENDM
0000408A  6000 0562               6377m         BRA     COMPLETE_491 
0000408E                          6378m DATAREGDIRECTSRC_491: 
0000408E                          6379mm         PRINTDNSRC D3 
0000408E  4281                    6380mm         CLR.L   D1
00004090  3203                    6381mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004092  E149                    6382mm         LSL     #$08, D1
00004094  EB49                    6383mm         LSL     #$05, D1
00004096  E049                    6384mm         LSR     #$08, D1
00004098  EA49                    6385mm         LSR     #$05, D1
0000409A  43F8 00C1               6386mm         LEA     ODN, A1     
0000409E  103C 000E               6387mm         MOVE.B  #14,D0          
000040A2  4E4F                    6388mm         TRAP    #15
000040A4  103C 0003               6389mm         MOVE.B  #3,D0          
000040A8  4E4F                    6390mm         TRAP    #15
000040AA                          6391mm         ENDM
000040AA  6000 0542               6392m         BRA     COMPLETE_491   
000040AE                          6393m         
000040AE                          6394m ADRREGDIRECT_491: 
000040AE  BC3C 0001               6395m         CMP.B   #$01, D6
000040B2  6700 001E               6396m         BEQ     ADRREGDIRECTSRC_491   
000040B6                          6397m ADRREGDIRECTDEST_491:
000040B6                          6398mm         PRINTANDEST D3
000040B6  3203                    6399mm         MOVE.W  D3, D1
000040B8  E949                    6400mm         LSL     #$04, D1
000040BA  E049                    6401mm         LSR     #$08, D1
000040BC  EA49                    6402mm         LSR     #$05, D1
000040BE  43F8 00C3               6403mm         LEA     OAN, A1     
000040C2  103C 000E               6404mm         MOVE.B  #14,D0          
000040C6  4E4F                    6405mm         TRAP    #15
000040C8  103C 0003               6406mm         MOVE.B  #3,D0          
000040CC  4E4F                    6407mm         TRAP    #15
000040CE                          6408mm         ENDM
000040CE  6000 051E               6409m         BRA     COMPLETE_491   
000040D2                          6410m ADRREGDIRECTSRC_491:
000040D2                          6411mm         PRINTANSRC D3
000040D2  3203                    6412mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000040D4  E149                    6413mm         LSL     #$08, D1
000040D6  EB49                    6414mm         LSL     #$05, D1
000040D8  E049                    6415mm         LSR     #$08, D1
000040DA  EA49                    6416mm         LSR     #$05, D1
000040DC  43F8 00C3               6417mm         LEA     OAN, A1     
000040E0  103C 000E               6418mm         MOVE.B  #14,D0          
000040E4  4E4F                    6419mm         TRAP    #15
000040E6  103C 0003               6420mm         MOVE.B  #3,D0          
000040EA  4E4F                    6421mm         TRAP    #15
000040EC                          6422mm         ENDM
000040EC  6000 0500               6423m         BRA     COMPLETE_491   
000040F0                          6424m        
000040F0                          6425m ADRREGINDIRECT_491:   
000040F0  BC3C 0001               6426m         CMP.B   #$01, D6
000040F4  6700 0032               6427m         BEQ     ADRREGINDIRECTSRC_491   
000040F8                          6428m ADRREGINDIRECTDEST_491:
000040F8                          6429mm         PRINTLB
000040F8  43F8 00C5               6430mm         LEA     OLB, A1     
000040FC  103C 000E               6431mm         MOVE.B  #14,D0          
00004100  4E4F                    6432mm         TRAP    #15
00004102                          6433mm         ENDM
00004102                          6434mm         PRINTANDEST D3  
00004102  3203                    6435mm         MOVE.W  D3, D1
00004104  E949                    6436mm         LSL     #$04, D1
00004106  E049                    6437mm         LSR     #$08, D1
00004108  EA49                    6438mm         LSR     #$05, D1
0000410A  43F8 00C3               6439mm         LEA     OAN, A1     
0000410E  103C 000E               6440mm         MOVE.B  #14,D0          
00004112  4E4F                    6441mm         TRAP    #15
00004114  103C 0003               6442mm         MOVE.B  #3,D0          
00004118  4E4F                    6443mm         TRAP    #15
0000411A                          6444mm         ENDM
0000411A                          6445mm         PRINTRB
0000411A  43F8 00C7               6446mm         LEA     ORB, A1     
0000411E  103C 000E               6447mm         MOVE.B  #14,D0          
00004122  4E4F                    6448mm         TRAP    #15
00004124                          6449mm         ENDM
00004124  6000 04C8               6450m         BRA     COMPLETE_491     
00004128                          6451m ADRREGINDIRECTSRC_491:   
00004128                          6452mm         PRINTLB
00004128  43F8 00C5               6453mm         LEA     OLB, A1     
0000412C  103C 000E               6454mm         MOVE.B  #14,D0          
00004130  4E4F                    6455mm         TRAP    #15
00004132                          6456mm         ENDM
00004132                          6457mm         PRINTANSRC D3  
00004132  3203                    6458mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004134  E149                    6459mm         LSL     #$08, D1
00004136  EB49                    6460mm         LSL     #$05, D1
00004138  E049                    6461mm         LSR     #$08, D1
0000413A  EA49                    6462mm         LSR     #$05, D1
0000413C  43F8 00C3               6463mm         LEA     OAN, A1     
00004140  103C 000E               6464mm         MOVE.B  #14,D0          
00004144  4E4F                    6465mm         TRAP    #15
00004146  103C 0003               6466mm         MOVE.B  #3,D0          
0000414A  4E4F                    6467mm         TRAP    #15
0000414C                          6468mm         ENDM
0000414C                          6469mm         PRINTRB
0000414C  43F8 00C7               6470mm         LEA     ORB, A1     
00004150  103C 000E               6471mm         MOVE.B  #14,D0          
00004154  4E4F                    6472mm         TRAP    #15
00004156                          6473mm         ENDM
00004156  6000 0496               6474m         BRA     COMPLETE_491   
0000415A                          6475m         
0000415A                          6476m ADRREGPOSTINC_491:   
0000415A  BC3C 0001               6477m         CMP.B   #$01, D6
0000415E  6700 003C               6478m         BEQ     ADRREGPOSTINCSRC_491   
00004162                          6479m ADRREGPOSTINCDEST_491: 
00004162                          6480mm         PRINTLB
00004162  43F8 00C5               6481mm         LEA     OLB, A1     
00004166  103C 000E               6482mm         MOVE.B  #14,D0          
0000416A  4E4F                    6483mm         TRAP    #15
0000416C                          6484mm         ENDM
0000416C                          6485mm         PRINTANDEST D3  
0000416C  3203                    6486mm         MOVE.W  D3, D1
0000416E  E949                    6487mm         LSL     #$04, D1
00004170  E049                    6488mm         LSR     #$08, D1
00004172  EA49                    6489mm         LSR     #$05, D1
00004174  43F8 00C3               6490mm         LEA     OAN, A1     
00004178  103C 000E               6491mm         MOVE.B  #14,D0          
0000417C  4E4F                    6492mm         TRAP    #15
0000417E  103C 0003               6493mm         MOVE.B  #3,D0          
00004182  4E4F                    6494mm         TRAP    #15
00004184                          6495mm         ENDM
00004184                          6496mm         PRINTRB
00004184  43F8 00C7               6497mm         LEA     ORB, A1     
00004188  103C 000E               6498mm         MOVE.B  #14,D0          
0000418C  4E4F                    6499mm         TRAP    #15
0000418E                          6500mm         ENDM
0000418E                          6501mm         PRINTPI
0000418E  43F8 00CE               6502mm         LEA     OPSTINC, A1     
00004192  103C 000E               6503mm         MOVE.B  #14,D0          
00004196  4E4F                    6504mm         TRAP    #15
00004198                          6505mm         ENDM
00004198  6000 0454               6506m         BRA     COMPLETE_491  
0000419C                          6507m ADRREGPOSTINCSRC_491:           
0000419C                          6508mm         PRINTLB
0000419C  43F8 00C5               6509mm         LEA     OLB, A1     
000041A0  103C 000E               6510mm         MOVE.B  #14,D0          
000041A4  4E4F                    6511mm         TRAP    #15
000041A6                          6512mm         ENDM
000041A6                          6513mm         PRINTANSRC D3  
000041A6  3203                    6514mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041A8  E149                    6515mm         LSL     #$08, D1
000041AA  EB49                    6516mm         LSL     #$05, D1
000041AC  E049                    6517mm         LSR     #$08, D1
000041AE  EA49                    6518mm         LSR     #$05, D1
000041B0  43F8 00C3               6519mm         LEA     OAN, A1     
000041B4  103C 000E               6520mm         MOVE.B  #14,D0          
000041B8  4E4F                    6521mm         TRAP    #15
000041BA  103C 0003               6522mm         MOVE.B  #3,D0          
000041BE  4E4F                    6523mm         TRAP    #15
000041C0                          6524mm         ENDM
000041C0                          6525mm         PRINTRB
000041C0  43F8 00C7               6526mm         LEA     ORB, A1     
000041C4  103C 000E               6527mm         MOVE.B  #14,D0          
000041C8  4E4F                    6528mm         TRAP    #15
000041CA                          6529mm         ENDM
000041CA                          6530mm         PRINTPI
000041CA  43F8 00CE               6531mm         LEA     OPSTINC, A1     
000041CE  103C 000E               6532mm         MOVE.B  #14,D0          
000041D2  4E4F                    6533mm         TRAP    #15
000041D4                          6534mm         ENDM
000041D4  6000 0418               6535m         BRA     COMPLETE_491  
000041D8                          6536m ADRREGPREDEC_491: 
000041D8  BC3C 0001               6537m         CMP.B   #$01, D6
000041DC  6700 003C               6538m         BEQ     ADRREGPREDECSRC_491   
000041E0                          6539m ADRREGPREDECDEST_491:
000041E0                          6540mm         PRINTPD  
000041E0  43F8 00CC               6541mm         LEA     OPREDEC, A1     
000041E4  103C 000E               6542mm         MOVE.B  #14,D0          
000041E8  4E4F                    6543mm         TRAP    #15
000041EA                          6544mm         ENDM
000041EA                          6545mm         PRINTLB
000041EA  43F8 00C5               6546mm         LEA     OLB, A1     
000041EE  103C 000E               6547mm         MOVE.B  #14,D0          
000041F2  4E4F                    6548mm         TRAP    #15
000041F4                          6549mm         ENDM
000041F4                          6550mm         PRINTANDEST D3  
000041F4  3203                    6551mm         MOVE.W  D3, D1
000041F6  E949                    6552mm         LSL     #$04, D1
000041F8  E049                    6553mm         LSR     #$08, D1
000041FA  EA49                    6554mm         LSR     #$05, D1
000041FC  43F8 00C3               6555mm         LEA     OAN, A1     
00004200  103C 000E               6556mm         MOVE.B  #14,D0          
00004204  4E4F                    6557mm         TRAP    #15
00004206  103C 0003               6558mm         MOVE.B  #3,D0          
0000420A  4E4F                    6559mm         TRAP    #15
0000420C                          6560mm         ENDM
0000420C                          6561mm         PRINTRB
0000420C  43F8 00C7               6562mm         LEA     ORB, A1     
00004210  103C 000E               6563mm         MOVE.B  #14,D0          
00004214  4E4F                    6564mm         TRAP    #15
00004216                          6565mm         ENDM
00004216  6000 03D6               6566m         BRA     COMPLETE_491   
0000421A                          6567m ADRREGPREDECSRC_491: 
0000421A                          6568mm         PRINTPD  
0000421A  43F8 00CC               6569mm         LEA     OPREDEC, A1     
0000421E  103C 000E               6570mm         MOVE.B  #14,D0          
00004222  4E4F                    6571mm         TRAP    #15
00004224                          6572mm         ENDM
00004224                          6573mm         PRINTLB
00004224  43F8 00C5               6574mm         LEA     OLB, A1     
00004228  103C 000E               6575mm         MOVE.B  #14,D0          
0000422C  4E4F                    6576mm         TRAP    #15
0000422E                          6577mm         ENDM
0000422E                          6578mm         PRINTANSRC D3  
0000422E  3203                    6579mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004230  E149                    6580mm         LSL     #$08, D1
00004232  EB49                    6581mm         LSL     #$05, D1
00004234  E049                    6582mm         LSR     #$08, D1
00004236  EA49                    6583mm         LSR     #$05, D1
00004238  43F8 00C3               6584mm         LEA     OAN, A1     
0000423C  103C 000E               6585mm         MOVE.B  #14,D0          
00004240  4E4F                    6586mm         TRAP    #15
00004242  103C 0003               6587mm         MOVE.B  #3,D0          
00004246  4E4F                    6588mm         TRAP    #15
00004248                          6589mm         ENDM
00004248                          6590mm         PRINTRB
00004248  43F8 00C7               6591mm         LEA     ORB, A1     
0000424C  103C 000E               6592mm         MOVE.B  #14,D0          
00004250  4E4F                    6593mm         TRAP    #15
00004252                          6594mm         ENDM
00004252  6000 039A               6595m         BRA     COMPLETE_491
00004256                          6596m        
00004256                          6597m ADRABSOLUTE_491:
00004256  BC3C 0001               6598m         CMP.B   #$01, D6
0000425A  6600 0018               6599m         BNE     ADRABSOLUTEDST_491 
0000425E                          6600m         
0000425E  3A03                    6601m         MOVE.W  D3, D5
00004260  0803 0002               6602m         BTST    #2, D3
00004264  6600 0024               6603m         BNE     ADRIMMEDIATE_491
00004268  0803 0000               6604m         BTST    #0, D3
0000426C  6600 0270               6605m         BNE     ADRABSOLUTEL_491
00004270  6000 01DA               6606m         BRA     ADRABSOLUTEW_491
00004274                          6607m ADRABSOLUTEDST_491:
00004274  3A03                    6608m         MOVE.W  D3, D5
00004276  0803 000B               6609m         BTST    #$B, D3
0000427A  6600 000E               6610m         BNE     ADRIMMEDIATE_491
0000427E  0803 0009               6611m         BTST    #$09, D3
00004282  6600 025A               6612m         BNE     ADRABSOLUTEL_491
00004286  6000 01C4               6613m         BRA     ADRABSOLUTEW_491
0000428A                          6614m ADRIMMEDIATE_491:
0000428A  BE3C 0001               6615m         CMP.B   #1, D7
0000428E  6700 009E               6616m         BEQ     ADRIMMEDIATEL_491
00004292                          6617m ADRIMMEDIATEW_491:
00004292  361A                    6618m         MOVE.W  (A2)+, D3
00004294                          6619mm         PRINTHASH
00004294  103C 0006               6620mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004298  323C 0023               6621mm         MOVE.W  #35, D1     ; AN = SIGN
0000429C  4E4F                    6622mm         TRAP    #15         ; OUTPUT = SIGN
0000429E                          6623mm         ENDM
0000429E                          6624mm         PRINTSIGN
0000429E  103C 0006               6625mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042A2  323C 0024               6626mm         MOVE.W  #36, D1     ; AN = SIGN
000042A6  4E4F                    6627mm         TRAP    #15         ; OUTPUT = SIGN
000042A8                          6628mm         ENDM
000042A8                          6629mm         ADROUT
000042A8  3212                    6630mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042AA  E049                    6631mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042AC  E849                    6632mm         LSR.W   #4, D1      
000042AE                          6633mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042AE  0C01 0009               6634mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042B2  6E00 000A               6635mmm         BGT     ALPHA_521
000042B6  0601 0030               6636mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042BA  6000 0006               6637mmm         BRA     DONE_521
000042BE  0601 0037               6638mmm ALPHA_521: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042C2  4E71                    6639mmm DONE_521: NOP
000042C4                          6640mmm         ENDM
000042C4  4E4F                    6641mm         TRAP    #15         ; EXECUTE OUTPUT
000042C6                          6642mm         
000042C6  3212                    6643mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042C8  E949                    6644mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000042CA  E049                    6645mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042CC  E849                    6646mm         LSR.W   #4, D1      
000042CE                          6647mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042CE  0C01 0009               6648mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042D2  6E00 000A               6649mmm         BGT     ALPHA_522
000042D6  0601 0030               6650mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042DA  6000 0006               6651mmm         BRA     DONE_522
000042DE  0601 0037               6652mmm ALPHA_522: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000042E2  4E71                    6653mmm DONE_522: NOP
000042E4                          6654mmm         ENDM
000042E4  4E4F                    6655mm         TRAP    #15         ; EXECUTE OUTPUT
000042E6                          6656mm         
000042E6  3212                    6657mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042E8  E149                    6658mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000042EA  E049                    6659mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042EC  E849                    6660mm         LSR.W   #4, D1      
000042EE                          6661mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042EE  0C01 0009               6662mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042F2  6E00 000A               6663mmm         BGT     ALPHA_523
000042F6  0601 0030               6664mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042FA  6000 0006               6665mmm         BRA     DONE_523
000042FE  0601 0037               6666mmm ALPHA_523: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004302  4E71                    6667mmm DONE_523: NOP
00004304                          6668mmm         ENDM
00004304  4E4F                    6669mm         TRAP    #15         ; EXECUTE OUTPUT
00004306                          6670mm         
00004306  3212                    6671mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004308  E149                    6672mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000430A  E949                    6673mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000430C  E049                    6674mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000430E  E849                    6675mm         LSR.W   #4, D1      
00004310                          6676mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004310  0C01 0009               6677mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004314  6E00 000A               6678mmm         BGT     ALPHA_524
00004318  0601 0030               6679mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000431C  6000 0006               6680mmm         BRA     DONE_524
00004320  0601 0037               6681mmm ALPHA_524: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004324  4E71                    6682mmm DONE_524: NOP
00004326                          6683mmm         ENDM
00004326  4E4F                    6684mm         TRAP    #15         ; EXECUTE OUTPUT       
00004328                          6685mm         ENDM 
00004328  3605                    6686m         MOVE.W  D5, D3
0000432A  6000 02C2               6687m         BRA     COMPLETE_491
0000432E                          6688m ADRIMMEDIATEL_491:
0000432E  361A                    6689m         MOVE.W  (A2)+, D3
00004330                          6690mm         PRINTHASH
00004330  103C 0006               6691mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004334  323C 0023               6692mm         MOVE.W  #35, D1     ; AN = SIGN
00004338  4E4F                    6693mm         TRAP    #15         ; OUTPUT = SIGN
0000433A                          6694mm         ENDM
0000433A                          6695mm         PRINTSIGN
0000433A  103C 0006               6696mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000433E  323C 0024               6697mm         MOVE.W  #36, D1     ; AN = SIGN
00004342  4E4F                    6698mm         TRAP    #15         ; OUTPUT = SIGN
00004344                          6699mm         ENDM
00004344                          6700mm         ADROUT 
00004344  3212                    6701mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004346  E049                    6702mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004348  E849                    6703mm         LSR.W   #4, D1      
0000434A                          6704mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000434A  0C01 0009               6705mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000434E  6E00 000A               6706mmm         BGT     ALPHA_528
00004352  0601 0030               6707mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004356  6000 0006               6708mmm         BRA     DONE_528
0000435A  0601 0037               6709mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000435E  4E71                    6710mmm DONE_528: NOP
00004360                          6711mmm         ENDM
00004360  4E4F                    6712mm         TRAP    #15         ; EXECUTE OUTPUT
00004362                          6713mm         
00004362  3212                    6714mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004364  E949                    6715mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004366  E049                    6716mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004368  E849                    6717mm         LSR.W   #4, D1      
0000436A                          6718mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000436A  0C01 0009               6719mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000436E  6E00 000A               6720mmm         BGT     ALPHA_529
00004372  0601 0030               6721mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004376  6000 0006               6722mmm         BRA     DONE_529
0000437A  0601 0037               6723mmm ALPHA_529: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000437E  4E71                    6724mmm DONE_529: NOP
00004380                          6725mmm         ENDM
00004380  4E4F                    6726mm         TRAP    #15         ; EXECUTE OUTPUT
00004382                          6727mm         
00004382  3212                    6728mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004384  E149                    6729mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004386  E049                    6730mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004388  E849                    6731mm         LSR.W   #4, D1      
0000438A                          6732mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000438A  0C01 0009               6733mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000438E  6E00 000A               6734mmm         BGT     ALPHA_530
00004392  0601 0030               6735mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004396  6000 0006               6736mmm         BRA     DONE_530
0000439A  0601 0037               6737mmm ALPHA_530: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000439E  4E71                    6738mmm DONE_530: NOP
000043A0                          6739mmm         ENDM
000043A0  4E4F                    6740mm         TRAP    #15         ; EXECUTE OUTPUT
000043A2                          6741mm         
000043A2  3212                    6742mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A4  E149                    6743mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043A6  E949                    6744mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043A8  E049                    6745mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043AA  E849                    6746mm         LSR.W   #4, D1      
000043AC                          6747mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043AC  0C01 0009               6748mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043B0  6E00 000A               6749mmm         BGT     ALPHA_531
000043B4  0601 0030               6750mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B8  6000 0006               6751mmm         BRA     DONE_531
000043BC  0601 0037               6752mmm ALPHA_531: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043C0  4E71                    6753mmm DONE_531: NOP
000043C2                          6754mmm         ENDM
000043C2  4E4F                    6755mm         TRAP    #15         ; EXECUTE OUTPUT       
000043C4                          6756mm         ENDM 
000043C4  361A                    6757m         MOVE.W  (A2)+, D3
000043C6                          6758mm         ADROUT
000043C6  3212                    6759mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043C8  E049                    6760mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043CA  E849                    6761mm         LSR.W   #4, D1      
000043CC                          6762mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043CC  0C01 0009               6763mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043D0  6E00 000A               6764mmm         BGT     ALPHA_533
000043D4  0601 0030               6765mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D8  6000 0006               6766mmm         BRA     DONE_533
000043DC  0601 0037               6767mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043E0  4E71                    6768mmm DONE_533: NOP
000043E2                          6769mmm         ENDM
000043E2  4E4F                    6770mm         TRAP    #15         ; EXECUTE OUTPUT
000043E4                          6771mm         
000043E4  3212                    6772mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043E6  E949                    6773mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043E8  E049                    6774mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043EA  E849                    6775mm         LSR.W   #4, D1      
000043EC                          6776mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043EC  0C01 0009               6777mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043F0  6E00 000A               6778mmm         BGT     ALPHA_534
000043F4  0601 0030               6779mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F8  6000 0006               6780mmm         BRA     DONE_534
000043FC  0601 0037               6781mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004400  4E71                    6782mmm DONE_534: NOP
00004402                          6783mmm         ENDM
00004402  4E4F                    6784mm         TRAP    #15         ; EXECUTE OUTPUT
00004404                          6785mm         
00004404  3212                    6786mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004406  E149                    6787mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004408  E049                    6788mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000440A  E849                    6789mm         LSR.W   #4, D1      
0000440C                          6790mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000440C  0C01 0009               6791mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004410  6E00 000A               6792mmm         BGT     ALPHA_535
00004414  0601 0030               6793mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004418  6000 0006               6794mmm         BRA     DONE_535
0000441C  0601 0037               6795mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004420  4E71                    6796mmm DONE_535: NOP
00004422                          6797mmm         ENDM
00004422  4E4F                    6798mm         TRAP    #15         ; EXECUTE OUTPUT
00004424                          6799mm         
00004424  3212                    6800mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004426  E149                    6801mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004428  E949                    6802mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000442A  E049                    6803mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000442C  E849                    6804mm         LSR.W   #4, D1      
0000442E                          6805mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000442E  0C01 0009               6806mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004432  6E00 000A               6807mmm         BGT     ALPHA_536
00004436  0601 0030               6808mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000443A  6000 0006               6809mmm         BRA     DONE_536
0000443E  0601 0037               6810mmm ALPHA_536: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004442  4E71                    6811mmm DONE_536: NOP
00004444                          6812mmm         ENDM
00004444  4E4F                    6813mm         TRAP    #15         ; EXECUTE OUTPUT       
00004446                          6814mm         ENDM 
00004446  3605                    6815m         MOVE.W  D5, D3
00004448  6000 01A4               6816m         BRA     COMPLETE_491 
0000444C                          6817m ADRABSOLUTEW_491:     
0000444C  361A                    6818m         MOVE.W  (A2)+, D3
0000444E                          6819mm         PRINTSIGN
0000444E  103C 0006               6820mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004452  323C 0024               6821mm         MOVE.W  #36, D1     ; AN = SIGN
00004456  4E4F                    6822mm         TRAP    #15         ; OUTPUT = SIGN
00004458                          6823mm         ENDM
00004458                          6824mm         ADROUT
00004458  3212                    6825mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000445A  E049                    6826mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000445C  E849                    6827mm         LSR.W   #4, D1      
0000445E                          6828mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000445E  0C01 0009               6829mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004462  6E00 000A               6830mmm         BGT     ALPHA_539
00004466  0601 0030               6831mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000446A  6000 0006               6832mmm         BRA     DONE_539
0000446E  0601 0037               6833mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004472  4E71                    6834mmm DONE_539: NOP
00004474                          6835mmm         ENDM
00004474  4E4F                    6836mm         TRAP    #15         ; EXECUTE OUTPUT
00004476                          6837mm         
00004476  3212                    6838mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004478  E949                    6839mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000447A  E049                    6840mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000447C  E849                    6841mm         LSR.W   #4, D1      
0000447E                          6842mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000447E  0C01 0009               6843mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004482  6E00 000A               6844mmm         BGT     ALPHA_540
00004486  0601 0030               6845mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000448A  6000 0006               6846mmm         BRA     DONE_540
0000448E  0601 0037               6847mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004492  4E71                    6848mmm DONE_540: NOP
00004494                          6849mmm         ENDM
00004494  4E4F                    6850mm         TRAP    #15         ; EXECUTE OUTPUT
00004496                          6851mm         
00004496  3212                    6852mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004498  E149                    6853mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000449A  E049                    6854mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449C  E849                    6855mm         LSR.W   #4, D1      
0000449E                          6856mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449E  0C01 0009               6857mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A2  6E00 000A               6858mmm         BGT     ALPHA_541
000044A6  0601 0030               6859mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044AA  6000 0006               6860mmm         BRA     DONE_541
000044AE  0601 0037               6861mmm ALPHA_541: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B2  4E71                    6862mmm DONE_541: NOP
000044B4                          6863mmm         ENDM
000044B4  4E4F                    6864mm         TRAP    #15         ; EXECUTE OUTPUT
000044B6                          6865mm         
000044B6  3212                    6866mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044B8  E149                    6867mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044BA  E949                    6868mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044BC  E049                    6869mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BE  E849                    6870mm         LSR.W   #4, D1      
000044C0                          6871mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044C0  0C01 0009               6872mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C4  6E00 000A               6873mmm         BGT     ALPHA_542
000044C8  0601 0030               6874mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CC  6000 0006               6875mmm         BRA     DONE_542
000044D0  0601 0037               6876mmm ALPHA_542: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D4  4E71                    6877mmm DONE_542: NOP
000044D6                          6878mmm         ENDM
000044D6  4E4F                    6879mm         TRAP    #15         ; EXECUTE OUTPUT       
000044D8                          6880mm         ENDM 
000044D8  3605                    6881m         MOVE.W  D5, D3
000044DA  6000 0112               6882m         BRA     COMPLETE_491  
000044DE                          6883m ADRABSOLUTEL_491:  
000044DE  361A                    6884m         MOVE.W  (A2)+, D3
000044E0                          6885mm         PRINTSIGN
000044E0  103C 0006               6886mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000044E4  323C 0024               6887mm         MOVE.W  #36, D1     ; AN = SIGN
000044E8  4E4F                    6888mm         TRAP    #15         ; OUTPUT = SIGN
000044EA                          6889mm         ENDM
000044EA                          6890mm         ADROUT 
000044EA  3212                    6891mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044EC  E049                    6892mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044EE  E849                    6893mm         LSR.W   #4, D1      
000044F0                          6894mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044F0  0C01 0009               6895mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044F4  6E00 000A               6896mmm         BGT     ALPHA_545
000044F8  0601 0030               6897mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044FC  6000 0006               6898mmm         BRA     DONE_545
00004500  0601 0037               6899mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004504  4E71                    6900mmm DONE_545: NOP
00004506                          6901mmm         ENDM
00004506  4E4F                    6902mm         TRAP    #15         ; EXECUTE OUTPUT
00004508                          6903mm         
00004508  3212                    6904mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000450A  E949                    6905mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000450C  E049                    6906mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000450E  E849                    6907mm         LSR.W   #4, D1      
00004510                          6908mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004510  0C01 0009               6909mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004514  6E00 000A               6910mmm         BGT     ALPHA_546
00004518  0601 0030               6911mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000451C  6000 0006               6912mmm         BRA     DONE_546
00004520  0601 0037               6913mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004524  4E71                    6914mmm DONE_546: NOP
00004526                          6915mmm         ENDM
00004526  4E4F                    6916mm         TRAP    #15         ; EXECUTE OUTPUT
00004528                          6917mm         
00004528  3212                    6918mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000452A  E149                    6919mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000452C  E049                    6920mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000452E  E849                    6921mm         LSR.W   #4, D1      
00004530                          6922mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004530  0C01 0009               6923mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004534  6E00 000A               6924mmm         BGT     ALPHA_547
00004538  0601 0030               6925mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000453C  6000 0006               6926mmm         BRA     DONE_547
00004540  0601 0037               6927mmm ALPHA_547: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004544  4E71                    6928mmm DONE_547: NOP
00004546                          6929mmm         ENDM
00004546  4E4F                    6930mm         TRAP    #15         ; EXECUTE OUTPUT
00004548                          6931mm         
00004548  3212                    6932mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000454A  E149                    6933mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000454C  E949                    6934mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000454E  E049                    6935mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004550  E849                    6936mm         LSR.W   #4, D1      
00004552                          6937mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004552  0C01 0009               6938mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004556  6E00 000A               6939mmm         BGT     ALPHA_548
0000455A  0601 0030               6940mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000455E  6000 0006               6941mmm         BRA     DONE_548
00004562  0601 0037               6942mmm ALPHA_548: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004566  4E71                    6943mmm DONE_548: NOP
00004568                          6944mmm         ENDM
00004568  4E4F                    6945mm         TRAP    #15         ; EXECUTE OUTPUT       
0000456A                          6946mm         ENDM 
0000456A  361A                    6947m         MOVE.W  (A2)+, D3
0000456C                          6948mm         ADROUT
0000456C  3212                    6949mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000456E  E049                    6950mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004570  E849                    6951mm         LSR.W   #4, D1      
00004572                          6952mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004572  0C01 0009               6953mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004576  6E00 000A               6954mmm         BGT     ALPHA_550
0000457A  0601 0030               6955mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000457E  6000 0006               6956mmm         BRA     DONE_550
00004582  0601 0037               6957mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004586  4E71                    6958mmm DONE_550: NOP
00004588                          6959mmm         ENDM
00004588  4E4F                    6960mm         TRAP    #15         ; EXECUTE OUTPUT
0000458A                          6961mm         
0000458A  3212                    6962mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000458C  E949                    6963mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000458E  E049                    6964mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004590  E849                    6965mm         LSR.W   #4, D1      
00004592                          6966mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004592  0C01 0009               6967mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004596  6E00 000A               6968mmm         BGT     ALPHA_551
0000459A  0601 0030               6969mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000459E  6000 0006               6970mmm         BRA     DONE_551
000045A2  0601 0037               6971mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045A6  4E71                    6972mmm DONE_551: NOP
000045A8                          6973mmm         ENDM
000045A8  4E4F                    6974mm         TRAP    #15         ; EXECUTE OUTPUT
000045AA                          6975mm         
000045AA  3212                    6976mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045AC  E149                    6977mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045AE  E049                    6978mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B0  E849                    6979mm         LSR.W   #4, D1      
000045B2                          6980mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B2  0C01 0009               6981mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045B6  6E00 000A               6982mmm         BGT     ALPHA_552
000045BA  0601 0030               6983mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045BE  6000 0006               6984mmm         BRA     DONE_552
000045C2  0601 0037               6985mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045C6  4E71                    6986mmm DONE_552: NOP
000045C8                          6987mmm         ENDM
000045C8  4E4F                    6988mm         TRAP    #15         ; EXECUTE OUTPUT
000045CA                          6989mm         
000045CA  3212                    6990mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045CC  E149                    6991mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045CE  E949                    6992mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000045D0  E049                    6993mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D2  E849                    6994mm         LSR.W   #4, D1      
000045D4                          6995mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045D4  0C01 0009               6996mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045D8  6E00 000A               6997mmm         BGT     ALPHA_553
000045DC  0601 0030               6998mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045E0  6000 0006               6999mmm         BRA     DONE_553
000045E4  0601 0037               7000mmm ALPHA_553: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045E8  4E71                    7001mmm DONE_553: NOP
000045EA                          7002mmm         ENDM
000045EA  4E4F                    7003mm         TRAP    #15         ; EXECUTE OUTPUT       
000045EC                          7004mm         ENDM 
000045EC  3605                    7005m         MOVE.W  D5, D3
000045EE                          7006m 
000045EE                          7007m COMPLETE_491:  ; OPCODE HAS BEEN VERIFIED
000045EE                          7008m         ENDM
000045EE                          7009m         printComma
000045EE  43F8 00C9               7010m         LEA     OCOMMA, A1     
000045F2  103C 000E               7011m         MOVE.B  #14,D0          
000045F6  4E4F                    7012m         TRAP    #15
000045F8                          7013m         ENDM
000045F8                          7014m         printDnDest     D3
000045F8  3203                    7015m         MOVE.W  D3, D1      ; BITS 9 TO 11
000045FA  E949                    7016m         LSL     #$04, D1
000045FC  E049                    7017m         LSR     #$08, D1
000045FE  EA49                    7018m         LSR     #$05, D1
00004600  43F8 00C1               7019m         LEA     ODN, A1     
00004604  103C 000E               7020m         MOVE.B  #14,D0          
00004608  4E4F                    7021m         TRAP    #15
0000460A  103C 0003               7022m         MOVE.B  #3,D0          
0000460E  4E4F                    7023m         TRAP    #15
00004610                          7024m         ENDM
00004610  4E75                    7025          RTS                 ; Return from decodeDIVU subroutine
00004612                          7026  
00004612                          7027  
00004612                          7028  ; ------------------------------------------------------------
00004612                          7029  ; 8. "decodeLEA" subroutine
00004612                          7030  ; AUTHOR
00004612                          7031  ;
00004612                          7032  ; TODO: DESCRIPTION
00004612                          7033  ; ------------------------------------------------------------
00004612                          7034  decodeLEA:
00004612                          7035m         verifyOpcode    pLEA, (A2)
00004612  43F8 014B               7036m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004616  3612                    7037m         MOVE.W  (A2), D3      ; INPUT VALUE
00004618  123C 000F               7038m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000461C                          7039m         
0000461C                          7040m LOOP_556: 
0000461C  0C11 0030               7041m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004620  6700 000E               7042m         BEQ     CHECKFOR0_556
00004624  0C11 0031               7043m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004628  6700 0010               7044m         BEQ     CHECKFOR1_556
0000462C  6000 0012               7045m         BRA     NEXT_556      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004630                          7046m         
00004630                          7047m CHECKFOR0_556: 
00004630  0303                    7048m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004632  6600 24A2               7049m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004636  6000 0008               7050m         BRA     NEXT_556
0000463A                          7051m 
0000463A                          7052m CHECKFOR1_556:
0000463A  0303                    7053m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000463C  6700 2498               7054m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004640                          7055m 
00004640                          7056m NEXT_556: 
00004640  B23C 0000               7057m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004644  6700 0008               7058m         BEQ     COMPLETE_556  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004648  5301                    7059m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000464A  1819                    7060m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000464C  60CE                    7061m         BRA     LOOP_556      ; BEGIN LOOP AGAIN
0000464E                          7062m 
0000464E                          7063m COMPLETE_556:  ; OPCODE HAS BEEN VERIFIED
0000464E                          7064m         ENDM
0000464E  43F8 0081               7065          LEA     oLEA, A1     
00004652  103C 000E               7066          MOVE.B  #14,D0          
00004656  4E4F                    7067          TRAP    #15
00004658                          7068          
00004658  43F8 00D2               7069          LEA     oBlank, A1     
0000465C  103C 000E               7070          MOVE.B  #14,D0          
00004660  4E4F                    7071          TRAP    #15
00004662                          7072          
00004662                          7073m         prepareAdrMode  #$1, (A2)
00004662  3C3C 0001               7074m         MOVE.W  #$1, D6      ; INPUT VALUE
00004666  3212                    7075m         MOVE.W  (A2), D1
00004668  BC3C 0001               7076m         CMP.B   #$01, D6
0000466C  6700 000C               7077m         BEQ     ADRSOURCE_557    
00004670                          7078m ADRDEST_557:
00004670  EF49                    7079m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004672  E049                    7080m         LSR     #$08, D1
00004674  EA49                    7081m         LSR     #$05, D1
00004676  6000 000A               7082m         BRA     COMPLETE_557 
0000467A                          7083m ADRSOURCE_557:                
0000467A  E149                    7084m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000467C  E549                    7085m         LSL     #$02, D1
0000467E  E049                    7086m         LSR     #$08, D1
00004680  EA49                    7087m         LSR     #$05, D1
00004682                          7088m COMPLETE_557:  ; OPCODE HAS BEEN VERIFIED
00004682                          7089m         ENDM        
00004682                          7090m         decodeAdrMode   (A2), D1
00004682  3612                    7091m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004684  3201                    7092m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004686                          7093m 
00004686  B23C 0001               7094m         CMP.B   #$01, D1
0000468A  6700 0066               7095m         BEQ     ADRREGDIRECT_558    
0000468E  B23C 0002               7096m         CMP.B   #$02, D1
00004692  6700 00A0               7097m         BEQ     ADRREGINDIRECT_558  
00004696  B23C 0003               7098m         CMP.B   #$03, D1
0000469A  6700 0102               7099m         BEQ     ADRREGPOSTINC_558  
0000469E  B23C 0004               7100m         CMP.B   #$04, D1
000046A2  6700 0178               7101m         BEQ     ADRREGPREDEC_558
000046A6  B23C 0007               7102m         CMP.B   #$07, D1
000046AA  6700 01EE               7103m         BEQ     ADRABSOLUTE_558    
000046AE                          7104m         
000046AE                          7105m DATAREGDIRECT_558: 
000046AE  BC3C 0001               7106m         CMP.B   #$01, D6
000046B2  6700 001E               7107m         BEQ     DATAREGDIRECTSRC_558   
000046B6                          7108m DATAREGDIRECTDEST_558: 
000046B6                          7109mm         PRINTDNDEST D3 
000046B6  3203                    7110mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000046B8  E949                    7111mm         LSL     #$04, D1
000046BA  E049                    7112mm         LSR     #$08, D1
000046BC  EA49                    7113mm         LSR     #$05, D1
000046BE  43F8 00C1               7114mm         LEA     ODN, A1     
000046C2  103C 000E               7115mm         MOVE.B  #14,D0          
000046C6  4E4F                    7116mm         TRAP    #15
000046C8  103C 0003               7117mm         MOVE.B  #3,D0          
000046CC  4E4F                    7118mm         TRAP    #15
000046CE                          7119mm         ENDM
000046CE  6000 0562               7120m         BRA     COMPLETE_558 
000046D2                          7121m DATAREGDIRECTSRC_558: 
000046D2                          7122mm         PRINTDNSRC D3 
000046D2  4281                    7123mm         CLR.L   D1
000046D4  3203                    7124mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000046D6  E149                    7125mm         LSL     #$08, D1
000046D8  EB49                    7126mm         LSL     #$05, D1
000046DA  E049                    7127mm         LSR     #$08, D1
000046DC  EA49                    7128mm         LSR     #$05, D1
000046DE  43F8 00C1               7129mm         LEA     ODN, A1     
000046E2  103C 000E               7130mm         MOVE.B  #14,D0          
000046E6  4E4F                    7131mm         TRAP    #15
000046E8  103C 0003               7132mm         MOVE.B  #3,D0          
000046EC  4E4F                    7133mm         TRAP    #15
000046EE                          7134mm         ENDM
000046EE  6000 0542               7135m         BRA     COMPLETE_558   
000046F2                          7136m         
000046F2                          7137m ADRREGDIRECT_558: 
000046F2  BC3C 0001               7138m         CMP.B   #$01, D6
000046F6  6700 001E               7139m         BEQ     ADRREGDIRECTSRC_558   
000046FA                          7140m ADRREGDIRECTDEST_558:
000046FA                          7141mm         PRINTANDEST D3
000046FA  3203                    7142mm         MOVE.W  D3, D1
000046FC  E949                    7143mm         LSL     #$04, D1
000046FE  E049                    7144mm         LSR     #$08, D1
00004700  EA49                    7145mm         LSR     #$05, D1
00004702  43F8 00C3               7146mm         LEA     OAN, A1     
00004706  103C 000E               7147mm         MOVE.B  #14,D0          
0000470A  4E4F                    7148mm         TRAP    #15
0000470C  103C 0003               7149mm         MOVE.B  #3,D0          
00004710  4E4F                    7150mm         TRAP    #15
00004712                          7151mm         ENDM
00004712  6000 051E               7152m         BRA     COMPLETE_558   
00004716                          7153m ADRREGDIRECTSRC_558:
00004716                          7154mm         PRINTANSRC D3
00004716  3203                    7155mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004718  E149                    7156mm         LSL     #$08, D1
0000471A  EB49                    7157mm         LSL     #$05, D1
0000471C  E049                    7158mm         LSR     #$08, D1
0000471E  EA49                    7159mm         LSR     #$05, D1
00004720  43F8 00C3               7160mm         LEA     OAN, A1     
00004724  103C 000E               7161mm         MOVE.B  #14,D0          
00004728  4E4F                    7162mm         TRAP    #15
0000472A  103C 0003               7163mm         MOVE.B  #3,D0          
0000472E  4E4F                    7164mm         TRAP    #15
00004730                          7165mm         ENDM
00004730  6000 0500               7166m         BRA     COMPLETE_558   
00004734                          7167m        
00004734                          7168m ADRREGINDIRECT_558:   
00004734  BC3C 0001               7169m         CMP.B   #$01, D6
00004738  6700 0032               7170m         BEQ     ADRREGINDIRECTSRC_558   
0000473C                          7171m ADRREGINDIRECTDEST_558:
0000473C                          7172mm         PRINTLB
0000473C  43F8 00C5               7173mm         LEA     OLB, A1     
00004740  103C 000E               7174mm         MOVE.B  #14,D0          
00004744  4E4F                    7175mm         TRAP    #15
00004746                          7176mm         ENDM
00004746                          7177mm         PRINTANDEST D3  
00004746  3203                    7178mm         MOVE.W  D3, D1
00004748  E949                    7179mm         LSL     #$04, D1
0000474A  E049                    7180mm         LSR     #$08, D1
0000474C  EA49                    7181mm         LSR     #$05, D1
0000474E  43F8 00C3               7182mm         LEA     OAN, A1     
00004752  103C 000E               7183mm         MOVE.B  #14,D0          
00004756  4E4F                    7184mm         TRAP    #15
00004758  103C 0003               7185mm         MOVE.B  #3,D0          
0000475C  4E4F                    7186mm         TRAP    #15
0000475E                          7187mm         ENDM
0000475E                          7188mm         PRINTRB
0000475E  43F8 00C7               7189mm         LEA     ORB, A1     
00004762  103C 000E               7190mm         MOVE.B  #14,D0          
00004766  4E4F                    7191mm         TRAP    #15
00004768                          7192mm         ENDM
00004768  6000 04C8               7193m         BRA     COMPLETE_558     
0000476C                          7194m ADRREGINDIRECTSRC_558:   
0000476C                          7195mm         PRINTLB
0000476C  43F8 00C5               7196mm         LEA     OLB, A1     
00004770  103C 000E               7197mm         MOVE.B  #14,D0          
00004774  4E4F                    7198mm         TRAP    #15
00004776                          7199mm         ENDM
00004776                          7200mm         PRINTANSRC D3  
00004776  3203                    7201mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004778  E149                    7202mm         LSL     #$08, D1
0000477A  EB49                    7203mm         LSL     #$05, D1
0000477C  E049                    7204mm         LSR     #$08, D1
0000477E  EA49                    7205mm         LSR     #$05, D1
00004780  43F8 00C3               7206mm         LEA     OAN, A1     
00004784  103C 000E               7207mm         MOVE.B  #14,D0          
00004788  4E4F                    7208mm         TRAP    #15
0000478A  103C 0003               7209mm         MOVE.B  #3,D0          
0000478E  4E4F                    7210mm         TRAP    #15
00004790                          7211mm         ENDM
00004790                          7212mm         PRINTRB
00004790  43F8 00C7               7213mm         LEA     ORB, A1     
00004794  103C 000E               7214mm         MOVE.B  #14,D0          
00004798  4E4F                    7215mm         TRAP    #15
0000479A                          7216mm         ENDM
0000479A  6000 0496               7217m         BRA     COMPLETE_558   
0000479E                          7218m         
0000479E                          7219m ADRREGPOSTINC_558:   
0000479E  BC3C 0001               7220m         CMP.B   #$01, D6
000047A2  6700 003C               7221m         BEQ     ADRREGPOSTINCSRC_558   
000047A6                          7222m ADRREGPOSTINCDEST_558: 
000047A6                          7223mm         PRINTLB
000047A6  43F8 00C5               7224mm         LEA     OLB, A1     
000047AA  103C 000E               7225mm         MOVE.B  #14,D0          
000047AE  4E4F                    7226mm         TRAP    #15
000047B0                          7227mm         ENDM
000047B0                          7228mm         PRINTANDEST D3  
000047B0  3203                    7229mm         MOVE.W  D3, D1
000047B2  E949                    7230mm         LSL     #$04, D1
000047B4  E049                    7231mm         LSR     #$08, D1
000047B6  EA49                    7232mm         LSR     #$05, D1
000047B8  43F8 00C3               7233mm         LEA     OAN, A1     
000047BC  103C 000E               7234mm         MOVE.B  #14,D0          
000047C0  4E4F                    7235mm         TRAP    #15
000047C2  103C 0003               7236mm         MOVE.B  #3,D0          
000047C6  4E4F                    7237mm         TRAP    #15
000047C8                          7238mm         ENDM
000047C8                          7239mm         PRINTRB
000047C8  43F8 00C7               7240mm         LEA     ORB, A1     
000047CC  103C 000E               7241mm         MOVE.B  #14,D0          
000047D0  4E4F                    7242mm         TRAP    #15
000047D2                          7243mm         ENDM
000047D2                          7244mm         PRINTPI
000047D2  43F8 00CE               7245mm         LEA     OPSTINC, A1     
000047D6  103C 000E               7246mm         MOVE.B  #14,D0          
000047DA  4E4F                    7247mm         TRAP    #15
000047DC                          7248mm         ENDM
000047DC  6000 0454               7249m         BRA     COMPLETE_558  
000047E0                          7250m ADRREGPOSTINCSRC_558:           
000047E0                          7251mm         PRINTLB
000047E0  43F8 00C5               7252mm         LEA     OLB, A1     
000047E4  103C 000E               7253mm         MOVE.B  #14,D0          
000047E8  4E4F                    7254mm         TRAP    #15
000047EA                          7255mm         ENDM
000047EA                          7256mm         PRINTANSRC D3  
000047EA  3203                    7257mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047EC  E149                    7258mm         LSL     #$08, D1
000047EE  EB49                    7259mm         LSL     #$05, D1
000047F0  E049                    7260mm         LSR     #$08, D1
000047F2  EA49                    7261mm         LSR     #$05, D1
000047F4  43F8 00C3               7262mm         LEA     OAN, A1     
000047F8  103C 000E               7263mm         MOVE.B  #14,D0          
000047FC  4E4F                    7264mm         TRAP    #15
000047FE  103C 0003               7265mm         MOVE.B  #3,D0          
00004802  4E4F                    7266mm         TRAP    #15
00004804                          7267mm         ENDM
00004804                          7268mm         PRINTRB
00004804  43F8 00C7               7269mm         LEA     ORB, A1     
00004808  103C 000E               7270mm         MOVE.B  #14,D0          
0000480C  4E4F                    7271mm         TRAP    #15
0000480E                          7272mm         ENDM
0000480E                          7273mm         PRINTPI
0000480E  43F8 00CE               7274mm         LEA     OPSTINC, A1     
00004812  103C 000E               7275mm         MOVE.B  #14,D0          
00004816  4E4F                    7276mm         TRAP    #15
00004818                          7277mm         ENDM
00004818  6000 0418               7278m         BRA     COMPLETE_558  
0000481C                          7279m ADRREGPREDEC_558: 
0000481C  BC3C 0001               7280m         CMP.B   #$01, D6
00004820  6700 003C               7281m         BEQ     ADRREGPREDECSRC_558   
00004824                          7282m ADRREGPREDECDEST_558:
00004824                          7283mm         PRINTPD  
00004824  43F8 00CC               7284mm         LEA     OPREDEC, A1     
00004828  103C 000E               7285mm         MOVE.B  #14,D0          
0000482C  4E4F                    7286mm         TRAP    #15
0000482E                          7287mm         ENDM
0000482E                          7288mm         PRINTLB
0000482E  43F8 00C5               7289mm         LEA     OLB, A1     
00004832  103C 000E               7290mm         MOVE.B  #14,D0          
00004836  4E4F                    7291mm         TRAP    #15
00004838                          7292mm         ENDM
00004838                          7293mm         PRINTANDEST D3  
00004838  3203                    7294mm         MOVE.W  D3, D1
0000483A  E949                    7295mm         LSL     #$04, D1
0000483C  E049                    7296mm         LSR     #$08, D1
0000483E  EA49                    7297mm         LSR     #$05, D1
00004840  43F8 00C3               7298mm         LEA     OAN, A1     
00004844  103C 000E               7299mm         MOVE.B  #14,D0          
00004848  4E4F                    7300mm         TRAP    #15
0000484A  103C 0003               7301mm         MOVE.B  #3,D0          
0000484E  4E4F                    7302mm         TRAP    #15
00004850                          7303mm         ENDM
00004850                          7304mm         PRINTRB
00004850  43F8 00C7               7305mm         LEA     ORB, A1     
00004854  103C 000E               7306mm         MOVE.B  #14,D0          
00004858  4E4F                    7307mm         TRAP    #15
0000485A                          7308mm         ENDM
0000485A  6000 03D6               7309m         BRA     COMPLETE_558   
0000485E                          7310m ADRREGPREDECSRC_558: 
0000485E                          7311mm         PRINTPD  
0000485E  43F8 00CC               7312mm         LEA     OPREDEC, A1     
00004862  103C 000E               7313mm         MOVE.B  #14,D0          
00004866  4E4F                    7314mm         TRAP    #15
00004868                          7315mm         ENDM
00004868                          7316mm         PRINTLB
00004868  43F8 00C5               7317mm         LEA     OLB, A1     
0000486C  103C 000E               7318mm         MOVE.B  #14,D0          
00004870  4E4F                    7319mm         TRAP    #15
00004872                          7320mm         ENDM
00004872                          7321mm         PRINTANSRC D3  
00004872  3203                    7322mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004874  E149                    7323mm         LSL     #$08, D1
00004876  EB49                    7324mm         LSL     #$05, D1
00004878  E049                    7325mm         LSR     #$08, D1
0000487A  EA49                    7326mm         LSR     #$05, D1
0000487C  43F8 00C3               7327mm         LEA     OAN, A1     
00004880  103C 000E               7328mm         MOVE.B  #14,D0          
00004884  4E4F                    7329mm         TRAP    #15
00004886  103C 0003               7330mm         MOVE.B  #3,D0          
0000488A  4E4F                    7331mm         TRAP    #15
0000488C                          7332mm         ENDM
0000488C                          7333mm         PRINTRB
0000488C  43F8 00C7               7334mm         LEA     ORB, A1     
00004890  103C 000E               7335mm         MOVE.B  #14,D0          
00004894  4E4F                    7336mm         TRAP    #15
00004896                          7337mm         ENDM
00004896  6000 039A               7338m         BRA     COMPLETE_558
0000489A                          7339m        
0000489A                          7340m ADRABSOLUTE_558:
0000489A  BC3C 0001               7341m         CMP.B   #$01, D6
0000489E  6600 0018               7342m         BNE     ADRABSOLUTEDST_558 
000048A2                          7343m         
000048A2  3A03                    7344m         MOVE.W  D3, D5
000048A4  0803 0002               7345m         BTST    #2, D3
000048A8  6600 0024               7346m         BNE     ADRIMMEDIATE_558
000048AC  0803 0000               7347m         BTST    #0, D3
000048B0  6600 0270               7348m         BNE     ADRABSOLUTEL_558
000048B4  6000 01DA               7349m         BRA     ADRABSOLUTEW_558
000048B8                          7350m ADRABSOLUTEDST_558:
000048B8  3A03                    7351m         MOVE.W  D3, D5
000048BA  0803 000B               7352m         BTST    #$B, D3
000048BE  6600 000E               7353m         BNE     ADRIMMEDIATE_558
000048C2  0803 0009               7354m         BTST    #$09, D3
000048C6  6600 025A               7355m         BNE     ADRABSOLUTEL_558
000048CA  6000 01C4               7356m         BRA     ADRABSOLUTEW_558
000048CE                          7357m ADRIMMEDIATE_558:
000048CE  BE3C 0001               7358m         CMP.B   #1, D7
000048D2  6700 009E               7359m         BEQ     ADRIMMEDIATEL_558
000048D6                          7360m ADRIMMEDIATEW_558:
000048D6  361A                    7361m         MOVE.W  (A2)+, D3
000048D8                          7362mm         PRINTHASH
000048D8  103C 0006               7363mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048DC  323C 0023               7364mm         MOVE.W  #35, D1     ; AN = SIGN
000048E0  4E4F                    7365mm         TRAP    #15         ; OUTPUT = SIGN
000048E2                          7366mm         ENDM
000048E2                          7367mm         PRINTSIGN
000048E2  103C 0006               7368mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000048E6  323C 0024               7369mm         MOVE.W  #36, D1     ; AN = SIGN
000048EA  4E4F                    7370mm         TRAP    #15         ; OUTPUT = SIGN
000048EC                          7371mm         ENDM
000048EC                          7372mm         ADROUT
000048EC  3212                    7373mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000048EE  E049                    7374mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000048F0  E849                    7375mm         LSR.W   #4, D1      
000048F2                          7376mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000048F2  0C01 0009               7377mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000048F6  6E00 000A               7378mmm         BGT     ALPHA_588
000048FA  0601 0030               7379mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000048FE  6000 0006               7380mmm         BRA     DONE_588
00004902  0601 0037               7381mmm ALPHA_588: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004906  4E71                    7382mmm DONE_588: NOP
00004908                          7383mmm         ENDM
00004908  4E4F                    7384mm         TRAP    #15         ; EXECUTE OUTPUT
0000490A                          7385mm         
0000490A  3212                    7386mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000490C  E949                    7387mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000490E  E049                    7388mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004910  E849                    7389mm         LSR.W   #4, D1      
00004912                          7390mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004912  0C01 0009               7391mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004916  6E00 000A               7392mmm         BGT     ALPHA_589
0000491A  0601 0030               7393mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000491E  6000 0006               7394mmm         BRA     DONE_589
00004922  0601 0037               7395mmm ALPHA_589: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004926  4E71                    7396mmm DONE_589: NOP
00004928                          7397mmm         ENDM
00004928  4E4F                    7398mm         TRAP    #15         ; EXECUTE OUTPUT
0000492A                          7399mm         
0000492A  3212                    7400mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000492C  E149                    7401mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000492E  E049                    7402mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004930  E849                    7403mm         LSR.W   #4, D1      
00004932                          7404mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004932  0C01 0009               7405mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004936  6E00 000A               7406mmm         BGT     ALPHA_590
0000493A  0601 0030               7407mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000493E  6000 0006               7408mmm         BRA     DONE_590
00004942  0601 0037               7409mmm ALPHA_590: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004946  4E71                    7410mmm DONE_590: NOP
00004948                          7411mmm         ENDM
00004948  4E4F                    7412mm         TRAP    #15         ; EXECUTE OUTPUT
0000494A                          7413mm         
0000494A  3212                    7414mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000494C  E149                    7415mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000494E  E949                    7416mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004950  E049                    7417mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004952  E849                    7418mm         LSR.W   #4, D1      
00004954                          7419mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004954  0C01 0009               7420mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004958  6E00 000A               7421mmm         BGT     ALPHA_591
0000495C  0601 0030               7422mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004960  6000 0006               7423mmm         BRA     DONE_591
00004964  0601 0037               7424mmm ALPHA_591: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004968  4E71                    7425mmm DONE_591: NOP
0000496A                          7426mmm         ENDM
0000496A  4E4F                    7427mm         TRAP    #15         ; EXECUTE OUTPUT       
0000496C                          7428mm         ENDM 
0000496C  3605                    7429m         MOVE.W  D5, D3
0000496E  6000 02C2               7430m         BRA     COMPLETE_558
00004972                          7431m ADRIMMEDIATEL_558:
00004972  361A                    7432m         MOVE.W  (A2)+, D3
00004974                          7433mm         PRINTHASH
00004974  103C 0006               7434mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004978  323C 0023               7435mm         MOVE.W  #35, D1     ; AN = SIGN
0000497C  4E4F                    7436mm         TRAP    #15         ; OUTPUT = SIGN
0000497E                          7437mm         ENDM
0000497E                          7438mm         PRINTSIGN
0000497E  103C 0006               7439mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004982  323C 0024               7440mm         MOVE.W  #36, D1     ; AN = SIGN
00004986  4E4F                    7441mm         TRAP    #15         ; OUTPUT = SIGN
00004988                          7442mm         ENDM
00004988                          7443mm         ADROUT 
00004988  3212                    7444mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000498A  E049                    7445mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000498C  E849                    7446mm         LSR.W   #4, D1      
0000498E                          7447mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000498E  0C01 0009               7448mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004992  6E00 000A               7449mmm         BGT     ALPHA_595
00004996  0601 0030               7450mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000499A  6000 0006               7451mmm         BRA     DONE_595
0000499E  0601 0037               7452mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049A2  4E71                    7453mmm DONE_595: NOP
000049A4                          7454mmm         ENDM
000049A4  4E4F                    7455mm         TRAP    #15         ; EXECUTE OUTPUT
000049A6                          7456mm         
000049A6  3212                    7457mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049A8  E949                    7458mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000049AA  E049                    7459mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049AC  E849                    7460mm         LSR.W   #4, D1      
000049AE                          7461mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049AE  0C01 0009               7462mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049B2  6E00 000A               7463mmm         BGT     ALPHA_596
000049B6  0601 0030               7464mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049BA  6000 0006               7465mmm         BRA     DONE_596
000049BE  0601 0037               7466mmm ALPHA_596: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049C2  4E71                    7467mmm DONE_596: NOP
000049C4                          7468mmm         ENDM
000049C4  4E4F                    7469mm         TRAP    #15         ; EXECUTE OUTPUT
000049C6                          7470mm         
000049C6  3212                    7471mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049C8  E149                    7472mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049CA  E049                    7473mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049CC  E849                    7474mm         LSR.W   #4, D1      
000049CE                          7475mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049CE  0C01 0009               7476mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049D2  6E00 000A               7477mmm         BGT     ALPHA_597
000049D6  0601 0030               7478mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049DA  6000 0006               7479mmm         BRA     DONE_597
000049DE  0601 0037               7480mmm ALPHA_597: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049E2  4E71                    7481mmm DONE_597: NOP
000049E4                          7482mmm         ENDM
000049E4  4E4F                    7483mm         TRAP    #15         ; EXECUTE OUTPUT
000049E6                          7484mm         
000049E6  3212                    7485mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049E8  E149                    7486mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000049EA  E949                    7487mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000049EC  E049                    7488mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049EE  E849                    7489mm         LSR.W   #4, D1      
000049F0                          7490mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F0  0C01 0009               7491mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049F4  6E00 000A               7492mmm         BGT     ALPHA_598
000049F8  0601 0030               7493mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049FC  6000 0006               7494mmm         BRA     DONE_598
00004A00  0601 0037               7495mmm ALPHA_598: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A04  4E71                    7496mmm DONE_598: NOP
00004A06                          7497mmm         ENDM
00004A06  4E4F                    7498mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A08                          7499mm         ENDM 
00004A08  361A                    7500m         MOVE.W  (A2)+, D3
00004A0A                          7501mm         ADROUT
00004A0A  3212                    7502mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A0C  E049                    7503mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A0E  E849                    7504mm         LSR.W   #4, D1      
00004A10                          7505mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A10  0C01 0009               7506mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A14  6E00 000A               7507mmm         BGT     ALPHA_600
00004A18  0601 0030               7508mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A1C  6000 0006               7509mmm         BRA     DONE_600
00004A20  0601 0037               7510mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A24  4E71                    7511mmm DONE_600: NOP
00004A26                          7512mmm         ENDM
00004A26  4E4F                    7513mm         TRAP    #15         ; EXECUTE OUTPUT
00004A28                          7514mm         
00004A28  3212                    7515mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A2A  E949                    7516mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A2C  E049                    7517mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A2E  E849                    7518mm         LSR.W   #4, D1      
00004A30                          7519mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A30  0C01 0009               7520mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A34  6E00 000A               7521mmm         BGT     ALPHA_601
00004A38  0601 0030               7522mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A3C  6000 0006               7523mmm         BRA     DONE_601
00004A40  0601 0037               7524mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A44  4E71                    7525mmm DONE_601: NOP
00004A46                          7526mmm         ENDM
00004A46  4E4F                    7527mm         TRAP    #15         ; EXECUTE OUTPUT
00004A48                          7528mm         
00004A48  3212                    7529mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A4A  E149                    7530mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A4C  E049                    7531mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A4E  E849                    7532mm         LSR.W   #4, D1      
00004A50                          7533mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A50  0C01 0009               7534mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A54  6E00 000A               7535mmm         BGT     ALPHA_602
00004A58  0601 0030               7536mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A5C  6000 0006               7537mmm         BRA     DONE_602
00004A60  0601 0037               7538mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A64  4E71                    7539mmm DONE_602: NOP
00004A66                          7540mmm         ENDM
00004A66  4E4F                    7541mm         TRAP    #15         ; EXECUTE OUTPUT
00004A68                          7542mm         
00004A68  3212                    7543mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A6A  E149                    7544mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A6C  E949                    7545mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A6E  E049                    7546mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A70  E849                    7547mm         LSR.W   #4, D1      
00004A72                          7548mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A72  0C01 0009               7549mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A76  6E00 000A               7550mmm         BGT     ALPHA_603
00004A7A  0601 0030               7551mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A7E  6000 0006               7552mmm         BRA     DONE_603
00004A82  0601 0037               7553mmm ALPHA_603: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A86  4E71                    7554mmm DONE_603: NOP
00004A88                          7555mmm         ENDM
00004A88  4E4F                    7556mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A8A                          7557mm         ENDM 
00004A8A  3605                    7558m         MOVE.W  D5, D3
00004A8C  6000 01A4               7559m         BRA     COMPLETE_558 
00004A90                          7560m ADRABSOLUTEW_558:     
00004A90  361A                    7561m         MOVE.W  (A2)+, D3
00004A92                          7562mm         PRINTSIGN
00004A92  103C 0006               7563mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004A96  323C 0024               7564mm         MOVE.W  #36, D1     ; AN = SIGN
00004A9A  4E4F                    7565mm         TRAP    #15         ; OUTPUT = SIGN
00004A9C                          7566mm         ENDM
00004A9C                          7567mm         ADROUT
00004A9C  3212                    7568mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A9E  E049                    7569mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AA0  E849                    7570mm         LSR.W   #4, D1      
00004AA2                          7571mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AA2  0C01 0009               7572mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AA6  6E00 000A               7573mmm         BGT     ALPHA_606
00004AAA  0601 0030               7574mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AAE  6000 0006               7575mmm         BRA     DONE_606
00004AB2  0601 0037               7576mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AB6  4E71                    7577mmm DONE_606: NOP
00004AB8                          7578mmm         ENDM
00004AB8  4E4F                    7579mm         TRAP    #15         ; EXECUTE OUTPUT
00004ABA                          7580mm         
00004ABA  3212                    7581mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ABC  E949                    7582mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004ABE  E049                    7583mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AC0  E849                    7584mm         LSR.W   #4, D1      
00004AC2                          7585mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AC2  0C01 0009               7586mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AC6  6E00 000A               7587mmm         BGT     ALPHA_607
00004ACA  0601 0030               7588mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004ACE  6000 0006               7589mmm         BRA     DONE_607
00004AD2  0601 0037               7590mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AD6  4E71                    7591mmm DONE_607: NOP
00004AD8                          7592mmm         ENDM
00004AD8  4E4F                    7593mm         TRAP    #15         ; EXECUTE OUTPUT
00004ADA                          7594mm         
00004ADA  3212                    7595mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004ADC  E149                    7596mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004ADE  E049                    7597mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AE0  E849                    7598mm         LSR.W   #4, D1      
00004AE2                          7599mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AE2  0C01 0009               7600mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AE6  6E00 000A               7601mmm         BGT     ALPHA_608
00004AEA  0601 0030               7602mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AEE  6000 0006               7603mmm         BRA     DONE_608
00004AF2  0601 0037               7604mmm ALPHA_608: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AF6  4E71                    7605mmm DONE_608: NOP
00004AF8                          7606mmm         ENDM
00004AF8  4E4F                    7607mm         TRAP    #15         ; EXECUTE OUTPUT
00004AFA                          7608mm         
00004AFA  3212                    7609mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AFC  E149                    7610mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AFE  E949                    7611mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B00  E049                    7612mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B02  E849                    7613mm         LSR.W   #4, D1      
00004B04                          7614mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B04  0C01 0009               7615mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B08  6E00 000A               7616mmm         BGT     ALPHA_609
00004B0C  0601 0030               7617mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B10  6000 0006               7618mmm         BRA     DONE_609
00004B14  0601 0037               7619mmm ALPHA_609: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B18  4E71                    7620mmm DONE_609: NOP
00004B1A                          7621mmm         ENDM
00004B1A  4E4F                    7622mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B1C                          7623mm         ENDM 
00004B1C  3605                    7624m         MOVE.W  D5, D3
00004B1E  6000 0112               7625m         BRA     COMPLETE_558  
00004B22                          7626m ADRABSOLUTEL_558:  
00004B22  361A                    7627m         MOVE.W  (A2)+, D3
00004B24                          7628mm         PRINTSIGN
00004B24  103C 0006               7629mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B28  323C 0024               7630mm         MOVE.W  #36, D1     ; AN = SIGN
00004B2C  4E4F                    7631mm         TRAP    #15         ; OUTPUT = SIGN
00004B2E                          7632mm         ENDM
00004B2E                          7633mm         ADROUT 
00004B2E  3212                    7634mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B30  E049                    7635mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B32  E849                    7636mm         LSR.W   #4, D1      
00004B34                          7637mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B34  0C01 0009               7638mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B38  6E00 000A               7639mmm         BGT     ALPHA_612
00004B3C  0601 0030               7640mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B40  6000 0006               7641mmm         BRA     DONE_612
00004B44  0601 0037               7642mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B48  4E71                    7643mmm DONE_612: NOP
00004B4A                          7644mmm         ENDM
00004B4A  4E4F                    7645mm         TRAP    #15         ; EXECUTE OUTPUT
00004B4C                          7646mm         
00004B4C  3212                    7647mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B4E  E949                    7648mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B50  E049                    7649mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B52  E849                    7650mm         LSR.W   #4, D1      
00004B54                          7651mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B54  0C01 0009               7652mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B58  6E00 000A               7653mmm         BGT     ALPHA_613
00004B5C  0601 0030               7654mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B60  6000 0006               7655mmm         BRA     DONE_613
00004B64  0601 0037               7656mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B68  4E71                    7657mmm DONE_613: NOP
00004B6A                          7658mmm         ENDM
00004B6A  4E4F                    7659mm         TRAP    #15         ; EXECUTE OUTPUT
00004B6C                          7660mm         
00004B6C  3212                    7661mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B6E  E149                    7662mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B70  E049                    7663mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B72  E849                    7664mm         LSR.W   #4, D1      
00004B74                          7665mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B74  0C01 0009               7666mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B78  6E00 000A               7667mmm         BGT     ALPHA_614
00004B7C  0601 0030               7668mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B80  6000 0006               7669mmm         BRA     DONE_614
00004B84  0601 0037               7670mmm ALPHA_614: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B88  4E71                    7671mmm DONE_614: NOP
00004B8A                          7672mmm         ENDM
00004B8A  4E4F                    7673mm         TRAP    #15         ; EXECUTE OUTPUT
00004B8C                          7674mm         
00004B8C  3212                    7675mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B8E  E149                    7676mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B90  E949                    7677mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B92  E049                    7678mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B94  E849                    7679mm         LSR.W   #4, D1      
00004B96                          7680mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B96  0C01 0009               7681mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B9A  6E00 000A               7682mmm         BGT     ALPHA_615
00004B9E  0601 0030               7683mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BA2  6000 0006               7684mmm         BRA     DONE_615
00004BA6  0601 0037               7685mmm ALPHA_615: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BAA  4E71                    7686mmm DONE_615: NOP
00004BAC                          7687mmm         ENDM
00004BAC  4E4F                    7688mm         TRAP    #15         ; EXECUTE OUTPUT       
00004BAE                          7689mm         ENDM 
00004BAE  361A                    7690m         MOVE.W  (A2)+, D3
00004BB0                          7691mm         ADROUT
00004BB0  3212                    7692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BB2  E049                    7693mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BB4  E849                    7694mm         LSR.W   #4, D1      
00004BB6                          7695mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BB6  0C01 0009               7696mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BBA  6E00 000A               7697mmm         BGT     ALPHA_617
00004BBE  0601 0030               7698mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BC2  6000 0006               7699mmm         BRA     DONE_617
00004BC6  0601 0037               7700mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BCA  4E71                    7701mmm DONE_617: NOP
00004BCC                          7702mmm         ENDM
00004BCC  4E4F                    7703mm         TRAP    #15         ; EXECUTE OUTPUT
00004BCE                          7704mm         
00004BCE  3212                    7705mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD0  E949                    7706mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004BD2  E049                    7707mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD4  E849                    7708mm         LSR.W   #4, D1      
00004BD6                          7709mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD6  0C01 0009               7710mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BDA  6E00 000A               7711mmm         BGT     ALPHA_618
00004BDE  0601 0030               7712mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE2  6000 0006               7713mmm         BRA     DONE_618
00004BE6  0601 0037               7714mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BEA  4E71                    7715mmm DONE_618: NOP
00004BEC                          7716mmm         ENDM
00004BEC  4E4F                    7717mm         TRAP    #15         ; EXECUTE OUTPUT
00004BEE                          7718mm         
00004BEE  3212                    7719mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF0  E149                    7720mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BF2  E049                    7721mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF4  E849                    7722mm         LSR.W   #4, D1      
00004BF6                          7723mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF6  0C01 0009               7724mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BFA  6E00 000A               7725mmm         BGT     ALPHA_619
00004BFE  0601 0030               7726mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C02  6000 0006               7727mmm         BRA     DONE_619
00004C06  0601 0037               7728mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C0A  4E71                    7729mmm DONE_619: NOP
00004C0C                          7730mmm         ENDM
00004C0C  4E4F                    7731mm         TRAP    #15         ; EXECUTE OUTPUT
00004C0E                          7732mm         
00004C0E  3212                    7733mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C10  E149                    7734mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C12  E949                    7735mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C14  E049                    7736mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C16  E849                    7737mm         LSR.W   #4, D1      
00004C18                          7738mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C18  0C01 0009               7739mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1C  6E00 000A               7740mmm         BGT     ALPHA_620
00004C20  0601 0030               7741mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C24  6000 0006               7742mmm         BRA     DONE_620
00004C28  0601 0037               7743mmm ALPHA_620: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2C  4E71                    7744mmm DONE_620: NOP
00004C2E                          7745mmm         ENDM
00004C2E  4E4F                    7746mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C30                          7747mm         ENDM 
00004C30  3605                    7748m         MOVE.W  D5, D3
00004C32                          7749m 
00004C32                          7750m COMPLETE_558:  ; OPCODE HAS BEEN VERIFIED
00004C32                          7751m         ENDM
00004C32                          7752m         printComma
00004C32  43F8 00C9               7753m         LEA     OCOMMA, A1     
00004C36  103C 000E               7754m         MOVE.B  #14,D0          
00004C3A  4E4F                    7755m         TRAP    #15
00004C3C                          7756m         ENDM
00004C3C                          7757m         printAnDest     (A2)
00004C3C  3212                    7758m         MOVE.W  (A2), D1
00004C3E  E949                    7759m         LSL     #$04, D1
00004C40  E049                    7760m         LSR     #$08, D1
00004C42  EA49                    7761m         LSR     #$05, D1
00004C44  43F8 00C3               7762m         LEA     OAN, A1     
00004C48  103C 000E               7763m         MOVE.B  #14,D0          
00004C4C  4E4F                    7764m         TRAP    #15
00004C4E  103C 0003               7765m         MOVE.B  #3,D0          
00004C52  4E4F                    7766m         TRAP    #15
00004C54                          7767m         ENDM
00004C54  4E75                    7768          RTS                 ; Return from decodeLEA subroutine
00004C56                          7769  
00004C56                          7770  
00004C56                          7771  ; ------------------------------------------------------------
00004C56                          7772  ; 9. "decodeAND" subroutine
00004C56                          7773  ; AUTHOR
00004C56                          7774  ;
00004C56                          7775  ; TODO: DESCRIPTION
00004C56                          7776  ; ------------------------------------------------------------
00004C56                          7777  decodeAND:
00004C56                          7778m         verifyOpcode    pAND, (A2)
00004C56  43F8 015C               7779m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004C5A  3612                    7780m         MOVE.W  (A2), D3      ; INPUT VALUE
00004C5C  123C 000F               7781m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004C60                          7782m         
00004C60                          7783m LOOP_623: 
00004C60  0C11 0030               7784m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004C64  6700 000E               7785m         BEQ     CHECKFOR0_623
00004C68  0C11 0031               7786m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004C6C  6700 0010               7787m         BEQ     CHECKFOR1_623
00004C70  6000 0012               7788m         BRA     NEXT_623      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004C74                          7789m         
00004C74                          7790m CHECKFOR0_623: 
00004C74  0303                    7791m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004C76  6600 1E5E               7792m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004C7A  6000 0008               7793m         BRA     NEXT_623
00004C7E                          7794m 
00004C7E                          7795m CHECKFOR1_623:
00004C7E  0303                    7796m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004C80  6700 1E54               7797m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004C84                          7798m 
00004C84                          7799m NEXT_623: 
00004C84  B23C 0000               7800m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004C88  6700 0008               7801m         BEQ     COMPLETE_623  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004C8C  5301                    7802m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004C8E  1819                    7803m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004C90  60CE                    7804m         BRA     LOOP_623      ; BEGIN LOOP AGAIN
00004C92                          7805m 
00004C92                          7806m COMPLETE_623:  ; OPCODE HAS BEEN VERIFIED
00004C92                          7807m         ENDM
00004C92  43F8 0085               7808          LEA     oAND, A1     
00004C96  103C 000E               7809          MOVE.B  #14,D0          
00004C9A  4E4F                    7810          TRAP    #15
00004C9C                          7811m         printOpMode     (A2)
00004C9C  3612                    7812m         MOVE.W  (A2), D3      
00004C9E  123C 0008               7813m         MOVE.B  #8, D1    
00004CA2  4246                    7814m         CLR     D6
00004CA4                          7815m CHECKFORDESTDN_624: 
00004CA4  0303                    7816m         BTST    D1, D3      
00004CA6  6600 0048               7817m         BNE     CHECKFORSRCDN_624
00004CAA  4EB9 00004D7A           7818m         JSR     NEXT_624
00004CB0  1C3C 0001               7819m         MOVE.B  #$1, D6
00004CB4  0303                    7820m         BTST    D1, D3      
00004CB6  6700 0010               7821m         BEQ     DESTDNW_624
00004CBA                          7822m DESTDNL_624:        
00004CBA  43F8 00BD               7823m         LEA     OLSIZE, A1     
00004CBE  103C 000E               7824m         MOVE.B  #14,D0          
00004CC2  4E4F                    7825m         TRAP    #15
00004CC4  6000 00B8               7826m         BRA     COMPLETE_624 
00004CC8                          7827m DESTDNW_624: 
00004CC8  4EB9 00004D7A           7828m         JSR     NEXT_624
00004CCE  0303                    7829m         BTST    D1, D3      
00004CD0  6700 0010               7830m         BEQ     DESTDNB_624
00004CD4  43F8 00B9               7831m         LEA     OWSIZE, A1     
00004CD8  103C 000E               7832m         MOVE.B  #14,D0          
00004CDC  4E4F                    7833m         TRAP    #15
00004CDE  6000 009E               7834m         BRA     COMPLETE_624 
00004CE2                          7835m DESTDNB_624: 
00004CE2  43F8 00B5               7836m         LEA     OBSIZE, A1     
00004CE6  103C 000E               7837m         MOVE.B  #14,D0          
00004CEA  4E4F                    7838m         TRAP    #15
00004CEC  6000 0090               7839m         BRA     COMPLETE_624 
00004CF0                          7840m CHECKFORSRCDN_624: 
00004CF0  4EB9 00004D7A           7841m         JSR     NEXT_624
00004CF6  0303                    7842m         BTST    D1, D3      
00004CF8  6700 0028               7843m         BEQ     SRCDNW_624
00004CFC                          7844m SRCDNL_624:        
00004CFC  43F8 00BD               7845m         LEA     OLSIZE, A1     
00004D00  103C 000E               7846m         MOVE.B  #14,D0          
00004D04  4E4F                    7847m         TRAP    #15
00004D06                          7848mm         PRINTDNDEST D3
00004D06  3203                    7849mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D08  E949                    7850mm         LSL     #$04, D1
00004D0A  E049                    7851mm         LSR     #$08, D1
00004D0C  EA49                    7852mm         LSR     #$05, D1
00004D0E  43F8 00C1               7853mm         LEA     ODN, A1     
00004D12  103C 000E               7854mm         MOVE.B  #14,D0          
00004D16  4E4F                    7855mm         TRAP    #15
00004D18  103C 0003               7856mm         MOVE.B  #3,D0          
00004D1C  4E4F                    7857mm         TRAP    #15
00004D1E                          7858mm         ENDM
00004D1E  6000 005E               7859m         BRA     COMPLETE_624 
00004D22                          7860m SRCDNW_624:
00004D22  4EB9 00004D7A           7861m         JSR     NEXT_624
00004D28  0303                    7862m         BTST    D1, D3     
00004D2A  6700 0028               7863m         BEQ     SRCDNB_624
00004D2E  43F8 00B9               7864m         LEA     OWSIZE, A1     
00004D32  103C 000E               7865m         MOVE.B  #14,D0          
00004D36  4E4F                    7866m         TRAP    #15
00004D38                          7867mm         PRINTDNDEST D3
00004D38  3203                    7868mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D3A  E949                    7869mm         LSL     #$04, D1
00004D3C  E049                    7870mm         LSR     #$08, D1
00004D3E  EA49                    7871mm         LSR     #$05, D1
00004D40  43F8 00C1               7872mm         LEA     ODN, A1     
00004D44  103C 000E               7873mm         MOVE.B  #14,D0          
00004D48  4E4F                    7874mm         TRAP    #15
00004D4A  103C 0003               7875mm         MOVE.B  #3,D0          
00004D4E  4E4F                    7876mm         TRAP    #15
00004D50                          7877mm         ENDM
00004D50  6000 002C               7878m         BRA     COMPLETE_624 
00004D54                          7879m SRCDNB_624: 
00004D54  43F8 00B5               7880m         LEA     OBSIZE, A1     
00004D58  103C 000E               7881m         MOVE.B  #14,D0          
00004D5C  4E4F                    7882m         TRAP    #15
00004D5E                          7883mm         PRINTDNDEST D3
00004D5E  3203                    7884mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D60  E949                    7885mm         LSL     #$04, D1
00004D62  E049                    7886mm         LSR     #$08, D1
00004D64  EA49                    7887mm         LSR     #$05, D1
00004D66  43F8 00C1               7888mm         LEA     ODN, A1     
00004D6A  103C 000E               7889mm         MOVE.B  #14,D0          
00004D6E  4E4F                    7890mm         TRAP    #15
00004D70  103C 0003               7891mm         MOVE.B  #3,D0          
00004D74  4E4F                    7892mm         TRAP    #15
00004D76                          7893mm         ENDM
00004D76  6000 0006               7894m         BRA     COMPLETE_624 
00004D7A                          7895m 
00004D7A                          7896m NEXT_624:
00004D7A  5301                    7897m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004D7C  4E75                    7898m         RTS                
00004D7E                          7899m 
00004D7E                          7900m COMPLETE_624:  ; OPCODE HAS BEEN VERIFIED
00004D7E                          7901m         ENDM
00004D7E  BC3C 0001               7902          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004D82  6700 05E0               7903          BEQ     decodeAndDestOp
00004D86                          7904m         printComma
00004D86  43F8 00C9               7905m         LEA     OCOMMA, A1     
00004D8A  103C 000E               7906m         MOVE.B  #14,D0          
00004D8E  4E4F                    7907m         TRAP    #15
00004D90                          7908m         ENDM
00004D90                          7909m         prepareAdrMode  #$1, (A2)
00004D90  3C3C 0001               7910m         MOVE.W  #$1, D6      ; INPUT VALUE
00004D94  3212                    7911m         MOVE.W  (A2), D1
00004D96  BC3C 0001               7912m         CMP.B   #$01, D6
00004D9A  6700 000C               7913m         BEQ     ADRSOURCE_629    
00004D9E                          7914m ADRDEST_629:
00004D9E  EF49                    7915m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004DA0  E049                    7916m         LSR     #$08, D1
00004DA2  EA49                    7917m         LSR     #$05, D1
00004DA4  6000 000A               7918m         BRA     COMPLETE_629 
00004DA8                          7919m ADRSOURCE_629:                
00004DA8  E149                    7920m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004DAA  E549                    7921m         LSL     #$02, D1
00004DAC  E049                    7922m         LSR     #$08, D1
00004DAE  EA49                    7923m         LSR     #$05, D1
00004DB0                          7924m COMPLETE_629:  ; OPCODE HAS BEEN VERIFIED
00004DB0                          7925m         ENDM        
00004DB0                          7926m         decodeAdrMode   (A2), D1
00004DB0  3612                    7927m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004DB2  3201                    7928m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004DB4                          7929m 
00004DB4  B23C 0001               7930m         CMP.B   #$01, D1
00004DB8  6700 0066               7931m         BEQ     ADRREGDIRECT_630    
00004DBC  B23C 0002               7932m         CMP.B   #$02, D1
00004DC0  6700 00A0               7933m         BEQ     ADRREGINDIRECT_630  
00004DC4  B23C 0003               7934m         CMP.B   #$03, D1
00004DC8  6700 0102               7935m         BEQ     ADRREGPOSTINC_630  
00004DCC  B23C 0004               7936m         CMP.B   #$04, D1
00004DD0  6700 0178               7937m         BEQ     ADRREGPREDEC_630
00004DD4  B23C 0007               7938m         CMP.B   #$07, D1
00004DD8  6700 01EE               7939m         BEQ     ADRABSOLUTE_630    
00004DDC                          7940m         
00004DDC                          7941m DATAREGDIRECT_630: 
00004DDC  BC3C 0001               7942m         CMP.B   #$01, D6
00004DE0  6700 001E               7943m         BEQ     DATAREGDIRECTSRC_630   
00004DE4                          7944m DATAREGDIRECTDEST_630: 
00004DE4                          7945mm         PRINTDNDEST D3 
00004DE4  3203                    7946mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004DE6  E949                    7947mm         LSL     #$04, D1
00004DE8  E049                    7948mm         LSR     #$08, D1
00004DEA  EA49                    7949mm         LSR     #$05, D1
00004DEC  43F8 00C1               7950mm         LEA     ODN, A1     
00004DF0  103C 000E               7951mm         MOVE.B  #14,D0          
00004DF4  4E4F                    7952mm         TRAP    #15
00004DF6  103C 0003               7953mm         MOVE.B  #3,D0          
00004DFA  4E4F                    7954mm         TRAP    #15
00004DFC                          7955mm         ENDM
00004DFC  6000 0562               7956m         BRA     COMPLETE_630 
00004E00                          7957m DATAREGDIRECTSRC_630: 
00004E00                          7958mm         PRINTDNSRC D3 
00004E00  4281                    7959mm         CLR.L   D1
00004E02  3203                    7960mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E04  E149                    7961mm         LSL     #$08, D1
00004E06  EB49                    7962mm         LSL     #$05, D1
00004E08  E049                    7963mm         LSR     #$08, D1
00004E0A  EA49                    7964mm         LSR     #$05, D1
00004E0C  43F8 00C1               7965mm         LEA     ODN, A1     
00004E10  103C 000E               7966mm         MOVE.B  #14,D0          
00004E14  4E4F                    7967mm         TRAP    #15
00004E16  103C 0003               7968mm         MOVE.B  #3,D0          
00004E1A  4E4F                    7969mm         TRAP    #15
00004E1C                          7970mm         ENDM
00004E1C  6000 0542               7971m         BRA     COMPLETE_630   
00004E20                          7972m         
00004E20                          7973m ADRREGDIRECT_630: 
00004E20  BC3C 0001               7974m         CMP.B   #$01, D6
00004E24  6700 001E               7975m         BEQ     ADRREGDIRECTSRC_630   
00004E28                          7976m ADRREGDIRECTDEST_630:
00004E28                          7977mm         PRINTANDEST D3
00004E28  3203                    7978mm         MOVE.W  D3, D1
00004E2A  E949                    7979mm         LSL     #$04, D1
00004E2C  E049                    7980mm         LSR     #$08, D1
00004E2E  EA49                    7981mm         LSR     #$05, D1
00004E30  43F8 00C3               7982mm         LEA     OAN, A1     
00004E34  103C 000E               7983mm         MOVE.B  #14,D0          
00004E38  4E4F                    7984mm         TRAP    #15
00004E3A  103C 0003               7985mm         MOVE.B  #3,D0          
00004E3E  4E4F                    7986mm         TRAP    #15
00004E40                          7987mm         ENDM
00004E40  6000 051E               7988m         BRA     COMPLETE_630   
00004E44                          7989m ADRREGDIRECTSRC_630:
00004E44                          7990mm         PRINTANSRC D3
00004E44  3203                    7991mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E46  E149                    7992mm         LSL     #$08, D1
00004E48  EB49                    7993mm         LSL     #$05, D1
00004E4A  E049                    7994mm         LSR     #$08, D1
00004E4C  EA49                    7995mm         LSR     #$05, D1
00004E4E  43F8 00C3               7996mm         LEA     OAN, A1     
00004E52  103C 000E               7997mm         MOVE.B  #14,D0          
00004E56  4E4F                    7998mm         TRAP    #15
00004E58  103C 0003               7999mm         MOVE.B  #3,D0          
00004E5C  4E4F                    8000mm         TRAP    #15
00004E5E                          8001mm         ENDM
00004E5E  6000 0500               8002m         BRA     COMPLETE_630   
00004E62                          8003m        
00004E62                          8004m ADRREGINDIRECT_630:   
00004E62  BC3C 0001               8005m         CMP.B   #$01, D6
00004E66  6700 0032               8006m         BEQ     ADRREGINDIRECTSRC_630   
00004E6A                          8007m ADRREGINDIRECTDEST_630:
00004E6A                          8008mm         PRINTLB
00004E6A  43F8 00C5               8009mm         LEA     OLB, A1     
00004E6E  103C 000E               8010mm         MOVE.B  #14,D0          
00004E72  4E4F                    8011mm         TRAP    #15
00004E74                          8012mm         ENDM
00004E74                          8013mm         PRINTANDEST D3  
00004E74  3203                    8014mm         MOVE.W  D3, D1
00004E76  E949                    8015mm         LSL     #$04, D1
00004E78  E049                    8016mm         LSR     #$08, D1
00004E7A  EA49                    8017mm         LSR     #$05, D1
00004E7C  43F8 00C3               8018mm         LEA     OAN, A1     
00004E80  103C 000E               8019mm         MOVE.B  #14,D0          
00004E84  4E4F                    8020mm         TRAP    #15
00004E86  103C 0003               8021mm         MOVE.B  #3,D0          
00004E8A  4E4F                    8022mm         TRAP    #15
00004E8C                          8023mm         ENDM
00004E8C                          8024mm         PRINTRB
00004E8C  43F8 00C7               8025mm         LEA     ORB, A1     
00004E90  103C 000E               8026mm         MOVE.B  #14,D0          
00004E94  4E4F                    8027mm         TRAP    #15
00004E96                          8028mm         ENDM
00004E96  6000 04C8               8029m         BRA     COMPLETE_630     
00004E9A                          8030m ADRREGINDIRECTSRC_630:   
00004E9A                          8031mm         PRINTLB
00004E9A  43F8 00C5               8032mm         LEA     OLB, A1     
00004E9E  103C 000E               8033mm         MOVE.B  #14,D0          
00004EA2  4E4F                    8034mm         TRAP    #15
00004EA4                          8035mm         ENDM
00004EA4                          8036mm         PRINTANSRC D3  
00004EA4  3203                    8037mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004EA6  E149                    8038mm         LSL     #$08, D1
00004EA8  EB49                    8039mm         LSL     #$05, D1
00004EAA  E049                    8040mm         LSR     #$08, D1
00004EAC  EA49                    8041mm         LSR     #$05, D1
00004EAE  43F8 00C3               8042mm         LEA     OAN, A1     
00004EB2  103C 000E               8043mm         MOVE.B  #14,D0          
00004EB6  4E4F                    8044mm         TRAP    #15
00004EB8  103C 0003               8045mm         MOVE.B  #3,D0          
00004EBC  4E4F                    8046mm         TRAP    #15
00004EBE                          8047mm         ENDM
00004EBE                          8048mm         PRINTRB
00004EBE  43F8 00C7               8049mm         LEA     ORB, A1     
00004EC2  103C 000E               8050mm         MOVE.B  #14,D0          
00004EC6  4E4F                    8051mm         TRAP    #15
00004EC8                          8052mm         ENDM
00004EC8  6000 0496               8053m         BRA     COMPLETE_630   
00004ECC                          8054m         
00004ECC                          8055m ADRREGPOSTINC_630:   
00004ECC  BC3C 0001               8056m         CMP.B   #$01, D6
00004ED0  6700 003C               8057m         BEQ     ADRREGPOSTINCSRC_630   
00004ED4                          8058m ADRREGPOSTINCDEST_630: 
00004ED4                          8059mm         PRINTLB
00004ED4  43F8 00C5               8060mm         LEA     OLB, A1     
00004ED8  103C 000E               8061mm         MOVE.B  #14,D0          
00004EDC  4E4F                    8062mm         TRAP    #15
00004EDE                          8063mm         ENDM
00004EDE                          8064mm         PRINTANDEST D3  
00004EDE  3203                    8065mm         MOVE.W  D3, D1
00004EE0  E949                    8066mm         LSL     #$04, D1
00004EE2  E049                    8067mm         LSR     #$08, D1
00004EE4  EA49                    8068mm         LSR     #$05, D1
00004EE6  43F8 00C3               8069mm         LEA     OAN, A1     
00004EEA  103C 000E               8070mm         MOVE.B  #14,D0          
00004EEE  4E4F                    8071mm         TRAP    #15
00004EF0  103C 0003               8072mm         MOVE.B  #3,D0          
00004EF4  4E4F                    8073mm         TRAP    #15
00004EF6                          8074mm         ENDM
00004EF6                          8075mm         PRINTRB
00004EF6  43F8 00C7               8076mm         LEA     ORB, A1     
00004EFA  103C 000E               8077mm         MOVE.B  #14,D0          
00004EFE  4E4F                    8078mm         TRAP    #15
00004F00                          8079mm         ENDM
00004F00                          8080mm         PRINTPI
00004F00  43F8 00CE               8081mm         LEA     OPSTINC, A1     
00004F04  103C 000E               8082mm         MOVE.B  #14,D0          
00004F08  4E4F                    8083mm         TRAP    #15
00004F0A                          8084mm         ENDM
00004F0A  6000 0454               8085m         BRA     COMPLETE_630  
00004F0E                          8086m ADRREGPOSTINCSRC_630:           
00004F0E                          8087mm         PRINTLB
00004F0E  43F8 00C5               8088mm         LEA     OLB, A1     
00004F12  103C 000E               8089mm         MOVE.B  #14,D0          
00004F16  4E4F                    8090mm         TRAP    #15
00004F18                          8091mm         ENDM
00004F18                          8092mm         PRINTANSRC D3  
00004F18  3203                    8093mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F1A  E149                    8094mm         LSL     #$08, D1
00004F1C  EB49                    8095mm         LSL     #$05, D1
00004F1E  E049                    8096mm         LSR     #$08, D1
00004F20  EA49                    8097mm         LSR     #$05, D1
00004F22  43F8 00C3               8098mm         LEA     OAN, A1     
00004F26  103C 000E               8099mm         MOVE.B  #14,D0          
00004F2A  4E4F                    8100mm         TRAP    #15
00004F2C  103C 0003               8101mm         MOVE.B  #3,D0          
00004F30  4E4F                    8102mm         TRAP    #15
00004F32                          8103mm         ENDM
00004F32                          8104mm         PRINTRB
00004F32  43F8 00C7               8105mm         LEA     ORB, A1     
00004F36  103C 000E               8106mm         MOVE.B  #14,D0          
00004F3A  4E4F                    8107mm         TRAP    #15
00004F3C                          8108mm         ENDM
00004F3C                          8109mm         PRINTPI
00004F3C  43F8 00CE               8110mm         LEA     OPSTINC, A1     
00004F40  103C 000E               8111mm         MOVE.B  #14,D0          
00004F44  4E4F                    8112mm         TRAP    #15
00004F46                          8113mm         ENDM
00004F46  6000 0418               8114m         BRA     COMPLETE_630  
00004F4A                          8115m ADRREGPREDEC_630: 
00004F4A  BC3C 0001               8116m         CMP.B   #$01, D6
00004F4E  6700 003C               8117m         BEQ     ADRREGPREDECSRC_630   
00004F52                          8118m ADRREGPREDECDEST_630:
00004F52                          8119mm         PRINTPD  
00004F52  43F8 00CC               8120mm         LEA     OPREDEC, A1     
00004F56  103C 000E               8121mm         MOVE.B  #14,D0          
00004F5A  4E4F                    8122mm         TRAP    #15
00004F5C                          8123mm         ENDM
00004F5C                          8124mm         PRINTLB
00004F5C  43F8 00C5               8125mm         LEA     OLB, A1     
00004F60  103C 000E               8126mm         MOVE.B  #14,D0          
00004F64  4E4F                    8127mm         TRAP    #15
00004F66                          8128mm         ENDM
00004F66                          8129mm         PRINTANDEST D3  
00004F66  3203                    8130mm         MOVE.W  D3, D1
00004F68  E949                    8131mm         LSL     #$04, D1
00004F6A  E049                    8132mm         LSR     #$08, D1
00004F6C  EA49                    8133mm         LSR     #$05, D1
00004F6E  43F8 00C3               8134mm         LEA     OAN, A1     
00004F72  103C 000E               8135mm         MOVE.B  #14,D0          
00004F76  4E4F                    8136mm         TRAP    #15
00004F78  103C 0003               8137mm         MOVE.B  #3,D0          
00004F7C  4E4F                    8138mm         TRAP    #15
00004F7E                          8139mm         ENDM
00004F7E                          8140mm         PRINTRB
00004F7E  43F8 00C7               8141mm         LEA     ORB, A1     
00004F82  103C 000E               8142mm         MOVE.B  #14,D0          
00004F86  4E4F                    8143mm         TRAP    #15
00004F88                          8144mm         ENDM
00004F88  6000 03D6               8145m         BRA     COMPLETE_630   
00004F8C                          8146m ADRREGPREDECSRC_630: 
00004F8C                          8147mm         PRINTPD  
00004F8C  43F8 00CC               8148mm         LEA     OPREDEC, A1     
00004F90  103C 000E               8149mm         MOVE.B  #14,D0          
00004F94  4E4F                    8150mm         TRAP    #15
00004F96                          8151mm         ENDM
00004F96                          8152mm         PRINTLB
00004F96  43F8 00C5               8153mm         LEA     OLB, A1     
00004F9A  103C 000E               8154mm         MOVE.B  #14,D0          
00004F9E  4E4F                    8155mm         TRAP    #15
00004FA0                          8156mm         ENDM
00004FA0                          8157mm         PRINTANSRC D3  
00004FA0  3203                    8158mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FA2  E149                    8159mm         LSL     #$08, D1
00004FA4  EB49                    8160mm         LSL     #$05, D1
00004FA6  E049                    8161mm         LSR     #$08, D1
00004FA8  EA49                    8162mm         LSR     #$05, D1
00004FAA  43F8 00C3               8163mm         LEA     OAN, A1     
00004FAE  103C 000E               8164mm         MOVE.B  #14,D0          
00004FB2  4E4F                    8165mm         TRAP    #15
00004FB4  103C 0003               8166mm         MOVE.B  #3,D0          
00004FB8  4E4F                    8167mm         TRAP    #15
00004FBA                          8168mm         ENDM
00004FBA                          8169mm         PRINTRB
00004FBA  43F8 00C7               8170mm         LEA     ORB, A1     
00004FBE  103C 000E               8171mm         MOVE.B  #14,D0          
00004FC2  4E4F                    8172mm         TRAP    #15
00004FC4                          8173mm         ENDM
00004FC4  6000 039A               8174m         BRA     COMPLETE_630
00004FC8                          8175m        
00004FC8                          8176m ADRABSOLUTE_630:
00004FC8  BC3C 0001               8177m         CMP.B   #$01, D6
00004FCC  6600 0018               8178m         BNE     ADRABSOLUTEDST_630 
00004FD0                          8179m         
00004FD0  3A03                    8180m         MOVE.W  D3, D5
00004FD2  0803 0002               8181m         BTST    #2, D3
00004FD6  6600 0024               8182m         BNE     ADRIMMEDIATE_630
00004FDA  0803 0000               8183m         BTST    #0, D3
00004FDE  6600 0270               8184m         BNE     ADRABSOLUTEL_630
00004FE2  6000 01DA               8185m         BRA     ADRABSOLUTEW_630
00004FE6                          8186m ADRABSOLUTEDST_630:
00004FE6  3A03                    8187m         MOVE.W  D3, D5
00004FE8  0803 000B               8188m         BTST    #$B, D3
00004FEC  6600 000E               8189m         BNE     ADRIMMEDIATE_630
00004FF0  0803 0009               8190m         BTST    #$09, D3
00004FF4  6600 025A               8191m         BNE     ADRABSOLUTEL_630
00004FF8  6000 01C4               8192m         BRA     ADRABSOLUTEW_630
00004FFC                          8193m ADRIMMEDIATE_630:
00004FFC  BE3C 0001               8194m         CMP.B   #1, D7
00005000  6700 009E               8195m         BEQ     ADRIMMEDIATEL_630
00005004                          8196m ADRIMMEDIATEW_630:
00005004  361A                    8197m         MOVE.W  (A2)+, D3
00005006                          8198mm         PRINTHASH
00005006  103C 0006               8199mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000500A  323C 0023               8200mm         MOVE.W  #35, D1     ; AN = SIGN
0000500E  4E4F                    8201mm         TRAP    #15         ; OUTPUT = SIGN
00005010                          8202mm         ENDM
00005010                          8203mm         PRINTSIGN
00005010  103C 0006               8204mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005014  323C 0024               8205mm         MOVE.W  #36, D1     ; AN = SIGN
00005018  4E4F                    8206mm         TRAP    #15         ; OUTPUT = SIGN
0000501A                          8207mm         ENDM
0000501A                          8208mm         ADROUT
0000501A  3212                    8209mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000501C  E049                    8210mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000501E  E849                    8211mm         LSR.W   #4, D1      
00005020                          8212mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005020  0C01 0009               8213mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005024  6E00 000A               8214mmm         BGT     ALPHA_660
00005028  0601 0030               8215mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000502C  6000 0006               8216mmm         BRA     DONE_660
00005030  0601 0037               8217mmm ALPHA_660: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005034  4E71                    8218mmm DONE_660: NOP
00005036                          8219mmm         ENDM
00005036  4E4F                    8220mm         TRAP    #15         ; EXECUTE OUTPUT
00005038                          8221mm         
00005038  3212                    8222mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000503A  E949                    8223mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000503C  E049                    8224mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000503E  E849                    8225mm         LSR.W   #4, D1      
00005040                          8226mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005040  0C01 0009               8227mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005044  6E00 000A               8228mmm         BGT     ALPHA_661
00005048  0601 0030               8229mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000504C  6000 0006               8230mmm         BRA     DONE_661
00005050  0601 0037               8231mmm ALPHA_661: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005054  4E71                    8232mmm DONE_661: NOP
00005056                          8233mmm         ENDM
00005056  4E4F                    8234mm         TRAP    #15         ; EXECUTE OUTPUT
00005058                          8235mm         
00005058  3212                    8236mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000505A  E149                    8237mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000505C  E049                    8238mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000505E  E849                    8239mm         LSR.W   #4, D1      
00005060                          8240mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005060  0C01 0009               8241mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005064  6E00 000A               8242mmm         BGT     ALPHA_662
00005068  0601 0030               8243mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000506C  6000 0006               8244mmm         BRA     DONE_662
00005070  0601 0037               8245mmm ALPHA_662: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005074  4E71                    8246mmm DONE_662: NOP
00005076                          8247mmm         ENDM
00005076  4E4F                    8248mm         TRAP    #15         ; EXECUTE OUTPUT
00005078                          8249mm         
00005078  3212                    8250mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000507A  E149                    8251mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000507C  E949                    8252mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000507E  E049                    8253mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005080  E849                    8254mm         LSR.W   #4, D1      
00005082                          8255mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005082  0C01 0009               8256mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005086  6E00 000A               8257mmm         BGT     ALPHA_663
0000508A  0601 0030               8258mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000508E  6000 0006               8259mmm         BRA     DONE_663
00005092  0601 0037               8260mmm ALPHA_663: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005096  4E71                    8261mmm DONE_663: NOP
00005098                          8262mmm         ENDM
00005098  4E4F                    8263mm         TRAP    #15         ; EXECUTE OUTPUT       
0000509A                          8264mm         ENDM 
0000509A  3605                    8265m         MOVE.W  D5, D3
0000509C  6000 02C2               8266m         BRA     COMPLETE_630
000050A0                          8267m ADRIMMEDIATEL_630:
000050A0  361A                    8268m         MOVE.W  (A2)+, D3
000050A2                          8269mm         PRINTHASH
000050A2  103C 0006               8270mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050A6  323C 0023               8271mm         MOVE.W  #35, D1     ; AN = SIGN
000050AA  4E4F                    8272mm         TRAP    #15         ; OUTPUT = SIGN
000050AC                          8273mm         ENDM
000050AC                          8274mm         PRINTSIGN
000050AC  103C 0006               8275mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050B0  323C 0024               8276mm         MOVE.W  #36, D1     ; AN = SIGN
000050B4  4E4F                    8277mm         TRAP    #15         ; OUTPUT = SIGN
000050B6                          8278mm         ENDM
000050B6                          8279mm         ADROUT 
000050B6  3212                    8280mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050B8  E049                    8281mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050BA  E849                    8282mm         LSR.W   #4, D1      
000050BC                          8283mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050BC  0C01 0009               8284mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050C0  6E00 000A               8285mmm         BGT     ALPHA_667
000050C4  0601 0030               8286mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050C8  6000 0006               8287mmm         BRA     DONE_667
000050CC  0601 0037               8288mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050D0  4E71                    8289mmm DONE_667: NOP
000050D2                          8290mmm         ENDM
000050D2  4E4F                    8291mm         TRAP    #15         ; EXECUTE OUTPUT
000050D4                          8292mm         
000050D4  3212                    8293mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050D6  E949                    8294mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000050D8  E049                    8295mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050DA  E849                    8296mm         LSR.W   #4, D1      
000050DC                          8297mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050DC  0C01 0009               8298mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050E0  6E00 000A               8299mmm         BGT     ALPHA_668
000050E4  0601 0030               8300mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050E8  6000 0006               8301mmm         BRA     DONE_668
000050EC  0601 0037               8302mmm ALPHA_668: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050F0  4E71                    8303mmm DONE_668: NOP
000050F2                          8304mmm         ENDM
000050F2  4E4F                    8305mm         TRAP    #15         ; EXECUTE OUTPUT
000050F4                          8306mm         
000050F4  3212                    8307mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050F6  E149                    8308mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050F8  E049                    8309mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050FA  E849                    8310mm         LSR.W   #4, D1      
000050FC                          8311mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050FC  0C01 0009               8312mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005100  6E00 000A               8313mmm         BGT     ALPHA_669
00005104  0601 0030               8314mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005108  6000 0006               8315mmm         BRA     DONE_669
0000510C  0601 0037               8316mmm ALPHA_669: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005110  4E71                    8317mmm DONE_669: NOP
00005112                          8318mmm         ENDM
00005112  4E4F                    8319mm         TRAP    #15         ; EXECUTE OUTPUT
00005114                          8320mm         
00005114  3212                    8321mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005116  E149                    8322mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005118  E949                    8323mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000511A  E049                    8324mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000511C  E849                    8325mm         LSR.W   #4, D1      
0000511E                          8326mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000511E  0C01 0009               8327mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005122  6E00 000A               8328mmm         BGT     ALPHA_670
00005126  0601 0030               8329mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000512A  6000 0006               8330mmm         BRA     DONE_670
0000512E  0601 0037               8331mmm ALPHA_670: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005132  4E71                    8332mmm DONE_670: NOP
00005134                          8333mmm         ENDM
00005134  4E4F                    8334mm         TRAP    #15         ; EXECUTE OUTPUT       
00005136                          8335mm         ENDM 
00005136  361A                    8336m         MOVE.W  (A2)+, D3
00005138                          8337mm         ADROUT
00005138  3212                    8338mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000513A  E049                    8339mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000513C  E849                    8340mm         LSR.W   #4, D1      
0000513E                          8341mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000513E  0C01 0009               8342mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005142  6E00 000A               8343mmm         BGT     ALPHA_672
00005146  0601 0030               8344mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000514A  6000 0006               8345mmm         BRA     DONE_672
0000514E  0601 0037               8346mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005152  4E71                    8347mmm DONE_672: NOP
00005154                          8348mmm         ENDM
00005154  4E4F                    8349mm         TRAP    #15         ; EXECUTE OUTPUT
00005156                          8350mm         
00005156  3212                    8351mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005158  E949                    8352mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000515A  E049                    8353mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000515C  E849                    8354mm         LSR.W   #4, D1      
0000515E                          8355mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000515E  0C01 0009               8356mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005162  6E00 000A               8357mmm         BGT     ALPHA_673
00005166  0601 0030               8358mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000516A  6000 0006               8359mmm         BRA     DONE_673
0000516E  0601 0037               8360mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005172  4E71                    8361mmm DONE_673: NOP
00005174                          8362mmm         ENDM
00005174  4E4F                    8363mm         TRAP    #15         ; EXECUTE OUTPUT
00005176                          8364mm         
00005176  3212                    8365mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005178  E149                    8366mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000517A  E049                    8367mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000517C  E849                    8368mm         LSR.W   #4, D1      
0000517E                          8369mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000517E  0C01 0009               8370mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005182  6E00 000A               8371mmm         BGT     ALPHA_674
00005186  0601 0030               8372mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000518A  6000 0006               8373mmm         BRA     DONE_674
0000518E  0601 0037               8374mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005192  4E71                    8375mmm DONE_674: NOP
00005194                          8376mmm         ENDM
00005194  4E4F                    8377mm         TRAP    #15         ; EXECUTE OUTPUT
00005196                          8378mm         
00005196  3212                    8379mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005198  E149                    8380mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000519A  E949                    8381mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000519C  E049                    8382mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000519E  E849                    8383mm         LSR.W   #4, D1      
000051A0                          8384mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051A0  0C01 0009               8385mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051A4  6E00 000A               8386mmm         BGT     ALPHA_675
000051A8  0601 0030               8387mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051AC  6000 0006               8388mmm         BRA     DONE_675
000051B0  0601 0037               8389mmm ALPHA_675: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051B4  4E71                    8390mmm DONE_675: NOP
000051B6                          8391mmm         ENDM
000051B6  4E4F                    8392mm         TRAP    #15         ; EXECUTE OUTPUT       
000051B8                          8393mm         ENDM 
000051B8  3605                    8394m         MOVE.W  D5, D3
000051BA  6000 01A4               8395m         BRA     COMPLETE_630 
000051BE                          8396m ADRABSOLUTEW_630:     
000051BE  361A                    8397m         MOVE.W  (A2)+, D3
000051C0                          8398mm         PRINTSIGN
000051C0  103C 0006               8399mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000051C4  323C 0024               8400mm         MOVE.W  #36, D1     ; AN = SIGN
000051C8  4E4F                    8401mm         TRAP    #15         ; OUTPUT = SIGN
000051CA                          8402mm         ENDM
000051CA                          8403mm         ADROUT
000051CA  3212                    8404mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051CC  E049                    8405mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051CE  E849                    8406mm         LSR.W   #4, D1      
000051D0                          8407mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051D0  0C01 0009               8408mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051D4  6E00 000A               8409mmm         BGT     ALPHA_678
000051D8  0601 0030               8410mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051DC  6000 0006               8411mmm         BRA     DONE_678
000051E0  0601 0037               8412mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051E4  4E71                    8413mmm DONE_678: NOP
000051E6                          8414mmm         ENDM
000051E6  4E4F                    8415mm         TRAP    #15         ; EXECUTE OUTPUT
000051E8                          8416mm         
000051E8  3212                    8417mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051EA  E949                    8418mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000051EC  E049                    8419mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051EE  E849                    8420mm         LSR.W   #4, D1      
000051F0                          8421mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051F0  0C01 0009               8422mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F4  6E00 000A               8423mmm         BGT     ALPHA_679
000051F8  0601 0030               8424mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051FC  6000 0006               8425mmm         BRA     DONE_679
00005200  0601 0037               8426mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005204  4E71                    8427mmm DONE_679: NOP
00005206                          8428mmm         ENDM
00005206  4E4F                    8429mm         TRAP    #15         ; EXECUTE OUTPUT
00005208                          8430mm         
00005208  3212                    8431mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000520A  E149                    8432mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000520C  E049                    8433mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000520E  E849                    8434mm         LSR.W   #4, D1      
00005210                          8435mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005210  0C01 0009               8436mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005214  6E00 000A               8437mmm         BGT     ALPHA_680
00005218  0601 0030               8438mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000521C  6000 0006               8439mmm         BRA     DONE_680
00005220  0601 0037               8440mmm ALPHA_680: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005224  4E71                    8441mmm DONE_680: NOP
00005226                          8442mmm         ENDM
00005226  4E4F                    8443mm         TRAP    #15         ; EXECUTE OUTPUT
00005228                          8444mm         
00005228  3212                    8445mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000522A  E149                    8446mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000522C  E949                    8447mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000522E  E049                    8448mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005230  E849                    8449mm         LSR.W   #4, D1      
00005232                          8450mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005232  0C01 0009               8451mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005236  6E00 000A               8452mmm         BGT     ALPHA_681
0000523A  0601 0030               8453mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000523E  6000 0006               8454mmm         BRA     DONE_681
00005242  0601 0037               8455mmm ALPHA_681: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005246  4E71                    8456mmm DONE_681: NOP
00005248                          8457mmm         ENDM
00005248  4E4F                    8458mm         TRAP    #15         ; EXECUTE OUTPUT       
0000524A                          8459mm         ENDM 
0000524A  3605                    8460m         MOVE.W  D5, D3
0000524C  6000 0112               8461m         BRA     COMPLETE_630  
00005250                          8462m ADRABSOLUTEL_630:  
00005250  361A                    8463m         MOVE.W  (A2)+, D3
00005252                          8464mm         PRINTSIGN
00005252  103C 0006               8465mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005256  323C 0024               8466mm         MOVE.W  #36, D1     ; AN = SIGN
0000525A  4E4F                    8467mm         TRAP    #15         ; OUTPUT = SIGN
0000525C                          8468mm         ENDM
0000525C                          8469mm         ADROUT 
0000525C  3212                    8470mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000525E  E049                    8471mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005260  E849                    8472mm         LSR.W   #4, D1      
00005262                          8473mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005262  0C01 0009               8474mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005266  6E00 000A               8475mmm         BGT     ALPHA_684
0000526A  0601 0030               8476mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000526E  6000 0006               8477mmm         BRA     DONE_684
00005272  0601 0037               8478mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005276  4E71                    8479mmm DONE_684: NOP
00005278                          8480mmm         ENDM
00005278  4E4F                    8481mm         TRAP    #15         ; EXECUTE OUTPUT
0000527A                          8482mm         
0000527A  3212                    8483mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000527C  E949                    8484mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000527E  E049                    8485mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005280  E849                    8486mm         LSR.W   #4, D1      
00005282                          8487mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005282  0C01 0009               8488mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005286  6E00 000A               8489mmm         BGT     ALPHA_685
0000528A  0601 0030               8490mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000528E  6000 0006               8491mmm         BRA     DONE_685
00005292  0601 0037               8492mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005296  4E71                    8493mmm DONE_685: NOP
00005298                          8494mmm         ENDM
00005298  4E4F                    8495mm         TRAP    #15         ; EXECUTE OUTPUT
0000529A                          8496mm         
0000529A  3212                    8497mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000529C  E149                    8498mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000529E  E049                    8499mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052A0  E849                    8500mm         LSR.W   #4, D1      
000052A2                          8501mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052A2  0C01 0009               8502mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052A6  6E00 000A               8503mmm         BGT     ALPHA_686
000052AA  0601 0030               8504mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052AE  6000 0006               8505mmm         BRA     DONE_686
000052B2  0601 0037               8506mmm ALPHA_686: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052B6  4E71                    8507mmm DONE_686: NOP
000052B8                          8508mmm         ENDM
000052B8  4E4F                    8509mm         TRAP    #15         ; EXECUTE OUTPUT
000052BA                          8510mm         
000052BA  3212                    8511mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052BC  E149                    8512mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052BE  E949                    8513mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000052C0  E049                    8514mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052C2  E849                    8515mm         LSR.W   #4, D1      
000052C4                          8516mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052C4  0C01 0009               8517mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052C8  6E00 000A               8518mmm         BGT     ALPHA_687
000052CC  0601 0030               8519mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052D0  6000 0006               8520mmm         BRA     DONE_687
000052D4  0601 0037               8521mmm ALPHA_687: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052D8  4E71                    8522mmm DONE_687: NOP
000052DA                          8523mmm         ENDM
000052DA  4E4F                    8524mm         TRAP    #15         ; EXECUTE OUTPUT       
000052DC                          8525mm         ENDM 
000052DC  361A                    8526m         MOVE.W  (A2)+, D3
000052DE                          8527mm         ADROUT
000052DE  3212                    8528mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052E0  E049                    8529mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052E2  E849                    8530mm         LSR.W   #4, D1      
000052E4                          8531mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052E4  0C01 0009               8532mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052E8  6E00 000A               8533mmm         BGT     ALPHA_689
000052EC  0601 0030               8534mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052F0  6000 0006               8535mmm         BRA     DONE_689
000052F4  0601 0037               8536mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052F8  4E71                    8537mmm DONE_689: NOP
000052FA                          8538mmm         ENDM
000052FA  4E4F                    8539mm         TRAP    #15         ; EXECUTE OUTPUT
000052FC                          8540mm         
000052FC  3212                    8541mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052FE  E949                    8542mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005300  E049                    8543mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005302  E849                    8544mm         LSR.W   #4, D1      
00005304                          8545mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005304  0C01 0009               8546mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005308  6E00 000A               8547mmm         BGT     ALPHA_690
0000530C  0601 0030               8548mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005310  6000 0006               8549mmm         BRA     DONE_690
00005314  0601 0037               8550mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005318  4E71                    8551mmm DONE_690: NOP
0000531A                          8552mmm         ENDM
0000531A  4E4F                    8553mm         TRAP    #15         ; EXECUTE OUTPUT
0000531C                          8554mm         
0000531C  3212                    8555mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000531E  E149                    8556mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005320  E049                    8557mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005322  E849                    8558mm         LSR.W   #4, D1      
00005324                          8559mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005324  0C01 0009               8560mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005328  6E00 000A               8561mmm         BGT     ALPHA_691
0000532C  0601 0030               8562mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005330  6000 0006               8563mmm         BRA     DONE_691
00005334  0601 0037               8564mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005338  4E71                    8565mmm DONE_691: NOP
0000533A                          8566mmm         ENDM
0000533A  4E4F                    8567mm         TRAP    #15         ; EXECUTE OUTPUT
0000533C                          8568mm         
0000533C  3212                    8569mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000533E  E149                    8570mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005340  E949                    8571mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005342  E049                    8572mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005344  E849                    8573mm         LSR.W   #4, D1      
00005346                          8574mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005346  0C01 0009               8575mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000534A  6E00 000A               8576mmm         BGT     ALPHA_692
0000534E  0601 0030               8577mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005352  6000 0006               8578mmm         BRA     DONE_692
00005356  0601 0037               8579mmm ALPHA_692: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000535A  4E71                    8580mmm DONE_692: NOP
0000535C                          8581mmm         ENDM
0000535C  4E4F                    8582mm         TRAP    #15         ; EXECUTE OUTPUT       
0000535E                          8583mm         ENDM 
0000535E  3605                    8584m         MOVE.W  D5, D3
00005360                          8585m 
00005360                          8586m COMPLETE_630:  ; OPCODE HAS BEEN VERIFIED
00005360                          8587m         ENDM
00005360  6000 05F4               8588          BRA     decodeANDcomp
00005364                          8589  decodeAndDestOp:
00005364                          8590m         prepareAdrMode  #$1,(A2)
00005364  3C3C 0001               8591m         MOVE.W  #$1, D6      ; INPUT VALUE
00005368  3212                    8592m         MOVE.W  (A2), D1
0000536A  BC3C 0001               8593m         CMP.B   #$01, D6
0000536E  6700 000C               8594m         BEQ     ADRSOURCE_693    
00005372                          8595m ADRDEST_693:
00005372  EF49                    8596m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005374  E049                    8597m         LSR     #$08, D1
00005376  EA49                    8598m         LSR     #$05, D1
00005378  6000 000A               8599m         BRA     COMPLETE_693 
0000537C                          8600m ADRSOURCE_693:                
0000537C  E149                    8601m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
0000537E  E549                    8602m         LSL     #$02, D1
00005380  E049                    8603m         LSR     #$08, D1
00005382  EA49                    8604m         LSR     #$05, D1
00005384                          8605m COMPLETE_693:  ; OPCODE HAS BEEN VERIFIED
00005384                          8606m         ENDM        
00005384                          8607m         decodeAdrMode   (A2), D1
00005384  3612                    8608m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005386  3201                    8609m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005388                          8610m 
00005388  B23C 0001               8611m         CMP.B   #$01, D1
0000538C  6700 0066               8612m         BEQ     ADRREGDIRECT_694    
00005390  B23C 0002               8613m         CMP.B   #$02, D1
00005394  6700 00A0               8614m         BEQ     ADRREGINDIRECT_694  
00005398  B23C 0003               8615m         CMP.B   #$03, D1
0000539C  6700 0102               8616m         BEQ     ADRREGPOSTINC_694  
000053A0  B23C 0004               8617m         CMP.B   #$04, D1
000053A4  6700 0178               8618m         BEQ     ADRREGPREDEC_694
000053A8  B23C 0007               8619m         CMP.B   #$07, D1
000053AC  6700 01EE               8620m         BEQ     ADRABSOLUTE_694    
000053B0                          8621m         
000053B0                          8622m DATAREGDIRECT_694: 
000053B0  BC3C 0001               8623m         CMP.B   #$01, D6
000053B4  6700 001E               8624m         BEQ     DATAREGDIRECTSRC_694   
000053B8                          8625m DATAREGDIRECTDEST_694: 
000053B8                          8626mm         PRINTDNDEST D3 
000053B8  3203                    8627mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000053BA  E949                    8628mm         LSL     #$04, D1
000053BC  E049                    8629mm         LSR     #$08, D1
000053BE  EA49                    8630mm         LSR     #$05, D1
000053C0  43F8 00C1               8631mm         LEA     ODN, A1     
000053C4  103C 000E               8632mm         MOVE.B  #14,D0          
000053C8  4E4F                    8633mm         TRAP    #15
000053CA  103C 0003               8634mm         MOVE.B  #3,D0          
000053CE  4E4F                    8635mm         TRAP    #15
000053D0                          8636mm         ENDM
000053D0  6000 0562               8637m         BRA     COMPLETE_694 
000053D4                          8638m DATAREGDIRECTSRC_694: 
000053D4                          8639mm         PRINTDNSRC D3 
000053D4  4281                    8640mm         CLR.L   D1
000053D6  3203                    8641mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000053D8  E149                    8642mm         LSL     #$08, D1
000053DA  EB49                    8643mm         LSL     #$05, D1
000053DC  E049                    8644mm         LSR     #$08, D1
000053DE  EA49                    8645mm         LSR     #$05, D1
000053E0  43F8 00C1               8646mm         LEA     ODN, A1     
000053E4  103C 000E               8647mm         MOVE.B  #14,D0          
000053E8  4E4F                    8648mm         TRAP    #15
000053EA  103C 0003               8649mm         MOVE.B  #3,D0          
000053EE  4E4F                    8650mm         TRAP    #15
000053F0                          8651mm         ENDM
000053F0  6000 0542               8652m         BRA     COMPLETE_694   
000053F4                          8653m         
000053F4                          8654m ADRREGDIRECT_694: 
000053F4  BC3C 0001               8655m         CMP.B   #$01, D6
000053F8  6700 001E               8656m         BEQ     ADRREGDIRECTSRC_694   
000053FC                          8657m ADRREGDIRECTDEST_694:
000053FC                          8658mm         PRINTANDEST D3
000053FC  3203                    8659mm         MOVE.W  D3, D1
000053FE  E949                    8660mm         LSL     #$04, D1
00005400  E049                    8661mm         LSR     #$08, D1
00005402  EA49                    8662mm         LSR     #$05, D1
00005404  43F8 00C3               8663mm         LEA     OAN, A1     
00005408  103C 000E               8664mm         MOVE.B  #14,D0          
0000540C  4E4F                    8665mm         TRAP    #15
0000540E  103C 0003               8666mm         MOVE.B  #3,D0          
00005412  4E4F                    8667mm         TRAP    #15
00005414                          8668mm         ENDM
00005414  6000 051E               8669m         BRA     COMPLETE_694   
00005418                          8670m ADRREGDIRECTSRC_694:
00005418                          8671mm         PRINTANSRC D3
00005418  3203                    8672mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000541A  E149                    8673mm         LSL     #$08, D1
0000541C  EB49                    8674mm         LSL     #$05, D1
0000541E  E049                    8675mm         LSR     #$08, D1
00005420  EA49                    8676mm         LSR     #$05, D1
00005422  43F8 00C3               8677mm         LEA     OAN, A1     
00005426  103C 000E               8678mm         MOVE.B  #14,D0          
0000542A  4E4F                    8679mm         TRAP    #15
0000542C  103C 0003               8680mm         MOVE.B  #3,D0          
00005430  4E4F                    8681mm         TRAP    #15
00005432                          8682mm         ENDM
00005432  6000 0500               8683m         BRA     COMPLETE_694   
00005436                          8684m        
00005436                          8685m ADRREGINDIRECT_694:   
00005436  BC3C 0001               8686m         CMP.B   #$01, D6
0000543A  6700 0032               8687m         BEQ     ADRREGINDIRECTSRC_694   
0000543E                          8688m ADRREGINDIRECTDEST_694:
0000543E                          8689mm         PRINTLB
0000543E  43F8 00C5               8690mm         LEA     OLB, A1     
00005442  103C 000E               8691mm         MOVE.B  #14,D0          
00005446  4E4F                    8692mm         TRAP    #15
00005448                          8693mm         ENDM
00005448                          8694mm         PRINTANDEST D3  
00005448  3203                    8695mm         MOVE.W  D3, D1
0000544A  E949                    8696mm         LSL     #$04, D1
0000544C  E049                    8697mm         LSR     #$08, D1
0000544E  EA49                    8698mm         LSR     #$05, D1
00005450  43F8 00C3               8699mm         LEA     OAN, A1     
00005454  103C 000E               8700mm         MOVE.B  #14,D0          
00005458  4E4F                    8701mm         TRAP    #15
0000545A  103C 0003               8702mm         MOVE.B  #3,D0          
0000545E  4E4F                    8703mm         TRAP    #15
00005460                          8704mm         ENDM
00005460                          8705mm         PRINTRB
00005460  43F8 00C7               8706mm         LEA     ORB, A1     
00005464  103C 000E               8707mm         MOVE.B  #14,D0          
00005468  4E4F                    8708mm         TRAP    #15
0000546A                          8709mm         ENDM
0000546A  6000 04C8               8710m         BRA     COMPLETE_694     
0000546E                          8711m ADRREGINDIRECTSRC_694:   
0000546E                          8712mm         PRINTLB
0000546E  43F8 00C5               8713mm         LEA     OLB, A1     
00005472  103C 000E               8714mm         MOVE.B  #14,D0          
00005476  4E4F                    8715mm         TRAP    #15
00005478                          8716mm         ENDM
00005478                          8717mm         PRINTANSRC D3  
00005478  3203                    8718mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000547A  E149                    8719mm         LSL     #$08, D1
0000547C  EB49                    8720mm         LSL     #$05, D1
0000547E  E049                    8721mm         LSR     #$08, D1
00005480  EA49                    8722mm         LSR     #$05, D1
00005482  43F8 00C3               8723mm         LEA     OAN, A1     
00005486  103C 000E               8724mm         MOVE.B  #14,D0          
0000548A  4E4F                    8725mm         TRAP    #15
0000548C  103C 0003               8726mm         MOVE.B  #3,D0          
00005490  4E4F                    8727mm         TRAP    #15
00005492                          8728mm         ENDM
00005492                          8729mm         PRINTRB
00005492  43F8 00C7               8730mm         LEA     ORB, A1     
00005496  103C 000E               8731mm         MOVE.B  #14,D0          
0000549A  4E4F                    8732mm         TRAP    #15
0000549C                          8733mm         ENDM
0000549C  6000 0496               8734m         BRA     COMPLETE_694   
000054A0                          8735m         
000054A0                          8736m ADRREGPOSTINC_694:   
000054A0  BC3C 0001               8737m         CMP.B   #$01, D6
000054A4  6700 003C               8738m         BEQ     ADRREGPOSTINCSRC_694   
000054A8                          8739m ADRREGPOSTINCDEST_694: 
000054A8                          8740mm         PRINTLB
000054A8  43F8 00C5               8741mm         LEA     OLB, A1     
000054AC  103C 000E               8742mm         MOVE.B  #14,D0          
000054B0  4E4F                    8743mm         TRAP    #15
000054B2                          8744mm         ENDM
000054B2                          8745mm         PRINTANDEST D3  
000054B2  3203                    8746mm         MOVE.W  D3, D1
000054B4  E949                    8747mm         LSL     #$04, D1
000054B6  E049                    8748mm         LSR     #$08, D1
000054B8  EA49                    8749mm         LSR     #$05, D1
000054BA  43F8 00C3               8750mm         LEA     OAN, A1     
000054BE  103C 000E               8751mm         MOVE.B  #14,D0          
000054C2  4E4F                    8752mm         TRAP    #15
000054C4  103C 0003               8753mm         MOVE.B  #3,D0          
000054C8  4E4F                    8754mm         TRAP    #15
000054CA                          8755mm         ENDM
000054CA                          8756mm         PRINTRB
000054CA  43F8 00C7               8757mm         LEA     ORB, A1     
000054CE  103C 000E               8758mm         MOVE.B  #14,D0          
000054D2  4E4F                    8759mm         TRAP    #15
000054D4                          8760mm         ENDM
000054D4                          8761mm         PRINTPI
000054D4  43F8 00CE               8762mm         LEA     OPSTINC, A1     
000054D8  103C 000E               8763mm         MOVE.B  #14,D0          
000054DC  4E4F                    8764mm         TRAP    #15
000054DE                          8765mm         ENDM
000054DE  6000 0454               8766m         BRA     COMPLETE_694  
000054E2                          8767m ADRREGPOSTINCSRC_694:           
000054E2                          8768mm         PRINTLB
000054E2  43F8 00C5               8769mm         LEA     OLB, A1     
000054E6  103C 000E               8770mm         MOVE.B  #14,D0          
000054EA  4E4F                    8771mm         TRAP    #15
000054EC                          8772mm         ENDM
000054EC                          8773mm         PRINTANSRC D3  
000054EC  3203                    8774mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000054EE  E149                    8775mm         LSL     #$08, D1
000054F0  EB49                    8776mm         LSL     #$05, D1
000054F2  E049                    8777mm         LSR     #$08, D1
000054F4  EA49                    8778mm         LSR     #$05, D1
000054F6  43F8 00C3               8779mm         LEA     OAN, A1     
000054FA  103C 000E               8780mm         MOVE.B  #14,D0          
000054FE  4E4F                    8781mm         TRAP    #15
00005500  103C 0003               8782mm         MOVE.B  #3,D0          
00005504  4E4F                    8783mm         TRAP    #15
00005506                          8784mm         ENDM
00005506                          8785mm         PRINTRB
00005506  43F8 00C7               8786mm         LEA     ORB, A1     
0000550A  103C 000E               8787mm         MOVE.B  #14,D0          
0000550E  4E4F                    8788mm         TRAP    #15
00005510                          8789mm         ENDM
00005510                          8790mm         PRINTPI
00005510  43F8 00CE               8791mm         LEA     OPSTINC, A1     
00005514  103C 000E               8792mm         MOVE.B  #14,D0          
00005518  4E4F                    8793mm         TRAP    #15
0000551A                          8794mm         ENDM
0000551A  6000 0418               8795m         BRA     COMPLETE_694  
0000551E                          8796m ADRREGPREDEC_694: 
0000551E  BC3C 0001               8797m         CMP.B   #$01, D6
00005522  6700 003C               8798m         BEQ     ADRREGPREDECSRC_694   
00005526                          8799m ADRREGPREDECDEST_694:
00005526                          8800mm         PRINTPD  
00005526  43F8 00CC               8801mm         LEA     OPREDEC, A1     
0000552A  103C 000E               8802mm         MOVE.B  #14,D0          
0000552E  4E4F                    8803mm         TRAP    #15
00005530                          8804mm         ENDM
00005530                          8805mm         PRINTLB
00005530  43F8 00C5               8806mm         LEA     OLB, A1     
00005534  103C 000E               8807mm         MOVE.B  #14,D0          
00005538  4E4F                    8808mm         TRAP    #15
0000553A                          8809mm         ENDM
0000553A                          8810mm         PRINTANDEST D3  
0000553A  3203                    8811mm         MOVE.W  D3, D1
0000553C  E949                    8812mm         LSL     #$04, D1
0000553E  E049                    8813mm         LSR     #$08, D1
00005540  EA49                    8814mm         LSR     #$05, D1
00005542  43F8 00C3               8815mm         LEA     OAN, A1     
00005546  103C 000E               8816mm         MOVE.B  #14,D0          
0000554A  4E4F                    8817mm         TRAP    #15
0000554C  103C 0003               8818mm         MOVE.B  #3,D0          
00005550  4E4F                    8819mm         TRAP    #15
00005552                          8820mm         ENDM
00005552                          8821mm         PRINTRB
00005552  43F8 00C7               8822mm         LEA     ORB, A1     
00005556  103C 000E               8823mm         MOVE.B  #14,D0          
0000555A  4E4F                    8824mm         TRAP    #15
0000555C                          8825mm         ENDM
0000555C  6000 03D6               8826m         BRA     COMPLETE_694   
00005560                          8827m ADRREGPREDECSRC_694: 
00005560                          8828mm         PRINTPD  
00005560  43F8 00CC               8829mm         LEA     OPREDEC, A1     
00005564  103C 000E               8830mm         MOVE.B  #14,D0          
00005568  4E4F                    8831mm         TRAP    #15
0000556A                          8832mm         ENDM
0000556A                          8833mm         PRINTLB
0000556A  43F8 00C5               8834mm         LEA     OLB, A1     
0000556E  103C 000E               8835mm         MOVE.B  #14,D0          
00005572  4E4F                    8836mm         TRAP    #15
00005574                          8837mm         ENDM
00005574                          8838mm         PRINTANSRC D3  
00005574  3203                    8839mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005576  E149                    8840mm         LSL     #$08, D1
00005578  EB49                    8841mm         LSL     #$05, D1
0000557A  E049                    8842mm         LSR     #$08, D1
0000557C  EA49                    8843mm         LSR     #$05, D1
0000557E  43F8 00C3               8844mm         LEA     OAN, A1     
00005582  103C 000E               8845mm         MOVE.B  #14,D0          
00005586  4E4F                    8846mm         TRAP    #15
00005588  103C 0003               8847mm         MOVE.B  #3,D0          
0000558C  4E4F                    8848mm         TRAP    #15
0000558E                          8849mm         ENDM
0000558E                          8850mm         PRINTRB
0000558E  43F8 00C7               8851mm         LEA     ORB, A1     
00005592  103C 000E               8852mm         MOVE.B  #14,D0          
00005596  4E4F                    8853mm         TRAP    #15
00005598                          8854mm         ENDM
00005598  6000 039A               8855m         BRA     COMPLETE_694
0000559C                          8856m        
0000559C                          8857m ADRABSOLUTE_694:
0000559C  BC3C 0001               8858m         CMP.B   #$01, D6
000055A0  6600 0018               8859m         BNE     ADRABSOLUTEDST_694 
000055A4                          8860m         
000055A4  3A03                    8861m         MOVE.W  D3, D5
000055A6  0803 0002               8862m         BTST    #2, D3
000055AA  6600 0024               8863m         BNE     ADRIMMEDIATE_694
000055AE  0803 0000               8864m         BTST    #0, D3
000055B2  6600 0270               8865m         BNE     ADRABSOLUTEL_694
000055B6  6000 01DA               8866m         BRA     ADRABSOLUTEW_694
000055BA                          8867m ADRABSOLUTEDST_694:
000055BA  3A03                    8868m         MOVE.W  D3, D5
000055BC  0803 000B               8869m         BTST    #$B, D3
000055C0  6600 000E               8870m         BNE     ADRIMMEDIATE_694
000055C4  0803 0009               8871m         BTST    #$09, D3
000055C8  6600 025A               8872m         BNE     ADRABSOLUTEL_694
000055CC  6000 01C4               8873m         BRA     ADRABSOLUTEW_694
000055D0                          8874m ADRIMMEDIATE_694:
000055D0  BE3C 0001               8875m         CMP.B   #1, D7
000055D4  6700 009E               8876m         BEQ     ADRIMMEDIATEL_694
000055D8                          8877m ADRIMMEDIATEW_694:
000055D8  361A                    8878m         MOVE.W  (A2)+, D3
000055DA                          8879mm         PRINTHASH
000055DA  103C 0006               8880mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055DE  323C 0023               8881mm         MOVE.W  #35, D1     ; AN = SIGN
000055E2  4E4F                    8882mm         TRAP    #15         ; OUTPUT = SIGN
000055E4                          8883mm         ENDM
000055E4                          8884mm         PRINTSIGN
000055E4  103C 0006               8885mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000055E8  323C 0024               8886mm         MOVE.W  #36, D1     ; AN = SIGN
000055EC  4E4F                    8887mm         TRAP    #15         ; OUTPUT = SIGN
000055EE                          8888mm         ENDM
000055EE                          8889mm         ADROUT
000055EE  3212                    8890mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000055F0  E049                    8891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000055F2  E849                    8892mm         LSR.W   #4, D1      
000055F4                          8893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000055F4  0C01 0009               8894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000055F8  6E00 000A               8895mmm         BGT     ALPHA_724
000055FC  0601 0030               8896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005600  6000 0006               8897mmm         BRA     DONE_724
00005604  0601 0037               8898mmm ALPHA_724: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005608  4E71                    8899mmm DONE_724: NOP
0000560A                          8900mmm         ENDM
0000560A  4E4F                    8901mm         TRAP    #15         ; EXECUTE OUTPUT
0000560C                          8902mm         
0000560C  3212                    8903mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000560E  E949                    8904mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005610  E049                    8905mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005612  E849                    8906mm         LSR.W   #4, D1      
00005614                          8907mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005614  0C01 0009               8908mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005618  6E00 000A               8909mmm         BGT     ALPHA_725
0000561C  0601 0030               8910mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005620  6000 0006               8911mmm         BRA     DONE_725
00005624  0601 0037               8912mmm ALPHA_725: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005628  4E71                    8913mmm DONE_725: NOP
0000562A                          8914mmm         ENDM
0000562A  4E4F                    8915mm         TRAP    #15         ; EXECUTE OUTPUT
0000562C                          8916mm         
0000562C  3212                    8917mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000562E  E149                    8918mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005630  E049                    8919mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005632  E849                    8920mm         LSR.W   #4, D1      
00005634                          8921mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005634  0C01 0009               8922mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005638  6E00 000A               8923mmm         BGT     ALPHA_726
0000563C  0601 0030               8924mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005640  6000 0006               8925mmm         BRA     DONE_726
00005644  0601 0037               8926mmm ALPHA_726: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005648  4E71                    8927mmm DONE_726: NOP
0000564A                          8928mmm         ENDM
0000564A  4E4F                    8929mm         TRAP    #15         ; EXECUTE OUTPUT
0000564C                          8930mm         
0000564C  3212                    8931mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000564E  E149                    8932mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005650  E949                    8933mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005652  E049                    8934mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005654  E849                    8935mm         LSR.W   #4, D1      
00005656                          8936mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005656  0C01 0009               8937mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000565A  6E00 000A               8938mmm         BGT     ALPHA_727
0000565E  0601 0030               8939mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005662  6000 0006               8940mmm         BRA     DONE_727
00005666  0601 0037               8941mmm ALPHA_727: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000566A  4E71                    8942mmm DONE_727: NOP
0000566C                          8943mmm         ENDM
0000566C  4E4F                    8944mm         TRAP    #15         ; EXECUTE OUTPUT       
0000566E                          8945mm         ENDM 
0000566E  3605                    8946m         MOVE.W  D5, D3
00005670  6000 02C2               8947m         BRA     COMPLETE_694
00005674                          8948m ADRIMMEDIATEL_694:
00005674  361A                    8949m         MOVE.W  (A2)+, D3
00005676                          8950mm         PRINTHASH
00005676  103C 0006               8951mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000567A  323C 0023               8952mm         MOVE.W  #35, D1     ; AN = SIGN
0000567E  4E4F                    8953mm         TRAP    #15         ; OUTPUT = SIGN
00005680                          8954mm         ENDM
00005680                          8955mm         PRINTSIGN
00005680  103C 0006               8956mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005684  323C 0024               8957mm         MOVE.W  #36, D1     ; AN = SIGN
00005688  4E4F                    8958mm         TRAP    #15         ; OUTPUT = SIGN
0000568A                          8959mm         ENDM
0000568A                          8960mm         ADROUT 
0000568A  3212                    8961mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000568C  E049                    8962mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000568E  E849                    8963mm         LSR.W   #4, D1      
00005690                          8964mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005690  0C01 0009               8965mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005694  6E00 000A               8966mmm         BGT     ALPHA_731
00005698  0601 0030               8967mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000569C  6000 0006               8968mmm         BRA     DONE_731
000056A0  0601 0037               8969mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056A4  4E71                    8970mmm DONE_731: NOP
000056A6                          8971mmm         ENDM
000056A6  4E4F                    8972mm         TRAP    #15         ; EXECUTE OUTPUT
000056A8                          8973mm         
000056A8  3212                    8974mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056AA  E949                    8975mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000056AC  E049                    8976mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056AE  E849                    8977mm         LSR.W   #4, D1      
000056B0                          8978mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056B0  0C01 0009               8979mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056B4  6E00 000A               8980mmm         BGT     ALPHA_732
000056B8  0601 0030               8981mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056BC  6000 0006               8982mmm         BRA     DONE_732
000056C0  0601 0037               8983mmm ALPHA_732: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056C4  4E71                    8984mmm DONE_732: NOP
000056C6                          8985mmm         ENDM
000056C6  4E4F                    8986mm         TRAP    #15         ; EXECUTE OUTPUT
000056C8                          8987mm         
000056C8  3212                    8988mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056CA  E149                    8989mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056CC  E049                    8990mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056CE  E849                    8991mm         LSR.W   #4, D1      
000056D0                          8992mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056D0  0C01 0009               8993mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056D4  6E00 000A               8994mmm         BGT     ALPHA_733
000056D8  0601 0030               8995mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056DC  6000 0006               8996mmm         BRA     DONE_733
000056E0  0601 0037               8997mmm ALPHA_733: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056E4  4E71                    8998mmm DONE_733: NOP
000056E6                          8999mmm         ENDM
000056E6  4E4F                    9000mm         TRAP    #15         ; EXECUTE OUTPUT
000056E8                          9001mm         
000056E8  3212                    9002mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056EA  E149                    9003mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000056EC  E949                    9004mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000056EE  E049                    9005mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056F0  E849                    9006mm         LSR.W   #4, D1      
000056F2                          9007mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056F2  0C01 0009               9008mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056F6  6E00 000A               9009mmm         BGT     ALPHA_734
000056FA  0601 0030               9010mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056FE  6000 0006               9011mmm         BRA     DONE_734
00005702  0601 0037               9012mmm ALPHA_734: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005706  4E71                    9013mmm DONE_734: NOP
00005708                          9014mmm         ENDM
00005708  4E4F                    9015mm         TRAP    #15         ; EXECUTE OUTPUT       
0000570A                          9016mm         ENDM 
0000570A  361A                    9017m         MOVE.W  (A2)+, D3
0000570C                          9018mm         ADROUT
0000570C  3212                    9019mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000570E  E049                    9020mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005710  E849                    9021mm         LSR.W   #4, D1      
00005712                          9022mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005712  0C01 0009               9023mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005716  6E00 000A               9024mmm         BGT     ALPHA_736
0000571A  0601 0030               9025mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000571E  6000 0006               9026mmm         BRA     DONE_736
00005722  0601 0037               9027mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005726  4E71                    9028mmm DONE_736: NOP
00005728                          9029mmm         ENDM
00005728  4E4F                    9030mm         TRAP    #15         ; EXECUTE OUTPUT
0000572A                          9031mm         
0000572A  3212                    9032mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000572C  E949                    9033mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000572E  E049                    9034mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005730  E849                    9035mm         LSR.W   #4, D1      
00005732                          9036mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005732  0C01 0009               9037mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005736  6E00 000A               9038mmm         BGT     ALPHA_737
0000573A  0601 0030               9039mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000573E  6000 0006               9040mmm         BRA     DONE_737
00005742  0601 0037               9041mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005746  4E71                    9042mmm DONE_737: NOP
00005748                          9043mmm         ENDM
00005748  4E4F                    9044mm         TRAP    #15         ; EXECUTE OUTPUT
0000574A                          9045mm         
0000574A  3212                    9046mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000574C  E149                    9047mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000574E  E049                    9048mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005750  E849                    9049mm         LSR.W   #4, D1      
00005752                          9050mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005752  0C01 0009               9051mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005756  6E00 000A               9052mmm         BGT     ALPHA_738
0000575A  0601 0030               9053mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000575E  6000 0006               9054mmm         BRA     DONE_738
00005762  0601 0037               9055mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005766  4E71                    9056mmm DONE_738: NOP
00005768                          9057mmm         ENDM
00005768  4E4F                    9058mm         TRAP    #15         ; EXECUTE OUTPUT
0000576A                          9059mm         
0000576A  3212                    9060mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000576C  E149                    9061mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000576E  E949                    9062mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005770  E049                    9063mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005772  E849                    9064mm         LSR.W   #4, D1      
00005774                          9065mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005774  0C01 0009               9066mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005778  6E00 000A               9067mmm         BGT     ALPHA_739
0000577C  0601 0030               9068mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005780  6000 0006               9069mmm         BRA     DONE_739
00005784  0601 0037               9070mmm ALPHA_739: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005788  4E71                    9071mmm DONE_739: NOP
0000578A                          9072mmm         ENDM
0000578A  4E4F                    9073mm         TRAP    #15         ; EXECUTE OUTPUT       
0000578C                          9074mm         ENDM 
0000578C  3605                    9075m         MOVE.W  D5, D3
0000578E  6000 01A4               9076m         BRA     COMPLETE_694 
00005792                          9077m ADRABSOLUTEW_694:     
00005792  361A                    9078m         MOVE.W  (A2)+, D3
00005794                          9079mm         PRINTSIGN
00005794  103C 0006               9080mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005798  323C 0024               9081mm         MOVE.W  #36, D1     ; AN = SIGN
0000579C  4E4F                    9082mm         TRAP    #15         ; OUTPUT = SIGN
0000579E                          9083mm         ENDM
0000579E                          9084mm         ADROUT
0000579E  3212                    9085mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057A0  E049                    9086mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057A2  E849                    9087mm         LSR.W   #4, D1      
000057A4                          9088mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057A4  0C01 0009               9089mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057A8  6E00 000A               9090mmm         BGT     ALPHA_742
000057AC  0601 0030               9091mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057B0  6000 0006               9092mmm         BRA     DONE_742
000057B4  0601 0037               9093mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057B8  4E71                    9094mmm DONE_742: NOP
000057BA                          9095mmm         ENDM
000057BA  4E4F                    9096mm         TRAP    #15         ; EXECUTE OUTPUT
000057BC                          9097mm         
000057BC  3212                    9098mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057BE  E949                    9099mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000057C0  E049                    9100mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057C2  E849                    9101mm         LSR.W   #4, D1      
000057C4                          9102mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057C4  0C01 0009               9103mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057C8  6E00 000A               9104mmm         BGT     ALPHA_743
000057CC  0601 0030               9105mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057D0  6000 0006               9106mmm         BRA     DONE_743
000057D4  0601 0037               9107mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057D8  4E71                    9108mmm DONE_743: NOP
000057DA                          9109mmm         ENDM
000057DA  4E4F                    9110mm         TRAP    #15         ; EXECUTE OUTPUT
000057DC                          9111mm         
000057DC  3212                    9112mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057DE  E149                    9113mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057E0  E049                    9114mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057E2  E849                    9115mm         LSR.W   #4, D1      
000057E4                          9116mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057E4  0C01 0009               9117mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057E8  6E00 000A               9118mmm         BGT     ALPHA_744
000057EC  0601 0030               9119mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057F0  6000 0006               9120mmm         BRA     DONE_744
000057F4  0601 0037               9121mmm ALPHA_744: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057F8  4E71                    9122mmm DONE_744: NOP
000057FA                          9123mmm         ENDM
000057FA  4E4F                    9124mm         TRAP    #15         ; EXECUTE OUTPUT
000057FC                          9125mm         
000057FC  3212                    9126mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057FE  E149                    9127mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005800  E949                    9128mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005802  E049                    9129mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005804  E849                    9130mm         LSR.W   #4, D1      
00005806                          9131mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005806  0C01 0009               9132mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000580A  6E00 000A               9133mmm         BGT     ALPHA_745
0000580E  0601 0030               9134mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005812  6000 0006               9135mmm         BRA     DONE_745
00005816  0601 0037               9136mmm ALPHA_745: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000581A  4E71                    9137mmm DONE_745: NOP
0000581C                          9138mmm         ENDM
0000581C  4E4F                    9139mm         TRAP    #15         ; EXECUTE OUTPUT       
0000581E                          9140mm         ENDM 
0000581E  3605                    9141m         MOVE.W  D5, D3
00005820  6000 0112               9142m         BRA     COMPLETE_694  
00005824                          9143m ADRABSOLUTEL_694:  
00005824  361A                    9144m         MOVE.W  (A2)+, D3
00005826                          9145mm         PRINTSIGN
00005826  103C 0006               9146mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000582A  323C 0024               9147mm         MOVE.W  #36, D1     ; AN = SIGN
0000582E  4E4F                    9148mm         TRAP    #15         ; OUTPUT = SIGN
00005830                          9149mm         ENDM
00005830                          9150mm         ADROUT 
00005830  3212                    9151mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005832  E049                    9152mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005834  E849                    9153mm         LSR.W   #4, D1      
00005836                          9154mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005836  0C01 0009               9155mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000583A  6E00 000A               9156mmm         BGT     ALPHA_748
0000583E  0601 0030               9157mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005842  6000 0006               9158mmm         BRA     DONE_748
00005846  0601 0037               9159mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000584A  4E71                    9160mmm DONE_748: NOP
0000584C                          9161mmm         ENDM
0000584C  4E4F                    9162mm         TRAP    #15         ; EXECUTE OUTPUT
0000584E                          9163mm         
0000584E  3212                    9164mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005850  E949                    9165mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005852  E049                    9166mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005854  E849                    9167mm         LSR.W   #4, D1      
00005856                          9168mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005856  0C01 0009               9169mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000585A  6E00 000A               9170mmm         BGT     ALPHA_749
0000585E  0601 0030               9171mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005862  6000 0006               9172mmm         BRA     DONE_749
00005866  0601 0037               9173mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000586A  4E71                    9174mmm DONE_749: NOP
0000586C                          9175mmm         ENDM
0000586C  4E4F                    9176mm         TRAP    #15         ; EXECUTE OUTPUT
0000586E                          9177mm         
0000586E  3212                    9178mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005870  E149                    9179mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005872  E049                    9180mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005874  E849                    9181mm         LSR.W   #4, D1      
00005876                          9182mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005876  0C01 0009               9183mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000587A  6E00 000A               9184mmm         BGT     ALPHA_750
0000587E  0601 0030               9185mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005882  6000 0006               9186mmm         BRA     DONE_750
00005886  0601 0037               9187mmm ALPHA_750: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000588A  4E71                    9188mmm DONE_750: NOP
0000588C                          9189mmm         ENDM
0000588C  4E4F                    9190mm         TRAP    #15         ; EXECUTE OUTPUT
0000588E                          9191mm         
0000588E  3212                    9192mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005890  E149                    9193mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005892  E949                    9194mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005894  E049                    9195mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005896  E849                    9196mm         LSR.W   #4, D1      
00005898                          9197mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005898  0C01 0009               9198mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000589C  6E00 000A               9199mmm         BGT     ALPHA_751
000058A0  0601 0030               9200mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058A4  6000 0006               9201mmm         BRA     DONE_751
000058A8  0601 0037               9202mmm ALPHA_751: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058AC  4E71                    9203mmm DONE_751: NOP
000058AE                          9204mmm         ENDM
000058AE  4E4F                    9205mm         TRAP    #15         ; EXECUTE OUTPUT       
000058B0                          9206mm         ENDM 
000058B0  361A                    9207m         MOVE.W  (A2)+, D3
000058B2                          9208mm         ADROUT
000058B2  3212                    9209mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058B4  E049                    9210mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058B6  E849                    9211mm         LSR.W   #4, D1      
000058B8                          9212mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058B8  0C01 0009               9213mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058BC  6E00 000A               9214mmm         BGT     ALPHA_753
000058C0  0601 0030               9215mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058C4  6000 0006               9216mmm         BRA     DONE_753
000058C8  0601 0037               9217mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058CC  4E71                    9218mmm DONE_753: NOP
000058CE                          9219mmm         ENDM
000058CE  4E4F                    9220mm         TRAP    #15         ; EXECUTE OUTPUT
000058D0                          9221mm         
000058D0  3212                    9222mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058D2  E949                    9223mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000058D4  E049                    9224mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058D6  E849                    9225mm         LSR.W   #4, D1      
000058D8                          9226mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058D8  0C01 0009               9227mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058DC  6E00 000A               9228mmm         BGT     ALPHA_754
000058E0  0601 0030               9229mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058E4  6000 0006               9230mmm         BRA     DONE_754
000058E8  0601 0037               9231mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058EC  4E71                    9232mmm DONE_754: NOP
000058EE                          9233mmm         ENDM
000058EE  4E4F                    9234mm         TRAP    #15         ; EXECUTE OUTPUT
000058F0                          9235mm         
000058F0  3212                    9236mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058F2  E149                    9237mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058F4  E049                    9238mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058F6  E849                    9239mm         LSR.W   #4, D1      
000058F8                          9240mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058F8  0C01 0009               9241mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058FC  6E00 000A               9242mmm         BGT     ALPHA_755
00005900  0601 0030               9243mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005904  6000 0006               9244mmm         BRA     DONE_755
00005908  0601 0037               9245mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000590C  4E71                    9246mmm DONE_755: NOP
0000590E                          9247mmm         ENDM
0000590E  4E4F                    9248mm         TRAP    #15         ; EXECUTE OUTPUT
00005910                          9249mm         
00005910  3212                    9250mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005912  E149                    9251mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005914  E949                    9252mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005916  E049                    9253mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005918  E849                    9254mm         LSR.W   #4, D1      
0000591A                          9255mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000591A  0C01 0009               9256mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000591E  6E00 000A               9257mmm         BGT     ALPHA_756
00005922  0601 0030               9258mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005926  6000 0006               9259mmm         BRA     DONE_756
0000592A  0601 0037               9260mmm ALPHA_756: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000592E  4E71                    9261mmm DONE_756: NOP
00005930                          9262mmm         ENDM
00005930  4E4F                    9263mm         TRAP    #15         ; EXECUTE OUTPUT       
00005932                          9264mm         ENDM 
00005932  3605                    9265m         MOVE.W  D5, D3
00005934                          9266m 
00005934                          9267m COMPLETE_694:  ; OPCODE HAS BEEN VERIFIED
00005934                          9268m         ENDM
00005934                          9269m         printComma
00005934  43F8 00C9               9270m         LEA     OCOMMA, A1     
00005938  103C 000E               9271m         MOVE.B  #14,D0          
0000593C  4E4F                    9272m         TRAP    #15
0000593E                          9273m         ENDM
0000593E                          9274m         printDnDest     (A2)
0000593E  3212                    9275m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00005940  E949                    9276m         LSL     #$04, D1
00005942  E049                    9277m         LSR     #$08, D1
00005944  EA49                    9278m         LSR     #$05, D1
00005946  43F8 00C1               9279m         LEA     ODN, A1     
0000594A  103C 000E               9280m         MOVE.B  #14,D0          
0000594E  4E4F                    9281m         TRAP    #15
00005950  103C 0003               9282m         MOVE.B  #3,D0          
00005954  4E4F                    9283m         TRAP    #15
00005956                          9284m         ENDM
00005956                          9285  decodeANDcomp:
00005956  4E75                    9286          RTS                ; Return from decodeANDcomp subroutine
00005958                          9287  
00005958                          9288  
00005958                          9289  ; ------------------------------------------------------------
00005958                          9290  ; 10. "decodeNOT" subroutine
00005958                          9291  ; AUTHOR
00005958                          9292  ;
00005958                          9293  ; TODO: DESCRIPTION
00005958                          9294  ; ------------------------------------------------------------
00005958                          9295  decodeNOT:
00005958                          9296m         verifyOpcode    pNOT, (A2)
00005958  43F8 016D               9297m         LEA     PNOT, A1      ; INPUT PATTERN STRING
0000595C  3612                    9298m         MOVE.W  (A2), D3      ; INPUT VALUE
0000595E  123C 000F               9299m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005962                          9300m         
00005962                          9301m LOOP_759: 
00005962  0C11 0030               9302m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005966  6700 000E               9303m         BEQ     CHECKFOR0_759
0000596A  0C11 0031               9304m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000596E  6700 0010               9305m         BEQ     CHECKFOR1_759
00005972  6000 0012               9306m         BRA     NEXT_759      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005976                          9307m         
00005976                          9308m CHECKFOR0_759: 
00005976  0303                    9309m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005978  6600 115C               9310m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000597C  6000 0008               9311m         BRA     NEXT_759
00005980                          9312m 
00005980                          9313m CHECKFOR1_759:
00005980  0303                    9314m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005982  6700 1152               9315m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005986                          9316m 
00005986                          9317m NEXT_759: 
00005986  B23C 0000               9318m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000598A  6700 0008               9319m         BEQ     COMPLETE_759  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000598E  5301                    9320m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005990  1819                    9321m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005992  60CE                    9322m         BRA     LOOP_759      ; BEGIN LOOP AGAIN
00005994                          9323m 
00005994                          9324m COMPLETE_759:  ; OPCODE HAS BEEN VERIFIED
00005994                          9325m         ENDM
00005994  43F8 0089               9326          LEA     oNOT, A1     
00005998  103C 000E               9327          MOVE.B  #14,D0          
0000599C  4E4F                    9328          TRAP    #15
0000599E                          9329m         printSizeLow       (A2)
0000599E  3612                    9330m         MOVE.W  (A2), D3      ; INPUT VALUE      
000059A0                          9331m CHECKFORB_760: 
000059A0  0803 0006               9332m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000059A4  6600 0010               9333m         BNE     CHECKFORW_760  ; IF NOT GO TO WORD SIZE
000059A8  43F8 00B5               9334m         LEA     OBSIZE, A1     
000059AC  103C 000E               9335m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059B0  4E4F                    9336m         TRAP    #15
000059B2  6000 0022               9337m         BRA     COMPLETE_760      
000059B6                          9338m CHECKFORW_760: 
000059B6  0803 0007               9339m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000059BA  6600 0010               9340m         BNE     CHECKFORL_760 ; IF NOT GO TO LONGWORD SIZE
000059BE  43F8 00B9               9341m         LEA     OWSIZE, A1     
000059C2  103C 000E               9342m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000059C6  4E4F                    9343m         TRAP    #15
000059C8  6000 000C               9344m         BRA     COMPLETE_760  
000059CC                          9345m CHECKFORL_760:
000059CC  43F8 00BD               9346m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000059D0  103C 000E               9347m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000059D4  4E4F                    9348m         TRAP    #15
000059D6                          9349m COMPLETE_760:  ; SIZE HAS BEEN PRINTED
000059D6                          9350m         ENDM
000059D6                          9351m         prepareAdrMode  #$1, (A2)
000059D6  3C3C 0001               9352m         MOVE.W  #$1, D6      ; INPUT VALUE
000059DA  3212                    9353m         MOVE.W  (A2), D1
000059DC  BC3C 0001               9354m         CMP.B   #$01, D6
000059E0  6700 000C               9355m         BEQ     ADRSOURCE_761    
000059E4                          9356m ADRDEST_761:
000059E4  EF49                    9357m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000059E6  E049                    9358m         LSR     #$08, D1
000059E8  EA49                    9359m         LSR     #$05, D1
000059EA  6000 000A               9360m         BRA     COMPLETE_761 
000059EE                          9361m ADRSOURCE_761:                
000059EE  E149                    9362m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000059F0  E549                    9363m         LSL     #$02, D1
000059F2  E049                    9364m         LSR     #$08, D1
000059F4  EA49                    9365m         LSR     #$05, D1
000059F6                          9366m COMPLETE_761:  ; OPCODE HAS BEEN VERIFIED
000059F6                          9367m         ENDM        
000059F6                          9368m         decodeAdrMode   (A2), D1
000059F6  3612                    9369m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000059F8  3201                    9370m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000059FA                          9371m 
000059FA  B23C 0001               9372m         CMP.B   #$01, D1
000059FE  6700 0066               9373m         BEQ     ADRREGDIRECT_762    
00005A02  B23C 0002               9374m         CMP.B   #$02, D1
00005A06  6700 00A0               9375m         BEQ     ADRREGINDIRECT_762  
00005A0A  B23C 0003               9376m         CMP.B   #$03, D1
00005A0E  6700 0102               9377m         BEQ     ADRREGPOSTINC_762  
00005A12  B23C 0004               9378m         CMP.B   #$04, D1
00005A16  6700 0178               9379m         BEQ     ADRREGPREDEC_762
00005A1A  B23C 0007               9380m         CMP.B   #$07, D1
00005A1E  6700 01EE               9381m         BEQ     ADRABSOLUTE_762    
00005A22                          9382m         
00005A22                          9383m DATAREGDIRECT_762: 
00005A22  BC3C 0001               9384m         CMP.B   #$01, D6
00005A26  6700 001E               9385m         BEQ     DATAREGDIRECTSRC_762   
00005A2A                          9386m DATAREGDIRECTDEST_762: 
00005A2A                          9387mm         PRINTDNDEST D3 
00005A2A  3203                    9388mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005A2C  E949                    9389mm         LSL     #$04, D1
00005A2E  E049                    9390mm         LSR     #$08, D1
00005A30  EA49                    9391mm         LSR     #$05, D1
00005A32  43F8 00C1               9392mm         LEA     ODN, A1     
00005A36  103C 000E               9393mm         MOVE.B  #14,D0          
00005A3A  4E4F                    9394mm         TRAP    #15
00005A3C  103C 0003               9395mm         MOVE.B  #3,D0          
00005A40  4E4F                    9396mm         TRAP    #15
00005A42                          9397mm         ENDM
00005A42  6000 0562               9398m         BRA     COMPLETE_762 
00005A46                          9399m DATAREGDIRECTSRC_762: 
00005A46                          9400mm         PRINTDNSRC D3 
00005A46  4281                    9401mm         CLR.L   D1
00005A48  3203                    9402mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A4A  E149                    9403mm         LSL     #$08, D1
00005A4C  EB49                    9404mm         LSL     #$05, D1
00005A4E  E049                    9405mm         LSR     #$08, D1
00005A50  EA49                    9406mm         LSR     #$05, D1
00005A52  43F8 00C1               9407mm         LEA     ODN, A1     
00005A56  103C 000E               9408mm         MOVE.B  #14,D0          
00005A5A  4E4F                    9409mm         TRAP    #15
00005A5C  103C 0003               9410mm         MOVE.B  #3,D0          
00005A60  4E4F                    9411mm         TRAP    #15
00005A62                          9412mm         ENDM
00005A62  6000 0542               9413m         BRA     COMPLETE_762   
00005A66                          9414m         
00005A66                          9415m ADRREGDIRECT_762: 
00005A66  BC3C 0001               9416m         CMP.B   #$01, D6
00005A6A  6700 001E               9417m         BEQ     ADRREGDIRECTSRC_762   
00005A6E                          9418m ADRREGDIRECTDEST_762:
00005A6E                          9419mm         PRINTANDEST D3
00005A6E  3203                    9420mm         MOVE.W  D3, D1
00005A70  E949                    9421mm         LSL     #$04, D1
00005A72  E049                    9422mm         LSR     #$08, D1
00005A74  EA49                    9423mm         LSR     #$05, D1
00005A76  43F8 00C3               9424mm         LEA     OAN, A1     
00005A7A  103C 000E               9425mm         MOVE.B  #14,D0          
00005A7E  4E4F                    9426mm         TRAP    #15
00005A80  103C 0003               9427mm         MOVE.B  #3,D0          
00005A84  4E4F                    9428mm         TRAP    #15
00005A86                          9429mm         ENDM
00005A86  6000 051E               9430m         BRA     COMPLETE_762   
00005A8A                          9431m ADRREGDIRECTSRC_762:
00005A8A                          9432mm         PRINTANSRC D3
00005A8A  3203                    9433mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A8C  E149                    9434mm         LSL     #$08, D1
00005A8E  EB49                    9435mm         LSL     #$05, D1
00005A90  E049                    9436mm         LSR     #$08, D1
00005A92  EA49                    9437mm         LSR     #$05, D1
00005A94  43F8 00C3               9438mm         LEA     OAN, A1     
00005A98  103C 000E               9439mm         MOVE.B  #14,D0          
00005A9C  4E4F                    9440mm         TRAP    #15
00005A9E  103C 0003               9441mm         MOVE.B  #3,D0          
00005AA2  4E4F                    9442mm         TRAP    #15
00005AA4                          9443mm         ENDM
00005AA4  6000 0500               9444m         BRA     COMPLETE_762   
00005AA8                          9445m        
00005AA8                          9446m ADRREGINDIRECT_762:   
00005AA8  BC3C 0001               9447m         CMP.B   #$01, D6
00005AAC  6700 0032               9448m         BEQ     ADRREGINDIRECTSRC_762   
00005AB0                          9449m ADRREGINDIRECTDEST_762:
00005AB0                          9450mm         PRINTLB
00005AB0  43F8 00C5               9451mm         LEA     OLB, A1     
00005AB4  103C 000E               9452mm         MOVE.B  #14,D0          
00005AB8  4E4F                    9453mm         TRAP    #15
00005ABA                          9454mm         ENDM
00005ABA                          9455mm         PRINTANDEST D3  
00005ABA  3203                    9456mm         MOVE.W  D3, D1
00005ABC  E949                    9457mm         LSL     #$04, D1
00005ABE  E049                    9458mm         LSR     #$08, D1
00005AC0  EA49                    9459mm         LSR     #$05, D1
00005AC2  43F8 00C3               9460mm         LEA     OAN, A1     
00005AC6  103C 000E               9461mm         MOVE.B  #14,D0          
00005ACA  4E4F                    9462mm         TRAP    #15
00005ACC  103C 0003               9463mm         MOVE.B  #3,D0          
00005AD0  4E4F                    9464mm         TRAP    #15
00005AD2                          9465mm         ENDM
00005AD2                          9466mm         PRINTRB
00005AD2  43F8 00C7               9467mm         LEA     ORB, A1     
00005AD6  103C 000E               9468mm         MOVE.B  #14,D0          
00005ADA  4E4F                    9469mm         TRAP    #15
00005ADC                          9470mm         ENDM
00005ADC  6000 04C8               9471m         BRA     COMPLETE_762     
00005AE0                          9472m ADRREGINDIRECTSRC_762:   
00005AE0                          9473mm         PRINTLB
00005AE0  43F8 00C5               9474mm         LEA     OLB, A1     
00005AE4  103C 000E               9475mm         MOVE.B  #14,D0          
00005AE8  4E4F                    9476mm         TRAP    #15
00005AEA                          9477mm         ENDM
00005AEA                          9478mm         PRINTANSRC D3  
00005AEA  3203                    9479mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005AEC  E149                    9480mm         LSL     #$08, D1
00005AEE  EB49                    9481mm         LSL     #$05, D1
00005AF0  E049                    9482mm         LSR     #$08, D1
00005AF2  EA49                    9483mm         LSR     #$05, D1
00005AF4  43F8 00C3               9484mm         LEA     OAN, A1     
00005AF8  103C 000E               9485mm         MOVE.B  #14,D0          
00005AFC  4E4F                    9486mm         TRAP    #15
00005AFE  103C 0003               9487mm         MOVE.B  #3,D0          
00005B02  4E4F                    9488mm         TRAP    #15
00005B04                          9489mm         ENDM
00005B04                          9490mm         PRINTRB
00005B04  43F8 00C7               9491mm         LEA     ORB, A1     
00005B08  103C 000E               9492mm         MOVE.B  #14,D0          
00005B0C  4E4F                    9493mm         TRAP    #15
00005B0E                          9494mm         ENDM
00005B0E  6000 0496               9495m         BRA     COMPLETE_762   
00005B12                          9496m         
00005B12                          9497m ADRREGPOSTINC_762:   
00005B12  BC3C 0001               9498m         CMP.B   #$01, D6
00005B16  6700 003C               9499m         BEQ     ADRREGPOSTINCSRC_762   
00005B1A                          9500m ADRREGPOSTINCDEST_762: 
00005B1A                          9501mm         PRINTLB
00005B1A  43F8 00C5               9502mm         LEA     OLB, A1     
00005B1E  103C 000E               9503mm         MOVE.B  #14,D0          
00005B22  4E4F                    9504mm         TRAP    #15
00005B24                          9505mm         ENDM
00005B24                          9506mm         PRINTANDEST D3  
00005B24  3203                    9507mm         MOVE.W  D3, D1
00005B26  E949                    9508mm         LSL     #$04, D1
00005B28  E049                    9509mm         LSR     #$08, D1
00005B2A  EA49                    9510mm         LSR     #$05, D1
00005B2C  43F8 00C3               9511mm         LEA     OAN, A1     
00005B30  103C 000E               9512mm         MOVE.B  #14,D0          
00005B34  4E4F                    9513mm         TRAP    #15
00005B36  103C 0003               9514mm         MOVE.B  #3,D0          
00005B3A  4E4F                    9515mm         TRAP    #15
00005B3C                          9516mm         ENDM
00005B3C                          9517mm         PRINTRB
00005B3C  43F8 00C7               9518mm         LEA     ORB, A1     
00005B40  103C 000E               9519mm         MOVE.B  #14,D0          
00005B44  4E4F                    9520mm         TRAP    #15
00005B46                          9521mm         ENDM
00005B46                          9522mm         PRINTPI
00005B46  43F8 00CE               9523mm         LEA     OPSTINC, A1     
00005B4A  103C 000E               9524mm         MOVE.B  #14,D0          
00005B4E  4E4F                    9525mm         TRAP    #15
00005B50                          9526mm         ENDM
00005B50  6000 0454               9527m         BRA     COMPLETE_762  
00005B54                          9528m ADRREGPOSTINCSRC_762:           
00005B54                          9529mm         PRINTLB
00005B54  43F8 00C5               9530mm         LEA     OLB, A1     
00005B58  103C 000E               9531mm         MOVE.B  #14,D0          
00005B5C  4E4F                    9532mm         TRAP    #15
00005B5E                          9533mm         ENDM
00005B5E                          9534mm         PRINTANSRC D3  
00005B5E  3203                    9535mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005B60  E149                    9536mm         LSL     #$08, D1
00005B62  EB49                    9537mm         LSL     #$05, D1
00005B64  E049                    9538mm         LSR     #$08, D1
00005B66  EA49                    9539mm         LSR     #$05, D1
00005B68  43F8 00C3               9540mm         LEA     OAN, A1     
00005B6C  103C 000E               9541mm         MOVE.B  #14,D0          
00005B70  4E4F                    9542mm         TRAP    #15
00005B72  103C 0003               9543mm         MOVE.B  #3,D0          
00005B76  4E4F                    9544mm         TRAP    #15
00005B78                          9545mm         ENDM
00005B78                          9546mm         PRINTRB
00005B78  43F8 00C7               9547mm         LEA     ORB, A1     
00005B7C  103C 000E               9548mm         MOVE.B  #14,D0          
00005B80  4E4F                    9549mm         TRAP    #15
00005B82                          9550mm         ENDM
00005B82                          9551mm         PRINTPI
00005B82  43F8 00CE               9552mm         LEA     OPSTINC, A1     
00005B86  103C 000E               9553mm         MOVE.B  #14,D0          
00005B8A  4E4F                    9554mm         TRAP    #15
00005B8C                          9555mm         ENDM
00005B8C  6000 0418               9556m         BRA     COMPLETE_762  
00005B90                          9557m ADRREGPREDEC_762: 
00005B90  BC3C 0001               9558m         CMP.B   #$01, D6
00005B94  6700 003C               9559m         BEQ     ADRREGPREDECSRC_762   
00005B98                          9560m ADRREGPREDECDEST_762:
00005B98                          9561mm         PRINTPD  
00005B98  43F8 00CC               9562mm         LEA     OPREDEC, A1     
00005B9C  103C 000E               9563mm         MOVE.B  #14,D0          
00005BA0  4E4F                    9564mm         TRAP    #15
00005BA2                          9565mm         ENDM
00005BA2                          9566mm         PRINTLB
00005BA2  43F8 00C5               9567mm         LEA     OLB, A1     
00005BA6  103C 000E               9568mm         MOVE.B  #14,D0          
00005BAA  4E4F                    9569mm         TRAP    #15
00005BAC                          9570mm         ENDM
00005BAC                          9571mm         PRINTANDEST D3  
00005BAC  3203                    9572mm         MOVE.W  D3, D1
00005BAE  E949                    9573mm         LSL     #$04, D1
00005BB0  E049                    9574mm         LSR     #$08, D1
00005BB2  EA49                    9575mm         LSR     #$05, D1
00005BB4  43F8 00C3               9576mm         LEA     OAN, A1     
00005BB8  103C 000E               9577mm         MOVE.B  #14,D0          
00005BBC  4E4F                    9578mm         TRAP    #15
00005BBE  103C 0003               9579mm         MOVE.B  #3,D0          
00005BC2  4E4F                    9580mm         TRAP    #15
00005BC4                          9581mm         ENDM
00005BC4                          9582mm         PRINTRB
00005BC4  43F8 00C7               9583mm         LEA     ORB, A1     
00005BC8  103C 000E               9584mm         MOVE.B  #14,D0          
00005BCC  4E4F                    9585mm         TRAP    #15
00005BCE                          9586mm         ENDM
00005BCE  6000 03D6               9587m         BRA     COMPLETE_762   
00005BD2                          9588m ADRREGPREDECSRC_762: 
00005BD2                          9589mm         PRINTPD  
00005BD2  43F8 00CC               9590mm         LEA     OPREDEC, A1     
00005BD6  103C 000E               9591mm         MOVE.B  #14,D0          
00005BDA  4E4F                    9592mm         TRAP    #15
00005BDC                          9593mm         ENDM
00005BDC                          9594mm         PRINTLB
00005BDC  43F8 00C5               9595mm         LEA     OLB, A1     
00005BE0  103C 000E               9596mm         MOVE.B  #14,D0          
00005BE4  4E4F                    9597mm         TRAP    #15
00005BE6                          9598mm         ENDM
00005BE6                          9599mm         PRINTANSRC D3  
00005BE6  3203                    9600mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BE8  E149                    9601mm         LSL     #$08, D1
00005BEA  EB49                    9602mm         LSL     #$05, D1
00005BEC  E049                    9603mm         LSR     #$08, D1
00005BEE  EA49                    9604mm         LSR     #$05, D1
00005BF0  43F8 00C3               9605mm         LEA     OAN, A1     
00005BF4  103C 000E               9606mm         MOVE.B  #14,D0          
00005BF8  4E4F                    9607mm         TRAP    #15
00005BFA  103C 0003               9608mm         MOVE.B  #3,D0          
00005BFE  4E4F                    9609mm         TRAP    #15
00005C00                          9610mm         ENDM
00005C00                          9611mm         PRINTRB
00005C00  43F8 00C7               9612mm         LEA     ORB, A1     
00005C04  103C 000E               9613mm         MOVE.B  #14,D0          
00005C08  4E4F                    9614mm         TRAP    #15
00005C0A                          9615mm         ENDM
00005C0A  6000 039A               9616m         BRA     COMPLETE_762
00005C0E                          9617m        
00005C0E                          9618m ADRABSOLUTE_762:
00005C0E  BC3C 0001               9619m         CMP.B   #$01, D6
00005C12  6600 0018               9620m         BNE     ADRABSOLUTEDST_762 
00005C16                          9621m         
00005C16  3A03                    9622m         MOVE.W  D3, D5
00005C18  0803 0002               9623m         BTST    #2, D3
00005C1C  6600 0024               9624m         BNE     ADRIMMEDIATE_762
00005C20  0803 0000               9625m         BTST    #0, D3
00005C24  6600 0270               9626m         BNE     ADRABSOLUTEL_762
00005C28  6000 01DA               9627m         BRA     ADRABSOLUTEW_762
00005C2C                          9628m ADRABSOLUTEDST_762:
00005C2C  3A03                    9629m         MOVE.W  D3, D5
00005C2E  0803 000B               9630m         BTST    #$B, D3
00005C32  6600 000E               9631m         BNE     ADRIMMEDIATE_762
00005C36  0803 0009               9632m         BTST    #$09, D3
00005C3A  6600 025A               9633m         BNE     ADRABSOLUTEL_762
00005C3E  6000 01C4               9634m         BRA     ADRABSOLUTEW_762
00005C42                          9635m ADRIMMEDIATE_762:
00005C42  BE3C 0001               9636m         CMP.B   #1, D7
00005C46  6700 009E               9637m         BEQ     ADRIMMEDIATEL_762
00005C4A                          9638m ADRIMMEDIATEW_762:
00005C4A  361A                    9639m         MOVE.W  (A2)+, D3
00005C4C                          9640mm         PRINTHASH
00005C4C  103C 0006               9641mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C50  323C 0023               9642mm         MOVE.W  #35, D1     ; AN = SIGN
00005C54  4E4F                    9643mm         TRAP    #15         ; OUTPUT = SIGN
00005C56                          9644mm         ENDM
00005C56                          9645mm         PRINTSIGN
00005C56  103C 0006               9646mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005C5A  323C 0024               9647mm         MOVE.W  #36, D1     ; AN = SIGN
00005C5E  4E4F                    9648mm         TRAP    #15         ; OUTPUT = SIGN
00005C60                          9649mm         ENDM
00005C60                          9650mm         ADROUT
00005C60  3212                    9651mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C62  E049                    9652mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C64  E849                    9653mm         LSR.W   #4, D1      
00005C66                          9654mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C66  0C01 0009               9655mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C6A  6E00 000A               9656mmm         BGT     ALPHA_792
00005C6E  0601 0030               9657mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C72  6000 0006               9658mmm         BRA     DONE_792
00005C76  0601 0037               9659mmm ALPHA_792: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C7A  4E71                    9660mmm DONE_792: NOP
00005C7C                          9661mmm         ENDM
00005C7C  4E4F                    9662mm         TRAP    #15         ; EXECUTE OUTPUT
00005C7E                          9663mm         
00005C7E  3212                    9664mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005C80  E949                    9665mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005C82  E049                    9666mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005C84  E849                    9667mm         LSR.W   #4, D1      
00005C86                          9668mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005C86  0C01 0009               9669mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005C8A  6E00 000A               9670mmm         BGT     ALPHA_793
00005C8E  0601 0030               9671mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005C92  6000 0006               9672mmm         BRA     DONE_793
00005C96  0601 0037               9673mmm ALPHA_793: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005C9A  4E71                    9674mmm DONE_793: NOP
00005C9C                          9675mmm         ENDM
00005C9C  4E4F                    9676mm         TRAP    #15         ; EXECUTE OUTPUT
00005C9E                          9677mm         
00005C9E  3212                    9678mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CA0  E149                    9679mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CA2  E049                    9680mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CA4  E849                    9681mm         LSR.W   #4, D1      
00005CA6                          9682mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CA6  0C01 0009               9683mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CAA  6E00 000A               9684mmm         BGT     ALPHA_794
00005CAE  0601 0030               9685mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CB2  6000 0006               9686mmm         BRA     DONE_794
00005CB6  0601 0037               9687mmm ALPHA_794: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CBA  4E71                    9688mmm DONE_794: NOP
00005CBC                          9689mmm         ENDM
00005CBC  4E4F                    9690mm         TRAP    #15         ; EXECUTE OUTPUT
00005CBE                          9691mm         
00005CBE  3212                    9692mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CC0  E149                    9693mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CC2  E949                    9694mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005CC4  E049                    9695mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CC6  E849                    9696mm         LSR.W   #4, D1      
00005CC8                          9697mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CC8  0C01 0009               9698mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CCC  6E00 000A               9699mmm         BGT     ALPHA_795
00005CD0  0601 0030               9700mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CD4  6000 0006               9701mmm         BRA     DONE_795
00005CD8  0601 0037               9702mmm ALPHA_795: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CDC  4E71                    9703mmm DONE_795: NOP
00005CDE                          9704mmm         ENDM
00005CDE  4E4F                    9705mm         TRAP    #15         ; EXECUTE OUTPUT       
00005CE0                          9706mm         ENDM 
00005CE0  3605                    9707m         MOVE.W  D5, D3
00005CE2  6000 02C2               9708m         BRA     COMPLETE_762
00005CE6                          9709m ADRIMMEDIATEL_762:
00005CE6  361A                    9710m         MOVE.W  (A2)+, D3
00005CE8                          9711mm         PRINTHASH
00005CE8  103C 0006               9712mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CEC  323C 0023               9713mm         MOVE.W  #35, D1     ; AN = SIGN
00005CF0  4E4F                    9714mm         TRAP    #15         ; OUTPUT = SIGN
00005CF2                          9715mm         ENDM
00005CF2                          9716mm         PRINTSIGN
00005CF2  103C 0006               9717mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CF6  323C 0024               9718mm         MOVE.W  #36, D1     ; AN = SIGN
00005CFA  4E4F                    9719mm         TRAP    #15         ; OUTPUT = SIGN
00005CFC                          9720mm         ENDM
00005CFC                          9721mm         ADROUT 
00005CFC  3212                    9722mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CFE  E049                    9723mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D00  E849                    9724mm         LSR.W   #4, D1      
00005D02                          9725mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D02  0C01 0009               9726mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D06  6E00 000A               9727mmm         BGT     ALPHA_799
00005D0A  0601 0030               9728mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D0E  6000 0006               9729mmm         BRA     DONE_799
00005D12  0601 0037               9730mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D16  4E71                    9731mmm DONE_799: NOP
00005D18                          9732mmm         ENDM
00005D18  4E4F                    9733mm         TRAP    #15         ; EXECUTE OUTPUT
00005D1A                          9734mm         
00005D1A  3212                    9735mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D1C  E949                    9736mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005D1E  E049                    9737mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D20  E849                    9738mm         LSR.W   #4, D1      
00005D22                          9739mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D22  0C01 0009               9740mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D26  6E00 000A               9741mmm         BGT     ALPHA_800
00005D2A  0601 0030               9742mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D2E  6000 0006               9743mmm         BRA     DONE_800
00005D32  0601 0037               9744mmm ALPHA_800: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D36  4E71                    9745mmm DONE_800: NOP
00005D38                          9746mmm         ENDM
00005D38  4E4F                    9747mm         TRAP    #15         ; EXECUTE OUTPUT
00005D3A                          9748mm         
00005D3A  3212                    9749mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D3C  E149                    9750mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D3E  E049                    9751mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D40  E849                    9752mm         LSR.W   #4, D1      
00005D42                          9753mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D42  0C01 0009               9754mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D46  6E00 000A               9755mmm         BGT     ALPHA_801
00005D4A  0601 0030               9756mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D4E  6000 0006               9757mmm         BRA     DONE_801
00005D52  0601 0037               9758mmm ALPHA_801: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D56  4E71                    9759mmm DONE_801: NOP
00005D58                          9760mmm         ENDM
00005D58  4E4F                    9761mm         TRAP    #15         ; EXECUTE OUTPUT
00005D5A                          9762mm         
00005D5A  3212                    9763mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D5C  E149                    9764mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D5E  E949                    9765mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005D60  E049                    9766mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D62  E849                    9767mm         LSR.W   #4, D1      
00005D64                          9768mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D64  0C01 0009               9769mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D68  6E00 000A               9770mmm         BGT     ALPHA_802
00005D6C  0601 0030               9771mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D70  6000 0006               9772mmm         BRA     DONE_802
00005D74  0601 0037               9773mmm ALPHA_802: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D78  4E71                    9774mmm DONE_802: NOP
00005D7A                          9775mmm         ENDM
00005D7A  4E4F                    9776mm         TRAP    #15         ; EXECUTE OUTPUT       
00005D7C                          9777mm         ENDM 
00005D7C  361A                    9778m         MOVE.W  (A2)+, D3
00005D7E                          9779mm         ADROUT
00005D7E  3212                    9780mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D80  E049                    9781mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D82  E849                    9782mm         LSR.W   #4, D1      
00005D84                          9783mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D84  0C01 0009               9784mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D88  6E00 000A               9785mmm         BGT     ALPHA_804
00005D8C  0601 0030               9786mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D90  6000 0006               9787mmm         BRA     DONE_804
00005D94  0601 0037               9788mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D98  4E71                    9789mmm DONE_804: NOP
00005D9A                          9790mmm         ENDM
00005D9A  4E4F                    9791mm         TRAP    #15         ; EXECUTE OUTPUT
00005D9C                          9792mm         
00005D9C  3212                    9793mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D9E  E949                    9794mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DA0  E049                    9795mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DA2  E849                    9796mm         LSR.W   #4, D1      
00005DA4                          9797mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DA4  0C01 0009               9798mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DA8  6E00 000A               9799mmm         BGT     ALPHA_805
00005DAC  0601 0030               9800mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DB0  6000 0006               9801mmm         BRA     DONE_805
00005DB4  0601 0037               9802mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DB8  4E71                    9803mmm DONE_805: NOP
00005DBA                          9804mmm         ENDM
00005DBA  4E4F                    9805mm         TRAP    #15         ; EXECUTE OUTPUT
00005DBC                          9806mm         
00005DBC  3212                    9807mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DBE  E149                    9808mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DC0  E049                    9809mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DC2  E849                    9810mm         LSR.W   #4, D1      
00005DC4                          9811mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DC4  0C01 0009               9812mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DC8  6E00 000A               9813mmm         BGT     ALPHA_806
00005DCC  0601 0030               9814mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DD0  6000 0006               9815mmm         BRA     DONE_806
00005DD4  0601 0037               9816mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DD8  4E71                    9817mmm DONE_806: NOP
00005DDA                          9818mmm         ENDM
00005DDA  4E4F                    9819mm         TRAP    #15         ; EXECUTE OUTPUT
00005DDC                          9820mm         
00005DDC  3212                    9821mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DDE  E149                    9822mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DE0  E949                    9823mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005DE2  E049                    9824mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DE4  E849                    9825mm         LSR.W   #4, D1      
00005DE6                          9826mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DE6  0C01 0009               9827mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DEA  6E00 000A               9828mmm         BGT     ALPHA_807
00005DEE  0601 0030               9829mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DF2  6000 0006               9830mmm         BRA     DONE_807
00005DF6  0601 0037               9831mmm ALPHA_807: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DFA  4E71                    9832mmm DONE_807: NOP
00005DFC                          9833mmm         ENDM
00005DFC  4E4F                    9834mm         TRAP    #15         ; EXECUTE OUTPUT       
00005DFE                          9835mm         ENDM 
00005DFE  3605                    9836m         MOVE.W  D5, D3
00005E00  6000 01A4               9837m         BRA     COMPLETE_762 
00005E04                          9838m ADRABSOLUTEW_762:     
00005E04  361A                    9839m         MOVE.W  (A2)+, D3
00005E06                          9840mm         PRINTSIGN
00005E06  103C 0006               9841mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E0A  323C 0024               9842mm         MOVE.W  #36, D1     ; AN = SIGN
00005E0E  4E4F                    9843mm         TRAP    #15         ; OUTPUT = SIGN
00005E10                          9844mm         ENDM
00005E10                          9845mm         ADROUT
00005E10  3212                    9846mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E12  E049                    9847mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E14  E849                    9848mm         LSR.W   #4, D1      
00005E16                          9849mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E16  0C01 0009               9850mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E1A  6E00 000A               9851mmm         BGT     ALPHA_810
00005E1E  0601 0030               9852mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E22  6000 0006               9853mmm         BRA     DONE_810
00005E26  0601 0037               9854mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E2A  4E71                    9855mmm DONE_810: NOP
00005E2C                          9856mmm         ENDM
00005E2C  4E4F                    9857mm         TRAP    #15         ; EXECUTE OUTPUT
00005E2E                          9858mm         
00005E2E  3212                    9859mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E30  E949                    9860mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E32  E049                    9861mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E34  E849                    9862mm         LSR.W   #4, D1      
00005E36                          9863mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E36  0C01 0009               9864mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E3A  6E00 000A               9865mmm         BGT     ALPHA_811
00005E3E  0601 0030               9866mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E42  6000 0006               9867mmm         BRA     DONE_811
00005E46  0601 0037               9868mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E4A  4E71                    9869mmm DONE_811: NOP
00005E4C                          9870mmm         ENDM
00005E4C  4E4F                    9871mm         TRAP    #15         ; EXECUTE OUTPUT
00005E4E                          9872mm         
00005E4E  3212                    9873mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E50  E149                    9874mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E52  E049                    9875mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E54  E849                    9876mm         LSR.W   #4, D1      
00005E56                          9877mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E56  0C01 0009               9878mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E5A  6E00 000A               9879mmm         BGT     ALPHA_812
00005E5E  0601 0030               9880mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E62  6000 0006               9881mmm         BRA     DONE_812
00005E66  0601 0037               9882mmm ALPHA_812: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E6A  4E71                    9883mmm DONE_812: NOP
00005E6C                          9884mmm         ENDM
00005E6C  4E4F                    9885mm         TRAP    #15         ; EXECUTE OUTPUT
00005E6E                          9886mm         
00005E6E  3212                    9887mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E70  E149                    9888mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E72  E949                    9889mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E74  E049                    9890mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E76  E849                    9891mm         LSR.W   #4, D1      
00005E78                          9892mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E78  0C01 0009               9893mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E7C  6E00 000A               9894mmm         BGT     ALPHA_813
00005E80  0601 0030               9895mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E84  6000 0006               9896mmm         BRA     DONE_813
00005E88  0601 0037               9897mmm ALPHA_813: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E8C  4E71                    9898mmm DONE_813: NOP
00005E8E                          9899mmm         ENDM
00005E8E  4E4F                    9900mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E90                          9901mm         ENDM 
00005E90  3605                    9902m         MOVE.W  D5, D3
00005E92  6000 0112               9903m         BRA     COMPLETE_762  
00005E96                          9904m ADRABSOLUTEL_762:  
00005E96  361A                    9905m         MOVE.W  (A2)+, D3
00005E98                          9906mm         PRINTSIGN
00005E98  103C 0006               9907mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E9C  323C 0024               9908mm         MOVE.W  #36, D1     ; AN = SIGN
00005EA0  4E4F                    9909mm         TRAP    #15         ; OUTPUT = SIGN
00005EA2                          9910mm         ENDM
00005EA2                          9911mm         ADROUT 
00005EA2  3212                    9912mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA4  E049                    9913mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA6  E849                    9914mm         LSR.W   #4, D1      
00005EA8                          9915mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA8  0C01 0009               9916mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EAC  6E00 000A               9917mmm         BGT     ALPHA_816
00005EB0  0601 0030               9918mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB4  6000 0006               9919mmm         BRA     DONE_816
00005EB8  0601 0037               9920mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EBC  4E71                    9921mmm DONE_816: NOP
00005EBE                          9922mmm         ENDM
00005EBE  4E4F                    9923mm         TRAP    #15         ; EXECUTE OUTPUT
00005EC0                          9924mm         
00005EC0  3212                    9925mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC2  E949                    9926mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005EC4  E049                    9927mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC6  E849                    9928mm         LSR.W   #4, D1      
00005EC8                          9929mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EC8  0C01 0009               9930mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECC  6E00 000A               9931mmm         BGT     ALPHA_817
00005ED0  0601 0030               9932mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED4  6000 0006               9933mmm         BRA     DONE_817
00005ED8  0601 0037               9934mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDC  4E71                    9935mmm DONE_817: NOP
00005EDE                          9936mmm         ENDM
00005EDE  4E4F                    9937mm         TRAP    #15         ; EXECUTE OUTPUT
00005EE0                          9938mm         
00005EE0  3212                    9939mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EE2  E149                    9940mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EE4  E049                    9941mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EE6  E849                    9942mm         LSR.W   #4, D1      
00005EE8                          9943mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EE8  0C01 0009               9944mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EEC  6E00 000A               9945mmm         BGT     ALPHA_818
00005EF0  0601 0030               9946mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EF4  6000 0006               9947mmm         BRA     DONE_818
00005EF8  0601 0037               9948mmm ALPHA_818: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EFC  4E71                    9949mmm DONE_818: NOP
00005EFE                          9950mmm         ENDM
00005EFE  4E4F                    9951mm         TRAP    #15         ; EXECUTE OUTPUT
00005F00                          9952mm         
00005F00  3212                    9953mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F02  E149                    9954mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F04  E949                    9955mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F06  E049                    9956mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F08  E849                    9957mm         LSR.W   #4, D1      
00005F0A                          9958mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F0A  0C01 0009               9959mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F0E  6E00 000A               9960mmm         BGT     ALPHA_819
00005F12  0601 0030               9961mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F16  6000 0006               9962mmm         BRA     DONE_819
00005F1A  0601 0037               9963mmm ALPHA_819: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F1E  4E71                    9964mmm DONE_819: NOP
00005F20                          9965mmm         ENDM
00005F20  4E4F                    9966mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F22                          9967mm         ENDM 
00005F22  361A                    9968m         MOVE.W  (A2)+, D3
00005F24                          9969mm         ADROUT
00005F24  3212                    9970mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F26  E049                    9971mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F28  E849                    9972mm         LSR.W   #4, D1      
00005F2A                          9973mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F2A  0C01 0009               9974mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F2E  6E00 000A               9975mmm         BGT     ALPHA_821
00005F32  0601 0030               9976mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F36  6000 0006               9977mmm         BRA     DONE_821
00005F3A  0601 0037               9978mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F3E  4E71                    9979mmm DONE_821: NOP
00005F40                          9980mmm         ENDM
00005F40  4E4F                    9981mm         TRAP    #15         ; EXECUTE OUTPUT
00005F42                          9982mm         
00005F42  3212                    9983mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F44  E949                    9984mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F46  E049                    9985mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F48  E849                    9986mm         LSR.W   #4, D1      
00005F4A                          9987mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F4A  0C01 0009               9988mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F4E  6E00 000A               9989mmm         BGT     ALPHA_822
00005F52  0601 0030               9990mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F56  6000 0006               9991mmm         BRA     DONE_822
00005F5A  0601 0037               9992mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F5E  4E71                    9993mmm DONE_822: NOP
00005F60                          9994mmm         ENDM
00005F60  4E4F                    9995mm         TRAP    #15         ; EXECUTE OUTPUT
00005F62                          9996mm         
00005F62  3212                    9997mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F64  E149                    9998mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F66  E049                    9999mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F68  E849                   10000mm         LSR.W   #4, D1      
00005F6A                         10001mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F6A  0C01 0009              10002mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F6E  6E00 000A              10003mmm         BGT     ALPHA_823
00005F72  0601 0030              10004mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F76  6000 0006              10005mmm         BRA     DONE_823
00005F7A  0601 0037              10006mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F7E  4E71                   10007mmm DONE_823: NOP
00005F80                         10008mmm         ENDM
00005F80  4E4F                   10009mm         TRAP    #15         ; EXECUTE OUTPUT
00005F82                         10010mm         
00005F82  3212                   10011mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F84  E149                   10012mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F86  E949                   10013mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F88  E049                   10014mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F8A  E849                   10015mm         LSR.W   #4, D1      
00005F8C                         10016mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F8C  0C01 0009              10017mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F90  6E00 000A              10018mmm         BGT     ALPHA_824
00005F94  0601 0030              10019mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F98  6000 0006              10020mmm         BRA     DONE_824
00005F9C  0601 0037              10021mmm ALPHA_824: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FA0  4E71                   10022mmm DONE_824: NOP
00005FA2                         10023mmm         ENDM
00005FA2  4E4F                   10024mm         TRAP    #15         ; EXECUTE OUTPUT       
00005FA4                         10025mm         ENDM 
00005FA4  3605                   10026m         MOVE.W  D5, D3
00005FA6                         10027m 
00005FA6                         10028m COMPLETE_762:  ; OPCODE HAS BEEN VERIFIED
00005FA6                         10029m         ENDM
00005FA6  4E75                   10030          RTS                 ; Return from decodeNOT subroutine
00005FA8                         10031  
00005FA8                         10032  ; ------------------------------------------------------------
00005FA8                         10033  ; 11a. "decodeLSx_M" subroutine
00005FA8                         10034  ; AUTHOR
00005FA8                         10035  ;
00005FA8                         10036  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
00005FA8                         10037  ; ------------------------------------------------------------
00005FA8                         10038  decodeLSx_M:
00005FA8                         10039m         verifyOpcode    pLSx_M, (A2)
00005FA8  43F8 017E              10040m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00005FAC  3612                   10041m         MOVE.W  (A2), D3      ; INPUT VALUE
00005FAE  123C 000F              10042m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00005FB2                         10043m         
00005FB2                         10044m LOOP_825: 
00005FB2  0C11 0030              10045m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00005FB6  6700 000E              10046m         BEQ     CHECKFOR0_825
00005FBA  0C11 0031              10047m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00005FBE  6700 0010              10048m         BEQ     CHECKFOR1_825
00005FC2  6000 0012              10049m         BRA     NEXT_825      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00005FC6                         10050m         
00005FC6                         10051m CHECKFOR0_825: 
00005FC6  0303                   10052m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00005FC8  6600 0B0C              10053m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00005FCC  6000 0008              10054m         BRA     NEXT_825
00005FD0                         10055m 
00005FD0                         10056m CHECKFOR1_825:
00005FD0  0303                   10057m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00005FD2  6700 0B02              10058m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00005FD6                         10059m 
00005FD6                         10060m NEXT_825: 
00005FD6  B23C 0000              10061m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00005FDA  6700 0008              10062m         BEQ     COMPLETE_825  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00005FDE  5301                   10063m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00005FE0  1819                   10064m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00005FE2  60CE                   10065m         BRA     LOOP_825      ; BEGIN LOOP AGAIN
00005FE4                         10066m 
00005FE4                         10067m COMPLETE_825:  ; OPCODE HAS BEEN VERIFIED
00005FE4                         10068m         ENDM
00005FE4  0803 0008              10069          BTST    #$08, D3     ; Check the 8th bit
00005FE8  6700 0010              10070          BEQ     LSR_M
00005FEC  43F8 008D              10071  LSL_M:  LEA     oLSL, A1
00005FF0  103C 000E              10072          MOVE.B  #14,D0          
00005FF4  4E4F                   10073          TRAP    #15 
00005FF6  6000 000C              10074          BRA     reg_M        
00005FFA                         10075    
00005FFA  43F8 0091              10076  LSR_M:  LEA     oLSR, A1
00005FFE  103C 000E              10077          MOVE.B  #14,D0          
00006002  4E4F                   10078          TRAP    #15      
00006004                         10079m reg_M:  printSizeLow       (A2) 
00006004  3612                   10080m         MOVE.W  (A2), D3      ; INPUT VALUE      
00006006                         10081m CHECKFORB_826: 
00006006  0803 0006              10082m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000600A  6600 0010              10083m         BNE     CHECKFORW_826  ; IF NOT GO TO WORD SIZE
0000600E  43F8 00B5              10084m         LEA     OBSIZE, A1     
00006012  103C 000E              10085m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006016  4E4F                   10086m         TRAP    #15
00006018  6000 0022              10087m         BRA     COMPLETE_826      
0000601C                         10088m CHECKFORW_826: 
0000601C  0803 0007              10089m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006020  6600 0010              10090m         BNE     CHECKFORL_826 ; IF NOT GO TO LONGWORD SIZE
00006024  43F8 00B9              10091m         LEA     OWSIZE, A1     
00006028  103C 000E              10092m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000602C  4E4F                   10093m         TRAP    #15
0000602E  6000 000C              10094m         BRA     COMPLETE_826  
00006032                         10095m CHECKFORL_826:
00006032  43F8 00BD              10096m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006036  103C 000E              10097m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000603A  4E4F                   10098m         TRAP    #15
0000603C                         10099m COMPLETE_826:  ; SIZE HAS BEEN PRINTED
0000603C                         10100m         ENDM
0000603C                         10101m         printCount       (A2)
0000603C  3212                   10102m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000603E  E949                   10103m         LSL     #$04, D1
00006040  E049                   10104m         LSR     #$08, D1
00006042  EA49                   10105m         LSR     #$05, D1
00006044  43F8 00D0              10106m         LEA     OHASH, A1     
00006048  103C 000E              10107m         MOVE.B  #14,D0          
0000604C  4E4F                   10108m         TRAP    #15
0000604E  103C 0003              10109m         MOVE.B  #3,D0          
00006052  4E4F                   10110m         TRAP    #15
00006054                         10111m         ENDM
00006054                         10112m         printComma
00006054  43F8 00C9              10113m         LEA     OCOMMA, A1     
00006058  103C 000E              10114m         MOVE.B  #14,D0          
0000605C  4E4F                   10115m         TRAP    #15
0000605E                         10116m         ENDM
0000605E                         10117m         printDnSrc     (A2)        
0000605E  4281                   10118m         CLR.L   D1
00006060  3212                   10119m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006062  E149                   10120m         LSL     #$08, D1
00006064  EB49                   10121m         LSL     #$05, D1
00006066  E049                   10122m         LSR     #$08, D1
00006068  EA49                   10123m         LSR     #$05, D1
0000606A  43F8 00C1              10124m         LEA     ODN, A1     
0000606E  103C 000E              10125m         MOVE.B  #14,D0          
00006072  4E4F                   10126m         TRAP    #15
00006074  103C 0003              10127m         MOVE.B  #3,D0          
00006078  4E4F                   10128m         TRAP    #15
0000607A                         10129m         ENDM
0000607A  4E75                   10130          RTS                 ; Return from decodeLSx_M subroutine
0000607C                         10131  
0000607C                         10132  
0000607C                         10133  ; ------------------------------------------------------------
0000607C                         10134  ; 11b. "decodeLSx_R" subroutine
0000607C                         10135  ; AUTHOR
0000607C                         10136  ;
0000607C                         10137  ; TODO: DESCRIPTION - LSL or LSR Register Shift
0000607C                         10138  ; ------------------------------------------------------------
0000607C                         10139  decodeLSx_R:
0000607C                         10140m         verifyOpcode    pLSx_R, (A2)
0000607C  43F8 018F              10141m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
00006080  3612                   10142m         MOVE.W  (A2), D3      ; INPUT VALUE
00006082  123C 000F              10143m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006086                         10144m         
00006086                         10145m LOOP_830: 
00006086  0C11 0030              10146m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000608A  6700 000E              10147m         BEQ     CHECKFOR0_830
0000608E  0C11 0031              10148m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006092  6700 0010              10149m         BEQ     CHECKFOR1_830
00006096  6000 0012              10150m         BRA     NEXT_830      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000609A                         10151m         
0000609A                         10152m CHECKFOR0_830: 
0000609A  0303                   10153m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000609C  6600 0A38              10154m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000060A0  6000 0008              10155m         BRA     NEXT_830
000060A4                         10156m 
000060A4                         10157m CHECKFOR1_830:
000060A4  0303                   10158m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000060A6  6700 0A2E              10159m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000060AA                         10160m 
000060AA                         10161m NEXT_830: 
000060AA  B23C 0000              10162m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000060AE  6700 0008              10163m         BEQ     COMPLETE_830  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000060B2  5301                   10164m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000060B4  1819                   10165m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000060B6  60CE                   10166m         BRA     LOOP_830      ; BEGIN LOOP AGAIN
000060B8                         10167m 
000060B8                         10168m COMPLETE_830:  ; OPCODE HAS BEEN VERIFIED
000060B8                         10169m         ENDM
000060B8  0803 0008              10170          BTST    #$08, D3     ; Check the 8th bit
000060BC  6700 0010              10171          BEQ     LSR_R
000060C0  43F8 008D              10172  LSL_R:  LEA     oLSL, A1
000060C4  103C 000E              10173          MOVE.B  #14,D0          
000060C8  4E4F                   10174          TRAP    #15 
000060CA  6000 000C              10175          BRA     reg_R       
000060CE                         10176    
000060CE  43F8 0091              10177  LSR_R:  LEA     oLSR, A1
000060D2  103C 000E              10178          MOVE.B  #14,D0          
000060D6  4E4F                   10179          TRAP    #15      
000060D8                         10180m reg_R:  printSizeLow       (A2)
000060D8  3612                   10181m         MOVE.W  (A2), D3      ; INPUT VALUE      
000060DA                         10182m CHECKFORB_831: 
000060DA  0803 0006              10183m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000060DE  6600 0010              10184m         BNE     CHECKFORW_831  ; IF NOT GO TO WORD SIZE
000060E2  43F8 00B5              10185m         LEA     OBSIZE, A1     
000060E6  103C 000E              10186m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000060EA  4E4F                   10187m         TRAP    #15
000060EC  6000 0022              10188m         BRA     COMPLETE_831      
000060F0                         10189m CHECKFORW_831: 
000060F0  0803 0007              10190m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000060F4  6600 0010              10191m         BNE     CHECKFORL_831 ; IF NOT GO TO LONGWORD SIZE
000060F8  43F8 00B9              10192m         LEA     OWSIZE, A1     
000060FC  103C 000E              10193m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006100  4E4F                   10194m         TRAP    #15
00006102  6000 000C              10195m         BRA     COMPLETE_831  
00006106                         10196m CHECKFORL_831:
00006106  43F8 00BD              10197m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000610A  103C 000E              10198m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000610E  4E4F                   10199m         TRAP    #15
00006110                         10200m COMPLETE_831:  ; SIZE HAS BEEN PRINTED
00006110                         10201m         ENDM
00006110                         10202m         printDnDest    (A2)
00006110  3212                   10203m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006112  E949                   10204m         LSL     #$04, D1
00006114  E049                   10205m         LSR     #$08, D1
00006116  EA49                   10206m         LSR     #$05, D1
00006118  43F8 00C1              10207m         LEA     ODN, A1     
0000611C  103C 000E              10208m         MOVE.B  #14,D0          
00006120  4E4F                   10209m         TRAP    #15
00006122  103C 0003              10210m         MOVE.B  #3,D0          
00006126  4E4F                   10211m         TRAP    #15
00006128                         10212m         ENDM
00006128                         10213m         printComma
00006128  43F8 00C9              10214m         LEA     OCOMMA, A1     
0000612C  103C 000E              10215m         MOVE.B  #14,D0          
00006130  4E4F                   10216m         TRAP    #15
00006132                         10217m         ENDM
00006132                         10218m         printDnSrc     (A2)
00006132  4281                   10219m         CLR.L   D1
00006134  3212                   10220m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006136  E149                   10221m         LSL     #$08, D1
00006138  EB49                   10222m         LSL     #$05, D1
0000613A  E049                   10223m         LSR     #$08, D1
0000613C  EA49                   10224m         LSR     #$05, D1
0000613E  43F8 00C1              10225m         LEA     ODN, A1     
00006142  103C 000E              10226m         MOVE.B  #14,D0          
00006146  4E4F                   10227m         TRAP    #15
00006148  103C 0003              10228m         MOVE.B  #3,D0          
0000614C  4E4F                   10229m         TRAP    #15
0000614E                         10230m         ENDM
0000614E  4E75                   10231          RTS                 ; Return from ddecodeLSx_R subroutine
00006150                         10232  
00006150                         10233  ; ------------------------------------------------------------
00006150                         10234  ; 11c. "decodeLSx_S" subroutine
00006150                         10235  ; AUTHOR
00006150                         10236  ;
00006150                         10237  ; TODO: DESCRIPTION - LSL or LSR Register Shift
00006150                         10238  ; ------------------------------------------------------------
00006150                         10239  decodeLSx_S:
00006150                         10240m         verifyOpcode    pLSx_S, (A2)
00006150  43F8 01A0              10241m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
00006154  3612                   10242m         MOVE.W  (A2), D3      ; INPUT VALUE
00006156  123C 000F              10243m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000615A                         10244m         
0000615A                         10245m LOOP_835: 
0000615A  0C11 0030              10246m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000615E  6700 000E              10247m         BEQ     CHECKFOR0_835
00006162  0C11 0031              10248m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006166  6700 0010              10249m         BEQ     CHECKFOR1_835
0000616A  6000 0012              10250m         BRA     NEXT_835      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000616E                         10251m         
0000616E                         10252m CHECKFOR0_835: 
0000616E  0303                   10253m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006170  6600 0964              10254m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006174  6000 0008              10255m         BRA     NEXT_835
00006178                         10256m 
00006178                         10257m CHECKFOR1_835:
00006178  0303                   10258m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000617A  6700 095A              10259m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000617E                         10260m 
0000617E                         10261m NEXT_835: 
0000617E  B23C 0000              10262m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006182  6700 0008              10263m         BEQ     COMPLETE_835  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006186  5301                   10264m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006188  1819                   10265m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000618A  60CE                   10266m         BRA     LOOP_835      ; BEGIN LOOP AGAIN
0000618C                         10267m 
0000618C                         10268m COMPLETE_835:  ; OPCODE HAS BEEN VERIFIED
0000618C                         10269m         ENDM
0000618C  4E75                   10270          RTS                 ; Return from ddecodeLSx_S subroutine
0000618E                         10271          
0000618E                         10272  ; ------------------------------------------------------------
0000618E                         10273  ; 12a. "decodeASx_M" subroutine
0000618E                         10274  ; AUTHOR
0000618E                         10275  ;
0000618E                         10276  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
0000618E                         10277  ; ------------------------------------------------------------
0000618E                         10278  decodeASx_M:
0000618E                         10279m         verifyOpcode    pASx_M, (A2)
0000618E  43F8 01B1              10280m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
00006192  3612                   10281m         MOVE.W  (A2), D3      ; INPUT VALUE
00006194  123C 000F              10282m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006198                         10283m         
00006198                         10284m LOOP_836: 
00006198  0C11 0030              10285m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000619C  6700 000E              10286m         BEQ     CHECKFOR0_836
000061A0  0C11 0031              10287m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000061A4  6700 0010              10288m         BEQ     CHECKFOR1_836
000061A8  6000 0012              10289m         BRA     NEXT_836      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000061AC                         10290m         
000061AC                         10291m CHECKFOR0_836: 
000061AC  0303                   10292m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000061AE  6600 0926              10293m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000061B2  6000 0008              10294m         BRA     NEXT_836
000061B6                         10295m 
000061B6                         10296m CHECKFOR1_836:
000061B6  0303                   10297m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000061B8  6700 091C              10298m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000061BC                         10299m 
000061BC                         10300m NEXT_836: 
000061BC  B23C 0000              10301m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000061C0  6700 0008              10302m         BEQ     COMPLETE_836  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000061C4  5301                   10303m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000061C6  1819                   10304m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000061C8  60CE                   10305m         BRA     LOOP_836      ; BEGIN LOOP AGAIN
000061CA                         10306m 
000061CA                         10307m COMPLETE_836:  ; OPCODE HAS BEEN VERIFIED
000061CA                         10308m         ENDM
000061CA  0803 0008              10309          BTST    #$08, D3     ; Check the 8th bit
000061CE  6700 0010              10310          BEQ     ASR_M
000061D2  43F8 0095              10311  ASL_M:  LEA     oASL, A1
000061D6  103C 000E              10312          MOVE.B  #14,D0          
000061DA  4E4F                   10313          TRAP    #15 
000061DC  6000 000C              10314          BRA     Areg_M        
000061E0                         10315    
000061E0  43F8 0099              10316  ASR_M:  LEA     oASR, A1
000061E4  103C 000E              10317          MOVE.B  #14,D0          
000061E8  4E4F                   10318          TRAP    #15      
000061EA                         10319m Areg_M: printSizeLow       (A2) 
000061EA  3612                   10320m         MOVE.W  (A2), D3      ; INPUT VALUE      
000061EC                         10321m CHECKFORB_837: 
000061EC  0803 0006              10322m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000061F0  6600 0010              10323m         BNE     CHECKFORW_837  ; IF NOT GO TO WORD SIZE
000061F4  43F8 00B5              10324m         LEA     OBSIZE, A1     
000061F8  103C 000E              10325m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000061FC  4E4F                   10326m         TRAP    #15
000061FE  6000 0022              10327m         BRA     COMPLETE_837      
00006202                         10328m CHECKFORW_837: 
00006202  0803 0007              10329m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006206  6600 0010              10330m         BNE     CHECKFORL_837 ; IF NOT GO TO LONGWORD SIZE
0000620A  43F8 00B9              10331m         LEA     OWSIZE, A1     
0000620E  103C 000E              10332m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006212  4E4F                   10333m         TRAP    #15
00006214  6000 000C              10334m         BRA     COMPLETE_837  
00006218                         10335m CHECKFORL_837:
00006218  43F8 00BD              10336m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000621C  103C 000E              10337m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006220  4E4F                   10338m         TRAP    #15
00006222                         10339m COMPLETE_837:  ; SIZE HAS BEEN PRINTED
00006222                         10340m         ENDM
00006222                         10341m         printCount       (A2)
00006222  3212                   10342m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006224  E949                   10343m         LSL     #$04, D1
00006226  E049                   10344m         LSR     #$08, D1
00006228  EA49                   10345m         LSR     #$05, D1
0000622A  43F8 00D0              10346m         LEA     OHASH, A1     
0000622E  103C 000E              10347m         MOVE.B  #14,D0          
00006232  4E4F                   10348m         TRAP    #15
00006234  103C 0003              10349m         MOVE.B  #3,D0          
00006238  4E4F                   10350m         TRAP    #15
0000623A                         10351m         ENDM
0000623A                         10352m         printComma
0000623A  43F8 00C9              10353m         LEA     OCOMMA, A1     
0000623E  103C 000E              10354m         MOVE.B  #14,D0          
00006242  4E4F                   10355m         TRAP    #15
00006244                         10356m         ENDM
00006244                         10357m         printDnSrc     (A2)          
00006244  4281                   10358m         CLR.L   D1
00006246  3212                   10359m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006248  E149                   10360m         LSL     #$08, D1
0000624A  EB49                   10361m         LSL     #$05, D1
0000624C  E049                   10362m         LSR     #$08, D1
0000624E  EA49                   10363m         LSR     #$05, D1
00006250  43F8 00C1              10364m         LEA     ODN, A1     
00006254  103C 000E              10365m         MOVE.B  #14,D0          
00006258  4E4F                   10366m         TRAP    #15
0000625A  103C 0003              10367m         MOVE.B  #3,D0          
0000625E  4E4F                   10368m         TRAP    #15
00006260                         10369m         ENDM
00006260  4E75                   10370          RTS                 ; Return from decodeASx_M subroutine
00006262                         10371  
00006262                         10372  
00006262                         10373  ; ------------------------------------------------------------
00006262                         10374  ; 12b. "decodeASx_R" subroutine
00006262                         10375  ; AUTHOR
00006262                         10376  ;
00006262                         10377  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006262                         10378  ; ------------------------------------------------------------
00006262                         10379  decodeASx_R:
00006262                         10380m         verifyOpcode    pASx_R, (A2)
00006262  43F8 01C2              10381m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
00006266  3612                   10382m         MOVE.W  (A2), D3      ; INPUT VALUE
00006268  123C 000F              10383m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000626C                         10384m         
0000626C                         10385m LOOP_841: 
0000626C  0C11 0030              10386m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006270  6700 000E              10387m         BEQ     CHECKFOR0_841
00006274  0C11 0031              10388m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006278  6700 0010              10389m         BEQ     CHECKFOR1_841
0000627C  6000 0012              10390m         BRA     NEXT_841      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006280                         10391m         
00006280                         10392m CHECKFOR0_841: 
00006280  0303                   10393m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006282  6600 0852              10394m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006286  6000 0008              10395m         BRA     NEXT_841
0000628A                         10396m 
0000628A                         10397m CHECKFOR1_841:
0000628A  0303                   10398m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000628C  6700 0848              10399m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006290                         10400m 
00006290                         10401m NEXT_841: 
00006290  B23C 0000              10402m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006294  6700 0008              10403m         BEQ     COMPLETE_841  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006298  5301                   10404m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000629A  1819                   10405m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000629C  60CE                   10406m         BRA     LOOP_841      ; BEGIN LOOP AGAIN
0000629E                         10407m 
0000629E                         10408m COMPLETE_841:  ; OPCODE HAS BEEN VERIFIED
0000629E                         10409m         ENDM
0000629E  0803 0008              10410          BTST    #$08, D3     ; Check the 8th bit
000062A2  6700 0010              10411          BEQ     ASR_R
000062A6  43F8 0095              10412  ASL_R:  LEA     oASL, A1
000062AA  103C 000E              10413          MOVE.B  #14,D0          
000062AE  4E4F                   10414          TRAP    #15 
000062B0  6000 000C              10415          BRA     Areg_R       
000062B4                         10416    
000062B4  43F8 0099              10417  ASR_R:  LEA     oASR, A1
000062B8  103C 000E              10418          MOVE.B  #14,D0          
000062BC  4E4F                   10419          TRAP    #15      
000062BE                         10420m Areg_R: printSizeLow       (A2)
000062BE  3612                   10421m         MOVE.W  (A2), D3      ; INPUT VALUE      
000062C0                         10422m CHECKFORB_842: 
000062C0  0803 0006              10423m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000062C4  6600 0010              10424m         BNE     CHECKFORW_842  ; IF NOT GO TO WORD SIZE
000062C8  43F8 00B5              10425m         LEA     OBSIZE, A1     
000062CC  103C 000E              10426m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062D0  4E4F                   10427m         TRAP    #15
000062D2  6000 0022              10428m         BRA     COMPLETE_842      
000062D6                         10429m CHECKFORW_842: 
000062D6  0803 0007              10430m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000062DA  6600 0010              10431m         BNE     CHECKFORL_842 ; IF NOT GO TO LONGWORD SIZE
000062DE  43F8 00B9              10432m         LEA     OWSIZE, A1     
000062E2  103C 000E              10433m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
000062E6  4E4F                   10434m         TRAP    #15
000062E8  6000 000C              10435m         BRA     COMPLETE_842  
000062EC                         10436m CHECKFORL_842:
000062EC  43F8 00BD              10437m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
000062F0  103C 000E              10438m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
000062F4  4E4F                   10439m         TRAP    #15
000062F6                         10440m COMPLETE_842:  ; SIZE HAS BEEN PRINTED
000062F6                         10441m         ENDM
000062F6                         10442m         printDnDest    (A2)
000062F6  3212                   10443m         MOVE.W  (A2), D1      ; BITS 9 TO 11
000062F8  E949                   10444m         LSL     #$04, D1
000062FA  E049                   10445m         LSR     #$08, D1
000062FC  EA49                   10446m         LSR     #$05, D1
000062FE  43F8 00C1              10447m         LEA     ODN, A1     
00006302  103C 000E              10448m         MOVE.B  #14,D0          
00006306  4E4F                   10449m         TRAP    #15
00006308  103C 0003              10450m         MOVE.B  #3,D0          
0000630C  4E4F                   10451m         TRAP    #15
0000630E                         10452m         ENDM
0000630E                         10453m         printComma
0000630E  43F8 00C9              10454m         LEA     OCOMMA, A1     
00006312  103C 000E              10455m         MOVE.B  #14,D0          
00006316  4E4F                   10456m         TRAP    #15
00006318                         10457m         ENDM
00006318                         10458m         printDnSrc     (A2)
00006318  4281                   10459m         CLR.L   D1
0000631A  3212                   10460m         MOVE.W  (A2), D1   ; BITS 0 TO 2
0000631C  E149                   10461m         LSL     #$08, D1
0000631E  EB49                   10462m         LSL     #$05, D1
00006320  E049                   10463m         LSR     #$08, D1
00006322  EA49                   10464m         LSR     #$05, D1
00006324  43F8 00C1              10465m         LEA     ODN, A1     
00006328  103C 000E              10466m         MOVE.B  #14,D0          
0000632C  4E4F                   10467m         TRAP    #15
0000632E  103C 0003              10468m         MOVE.B  #3,D0          
00006332  4E4F                   10469m         TRAP    #15
00006334                         10470m         ENDM
00006334  4E75                   10471          RTS                 ; Return from decodeASx_R subroutine
00006336                         10472          
00006336                         10473          ; ------------------------------------------------------------
00006336                         10474  ; 12c. "decodeASx_S" subroutine
00006336                         10475  ; AUTHOR
00006336                         10476  ;
00006336                         10477  ; TODO: DESCRIPTION - ASL or ASR Register Shift
00006336                         10478  ; ------------------------------------------------------------
00006336                         10479  decodeASx_S:
00006336                         10480m         verifyOpcode    pASx_S, (A2)
00006336  43F8 01D3              10481m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
0000633A  3612                   10482m         MOVE.W  (A2), D3      ; INPUT VALUE
0000633C  123C 000F              10483m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006340                         10484m         
00006340                         10485m LOOP_846: 
00006340  0C11 0030              10486m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006344  6700 000E              10487m         BEQ     CHECKFOR0_846
00006348  0C11 0031              10488m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000634C  6700 0010              10489m         BEQ     CHECKFOR1_846
00006350  6000 0012              10490m         BRA     NEXT_846      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006354                         10491m         
00006354                         10492m CHECKFOR0_846: 
00006354  0303                   10493m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006356  6600 077E              10494m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000635A  6000 0008              10495m         BRA     NEXT_846
0000635E                         10496m 
0000635E                         10497m CHECKFOR1_846:
0000635E  0303                   10498m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006360  6700 0774              10499m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006364                         10500m 
00006364                         10501m NEXT_846: 
00006364  B23C 0000              10502m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006368  6700 0008              10503m         BEQ     COMPLETE_846  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000636C  5301                   10504m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000636E  1819                   10505m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006370  60CE                   10506m         BRA     LOOP_846      ; BEGIN LOOP AGAIN
00006372                         10507m 
00006372                         10508m COMPLETE_846:  ; OPCODE HAS BEEN VERIFIED
00006372                         10509m         ENDM
00006372  4E75                   10510          RTS                 ; Return from decodeASx_S subroutine
00006374                         10511  
00006374                         10512  
00006374                         10513  ; ------------------------------------------------------------
00006374                         10514  ; 13a. "decodeBEQ" subroutine
00006374                         10515  ; AUTHOR
00006374                         10516  ;
00006374                         10517  ; TODO: DESCRIPTION
00006374                         10518  ; ------------------------------------------------------------
00006374                         10519  decodeBEQ:
00006374                         10520m         verifyOpcode    pBEQ, (A2)
00006374  43F8 01E4              10521m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
00006378  3612                   10522m         MOVE.W  (A2), D3      ; INPUT VALUE
0000637A  123C 000F              10523m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000637E                         10524m         
0000637E                         10525m LOOP_847: 
0000637E  0C11 0030              10526m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006382  6700 000E              10527m         BEQ     CHECKFOR0_847
00006386  0C11 0031              10528m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000638A  6700 0010              10529m         BEQ     CHECKFOR1_847
0000638E  6000 0012              10530m         BRA     NEXT_847      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006392                         10531m         
00006392                         10532m CHECKFOR0_847: 
00006392  0303                   10533m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006394  6600 0740              10534m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006398  6000 0008              10535m         BRA     NEXT_847
0000639C                         10536m 
0000639C                         10537m CHECKFOR1_847:
0000639C  0303                   10538m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000639E  6700 0736              10539m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063A2                         10540m 
000063A2                         10541m NEXT_847: 
000063A2  B23C 0000              10542m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063A6  6700 0008              10543m         BEQ     COMPLETE_847  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063AA  5301                   10544m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063AC  1819                   10545m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063AE  60CE                   10546m         BRA     LOOP_847      ; BEGIN LOOP AGAIN
000063B0                         10547m 
000063B0                         10548m COMPLETE_847:  ; OPCODE HAS BEEN VERIFIED
000063B0                         10549m         ENDM
000063B0                         10550          ; put code here
000063B0  4E75                   10551          RTS                 ; Return from decodeBEQ subroutine
000063B2                         10552  
000063B2                         10553  
000063B2                         10554  ; ------------------------------------------------------------
000063B2                         10555  ; 13b. "decodeBGE" subroutine
000063B2                         10556  ; AUTHOR
000063B2                         10557  ;
000063B2                         10558  ; TODO: DESCRIPTION
000063B2                         10559  ; ------------------------------------------------------------
000063B2                         10560  decodeBGE:
000063B2                         10561m         verifyOpcode    pBGE, (A2)
000063B2  43F8 01F5              10562m         LEA     PBGE, A1      ; INPUT PATTERN STRING
000063B6  3612                   10563m         MOVE.W  (A2), D3      ; INPUT VALUE
000063B8  123C 000F              10564m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063BC                         10565m         
000063BC                         10566m LOOP_848: 
000063BC  0C11 0030              10567m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063C0  6700 000E              10568m         BEQ     CHECKFOR0_848
000063C4  0C11 0031              10569m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063C8  6700 0010              10570m         BEQ     CHECKFOR1_848
000063CC  6000 0012              10571m         BRA     NEXT_848      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063D0                         10572m         
000063D0                         10573m CHECKFOR0_848: 
000063D0  0303                   10574m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063D2  6600 0702              10575m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063D6  6000 0008              10576m         BRA     NEXT_848
000063DA                         10577m 
000063DA                         10578m CHECKFOR1_848:
000063DA  0303                   10579m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000063DC  6700 06F8              10580m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063E0                         10581m 
000063E0                         10582m NEXT_848: 
000063E0  B23C 0000              10583m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063E4  6700 0008              10584m         BEQ     COMPLETE_848  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063E8  5301                   10585m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063EA  1819                   10586m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063EC  60CE                   10587m         BRA     LOOP_848      ; BEGIN LOOP AGAIN
000063EE                         10588m 
000063EE                         10589m COMPLETE_848:  ; OPCODE HAS BEEN VERIFIED
000063EE                         10590m         ENDM
000063EE                         10591          ; put code here
000063EE  4E75                   10592          RTS                 ; Return from decodeBGE subroutine
000063F0                         10593  
000063F0                         10594  
000063F0                         10595  ; ------------------------------------------------------------
000063F0                         10596  ; 13c. "decodeBLT" subroutine
000063F0                         10597  ; AUTHOR
000063F0                         10598  ;
000063F0                         10599  ; TODO: DESCRIPTION
000063F0                         10600  ; ------------------------------------------------------------
000063F0                         10601  decodeBLT:
000063F0                         10602m         verifyOpcode    pBLT, (A2)
000063F0  43F8 0206              10603m         LEA     PBLT, A1      ; INPUT PATTERN STRING
000063F4  3612                   10604m         MOVE.W  (A2), D3      ; INPUT VALUE
000063F6  123C 000F              10605m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063FA                         10606m         
000063FA                         10607m LOOP_849: 
000063FA  0C11 0030              10608m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063FE  6700 000E              10609m         BEQ     CHECKFOR0_849
00006402  0C11 0031              10610m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006406  6700 0010              10611m         BEQ     CHECKFOR1_849
0000640A  6000 0012              10612m         BRA     NEXT_849      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000640E                         10613m         
0000640E                         10614m CHECKFOR0_849: 
0000640E  0303                   10615m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006410  6600 06C4              10616m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006414  6000 0008              10617m         BRA     NEXT_849
00006418                         10618m 
00006418                         10619m CHECKFOR1_849:
00006418  0303                   10620m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000641A  6700 06BA              10621m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000641E                         10622m 
0000641E                         10623m NEXT_849: 
0000641E  B23C 0000              10624m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006422  6700 0008              10625m         BEQ     COMPLETE_849  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006426  5301                   10626m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006428  1819                   10627m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000642A  60CE                   10628m         BRA     LOOP_849      ; BEGIN LOOP AGAIN
0000642C                         10629m 
0000642C                         10630m COMPLETE_849:  ; OPCODE HAS BEEN VERIFIED
0000642C                         10631m         ENDM
0000642C                         10632          ; put code here
0000642C  4E75                   10633          RTS                 ; Return from decodeBLT subroutine
0000642E                         10634  
0000642E                         10635  
0000642E                         10636  ; ------------------------------------------------------------
0000642E                         10637  ; 14. "decodeJSR" subroutine
0000642E                         10638  ; AUTHOR
0000642E                         10639  ;
0000642E                         10640  ; TODO: DESCRIPTION
0000642E                         10641  ; ------------------------------------------------------------
0000642E                         10642  decodeJSR:
0000642E                         10643m         verifyOpcode    pJSR, (A2)
0000642E  43F8 0217              10644m         LEA     PJSR, A1      ; INPUT PATTERN STRING
00006432  3612                   10645m         MOVE.W  (A2), D3      ; INPUT VALUE
00006434  123C 000F              10646m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006438                         10647m         
00006438                         10648m LOOP_850: 
00006438  0C11 0030              10649m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000643C  6700 000E              10650m         BEQ     CHECKFOR0_850
00006440  0C11 0031              10651m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006444  6700 0010              10652m         BEQ     CHECKFOR1_850
00006448  6000 0012              10653m         BRA     NEXT_850      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000644C                         10654m         
0000644C                         10655m CHECKFOR0_850: 
0000644C  0303                   10656m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000644E  6600 0686              10657m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006452  6000 0008              10658m         BRA     NEXT_850
00006456                         10659m 
00006456                         10660m CHECKFOR1_850:
00006456  0303                   10661m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006458  6700 067C              10662m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000645C                         10663m 
0000645C                         10664m NEXT_850: 
0000645C  B23C 0000              10665m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006460  6700 0008              10666m         BEQ     COMPLETE_850  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006464  5301                   10667m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006466  1819                   10668m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006468  60CE                   10669m         BRA     LOOP_850      ; BEGIN LOOP AGAIN
0000646A                         10670m 
0000646A                         10671m COMPLETE_850:  ; OPCODE HAS BEEN VERIFIED
0000646A                         10672m         ENDM
0000646A  43F8 00A9              10673          LEA     oJSR, A1     
0000646E  103C 000E              10674          MOVE.B  #14,D0          
00006472  4E4F                   10675          TRAP    #15
00006474                         10676          
00006474  43F8 00D2              10677          LEA     oBlank, A1     
00006478  103C 000E              10678          MOVE.B  #14,D0          
0000647C  4E4F                   10679          TRAP    #15
0000647E                         10680  
0000647E                         10681m         prepareAdrMode  #$1, (A2)
0000647E  3C3C 0001              10682m         MOVE.W  #$1, D6      ; INPUT VALUE
00006482  3212                   10683m         MOVE.W  (A2), D1
00006484  BC3C 0001              10684m         CMP.B   #$01, D6
00006488  6700 000C              10685m         BEQ     ADRSOURCE_851    
0000648C                         10686m ADRDEST_851:
0000648C  EF49                   10687m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000648E  E049                   10688m         LSR     #$08, D1
00006490  EA49                   10689m         LSR     #$05, D1
00006492  6000 000A              10690m         BRA     COMPLETE_851 
00006496                         10691m ADRSOURCE_851:                
00006496  E149                   10692m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00006498  E549                   10693m         LSL     #$02, D1
0000649A  E049                   10694m         LSR     #$08, D1
0000649C  EA49                   10695m         LSR     #$05, D1
0000649E                         10696m COMPLETE_851:  ; OPCODE HAS BEEN VERIFIED
0000649E                         10697m         ENDM        
0000649E                         10698m         decodeAdrMode   (A2), D1        
0000649E  3612                   10699m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000064A0  3201                   10700m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000064A2                         10701m 
000064A2  B23C 0001              10702m         CMP.B   #$01, D1
000064A6  6700 0066              10703m         BEQ     ADRREGDIRECT_852    
000064AA  B23C 0002              10704m         CMP.B   #$02, D1
000064AE  6700 00A0              10705m         BEQ     ADRREGINDIRECT_852  
000064B2  B23C 0003              10706m         CMP.B   #$03, D1
000064B6  6700 0102              10707m         BEQ     ADRREGPOSTINC_852  
000064BA  B23C 0004              10708m         CMP.B   #$04, D1
000064BE  6700 0178              10709m         BEQ     ADRREGPREDEC_852
000064C2  B23C 0007              10710m         CMP.B   #$07, D1
000064C6  6700 01EE              10711m         BEQ     ADRABSOLUTE_852    
000064CA                         10712m         
000064CA                         10713m DATAREGDIRECT_852: 
000064CA  BC3C 0001              10714m         CMP.B   #$01, D6
000064CE  6700 001E              10715m         BEQ     DATAREGDIRECTSRC_852   
000064D2                         10716m DATAREGDIRECTDEST_852: 
000064D2                         10717mm         PRINTDNDEST D3 
000064D2  3203                   10718mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000064D4  E949                   10719mm         LSL     #$04, D1
000064D6  E049                   10720mm         LSR     #$08, D1
000064D8  EA49                   10721mm         LSR     #$05, D1
000064DA  43F8 00C1              10722mm         LEA     ODN, A1     
000064DE  103C 000E              10723mm         MOVE.B  #14,D0          
000064E2  4E4F                   10724mm         TRAP    #15
000064E4  103C 0003              10725mm         MOVE.B  #3,D0          
000064E8  4E4F                   10726mm         TRAP    #15
000064EA                         10727mm         ENDM
000064EA  6000 0562              10728m         BRA     COMPLETE_852 
000064EE                         10729m DATAREGDIRECTSRC_852: 
000064EE                         10730mm         PRINTDNSRC D3 
000064EE  4281                   10731mm         CLR.L   D1
000064F0  3203                   10732mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000064F2  E149                   10733mm         LSL     #$08, D1
000064F4  EB49                   10734mm         LSL     #$05, D1
000064F6  E049                   10735mm         LSR     #$08, D1
000064F8  EA49                   10736mm         LSR     #$05, D1
000064FA  43F8 00C1              10737mm         LEA     ODN, A1     
000064FE  103C 000E              10738mm         MOVE.B  #14,D0          
00006502  4E4F                   10739mm         TRAP    #15
00006504  103C 0003              10740mm         MOVE.B  #3,D0          
00006508  4E4F                   10741mm         TRAP    #15
0000650A                         10742mm         ENDM
0000650A  6000 0542              10743m         BRA     COMPLETE_852   
0000650E                         10744m         
0000650E                         10745m ADRREGDIRECT_852: 
0000650E  BC3C 0001              10746m         CMP.B   #$01, D6
00006512  6700 001E              10747m         BEQ     ADRREGDIRECTSRC_852   
00006516                         10748m ADRREGDIRECTDEST_852:
00006516                         10749mm         PRINTANDEST D3
00006516  3203                   10750mm         MOVE.W  D3, D1
00006518  E949                   10751mm         LSL     #$04, D1
0000651A  E049                   10752mm         LSR     #$08, D1
0000651C  EA49                   10753mm         LSR     #$05, D1
0000651E  43F8 00C3              10754mm         LEA     OAN, A1     
00006522  103C 000E              10755mm         MOVE.B  #14,D0          
00006526  4E4F                   10756mm         TRAP    #15
00006528  103C 0003              10757mm         MOVE.B  #3,D0          
0000652C  4E4F                   10758mm         TRAP    #15
0000652E                         10759mm         ENDM
0000652E  6000 051E              10760m         BRA     COMPLETE_852   
00006532                         10761m ADRREGDIRECTSRC_852:
00006532                         10762mm         PRINTANSRC D3
00006532  3203                   10763mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006534  E149                   10764mm         LSL     #$08, D1
00006536  EB49                   10765mm         LSL     #$05, D1
00006538  E049                   10766mm         LSR     #$08, D1
0000653A  EA49                   10767mm         LSR     #$05, D1
0000653C  43F8 00C3              10768mm         LEA     OAN, A1     
00006540  103C 000E              10769mm         MOVE.B  #14,D0          
00006544  4E4F                   10770mm         TRAP    #15
00006546  103C 0003              10771mm         MOVE.B  #3,D0          
0000654A  4E4F                   10772mm         TRAP    #15
0000654C                         10773mm         ENDM
0000654C  6000 0500              10774m         BRA     COMPLETE_852   
00006550                         10775m        
00006550                         10776m ADRREGINDIRECT_852:   
00006550  BC3C 0001              10777m         CMP.B   #$01, D6
00006554  6700 0032              10778m         BEQ     ADRREGINDIRECTSRC_852   
00006558                         10779m ADRREGINDIRECTDEST_852:
00006558                         10780mm         PRINTLB
00006558  43F8 00C5              10781mm         LEA     OLB, A1     
0000655C  103C 000E              10782mm         MOVE.B  #14,D0          
00006560  4E4F                   10783mm         TRAP    #15
00006562                         10784mm         ENDM
00006562                         10785mm         PRINTANDEST D3  
00006562  3203                   10786mm         MOVE.W  D3, D1
00006564  E949                   10787mm         LSL     #$04, D1
00006566  E049                   10788mm         LSR     #$08, D1
00006568  EA49                   10789mm         LSR     #$05, D1
0000656A  43F8 00C3              10790mm         LEA     OAN, A1     
0000656E  103C 000E              10791mm         MOVE.B  #14,D0          
00006572  4E4F                   10792mm         TRAP    #15
00006574  103C 0003              10793mm         MOVE.B  #3,D0          
00006578  4E4F                   10794mm         TRAP    #15
0000657A                         10795mm         ENDM
0000657A                         10796mm         PRINTRB
0000657A  43F8 00C7              10797mm         LEA     ORB, A1     
0000657E  103C 000E              10798mm         MOVE.B  #14,D0          
00006582  4E4F                   10799mm         TRAP    #15
00006584                         10800mm         ENDM
00006584  6000 04C8              10801m         BRA     COMPLETE_852     
00006588                         10802m ADRREGINDIRECTSRC_852:   
00006588                         10803mm         PRINTLB
00006588  43F8 00C5              10804mm         LEA     OLB, A1     
0000658C  103C 000E              10805mm         MOVE.B  #14,D0          
00006590  4E4F                   10806mm         TRAP    #15
00006592                         10807mm         ENDM
00006592                         10808mm         PRINTANSRC D3  
00006592  3203                   10809mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006594  E149                   10810mm         LSL     #$08, D1
00006596  EB49                   10811mm         LSL     #$05, D1
00006598  E049                   10812mm         LSR     #$08, D1
0000659A  EA49                   10813mm         LSR     #$05, D1
0000659C  43F8 00C3              10814mm         LEA     OAN, A1     
000065A0  103C 000E              10815mm         MOVE.B  #14,D0          
000065A4  4E4F                   10816mm         TRAP    #15
000065A6  103C 0003              10817mm         MOVE.B  #3,D0          
000065AA  4E4F                   10818mm         TRAP    #15
000065AC                         10819mm         ENDM
000065AC                         10820mm         PRINTRB
000065AC  43F8 00C7              10821mm         LEA     ORB, A1     
000065B0  103C 000E              10822mm         MOVE.B  #14,D0          
000065B4  4E4F                   10823mm         TRAP    #15
000065B6                         10824mm         ENDM
000065B6  6000 0496              10825m         BRA     COMPLETE_852   
000065BA                         10826m         
000065BA                         10827m ADRREGPOSTINC_852:   
000065BA  BC3C 0001              10828m         CMP.B   #$01, D6
000065BE  6700 003C              10829m         BEQ     ADRREGPOSTINCSRC_852   
000065C2                         10830m ADRREGPOSTINCDEST_852: 
000065C2                         10831mm         PRINTLB
000065C2  43F8 00C5              10832mm         LEA     OLB, A1     
000065C6  103C 000E              10833mm         MOVE.B  #14,D0          
000065CA  4E4F                   10834mm         TRAP    #15
000065CC                         10835mm         ENDM
000065CC                         10836mm         PRINTANDEST D3  
000065CC  3203                   10837mm         MOVE.W  D3, D1
000065CE  E949                   10838mm         LSL     #$04, D1
000065D0  E049                   10839mm         LSR     #$08, D1
000065D2  EA49                   10840mm         LSR     #$05, D1
000065D4  43F8 00C3              10841mm         LEA     OAN, A1     
000065D8  103C 000E              10842mm         MOVE.B  #14,D0          
000065DC  4E4F                   10843mm         TRAP    #15
000065DE  103C 0003              10844mm         MOVE.B  #3,D0          
000065E2  4E4F                   10845mm         TRAP    #15
000065E4                         10846mm         ENDM
000065E4                         10847mm         PRINTRB
000065E4  43F8 00C7              10848mm         LEA     ORB, A1     
000065E8  103C 000E              10849mm         MOVE.B  #14,D0          
000065EC  4E4F                   10850mm         TRAP    #15
000065EE                         10851mm         ENDM
000065EE                         10852mm         PRINTPI
000065EE  43F8 00CE              10853mm         LEA     OPSTINC, A1     
000065F2  103C 000E              10854mm         MOVE.B  #14,D0          
000065F6  4E4F                   10855mm         TRAP    #15
000065F8                         10856mm         ENDM
000065F8  6000 0454              10857m         BRA     COMPLETE_852  
000065FC                         10858m ADRREGPOSTINCSRC_852:           
000065FC                         10859mm         PRINTLB
000065FC  43F8 00C5              10860mm         LEA     OLB, A1     
00006600  103C 000E              10861mm         MOVE.B  #14,D0          
00006604  4E4F                   10862mm         TRAP    #15
00006606                         10863mm         ENDM
00006606                         10864mm         PRINTANSRC D3  
00006606  3203                   10865mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006608  E149                   10866mm         LSL     #$08, D1
0000660A  EB49                   10867mm         LSL     #$05, D1
0000660C  E049                   10868mm         LSR     #$08, D1
0000660E  EA49                   10869mm         LSR     #$05, D1
00006610  43F8 00C3              10870mm         LEA     OAN, A1     
00006614  103C 000E              10871mm         MOVE.B  #14,D0          
00006618  4E4F                   10872mm         TRAP    #15
0000661A  103C 0003              10873mm         MOVE.B  #3,D0          
0000661E  4E4F                   10874mm         TRAP    #15
00006620                         10875mm         ENDM
00006620                         10876mm         PRINTRB
00006620  43F8 00C7              10877mm         LEA     ORB, A1     
00006624  103C 000E              10878mm         MOVE.B  #14,D0          
00006628  4E4F                   10879mm         TRAP    #15
0000662A                         10880mm         ENDM
0000662A                         10881mm         PRINTPI
0000662A  43F8 00CE              10882mm         LEA     OPSTINC, A1     
0000662E  103C 000E              10883mm         MOVE.B  #14,D0          
00006632  4E4F                   10884mm         TRAP    #15
00006634                         10885mm         ENDM
00006634  6000 0418              10886m         BRA     COMPLETE_852  
00006638                         10887m ADRREGPREDEC_852: 
00006638  BC3C 0001              10888m         CMP.B   #$01, D6
0000663C  6700 003C              10889m         BEQ     ADRREGPREDECSRC_852   
00006640                         10890m ADRREGPREDECDEST_852:
00006640                         10891mm         PRINTPD  
00006640  43F8 00CC              10892mm         LEA     OPREDEC, A1     
00006644  103C 000E              10893mm         MOVE.B  #14,D0          
00006648  4E4F                   10894mm         TRAP    #15
0000664A                         10895mm         ENDM
0000664A                         10896mm         PRINTLB
0000664A  43F8 00C5              10897mm         LEA     OLB, A1     
0000664E  103C 000E              10898mm         MOVE.B  #14,D0          
00006652  4E4F                   10899mm         TRAP    #15
00006654                         10900mm         ENDM
00006654                         10901mm         PRINTANDEST D3  
00006654  3203                   10902mm         MOVE.W  D3, D1
00006656  E949                   10903mm         LSL     #$04, D1
00006658  E049                   10904mm         LSR     #$08, D1
0000665A  EA49                   10905mm         LSR     #$05, D1
0000665C  43F8 00C3              10906mm         LEA     OAN, A1     
00006660  103C 000E              10907mm         MOVE.B  #14,D0          
00006664  4E4F                   10908mm         TRAP    #15
00006666  103C 0003              10909mm         MOVE.B  #3,D0          
0000666A  4E4F                   10910mm         TRAP    #15
0000666C                         10911mm         ENDM
0000666C                         10912mm         PRINTRB
0000666C  43F8 00C7              10913mm         LEA     ORB, A1     
00006670  103C 000E              10914mm         MOVE.B  #14,D0          
00006674  4E4F                   10915mm         TRAP    #15
00006676                         10916mm         ENDM
00006676  6000 03D6              10917m         BRA     COMPLETE_852   
0000667A                         10918m ADRREGPREDECSRC_852: 
0000667A                         10919mm         PRINTPD  
0000667A  43F8 00CC              10920mm         LEA     OPREDEC, A1     
0000667E  103C 000E              10921mm         MOVE.B  #14,D0          
00006682  4E4F                   10922mm         TRAP    #15
00006684                         10923mm         ENDM
00006684                         10924mm         PRINTLB
00006684  43F8 00C5              10925mm         LEA     OLB, A1     
00006688  103C 000E              10926mm         MOVE.B  #14,D0          
0000668C  4E4F                   10927mm         TRAP    #15
0000668E                         10928mm         ENDM
0000668E                         10929mm         PRINTANSRC D3  
0000668E  3203                   10930mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006690  E149                   10931mm         LSL     #$08, D1
00006692  EB49                   10932mm         LSL     #$05, D1
00006694  E049                   10933mm         LSR     #$08, D1
00006696  EA49                   10934mm         LSR     #$05, D1
00006698  43F8 00C3              10935mm         LEA     OAN, A1     
0000669C  103C 000E              10936mm         MOVE.B  #14,D0          
000066A0  4E4F                   10937mm         TRAP    #15
000066A2  103C 0003              10938mm         MOVE.B  #3,D0          
000066A6  4E4F                   10939mm         TRAP    #15
000066A8                         10940mm         ENDM
000066A8                         10941mm         PRINTRB
000066A8  43F8 00C7              10942mm         LEA     ORB, A1     
000066AC  103C 000E              10943mm         MOVE.B  #14,D0          
000066B0  4E4F                   10944mm         TRAP    #15
000066B2                         10945mm         ENDM
000066B2  6000 039A              10946m         BRA     COMPLETE_852
000066B6                         10947m        
000066B6                         10948m ADRABSOLUTE_852:
000066B6  BC3C 0001              10949m         CMP.B   #$01, D6
000066BA  6600 0018              10950m         BNE     ADRABSOLUTEDST_852 
000066BE                         10951m         
000066BE  3A03                   10952m         MOVE.W  D3, D5
000066C0  0803 0002              10953m         BTST    #2, D3
000066C4  6600 0024              10954m         BNE     ADRIMMEDIATE_852
000066C8  0803 0000              10955m         BTST    #0, D3
000066CC  6600 0270              10956m         BNE     ADRABSOLUTEL_852
000066D0  6000 01DA              10957m         BRA     ADRABSOLUTEW_852
000066D4                         10958m ADRABSOLUTEDST_852:
000066D4  3A03                   10959m         MOVE.W  D3, D5
000066D6  0803 000B              10960m         BTST    #$B, D3
000066DA  6600 000E              10961m         BNE     ADRIMMEDIATE_852
000066DE  0803 0009              10962m         BTST    #$09, D3
000066E2  6600 025A              10963m         BNE     ADRABSOLUTEL_852
000066E6  6000 01C4              10964m         BRA     ADRABSOLUTEW_852
000066EA                         10965m ADRIMMEDIATE_852:
000066EA  BE3C 0001              10966m         CMP.B   #1, D7
000066EE  6700 009E              10967m         BEQ     ADRIMMEDIATEL_852
000066F2                         10968m ADRIMMEDIATEW_852:
000066F2  361A                   10969m         MOVE.W  (A2)+, D3
000066F4                         10970mm         PRINTHASH
000066F4  103C 0006              10971mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000066F8  323C 0023              10972mm         MOVE.W  #35, D1     ; AN = SIGN
000066FC  4E4F                   10973mm         TRAP    #15         ; OUTPUT = SIGN
000066FE                         10974mm         ENDM
000066FE                         10975mm         PRINTSIGN
000066FE  103C 0006              10976mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006702  323C 0024              10977mm         MOVE.W  #36, D1     ; AN = SIGN
00006706  4E4F                   10978mm         TRAP    #15         ; OUTPUT = SIGN
00006708                         10979mm         ENDM
00006708                         10980mm         ADROUT
00006708  3212                   10981mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000670A  E049                   10982mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000670C  E849                   10983mm         LSR.W   #4, D1      
0000670E                         10984mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000670E  0C01 0009              10985mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006712  6E00 000A              10986mmm         BGT     ALPHA_882
00006716  0601 0030              10987mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000671A  6000 0006              10988mmm         BRA     DONE_882
0000671E  0601 0037              10989mmm ALPHA_882: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006722  4E71                   10990mmm DONE_882: NOP
00006724                         10991mmm         ENDM
00006724  4E4F                   10992mm         TRAP    #15         ; EXECUTE OUTPUT
00006726                         10993mm         
00006726  3212                   10994mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006728  E949                   10995mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000672A  E049                   10996mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000672C  E849                   10997mm         LSR.W   #4, D1      
0000672E                         10998mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000672E  0C01 0009              10999mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006732  6E00 000A              11000mmm         BGT     ALPHA_883
00006736  0601 0030              11001mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000673A  6000 0006              11002mmm         BRA     DONE_883
0000673E  0601 0037              11003mmm ALPHA_883: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006742  4E71                   11004mmm DONE_883: NOP
00006744                         11005mmm         ENDM
00006744  4E4F                   11006mm         TRAP    #15         ; EXECUTE OUTPUT
00006746                         11007mm         
00006746  3212                   11008mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006748  E149                   11009mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000674A  E049                   11010mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000674C  E849                   11011mm         LSR.W   #4, D1      
0000674E                         11012mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000674E  0C01 0009              11013mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006752  6E00 000A              11014mmm         BGT     ALPHA_884
00006756  0601 0030              11015mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000675A  6000 0006              11016mmm         BRA     DONE_884
0000675E  0601 0037              11017mmm ALPHA_884: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006762  4E71                   11018mmm DONE_884: NOP
00006764                         11019mmm         ENDM
00006764  4E4F                   11020mm         TRAP    #15         ; EXECUTE OUTPUT
00006766                         11021mm         
00006766  3212                   11022mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006768  E149                   11023mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000676A  E949                   11024mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000676C  E049                   11025mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000676E  E849                   11026mm         LSR.W   #4, D1      
00006770                         11027mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006770  0C01 0009              11028mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006774  6E00 000A              11029mmm         BGT     ALPHA_885
00006778  0601 0030              11030mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000677C  6000 0006              11031mmm         BRA     DONE_885
00006780  0601 0037              11032mmm ALPHA_885: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006784  4E71                   11033mmm DONE_885: NOP
00006786                         11034mmm         ENDM
00006786  4E4F                   11035mm         TRAP    #15         ; EXECUTE OUTPUT       
00006788                         11036mm         ENDM 
00006788  3605                   11037m         MOVE.W  D5, D3
0000678A  6000 02C2              11038m         BRA     COMPLETE_852
0000678E                         11039m ADRIMMEDIATEL_852:
0000678E  361A                   11040m         MOVE.W  (A2)+, D3
00006790                         11041mm         PRINTHASH
00006790  103C 0006              11042mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006794  323C 0023              11043mm         MOVE.W  #35, D1     ; AN = SIGN
00006798  4E4F                   11044mm         TRAP    #15         ; OUTPUT = SIGN
0000679A                         11045mm         ENDM
0000679A                         11046mm         PRINTSIGN
0000679A  103C 0006              11047mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000679E  323C 0024              11048mm         MOVE.W  #36, D1     ; AN = SIGN
000067A2  4E4F                   11049mm         TRAP    #15         ; OUTPUT = SIGN
000067A4                         11050mm         ENDM
000067A4                         11051mm         ADROUT 
000067A4  3212                   11052mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067A6  E049                   11053mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067A8  E849                   11054mm         LSR.W   #4, D1      
000067AA                         11055mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067AA  0C01 0009              11056mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067AE  6E00 000A              11057mmm         BGT     ALPHA_889
000067B2  0601 0030              11058mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067B6  6000 0006              11059mmm         BRA     DONE_889
000067BA  0601 0037              11060mmm ALPHA_889: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067BE  4E71                   11061mmm DONE_889: NOP
000067C0                         11062mmm         ENDM
000067C0  4E4F                   11063mm         TRAP    #15         ; EXECUTE OUTPUT
000067C2                         11064mm         
000067C2  3212                   11065mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067C4  E949                   11066mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000067C6  E049                   11067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067C8  E849                   11068mm         LSR.W   #4, D1      
000067CA                         11069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067CA  0C01 0009              11070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067CE  6E00 000A              11071mmm         BGT     ALPHA_890
000067D2  0601 0030              11072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067D6  6000 0006              11073mmm         BRA     DONE_890
000067DA  0601 0037              11074mmm ALPHA_890: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067DE  4E71                   11075mmm DONE_890: NOP
000067E0                         11076mmm         ENDM
000067E0  4E4F                   11077mm         TRAP    #15         ; EXECUTE OUTPUT
000067E2                         11078mm         
000067E2  3212                   11079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000067E4  E149                   11080mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000067E6  E049                   11081mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000067E8  E849                   11082mm         LSR.W   #4, D1      
000067EA                         11083mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000067EA  0C01 0009              11084mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000067EE  6E00 000A              11085mmm         BGT     ALPHA_891
000067F2  0601 0030              11086mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000067F6  6000 0006              11087mmm         BRA     DONE_891
000067FA  0601 0037              11088mmm ALPHA_891: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000067FE  4E71                   11089mmm DONE_891: NOP
00006800                         11090mmm         ENDM
00006800  4E4F                   11091mm         TRAP    #15         ; EXECUTE OUTPUT
00006802                         11092mm         
00006802  3212                   11093mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006804  E149                   11094mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006806  E949                   11095mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006808  E049                   11096mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000680A  E849                   11097mm         LSR.W   #4, D1      
0000680C                         11098mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000680C  0C01 0009              11099mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006810  6E00 000A              11100mmm         BGT     ALPHA_892
00006814  0601 0030              11101mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006818  6000 0006              11102mmm         BRA     DONE_892
0000681C  0601 0037              11103mmm ALPHA_892: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006820  4E71                   11104mmm DONE_892: NOP
00006822                         11105mmm         ENDM
00006822  4E4F                   11106mm         TRAP    #15         ; EXECUTE OUTPUT       
00006824                         11107mm         ENDM 
00006824  361A                   11108m         MOVE.W  (A2)+, D3
00006826                         11109mm         ADROUT
00006826  3212                   11110mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006828  E049                   11111mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000682A  E849                   11112mm         LSR.W   #4, D1      
0000682C                         11113mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000682C  0C01 0009              11114mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006830  6E00 000A              11115mmm         BGT     ALPHA_894
00006834  0601 0030              11116mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006838  6000 0006              11117mmm         BRA     DONE_894
0000683C  0601 0037              11118mmm ALPHA_894: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006840  4E71                   11119mmm DONE_894: NOP
00006842                         11120mmm         ENDM
00006842  4E4F                   11121mm         TRAP    #15         ; EXECUTE OUTPUT
00006844                         11122mm         
00006844  3212                   11123mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006846  E949                   11124mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006848  E049                   11125mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000684A  E849                   11126mm         LSR.W   #4, D1      
0000684C                         11127mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000684C  0C01 0009              11128mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006850  6E00 000A              11129mmm         BGT     ALPHA_895
00006854  0601 0030              11130mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006858  6000 0006              11131mmm         BRA     DONE_895
0000685C  0601 0037              11132mmm ALPHA_895: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006860  4E71                   11133mmm DONE_895: NOP
00006862                         11134mmm         ENDM
00006862  4E4F                   11135mm         TRAP    #15         ; EXECUTE OUTPUT
00006864                         11136mm         
00006864  3212                   11137mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006866  E149                   11138mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006868  E049                   11139mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000686A  E849                   11140mm         LSR.W   #4, D1      
0000686C                         11141mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000686C  0C01 0009              11142mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006870  6E00 000A              11143mmm         BGT     ALPHA_896
00006874  0601 0030              11144mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006878  6000 0006              11145mmm         BRA     DONE_896
0000687C  0601 0037              11146mmm ALPHA_896: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006880  4E71                   11147mmm DONE_896: NOP
00006882                         11148mmm         ENDM
00006882  4E4F                   11149mm         TRAP    #15         ; EXECUTE OUTPUT
00006884                         11150mm         
00006884  3212                   11151mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006886  E149                   11152mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006888  E949                   11153mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000688A  E049                   11154mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000688C  E849                   11155mm         LSR.W   #4, D1      
0000688E                         11156mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000688E  0C01 0009              11157mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006892  6E00 000A              11158mmm         BGT     ALPHA_897
00006896  0601 0030              11159mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000689A  6000 0006              11160mmm         BRA     DONE_897
0000689E  0601 0037              11161mmm ALPHA_897: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068A2  4E71                   11162mmm DONE_897: NOP
000068A4                         11163mmm         ENDM
000068A4  4E4F                   11164mm         TRAP    #15         ; EXECUTE OUTPUT       
000068A6                         11165mm         ENDM 
000068A6  3605                   11166m         MOVE.W  D5, D3
000068A8  6000 01A4              11167m         BRA     COMPLETE_852 
000068AC                         11168m ADRABSOLUTEW_852:     
000068AC  361A                   11169m         MOVE.W  (A2)+, D3
000068AE                         11170mm         PRINTSIGN
000068AE  103C 0006              11171mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000068B2  323C 0024              11172mm         MOVE.W  #36, D1     ; AN = SIGN
000068B6  4E4F                   11173mm         TRAP    #15         ; OUTPUT = SIGN
000068B8                         11174mm         ENDM
000068B8                         11175mm         ADROUT
000068B8  3212                   11176mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068BA  E049                   11177mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068BC  E849                   11178mm         LSR.W   #4, D1      
000068BE                         11179mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068BE  0C01 0009              11180mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068C2  6E00 000A              11181mmm         BGT     ALPHA_900
000068C6  0601 0030              11182mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068CA  6000 0006              11183mmm         BRA     DONE_900
000068CE  0601 0037              11184mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068D2  4E71                   11185mmm DONE_900: NOP
000068D4                         11186mmm         ENDM
000068D4  4E4F                   11187mm         TRAP    #15         ; EXECUTE OUTPUT
000068D6                         11188mm         
000068D6  3212                   11189mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068D8  E949                   11190mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000068DA  E049                   11191mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068DC  E849                   11192mm         LSR.W   #4, D1      
000068DE                         11193mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068DE  0C01 0009              11194mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068E2  6E00 000A              11195mmm         BGT     ALPHA_901
000068E6  0601 0030              11196mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068EA  6000 0006              11197mmm         BRA     DONE_901
000068EE  0601 0037              11198mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068F2  4E71                   11199mmm DONE_901: NOP
000068F4                         11200mmm         ENDM
000068F4  4E4F                   11201mm         TRAP    #15         ; EXECUTE OUTPUT
000068F6                         11202mm         
000068F6  3212                   11203mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068F8  E149                   11204mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000068FA  E049                   11205mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068FC  E849                   11206mm         LSR.W   #4, D1      
000068FE                         11207mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068FE  0C01 0009              11208mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006902  6E00 000A              11209mmm         BGT     ALPHA_902
00006906  0601 0030              11210mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000690A  6000 0006              11211mmm         BRA     DONE_902
0000690E  0601 0037              11212mmm ALPHA_902: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006912  4E71                   11213mmm DONE_902: NOP
00006914                         11214mmm         ENDM
00006914  4E4F                   11215mm         TRAP    #15         ; EXECUTE OUTPUT
00006916                         11216mm         
00006916  3212                   11217mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006918  E149                   11218mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000691A  E949                   11219mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000691C  E049                   11220mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000691E  E849                   11221mm         LSR.W   #4, D1      
00006920                         11222mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006920  0C01 0009              11223mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006924  6E00 000A              11224mmm         BGT     ALPHA_903
00006928  0601 0030              11225mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000692C  6000 0006              11226mmm         BRA     DONE_903
00006930  0601 0037              11227mmm ALPHA_903: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006934  4E71                   11228mmm DONE_903: NOP
00006936                         11229mmm         ENDM
00006936  4E4F                   11230mm         TRAP    #15         ; EXECUTE OUTPUT       
00006938                         11231mm         ENDM 
00006938  3605                   11232m         MOVE.W  D5, D3
0000693A  6000 0112              11233m         BRA     COMPLETE_852  
0000693E                         11234m ADRABSOLUTEL_852:  
0000693E  361A                   11235m         MOVE.W  (A2)+, D3
00006940                         11236mm         PRINTSIGN
00006940  103C 0006              11237mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006944  323C 0024              11238mm         MOVE.W  #36, D1     ; AN = SIGN
00006948  4E4F                   11239mm         TRAP    #15         ; OUTPUT = SIGN
0000694A                         11240mm         ENDM
0000694A                         11241mm         ADROUT 
0000694A  3212                   11242mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000694C  E049                   11243mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000694E  E849                   11244mm         LSR.W   #4, D1      
00006950                         11245mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006950  0C01 0009              11246mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006954  6E00 000A              11247mmm         BGT     ALPHA_906
00006958  0601 0030              11248mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000695C  6000 0006              11249mmm         BRA     DONE_906
00006960  0601 0037              11250mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006964  4E71                   11251mmm DONE_906: NOP
00006966                         11252mmm         ENDM
00006966  4E4F                   11253mm         TRAP    #15         ; EXECUTE OUTPUT
00006968                         11254mm         
00006968  3212                   11255mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000696A  E949                   11256mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000696C  E049                   11257mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000696E  E849                   11258mm         LSR.W   #4, D1      
00006970                         11259mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006970  0C01 0009              11260mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006974  6E00 000A              11261mmm         BGT     ALPHA_907
00006978  0601 0030              11262mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000697C  6000 0006              11263mmm         BRA     DONE_907
00006980  0601 0037              11264mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006984  4E71                   11265mmm DONE_907: NOP
00006986                         11266mmm         ENDM
00006986  4E4F                   11267mm         TRAP    #15         ; EXECUTE OUTPUT
00006988                         11268mm         
00006988  3212                   11269mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000698A  E149                   11270mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000698C  E049                   11271mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000698E  E849                   11272mm         LSR.W   #4, D1      
00006990                         11273mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006990  0C01 0009              11274mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006994  6E00 000A              11275mmm         BGT     ALPHA_908
00006998  0601 0030              11276mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000699C  6000 0006              11277mmm         BRA     DONE_908
000069A0  0601 0037              11278mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069A4  4E71                   11279mmm DONE_908: NOP
000069A6                         11280mmm         ENDM
000069A6  4E4F                   11281mm         TRAP    #15         ; EXECUTE OUTPUT
000069A8                         11282mm         
000069A8  3212                   11283mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069AA  E149                   11284mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069AC  E949                   11285mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069AE  E049                   11286mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069B0  E849                   11287mm         LSR.W   #4, D1      
000069B2                         11288mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069B2  0C01 0009              11289mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069B6  6E00 000A              11290mmm         BGT     ALPHA_909
000069BA  0601 0030              11291mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069BE  6000 0006              11292mmm         BRA     DONE_909
000069C2  0601 0037              11293mmm ALPHA_909: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069C6  4E71                   11294mmm DONE_909: NOP
000069C8                         11295mmm         ENDM
000069C8  4E4F                   11296mm         TRAP    #15         ; EXECUTE OUTPUT       
000069CA                         11297mm         ENDM 
000069CA  361A                   11298m         MOVE.W  (A2)+, D3
000069CC                         11299mm         ADROUT
000069CC  3212                   11300mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069CE  E049                   11301mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069D0  E849                   11302mm         LSR.W   #4, D1      
000069D2                         11303mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069D2  0C01 0009              11304mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069D6  6E00 000A              11305mmm         BGT     ALPHA_911
000069DA  0601 0030              11306mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069DE  6000 0006              11307mmm         BRA     DONE_911
000069E2  0601 0037              11308mmm ALPHA_911: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069E6  4E71                   11309mmm DONE_911: NOP
000069E8                         11310mmm         ENDM
000069E8  4E4F                   11311mm         TRAP    #15         ; EXECUTE OUTPUT
000069EA                         11312mm         
000069EA  3212                   11313mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069EC  E949                   11314mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000069EE  E049                   11315mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069F0  E849                   11316mm         LSR.W   #4, D1      
000069F2                         11317mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069F2  0C01 0009              11318mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069F6  6E00 000A              11319mmm         BGT     ALPHA_912
000069FA  0601 0030              11320mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069FE  6000 0006              11321mmm         BRA     DONE_912
00006A02  0601 0037              11322mmm ALPHA_912: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A06  4E71                   11323mmm DONE_912: NOP
00006A08                         11324mmm         ENDM
00006A08  4E4F                   11325mm         TRAP    #15         ; EXECUTE OUTPUT
00006A0A                         11326mm         
00006A0A  3212                   11327mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A0C  E149                   11328mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A0E  E049                   11329mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A10  E849                   11330mm         LSR.W   #4, D1      
00006A12                         11331mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A12  0C01 0009              11332mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A16  6E00 000A              11333mmm         BGT     ALPHA_913
00006A1A  0601 0030              11334mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A1E  6000 0006              11335mmm         BRA     DONE_913
00006A22  0601 0037              11336mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A26  4E71                   11337mmm DONE_913: NOP
00006A28                         11338mmm         ENDM
00006A28  4E4F                   11339mm         TRAP    #15         ; EXECUTE OUTPUT
00006A2A                         11340mm         
00006A2A  3212                   11341mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A2C  E149                   11342mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A2E  E949                   11343mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A30  E049                   11344mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A32  E849                   11345mm         LSR.W   #4, D1      
00006A34                         11346mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A34  0C01 0009              11347mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A38  6E00 000A              11348mmm         BGT     ALPHA_914
00006A3C  0601 0030              11349mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A40  6000 0006              11350mmm         BRA     DONE_914
00006A44  0601 0037              11351mmm ALPHA_914: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A48  4E71                   11352mmm DONE_914: NOP
00006A4A                         11353mmm         ENDM
00006A4A  4E4F                   11354mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A4C                         11355mm         ENDM 
00006A4C  3605                   11356m         MOVE.W  D5, D3
00006A4E                         11357m 
00006A4E                         11358m COMPLETE_852:  ; OPCODE HAS BEEN VERIFIED
00006A4E                         11359m         ENDM
00006A4E  4E75                   11360          RTS                 ; Return from decodeJSR subroutine
00006A50                         11361  
00006A50                         11362  
00006A50                         11363  ; ------------------------------------------------------------
00006A50                         11364  ; 15. "decodeRTS" subroutine
00006A50                         11365  ; AUTHOR
00006A50                         11366  ;
00006A50                         11367  ; TODO: DESCRIPTION
00006A50                         11368  ; ------------------------------------------------------------
00006A50                         11369  decodeRTS:
00006A50                         11370m         verifyOpcode    pRTS, (A2)
00006A50  43F8 0228              11371m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006A54  3612                   11372m         MOVE.W  (A2), D3      ; INPUT VALUE
00006A56  123C 000F              11373m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006A5A                         11374m         
00006A5A                         11375m LOOP_915: 
00006A5A  0C11 0030              11376m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006A5E  6700 000E              11377m         BEQ     CHECKFOR0_915
00006A62  0C11 0031              11378m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006A66  6700 0010              11379m         BEQ     CHECKFOR1_915
00006A6A  6000 0012              11380m         BRA     NEXT_915      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006A6E                         11381m         
00006A6E                         11382m CHECKFOR0_915: 
00006A6E  0303                   11383m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006A70  6600 0064              11384m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006A74  6000 0008              11385m         BRA     NEXT_915
00006A78                         11386m 
00006A78                         11387m CHECKFOR1_915:
00006A78  0303                   11388m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006A7A  6700 005A              11389m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006A7E                         11390m 
00006A7E                         11391m NEXT_915: 
00006A7E  B23C 0000              11392m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006A82  6700 0008              11393m         BEQ     COMPLETE_915  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006A86  5301                   11394m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006A88  1819                   11395m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006A8A  60CE                   11396m         BRA     LOOP_915      ; BEGIN LOOP AGAIN
00006A8C                         11397m 
00006A8C                         11398m COMPLETE_915:  ; OPCODE HAS BEEN VERIFIED
00006A8C                         11399m         ENDM
00006A8C  43F8 00AD              11400          LEA     oRTS, A1     
00006A90  103C 000E              11401          MOVE.B  #14,D0          
00006A94  4E4F                   11402          TRAP    #15
00006A96  4E75                   11403          RTS                 ; Return from decodeRTS subroutine
00006A98                         11404  
00006A98                         11405  
00006A98                         11406  ; ------------------------------------------------------------
00006A98                         11407  ; 16. "decodeBRA" subroutine
00006A98                         11408  ; AUTHOR
00006A98                         11409  ;
00006A98                         11410  ; TODO: DESCRIPTION
00006A98                         11411  ; ------------------------------------------------------------
00006A98                         11412  decodeBRA:
00006A98                         11413m         verifyOpcode    pBRA, (A2)
00006A98  43F8 0239              11414m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006A9C  3612                   11415m         MOVE.W  (A2), D3      ; INPUT VALUE
00006A9E  123C 000F              11416m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006AA2                         11417m         
00006AA2                         11418m LOOP_916: 
00006AA2  0C11 0030              11419m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006AA6  6700 000E              11420m         BEQ     CHECKFOR0_916
00006AAA  0C11 0031              11421m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006AAE  6700 0010              11422m         BEQ     CHECKFOR1_916
00006AB2  6000 0012              11423m         BRA     NEXT_916      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006AB6                         11424m         
00006AB6                         11425m CHECKFOR0_916: 
00006AB6  0303                   11426m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006AB8  6600 001C              11427m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006ABC  6000 0008              11428m         BRA     NEXT_916
00006AC0                         11429m 
00006AC0                         11430m CHECKFOR1_916:
00006AC0  0303                   11431m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006AC2  6700 0012              11432m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006AC6                         11433m 
00006AC6                         11434m NEXT_916: 
00006AC6  B23C 0000              11435m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006ACA  6700 0008              11436m         BEQ     COMPLETE_916  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006ACE  5301                   11437m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006AD0  1819                   11438m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006AD2  60CE                   11439m         BRA     LOOP_916      ; BEGIN LOOP AGAIN
00006AD4                         11440m 
00006AD4                         11441m COMPLETE_916:  ; OPCODE HAS BEEN VERIFIED
00006AD4                         11442m         ENDM
00006AD4                         11443          ; put code here
00006AD4  4E75                   11444          RTS                 ; Return from decodeBRA subroutine
00006AD6                         11445  
00006AD6                         11446  
00006AD6                         11447  
00006AD6                         11448  
00006AD6                         11449  ; ========================================================================
00006AD6                         11450  ; Generic Helper Functions
00006AD6                         11451  ; 
00006AD6                         11452  ; Set of subroutines which do various tasks which are repeated frequently.
00006AD6                         11453  ; Each helper function should be commented with required input and output.
00006AD6                         11454  ; 
00006AD6                         11455  ; If input is required, request through D0, D1, etc
00006AD6                         11456  ; Return using D0
00006AD6                         11457  ; ========================================================================
00006AD6                         11458  
00006AD6                         11459  ; ------------------------------------------------------------
00006AD6                         11460  ; outputData
00006AD6                         11461  ; Jonathan
00006AD6                         11462  ;
00006AD6                         11463  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00006AD6                         11464  ; ------------------------------------------------------------
00006AD6                         11465  outputData:
00006AD6  103C 0006              11466          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00006ADA  323C 003D              11467          MOVE.W  #61, D1     ; An = sign
00006ADE  4E4F                   11468          TRAP    #15         ; Output = sign
00006AE0                         11469          
00006AE0  3212                   11470          MOVE.W  (A2), D1    ; Move A2 into D1
00006AE2  E049                   11471          LSR.W   #8, D1      ; Get the first hex digit of D1
00006AE4  E849                   11472          LSR.W   #4, D1      
00006AE6                         11473m         ConvertHtoA D1      ; Convert D1 to a character
00006AE6  0C01 0009              11474m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AEA  6E00 000A              11475m         BGT     ALPHA_917
00006AEE  0601 0030              11476m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AF2  6000 0006              11477m         BRA     DONE_917
00006AF6  0601 0037              11478m ALPHA_917: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AFA  4E71                   11479m DONE_917: NOP
00006AFC                         11480m         ENDM
00006AFC  4E4F                   11481          TRAP    #15         ; Execute output
00006AFE                         11482          
00006AFE  3212                   11483          MOVE.W  (A2), D1    ; Move A2 into D1
00006B00  E949                   11484          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00006B02  E049                   11485          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B04  E849                   11486          LSR.W   #4, D1      
00006B06                         11487m         ConvertHtoA D1      ; Convert D1 to a character
00006B06  0C01 0009              11488m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B0A  6E00 000A              11489m         BGT     ALPHA_918
00006B0E  0601 0030              11490m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B12  6000 0006              11491m         BRA     DONE_918
00006B16  0601 0037              11492m ALPHA_918: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B1A  4E71                   11493m DONE_918: NOP
00006B1C                         11494m         ENDM
00006B1C  4E4F                   11495          TRAP    #15         ; Execute output
00006B1E                         11496          
00006B1E  3212                   11497          MOVE.W  (A2), D1    ; Move A2 into D1
00006B20  E149                   11498          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006B22  E049                   11499          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B24  E849                   11500          LSR.W   #4, D1      
00006B26                         11501m         ConvertHtoA D1      ; Convert D1 to a character
00006B26  0C01 0009              11502m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B2A  6E00 000A              11503m         BGT     ALPHA_919
00006B2E  0601 0030              11504m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B32  6000 0006              11505m         BRA     DONE_919
00006B36  0601 0037              11506m ALPHA_919: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B3A  4E71                   11507m DONE_919: NOP
00006B3C                         11508m         ENDM
00006B3C  4E4F                   11509          TRAP    #15         ; Execute output
00006B3E                         11510          
00006B3E  3212                   11511          MOVE.W  (A2), D1    ; Move A2 into D1
00006B40  E149                   11512          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006B42  E949                   11513          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00006B44  E049                   11514          LSR.W   #8, D1      ; Get the first hex digit of D1
00006B46  E849                   11515          LSR.W   #4, D1      
00006B48                         11516m         ConvertHtoA D1      ; Convert D1 to a character
00006B48  0C01 0009              11517m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B4C  6E00 000A              11518m         BGT     ALPHA_920
00006B50  0601 0030              11519m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B54  6000 0006              11520m         BRA     DONE_920
00006B58  0601 0037              11521m ALPHA_920: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B5C  4E71                   11522m DONE_920: NOP
00006B5E                         11523m         ENDM
00006B5E  4E4F                   11524          TRAP    #15         ; Execute output
00006B60  4E75                   11525          RTS
00006B62                         11526  
00006B62                         11527  
00006B62                         11528  
00006B62                         11529  
00006B62                         11530  
00006B62                         11531  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00006B62                         11532                              ; End of Code
00006B62                         11533          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_155  22AE
ADRABSOLUTEDST_19   158A
ADRABSOLUTEDST_219  2882
ADRABSOLUTEDST_291  2FB0
ADRABSOLUTEDST_355  3584
ADRABSOLUTEDST_423  3BFC
ADRABSOLUTEDST_491  4274
ADRABSOLUTEDST_558  48B8
ADRABSOLUTEDST_630  4FE6
ADRABSOLUTEDST_694  55BA
ADRABSOLUTEDST_762  5C2C
ADRABSOLUTEDST_84   1B64
ADRABSOLUTEDST_852  66D4
ADRABSOLUTEL_155    2518
ADRABSOLUTEL_19     17F4
ADRABSOLUTEL_219    2AEC
ADRABSOLUTEL_291    321A
ADRABSOLUTEL_355    37EE
ADRABSOLUTEL_423    3E66
ADRABSOLUTEL_491    44DE
ADRABSOLUTEL_558    4B22
ADRABSOLUTEL_630    5250
ADRABSOLUTEL_694    5824
ADRABSOLUTEL_762    5E96
ADRABSOLUTEL_84     1DCE
ADRABSOLUTEL_852    693E
ADRABSOLUTEW_155    2486
ADRABSOLUTEW_19     1762
ADRABSOLUTEW_219    2A5A
ADRABSOLUTEW_291    3188
ADRABSOLUTEW_355    375C
ADRABSOLUTEW_423    3DD4
ADRABSOLUTEW_491    444C
ADRABSOLUTEW_558    4A90
ADRABSOLUTEW_630    51BE
ADRABSOLUTEW_694    5792
ADRABSOLUTEW_762    5E04
ADRABSOLUTEW_84     1D3C
ADRABSOLUTEW_852    68AC
ADRABSOLUTE_155     2290
ADRABSOLUTE_19      156C
ADRABSOLUTE_219     2864
ADRABSOLUTE_291     2F92
ADRABSOLUTE_355     3566
ADRABSOLUTE_423     3BDE
ADRABSOLUTE_491     4256
ADRABSOLUTE_558     489A
ADRABSOLUTE_630     4FC8
ADRABSOLUTE_694     559C
ADRABSOLUTE_762     5C0E
ADRABSOLUTE_84      1B46
ADRABSOLUTE_852     66B6
ADRDEST_154         2066
ADRDEST_18          1342
ADRDEST_218         263A
ADRDEST_290         2D68
ADRDEST_354         333C
ADRDEST_422         39B4
ADRDEST_490         402C
ADRDEST_557         4670
ADRDEST_629         4D9E
ADRDEST_693         5372
ADRDEST_761         59E4
ADRDEST_83          191C
ADRDEST_851         648C
ADRIMMEDIATEL_155   2368
ADRIMMEDIATEL_19    1644
ADRIMMEDIATEL_219   293C
ADRIMMEDIATEL_291   306A
ADRIMMEDIATEL_355   363E
ADRIMMEDIATEL_423   3CB6
ADRIMMEDIATEL_491   432E
ADRIMMEDIATEL_558   4972
ADRIMMEDIATEL_630   50A0
ADRIMMEDIATEL_694   5674
ADRIMMEDIATEL_762   5CE6
ADRIMMEDIATEL_84    1C1E
ADRIMMEDIATEL_852   678E
ADRIMMEDIATEW_155   22CC
ADRIMMEDIATEW_19    15A8
ADRIMMEDIATEW_219   28A0
ADRIMMEDIATEW_291   2FCE
ADRIMMEDIATEW_355   35A2
ADRIMMEDIATEW_423   3C1A
ADRIMMEDIATEW_491   4292
ADRIMMEDIATEW_558   48D6
ADRIMMEDIATEW_630   5004
ADRIMMEDIATEW_694   55D8
ADRIMMEDIATEW_762   5C4A
ADRIMMEDIATEW_84    1B82
ADRIMMEDIATEW_852   66F2
ADRIMMEDIATE_155    22C4
ADRIMMEDIATE_19     15A0
ADRIMMEDIATE_219    2898
ADRIMMEDIATE_291    2FC6
ADRIMMEDIATE_355    359A
ADRIMMEDIATE_423    3C12
ADRIMMEDIATE_491    428A
ADRIMMEDIATE_558    48CE
ADRIMMEDIATE_630    4FFC
ADRIMMEDIATE_694    55D0
ADRIMMEDIATE_762    5C42
ADRIMMEDIATE_84     1B7A
ADRIMMEDIATE_852    66EA
ADROUT              580
ADRREGDIRECTDEST_155  20F0
ADRREGDIRECTDEST_19  13CC
ADRREGDIRECTDEST_219  26C4
ADRREGDIRECTDEST_291  2DF2
ADRREGDIRECTDEST_355  33C6
ADRREGDIRECTDEST_423  3A3E
ADRREGDIRECTDEST_491  40B6
ADRREGDIRECTDEST_558  46FA
ADRREGDIRECTDEST_630  4E28
ADRREGDIRECTDEST_694  53FC
ADRREGDIRECTDEST_762  5A6E
ADRREGDIRECTDEST_84  19A6
ADRREGDIRECTDEST_852  6516
ADRREGDIRECTSRC_155  210C
ADRREGDIRECTSRC_19  13E8
ADRREGDIRECTSRC_219  26E0
ADRREGDIRECTSRC_291  2E0E
ADRREGDIRECTSRC_355  33E2
ADRREGDIRECTSRC_423  3A5A
ADRREGDIRECTSRC_491  40D2
ADRREGDIRECTSRC_558  4716
ADRREGDIRECTSRC_630  4E44
ADRREGDIRECTSRC_694  5418
ADRREGDIRECTSRC_762  5A8A
ADRREGDIRECTSRC_84  19C2
ADRREGDIRECTSRC_852  6532
ADRREGDIRECT_155    20E8
ADRREGDIRECT_19     13C4
ADRREGDIRECT_219    26BC
ADRREGDIRECT_291    2DEA
ADRREGDIRECT_355    33BE
ADRREGDIRECT_423    3A36
ADRREGDIRECT_491    40AE
ADRREGDIRECT_558    46F2
ADRREGDIRECT_630    4E20
ADRREGDIRECT_694    53F4
ADRREGDIRECT_762    5A66
ADRREGDIRECT_84     199E
ADRREGDIRECT_852    650E
ADRREGINDIRECTDEST_155  2132
ADRREGINDIRECTDEST_19  140E
ADRREGINDIRECTDEST_219  2706
ADRREGINDIRECTDEST_291  2E34
ADRREGINDIRECTDEST_355  3408
ADRREGINDIRECTDEST_423  3A80
ADRREGINDIRECTDEST_491  40F8
ADRREGINDIRECTDEST_558  473C
ADRREGINDIRECTDEST_630  4E6A
ADRREGINDIRECTDEST_694  543E
ADRREGINDIRECTDEST_762  5AB0
ADRREGINDIRECTDEST_84  19E8
ADRREGINDIRECTDEST_852  6558
ADRREGINDIRECTSRC_155  2162
ADRREGINDIRECTSRC_19  143E
ADRREGINDIRECTSRC_219  2736
ADRREGINDIRECTSRC_291  2E64
ADRREGINDIRECTSRC_355  3438
ADRREGINDIRECTSRC_423  3AB0
ADRREGINDIRECTSRC_491  4128
ADRREGINDIRECTSRC_558  476C
ADRREGINDIRECTSRC_630  4E9A
ADRREGINDIRECTSRC_694  546E
ADRREGINDIRECTSRC_762  5AE0
ADRREGINDIRECTSRC_84  1A18
ADRREGINDIRECTSRC_852  6588
ADRREGINDIRECT_155  212A
ADRREGINDIRECT_19   1406
ADRREGINDIRECT_219  26FE
ADRREGINDIRECT_291  2E2C
ADRREGINDIRECT_355  3400
ADRREGINDIRECT_423  3A78
ADRREGINDIRECT_491  40F0
ADRREGINDIRECT_558  4734
ADRREGINDIRECT_630  4E62
ADRREGINDIRECT_694  5436
ADRREGINDIRECT_762  5AA8
ADRREGINDIRECT_84   19E0
ADRREGINDIRECT_852  6550
ADRREGPOSTINCDEST_155  219C
ADRREGPOSTINCDEST_19  1478
ADRREGPOSTINCDEST_219  2770
ADRREGPOSTINCDEST_291  2E9E
ADRREGPOSTINCDEST_355  3472
ADRREGPOSTINCDEST_423  3AEA
ADRREGPOSTINCDEST_491  4162
ADRREGPOSTINCDEST_558  47A6
ADRREGPOSTINCDEST_630  4ED4
ADRREGPOSTINCDEST_694  54A8
ADRREGPOSTINCDEST_762  5B1A
ADRREGPOSTINCDEST_84  1A52
ADRREGPOSTINCDEST_852  65C2
ADRREGPOSTINCSRC_155  21D6
ADRREGPOSTINCSRC_19  14B2
ADRREGPOSTINCSRC_219  27AA
ADRREGPOSTINCSRC_291  2ED8
ADRREGPOSTINCSRC_355  34AC
ADRREGPOSTINCSRC_423  3B24
ADRREGPOSTINCSRC_491  419C
ADRREGPOSTINCSRC_558  47E0
ADRREGPOSTINCSRC_630  4F0E
ADRREGPOSTINCSRC_694  54E2
ADRREGPOSTINCSRC_762  5B54
ADRREGPOSTINCSRC_84  1A8C
ADRREGPOSTINCSRC_852  65FC
ADRREGPOSTINC_155   2194
ADRREGPOSTINC_19    1470
ADRREGPOSTINC_219   2768
ADRREGPOSTINC_291   2E96
ADRREGPOSTINC_355   346A
ADRREGPOSTINC_423   3AE2
ADRREGPOSTINC_491   415A
ADRREGPOSTINC_558   479E
ADRREGPOSTINC_630   4ECC
ADRREGPOSTINC_694   54A0
ADRREGPOSTINC_762   5B12
ADRREGPOSTINC_84    1A4A
ADRREGPOSTINC_852   65BA
ADRREGPREDECDEST_155  221A
ADRREGPREDECDEST_19  14F6
ADRREGPREDECDEST_219  27EE
ADRREGPREDECDEST_291  2F1C
ADRREGPREDECDEST_355  34F0
ADRREGPREDECDEST_423  3B68
ADRREGPREDECDEST_491  41E0
ADRREGPREDECDEST_558  4824
ADRREGPREDECDEST_630  4F52
ADRREGPREDECDEST_694  5526
ADRREGPREDECDEST_762  5B98
ADRREGPREDECDEST_84  1AD0
ADRREGPREDECDEST_852  6640
ADRREGPREDECSRC_155  2254
ADRREGPREDECSRC_19  1530
ADRREGPREDECSRC_219  2828
ADRREGPREDECSRC_291  2F56
ADRREGPREDECSRC_355  352A
ADRREGPREDECSRC_423  3BA2
ADRREGPREDECSRC_491  421A
ADRREGPREDECSRC_558  485E
ADRREGPREDECSRC_630  4F8C
ADRREGPREDECSRC_694  5560
ADRREGPREDECSRC_762  5BD2
ADRREGPREDECSRC_84  1B0A
ADRREGPREDECSRC_852  667A
ADRREGPREDEC_155    2212
ADRREGPREDEC_19     14EE
ADRREGPREDEC_219    27E6
ADRREGPREDEC_291    2F14
ADRREGPREDEC_355    34E8
ADRREGPREDEC_423    3B60
ADRREGPREDEC_491    41D8
ADRREGPREDEC_558    481C
ADRREGPREDEC_630    4F4A
ADRREGPREDEC_694    551E
ADRREGPREDEC_762    5B90
ADRREGPREDEC_84     1AC8
ADRREGPREDEC_852    6638
ADRSOURCE_154       2070
ADRSOURCE_18        134C
ADRSOURCE_218       2644
ADRSOURCE_290       2D72
ADRSOURCE_354       3346
ADRSOURCE_422       39BE
ADRSOURCE_490       4036
ADRSOURCE_557       467A
ADRSOURCE_629       4DA8
ADRSOURCE_693       537C
ADRSOURCE_761       59EE
ADRSOURCE_83        1926
ADRSOURCE_851       6496
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_114           1BAE
ALPHA_115           1BCE
ALPHA_116           1BEE
ALPHA_117           1C10
ALPHA_121           1C4A
ALPHA_122           1C6A
ALPHA_123           1C8A
ALPHA_124           1CAC
ALPHA_126           1CCC
ALPHA_127           1CEC
ALPHA_128           1D0C
ALPHA_129           1D2E
ALPHA_132           1D5E
ALPHA_133           1D7E
ALPHA_134           1D9E
ALPHA_135           1DC0
ALPHA_138           1DF0
ALPHA_139           1E10
ALPHA_140           1E30
ALPHA_141           1E52
ALPHA_143           1E72
ALPHA_144           1E92
ALPHA_145           1EB2
ALPHA_146           1ED4
ALPHA_185           22F8
ALPHA_186           2318
ALPHA_187           2338
ALPHA_188           235A
ALPHA_192           2394
ALPHA_193           23B4
ALPHA_194           23D4
ALPHA_195           23F6
ALPHA_197           2416
ALPHA_198           2436
ALPHA_199           2456
ALPHA_2             1020
ALPHA_200           2478
ALPHA_203           24A8
ALPHA_204           24C8
ALPHA_205           24E8
ALPHA_206           250A
ALPHA_209           253A
ALPHA_210           255A
ALPHA_211           257A
ALPHA_212           259C
ALPHA_214           25BC
ALPHA_215           25DC
ALPHA_216           25FC
ALPHA_217           261E
ALPHA_249           28CC
ALPHA_250           28EC
ALPHA_251           290C
ALPHA_252           292E
ALPHA_256           2968
ALPHA_257           2988
ALPHA_258           29A8
ALPHA_259           29CA
ALPHA_261           29EA
ALPHA_262           2A0A
ALPHA_263           2A2A
ALPHA_264           2A4C
ALPHA_267           2A7C
ALPHA_268           2A9C
ALPHA_269           2ABC
ALPHA_270           2ADE
ALPHA_273           2B0E
ALPHA_274           2B2E
ALPHA_275           2B4E
ALPHA_276           2B70
ALPHA_278           2B90
ALPHA_279           2BB0
ALPHA_280           2BD0
ALPHA_281           2BF2
ALPHA_3             1042
ALPHA_321           2FFA
ALPHA_322           301A
ALPHA_323           303A
ALPHA_324           305C
ALPHA_328           3096
ALPHA_329           30B6
ALPHA_330           30D6
ALPHA_331           30F8
ALPHA_333           3118
ALPHA_334           3138
ALPHA_335           3158
ALPHA_336           317A
ALPHA_339           31AA
ALPHA_340           31CA
ALPHA_341           31EA
ALPHA_342           320C
ALPHA_345           323C
ALPHA_346           325C
ALPHA_347           327C
ALPHA_348           329E
ALPHA_350           32BE
ALPHA_351           32DE
ALPHA_352           32FE
ALPHA_353           3320
ALPHA_385           35CE
ALPHA_386           35EE
ALPHA_387           360E
ALPHA_388           3630
ALPHA_392           366A
ALPHA_393           368A
ALPHA_394           36AA
ALPHA_395           36CC
ALPHA_397           36EC
ALPHA_398           370C
ALPHA_399           372C
ALPHA_4             1062
ALPHA_400           374E
ALPHA_403           377E
ALPHA_404           379E
ALPHA_405           37BE
ALPHA_406           37E0
ALPHA_409           3810
ALPHA_410           3830
ALPHA_411           3850
ALPHA_412           3872
ALPHA_414           3892
ALPHA_415           38B2
ALPHA_416           38D2
ALPHA_417           38F4
ALPHA_453           3C46
ALPHA_454           3C66
ALPHA_455           3C86
ALPHA_456           3CA8
ALPHA_460           3CE2
ALPHA_461           3D02
ALPHA_462           3D22
ALPHA_463           3D44
ALPHA_465           3D64
ALPHA_466           3D84
ALPHA_467           3DA4
ALPHA_468           3DC6
ALPHA_471           3DF6
ALPHA_472           3E16
ALPHA_473           3E36
ALPHA_474           3E58
ALPHA_477           3E88
ALPHA_478           3EA8
ALPHA_479           3EC8
ALPHA_480           3EEA
ALPHA_482           3F0A
ALPHA_483           3F2A
ALPHA_484           3F4A
ALPHA_485           3F6C
ALPHA_49            15D4
ALPHA_5             1082
ALPHA_50            15F4
ALPHA_51            1614
ALPHA_52            1636
ALPHA_521           42BE
ALPHA_522           42DE
ALPHA_523           42FE
ALPHA_524           4320
ALPHA_528           435A
ALPHA_529           437A
ALPHA_530           439A
ALPHA_531           43BC
ALPHA_533           43DC
ALPHA_534           43FC
ALPHA_535           441C
ALPHA_536           443E
ALPHA_539           446E
ALPHA_540           448E
ALPHA_541           44AE
ALPHA_542           44D0
ALPHA_545           4500
ALPHA_546           4520
ALPHA_547           4540
ALPHA_548           4562
ALPHA_550           4582
ALPHA_551           45A2
ALPHA_552           45C2
ALPHA_553           45E4
ALPHA_56            1670
ALPHA_57            1690
ALPHA_58            16B0
ALPHA_588           4902
ALPHA_589           4922
ALPHA_59            16D2
ALPHA_590           4942
ALPHA_591           4964
ALPHA_595           499E
ALPHA_596           49BE
ALPHA_597           49DE
ALPHA_598           4A00
ALPHA_600           4A20
ALPHA_601           4A40
ALPHA_602           4A60
ALPHA_603           4A82
ALPHA_606           4AB2
ALPHA_607           4AD2
ALPHA_608           4AF2
ALPHA_609           4B14
ALPHA_61            16F2
ALPHA_612           4B44
ALPHA_613           4B64
ALPHA_614           4B84
ALPHA_615           4BA6
ALPHA_617           4BC6
ALPHA_618           4BE6
ALPHA_619           4C06
ALPHA_62            1712
ALPHA_620           4C28
ALPHA_63            1732
ALPHA_64            1754
ALPHA_660           5030
ALPHA_661           5050
ALPHA_662           5070
ALPHA_663           5092
ALPHA_667           50CC
ALPHA_668           50EC
ALPHA_669           510C
ALPHA_67            1784
ALPHA_670           512E
ALPHA_672           514E
ALPHA_673           516E
ALPHA_674           518E
ALPHA_675           51B0
ALPHA_678           51E0
ALPHA_679           5200
ALPHA_68            17A4
ALPHA_680           5220
ALPHA_681           5242
ALPHA_684           5272
ALPHA_685           5292
ALPHA_686           52B2
ALPHA_687           52D4
ALPHA_689           52F4
ALPHA_69            17C4
ALPHA_690           5314
ALPHA_691           5334
ALPHA_692           5356
ALPHA_70            17E6
ALPHA_724           5604
ALPHA_725           5624
ALPHA_726           5644
ALPHA_727           5666
ALPHA_73            1816
ALPHA_731           56A0
ALPHA_732           56C0
ALPHA_733           56E0
ALPHA_734           5702
ALPHA_736           5722
ALPHA_737           5742
ALPHA_738           5762
ALPHA_739           5784
ALPHA_74            1836
ALPHA_742           57B4
ALPHA_743           57D4
ALPHA_744           57F4
ALPHA_745           5816
ALPHA_748           5846
ALPHA_749           5866
ALPHA_75            1856
ALPHA_750           5886
ALPHA_751           58A8
ALPHA_753           58C8
ALPHA_754           58E8
ALPHA_755           5908
ALPHA_756           592A
ALPHA_76            1878
ALPHA_78            1898
ALPHA_79            18B8
ALPHA_792           5C76
ALPHA_793           5C96
ALPHA_794           5CB6
ALPHA_795           5CD8
ALPHA_799           5D12
ALPHA_8             10B8
ALPHA_80            18D8
ALPHA_800           5D32
ALPHA_801           5D52
ALPHA_802           5D74
ALPHA_804           5D94
ALPHA_805           5DB4
ALPHA_806           5DD4
ALPHA_807           5DF6
ALPHA_81            18FA
ALPHA_810           5E26
ALPHA_811           5E46
ALPHA_812           5E66
ALPHA_813           5E88
ALPHA_816           5EB8
ALPHA_817           5ED8
ALPHA_818           5EF8
ALPHA_819           5F1A
ALPHA_821           5F3A
ALPHA_822           5F5A
ALPHA_823           5F7A
ALPHA_824           5F9C
ALPHA_882           671E
ALPHA_883           673E
ALPHA_884           675E
ALPHA_885           6780
ALPHA_889           67BA
ALPHA_890           67DA
ALPHA_891           67FA
ALPHA_892           681C
ALPHA_894           683C
ALPHA_895           685C
ALPHA_896           687C
ALPHA_897           689E
ALPHA_9             10DA
ALPHA_900           68CE
ALPHA_901           68EE
ALPHA_902           690E
ALPHA_903           6930
ALPHA_906           6960
ALPHA_907           6980
ALPHA_908           69A0
ALPHA_909           69C2
ALPHA_911           69E2
ALPHA_912           6A02
ALPHA_913           6A22
ALPHA_914           6A44
ALPHA_917           6AF6
ALPHA_918           6B16
ALPHA_919           6B36
ALPHA_920           6B58
AREG_M              61EA
AREG_R              62BE
ARIREG              1264
ARISHIFT            1258
ASL_M               61D2
ASL_R               62A6
ASR_M               61E0
ASR_R               62B4
CHECKFOR0_147       1EFE
CHECKFOR0_148       1F3C
CHECKFOR0_15        1286
CHECKFOR0_16        12CE
CHECKFOR0_284       2C3E
CHECKFOR0_420       3940
CHECKFOR0_488       3FB8
CHECKFOR0_556       4630
CHECKFOR0_623       4C74
CHECKFOR0_759       5976
CHECKFOR0_825       5FC6
CHECKFOR0_830       609A
CHECKFOR0_835       616E
CHECKFOR0_836       61AC
CHECKFOR0_841       6280
CHECKFOR0_846       6354
CHECKFOR0_847       6392
CHECKFOR0_848       63D0
CHECKFOR0_849       640E
CHECKFOR0_850       644C
CHECKFOR0_915       6A6E
CHECKFOR0_916       6AB6
CHECKFOR1_147       1F08
CHECKFOR1_148       1F46
CHECKFOR1_15        1290
CHECKFOR1_16        12D8
CHECKFOR1_284       2C48
CHECKFOR1_420       394A
CHECKFOR1_488       3FC2
CHECKFOR1_556       463A
CHECKFOR1_623       4C7E
CHECKFOR1_759       5980
CHECKFOR1_825       5FD0
CHECKFOR1_830       60A4
CHECKFOR1_835       6178
CHECKFOR1_836       61B6
CHECKFOR1_841       628A
CHECKFOR1_846       635E
CHECKFOR1_847       639C
CHECKFOR1_848       63DA
CHECKFOR1_849       6418
CHECKFOR1_850       6456
CHECKFOR1_915       6A78
CHECKFOR1_916       6AC0
CHECKFORB_17        12FA
CHECKFORB_421       396C
CHECKFORB_489       3FE4
CHECKFORB_760       59A0
CHECKFORB_826       6006
CHECKFORB_831       60DA
CHECKFORB_837       61EC
CHECKFORB_842       62C0
CHECKFORDESTDN_149  1F6C
CHECKFORDESTDN_285  2C6E
CHECKFORDESTDN_624  4CA4
CHECKFORL_17        1326
CHECKFORL_421       3998
CHECKFORL_489       4010
CHECKFORL_760       59CC
CHECKFORL_826       6032
CHECKFORL_831       6106
CHECKFORL_837       6218
CHECKFORL_842       62EC
CHECKFORSRCDN_149   1FB8
CHECKFORSRCDN_285   2CBA
CHECKFORSRCDN_624   4CF0
CHECKFORW_17        1310
CHECKFORW_421       3982
CHECKFORW_489       3FFA
CHECKFORW_760       59B6
CHECKFORW_826       601C
CHECKFORW_831       60F0
CHECKFORW_837       6202
CHECKFORW_842       62D6
COMPLETE_147        1F1C
COMPLETE_148        1F5A
COMPLETE_149        2046
COMPLETE_15         12A4
COMPLETE_154        2078
COMPLETE_155        2628
COMPLETE_16         12EC
COMPLETE_17         1334
COMPLETE_18         1354
COMPLETE_19         1904
COMPLETE_218        264C
COMPLETE_219        2BFC
COMPLETE_284        2C5C
COMPLETE_285        2D48
COMPLETE_290        2D7A
COMPLETE_291        332A
COMPLETE_354        334E
COMPLETE_355        38FE
COMPLETE_420        395E
COMPLETE_421        39A6
COMPLETE_422        39C6
COMPLETE_423        3F76
COMPLETE_488        3FD6
COMPLETE_489        401E
COMPLETE_490        403E
COMPLETE_491        45EE
COMPLETE_556        464E
COMPLETE_557        4682
COMPLETE_558        4C32
COMPLETE_623        4C92
COMPLETE_624        4D7E
COMPLETE_629        4DB0
COMPLETE_630        5360
COMPLETE_693        5384
COMPLETE_694        5934
COMPLETE_759        5994
COMPLETE_760        59D6
COMPLETE_761        59F6
COMPLETE_762        5FA6
COMPLETE_825        5FE4
COMPLETE_826        603C
COMPLETE_83         192E
COMPLETE_830        60B8
COMPLETE_831        6110
COMPLETE_835        618C
COMPLETE_836        61CA
COMPLETE_837        6222
COMPLETE_84         1EDE
COMPLETE_841        629E
COMPLETE_842        62F6
COMPLETE_846        6372
COMPLETE_847        63B0
COMPLETE_848        63EE
COMPLETE_849        642C
COMPLETE_850        646A
COMPLETE_851        649E
COMPLETE_852        6A4E
COMPLETE_915        6A8C
COMPLETE_916        6AD4
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_155  20AC
DATAREGDIRECTDEST_19  1388
DATAREGDIRECTDEST_219  2680
DATAREGDIRECTDEST_291  2DAE
DATAREGDIRECTDEST_355  3382
DATAREGDIRECTDEST_423  39FA
DATAREGDIRECTDEST_491  4072
DATAREGDIRECTDEST_558  46B6
DATAREGDIRECTDEST_630  4DE4
DATAREGDIRECTDEST_694  53B8
DATAREGDIRECTDEST_762  5A2A
DATAREGDIRECTDEST_84  1962
DATAREGDIRECTDEST_852  64D2
DATAREGDIRECTSRC_155  20C8
DATAREGDIRECTSRC_19  13A4
DATAREGDIRECTSRC_219  269C
DATAREGDIRECTSRC_291  2DCA
DATAREGDIRECTSRC_355  339E
DATAREGDIRECTSRC_423  3A16
DATAREGDIRECTSRC_491  408E
DATAREGDIRECTSRC_558  46D2
DATAREGDIRECTSRC_630  4E00
DATAREGDIRECTSRC_694  53D4
DATAREGDIRECTSRC_762  5A46
DATAREGDIRECTSRC_84  197E
DATAREGDIRECTSRC_852  64EE
DATAREGDIRECT_155   20A4
DATAREGDIRECT_19    1380
DATAREGDIRECT_219   2678
DATAREGDIRECT_291   2DA6
DATAREGDIRECT_355   337A
DATAREGDIRECT_423   39F2
DATAREGDIRECT_491   406A
DATAREGDIRECT_558   46AE
DATAREGDIRECT_630   4DDC
DATAREGDIRECT_694   53B0
DATAREGDIRECT_762   5A22
DATAREGDIRECT_84    195A
DATAREGDIRECT_852   64CA
DECODEADD           1F1E
DECODEADDCOMP       2C1E
DECODEADDDESTOP     262C
DECODEADRMODE       1DCA
DECODEAND           4C56
DECODEANDCOMP       5956
DECODEANDDESTOP     5364
DECODEASX_M         618E
DECODEASX_R         6262
DECODEASX_S         6336
DECODEBEQ           6374
DECODEBGE           63B2
DECODEBLT           63F0
DECODEBRA           6A98
DECODEDIVU          3F9A
DECODEJSR           642E
DECODELEA           4612
DECODELSX_M         5FA8
DECODELSX_R         607C
DECODELSX_S         6150
DECODEMOVE          12B0
DECODEMOVEM         1EE0
DECODEMULS          3922
DECODENOP           1268
DECODENOT           5958
DECODERTS           6A50
DECODESUB           2C20
DECODESUBCOMP       3920
DECODESUBDESTOP     332E
DESTDNB_149         1FAA
DESTDNB_285         2CAC
DESTDNB_624         4CE2
DESTDNL_149         1F82
DESTDNL_285         2C84
DESTDNL_624         4CBA
DESTDNW_149         1F90
DESTDNW_285         2C92
DESTDNW_624         4CC8
DONE_10             10FE
DONE_11             111E
DONE_114            1BB2
DONE_115            1BD2
DONE_116            1BF2
DONE_117            1C14
DONE_121            1C4E
DONE_122            1C6E
DONE_123            1C8E
DONE_124            1CB0
DONE_126            1CD0
DONE_127            1CF0
DONE_128            1D10
DONE_129            1D32
DONE_132            1D62
DONE_133            1D82
DONE_134            1DA2
DONE_135            1DC4
DONE_138            1DF4
DONE_139            1E14
DONE_140            1E34
DONE_141            1E56
DONE_143            1E76
DONE_144            1E96
DONE_145            1EB6
DONE_146            1ED8
DONE_185            22FC
DONE_186            231C
DONE_187            233C
DONE_188            235E
DONE_192            2398
DONE_193            23B8
DONE_194            23D8
DONE_195            23FA
DONE_197            241A
DONE_198            243A
DONE_199            245A
DONE_2              1024
DONE_200            247C
DONE_203            24AC
DONE_204            24CC
DONE_205            24EC
DONE_206            250E
DONE_209            253E
DONE_210            255E
DONE_211            257E
DONE_212            25A0
DONE_214            25C0
DONE_215            25E0
DONE_216            2600
DONE_217            2622
DONE_249            28D0
DONE_250            28F0
DONE_251            2910
DONE_252            2932
DONE_256            296C
DONE_257            298C
DONE_258            29AC
DONE_259            29CE
DONE_261            29EE
DONE_262            2A0E
DONE_263            2A2E
DONE_264            2A50
DONE_267            2A80
DONE_268            2AA0
DONE_269            2AC0
DONE_270            2AE2
DONE_273            2B12
DONE_274            2B32
DONE_275            2B52
DONE_276            2B74
DONE_278            2B94
DONE_279            2BB4
DONE_280            2BD4
DONE_281            2BF6
DONE_3              1046
DONE_321            2FFE
DONE_322            301E
DONE_323            303E
DONE_324            3060
DONE_328            309A
DONE_329            30BA
DONE_330            30DA
DONE_331            30FC
DONE_333            311C
DONE_334            313C
DONE_335            315C
DONE_336            317E
DONE_339            31AE
DONE_340            31CE
DONE_341            31EE
DONE_342            3210
DONE_345            3240
DONE_346            3260
DONE_347            3280
DONE_348            32A2
DONE_350            32C2
DONE_351            32E2
DONE_352            3302
DONE_353            3324
DONE_385            35D2
DONE_386            35F2
DONE_387            3612
DONE_388            3634
DONE_392            366E
DONE_393            368E
DONE_394            36AE
DONE_395            36D0
DONE_397            36F0
DONE_398            3710
DONE_399            3730
DONE_4              1066
DONE_400            3752
DONE_403            3782
DONE_404            37A2
DONE_405            37C2
DONE_406            37E4
DONE_409            3814
DONE_410            3834
DONE_411            3854
DONE_412            3876
DONE_414            3896
DONE_415            38B6
DONE_416            38D6
DONE_417            38F8
DONE_453            3C4A
DONE_454            3C6A
DONE_455            3C8A
DONE_456            3CAC
DONE_460            3CE6
DONE_461            3D06
DONE_462            3D26
DONE_463            3D48
DONE_465            3D68
DONE_466            3D88
DONE_467            3DA8
DONE_468            3DCA
DONE_471            3DFA
DONE_472            3E1A
DONE_473            3E3A
DONE_474            3E5C
DONE_477            3E8C
DONE_478            3EAC
DONE_479            3ECC
DONE_480            3EEE
DONE_482            3F0E
DONE_483            3F2E
DONE_484            3F4E
DONE_485            3F70
DONE_49             15D8
DONE_5              1086
DONE_50             15F8
DONE_51             1618
DONE_52             163A
DONE_521            42C2
DONE_522            42E2
DONE_523            4302
DONE_524            4324
DONE_528            435E
DONE_529            437E
DONE_530            439E
DONE_531            43C0
DONE_533            43E0
DONE_534            4400
DONE_535            4420
DONE_536            4442
DONE_539            4472
DONE_540            4492
DONE_541            44B2
DONE_542            44D4
DONE_545            4504
DONE_546            4524
DONE_547            4544
DONE_548            4566
DONE_550            4586
DONE_551            45A6
DONE_552            45C6
DONE_553            45E8
DONE_56             1674
DONE_57             1694
DONE_58             16B4
DONE_588            4906
DONE_589            4926
DONE_59             16D6
DONE_590            4946
DONE_591            4968
DONE_595            49A2
DONE_596            49C2
DONE_597            49E2
DONE_598            4A04
DONE_600            4A24
DONE_601            4A44
DONE_602            4A64
DONE_603            4A86
DONE_606            4AB6
DONE_607            4AD6
DONE_608            4AF6
DONE_609            4B18
DONE_61             16F6
DONE_612            4B48
DONE_613            4B68
DONE_614            4B88
DONE_615            4BAA
DONE_617            4BCA
DONE_618            4BEA
DONE_619            4C0A
DONE_62             1716
DONE_620            4C2C
DONE_63             1736
DONE_64             1758
DONE_660            5034
DONE_661            5054
DONE_662            5074
DONE_663            5096
DONE_667            50D0
DONE_668            50F0
DONE_669            5110
DONE_67             1788
DONE_670            5132
DONE_672            5152
DONE_673            5172
DONE_674            5192
DONE_675            51B4
DONE_678            51E4
DONE_679            5204
DONE_68             17A8
DONE_680            5224
DONE_681            5246
DONE_684            5276
DONE_685            5296
DONE_686            52B6
DONE_687            52D8
DONE_689            52F8
DONE_69             17C8
DONE_690            5318
DONE_691            5338
DONE_692            535A
DONE_70             17EA
DONE_724            5608
DONE_725            5628
DONE_726            5648
DONE_727            566A
DONE_73             181A
DONE_731            56A4
DONE_732            56C4
DONE_733            56E4
DONE_734            5706
DONE_736            5726
DONE_737            5746
DONE_738            5766
DONE_739            5788
DONE_74             183A
DONE_742            57B8
DONE_743            57D8
DONE_744            57F8
DONE_745            581A
DONE_748            584A
DONE_749            586A
DONE_75             185A
DONE_750            588A
DONE_751            58AC
DONE_753            58CC
DONE_754            58EC
DONE_755            590C
DONE_756            592E
DONE_76             187C
DONE_78             189C
DONE_79             18BC
DONE_792            5C7A
DONE_793            5C9A
DONE_794            5CBA
DONE_795            5CDC
DONE_799            5D16
DONE_8              10BC
DONE_80             18DC
DONE_800            5D36
DONE_801            5D56
DONE_802            5D78
DONE_804            5D98
DONE_805            5DB8
DONE_806            5DD8
DONE_807            5DFA
DONE_81             18FE
DONE_810            5E2A
DONE_811            5E4A
DONE_812            5E6A
DONE_813            5E8C
DONE_816            5EBC
DONE_817            5EDC
DONE_818            5EFC
DONE_819            5F1E
DONE_821            5F3E
DONE_822            5F5E
DONE_823            5F7E
DONE_824            5FA0
DONE_882            6722
DONE_883            6742
DONE_884            6762
DONE_885            6784
DONE_889            67BE
DONE_890            67DE
DONE_891            67FE
DONE_892            6820
DONE_894            6840
DONE_895            6860
DONE_896            6880
DONE_897            68A2
DONE_9              10DE
DONE_900            68D2
DONE_901            68F2
DONE_902            6912
DONE_903            6934
DONE_906            6964
DONE_907            6984
DONE_908            69A4
DONE_909            69C6
DONE_911            69E6
DONE_912            6A06
DONE_913            6A26
DONE_914            6A48
DONE_917            6AFA
DONE_918            6B1A
DONE_919            6B3A
DONE_920            6B5C
ENDSIM              115E
GOLOOP              113C
IDENTIFYOPCODE      1162
LOGREG              124C
LOOP_147            1EEA
LOOP_148            1F28
LOOP_15             1272
LOOP_16             12BA
LOOP_284            2C2A
LOOP_420            392C
LOOP_488            3FA4
LOOP_556            461C
LOOP_623            4C60
LOOP_759            5962
LOOP_825            5FB2
LOOP_830            6086
LOOP_835            615A
LOOP_836            6198
LOOP_841            626C
LOOP_846            6340
LOOP_847            637E
LOOP_848            63BC
LOOP_849            63FA
LOOP_850            6438
LOOP_915            6A5A
LOOP_916            6AA2
LSL_M               5FEC
LSL_R               60C0
LSR_M               5FFA
LSR_R               60CE
MAIN                1000
NEWLINE             3363
NEXT_147            1F0E
NEXT_148            1F4C
NEXT_149            2042
NEXT_15             1296
NEXT_16             12DE
NEXT_284            2C4E
NEXT_285            2D44
NEXT_420            3950
NEXT_488            3FC8
NEXT_556            4640
NEXT_623            4C84
NEXT_624            4D7A
NEXT_759            5986
NEXT_825            5FD6
NEXT_830            60AA
NEXT_835            617E
NEXT_836            61BC
NEXT_841            6290
NEXT_846            6364
NEXT_847            63A2
NEXT_848            63E0
NEXT_849            641E
NEXT_850            645C
NEXT_915            6A7E
NEXT_916            6AC6
OADD                6F
OAN                 C3
OAND                85
OASL                95
OASR                99
OBEQ                9D
OBGE                A1
OBLANK              D2
OBLT                A5
OBRA                B1
OBSIZE              B5
OCOMMA              C9
ODIVU               7C
ODN                 C1
OHASH               D0
OJSR                A9
OLB                 C5
OLEA                81
OLSIZE              BD
OLSL                8D
OLSR                91
OMOVE               64
OMOVEM              69
OMULS               77
ONOP                60
ONOT                89
OPREDEC             CC
OPSTINC             CE
ORB                 C7
ORTS                AD
OSUB                73
OUTPUTDATA          6AD6
OWSIZE              B9
PADD                107
PAND                15C
PASX_M              1B1
PASX_R              1C2
PASX_S              1D3
PBEQ                1E4
PBGE                1F5
PBLT                206
PBRA                239
PDIVU               13A
PJSR                217
PLEA                14B
PLSX_M              17E
PLSX_R              18F
PLSX_S              1A0
PMOVE               E5
PMOVEM              F6
PMULS               129
PNOP                D4
PNOT                16D
PREPAREADRMODE      1BBD
PRINTANDEST         2D78
PRINTANSRC          2E77
PRINTCOMMA          2FA0
PRINTCOUNT          2A13
PRINTDNDEST         2B28
PRINTDNSRC          2C3B
PRINTHASH           324E
PRINTLB             30D4
PRINTOPMODE         15A8
PRINTPD             306D
PRINTPI             3006
PRINTRB             3137
PRINTSIGN           319A
PRINTSIZE           F0E
PRINTSIZELOW        127F
PRTS                228
PSUB                118
READINPUT           F4
REG_M               6004
REG_R               60D8
REND                31
RSTART              0
SPACE               3302
SPLIT0              1170
SPLIT000            117C
SPLIT01             1190
SPLIT0100           119C
SPLIT0100111        11B8
SPLIT0110           11CC
SPLIT01100          11D8
SPLIT01101          11E4
SPLIT1              11F0
SPLIT10             11FC
SPLIT11             1208
SPLIT110            1214
SPLIT111            1238
SRCDNB_149          201C
SRCDNB_285          2D1E
SRCDNB_624          4D54
SRCDNL_149          1FC4
SRCDNL_285          2CC6
SRCDNL_624          4CFC
SRCDNW_149          1FEA
SRCDNW_285          2CEC
SRCDNW_624          4D22
VERIFYOPCODE        A9B
