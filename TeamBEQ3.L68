00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/4/2021 12:56:34 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Disassembler (DASM)
00000000                             3  * Written by : Team BEQ
00000000                             4  *                Jonathan Hendrickson, Guiragos Guiragossian,
00000000                             5  *                Dylan Thibault, Omar Nevarez
00000000                             6  *
00000000                             7  * Class      : CSS 422 A Sp 21 with Jim Hogg
00000000                             8  * Description: A disassembler for 68k machine code.
00000000                             9  *
00000000                            10  * Register Structure: 
00000000                            11  * D0 used for TRAP#15 I/O functions
00000000                            12  * D1 used for secondary MACRO input (namely as a bit counter)
00000000                            13  * D3 used for primary MACRO input (namely stores opcode which is being checked)
00000000                            14  * D4 used as filler destination (e.g. we want to increment adr. but not store value)
00000000                            15  * D5 used as temporary storage of opcode (when scanning next word for adr mode)
00000000                            16  * D6 used for branch conditions (e.g. tracks state of single bit instruction field)
00000000                            17  * D7 used for size marker and error validation                                                                                                                                                                                                         
00000000                            18                                                                                                                                                                                                                                                         
00000000                            19                                                         
00000000                            20  *
00000000                            21  * A1 used loading strings (for output and validation)
00000000                            22  * A2 used for storing opcode currently being evaluated                                                                                                                                                                                                 
00000000                            23                                                                                                                                                                                                                                                         
00000000                            24                                                        
00000000                            25  * NOT USED:   A0, A3 - A7 
00000000                            26  *-----------------------------------------------------------
00000000                            27  
00000000                            28  ; ========================================================================
00000000                            29  ; Variables
00000000                            30  ; ========================================================================
00000000                            31  
00000000                            32  ; TEMP
00000000= 45 6E 74 65 72 20 ...     33  rSTART: DC.B    'Enter the starting address (4 digit hex number):',0
00000031= 45 6E 74 65 72 20 ...     34  rEND:   DC.B    'Enter the ending address (4 digit hex number):',0
00000060                            35  
00000060                            36  ; ------------------------------------------------------------
00000060                            37  ; "convertAtoH" Helper
00000060                            38  ; Jonathan
00000060                            39  ;
00000060                            40  ; 1st argument is a data register containing an ASCII character
00000060                            41  ;
00000060                            42  ; Converts the argument from an ASCII character to hex
00000060                            43  ; ------------------------------------------------------------
00000060                            44  convertAtoH:    MACRO
00000060                            45          CMPI.B  #$39, \1
00000060                            46          BGT     alpha\@
00000060                            47          SUBI.B  #$30, \1    ; Subtract 30 to convert digit char to hex
00000060                            48          BRA     done\@
00000060                            49  alpha\@: SUBI.B #$37, \1    ; Subtract 37 to convert A-F char to hex
00000060                            50  done\@: NOP
00000060                            51          ENDM
00000060                            52  
00000060                            53  
00000060                            54  ; ------------------------------------------------------------
00000060                            55  ; "readInput" Helper
00000060                            56  ; Jonathan
00000060                            57  ;
00000060                            58  ; 1st argument is a data register containing an ASCII character
00000060                            59  ;
00000060                            60  ; Converts the argument from an ASCII character to hex
00000060                            61  ; ------------------------------------------------------------
00000060                            62  readInput:    MACRO
00000060                            63          ; Read user's input
00000060                            64          MOVE.B  #5, D0      ; Read first digit
00000060                            65          TRAP    #15
00000060                            66          convertAtoH D1      ; Convert to hex
00000060                            67          LSL.W   #8, D1      ; Shift left 8 bits
00000060                            68          LSL.W   #4, D1      ; Shift left additional 4 bits (1st digit)
00000060                            69          MOVE.W  D1, D2      ; Store in D2
00000060                            70          
00000060                            71          MOVE.W  #0, D1      ; Clear D1
00000060                            72          TRAP    #15         ; Read second digit
00000060                            73          convertAtoH D1
00000060                            74          LSL.W   #8, D1      
00000060                            75          ADD.W   D1, D2
00000060                            76          
00000060                            77          MOVE.W  #0, D1      ; Clear D1
00000060                            78          TRAP    #15         ; Read third digit
00000060                            79          convertAtoH D1
00000060                            80          LSL.W   #4, D1      
00000060                            81          ADD.W   D1, D2
00000060                            82          
00000060                            83          MOVE.W  #0, D1      ; Clear D1
00000060                            84          TRAP    #15         ; Read final digit
00000060                            85          convertAtoH D1     
00000060                            86          ADD.W   D1, D2
00000060                            87          MOVE.W  D2, \1      ; Move to output
00000060                            88          ENDM
00000060                            89  
00000060                            90  ; ENDTEMP
00000060                            91  
00000060                            92  ; ------------------------------------------------------------
00000060                            93  ; "Output" Variables
00000060                            94  ; Gary
00000060                            95  ; 
00000060                            96  ; Set of strings to be used with I/O of given instruction
00000060                            97  ; ------------------------------------------------------------
00000060= 4E 4F 50 00               98  oNOP:   DC.B    'NOP',0
00000064= 4D 4F 56 45 00            99  oMOVE:  DC.B    'MOVE',0
00000069= 4D 4F 56 45 4D 00        100  oMOVEM: DC.B    'MOVEM',0
0000006F= 41 44 44 00              101  oADD:   DC.B    'ADD',0
00000073= 53 55 42 00              102  oSUB:   DC.B    'SUB',0
00000077= 4D 55 4C 53 2E 57 ...    103  oMULS:  DC.B    'MULS.W ',0
0000007F= 44 49 56 55 2E 57 ...    104  oDIVU:  DC.B    'DIVU.W ',0
00000087= 4C 45 41 00              105  oLEA:   DC.B    'LEA',0
0000008B= 41 4E 44 00              106  oAND:   DC.B    'AND',0
0000008F= 4E 4F 54 00              107  oNOT:   DC.B    'NOT',0
00000093= 4C 53 4C 00              108  oLSL:   DC.B    'LSL',0
00000097= 4C 53 52 00              109  oLSR:   DC.B    'LSR',0
0000009B= 41 53 4C 00              110  oASL:   DC.B    'ASL',0
0000009F= 41 53 52 00              111  oASR:   DC.B    'ASR',0
000000A3= 42 45 51 00              112  oBEQ:   DC.B    'BEQ',0
000000A7= 42 47 45 00              113  oBGE:   DC.B    'BGE',0
000000AB= 42 4C 54 00              114  oBLT:   DC.B    'BLT',0
000000AF= 4A 53 52 00              115  oJSR:   DC.B    'JSR',0
000000B3= 52 54 53 00              116  oRTS:   DC.B    'RTS',0
000000B7= 42 52 41 00              117  oBRA:   DC.B    'BRA',0
000000BB= 2E 42 20 00              118  oBSize  DC.B    '.B ',0
000000BF= 2E 57 20 00              119  oWSize  DC.B    '.W ',0
000000C3= 2E 4C 20 00              120  oLSize  DC.B    '.L ',0
000000C7= 44 00                    121  oDn     DC.B    'D',0
000000C9= 41 00                    122  oAn     DC.B    'A',0
000000CB= 28 00                    123  oLB     DC.B    '(',0
000000CD= 29 00                    124  oRB     DC.B    ')',0
000000CF= 2C 20 00                 125  oComma  DC.B    ', ',0
000000D2= 2D 00                    126  oPreDec DC.B    '-',0
000000D4= 2B 00                    127  oPstInc DC.B    '+',0
000000D6= 23 00                    128  oHash   DC.B    '#',0
000000D8= 20 00                    129  oBlank  DC.B    ' ',0
000000DA= 20 20 20 00              130  oTab  DC.B    '   ',0
000000DE= 57 65 6C 63 6F 6D ...    131  oWelcome DC.B   'Welcome to our 68k DASM!'
000000F6                           132  ; ------------------------------------------------------------
000000F6                           133  ; "Pattern" Variables
000000F6                           134  ; Jonathan
000000F6                           135  ; 
000000F6                           136  ; Set of strings to be used with verifyOpcode to check that the patterns match
000000F6                           137  ; and the opcode isn't actually data
000000F6                           138  ; ------------------------------------------------------------
000000F6= 30 31 30 30 31 31 ...    139  pNOP:   DC.B    '0100111001110001',0
00000107= 30 30 2E 2E 2E 2E ...    140  pMOVE:  DC.B    '00..............',0
00000118= 30 31 30 30 31 2E ...    141  pMOVEM: DC.B    '01001.001.......',0
00000129= 31 31 30 31 2E 2E ...    142  pADD:   DC.B    '1101............',0
0000013A= 31 30 30 31 2E 2E ...    143  pSUB:   DC.B    '1001............',0
0000014B= 31 31 30 30 2E 2E ...    144  pMULS:  DC.B    '1100...111......',0
0000015C= 31 30 30 30 2E 2E ...    145  pDIVU:  DC.B    '1000...011......',0
0000016D= 30 31 30 30 2E 2E ...    146  pLEA:   DC.B    '0100...111......',0
0000017E= 31 31 30 30 2E 2E ...    147  pAND:   DC.B    '1100............',0
0000018F= 30 31 30 30 30 31 ...    148  pNOT:   DC.B    '01000110........',0
000001A0= 31 31 31 30 2E 2E ...    149  pLSx_M: DC.B    '1110......001...',0
000001B1= 31 31 31 30 2E 2E ...    150  pLSx_R: DC.B    '1110......101...',0
000001C2= 31 31 31 30 2E 2E ...    151  pLSx_S: DC.B    '1110......100...',0
000001D3= 31 31 31 30 2E 2E ...    152  pASx_M: DC.B    '1110......000...',0
000001E4= 31 31 31 30 2E 2E ...    153  pASx_R: DC.B    '1110......100...',0
000001F5= 31 31 31 30 2E 2E ...    154  pASx_S: DC.B    '1110......100...',0
00000206= 30 31 31 30 30 31 ...    155  pBEQ:   DC.B    '01100111........',0
00000217= 30 31 31 30 31 31 ...    156  pBGE:   DC.B    '01101100........',0
00000228= 30 31 31 30 31 31 ...    157  pBLT:   DC.B    '01101101........',0
00000239= 30 31 30 30 31 31 ...    158  pJSR:   DC.B    '0100111010......',0
0000024A= 30 31 30 30 31 31 ...    159  pRTS:   DC.B    '0100111001110101',0
0000025B= 30 31 31 30 30 30 ...    160  pBRA:   DC.B    '01100000........',0
0000026C                           161  
0000026C                           162  
0000026C                           163  ; ========================================================================
0000026C                           164  ; Macros
0000026C                           165  ; ========================================================================
0000026C                           166  ; ------------------------------------------------------------
0000026C                           167  ; "convertHtoA" Helper
0000026C                           168  ; Jonathan
0000026C                           169  ;
0000026C                           170  ; 1st argument is a data register containing a single digit of a hex number.
0000026C                           171  ;
0000026C                           172  ; Converts the argument from a hex digit to an ascii character
0000026C                           173  ; ------------------------------------------------------------
0000026C                           174  convertHtoA:    MACRO
0000026C                           175          CMPI.B  #9, \1      ; If greater than 9, this is an alphanumeric char
0000026C                           176          BGT     alpha\@
0000026C                           177          ADDI.B  #$30, \1    ; Add 30 to convert digit to ascii char
0000026C                           178          BRA     done\@
0000026C                           179  alpha\@: ADDI.B #$37, \1    ; AAdd 37 to convert A-F to ascii char
0000026C                           180  done\@: NOP
0000026C                           181          ENDM
0000026C                           182  ; ------------------------------------------------------------
0000026C                           183  ; adrOut
0000026C                           184  ; Gary
0000026C                           185  ;
0000026C                           186  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
0000026C                           187  ; ------------------------------------------------------------
0000026C                           188  adrOut:         MACRO
0000026C                           189          MOVE.W  (A2), D1    ; Move A2 into D1
0000026C                           190          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           191          LSR.W   #4, D1      
0000026C                           192          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           193          TRAP    #15         ; Execute output
0000026C                           194          
0000026C                           195          MOVE.W  (A2), D1    ; Move A2 into D1
0000026C                           196          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000026C                           197          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           198          LSR.W   #4, D1      
0000026C                           199          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           200          TRAP    #15         ; Execute output
0000026C                           201          
0000026C                           202          MOVE.W  (A2), D1    ; Move A2 into D1
0000026C                           203          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000026C                           204          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           205          LSR.W   #4, D1      
0000026C                           206          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           207          TRAP    #15         ; Execute output
0000026C                           208          
0000026C                           209          MOVE.W  (A2), D1    ; Move A2 into D1
0000026C                           210          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000026C                           211          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000026C                           212          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           213          LSR.W   #4, D1      
0000026C                           214          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           215          TRAP    #15         ; Execute output       
0000026C                           216          ENDM 
0000026C                           217  ; ------------------------------------------------------------
0000026C                           218  ; "verifyOpcode" Helper
0000026C                           219  ; Jonathan
0000026C                           220  ;
0000026C                           221  ; 1st argument is a template string (e.g. "0100...111......" for LEA)
0000026C                           222  ; 2nd argument is a data register to check against the template
0000026C                           223  ;
0000026C                           224  ; Verifies that the opcode passed through \2 matches the pattern of \1
0000026C                           225  ; If they do not match, branches to outputData
0000026C                           226  ; ------------------------------------------------------------
0000026C                           227  verifyOpcode:  MACRO
0000026C                           228          LEA     \1, A1      ; Input pattern string
0000026C                           229          MOVE.W  \2, D3      ; input value
0000026C                           230          MOVE.B  #15, D1     ; Counter tracking the bit position of D3
0000026C                           231          
0000026C                           232  loop\@: 
0000026C                           233          CMP.B   #$30, (A1)  ; Check if the template wants a 0
0000026C                           234          BEQ     checkFor0\@
0000026C                           235          CMP.B   #$31, (A1)  ; Check if the template wants a 1
0000026C                           236          BEQ     checkFor1\@
0000026C                           237          BRA     next\@      ; Template has a wildcard, go to next iteration
0000026C                           238          
0000026C                           239  checkFor0\@: 
0000026C                           240          BTST    D1, D3      ; Check if contains 0
0000026C                           241          BNE     outputData  ; Missing a 0 -> Not a valid opcode
0000026C                           242          BRA     next\@
0000026C                           243  
0000026C                           244  checkFor1\@:
0000026C                           245          BTST    D1, D3      ; Check if contains 1
0000026C                           246          BEQ     outputData  ; Missing a 1 -> Not a valid opcode
0000026C                           247  
0000026C                           248  next\@: 
0000026C                           249          CMP.B   #0, D1      ; Compare bit counter to 0
0000026C                           250          BEQ     complete\@  ; Branch to complete if bit counter reached 0
0000026C                           251          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000026C                           252          MOVE.B  (A1)+, D4   ; Move A1 to the next pointer (D3 irrelevant)
0000026C                           253          BRA     loop\@      ; Begin loop again
0000026C                           254  
0000026C                           255  complete\@:  ; Opcode has been verified
0000026C                           256          ENDM
0000026C                           257          
0000026C                           258  ; ------------------------------------------------------------
0000026C                           259  ; "printSize" Helper
0000026C                           260  ; Gary
0000026C                           261  ;
0000026C                           262  ; 1st argument is the data register with opcode whose size is being decoded
0000026C                           263  ;
0000026C                           264  ; Used in opcodes whose size bits are #13 and #12 (e.g. MOVE). It does so
0000026C                           265  ; by sequentally checking both bits. Bit #13 differentiates byte and word size.
0000026C                           266  ; If bit goes to word, bit #12 is checked to differntiate word and long word.
0000026C                           267  ; Once matched, size is printed and appended to already printed opcode (TRAP #15 no CR,LF).
0000026C                           268  ; ------------------------------------------------------------
0000026C                           269  printSize:  MACRO
0000026C                           270          MOVE.W  \1, D3      ; input value
0000026C                           271          CLR     D7      
0000026C                           272  checkForB\@: 
0000026C                           273          BTST    #13, D3      ; Check if contains 0
0000026C                           274          BNE     checkForW\@  ; If not go to word size
0000026C                           275          LEA     oBSize, A1   ; If bit #13 is 0, size is byte and macro ends. 
0000026C                           276          MOVE.B  #14,D0          
0000026C                           277          TRAP    #15
0000026C                           278          BRA     complete\@      
0000026C                           279  checkForW\@: 
0000026C                           280          BTST    #12, D3      ; Check if contains 1
0000026C                           281          BEQ     checkForL\@  ; If not, size cannot be word
0000026C                           282          LEA     oWSize, A1   ; If bit #12 is 1, size is word and macro ends.  
0000026C                           283          MOVE.B  #14,D0          
0000026C                           284          TRAP    #15
0000026C                           285          BRA     complete\@  
0000026C                           286  checkForL\@:
0000026C                           287          MOVE.B  #$1, D7
0000026C                           288          LEA     oLSize, A1   ; If bit #12 is 0, size is longword and macro ends.  
0000026C                           289          MOVE.B  #14,D0          
0000026C                           290          TRAP    #15
0000026C                           291  complete\@:  ; Size has been printed
0000026C                           292          ENDM
0000026C                           293          
0000026C                           294          ; ------------------------------------------------------------
0000026C                           295  ; "printSizeLow" Helper
0000026C                           296  ; Gary
0000026C                           297  ;
0000026C                           298  ; 1st argument is the data register with opcode whose size is being decoded
0000026C                           299  ;
0000026C                           300  ; Used in opcodes whose size bits are #6 and #7 (e.g. ADD). It does so
0000026C                           301  ; by sequentally checking both bits. Bit #6 differentiates byte and word size.
0000026C                           302  ; If bit goes to word, bit #7 is checked to differntiate word and long word.
0000026C                           303  ; Once matched, size is printed and appended to already printed opcode, macro exits.
0000026C                           304  ; ------------------------------------------------------------
0000026C                           305  printSizeLow:  MACRO
0000026C                           306          MOVE.W  \1, D3      ; input value   
0000026C                           307          CLR     D7   
0000026C                           308  checkForB\@: 
0000026C                           309          BTST    #6,  D3      ; Check if contains 0
0000026C                           310          BNE     checkForW\@  ; If not go to word size
0000026C                           311          BTST    #7, D3      ; Check if contains 0
0000026C                           312          BNE     checkForL\@ ; If not go to longword size
0000026C                           313          LEA     oBSize, A1     
0000026C                           314          MOVE.B  #14,D0       ; Print and end macro  
0000026C                           315          TRAP    #15
0000026C                           316          BRA     complete\@      
0000026C                           317  checkForW\@: 
0000026C                           318          LEA     oWSize, A1     
0000026C                           319          MOVE.B  #14,D0       ; Print and end macro       
0000026C                           320          TRAP    #15
0000026C                           321          BRA     complete\@  
0000026C                           322  checkForL\@:
0000026C                           323          MOVE.B  #$1, D7
0000026C                           324          LEA     oLSize, A1   ; If both bits are #1, size is longword and macro ends.  
0000026C                           325          MOVE.B  #14,D0       ; Print and end macro  
0000026C                           326          TRAP    #15
0000026C                           327  complete\@:  ; Size has been printed
0000026C                           328          ENDM
0000026C                           329  ; ------------------------------------------------------------
0000026C                           330  ; "printBranch" Helper
0000026C                           331  ; Gary
0000026C                           332  ; 
0000026C                           333  ; Executes after prepare macro on D1 which contains only adressing mode
0000026C                           334  ; bits. 
0000026C                           335  ; ------------------------------------------------------------
0000026C                           336  printBranch:  MACRO
0000026C                           337          MOVE.W \1, D3
0000026C                           338          CLR     D1
0000026C                           339          ADD.B   D3, D1
0000026C                           340          convertAtoH D1
0000026C                           341          MOVE.B  #3,D0       ; Print and end macro  
0000026C                           342          TRAP    #15
0000026C                           343          ENDM        
0000026C                           344          
0000026C                           345  ; ------------------------------------------------------------
0000026C                           346  ; "printOpMode" Helper
0000026C                           347  ; Gary
0000026C                           348  ;
0000026C                           349  ; 1st argument holds opcode whose opmode is being decoded
0000026C                           350  ;
0000026C                           351  ; With the opcode in D3, D1 is designated as the bit tracker. Split
0000026C                           352  ; into two sorting mechanisms: first, the macro determines whether
0000026C                           353  ; the register is a source or a destination. Then, the macro determines
0000026C                           354  ; the size and appends it to printed opcode in a similar manner to printSize.
0000026C                           355  ; ------------------------------------------------------------
0000026C                           356  printOpMode:  MACRO
0000026C                           357          MOVE.W  \1, D3      
0000026C                           358          MOVE.B  #8, D1    
0000026C                           359          CLR     D6
0000026C                           360          CLR     D7
0000026C                           361  checkForDestDn\@: 
0000026C                           362          BTST    D1, D3      
0000026C                           363          BNE     checkForSrcDn\@
0000026C                           364          JSR     next\@
0000026C                           365          MOVE.B  #$1, D6
0000026C                           366          BTST    D1, D3      
0000026C                           367          BEQ     DestDnW\@
0000026C                           368  DestDnL\@:        
0000026C                           369          LEA     oLSize, A1     
0000026C                           370          MOVE.B  #14,D0          
0000026C                           371          TRAP    #15
0000026C                           372          MOVE.B  #$1, D7
0000026C                           373          BRA     complete\@ 
0000026C                           374  DestDnW\@: 
0000026C                           375          JSR     next\@
0000026C                           376          BTST    D1, D3      
0000026C                           377          BEQ     DestDnB\@
0000026C                           378          LEA     oWSize, A1     
0000026C                           379          MOVE.B  #14,D0          
0000026C                           380          TRAP    #15
0000026C                           381          BRA     complete\@ 
0000026C                           382  DestDnB\@: 
0000026C                           383          LEA     oBSize, A1     
0000026C                           384          MOVE.B  #14,D0          
0000026C                           385          TRAP    #15
0000026C                           386          BRA     complete\@ 
0000026C                           387  checkForSrcDn\@: 
0000026C                           388          JSR     next\@
0000026C                           389          BTST    D1, D3      
0000026C                           390          BEQ     SrcDnW\@
0000026C                           391  SrcDnL\@:        
0000026C                           392          LEA     oLSize, A1     
0000026C                           393          MOVE.B  #14,D0          
0000026C                           394          TRAP    #15
0000026C                           395          MOVE.B  #$1, D7
0000026C                           396          printDnDest D3
0000026C                           397          BRA     complete\@ 
0000026C                           398  SrcDnW\@:
0000026C                           399          JSR     next\@
0000026C                           400          BTST    D1, D3     
0000026C                           401          BEQ     SrcDnB\@
0000026C                           402          LEA     oWSize, A1     
0000026C                           403          MOVE.B  #14,D0          
0000026C                           404          TRAP    #15
0000026C                           405          printDnDest D3
0000026C                           406          BRA     complete\@ 
0000026C                           407  SrcDnB\@: 
0000026C                           408          LEA     oBSize, A1     
0000026C                           409          MOVE.B  #14,D0          
0000026C                           410          TRAP    #15
0000026C                           411          printDnDest D3
0000026C                           412          BRA     complete\@ 
0000026C                           413  
0000026C                           414  next\@:
0000026C                           415          SUB.B   #1, D1      ; Continuing loop -> Decrement bit counter
0000026C                           416          RTS                
0000026C                           417  
0000026C                           418  complete\@:  ; Opcode has been verified
0000026C                           419          ENDM
0000026C                           420  ; ------------------------------------------------------------
0000026C                           421  ; "prepareAdrMode" Helper
0000026C                           422  ; Gary
0000026C                           423  ; 
0000026C                           424  ; Shifts bits of a given opcode so that D1 contains only ADRmode.
0000026C                           425  ; ------------------------------------------------------------
0000026C                           426  prepareAdrMode: MACRO
0000026C                           427          MOVE.W  \1, D6      ; input value
0000026C                           428          MOVE.W  \2, D1
0000026C                           429          CMP.B   #$01, D6
0000026C                           430          BEQ     AdrSource\@    
0000026C                           431  AdrDest\@:
0000026C                           432          LSL     #$07, D1   ; If 0 is passed, bits left are 6 to 8
0000026C                           433          LSR     #$08, D1
0000026C                           434          LSR     #$05, D1
0000026C                           435          BRA     complete\@ 
0000026C                           436  AdrSource\@:                
0000026C                           437          LSL     #$08, D1    ; If 1 is passed, bits left are 3 to 5
0000026C                           438          LSL     #$02, D1
0000026C                           439          LSR     #$08, D1
0000026C                           440          LSR     #$05, D1
0000026C                           441  complete\@:  ; Opcode has been verified
0000026C                           442          ENDM        
0000026C                           443          
0000026C                           444  ; ------------------------------------------------------------
0000026C                           445  ; "decodeAdrMode" Helper
0000026C                           446  ; Gary
0000026C                           447  ; 
0000026C                           448  ; Executes after prepare macro on D1 which contains only adressing mode
0000026C                           449  ; bits. 
0000026C                           450  ; ------------------------------------------------------------
0000026C                           451  decodeAdrMode:  MACRO
0000026C                           452          MOVE.W  \1, D3      ; holds full opcode
0000026C                           453          MOVE.W  \2, D1      ; holds just opmode
0000026C                           454  
0000026C                           455          CMP.B   #$01, D1
0000026C                           456          BEQ     AdrRegDirect\@    
0000026C                           457          CMP.B   #$02, D1
0000026C                           458          BEQ     AdrRegInDirect\@  
0000026C                           459          CMP.B   #$03, D1
0000026C                           460          BEQ     AdrRegPostInc\@  
0000026C                           461          CMP.B   #$04, D1
0000026C                           462          BEQ     AdrRegPreDec\@
0000026C                           463          CMP.B   #$07, D1
0000026C                           464          BEQ     AdrAbsolute\@    
0000026C                           465          
0000026C                           466  dataRegDirect\@: 
0000026C                           467          CMP.B   #$01, D6
0000026C                           468          BEQ     dataRegDirectSrc\@   
0000026C                           469  dataRegDirectDest\@: 
0000026C                           470          printDnDest D3 
0000026C                           471          BRA     complete\@ 
0000026C                           472  dataRegDirectSrc\@: 
0000026C                           473          printDnSrc D3 
0000026C                           474          BRA     complete\@   
0000026C                           475          
0000026C                           476  AdrRegDirect\@: 
0000026C                           477          CMP.B   #$01, D6
0000026C                           478          BEQ     AdrRegDirectSrc\@   
0000026C                           479  AdrRegDirectDest\@:
0000026C                           480          printAnDest D3
0000026C                           481          BRA     complete\@   
0000026C                           482  AdrRegDirectSrc\@:
0000026C                           483          printAnSrc D3
0000026C                           484          BRA     complete\@   
0000026C                           485         
0000026C                           486  AdrRegInDirect\@:   
0000026C                           487          CMP.B   #$01, D6
0000026C                           488          BEQ     AdrRegInDirectSrc\@   
0000026C                           489  AdrRegInDirectDest\@:
0000026C                           490          printLB
0000026C                           491          printAnDest D3  
0000026C                           492          printRB
0000026C                           493          BRA     complete\@     
0000026C                           494  AdrRegInDirectSrc\@:   
0000026C                           495          printLB
0000026C                           496          printAnSrc D3  
0000026C                           497          printRB
0000026C                           498          BRA     complete\@   
0000026C                           499          
0000026C                           500  AdrRegPostInc\@:   
0000026C                           501          CMP.B   #$01, D6
0000026C                           502          BEQ     AdrRegPostIncSrc\@   
0000026C                           503  AdrRegPostIncDest\@: 
0000026C                           504          printLB
0000026C                           505          printAnDest D3  
0000026C                           506          printRB
0000026C                           507          printPI
0000026C                           508          BRA     complete\@  
0000026C                           509  AdrRegPostIncSrc\@:           
0000026C                           510          printLB
0000026C                           511          printAnSrc D3  
0000026C                           512          printRB
0000026C                           513          printPI
0000026C                           514          BRA     complete\@  
0000026C                           515  AdrRegPreDec\@: 
0000026C                           516          CMP.B   #$01, D6
0000026C                           517          BEQ     AdrRegPreDecSrc\@   
0000026C                           518  AdrRegPreDecDest\@:
0000026C                           519          printPD  
0000026C                           520          printLB
0000026C                           521          printAnDest D3  
0000026C                           522          printRB
0000026C                           523          BRA     complete\@   
0000026C                           524  AdrRegPreDecSrc\@: 
0000026C                           525          printPD  
0000026C                           526          printLB
0000026C                           527          printAnSrc D3  
0000026C                           528          printRB
0000026C                           529          BRA     complete\@
0000026C                           530         
0000026C                           531  AdrAbsolute\@:
0000026C                           532          CMP.B   #$01, D6
0000026C                           533          BNE     AdrAbsoluteDst\@ 
0000026C                           534          
0000026C                           535          MOVE.W  D3, D5
0000026C                           536          BTST    #2, D3
0000026C                           537          BNE     AdrImmediate\@
0000026C                           538          BTST    #0, D3
0000026C                           539          BNE     AdrAbsoluteL\@
0000026C                           540          BRA     AdrAbsoluteW\@
0000026C                           541  AdrAbsoluteDst\@:
0000026C                           542          MOVE.W  D3, D5
0000026C                           543          BTST    #$B, D3
0000026C                           544          BNE     AdrImmediate\@
0000026C                           545          BTST    #$09, D3
0000026C                           546          BNE     AdrAbsoluteL\@
0000026C                           547          BRA     AdrAbsoluteW\@
0000026C                           548  AdrImmediate\@:
0000026C                           549          CMP.B   #1, D7
0000026C                           550          BEQ     AdrImmediateL\@
0000026C                           551  AdrImmediateW\@:
0000026C                           552          MOVE.W  (A2)+, D3
0000026C                           553          printHash
0000026C                           554          printSign
0000026C                           555          adrOut
0000026C                           556          MOVE.W  D5, D3
0000026C                           557          BRA     complete\@
0000026C                           558  AdrImmediateL\@:
0000026C                           559          MOVE.W  (A2)+, D3
0000026C                           560          printHash
0000026C                           561          printSign
0000026C                           562          adrOut 
0000026C                           563          MOVE.W  (A2)+, D3
0000026C                           564          adrOut
0000026C                           565          MOVE.W  D5, D3
0000026C                           566          BRA     complete\@ 
0000026C                           567  AdrAbsoluteW\@:     
0000026C                           568          MOVE.W  (A2)+, D3
0000026C                           569          printSign
0000026C                           570          adrOut
0000026C                           571          MOVE.W  D5, D3
0000026C                           572          BRA     complete\@  
0000026C                           573  AdrAbsoluteL\@:  
0000026C                           574          MOVE.W  (A2)+, D3
0000026C                           575          printSign
0000026C                           576          adrOut 
0000026C                           577          MOVE.W  (A2)+, D3
0000026C                           578          adrOut
0000026C                           579          MOVE.W  D5, D3
0000026C                           580  
0000026C                           581  complete\@:  ; Opcode has been verified
0000026C                           582          ENDM
0000026C                           583  
0000026C                           584  printCount:     MACRO
0000026C                           585          MOVE.W  \1, D1      ; bits 9 to 11
0000026C                           586          LSL     #$04, D1
0000026C                           587          LSR     #$08, D1
0000026C                           588          LSR     #$05, D1
0000026C                           589          LEA     oHash, A1     
0000026C                           590          MOVE.B  #14,D0          
0000026C                           591          TRAP    #15
0000026C                           592          MOVE.B  #3,D0          
0000026C                           593          TRAP    #15
0000026C                           594          ENDM
0000026C                           595  
0000026C                           596  printDnDest:    MACRO 
0000026C                           597          MOVE.W  \1, D1      ; bits 9 to 11
0000026C                           598          LSL     #$04, D1
0000026C                           599          LSR     #$08, D1
0000026C                           600          LSR     #$05, D1
0000026C                           601          LEA     oDn, A1     
0000026C                           602          MOVE.B  #14,D0          
0000026C                           603          TRAP    #15
0000026C                           604          MOVE.B  #3,D0          
0000026C                           605          TRAP    #15
0000026C                           606          ENDM
0000026C                           607  printDnSrc:    MACRO   
0000026C                           608          CLR.L   D1
0000026C                           609          MOVE.W  \1, D1   ; bits 0 to 2
0000026C                           610          LSL     #$08, D1
0000026C                           611          LSL     #$05, D1
0000026C                           612          LSR     #$08, D1
0000026C                           613          LSR     #$05, D1
0000026C                           614          LEA     oDn, A1     
0000026C                           615          MOVE.B  #14,D0          
0000026C                           616          TRAP    #15
0000026C                           617          MOVE.B  #3,D0          
0000026C                           618          TRAP    #15
0000026C                           619          ENDM
0000026C                           620  printAnDest:    MACRO
0000026C                           621          MOVE.W  \1, D1
0000026C                           622          LSL     #$04, D1
0000026C                           623          LSR     #$08, D1
0000026C                           624          LSR     #$05, D1
0000026C                           625          LEA     oAn, A1     
0000026C                           626          MOVE.B  #14,D0          
0000026C                           627          TRAP    #15
0000026C                           628          MOVE.B  #3,D0          
0000026C                           629          TRAP    #15
0000026C                           630          ENDM
0000026C                           631  printAnSrc:    MACRO   
0000026C                           632          MOVE.W  \1, D1   ; bits 0 to 2
0000026C                           633          LSL     #$08, D1
0000026C                           634          LSL     #$05, D1
0000026C                           635          LSR     #$08, D1
0000026C                           636          LSR     #$05, D1
0000026C                           637          LEA     oAn, A1     
0000026C                           638          MOVE.B  #14,D0          
0000026C                           639          TRAP    #15
0000026C                           640          MOVE.B  #3,D0          
0000026C                           641          TRAP    #15
0000026C                           642          ENDM
0000026C                           643  printAdr:      MACRO
0000026C                           644          MOVE.W  A2, D1    ; Move A2 into D1
0000026C                           645          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           646          LSR.W   #4, D1      
0000026C                           647          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           648          MOVE.B  #6, D0      ; Read first digit
0000026C                           649          TRAP    #15         ; Execute output
0000026C                           650          
0000026C                           651          MOVE.W  A2, D1    ; Move A2 into D1
0000026C                           652          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
0000026C                           653          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           654          LSR.W   #4, D1      
0000026C                           655          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           656          MOVE.B  #6, D0      ; Read first digit
0000026C                           657          TRAP    #15         ; Execute output
0000026C                           658          
0000026C                           659          MOVE.W  A2, D1    ; Move A2 into D1
0000026C                           660          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000026C                           661          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           662          LSR.W   #4, D1      
0000026C                           663          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           664          MOVE.B  #6, D0      ; Read first digit
0000026C                           665          TRAP    #15         ; Execute output
0000026C                           666          
0000026C                           667          MOVE.W  A2, D1    ; Move A2 into D1
0000026C                           668          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
0000026C                           669          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
0000026C                           670          LSR.W   #8, D1      ; Get the first hex digit of D1
0000026C                           671          LSR.W   #4, D1      
0000026C                           672          ConvertHtoA D1      ; Convert D1 to a character
0000026C                           673          MOVE.B  #6, D0      ; Read first digit
0000026C                           674          TRAP    #15         ; Execute output       
0000026C                           675          ENDM
0000026C                           676  printComma:    MACRO
0000026C                           677          LEA     oComma, A1     
0000026C                           678          MOVE.B  #14,D0          
0000026C                           679          TRAP    #15
0000026C                           680          ENDM
0000026C                           681  printPI:    MACRO
0000026C                           682          LEA     oPstInc, A1     
0000026C                           683          MOVE.B  #14,D0          
0000026C                           684          TRAP    #15
0000026C                           685          ENDM
0000026C                           686  printPD:    MACRO
0000026C                           687          LEA     oPreDec, A1     
0000026C                           688          MOVE.B  #14,D0          
0000026C                           689          TRAP    #15
0000026C                           690          ENDM
0000026C                           691  
0000026C                           692  printLB:    MACRO
0000026C                           693          LEA     oLB, A1     
0000026C                           694          MOVE.B  #14,D0          
0000026C                           695          TRAP    #15
0000026C                           696          ENDM
0000026C                           697  printRB:    MACRO
0000026C                           698          LEA     oRB, A1     
0000026C                           699          MOVE.B  #14,D0          
0000026C                           700          TRAP    #15
0000026C                           701          ENDM
0000026C                           702  printSign:  MACRO
0000026C                           703          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000026C                           704          MOVE.W  #36, D1     ; An = sign
0000026C                           705          TRAP    #15         ; Output = sign
0000026C                           706          ENDM
0000026C                           707  printHash:  MACRO
0000026C                           708          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
0000026C                           709          MOVE.W  #35, D1     ; An = sign
0000026C                           710          TRAP    #15         ; Output = sign
0000026C                           711          ENDM
0000026C                           712          
0000026C                           713  space:      MACRO
0000026C                           714          LEA     oBlank, A1
0000026C                           715          MOVE.B  #14,D0          
0000026C                           716          TRAP    #15
0000026C                           717          ENDM
0000026C                           718  tab:       MACRO
0000026C                           719          LEA     oTab, A1
0000026C                           720          MOVE.B  #14,D0          
0000026C                           721          TRAP    #15
0000026C                           722          ENDM
0000026C                           723          
0000026C                           724  newLine:    MACRO
0000026C                           725          LEA     oBlank, A1
0000026C                           726          MOVE.B  #13,D0          
0000026C                           727          TRAP    #15
0000026C                           728          ENDM
0000026C                           729  ; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0000026C                           730  ; "main" routine
0000026C                           731  ; Dylan, Gary
0000026C                           732  ; 
0000026C                           733  ; TODO: DESCRIPTION OF MAIN ROUTINE FUNCTIONALITY
0000026C                           734  ; ========================================================================
00001000                           735          ORG     $1000
00001000                           736          OPT     MEX
00001000                           737          
00001000  43F8 0000                738  main:   LEA     rSTART, A1  ; Request starting address
00001004  103C 000D                739          MOVE.B  #13, D0
00001008  4E4F                     740          TRAP    #15
0000100A                           741m         readInput   D2      ; Read 4 digit hex input
0000100A                           742m         ; READ USER's input
0000100A  103C 0005                743m         MOVE.B  #5, D0      ; READ FIRST DIGIT
0000100E  4E4F                     744m         TRAP    #15
00001010                           745mm         CONVERTATOH D1      ; CONVERT TO HEX
00001010  0C01 0039                746mm         CMPI.B  #$39, D1
00001014  6E00 000A                747mm         BGT     ALPHA_2
00001018  0401 0030                748mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000101C  6000 0006                749mm         BRA     DONE_2
00001020  0401 0037                750mm ALPHA_2: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001024  4E71                     751mm DONE_2: NOP
00001026                           752mm         ENDM
00001026  E149                     753m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
00001028  E949                     754m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
0000102A  3401                     755m         MOVE.W  D1, D2      ; STORE IN D2
0000102C                           756m         
0000102C  323C 0000                757m         MOVE.W  #0, D1      ; CLEAR D1
00001030  4E4F                     758m         TRAP    #15         ; READ SECOND DIGIT
00001032                           759mm         CONVERTATOH D1
00001032  0C01 0039                760mm         CMPI.B  #$39, D1
00001036  6E00 000A                761mm         BGT     ALPHA_3
0000103A  0401 0030                762mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000103E  6000 0006                763mm         BRA     DONE_3
00001042  0401 0037                764mm ALPHA_3: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001046  4E71                     765mm DONE_3: NOP
00001048                           766mm         ENDM
00001048  E149                     767m         LSL.W   #8, D1      
0000104A  D441                     768m         ADD.W   D1, D2
0000104C                           769m         
0000104C  323C 0000                770m         MOVE.W  #0, D1      ; CLEAR D1
00001050  4E4F                     771m         TRAP    #15         ; READ THIRD DIGIT
00001052                           772mm         CONVERTATOH D1
00001052  0C01 0039                773mm         CMPI.B  #$39, D1
00001056  6E00 000A                774mm         BGT     ALPHA_4
0000105A  0401 0030                775mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000105E  6000 0006                776mm         BRA     DONE_4
00001062  0401 0037                777mm ALPHA_4: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001066  4E71                     778mm DONE_4: NOP
00001068                           779mm         ENDM
00001068  E949                     780m         LSL.W   #4, D1      
0000106A  D441                     781m         ADD.W   D1, D2
0000106C                           782m         
0000106C  323C 0000                783m         MOVE.W  #0, D1      ; CLEAR D1
00001070  4E4F                     784m         TRAP    #15         ; READ FINAL DIGIT
00001072                           785mm         CONVERTATOH D1     
00001072  0C01 0039                786mm         CMPI.B  #$39, D1
00001076  6E00 000A                787mm         BGT     ALPHA_5
0000107A  0401 0030                788mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000107E  6000 0006                789mm         BRA     DONE_5
00001082  0401 0037                790mm ALPHA_5: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00001086  4E71                     791mm DONE_5: NOP
00001088                           792mm         ENDM
00001088  D441                     793m         ADD.W   D1, D2
0000108A  3402                     794m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
0000108C                           795m         ENDM
0000108C  3442                     796          MOVE.W  D2, A2      ; Store the address in A2
0000108E                           797m         newline
0000108E  43F8 00D8                798m         LEA     OBLANK, A1
00001092  103C 000D                799m         MOVE.B  #13,D0          
00001096  4E4F                     800m         TRAP    #15
00001098                           801m         ENDM
00001098                           802          
00001098  43F8 0031                803          LEA     rEND, A1    ; Request ending address
0000109C  103C 000D                804          MOVE.B  #13, D0
000010A0  4E4F                     805          TRAP    #15
000010A2                           806m         readInput   D2      ; Read 4 digit hex input
000010A2                           807m         ; READ USER's input
000010A2  103C 0005                808m         MOVE.B  #5, D0      ; READ FIRST DIGIT
000010A6  4E4F                     809m         TRAP    #15
000010A8                           810mm         CONVERTATOH D1      ; CONVERT TO HEX
000010A8  0C01 0039                811mm         CMPI.B  #$39, D1
000010AC  6E00 000A                812mm         BGT     ALPHA_8
000010B0  0401 0030                813mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010B4  6000 0006                814mm         BRA     DONE_8
000010B8  0401 0037                815mm ALPHA_8: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010BC  4E71                     816mm DONE_8: NOP
000010BE                           817mm         ENDM
000010BE  E149                     818m         LSL.W   #8, D1      ; SHIFT LEFT 8 BITS
000010C0  E949                     819m         LSL.W   #4, D1      ; SHIFT LEFT ADDITIONAL 4 BITS (1ST DIGIT)
000010C2  3401                     820m         MOVE.W  D1, D2      ; STORE IN D2
000010C4                           821m         
000010C4  323C 0000                822m         MOVE.W  #0, D1      ; CLEAR D1
000010C8  4E4F                     823m         TRAP    #15         ; READ SECOND DIGIT
000010CA                           824mm         CONVERTATOH D1
000010CA  0C01 0039                825mm         CMPI.B  #$39, D1
000010CE  6E00 000A                826mm         BGT     ALPHA_9
000010D2  0401 0030                827mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010D6  6000 0006                828mm         BRA     DONE_9
000010DA  0401 0037                829mm ALPHA_9: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010DE  4E71                     830mm DONE_9: NOP
000010E0                           831mm         ENDM
000010E0  E149                     832m         LSL.W   #8, D1      
000010E2  D441                     833m         ADD.W   D1, D2
000010E4                           834m         
000010E4  323C 0000                835m         MOVE.W  #0, D1      ; CLEAR D1
000010E8  4E4F                     836m         TRAP    #15         ; READ THIRD DIGIT
000010EA                           837mm         CONVERTATOH D1
000010EA  0C01 0039                838mm         CMPI.B  #$39, D1
000010EE  6E00 000A                839mm         BGT     ALPHA_10
000010F2  0401 0030                840mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000010F6  6000 0006                841mm         BRA     DONE_10
000010FA  0401 0037                842mm ALPHA_10: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000010FE  4E71                     843mm DONE_10: NOP
00001100                           844mm         ENDM
00001100  E949                     845m         LSL.W   #4, D1      
00001102  D441                     846m         ADD.W   D1, D2
00001104                           847m         
00001104  323C 0000                848m         MOVE.W  #0, D1      ; CLEAR D1
00001108  4E4F                     849m         TRAP    #15         ; READ FINAL DIGIT
0000110A                           850mm         CONVERTATOH D1     
0000110A  0C01 0039                851mm         CMPI.B  #$39, D1
0000110E  6E00 000A                852mm         BGT     ALPHA_11
00001112  0401 0030                853mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00001116  6000 0006                854mm         BRA     DONE_11
0000111A  0401 0037                855mm ALPHA_11: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000111E  4E71                     856mm DONE_11: NOP
00001120                           857mm         ENDM
00001120  D441                     858m         ADD.W   D1, D2
00001122  3402                     859m         MOVE.W  D2, D2      ; MOVE TO OUTPUT
00001124                           860m         ENDM
00001124  31C2 0990                861          MOVE.W  D2, ($990)  ; Store at mem location $990
00001128                           862m         newline
00001128  43F8 00D8                863m         LEA     OBLANK, A1
0000112C  103C 000D                864m         MOVE.B  #13,D0          
00001130  4E4F                     865m         TRAP    #15
00001132                           866m         ENDM
00001132                           867m         newline
00001132  43F8 00D8                868m         LEA     OBLANK, A1
00001136  103C 000D                869m         MOVE.B  #13,D0          
0000113A  4E4F                     870m         TRAP    #15
0000113C                           871m         ENDM
0000113C                           872          
0000113C  7200                     873  goLoop: MOVE.L  #0, D1
0000113E  3238 0990                874          MOVE.W  ($990), D1
00001142  240A                     875          MOVE.L  A2, D2
00001144  B282                     876          CMP.L   D2, D1    ; Check if the loop is over
00001146  6F00 00B2                877          BLE     endSim      ; A2 is past the loop start if this is reached
0000114A                           878m         printAdr
0000114A  320A                     879m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000114C  E049                     880m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000114E  E849                     881m         LSR.W   #4, D1      
00001150                           882mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001150  0C01 0009                883mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001154  6E00 000A                884mm         BGT     ALPHA_15
00001158  0601 0030                885mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000115C  6000 0006                886mm         BRA     DONE_15
00001160  0601 0037                887mm ALPHA_15: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001164  4E71                     888mm DONE_15: NOP
00001166                           889mm         ENDM
00001166  103C 0006                890m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000116A  4E4F                     891m         TRAP    #15         ; EXECUTE OUTPUT
0000116C                           892m         
0000116C  320A                     893m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
0000116E  E949                     894m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001170  E049                     895m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001172  E849                     896m         LSR.W   #4, D1      
00001174                           897mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001174  0C01 0009                898mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001178  6E00 000A                899mm         BGT     ALPHA_16
0000117C  0601 0030                900mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001180  6000 0006                901mm         BRA     DONE_16
00001184  0601 0037                902mm ALPHA_16: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001188  4E71                     903mm DONE_16: NOP
0000118A                           904mm         ENDM
0000118A  103C 0006                905m         MOVE.B  #6, D0      ; READ FIRST DIGIT
0000118E  4E4F                     906m         TRAP    #15         ; EXECUTE OUTPUT
00001190                           907m         
00001190  320A                     908m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
00001192  E149                     909m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001194  E049                     910m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001196  E849                     911m         LSR.W   #4, D1      
00001198                           912mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001198  0C01 0009                913mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000119C  6E00 000A                914mm         BGT     ALPHA_17
000011A0  0601 0030                915mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011A4  6000 0006                916mm         BRA     DONE_17
000011A8  0601 0037                917mm ALPHA_17: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011AC  4E71                     918mm DONE_17: NOP
000011AE                           919mm         ENDM
000011AE  103C 0006                920m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011B2  4E4F                     921m         TRAP    #15         ; EXECUTE OUTPUT
000011B4                           922m         
000011B4  320A                     923m         MOVE.W  A2, D1    ; MOVE A2 INTO D1
000011B6  E149                     924m         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000011B8  E949                     925m         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000011BA  E049                     926m         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000011BC  E849                     927m         LSR.W   #4, D1      
000011BE                           928mm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000011BE  0C01 0009                929mm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000011C2  6E00 000A                930mm         BGT     ALPHA_18
000011C6  0601 0030                931mm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000011CA  6000 0006                932mm         BRA     DONE_18
000011CE  0601 0037                933mm ALPHA_18: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000011D2  4E71                     934mm DONE_18: NOP
000011D4                           935mm         ENDM
000011D4  103C 0006                936m         MOVE.B  #6, D0      ; READ FIRST DIGIT
000011D8  4E4F                     937m         TRAP    #15         ; EXECUTE OUTPUT       
000011DA                           938m         ENDM
000011DA                           939m         tab
000011DA  43F8 00DA                940m         LEA     OTAB, A1
000011DE  103C 000E                941m         MOVE.B  #14,D0          
000011E2  4E4F                     942m         TRAP    #15
000011E4                           943m         ENDM
000011E4  4EB9 000011FE            944          JSR     identifyOpcode  ; Decode what is at A2
000011EA  381A                     945          MOVE.W  (A2)+, D4   ; Increment A2 (D1 isn't relevant)
000011EC                           946m         newline
000011EC  43F8 00D8                947m         LEA     OBLANK, A1
000011F0  103C 000D                948m         MOVE.B  #13,D0          
000011F4  4E4F                     949m         TRAP    #15
000011F6                           950m         ENDM
000011F6  6000 FF44                951          BRA     goLoop
000011FA                           952          
000011FA                           953          
000011FA                           954          
000011FA  FFFF FFFF                955  endSim: SIMHALT             ; halt simulator
000011FE                           956          
000011FE                           957          
000011FE                           958  ; ========================================================================
000011FE                           959  ; "identifyOpcode" subroutine
000011FE                           960  ; Jonathan
000011FE                           961  ; 
000011FE                           962  ; Reads the Word at A2 and determines which opcode it represents.
000011FE                           963  ; When the opcode is identified, the appropriate "decodeX" subroutine
000011FE                           964  ; is invoked.
000011FE                           965  ;
000011FE                           966  ; Uses a generated Trie structure to determine where to split on which bits
000011FE                           967  ; in order to efficiently identify the exact opcode
000011FE                           968  ; ========================================================================
000011FE                           969  identifyOpcode:
000011FE  3612                     970          MOVE.W  (A2), D3    ; Move the value at A2 into D3 for bit testing
00001200  0803 000F                971          BTST    #$F, D3     ; Check the 1st bit (from the left)
00001204  6700 0006                972          BEQ     split0      ; Split based on the first bit
00001208  6000 008A                973          BRA     split1
0000120C                           974  
0000120C                           975  split0: 
0000120C  0803 000E                976          BTST    #$E, D3     ; Check the 2nd bit
00001210  6700 0006                977          BEQ     split000    ; MOVE follows 00+        
00001214  6000 0016                978          BRA     split01
00001218                           979          
00001218                           980  split000:        
00001218  0803 000D                981          BTST    #$D, D3     ; Check the 3rd bit
0000121C  6600 0136                982          BNE     decodeMOVE
00001220  0803 000C                983          BTST    #$C, D3     ; Check the 3rd bit
00001224  6600 012E                984          BNE     decodeMOVE
00001228  6000 5A16                985          BRA     outputData
0000122C                           986  split01:
0000122C  0803 000D                987          BTST    #$D, D3     ; Check the 3rd bit
00001230  6700 0006                988          BEQ     split0100   ; Code is 010, but all subcodes are 0100
00001234  6000 0032                989          BRA     split0110   ; Code is 011, but all subcodes are 0110        
00001238                           990  
00001238                           991  split0100:
00001238  0803 0008                992          BTST    #$8, D3     ; Check the 8th bit for LEA
0000123C  6600 3414                993          BNE     decodeLEA   ; LEA follows 0100XXX1+
00001240  0803 000B                994          BTST    #$B, D3     ; Check the 5th bit for NOT
00001244  6700 475E                995          BEQ     decodeNOT   ; NOT follows 01000+
00001248  0803 0009                996          BTST    #$9, D3     ; Check the 7th bit
0000124C  6700 0D36                997          BEQ     decodeMOVEM ; MOVEM follows 01001x0+
00001250  6000 0002                998          BRA     split0100111
00001254                           999  
00001254                          1000  split0100111:
00001254  0803 0007               1001          BTST    #$7, D3     ; Check the 9th bit for JSR
00001258  6600 52FE               1002          BNE     decodeJSR   ; JSR follows 010011101+
0000125C  0803 0002               1003          BTST    #$2, D3     ; Check the 14th bit
00001260  6700 00AA               1004          BEQ     decodeNOP   ; NOP follows 01001110011100+
00001264  6000 5914               1005          BRA     decodeRTS   ; RTS follows 01001110011101+
00001268                          1006  
00001268                          1007  split0110:
00001268  0803 000B               1008          BTST    #$B, D3     ; Check the 5th bit
0000126C  6700 0006               1009          BEQ     split01100
00001270  6000 0016               1010          BRA     split01101
00001274                          1011  
00001274                          1012  split01100:
00001274  0803 000A               1013          BTST    #$A, D3     ; Check the 6th bit
00001278  6700 5948               1014          BEQ     decodeBRA   ; BRA starts with 011000
0000127C  0803 000C               1015          BTST    #$C, D3     ; Check the 6th bit
00001280  6600 59BE               1016          BNE     outputData  ; MOVEQ
00001284  6000 5158               1017          BRA     decodeBEQ   ; BEQ starts with 011001
00001288                          1018          
00001288                          1019  split01101:
00001288  0803 0008               1020          BTST    #$8, D3     ; Check the 8th bit
0000128C  6700 51CE               1021          BEQ     decodeBGE   ; BGE starts with 01101100
00001290  6000 5248               1022          BRA     decodeBLT   ; BLT starts with 01101101
00001294                          1023          
00001294                          1024  split1: 
00001294  0803 000E               1025          BTST    #$E, D3     ; Check the 2nd bit
00001298  6700 0006               1026          BEQ     split10
0000129C  6000 000E               1027          BRA     split11
000012A0                          1028  
000012A0                          1029  split10:
000012A0  0803 000C               1030          BTST    #$C, D3     ; Check the 4th bit
000012A4  6700 2D70               1031          BEQ     decodeDIVU  ; DIVU follows 1000+
000012A8  6000 1A24               1032          BRA     decodeSUB   ; SUB follows 1001+
000012AC                          1033  
000012AC                          1034  split11:
000012AC  0803 000D               1035          BTST    #$D, D3     ; Check the 3rd bit
000012B0  6700 0006               1036          BEQ     split110
000012B4  6000 0026               1037          BRA     split111
000012B8                          1038  
000012B8                          1039  split110:
000012B8  0803 000C               1040          BTST    #$C, D3     ; Check the 4th bit for ADD
000012BC  6600 0D04               1041          BNE     decodeADD   ; ADD follows 1101+
000012C0  0803 0008               1042          BTST    #$8, D3     ; MULS.W has all 3 bits at 8, 9, and 10 set
000012C4  6700 39D2               1043          BEQ     decodeAND   ; If any of these BTSTs show a 0, opcode is AND
000012C8  0803 0007               1044          BTST    #$7, D3
000012CC  6700 39CA               1045          BEQ     decodeAND
000012D0  0803 0006               1046          BTST    #$6, D3
000012D4  6700 39C2               1047          BEQ     decodeAND
000012D8  6000 2700               1048          BRA     decodeMULS  ; All 3 positions (8, 9, 10) were set
000012DC                          1049  
000012DC                          1050  split111: 
000012DC  0803 0003               1051          BTST    #$3, D3     ; Check 13th bit
000012E0  6700 001A               1052          BEQ     ariShift ; ASL_ASR Memory Shift follows 1110000x11+
000012E4                          1053     
000012E4  0803 0005               1054          BTST    #$5, D3     
000012E8  6600 0006               1055          BNE     logReg     
000012EC  6000 4D0C               1056          BRA     decodeLSx_M
000012F0  0803 000C               1057  logReg: BTST    #12, D3         
000012F4  6700 4DDE               1058          BEQ     decodeLSx_R
000012F8  6000 5946               1059          BRA     outputData
000012FC                          1060  
000012FC                          1061  ariShift: ; Special split specifically for Arithmetic Shift
000012FC  0803 0005               1062          BTST    #$5, D3     
00001300  6600 0006               1063          BNE     ariReg
00001304  6000 4EE6               1064          BRA     decodeASx_M    
00001308  6000 4FBC               1065  ariReg: BRA     decodeASx_R
0000130C                          1066              
0000130C                          1067  
0000130C                          1068  ; ========================================================================
0000130C                          1069  ; "decodeX" subroutines
0000130C                          1070  ; Gary, Dylan
0000130C                          1071  ; 
0000130C                          1072  ; Set of subroutines which are invoked by identifyOpcode.
0000130C                          1073  ; A decodeX subroutine will read from A2 and use TRAP #15 to output
0000130C                          1074  ; the instruction.
0000130C                          1075  ;
0000130C                          1076  ; For example, the "decodeLEA" subroutine will read A2 (which contains the
0000130C                          1077  ; opcode) to record the parameters (such as destination register). If the
0000130C                          1078  ; opcode indicates that the next word represents a destination address, then
0000130C                          1079  ; decodeLEA will advance A2 to the next word and decode that.
0000130C                          1080  ; To finish, decodeLEA will output the decoded instruction with TRAP #15
0000130C                          1081  ; ========================================================================
0000130C                          1082  
0000130C                          1083  ; ------------------------------------------------------------
0000130C                          1084  ; 1. "decodeNOP" subroutine
0000130C                          1085  ; AUTHOR
0000130C                          1086  ;
0000130C                          1087  ; TODO: DESCRIPTION
0000130C                          1088  ; ------------------------------------------------------------
0000130C                          1089  decodeNOP:
0000130C                          1090m         verifyOpcode    pNOP, (A2)
0000130C  43F8 00F6               1091m         LEA     PNOP, A1      ; INPUT PATTERN STRING
00001310  3612                    1092m         MOVE.W  (A2), D3      ; INPUT VALUE
00001312  123C 000F               1093m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001316                          1094m         
00001316                          1095m LOOP_21: 
00001316  0C11 0030               1096m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000131A  6700 000E               1097m         BEQ     CHECKFOR0_21
0000131E  0C11 0031               1098m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001322  6700 0010               1099m         BEQ     CHECKFOR1_21
00001326  6000 0012               1100m         BRA     NEXT_21      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000132A                          1101m         
0000132A                          1102m CHECKFOR0_21: 
0000132A  0303                    1103m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000132C  6600 5912               1104m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001330  6000 0008               1105m         BRA     NEXT_21
00001334                          1106m 
00001334                          1107m CHECKFOR1_21:
00001334  0303                    1108m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001336  6700 5908               1109m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000133A                          1110m 
0000133A                          1111m NEXT_21: 
0000133A  B23C 0000               1112m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000133E  6700 0008               1113m         BEQ     COMPLETE_21  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001342  5301                    1114m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001344  1819                    1115m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001346  60CE                    1116m         BRA     LOOP_21      ; BEGIN LOOP AGAIN
00001348                          1117m 
00001348                          1118m COMPLETE_21:  ; OPCODE HAS BEEN VERIFIED
00001348                          1119m         ENDM
00001348  43F8 0060               1120          LEA     oNOP, A1     ; Loads byteVAR
0000134C  103C 000E               1121          MOVE.B  #14,D0          
00001350  4E4F                    1122          TRAP    #15
00001352  4E75                    1123          RTS                 ; Return from decodeNOP subroutine
00001354                          1124  
00001354                          1125  
00001354                          1126  ; ------------------------------------------------------------
00001354                          1127  ; 2. "decodeMOVE" subroutine
00001354                          1128  ; AUTHOR
00001354                          1129  ;
00001354                          1130  ; TODO: DESCRIPTION
00001354                          1131  ; ------------------------------------------------------------
00001354                          1132  decodeMOVE:
00001354                          1133m         verifyOpcode    pMOVE, (A2)
00001354  43F8 0107               1134m         LEA     PMOVE, A1      ; INPUT PATTERN STRING
00001358  3612                    1135m         MOVE.W  (A2), D3      ; INPUT VALUE
0000135A  123C 000F               1136m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000135E                          1137m         
0000135E                          1138m LOOP_22: 
0000135E  0C11 0030               1139m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001362  6700 000E               1140m         BEQ     CHECKFOR0_22
00001366  0C11 0031               1141m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000136A  6700 0010               1142m         BEQ     CHECKFOR1_22
0000136E  6000 0012               1143m         BRA     NEXT_22      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001372                          1144m         
00001372                          1145m CHECKFOR0_22: 
00001372  0303                    1146m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001374  6600 58CA               1147m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001378  6000 0008               1148m         BRA     NEXT_22
0000137C                          1149m 
0000137C                          1150m CHECKFOR1_22:
0000137C  0303                    1151m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000137E  6700 58C0               1152m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001382                          1153m 
00001382                          1154m NEXT_22: 
00001382  B23C 0000               1155m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001386  6700 0008               1156m         BEQ     COMPLETE_22  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000138A  5301                    1157m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000138C  1819                    1158m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000138E  60CE                    1159m         BRA     LOOP_22      ; BEGIN LOOP AGAIN
00001390                          1160m 
00001390                          1161m COMPLETE_22:  ; OPCODE HAS BEEN VERIFIED
00001390                          1162m         ENDM
00001390  43F8 0064               1163          LEA     oMOVE, A1     
00001394  103C 000E               1164          MOVE.B  #14,D0          
00001398  4E4F                    1165          TRAP    #15
0000139A                          1166m         printSize       (A2)
0000139A  3612                    1167m         MOVE.W  (A2), D3      ; INPUT VALUE
0000139C  4247                    1168m         CLR     D7      
0000139E                          1169m CHECKFORB_23: 
0000139E  0803 000D               1170m         BTST    #13, D3      ; CHECK IF CONTAINS 0
000013A2  6600 0010               1171m         BNE     CHECKFORW_23  ; IF NOT GO TO WORD SIZE
000013A6  43F8 00BB               1172m         LEA     OBSIZE, A1   ; IF BIT #13 IS 0, SIZE IS BYTE AND MACRO ENDS. 
000013AA  103C 000E               1173m         MOVE.B  #14,D0          
000013AE  4E4F                    1174m         TRAP    #15
000013B0  6000 0026               1175m         BRA     COMPLETE_23      
000013B4                          1176m CHECKFORW_23: 
000013B4  0803 000C               1177m         BTST    #12, D3      ; CHECK IF CONTAINS 1
000013B8  6700 0010               1178m         BEQ     CHECKFORL_23  ; IF NOT, SIZE CANNOT BE WORD
000013BC  43F8 00BF               1179m         LEA     OWSIZE, A1   ; IF BIT #12 IS 1, SIZE IS WORD AND MACRO ENDS.  
000013C0  103C 000E               1180m         MOVE.B  #14,D0          
000013C4  4E4F                    1181m         TRAP    #15
000013C6  6000 0010               1182m         BRA     COMPLETE_23  
000013CA                          1183m CHECKFORL_23:
000013CA  1E3C 0001               1184m         MOVE.B  #$1, D7
000013CE  43F8 00C3               1185m         LEA     OLSIZE, A1   ; IF BIT #12 IS 0, SIZE IS LONGWORD AND MACRO ENDS.  
000013D2  103C 000E               1186m         MOVE.B  #14,D0          
000013D6  4E4F                    1187m         TRAP    #15
000013D8                          1188m COMPLETE_23:  ; SIZE HAS BEEN PRINTED
000013D8                          1189m         ENDM
000013D8                          1190m         prepareAdrMode  #$1, (A2)
000013D8  3C3C 0001               1191m         MOVE.W  #$1, D6      ; INPUT VALUE
000013DC  3212                    1192m         MOVE.W  (A2), D1
000013DE  BC3C 0001               1193m         CMP.B   #$01, D6
000013E2  6700 000C               1194m         BEQ     ADRSOURCE_24    
000013E6                          1195m ADRDEST_24:
000013E6  EF49                    1196m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000013E8  E049                    1197m         LSR     #$08, D1
000013EA  EA49                    1198m         LSR     #$05, D1
000013EC  6000 000A               1199m         BRA     COMPLETE_24 
000013F0                          1200m ADRSOURCE_24:                
000013F0  E149                    1201m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000013F2  E549                    1202m         LSL     #$02, D1
000013F4  E049                    1203m         LSR     #$08, D1
000013F6  EA49                    1204m         LSR     #$05, D1
000013F8                          1205m COMPLETE_24:  ; OPCODE HAS BEEN VERIFIED
000013F8                          1206m         ENDM        
000013F8                          1207m         decodeAdrMode   (A2), D1
000013F8  3612                    1208m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000013FA  3201                    1209m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000013FC                          1210m 
000013FC  B23C 0001               1211m         CMP.B   #$01, D1
00001400  6700 0066               1212m         BEQ     ADRREGDIRECT_25    
00001404  B23C 0002               1213m         CMP.B   #$02, D1
00001408  6700 00A0               1214m         BEQ     ADRREGINDIRECT_25  
0000140C  B23C 0003               1215m         CMP.B   #$03, D1
00001410  6700 0102               1216m         BEQ     ADRREGPOSTINC_25  
00001414  B23C 0004               1217m         CMP.B   #$04, D1
00001418  6700 0178               1218m         BEQ     ADRREGPREDEC_25
0000141C  B23C 0007               1219m         CMP.B   #$07, D1
00001420  6700 01EE               1220m         BEQ     ADRABSOLUTE_25    
00001424                          1221m         
00001424                          1222m DATAREGDIRECT_25: 
00001424  BC3C 0001               1223m         CMP.B   #$01, D6
00001428  6700 001E               1224m         BEQ     DATAREGDIRECTSRC_25   
0000142C                          1225m DATAREGDIRECTDEST_25: 
0000142C                          1226mm         PRINTDNDEST D3 
0000142C  3203                    1227mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000142E  E949                    1228mm         LSL     #$04, D1
00001430  E049                    1229mm         LSR     #$08, D1
00001432  EA49                    1230mm         LSR     #$05, D1
00001434  43F8 00C7               1231mm         LEA     ODN, A1     
00001438  103C 000E               1232mm         MOVE.B  #14,D0          
0000143C  4E4F                    1233mm         TRAP    #15
0000143E  103C 0003               1234mm         MOVE.B  #3,D0          
00001442  4E4F                    1235mm         TRAP    #15
00001444                          1236mm         ENDM
00001444  6000 0562               1237m         BRA     COMPLETE_25 
00001448                          1238m DATAREGDIRECTSRC_25: 
00001448                          1239mm         PRINTDNSRC D3 
00001448  4281                    1240mm         CLR.L   D1
0000144A  3203                    1241mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000144C  E149                    1242mm         LSL     #$08, D1
0000144E  EB49                    1243mm         LSL     #$05, D1
00001450  E049                    1244mm         LSR     #$08, D1
00001452  EA49                    1245mm         LSR     #$05, D1
00001454  43F8 00C7               1246mm         LEA     ODN, A1     
00001458  103C 000E               1247mm         MOVE.B  #14,D0          
0000145C  4E4F                    1248mm         TRAP    #15
0000145E  103C 0003               1249mm         MOVE.B  #3,D0          
00001462  4E4F                    1250mm         TRAP    #15
00001464                          1251mm         ENDM
00001464  6000 0542               1252m         BRA     COMPLETE_25   
00001468                          1253m         
00001468                          1254m ADRREGDIRECT_25: 
00001468  BC3C 0001               1255m         CMP.B   #$01, D6
0000146C  6700 001E               1256m         BEQ     ADRREGDIRECTSRC_25   
00001470                          1257m ADRREGDIRECTDEST_25:
00001470                          1258mm         PRINTANDEST D3
00001470  3203                    1259mm         MOVE.W  D3, D1
00001472  E949                    1260mm         LSL     #$04, D1
00001474  E049                    1261mm         LSR     #$08, D1
00001476  EA49                    1262mm         LSR     #$05, D1
00001478  43F8 00C9               1263mm         LEA     OAN, A1     
0000147C  103C 000E               1264mm         MOVE.B  #14,D0          
00001480  4E4F                    1265mm         TRAP    #15
00001482  103C 0003               1266mm         MOVE.B  #3,D0          
00001486  4E4F                    1267mm         TRAP    #15
00001488                          1268mm         ENDM
00001488  6000 051E               1269m         BRA     COMPLETE_25   
0000148C                          1270m ADRREGDIRECTSRC_25:
0000148C                          1271mm         PRINTANSRC D3
0000148C  3203                    1272mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000148E  E149                    1273mm         LSL     #$08, D1
00001490  EB49                    1274mm         LSL     #$05, D1
00001492  E049                    1275mm         LSR     #$08, D1
00001494  EA49                    1276mm         LSR     #$05, D1
00001496  43F8 00C9               1277mm         LEA     OAN, A1     
0000149A  103C 000E               1278mm         MOVE.B  #14,D0          
0000149E  4E4F                    1279mm         TRAP    #15
000014A0  103C 0003               1280mm         MOVE.B  #3,D0          
000014A4  4E4F                    1281mm         TRAP    #15
000014A6                          1282mm         ENDM
000014A6  6000 0500               1283m         BRA     COMPLETE_25   
000014AA                          1284m        
000014AA                          1285m ADRREGINDIRECT_25:   
000014AA  BC3C 0001               1286m         CMP.B   #$01, D6
000014AE  6700 0032               1287m         BEQ     ADRREGINDIRECTSRC_25   
000014B2                          1288m ADRREGINDIRECTDEST_25:
000014B2                          1289mm         PRINTLB
000014B2  43F8 00CB               1290mm         LEA     OLB, A1     
000014B6  103C 000E               1291mm         MOVE.B  #14,D0          
000014BA  4E4F                    1292mm         TRAP    #15
000014BC                          1293mm         ENDM
000014BC                          1294mm         PRINTANDEST D3  
000014BC  3203                    1295mm         MOVE.W  D3, D1
000014BE  E949                    1296mm         LSL     #$04, D1
000014C0  E049                    1297mm         LSR     #$08, D1
000014C2  EA49                    1298mm         LSR     #$05, D1
000014C4  43F8 00C9               1299mm         LEA     OAN, A1     
000014C8  103C 000E               1300mm         MOVE.B  #14,D0          
000014CC  4E4F                    1301mm         TRAP    #15
000014CE  103C 0003               1302mm         MOVE.B  #3,D0          
000014D2  4E4F                    1303mm         TRAP    #15
000014D4                          1304mm         ENDM
000014D4                          1305mm         PRINTRB
000014D4  43F8 00CD               1306mm         LEA     ORB, A1     
000014D8  103C 000E               1307mm         MOVE.B  #14,D0          
000014DC  4E4F                    1308mm         TRAP    #15
000014DE                          1309mm         ENDM
000014DE  6000 04C8               1310m         BRA     COMPLETE_25     
000014E2                          1311m ADRREGINDIRECTSRC_25:   
000014E2                          1312mm         PRINTLB
000014E2  43F8 00CB               1313mm         LEA     OLB, A1     
000014E6  103C 000E               1314mm         MOVE.B  #14,D0          
000014EA  4E4F                    1315mm         TRAP    #15
000014EC                          1316mm         ENDM
000014EC                          1317mm         PRINTANSRC D3  
000014EC  3203                    1318mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000014EE  E149                    1319mm         LSL     #$08, D1
000014F0  EB49                    1320mm         LSL     #$05, D1
000014F2  E049                    1321mm         LSR     #$08, D1
000014F4  EA49                    1322mm         LSR     #$05, D1
000014F6  43F8 00C9               1323mm         LEA     OAN, A1     
000014FA  103C 000E               1324mm         MOVE.B  #14,D0          
000014FE  4E4F                    1325mm         TRAP    #15
00001500  103C 0003               1326mm         MOVE.B  #3,D0          
00001504  4E4F                    1327mm         TRAP    #15
00001506                          1328mm         ENDM
00001506                          1329mm         PRINTRB
00001506  43F8 00CD               1330mm         LEA     ORB, A1     
0000150A  103C 000E               1331mm         MOVE.B  #14,D0          
0000150E  4E4F                    1332mm         TRAP    #15
00001510                          1333mm         ENDM
00001510  6000 0496               1334m         BRA     COMPLETE_25   
00001514                          1335m         
00001514                          1336m ADRREGPOSTINC_25:   
00001514  BC3C 0001               1337m         CMP.B   #$01, D6
00001518  6700 003C               1338m         BEQ     ADRREGPOSTINCSRC_25   
0000151C                          1339m ADRREGPOSTINCDEST_25: 
0000151C                          1340mm         PRINTLB
0000151C  43F8 00CB               1341mm         LEA     OLB, A1     
00001520  103C 000E               1342mm         MOVE.B  #14,D0          
00001524  4E4F                    1343mm         TRAP    #15
00001526                          1344mm         ENDM
00001526                          1345mm         PRINTANDEST D3  
00001526  3203                    1346mm         MOVE.W  D3, D1
00001528  E949                    1347mm         LSL     #$04, D1
0000152A  E049                    1348mm         LSR     #$08, D1
0000152C  EA49                    1349mm         LSR     #$05, D1
0000152E  43F8 00C9               1350mm         LEA     OAN, A1     
00001532  103C 000E               1351mm         MOVE.B  #14,D0          
00001536  4E4F                    1352mm         TRAP    #15
00001538  103C 0003               1353mm         MOVE.B  #3,D0          
0000153C  4E4F                    1354mm         TRAP    #15
0000153E                          1355mm         ENDM
0000153E                          1356mm         PRINTRB
0000153E  43F8 00CD               1357mm         LEA     ORB, A1     
00001542  103C 000E               1358mm         MOVE.B  #14,D0          
00001546  4E4F                    1359mm         TRAP    #15
00001548                          1360mm         ENDM
00001548                          1361mm         PRINTPI
00001548  43F8 00D4               1362mm         LEA     OPSTINC, A1     
0000154C  103C 000E               1363mm         MOVE.B  #14,D0          
00001550  4E4F                    1364mm         TRAP    #15
00001552                          1365mm         ENDM
00001552  6000 0454               1366m         BRA     COMPLETE_25  
00001556                          1367m ADRREGPOSTINCSRC_25:           
00001556                          1368mm         PRINTLB
00001556  43F8 00CB               1369mm         LEA     OLB, A1     
0000155A  103C 000E               1370mm         MOVE.B  #14,D0          
0000155E  4E4F                    1371mm         TRAP    #15
00001560                          1372mm         ENDM
00001560                          1373mm         PRINTANSRC D3  
00001560  3203                    1374mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001562  E149                    1375mm         LSL     #$08, D1
00001564  EB49                    1376mm         LSL     #$05, D1
00001566  E049                    1377mm         LSR     #$08, D1
00001568  EA49                    1378mm         LSR     #$05, D1
0000156A  43F8 00C9               1379mm         LEA     OAN, A1     
0000156E  103C 000E               1380mm         MOVE.B  #14,D0          
00001572  4E4F                    1381mm         TRAP    #15
00001574  103C 0003               1382mm         MOVE.B  #3,D0          
00001578  4E4F                    1383mm         TRAP    #15
0000157A                          1384mm         ENDM
0000157A                          1385mm         PRINTRB
0000157A  43F8 00CD               1386mm         LEA     ORB, A1     
0000157E  103C 000E               1387mm         MOVE.B  #14,D0          
00001582  4E4F                    1388mm         TRAP    #15
00001584                          1389mm         ENDM
00001584                          1390mm         PRINTPI
00001584  43F8 00D4               1391mm         LEA     OPSTINC, A1     
00001588  103C 000E               1392mm         MOVE.B  #14,D0          
0000158C  4E4F                    1393mm         TRAP    #15
0000158E                          1394mm         ENDM
0000158E  6000 0418               1395m         BRA     COMPLETE_25  
00001592                          1396m ADRREGPREDEC_25: 
00001592  BC3C 0001               1397m         CMP.B   #$01, D6
00001596  6700 003C               1398m         BEQ     ADRREGPREDECSRC_25   
0000159A                          1399m ADRREGPREDECDEST_25:
0000159A                          1400mm         PRINTPD  
0000159A  43F8 00D2               1401mm         LEA     OPREDEC, A1     
0000159E  103C 000E               1402mm         MOVE.B  #14,D0          
000015A2  4E4F                    1403mm         TRAP    #15
000015A4                          1404mm         ENDM
000015A4                          1405mm         PRINTLB
000015A4  43F8 00CB               1406mm         LEA     OLB, A1     
000015A8  103C 000E               1407mm         MOVE.B  #14,D0          
000015AC  4E4F                    1408mm         TRAP    #15
000015AE                          1409mm         ENDM
000015AE                          1410mm         PRINTANDEST D3  
000015AE  3203                    1411mm         MOVE.W  D3, D1
000015B0  E949                    1412mm         LSL     #$04, D1
000015B2  E049                    1413mm         LSR     #$08, D1
000015B4  EA49                    1414mm         LSR     #$05, D1
000015B6  43F8 00C9               1415mm         LEA     OAN, A1     
000015BA  103C 000E               1416mm         MOVE.B  #14,D0          
000015BE  4E4F                    1417mm         TRAP    #15
000015C0  103C 0003               1418mm         MOVE.B  #3,D0          
000015C4  4E4F                    1419mm         TRAP    #15
000015C6                          1420mm         ENDM
000015C6                          1421mm         PRINTRB
000015C6  43F8 00CD               1422mm         LEA     ORB, A1     
000015CA  103C 000E               1423mm         MOVE.B  #14,D0          
000015CE  4E4F                    1424mm         TRAP    #15
000015D0                          1425mm         ENDM
000015D0  6000 03D6               1426m         BRA     COMPLETE_25   
000015D4                          1427m ADRREGPREDECSRC_25: 
000015D4                          1428mm         PRINTPD  
000015D4  43F8 00D2               1429mm         LEA     OPREDEC, A1     
000015D8  103C 000E               1430mm         MOVE.B  #14,D0          
000015DC  4E4F                    1431mm         TRAP    #15
000015DE                          1432mm         ENDM
000015DE                          1433mm         PRINTLB
000015DE  43F8 00CB               1434mm         LEA     OLB, A1     
000015E2  103C 000E               1435mm         MOVE.B  #14,D0          
000015E6  4E4F                    1436mm         TRAP    #15
000015E8                          1437mm         ENDM
000015E8                          1438mm         PRINTANSRC D3  
000015E8  3203                    1439mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000015EA  E149                    1440mm         LSL     #$08, D1
000015EC  EB49                    1441mm         LSL     #$05, D1
000015EE  E049                    1442mm         LSR     #$08, D1
000015F0  EA49                    1443mm         LSR     #$05, D1
000015F2  43F8 00C9               1444mm         LEA     OAN, A1     
000015F6  103C 000E               1445mm         MOVE.B  #14,D0          
000015FA  4E4F                    1446mm         TRAP    #15
000015FC  103C 0003               1447mm         MOVE.B  #3,D0          
00001600  4E4F                    1448mm         TRAP    #15
00001602                          1449mm         ENDM
00001602                          1450mm         PRINTRB
00001602  43F8 00CD               1451mm         LEA     ORB, A1     
00001606  103C 000E               1452mm         MOVE.B  #14,D0          
0000160A  4E4F                    1453mm         TRAP    #15
0000160C                          1454mm         ENDM
0000160C  6000 039A               1455m         BRA     COMPLETE_25
00001610                          1456m        
00001610                          1457m ADRABSOLUTE_25:
00001610  BC3C 0001               1458m         CMP.B   #$01, D6
00001614  6600 0018               1459m         BNE     ADRABSOLUTEDST_25 
00001618                          1460m         
00001618  3A03                    1461m         MOVE.W  D3, D5
0000161A  0803 0002               1462m         BTST    #2, D3
0000161E  6600 0024               1463m         BNE     ADRIMMEDIATE_25
00001622  0803 0000               1464m         BTST    #0, D3
00001626  6600 0270               1465m         BNE     ADRABSOLUTEL_25
0000162A  6000 01DA               1466m         BRA     ADRABSOLUTEW_25
0000162E                          1467m ADRABSOLUTEDST_25:
0000162E  3A03                    1468m         MOVE.W  D3, D5
00001630  0803 000B               1469m         BTST    #$B, D3
00001634  6600 000E               1470m         BNE     ADRIMMEDIATE_25
00001638  0803 0009               1471m         BTST    #$09, D3
0000163C  6600 025A               1472m         BNE     ADRABSOLUTEL_25
00001640  6000 01C4               1473m         BRA     ADRABSOLUTEW_25
00001644                          1474m ADRIMMEDIATE_25:
00001644  BE3C 0001               1475m         CMP.B   #1, D7
00001648  6700 009E               1476m         BEQ     ADRIMMEDIATEL_25
0000164C                          1477m ADRIMMEDIATEW_25:
0000164C  361A                    1478m         MOVE.W  (A2)+, D3
0000164E                          1479mm         PRINTHASH
0000164E  103C 0006               1480mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001652  323C 0023               1481mm         MOVE.W  #35, D1     ; AN = SIGN
00001656  4E4F                    1482mm         TRAP    #15         ; OUTPUT = SIGN
00001658                          1483mm         ENDM
00001658                          1484mm         PRINTSIGN
00001658  103C 0006               1485mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000165C  323C 0024               1486mm         MOVE.W  #36, D1     ; AN = SIGN
00001660  4E4F                    1487mm         TRAP    #15         ; OUTPUT = SIGN
00001662                          1488mm         ENDM
00001662                          1489mm         ADROUT
00001662  3212                    1490mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001664  E049                    1491mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001666  E849                    1492mm         LSR.W   #4, D1      
00001668                          1493mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001668  0C01 0009               1494mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000166C  6E00 000A               1495mmm         BGT     ALPHA_55
00001670  0601 0030               1496mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001674  6000 0006               1497mmm         BRA     DONE_55
00001678  0601 0037               1498mmm ALPHA_55: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000167C  4E71                    1499mmm DONE_55: NOP
0000167E                          1500mmm         ENDM
0000167E  4E4F                    1501mm         TRAP    #15         ; EXECUTE OUTPUT
00001680                          1502mm         
00001680  3212                    1503mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001682  E949                    1504mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001684  E049                    1505mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001686  E849                    1506mm         LSR.W   #4, D1      
00001688                          1507mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001688  0C01 0009               1508mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000168C  6E00 000A               1509mmm         BGT     ALPHA_56
00001690  0601 0030               1510mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001694  6000 0006               1511mmm         BRA     DONE_56
00001698  0601 0037               1512mmm ALPHA_56: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000169C  4E71                    1513mmm DONE_56: NOP
0000169E                          1514mmm         ENDM
0000169E  4E4F                    1515mm         TRAP    #15         ; EXECUTE OUTPUT
000016A0                          1516mm         
000016A0  3212                    1517mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016A2  E149                    1518mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016A4  E049                    1519mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016A6  E849                    1520mm         LSR.W   #4, D1      
000016A8                          1521mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016A8  0C01 0009               1522mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016AC  6E00 000A               1523mmm         BGT     ALPHA_57
000016B0  0601 0030               1524mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016B4  6000 0006               1525mmm         BRA     DONE_57
000016B8  0601 0037               1526mmm ALPHA_57: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016BC  4E71                    1527mmm DONE_57: NOP
000016BE                          1528mmm         ENDM
000016BE  4E4F                    1529mm         TRAP    #15         ; EXECUTE OUTPUT
000016C0                          1530mm         
000016C0  3212                    1531mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000016C2  E149                    1532mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000016C4  E949                    1533mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000016C6  E049                    1534mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000016C8  E849                    1535mm         LSR.W   #4, D1      
000016CA                          1536mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000016CA  0C01 0009               1537mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000016CE  6E00 000A               1538mmm         BGT     ALPHA_58
000016D2  0601 0030               1539mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000016D6  6000 0006               1540mmm         BRA     DONE_58
000016DA  0601 0037               1541mmm ALPHA_58: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000016DE  4E71                    1542mmm DONE_58: NOP
000016E0                          1543mmm         ENDM
000016E0  4E4F                    1544mm         TRAP    #15         ; EXECUTE OUTPUT       
000016E2                          1545mm         ENDM 
000016E2  3605                    1546m         MOVE.W  D5, D3
000016E4  6000 02C2               1547m         BRA     COMPLETE_25
000016E8                          1548m ADRIMMEDIATEL_25:
000016E8  361A                    1549m         MOVE.W  (A2)+, D3
000016EA                          1550mm         PRINTHASH
000016EA  103C 0006               1551mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016EE  323C 0023               1552mm         MOVE.W  #35, D1     ; AN = SIGN
000016F2  4E4F                    1553mm         TRAP    #15         ; OUTPUT = SIGN
000016F4                          1554mm         ENDM
000016F4                          1555mm         PRINTSIGN
000016F4  103C 0006               1556mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000016F8  323C 0024               1557mm         MOVE.W  #36, D1     ; AN = SIGN
000016FC  4E4F                    1558mm         TRAP    #15         ; OUTPUT = SIGN
000016FE                          1559mm         ENDM
000016FE                          1560mm         ADROUT 
000016FE  3212                    1561mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001700  E049                    1562mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001702  E849                    1563mm         LSR.W   #4, D1      
00001704                          1564mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001704  0C01 0009               1565mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001708  6E00 000A               1566mmm         BGT     ALPHA_62
0000170C  0601 0030               1567mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001710  6000 0006               1568mmm         BRA     DONE_62
00001714  0601 0037               1569mmm ALPHA_62: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001718  4E71                    1570mmm DONE_62: NOP
0000171A                          1571mmm         ENDM
0000171A  4E4F                    1572mm         TRAP    #15         ; EXECUTE OUTPUT
0000171C                          1573mm         
0000171C  3212                    1574mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000171E  E949                    1575mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001720  E049                    1576mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001722  E849                    1577mm         LSR.W   #4, D1      
00001724                          1578mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001724  0C01 0009               1579mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001728  6E00 000A               1580mmm         BGT     ALPHA_63
0000172C  0601 0030               1581mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001730  6000 0006               1582mmm         BRA     DONE_63
00001734  0601 0037               1583mmm ALPHA_63: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001738  4E71                    1584mmm DONE_63: NOP
0000173A                          1585mmm         ENDM
0000173A  4E4F                    1586mm         TRAP    #15         ; EXECUTE OUTPUT
0000173C                          1587mm         
0000173C  3212                    1588mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000173E  E149                    1589mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001740  E049                    1590mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001742  E849                    1591mm         LSR.W   #4, D1      
00001744                          1592mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001744  0C01 0009               1593mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001748  6E00 000A               1594mmm         BGT     ALPHA_64
0000174C  0601 0030               1595mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001750  6000 0006               1596mmm         BRA     DONE_64
00001754  0601 0037               1597mmm ALPHA_64: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001758  4E71                    1598mmm DONE_64: NOP
0000175A                          1599mmm         ENDM
0000175A  4E4F                    1600mm         TRAP    #15         ; EXECUTE OUTPUT
0000175C                          1601mm         
0000175C  3212                    1602mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000175E  E149                    1603mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001760  E949                    1604mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001762  E049                    1605mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001764  E849                    1606mm         LSR.W   #4, D1      
00001766                          1607mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001766  0C01 0009               1608mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000176A  6E00 000A               1609mmm         BGT     ALPHA_65
0000176E  0601 0030               1610mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001772  6000 0006               1611mmm         BRA     DONE_65
00001776  0601 0037               1612mmm ALPHA_65: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000177A  4E71                    1613mmm DONE_65: NOP
0000177C                          1614mmm         ENDM
0000177C  4E4F                    1615mm         TRAP    #15         ; EXECUTE OUTPUT       
0000177E                          1616mm         ENDM 
0000177E  361A                    1617m         MOVE.W  (A2)+, D3
00001780                          1618mm         ADROUT
00001780  3212                    1619mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001782  E049                    1620mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001784  E849                    1621mm         LSR.W   #4, D1      
00001786                          1622mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001786  0C01 0009               1623mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000178A  6E00 000A               1624mmm         BGT     ALPHA_67
0000178E  0601 0030               1625mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001792  6000 0006               1626mmm         BRA     DONE_67
00001796  0601 0037               1627mmm ALPHA_67: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000179A  4E71                    1628mmm DONE_67: NOP
0000179C                          1629mmm         ENDM
0000179C  4E4F                    1630mm         TRAP    #15         ; EXECUTE OUTPUT
0000179E                          1631mm         
0000179E  3212                    1632mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017A0  E949                    1633mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000017A2  E049                    1634mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017A4  E849                    1635mm         LSR.W   #4, D1      
000017A6                          1636mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017A6  0C01 0009               1637mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017AA  6E00 000A               1638mmm         BGT     ALPHA_68
000017AE  0601 0030               1639mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017B2  6000 0006               1640mmm         BRA     DONE_68
000017B6  0601 0037               1641mmm ALPHA_68: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017BA  4E71                    1642mmm DONE_68: NOP
000017BC                          1643mmm         ENDM
000017BC  4E4F                    1644mm         TRAP    #15         ; EXECUTE OUTPUT
000017BE                          1645mm         
000017BE  3212                    1646mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017C0  E149                    1647mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017C2  E049                    1648mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017C4  E849                    1649mm         LSR.W   #4, D1      
000017C6                          1650mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017C6  0C01 0009               1651mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017CA  6E00 000A               1652mmm         BGT     ALPHA_69
000017CE  0601 0030               1653mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017D2  6000 0006               1654mmm         BRA     DONE_69
000017D6  0601 0037               1655mmm ALPHA_69: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017DA  4E71                    1656mmm DONE_69: NOP
000017DC                          1657mmm         ENDM
000017DC  4E4F                    1658mm         TRAP    #15         ; EXECUTE OUTPUT
000017DE                          1659mm         
000017DE  3212                    1660mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000017E0  E149                    1661mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000017E2  E949                    1662mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000017E4  E049                    1663mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000017E6  E849                    1664mm         LSR.W   #4, D1      
000017E8                          1665mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000017E8  0C01 0009               1666mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000017EC  6E00 000A               1667mmm         BGT     ALPHA_70
000017F0  0601 0030               1668mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000017F4  6000 0006               1669mmm         BRA     DONE_70
000017F8  0601 0037               1670mmm ALPHA_70: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000017FC  4E71                    1671mmm DONE_70: NOP
000017FE                          1672mmm         ENDM
000017FE  4E4F                    1673mm         TRAP    #15         ; EXECUTE OUTPUT       
00001800                          1674mm         ENDM 
00001800  3605                    1675m         MOVE.W  D5, D3
00001802  6000 01A4               1676m         BRA     COMPLETE_25 
00001806                          1677m ADRABSOLUTEW_25:     
00001806  361A                    1678m         MOVE.W  (A2)+, D3
00001808                          1679mm         PRINTSIGN
00001808  103C 0006               1680mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000180C  323C 0024               1681mm         MOVE.W  #36, D1     ; AN = SIGN
00001810  4E4F                    1682mm         TRAP    #15         ; OUTPUT = SIGN
00001812                          1683mm         ENDM
00001812                          1684mm         ADROUT
00001812  3212                    1685mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001814  E049                    1686mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001816  E849                    1687mm         LSR.W   #4, D1      
00001818                          1688mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001818  0C01 0009               1689mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000181C  6E00 000A               1690mmm         BGT     ALPHA_73
00001820  0601 0030               1691mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001824  6000 0006               1692mmm         BRA     DONE_73
00001828  0601 0037               1693mmm ALPHA_73: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000182C  4E71                    1694mmm DONE_73: NOP
0000182E                          1695mmm         ENDM
0000182E  4E4F                    1696mm         TRAP    #15         ; EXECUTE OUTPUT
00001830                          1697mm         
00001830  3212                    1698mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001832  E949                    1699mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001834  E049                    1700mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001836  E849                    1701mm         LSR.W   #4, D1      
00001838                          1702mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001838  0C01 0009               1703mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000183C  6E00 000A               1704mmm         BGT     ALPHA_74
00001840  0601 0030               1705mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001844  6000 0006               1706mmm         BRA     DONE_74
00001848  0601 0037               1707mmm ALPHA_74: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000184C  4E71                    1708mmm DONE_74: NOP
0000184E                          1709mmm         ENDM
0000184E  4E4F                    1710mm         TRAP    #15         ; EXECUTE OUTPUT
00001850                          1711mm         
00001850  3212                    1712mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001852  E149                    1713mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001854  E049                    1714mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001856  E849                    1715mm         LSR.W   #4, D1      
00001858                          1716mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001858  0C01 0009               1717mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000185C  6E00 000A               1718mmm         BGT     ALPHA_75
00001860  0601 0030               1719mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001864  6000 0006               1720mmm         BRA     DONE_75
00001868  0601 0037               1721mmm ALPHA_75: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000186C  4E71                    1722mmm DONE_75: NOP
0000186E                          1723mmm         ENDM
0000186E  4E4F                    1724mm         TRAP    #15         ; EXECUTE OUTPUT
00001870                          1725mm         
00001870  3212                    1726mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001872  E149                    1727mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001874  E949                    1728mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001876  E049                    1729mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001878  E849                    1730mm         LSR.W   #4, D1      
0000187A                          1731mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000187A  0C01 0009               1732mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000187E  6E00 000A               1733mmm         BGT     ALPHA_76
00001882  0601 0030               1734mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001886  6000 0006               1735mmm         BRA     DONE_76
0000188A  0601 0037               1736mmm ALPHA_76: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000188E  4E71                    1737mmm DONE_76: NOP
00001890                          1738mmm         ENDM
00001890  4E4F                    1739mm         TRAP    #15         ; EXECUTE OUTPUT       
00001892                          1740mm         ENDM 
00001892  3605                    1741m         MOVE.W  D5, D3
00001894  6000 0112               1742m         BRA     COMPLETE_25  
00001898                          1743m ADRABSOLUTEL_25:  
00001898  361A                    1744m         MOVE.W  (A2)+, D3
0000189A                          1745mm         PRINTSIGN
0000189A  103C 0006               1746mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000189E  323C 0024               1747mm         MOVE.W  #36, D1     ; AN = SIGN
000018A2  4E4F                    1748mm         TRAP    #15         ; OUTPUT = SIGN
000018A4                          1749mm         ENDM
000018A4                          1750mm         ADROUT 
000018A4  3212                    1751mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018A6  E049                    1752mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018A8  E849                    1753mm         LSR.W   #4, D1      
000018AA                          1754mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018AA  0C01 0009               1755mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018AE  6E00 000A               1756mmm         BGT     ALPHA_79
000018B2  0601 0030               1757mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018B6  6000 0006               1758mmm         BRA     DONE_79
000018BA  0601 0037               1759mmm ALPHA_79: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018BE  4E71                    1760mmm DONE_79: NOP
000018C0                          1761mmm         ENDM
000018C0  4E4F                    1762mm         TRAP    #15         ; EXECUTE OUTPUT
000018C2                          1763mm         
000018C2  3212                    1764mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018C4  E949                    1765mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000018C6  E049                    1766mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018C8  E849                    1767mm         LSR.W   #4, D1      
000018CA                          1768mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018CA  0C01 0009               1769mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018CE  6E00 000A               1770mmm         BGT     ALPHA_80
000018D2  0601 0030               1771mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018D6  6000 0006               1772mmm         BRA     DONE_80
000018DA  0601 0037               1773mmm ALPHA_80: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018DE  4E71                    1774mmm DONE_80: NOP
000018E0                          1775mmm         ENDM
000018E0  4E4F                    1776mm         TRAP    #15         ; EXECUTE OUTPUT
000018E2                          1777mm         
000018E2  3212                    1778mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000018E4  E149                    1779mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000018E6  E049                    1780mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000018E8  E849                    1781mm         LSR.W   #4, D1      
000018EA                          1782mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000018EA  0C01 0009               1783mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000018EE  6E00 000A               1784mmm         BGT     ALPHA_81
000018F2  0601 0030               1785mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000018F6  6000 0006               1786mmm         BRA     DONE_81
000018FA  0601 0037               1787mmm ALPHA_81: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000018FE  4E71                    1788mmm DONE_81: NOP
00001900                          1789mmm         ENDM
00001900  4E4F                    1790mm         TRAP    #15         ; EXECUTE OUTPUT
00001902                          1791mm         
00001902  3212                    1792mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001904  E149                    1793mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001906  E949                    1794mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001908  E049                    1795mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000190A  E849                    1796mm         LSR.W   #4, D1      
0000190C                          1797mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000190C  0C01 0009               1798mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001910  6E00 000A               1799mmm         BGT     ALPHA_82
00001914  0601 0030               1800mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001918  6000 0006               1801mmm         BRA     DONE_82
0000191C  0601 0037               1802mmm ALPHA_82: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001920  4E71                    1803mmm DONE_82: NOP
00001922                          1804mmm         ENDM
00001922  4E4F                    1805mm         TRAP    #15         ; EXECUTE OUTPUT       
00001924                          1806mm         ENDM 
00001924  361A                    1807m         MOVE.W  (A2)+, D3
00001926                          1808mm         ADROUT
00001926  3212                    1809mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001928  E049                    1810mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000192A  E849                    1811mm         LSR.W   #4, D1      
0000192C                          1812mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000192C  0C01 0009               1813mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001930  6E00 000A               1814mmm         BGT     ALPHA_84
00001934  0601 0030               1815mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001938  6000 0006               1816mmm         BRA     DONE_84
0000193C  0601 0037               1817mmm ALPHA_84: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001940  4E71                    1818mmm DONE_84: NOP
00001942                          1819mmm         ENDM
00001942  4E4F                    1820mm         TRAP    #15         ; EXECUTE OUTPUT
00001944                          1821mm         
00001944  3212                    1822mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001946  E949                    1823mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001948  E049                    1824mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000194A  E849                    1825mm         LSR.W   #4, D1      
0000194C                          1826mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000194C  0C01 0009               1827mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001950  6E00 000A               1828mmm         BGT     ALPHA_85
00001954  0601 0030               1829mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001958  6000 0006               1830mmm         BRA     DONE_85
0000195C  0601 0037               1831mmm ALPHA_85: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001960  4E71                    1832mmm DONE_85: NOP
00001962                          1833mmm         ENDM
00001962  4E4F                    1834mm         TRAP    #15         ; EXECUTE OUTPUT
00001964                          1835mm         
00001964  3212                    1836mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001966  E149                    1837mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001968  E049                    1838mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000196A  E849                    1839mm         LSR.W   #4, D1      
0000196C                          1840mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000196C  0C01 0009               1841mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001970  6E00 000A               1842mmm         BGT     ALPHA_86
00001974  0601 0030               1843mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001978  6000 0006               1844mmm         BRA     DONE_86
0000197C  0601 0037               1845mmm ALPHA_86: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001980  4E71                    1846mmm DONE_86: NOP
00001982                          1847mmm         ENDM
00001982  4E4F                    1848mm         TRAP    #15         ; EXECUTE OUTPUT
00001984                          1849mm         
00001984  3212                    1850mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001986  E149                    1851mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001988  E949                    1852mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000198A  E049                    1853mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000198C  E849                    1854mm         LSR.W   #4, D1      
0000198E                          1855mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000198E  0C01 0009               1856mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001992  6E00 000A               1857mmm         BGT     ALPHA_87
00001996  0601 0030               1858mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000199A  6000 0006               1859mmm         BRA     DONE_87
0000199E  0601 0037               1860mmm ALPHA_87: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000019A2  4E71                    1861mmm DONE_87: NOP
000019A4                          1862mmm         ENDM
000019A4  4E4F                    1863mm         TRAP    #15         ; EXECUTE OUTPUT       
000019A6                          1864mm         ENDM 
000019A6  3605                    1865m         MOVE.W  D5, D3
000019A8                          1866m 
000019A8                          1867m COMPLETE_25:  ; OPCODE HAS BEEN VERIFIED
000019A8                          1868m         ENDM
000019A8                          1869m         printComma
000019A8  43F8 00CF               1870m         LEA     OCOMMA, A1     
000019AC  103C 000E               1871m         MOVE.B  #14,D0          
000019B0  4E4F                    1872m         TRAP    #15
000019B2                          1873m         ENDM
000019B2                          1874m         prepareAdrMode  #$0,  D3
000019B2  3C3C 0000               1875m         MOVE.W  #$0, D6      ; INPUT VALUE
000019B6  3203                    1876m         MOVE.W  D3, D1
000019B8  BC3C 0001               1877m         CMP.B   #$01, D6
000019BC  6700 000C               1878m         BEQ     ADRSOURCE_89    
000019C0                          1879m ADRDEST_89:
000019C0  EF49                    1880m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000019C2  E049                    1881m         LSR     #$08, D1
000019C4  EA49                    1882m         LSR     #$05, D1
000019C6  6000 000A               1883m         BRA     COMPLETE_89 
000019CA                          1884m ADRSOURCE_89:                
000019CA  E149                    1885m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000019CC  E549                    1886m         LSL     #$02, D1
000019CE  E049                    1887m         LSR     #$08, D1
000019D0  EA49                    1888m         LSR     #$05, D1
000019D2                          1889m COMPLETE_89:  ; OPCODE HAS BEEN VERIFIED
000019D2                          1890m         ENDM        
000019D2                          1891m         decodeAdrMode   D3, D1
000019D2  3603                    1892m         MOVE.W  D3, D3      ; HOLDS FULL OPCODE
000019D4  3201                    1893m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000019D6                          1894m 
000019D6  B23C 0001               1895m         CMP.B   #$01, D1
000019DA  6700 0066               1896m         BEQ     ADRREGDIRECT_90    
000019DE  B23C 0002               1897m         CMP.B   #$02, D1
000019E2  6700 00A0               1898m         BEQ     ADRREGINDIRECT_90  
000019E6  B23C 0003               1899m         CMP.B   #$03, D1
000019EA  6700 0102               1900m         BEQ     ADRREGPOSTINC_90  
000019EE  B23C 0004               1901m         CMP.B   #$04, D1
000019F2  6700 0178               1902m         BEQ     ADRREGPREDEC_90
000019F6  B23C 0007               1903m         CMP.B   #$07, D1
000019FA  6700 01EE               1904m         BEQ     ADRABSOLUTE_90    
000019FE                          1905m         
000019FE                          1906m DATAREGDIRECT_90: 
000019FE  BC3C 0001               1907m         CMP.B   #$01, D6
00001A02  6700 001E               1908m         BEQ     DATAREGDIRECTSRC_90   
00001A06                          1909m DATAREGDIRECTDEST_90: 
00001A06                          1910mm         PRINTDNDEST D3 
00001A06  3203                    1911mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00001A08  E949                    1912mm         LSL     #$04, D1
00001A0A  E049                    1913mm         LSR     #$08, D1
00001A0C  EA49                    1914mm         LSR     #$05, D1
00001A0E  43F8 00C7               1915mm         LEA     ODN, A1     
00001A12  103C 000E               1916mm         MOVE.B  #14,D0          
00001A16  4E4F                    1917mm         TRAP    #15
00001A18  103C 0003               1918mm         MOVE.B  #3,D0          
00001A1C  4E4F                    1919mm         TRAP    #15
00001A1E                          1920mm         ENDM
00001A1E  6000 0562               1921m         BRA     COMPLETE_90 
00001A22                          1922m DATAREGDIRECTSRC_90: 
00001A22                          1923mm         PRINTDNSRC D3 
00001A22  4281                    1924mm         CLR.L   D1
00001A24  3203                    1925mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A26  E149                    1926mm         LSL     #$08, D1
00001A28  EB49                    1927mm         LSL     #$05, D1
00001A2A  E049                    1928mm         LSR     #$08, D1
00001A2C  EA49                    1929mm         LSR     #$05, D1
00001A2E  43F8 00C7               1930mm         LEA     ODN, A1     
00001A32  103C 000E               1931mm         MOVE.B  #14,D0          
00001A36  4E4F                    1932mm         TRAP    #15
00001A38  103C 0003               1933mm         MOVE.B  #3,D0          
00001A3C  4E4F                    1934mm         TRAP    #15
00001A3E                          1935mm         ENDM
00001A3E  6000 0542               1936m         BRA     COMPLETE_90   
00001A42                          1937m         
00001A42                          1938m ADRREGDIRECT_90: 
00001A42  BC3C 0001               1939m         CMP.B   #$01, D6
00001A46  6700 001E               1940m         BEQ     ADRREGDIRECTSRC_90   
00001A4A                          1941m ADRREGDIRECTDEST_90:
00001A4A                          1942mm         PRINTANDEST D3
00001A4A  3203                    1943mm         MOVE.W  D3, D1
00001A4C  E949                    1944mm         LSL     #$04, D1
00001A4E  E049                    1945mm         LSR     #$08, D1
00001A50  EA49                    1946mm         LSR     #$05, D1
00001A52  43F8 00C9               1947mm         LEA     OAN, A1     
00001A56  103C 000E               1948mm         MOVE.B  #14,D0          
00001A5A  4E4F                    1949mm         TRAP    #15
00001A5C  103C 0003               1950mm         MOVE.B  #3,D0          
00001A60  4E4F                    1951mm         TRAP    #15
00001A62                          1952mm         ENDM
00001A62  6000 051E               1953m         BRA     COMPLETE_90   
00001A66                          1954m ADRREGDIRECTSRC_90:
00001A66                          1955mm         PRINTANSRC D3
00001A66  3203                    1956mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001A68  E149                    1957mm         LSL     #$08, D1
00001A6A  EB49                    1958mm         LSL     #$05, D1
00001A6C  E049                    1959mm         LSR     #$08, D1
00001A6E  EA49                    1960mm         LSR     #$05, D1
00001A70  43F8 00C9               1961mm         LEA     OAN, A1     
00001A74  103C 000E               1962mm         MOVE.B  #14,D0          
00001A78  4E4F                    1963mm         TRAP    #15
00001A7A  103C 0003               1964mm         MOVE.B  #3,D0          
00001A7E  4E4F                    1965mm         TRAP    #15
00001A80                          1966mm         ENDM
00001A80  6000 0500               1967m         BRA     COMPLETE_90   
00001A84                          1968m        
00001A84                          1969m ADRREGINDIRECT_90:   
00001A84  BC3C 0001               1970m         CMP.B   #$01, D6
00001A88  6700 0032               1971m         BEQ     ADRREGINDIRECTSRC_90   
00001A8C                          1972m ADRREGINDIRECTDEST_90:
00001A8C                          1973mm         PRINTLB
00001A8C  43F8 00CB               1974mm         LEA     OLB, A1     
00001A90  103C 000E               1975mm         MOVE.B  #14,D0          
00001A94  4E4F                    1976mm         TRAP    #15
00001A96                          1977mm         ENDM
00001A96                          1978mm         PRINTANDEST D3  
00001A96  3203                    1979mm         MOVE.W  D3, D1
00001A98  E949                    1980mm         LSL     #$04, D1
00001A9A  E049                    1981mm         LSR     #$08, D1
00001A9C  EA49                    1982mm         LSR     #$05, D1
00001A9E  43F8 00C9               1983mm         LEA     OAN, A1     
00001AA2  103C 000E               1984mm         MOVE.B  #14,D0          
00001AA6  4E4F                    1985mm         TRAP    #15
00001AA8  103C 0003               1986mm         MOVE.B  #3,D0          
00001AAC  4E4F                    1987mm         TRAP    #15
00001AAE                          1988mm         ENDM
00001AAE                          1989mm         PRINTRB
00001AAE  43F8 00CD               1990mm         LEA     ORB, A1     
00001AB2  103C 000E               1991mm         MOVE.B  #14,D0          
00001AB6  4E4F                    1992mm         TRAP    #15
00001AB8                          1993mm         ENDM
00001AB8  6000 04C8               1994m         BRA     COMPLETE_90     
00001ABC                          1995m ADRREGINDIRECTSRC_90:   
00001ABC                          1996mm         PRINTLB
00001ABC  43F8 00CB               1997mm         LEA     OLB, A1     
00001AC0  103C 000E               1998mm         MOVE.B  #14,D0          
00001AC4  4E4F                    1999mm         TRAP    #15
00001AC6                          2000mm         ENDM
00001AC6                          2001mm         PRINTANSRC D3  
00001AC6  3203                    2002mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001AC8  E149                    2003mm         LSL     #$08, D1
00001ACA  EB49                    2004mm         LSL     #$05, D1
00001ACC  E049                    2005mm         LSR     #$08, D1
00001ACE  EA49                    2006mm         LSR     #$05, D1
00001AD0  43F8 00C9               2007mm         LEA     OAN, A1     
00001AD4  103C 000E               2008mm         MOVE.B  #14,D0          
00001AD8  4E4F                    2009mm         TRAP    #15
00001ADA  103C 0003               2010mm         MOVE.B  #3,D0          
00001ADE  4E4F                    2011mm         TRAP    #15
00001AE0                          2012mm         ENDM
00001AE0                          2013mm         PRINTRB
00001AE0  43F8 00CD               2014mm         LEA     ORB, A1     
00001AE4  103C 000E               2015mm         MOVE.B  #14,D0          
00001AE8  4E4F                    2016mm         TRAP    #15
00001AEA                          2017mm         ENDM
00001AEA  6000 0496               2018m         BRA     COMPLETE_90   
00001AEE                          2019m         
00001AEE                          2020m ADRREGPOSTINC_90:   
00001AEE  BC3C 0001               2021m         CMP.B   #$01, D6
00001AF2  6700 003C               2022m         BEQ     ADRREGPOSTINCSRC_90   
00001AF6                          2023m ADRREGPOSTINCDEST_90: 
00001AF6                          2024mm         PRINTLB
00001AF6  43F8 00CB               2025mm         LEA     OLB, A1     
00001AFA  103C 000E               2026mm         MOVE.B  #14,D0          
00001AFE  4E4F                    2027mm         TRAP    #15
00001B00                          2028mm         ENDM
00001B00                          2029mm         PRINTANDEST D3  
00001B00  3203                    2030mm         MOVE.W  D3, D1
00001B02  E949                    2031mm         LSL     #$04, D1
00001B04  E049                    2032mm         LSR     #$08, D1
00001B06  EA49                    2033mm         LSR     #$05, D1
00001B08  43F8 00C9               2034mm         LEA     OAN, A1     
00001B0C  103C 000E               2035mm         MOVE.B  #14,D0          
00001B10  4E4F                    2036mm         TRAP    #15
00001B12  103C 0003               2037mm         MOVE.B  #3,D0          
00001B16  4E4F                    2038mm         TRAP    #15
00001B18                          2039mm         ENDM
00001B18                          2040mm         PRINTRB
00001B18  43F8 00CD               2041mm         LEA     ORB, A1     
00001B1C  103C 000E               2042mm         MOVE.B  #14,D0          
00001B20  4E4F                    2043mm         TRAP    #15
00001B22                          2044mm         ENDM
00001B22                          2045mm         PRINTPI
00001B22  43F8 00D4               2046mm         LEA     OPSTINC, A1     
00001B26  103C 000E               2047mm         MOVE.B  #14,D0          
00001B2A  4E4F                    2048mm         TRAP    #15
00001B2C                          2049mm         ENDM
00001B2C  6000 0454               2050m         BRA     COMPLETE_90  
00001B30                          2051m ADRREGPOSTINCSRC_90:           
00001B30                          2052mm         PRINTLB
00001B30  43F8 00CB               2053mm         LEA     OLB, A1     
00001B34  103C 000E               2054mm         MOVE.B  #14,D0          
00001B38  4E4F                    2055mm         TRAP    #15
00001B3A                          2056mm         ENDM
00001B3A                          2057mm         PRINTANSRC D3  
00001B3A  3203                    2058mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001B3C  E149                    2059mm         LSL     #$08, D1
00001B3E  EB49                    2060mm         LSL     #$05, D1
00001B40  E049                    2061mm         LSR     #$08, D1
00001B42  EA49                    2062mm         LSR     #$05, D1
00001B44  43F8 00C9               2063mm         LEA     OAN, A1     
00001B48  103C 000E               2064mm         MOVE.B  #14,D0          
00001B4C  4E4F                    2065mm         TRAP    #15
00001B4E  103C 0003               2066mm         MOVE.B  #3,D0          
00001B52  4E4F                    2067mm         TRAP    #15
00001B54                          2068mm         ENDM
00001B54                          2069mm         PRINTRB
00001B54  43F8 00CD               2070mm         LEA     ORB, A1     
00001B58  103C 000E               2071mm         MOVE.B  #14,D0          
00001B5C  4E4F                    2072mm         TRAP    #15
00001B5E                          2073mm         ENDM
00001B5E                          2074mm         PRINTPI
00001B5E  43F8 00D4               2075mm         LEA     OPSTINC, A1     
00001B62  103C 000E               2076mm         MOVE.B  #14,D0          
00001B66  4E4F                    2077mm         TRAP    #15
00001B68                          2078mm         ENDM
00001B68  6000 0418               2079m         BRA     COMPLETE_90  
00001B6C                          2080m ADRREGPREDEC_90: 
00001B6C  BC3C 0001               2081m         CMP.B   #$01, D6
00001B70  6700 003C               2082m         BEQ     ADRREGPREDECSRC_90   
00001B74                          2083m ADRREGPREDECDEST_90:
00001B74                          2084mm         PRINTPD  
00001B74  43F8 00D2               2085mm         LEA     OPREDEC, A1     
00001B78  103C 000E               2086mm         MOVE.B  #14,D0          
00001B7C  4E4F                    2087mm         TRAP    #15
00001B7E                          2088mm         ENDM
00001B7E                          2089mm         PRINTLB
00001B7E  43F8 00CB               2090mm         LEA     OLB, A1     
00001B82  103C 000E               2091mm         MOVE.B  #14,D0          
00001B86  4E4F                    2092mm         TRAP    #15
00001B88                          2093mm         ENDM
00001B88                          2094mm         PRINTANDEST D3  
00001B88  3203                    2095mm         MOVE.W  D3, D1
00001B8A  E949                    2096mm         LSL     #$04, D1
00001B8C  E049                    2097mm         LSR     #$08, D1
00001B8E  EA49                    2098mm         LSR     #$05, D1
00001B90  43F8 00C9               2099mm         LEA     OAN, A1     
00001B94  103C 000E               2100mm         MOVE.B  #14,D0          
00001B98  4E4F                    2101mm         TRAP    #15
00001B9A  103C 0003               2102mm         MOVE.B  #3,D0          
00001B9E  4E4F                    2103mm         TRAP    #15
00001BA0                          2104mm         ENDM
00001BA0                          2105mm         PRINTRB
00001BA0  43F8 00CD               2106mm         LEA     ORB, A1     
00001BA4  103C 000E               2107mm         MOVE.B  #14,D0          
00001BA8  4E4F                    2108mm         TRAP    #15
00001BAA                          2109mm         ENDM
00001BAA  6000 03D6               2110m         BRA     COMPLETE_90   
00001BAE                          2111m ADRREGPREDECSRC_90: 
00001BAE                          2112mm         PRINTPD  
00001BAE  43F8 00D2               2113mm         LEA     OPREDEC, A1     
00001BB2  103C 000E               2114mm         MOVE.B  #14,D0          
00001BB6  4E4F                    2115mm         TRAP    #15
00001BB8                          2116mm         ENDM
00001BB8                          2117mm         PRINTLB
00001BB8  43F8 00CB               2118mm         LEA     OLB, A1     
00001BBC  103C 000E               2119mm         MOVE.B  #14,D0          
00001BC0  4E4F                    2120mm         TRAP    #15
00001BC2                          2121mm         ENDM
00001BC2                          2122mm         PRINTANSRC D3  
00001BC2  3203                    2123mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00001BC4  E149                    2124mm         LSL     #$08, D1
00001BC6  EB49                    2125mm         LSL     #$05, D1
00001BC8  E049                    2126mm         LSR     #$08, D1
00001BCA  EA49                    2127mm         LSR     #$05, D1
00001BCC  43F8 00C9               2128mm         LEA     OAN, A1     
00001BD0  103C 000E               2129mm         MOVE.B  #14,D0          
00001BD4  4E4F                    2130mm         TRAP    #15
00001BD6  103C 0003               2131mm         MOVE.B  #3,D0          
00001BDA  4E4F                    2132mm         TRAP    #15
00001BDC                          2133mm         ENDM
00001BDC                          2134mm         PRINTRB
00001BDC  43F8 00CD               2135mm         LEA     ORB, A1     
00001BE0  103C 000E               2136mm         MOVE.B  #14,D0          
00001BE4  4E4F                    2137mm         TRAP    #15
00001BE6                          2138mm         ENDM
00001BE6  6000 039A               2139m         BRA     COMPLETE_90
00001BEA                          2140m        
00001BEA                          2141m ADRABSOLUTE_90:
00001BEA  BC3C 0001               2142m         CMP.B   #$01, D6
00001BEE  6600 0018               2143m         BNE     ADRABSOLUTEDST_90 
00001BF2                          2144m         
00001BF2  3A03                    2145m         MOVE.W  D3, D5
00001BF4  0803 0002               2146m         BTST    #2, D3
00001BF8  6600 0024               2147m         BNE     ADRIMMEDIATE_90
00001BFC  0803 0000               2148m         BTST    #0, D3
00001C00  6600 0270               2149m         BNE     ADRABSOLUTEL_90
00001C04  6000 01DA               2150m         BRA     ADRABSOLUTEW_90
00001C08                          2151m ADRABSOLUTEDST_90:
00001C08  3A03                    2152m         MOVE.W  D3, D5
00001C0A  0803 000B               2153m         BTST    #$B, D3
00001C0E  6600 000E               2154m         BNE     ADRIMMEDIATE_90
00001C12  0803 0009               2155m         BTST    #$09, D3
00001C16  6600 025A               2156m         BNE     ADRABSOLUTEL_90
00001C1A  6000 01C4               2157m         BRA     ADRABSOLUTEW_90
00001C1E                          2158m ADRIMMEDIATE_90:
00001C1E  BE3C 0001               2159m         CMP.B   #1, D7
00001C22  6700 009E               2160m         BEQ     ADRIMMEDIATEL_90
00001C26                          2161m ADRIMMEDIATEW_90:
00001C26  361A                    2162m         MOVE.W  (A2)+, D3
00001C28                          2163mm         PRINTHASH
00001C28  103C 0006               2164mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C2C  323C 0023               2165mm         MOVE.W  #35, D1     ; AN = SIGN
00001C30  4E4F                    2166mm         TRAP    #15         ; OUTPUT = SIGN
00001C32                          2167mm         ENDM
00001C32                          2168mm         PRINTSIGN
00001C32  103C 0006               2169mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001C36  323C 0024               2170mm         MOVE.W  #36, D1     ; AN = SIGN
00001C3A  4E4F                    2171mm         TRAP    #15         ; OUTPUT = SIGN
00001C3C                          2172mm         ENDM
00001C3C                          2173mm         ADROUT
00001C3C  3212                    2174mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C3E  E049                    2175mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C40  E849                    2176mm         LSR.W   #4, D1      
00001C42                          2177mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C42  0C01 0009               2178mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C46  6E00 000A               2179mmm         BGT     ALPHA_120
00001C4A  0601 0030               2180mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C4E  6000 0006               2181mmm         BRA     DONE_120
00001C52  0601 0037               2182mmm ALPHA_120: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C56  4E71                    2183mmm DONE_120: NOP
00001C58                          2184mmm         ENDM
00001C58  4E4F                    2185mm         TRAP    #15         ; EXECUTE OUTPUT
00001C5A                          2186mm         
00001C5A  3212                    2187mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C5C  E949                    2188mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001C5E  E049                    2189mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C60  E849                    2190mm         LSR.W   #4, D1      
00001C62                          2191mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C62  0C01 0009               2192mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C66  6E00 000A               2193mmm         BGT     ALPHA_121
00001C6A  0601 0030               2194mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C6E  6000 0006               2195mmm         BRA     DONE_121
00001C72  0601 0037               2196mmm ALPHA_121: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C76  4E71                    2197mmm DONE_121: NOP
00001C78                          2198mmm         ENDM
00001C78  4E4F                    2199mm         TRAP    #15         ; EXECUTE OUTPUT
00001C7A                          2200mm         
00001C7A  3212                    2201mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C7C  E149                    2202mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C7E  E049                    2203mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001C80  E849                    2204mm         LSR.W   #4, D1      
00001C82                          2205mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001C82  0C01 0009               2206mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001C86  6E00 000A               2207mmm         BGT     ALPHA_122
00001C8A  0601 0030               2208mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001C8E  6000 0006               2209mmm         BRA     DONE_122
00001C92  0601 0037               2210mmm ALPHA_122: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001C96  4E71                    2211mmm DONE_122: NOP
00001C98                          2212mmm         ENDM
00001C98  4E4F                    2213mm         TRAP    #15         ; EXECUTE OUTPUT
00001C9A                          2214mm         
00001C9A  3212                    2215mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001C9C  E149                    2216mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001C9E  E949                    2217mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001CA0  E049                    2218mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CA2  E849                    2219mm         LSR.W   #4, D1      
00001CA4                          2220mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CA4  0C01 0009               2221mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CA8  6E00 000A               2222mmm         BGT     ALPHA_123
00001CAC  0601 0030               2223mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CB0  6000 0006               2224mmm         BRA     DONE_123
00001CB4  0601 0037               2225mmm ALPHA_123: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CB8  4E71                    2226mmm DONE_123: NOP
00001CBA                          2227mmm         ENDM
00001CBA  4E4F                    2228mm         TRAP    #15         ; EXECUTE OUTPUT       
00001CBC                          2229mm         ENDM 
00001CBC  3605                    2230m         MOVE.W  D5, D3
00001CBE  6000 02C2               2231m         BRA     COMPLETE_90
00001CC2                          2232m ADRIMMEDIATEL_90:
00001CC2  361A                    2233m         MOVE.W  (A2)+, D3
00001CC4                          2234mm         PRINTHASH
00001CC4  103C 0006               2235mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CC8  323C 0023               2236mm         MOVE.W  #35, D1     ; AN = SIGN
00001CCC  4E4F                    2237mm         TRAP    #15         ; OUTPUT = SIGN
00001CCE                          2238mm         ENDM
00001CCE                          2239mm         PRINTSIGN
00001CCE  103C 0006               2240mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001CD2  323C 0024               2241mm         MOVE.W  #36, D1     ; AN = SIGN
00001CD6  4E4F                    2242mm         TRAP    #15         ; OUTPUT = SIGN
00001CD8                          2243mm         ENDM
00001CD8                          2244mm         ADROUT 
00001CD8  3212                    2245mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CDA  E049                    2246mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CDC  E849                    2247mm         LSR.W   #4, D1      
00001CDE                          2248mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CDE  0C01 0009               2249mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001CE2  6E00 000A               2250mmm         BGT     ALPHA_127
00001CE6  0601 0030               2251mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001CEA  6000 0006               2252mmm         BRA     DONE_127
00001CEE  0601 0037               2253mmm ALPHA_127: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001CF2  4E71                    2254mmm DONE_127: NOP
00001CF4                          2255mmm         ENDM
00001CF4  4E4F                    2256mm         TRAP    #15         ; EXECUTE OUTPUT
00001CF6                          2257mm         
00001CF6  3212                    2258mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001CF8  E949                    2259mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001CFA  E049                    2260mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001CFC  E849                    2261mm         LSR.W   #4, D1      
00001CFE                          2262mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001CFE  0C01 0009               2263mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D02  6E00 000A               2264mmm         BGT     ALPHA_128
00001D06  0601 0030               2265mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D0A  6000 0006               2266mmm         BRA     DONE_128
00001D0E  0601 0037               2267mmm ALPHA_128: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D12  4E71                    2268mmm DONE_128: NOP
00001D14                          2269mmm         ENDM
00001D14  4E4F                    2270mm         TRAP    #15         ; EXECUTE OUTPUT
00001D16                          2271mm         
00001D16  3212                    2272mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D18  E149                    2273mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D1A  E049                    2274mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D1C  E849                    2275mm         LSR.W   #4, D1      
00001D1E                          2276mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D1E  0C01 0009               2277mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D22  6E00 000A               2278mmm         BGT     ALPHA_129
00001D26  0601 0030               2279mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D2A  6000 0006               2280mmm         BRA     DONE_129
00001D2E  0601 0037               2281mmm ALPHA_129: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D32  4E71                    2282mmm DONE_129: NOP
00001D34                          2283mmm         ENDM
00001D34  4E4F                    2284mm         TRAP    #15         ; EXECUTE OUTPUT
00001D36                          2285mm         
00001D36  3212                    2286mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D38  E149                    2287mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D3A  E949                    2288mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001D3C  E049                    2289mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D3E  E849                    2290mm         LSR.W   #4, D1      
00001D40                          2291mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D40  0C01 0009               2292mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D44  6E00 000A               2293mmm         BGT     ALPHA_130
00001D48  0601 0030               2294mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D4C  6000 0006               2295mmm         BRA     DONE_130
00001D50  0601 0037               2296mmm ALPHA_130: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D54  4E71                    2297mmm DONE_130: NOP
00001D56                          2298mmm         ENDM
00001D56  4E4F                    2299mm         TRAP    #15         ; EXECUTE OUTPUT       
00001D58                          2300mm         ENDM 
00001D58  361A                    2301m         MOVE.W  (A2)+, D3
00001D5A                          2302mm         ADROUT
00001D5A  3212                    2303mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D5C  E049                    2304mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D5E  E849                    2305mm         LSR.W   #4, D1      
00001D60                          2306mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D60  0C01 0009               2307mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D64  6E00 000A               2308mmm         BGT     ALPHA_132
00001D68  0601 0030               2309mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D6C  6000 0006               2310mmm         BRA     DONE_132
00001D70  0601 0037               2311mmm ALPHA_132: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D74  4E71                    2312mmm DONE_132: NOP
00001D76                          2313mmm         ENDM
00001D76  4E4F                    2314mm         TRAP    #15         ; EXECUTE OUTPUT
00001D78                          2315mm         
00001D78  3212                    2316mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D7A  E949                    2317mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001D7C  E049                    2318mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D7E  E849                    2319mm         LSR.W   #4, D1      
00001D80                          2320mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001D80  0C01 0009               2321mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001D84  6E00 000A               2322mmm         BGT     ALPHA_133
00001D88  0601 0030               2323mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001D8C  6000 0006               2324mmm         BRA     DONE_133
00001D90  0601 0037               2325mmm ALPHA_133: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001D94  4E71                    2326mmm DONE_133: NOP
00001D96                          2327mmm         ENDM
00001D96  4E4F                    2328mm         TRAP    #15         ; EXECUTE OUTPUT
00001D98                          2329mm         
00001D98  3212                    2330mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001D9A  E149                    2331mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001D9C  E049                    2332mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001D9E  E849                    2333mm         LSR.W   #4, D1      
00001DA0                          2334mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DA0  0C01 0009               2335mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DA4  6E00 000A               2336mmm         BGT     ALPHA_134
00001DA8  0601 0030               2337mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DAC  6000 0006               2338mmm         BRA     DONE_134
00001DB0  0601 0037               2339mmm ALPHA_134: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DB4  4E71                    2340mmm DONE_134: NOP
00001DB6                          2341mmm         ENDM
00001DB6  4E4F                    2342mm         TRAP    #15         ; EXECUTE OUTPUT
00001DB8                          2343mm         
00001DB8  3212                    2344mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DBA  E149                    2345mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001DBC  E949                    2346mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001DBE  E049                    2347mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DC0  E849                    2348mm         LSR.W   #4, D1      
00001DC2                          2349mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DC2  0C01 0009               2350mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DC6  6E00 000A               2351mmm         BGT     ALPHA_135
00001DCA  0601 0030               2352mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DCE  6000 0006               2353mmm         BRA     DONE_135
00001DD2  0601 0037               2354mmm ALPHA_135: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001DD6  4E71                    2355mmm DONE_135: NOP
00001DD8                          2356mmm         ENDM
00001DD8  4E4F                    2357mm         TRAP    #15         ; EXECUTE OUTPUT       
00001DDA                          2358mm         ENDM 
00001DDA  3605                    2359m         MOVE.W  D5, D3
00001DDC  6000 01A4               2360m         BRA     COMPLETE_90 
00001DE0                          2361m ADRABSOLUTEW_90:     
00001DE0  361A                    2362m         MOVE.W  (A2)+, D3
00001DE2                          2363mm         PRINTSIGN
00001DE2  103C 0006               2364mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001DE6  323C 0024               2365mm         MOVE.W  #36, D1     ; AN = SIGN
00001DEA  4E4F                    2366mm         TRAP    #15         ; OUTPUT = SIGN
00001DEC                          2367mm         ENDM
00001DEC                          2368mm         ADROUT
00001DEC  3212                    2369mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001DEE  E049                    2370mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001DF0  E849                    2371mm         LSR.W   #4, D1      
00001DF2                          2372mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001DF2  0C01 0009               2373mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001DF6  6E00 000A               2374mmm         BGT     ALPHA_138
00001DFA  0601 0030               2375mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001DFE  6000 0006               2376mmm         BRA     DONE_138
00001E02  0601 0037               2377mmm ALPHA_138: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E06  4E71                    2378mmm DONE_138: NOP
00001E08                          2379mmm         ENDM
00001E08  4E4F                    2380mm         TRAP    #15         ; EXECUTE OUTPUT
00001E0A                          2381mm         
00001E0A  3212                    2382mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E0C  E949                    2383mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001E0E  E049                    2384mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E10  E849                    2385mm         LSR.W   #4, D1      
00001E12                          2386mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E12  0C01 0009               2387mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E16  6E00 000A               2388mmm         BGT     ALPHA_139
00001E1A  0601 0030               2389mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E1E  6000 0006               2390mmm         BRA     DONE_139
00001E22  0601 0037               2391mmm ALPHA_139: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E26  4E71                    2392mmm DONE_139: NOP
00001E28                          2393mmm         ENDM
00001E28  4E4F                    2394mm         TRAP    #15         ; EXECUTE OUTPUT
00001E2A                          2395mm         
00001E2A  3212                    2396mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E2C  E149                    2397mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E2E  E049                    2398mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E30  E849                    2399mm         LSR.W   #4, D1      
00001E32                          2400mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E32  0C01 0009               2401mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E36  6E00 000A               2402mmm         BGT     ALPHA_140
00001E3A  0601 0030               2403mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E3E  6000 0006               2404mmm         BRA     DONE_140
00001E42  0601 0037               2405mmm ALPHA_140: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E46  4E71                    2406mmm DONE_140: NOP
00001E48                          2407mmm         ENDM
00001E48  4E4F                    2408mm         TRAP    #15         ; EXECUTE OUTPUT
00001E4A                          2409mm         
00001E4A  3212                    2410mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E4C  E149                    2411mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001E4E  E949                    2412mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001E50  E049                    2413mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E52  E849                    2414mm         LSR.W   #4, D1      
00001E54                          2415mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E54  0C01 0009               2416mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E58  6E00 000A               2417mmm         BGT     ALPHA_141
00001E5C  0601 0030               2418mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E60  6000 0006               2419mmm         BRA     DONE_141
00001E64  0601 0037               2420mmm ALPHA_141: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E68  4E71                    2421mmm DONE_141: NOP
00001E6A                          2422mmm         ENDM
00001E6A  4E4F                    2423mm         TRAP    #15         ; EXECUTE OUTPUT       
00001E6C                          2424mm         ENDM 
00001E6C  3605                    2425m         MOVE.W  D5, D3
00001E6E  6000 0112               2426m         BRA     COMPLETE_90  
00001E72                          2427m ADRABSOLUTEL_90:  
00001E72  361A                    2428m         MOVE.W  (A2)+, D3
00001E74                          2429mm         PRINTSIGN
00001E74  103C 0006               2430mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00001E78  323C 0024               2431mm         MOVE.W  #36, D1     ; AN = SIGN
00001E7C  4E4F                    2432mm         TRAP    #15         ; OUTPUT = SIGN
00001E7E                          2433mm         ENDM
00001E7E                          2434mm         ADROUT 
00001E7E  3212                    2435mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E80  E049                    2436mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001E82  E849                    2437mm         LSR.W   #4, D1      
00001E84                          2438mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001E84  0C01 0009               2439mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001E88  6E00 000A               2440mmm         BGT     ALPHA_144
00001E8C  0601 0030               2441mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001E90  6000 0006               2442mmm         BRA     DONE_144
00001E94  0601 0037               2443mmm ALPHA_144: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001E98  4E71                    2444mmm DONE_144: NOP
00001E9A                          2445mmm         ENDM
00001E9A  4E4F                    2446mm         TRAP    #15         ; EXECUTE OUTPUT
00001E9C                          2447mm         
00001E9C  3212                    2448mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001E9E  E949                    2449mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001EA0  E049                    2450mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EA2  E849                    2451mm         LSR.W   #4, D1      
00001EA4                          2452mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EA4  0C01 0009               2453mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EA8  6E00 000A               2454mmm         BGT     ALPHA_145
00001EAC  0601 0030               2455mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EB0  6000 0006               2456mmm         BRA     DONE_145
00001EB4  0601 0037               2457mmm ALPHA_145: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EB8  4E71                    2458mmm DONE_145: NOP
00001EBA                          2459mmm         ENDM
00001EBA  4E4F                    2460mm         TRAP    #15         ; EXECUTE OUTPUT
00001EBC                          2461mm         
00001EBC  3212                    2462mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EBE  E149                    2463mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EC0  E049                    2464mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EC2  E849                    2465mm         LSR.W   #4, D1      
00001EC4                          2466mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EC4  0C01 0009               2467mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EC8  6E00 000A               2468mmm         BGT     ALPHA_146
00001ECC  0601 0030               2469mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001ED0  6000 0006               2470mmm         BRA     DONE_146
00001ED4  0601 0037               2471mmm ALPHA_146: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001ED8  4E71                    2472mmm DONE_146: NOP
00001EDA                          2473mmm         ENDM
00001EDA  4E4F                    2474mm         TRAP    #15         ; EXECUTE OUTPUT
00001EDC                          2475mm         
00001EDC  3212                    2476mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001EDE  E149                    2477mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001EE0  E949                    2478mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001EE2  E049                    2479mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001EE4  E849                    2480mm         LSR.W   #4, D1      
00001EE6                          2481mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001EE6  0C01 0009               2482mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001EEA  6E00 000A               2483mmm         BGT     ALPHA_147
00001EEE  0601 0030               2484mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001EF2  6000 0006               2485mmm         BRA     DONE_147
00001EF6  0601 0037               2486mmm ALPHA_147: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001EFA  4E71                    2487mmm DONE_147: NOP
00001EFC                          2488mmm         ENDM
00001EFC  4E4F                    2489mm         TRAP    #15         ; EXECUTE OUTPUT       
00001EFE                          2490mm         ENDM 
00001EFE  361A                    2491m         MOVE.W  (A2)+, D3
00001F00                          2492mm         ADROUT
00001F00  3212                    2493mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F02  E049                    2494mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F04  E849                    2495mm         LSR.W   #4, D1      
00001F06                          2496mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F06  0C01 0009               2497mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F0A  6E00 000A               2498mmm         BGT     ALPHA_149
00001F0E  0601 0030               2499mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F12  6000 0006               2500mmm         BRA     DONE_149
00001F16  0601 0037               2501mmm ALPHA_149: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F1A  4E71                    2502mmm DONE_149: NOP
00001F1C                          2503mmm         ENDM
00001F1C  4E4F                    2504mm         TRAP    #15         ; EXECUTE OUTPUT
00001F1E                          2505mm         
00001F1E  3212                    2506mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F20  E949                    2507mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00001F22  E049                    2508mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F24  E849                    2509mm         LSR.W   #4, D1      
00001F26                          2510mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F26  0C01 0009               2511mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F2A  6E00 000A               2512mmm         BGT     ALPHA_150
00001F2E  0601 0030               2513mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F32  6000 0006               2514mmm         BRA     DONE_150
00001F36  0601 0037               2515mmm ALPHA_150: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F3A  4E71                    2516mmm DONE_150: NOP
00001F3C                          2517mmm         ENDM
00001F3C  4E4F                    2518mm         TRAP    #15         ; EXECUTE OUTPUT
00001F3E                          2519mm         
00001F3E  3212                    2520mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F40  E149                    2521mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F42  E049                    2522mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F44  E849                    2523mm         LSR.W   #4, D1      
00001F46                          2524mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F46  0C01 0009               2525mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F4A  6E00 000A               2526mmm         BGT     ALPHA_151
00001F4E  0601 0030               2527mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F52  6000 0006               2528mmm         BRA     DONE_151
00001F56  0601 0037               2529mmm ALPHA_151: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F5A  4E71                    2530mmm DONE_151: NOP
00001F5C                          2531mmm         ENDM
00001F5C  4E4F                    2532mm         TRAP    #15         ; EXECUTE OUTPUT
00001F5E                          2533mm         
00001F5E  3212                    2534mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00001F60  E149                    2535mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00001F62  E949                    2536mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00001F64  E049                    2537mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00001F66  E849                    2538mm         LSR.W   #4, D1      
00001F68                          2539mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00001F68  0C01 0009               2540mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00001F6C  6E00 000A               2541mmm         BGT     ALPHA_152
00001F70  0601 0030               2542mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00001F74  6000 0006               2543mmm         BRA     DONE_152
00001F78  0601 0037               2544mmm ALPHA_152: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00001F7C  4E71                    2545mmm DONE_152: NOP
00001F7E                          2546mmm         ENDM
00001F7E  4E4F                    2547mm         TRAP    #15         ; EXECUTE OUTPUT       
00001F80                          2548mm         ENDM 
00001F80  3605                    2549m         MOVE.W  D5, D3
00001F82                          2550m 
00001F82                          2551m COMPLETE_90:  ; OPCODE HAS BEEN VERIFIED
00001F82                          2552m         ENDM
00001F82  4E75                    2553          RTS                 ; Return from decodeMOVE subroutine
00001F84                          2554  
00001F84                          2555  
00001F84                          2556  ; ------------------------------------------------------------
00001F84                          2557  ; 3. "decodeMOVEM" subroutine
00001F84                          2558  ; AUTHOR
00001F84                          2559  ;
00001F84                          2560  ; TODO: DESCRIPTION
00001F84                          2561  ; ------------------------------------------------------------
00001F84                          2562  decodeMOVEM:
00001F84                          2563m         verifyOpcode    pMOVEM, (A2)
00001F84  43F8 0118               2564m         LEA     PMOVEM, A1      ; INPUT PATTERN STRING
00001F88  3612                    2565m         MOVE.W  (A2), D3      ; INPUT VALUE
00001F8A  123C 000F               2566m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001F8E                          2567m         
00001F8E                          2568m LOOP_153: 
00001F8E  0C11 0030               2569m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001F92  6700 000E               2570m         BEQ     CHECKFOR0_153
00001F96  0C11 0031               2571m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001F9A  6700 0010               2572m         BEQ     CHECKFOR1_153
00001F9E  6000 0012               2573m         BRA     NEXT_153      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001FA2                          2574m         
00001FA2                          2575m CHECKFOR0_153: 
00001FA2  0303                    2576m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001FA4  6600 4C9A               2577m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001FA8  6000 0008               2578m         BRA     NEXT_153
00001FAC                          2579m 
00001FAC                          2580m CHECKFOR1_153:
00001FAC  0303                    2581m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001FAE  6700 4C90               2582m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001FB2                          2583m 
00001FB2                          2584m NEXT_153: 
00001FB2  B23C 0000               2585m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001FB6  6700 0008               2586m         BEQ     COMPLETE_153  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001FBA  5301                    2587m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001FBC  1819                    2588m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001FBE  60CE                    2589m         BRA     LOOP_153      ; BEGIN LOOP AGAIN
00001FC0                          2590m 
00001FC0                          2591m COMPLETE_153:  ; OPCODE HAS BEEN VERIFIED
00001FC0                          2592m         ENDM
00001FC0                          2593          ; put code here
00001FC0  4E75                    2594          RTS                 ; Return from decodeMOVEM subroutine
00001FC2                          2595  
00001FC2                          2596  
00001FC2                          2597  ; ------------------------------------------------------------
00001FC2                          2598  ; 4. "decodeADD" subroutine
00001FC2                          2599  ; AUTHOR
00001FC2                          2600  ;
00001FC2                          2601  ; TODO: DESCRIPTION
00001FC2                          2602  ; ------------------------------------------------------------
00001FC2                          2603  decodeADD:
00001FC2                          2604m         verifyOpcode    pADD, (A2)
00001FC2  43F8 0129               2605m         LEA     PADD, A1      ; INPUT PATTERN STRING
00001FC6  3612                    2606m         MOVE.W  (A2), D3      ; INPUT VALUE
00001FC8  123C 000F               2607m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00001FCC                          2608m         
00001FCC                          2609m LOOP_154: 
00001FCC  0C11 0030               2610m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00001FD0  6700 000E               2611m         BEQ     CHECKFOR0_154
00001FD4  0C11 0031               2612m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00001FD8  6700 0010               2613m         BEQ     CHECKFOR1_154
00001FDC  6000 0012               2614m         BRA     NEXT_154      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00001FE0                          2615m         
00001FE0                          2616m CHECKFOR0_154: 
00001FE0  0303                    2617m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00001FE2  6600 4C5C               2618m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00001FE6  6000 0008               2619m         BRA     NEXT_154
00001FEA                          2620m 
00001FEA                          2621m CHECKFOR1_154:
00001FEA  0303                    2622m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00001FEC  6700 4C52               2623m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00001FF0                          2624m 
00001FF0                          2625m NEXT_154: 
00001FF0  B23C 0000               2626m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00001FF4  6700 0008               2627m         BEQ     COMPLETE_154  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00001FF8  5301                    2628m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00001FFA  1819                    2629m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00001FFC  60CE                    2630m         BRA     LOOP_154      ; BEGIN LOOP AGAIN
00001FFE                          2631m 
00001FFE                          2632m COMPLETE_154:  ; OPCODE HAS BEEN VERIFIED
00001FFE                          2633m         ENDM
00001FFE  43F8 006F               2634          LEA     oADD, A1     
00002002  103C 000E               2635          MOVE.B  #14,D0          
00002006  4E4F                    2636          TRAP    #15
00002008                          2637m         printOpMode     (A2)
00002008  3612                    2638m         MOVE.W  (A2), D3      
0000200A  123C 0008               2639m         MOVE.B  #8, D1    
0000200E  4246                    2640m         CLR     D6
00002010  4247                    2641m         CLR     D7
00002012                          2642m CHECKFORDESTDN_155: 
00002012  0303                    2643m         BTST    D1, D3      
00002014  6600 004C               2644m         BNE     CHECKFORSRCDN_155
00002018  4EB9 000020F0           2645m         JSR     NEXT_155
0000201E  1C3C 0001               2646m         MOVE.B  #$1, D6
00002022  0303                    2647m         BTST    D1, D3      
00002024  6700 0014               2648m         BEQ     DESTDNW_155
00002028                          2649m DESTDNL_155:        
00002028  43F8 00C3               2650m         LEA     OLSIZE, A1     
0000202C  103C 000E               2651m         MOVE.B  #14,D0          
00002030  4E4F                    2652m         TRAP    #15
00002032  1E3C 0001               2653m         MOVE.B  #$1, D7
00002036  6000 00BC               2654m         BRA     COMPLETE_155 
0000203A                          2655m DESTDNW_155: 
0000203A  4EB9 000020F0           2656m         JSR     NEXT_155
00002040  0303                    2657m         BTST    D1, D3      
00002042  6700 0010               2658m         BEQ     DESTDNB_155
00002046  43F8 00BF               2659m         LEA     OWSIZE, A1     
0000204A  103C 000E               2660m         MOVE.B  #14,D0          
0000204E  4E4F                    2661m         TRAP    #15
00002050  6000 00A2               2662m         BRA     COMPLETE_155 
00002054                          2663m DESTDNB_155: 
00002054  43F8 00BB               2664m         LEA     OBSIZE, A1     
00002058  103C 000E               2665m         MOVE.B  #14,D0          
0000205C  4E4F                    2666m         TRAP    #15
0000205E  6000 0094               2667m         BRA     COMPLETE_155 
00002062                          2668m CHECKFORSRCDN_155: 
00002062  4EB9 000020F0           2669m         JSR     NEXT_155
00002068  0303                    2670m         BTST    D1, D3      
0000206A  6700 002C               2671m         BEQ     SRCDNW_155
0000206E                          2672m SRCDNL_155:        
0000206E  43F8 00C3               2673m         LEA     OLSIZE, A1     
00002072  103C 000E               2674m         MOVE.B  #14,D0          
00002076  4E4F                    2675m         TRAP    #15
00002078  1E3C 0001               2676m         MOVE.B  #$1, D7
0000207C                          2677mm         PRINTDNDEST D3
0000207C  3203                    2678mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000207E  E949                    2679mm         LSL     #$04, D1
00002080  E049                    2680mm         LSR     #$08, D1
00002082  EA49                    2681mm         LSR     #$05, D1
00002084  43F8 00C7               2682mm         LEA     ODN, A1     
00002088  103C 000E               2683mm         MOVE.B  #14,D0          
0000208C  4E4F                    2684mm         TRAP    #15
0000208E  103C 0003               2685mm         MOVE.B  #3,D0          
00002092  4E4F                    2686mm         TRAP    #15
00002094                          2687mm         ENDM
00002094  6000 005E               2688m         BRA     COMPLETE_155 
00002098                          2689m SRCDNW_155:
00002098  4EB9 000020F0           2690m         JSR     NEXT_155
0000209E  0303                    2691m         BTST    D1, D3     
000020A0  6700 0028               2692m         BEQ     SRCDNB_155
000020A4  43F8 00BF               2693m         LEA     OWSIZE, A1     
000020A8  103C 000E               2694m         MOVE.B  #14,D0          
000020AC  4E4F                    2695m         TRAP    #15
000020AE                          2696mm         PRINTDNDEST D3
000020AE  3203                    2697mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020B0  E949                    2698mm         LSL     #$04, D1
000020B2  E049                    2699mm         LSR     #$08, D1
000020B4  EA49                    2700mm         LSR     #$05, D1
000020B6  43F8 00C7               2701mm         LEA     ODN, A1     
000020BA  103C 000E               2702mm         MOVE.B  #14,D0          
000020BE  4E4F                    2703mm         TRAP    #15
000020C0  103C 0003               2704mm         MOVE.B  #3,D0          
000020C4  4E4F                    2705mm         TRAP    #15
000020C6                          2706mm         ENDM
000020C6  6000 002C               2707m         BRA     COMPLETE_155 
000020CA                          2708m SRCDNB_155: 
000020CA  43F8 00BB               2709m         LEA     OBSIZE, A1     
000020CE  103C 000E               2710m         MOVE.B  #14,D0          
000020D2  4E4F                    2711m         TRAP    #15
000020D4                          2712mm         PRINTDNDEST D3
000020D4  3203                    2713mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000020D6  E949                    2714mm         LSL     #$04, D1
000020D8  E049                    2715mm         LSR     #$08, D1
000020DA  EA49                    2716mm         LSR     #$05, D1
000020DC  43F8 00C7               2717mm         LEA     ODN, A1     
000020E0  103C 000E               2718mm         MOVE.B  #14,D0          
000020E4  4E4F                    2719mm         TRAP    #15
000020E6  103C 0003               2720mm         MOVE.B  #3,D0          
000020EA  4E4F                    2721mm         TRAP    #15
000020EC                          2722mm         ENDM
000020EC  6000 0006               2723m         BRA     COMPLETE_155 
000020F0                          2724m 
000020F0                          2725m NEXT_155:
000020F0  5301                    2726m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000020F2  4E75                    2727m         RTS                
000020F4                          2728m 
000020F4                          2729m COMPLETE_155:  ; OPCODE HAS BEEN VERIFIED
000020F4                          2730m         ENDM
000020F4  BC3C 0001               2731          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
000020F8  6700 05E0               2732          BEQ     decodeAddDestOp
000020FC                          2733m         printComma
000020FC  43F8 00CF               2734m         LEA     OCOMMA, A1     
00002100  103C 000E               2735m         MOVE.B  #14,D0          
00002104  4E4F                    2736m         TRAP    #15
00002106                          2737m         ENDM
00002106                          2738m         prepareAdrMode  #$1, (A2)
00002106  3C3C 0001               2739m         MOVE.W  #$1, D6      ; INPUT VALUE
0000210A  3212                    2740m         MOVE.W  (A2), D1
0000210C  BC3C 0001               2741m         CMP.B   #$01, D6
00002110  6700 000C               2742m         BEQ     ADRSOURCE_160    
00002114                          2743m ADRDEST_160:
00002114  EF49                    2744m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002116  E049                    2745m         LSR     #$08, D1
00002118  EA49                    2746m         LSR     #$05, D1
0000211A  6000 000A               2747m         BRA     COMPLETE_160 
0000211E                          2748m ADRSOURCE_160:                
0000211E  E149                    2749m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002120  E549                    2750m         LSL     #$02, D1
00002122  E049                    2751m         LSR     #$08, D1
00002124  EA49                    2752m         LSR     #$05, D1
00002126                          2753m COMPLETE_160:  ; OPCODE HAS BEEN VERIFIED
00002126                          2754m         ENDM        
00002126                          2755m         decodeAdrMode   (A2), D1
00002126  3612                    2756m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002128  3201                    2757m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000212A                          2758m 
0000212A  B23C 0001               2759m         CMP.B   #$01, D1
0000212E  6700 0066               2760m         BEQ     ADRREGDIRECT_161    
00002132  B23C 0002               2761m         CMP.B   #$02, D1
00002136  6700 00A0               2762m         BEQ     ADRREGINDIRECT_161  
0000213A  B23C 0003               2763m         CMP.B   #$03, D1
0000213E  6700 0102               2764m         BEQ     ADRREGPOSTINC_161  
00002142  B23C 0004               2765m         CMP.B   #$04, D1
00002146  6700 0178               2766m         BEQ     ADRREGPREDEC_161
0000214A  B23C 0007               2767m         CMP.B   #$07, D1
0000214E  6700 01EE               2768m         BEQ     ADRABSOLUTE_161    
00002152                          2769m         
00002152                          2770m DATAREGDIRECT_161: 
00002152  BC3C 0001               2771m         CMP.B   #$01, D6
00002156  6700 001E               2772m         BEQ     DATAREGDIRECTSRC_161   
0000215A                          2773m DATAREGDIRECTDEST_161: 
0000215A                          2774mm         PRINTDNDEST D3 
0000215A  3203                    2775mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000215C  E949                    2776mm         LSL     #$04, D1
0000215E  E049                    2777mm         LSR     #$08, D1
00002160  EA49                    2778mm         LSR     #$05, D1
00002162  43F8 00C7               2779mm         LEA     ODN, A1     
00002166  103C 000E               2780mm         MOVE.B  #14,D0          
0000216A  4E4F                    2781mm         TRAP    #15
0000216C  103C 0003               2782mm         MOVE.B  #3,D0          
00002170  4E4F                    2783mm         TRAP    #15
00002172                          2784mm         ENDM
00002172  6000 0562               2785m         BRA     COMPLETE_161 
00002176                          2786m DATAREGDIRECTSRC_161: 
00002176                          2787mm         PRINTDNSRC D3 
00002176  4281                    2788mm         CLR.L   D1
00002178  3203                    2789mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000217A  E149                    2790mm         LSL     #$08, D1
0000217C  EB49                    2791mm         LSL     #$05, D1
0000217E  E049                    2792mm         LSR     #$08, D1
00002180  EA49                    2793mm         LSR     #$05, D1
00002182  43F8 00C7               2794mm         LEA     ODN, A1     
00002186  103C 000E               2795mm         MOVE.B  #14,D0          
0000218A  4E4F                    2796mm         TRAP    #15
0000218C  103C 0003               2797mm         MOVE.B  #3,D0          
00002190  4E4F                    2798mm         TRAP    #15
00002192                          2799mm         ENDM
00002192  6000 0542               2800m         BRA     COMPLETE_161   
00002196                          2801m         
00002196                          2802m ADRREGDIRECT_161: 
00002196  BC3C 0001               2803m         CMP.B   #$01, D6
0000219A  6700 001E               2804m         BEQ     ADRREGDIRECTSRC_161   
0000219E                          2805m ADRREGDIRECTDEST_161:
0000219E                          2806mm         PRINTANDEST D3
0000219E  3203                    2807mm         MOVE.W  D3, D1
000021A0  E949                    2808mm         LSL     #$04, D1
000021A2  E049                    2809mm         LSR     #$08, D1
000021A4  EA49                    2810mm         LSR     #$05, D1
000021A6  43F8 00C9               2811mm         LEA     OAN, A1     
000021AA  103C 000E               2812mm         MOVE.B  #14,D0          
000021AE  4E4F                    2813mm         TRAP    #15
000021B0  103C 0003               2814mm         MOVE.B  #3,D0          
000021B4  4E4F                    2815mm         TRAP    #15
000021B6                          2816mm         ENDM
000021B6  6000 051E               2817m         BRA     COMPLETE_161   
000021BA                          2818m ADRREGDIRECTSRC_161:
000021BA                          2819mm         PRINTANSRC D3
000021BA  3203                    2820mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000021BC  E149                    2821mm         LSL     #$08, D1
000021BE  EB49                    2822mm         LSL     #$05, D1
000021C0  E049                    2823mm         LSR     #$08, D1
000021C2  EA49                    2824mm         LSR     #$05, D1
000021C4  43F8 00C9               2825mm         LEA     OAN, A1     
000021C8  103C 000E               2826mm         MOVE.B  #14,D0          
000021CC  4E4F                    2827mm         TRAP    #15
000021CE  103C 0003               2828mm         MOVE.B  #3,D0          
000021D2  4E4F                    2829mm         TRAP    #15
000021D4                          2830mm         ENDM
000021D4  6000 0500               2831m         BRA     COMPLETE_161   
000021D8                          2832m        
000021D8                          2833m ADRREGINDIRECT_161:   
000021D8  BC3C 0001               2834m         CMP.B   #$01, D6
000021DC  6700 0032               2835m         BEQ     ADRREGINDIRECTSRC_161   
000021E0                          2836m ADRREGINDIRECTDEST_161:
000021E0                          2837mm         PRINTLB
000021E0  43F8 00CB               2838mm         LEA     OLB, A1     
000021E4  103C 000E               2839mm         MOVE.B  #14,D0          
000021E8  4E4F                    2840mm         TRAP    #15
000021EA                          2841mm         ENDM
000021EA                          2842mm         PRINTANDEST D3  
000021EA  3203                    2843mm         MOVE.W  D3, D1
000021EC  E949                    2844mm         LSL     #$04, D1
000021EE  E049                    2845mm         LSR     #$08, D1
000021F0  EA49                    2846mm         LSR     #$05, D1
000021F2  43F8 00C9               2847mm         LEA     OAN, A1     
000021F6  103C 000E               2848mm         MOVE.B  #14,D0          
000021FA  4E4F                    2849mm         TRAP    #15
000021FC  103C 0003               2850mm         MOVE.B  #3,D0          
00002200  4E4F                    2851mm         TRAP    #15
00002202                          2852mm         ENDM
00002202                          2853mm         PRINTRB
00002202  43F8 00CD               2854mm         LEA     ORB, A1     
00002206  103C 000E               2855mm         MOVE.B  #14,D0          
0000220A  4E4F                    2856mm         TRAP    #15
0000220C                          2857mm         ENDM
0000220C  6000 04C8               2858m         BRA     COMPLETE_161     
00002210                          2859m ADRREGINDIRECTSRC_161:   
00002210                          2860mm         PRINTLB
00002210  43F8 00CB               2861mm         LEA     OLB, A1     
00002214  103C 000E               2862mm         MOVE.B  #14,D0          
00002218  4E4F                    2863mm         TRAP    #15
0000221A                          2864mm         ENDM
0000221A                          2865mm         PRINTANSRC D3  
0000221A  3203                    2866mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000221C  E149                    2867mm         LSL     #$08, D1
0000221E  EB49                    2868mm         LSL     #$05, D1
00002220  E049                    2869mm         LSR     #$08, D1
00002222  EA49                    2870mm         LSR     #$05, D1
00002224  43F8 00C9               2871mm         LEA     OAN, A1     
00002228  103C 000E               2872mm         MOVE.B  #14,D0          
0000222C  4E4F                    2873mm         TRAP    #15
0000222E  103C 0003               2874mm         MOVE.B  #3,D0          
00002232  4E4F                    2875mm         TRAP    #15
00002234                          2876mm         ENDM
00002234                          2877mm         PRINTRB
00002234  43F8 00CD               2878mm         LEA     ORB, A1     
00002238  103C 000E               2879mm         MOVE.B  #14,D0          
0000223C  4E4F                    2880mm         TRAP    #15
0000223E                          2881mm         ENDM
0000223E  6000 0496               2882m         BRA     COMPLETE_161   
00002242                          2883m         
00002242                          2884m ADRREGPOSTINC_161:   
00002242  BC3C 0001               2885m         CMP.B   #$01, D6
00002246  6700 003C               2886m         BEQ     ADRREGPOSTINCSRC_161   
0000224A                          2887m ADRREGPOSTINCDEST_161: 
0000224A                          2888mm         PRINTLB
0000224A  43F8 00CB               2889mm         LEA     OLB, A1     
0000224E  103C 000E               2890mm         MOVE.B  #14,D0          
00002252  4E4F                    2891mm         TRAP    #15
00002254                          2892mm         ENDM
00002254                          2893mm         PRINTANDEST D3  
00002254  3203                    2894mm         MOVE.W  D3, D1
00002256  E949                    2895mm         LSL     #$04, D1
00002258  E049                    2896mm         LSR     #$08, D1
0000225A  EA49                    2897mm         LSR     #$05, D1
0000225C  43F8 00C9               2898mm         LEA     OAN, A1     
00002260  103C 000E               2899mm         MOVE.B  #14,D0          
00002264  4E4F                    2900mm         TRAP    #15
00002266  103C 0003               2901mm         MOVE.B  #3,D0          
0000226A  4E4F                    2902mm         TRAP    #15
0000226C                          2903mm         ENDM
0000226C                          2904mm         PRINTRB
0000226C  43F8 00CD               2905mm         LEA     ORB, A1     
00002270  103C 000E               2906mm         MOVE.B  #14,D0          
00002274  4E4F                    2907mm         TRAP    #15
00002276                          2908mm         ENDM
00002276                          2909mm         PRINTPI
00002276  43F8 00D4               2910mm         LEA     OPSTINC, A1     
0000227A  103C 000E               2911mm         MOVE.B  #14,D0          
0000227E  4E4F                    2912mm         TRAP    #15
00002280                          2913mm         ENDM
00002280  6000 0454               2914m         BRA     COMPLETE_161  
00002284                          2915m ADRREGPOSTINCSRC_161:           
00002284                          2916mm         PRINTLB
00002284  43F8 00CB               2917mm         LEA     OLB, A1     
00002288  103C 000E               2918mm         MOVE.B  #14,D0          
0000228C  4E4F                    2919mm         TRAP    #15
0000228E                          2920mm         ENDM
0000228E                          2921mm         PRINTANSRC D3  
0000228E  3203                    2922mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002290  E149                    2923mm         LSL     #$08, D1
00002292  EB49                    2924mm         LSL     #$05, D1
00002294  E049                    2925mm         LSR     #$08, D1
00002296  EA49                    2926mm         LSR     #$05, D1
00002298  43F8 00C9               2927mm         LEA     OAN, A1     
0000229C  103C 000E               2928mm         MOVE.B  #14,D0          
000022A0  4E4F                    2929mm         TRAP    #15
000022A2  103C 0003               2930mm         MOVE.B  #3,D0          
000022A6  4E4F                    2931mm         TRAP    #15
000022A8                          2932mm         ENDM
000022A8                          2933mm         PRINTRB
000022A8  43F8 00CD               2934mm         LEA     ORB, A1     
000022AC  103C 000E               2935mm         MOVE.B  #14,D0          
000022B0  4E4F                    2936mm         TRAP    #15
000022B2                          2937mm         ENDM
000022B2                          2938mm         PRINTPI
000022B2  43F8 00D4               2939mm         LEA     OPSTINC, A1     
000022B6  103C 000E               2940mm         MOVE.B  #14,D0          
000022BA  4E4F                    2941mm         TRAP    #15
000022BC                          2942mm         ENDM
000022BC  6000 0418               2943m         BRA     COMPLETE_161  
000022C0                          2944m ADRREGPREDEC_161: 
000022C0  BC3C 0001               2945m         CMP.B   #$01, D6
000022C4  6700 003C               2946m         BEQ     ADRREGPREDECSRC_161   
000022C8                          2947m ADRREGPREDECDEST_161:
000022C8                          2948mm         PRINTPD  
000022C8  43F8 00D2               2949mm         LEA     OPREDEC, A1     
000022CC  103C 000E               2950mm         MOVE.B  #14,D0          
000022D0  4E4F                    2951mm         TRAP    #15
000022D2                          2952mm         ENDM
000022D2                          2953mm         PRINTLB
000022D2  43F8 00CB               2954mm         LEA     OLB, A1     
000022D6  103C 000E               2955mm         MOVE.B  #14,D0          
000022DA  4E4F                    2956mm         TRAP    #15
000022DC                          2957mm         ENDM
000022DC                          2958mm         PRINTANDEST D3  
000022DC  3203                    2959mm         MOVE.W  D3, D1
000022DE  E949                    2960mm         LSL     #$04, D1
000022E0  E049                    2961mm         LSR     #$08, D1
000022E2  EA49                    2962mm         LSR     #$05, D1
000022E4  43F8 00C9               2963mm         LEA     OAN, A1     
000022E8  103C 000E               2964mm         MOVE.B  #14,D0          
000022EC  4E4F                    2965mm         TRAP    #15
000022EE  103C 0003               2966mm         MOVE.B  #3,D0          
000022F2  4E4F                    2967mm         TRAP    #15
000022F4                          2968mm         ENDM
000022F4                          2969mm         PRINTRB
000022F4  43F8 00CD               2970mm         LEA     ORB, A1     
000022F8  103C 000E               2971mm         MOVE.B  #14,D0          
000022FC  4E4F                    2972mm         TRAP    #15
000022FE                          2973mm         ENDM
000022FE  6000 03D6               2974m         BRA     COMPLETE_161   
00002302                          2975m ADRREGPREDECSRC_161: 
00002302                          2976mm         PRINTPD  
00002302  43F8 00D2               2977mm         LEA     OPREDEC, A1     
00002306  103C 000E               2978mm         MOVE.B  #14,D0          
0000230A  4E4F                    2979mm         TRAP    #15
0000230C                          2980mm         ENDM
0000230C                          2981mm         PRINTLB
0000230C  43F8 00CB               2982mm         LEA     OLB, A1     
00002310  103C 000E               2983mm         MOVE.B  #14,D0          
00002314  4E4F                    2984mm         TRAP    #15
00002316                          2985mm         ENDM
00002316                          2986mm         PRINTANSRC D3  
00002316  3203                    2987mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002318  E149                    2988mm         LSL     #$08, D1
0000231A  EB49                    2989mm         LSL     #$05, D1
0000231C  E049                    2990mm         LSR     #$08, D1
0000231E  EA49                    2991mm         LSR     #$05, D1
00002320  43F8 00C9               2992mm         LEA     OAN, A1     
00002324  103C 000E               2993mm         MOVE.B  #14,D0          
00002328  4E4F                    2994mm         TRAP    #15
0000232A  103C 0003               2995mm         MOVE.B  #3,D0          
0000232E  4E4F                    2996mm         TRAP    #15
00002330                          2997mm         ENDM
00002330                          2998mm         PRINTRB
00002330  43F8 00CD               2999mm         LEA     ORB, A1     
00002334  103C 000E               3000mm         MOVE.B  #14,D0          
00002338  4E4F                    3001mm         TRAP    #15
0000233A                          3002mm         ENDM
0000233A  6000 039A               3003m         BRA     COMPLETE_161
0000233E                          3004m        
0000233E                          3005m ADRABSOLUTE_161:
0000233E  BC3C 0001               3006m         CMP.B   #$01, D6
00002342  6600 0018               3007m         BNE     ADRABSOLUTEDST_161 
00002346                          3008m         
00002346  3A03                    3009m         MOVE.W  D3, D5
00002348  0803 0002               3010m         BTST    #2, D3
0000234C  6600 0024               3011m         BNE     ADRIMMEDIATE_161
00002350  0803 0000               3012m         BTST    #0, D3
00002354  6600 0270               3013m         BNE     ADRABSOLUTEL_161
00002358  6000 01DA               3014m         BRA     ADRABSOLUTEW_161
0000235C                          3015m ADRABSOLUTEDST_161:
0000235C  3A03                    3016m         MOVE.W  D3, D5
0000235E  0803 000B               3017m         BTST    #$B, D3
00002362  6600 000E               3018m         BNE     ADRIMMEDIATE_161
00002366  0803 0009               3019m         BTST    #$09, D3
0000236A  6600 025A               3020m         BNE     ADRABSOLUTEL_161
0000236E  6000 01C4               3021m         BRA     ADRABSOLUTEW_161
00002372                          3022m ADRIMMEDIATE_161:
00002372  BE3C 0001               3023m         CMP.B   #1, D7
00002376  6700 009E               3024m         BEQ     ADRIMMEDIATEL_161
0000237A                          3025m ADRIMMEDIATEW_161:
0000237A  361A                    3026m         MOVE.W  (A2)+, D3
0000237C                          3027mm         PRINTHASH
0000237C  103C 0006               3028mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002380  323C 0023               3029mm         MOVE.W  #35, D1     ; AN = SIGN
00002384  4E4F                    3030mm         TRAP    #15         ; OUTPUT = SIGN
00002386                          3031mm         ENDM
00002386                          3032mm         PRINTSIGN
00002386  103C 0006               3033mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000238A  323C 0024               3034mm         MOVE.W  #36, D1     ; AN = SIGN
0000238E  4E4F                    3035mm         TRAP    #15         ; OUTPUT = SIGN
00002390                          3036mm         ENDM
00002390                          3037mm         ADROUT
00002390  3212                    3038mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002392  E049                    3039mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002394  E849                    3040mm         LSR.W   #4, D1      
00002396                          3041mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002396  0C01 0009               3042mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000239A  6E00 000A               3043mmm         BGT     ALPHA_191
0000239E  0601 0030               3044mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023A2  6000 0006               3045mmm         BRA     DONE_191
000023A6  0601 0037               3046mmm ALPHA_191: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023AA  4E71                    3047mmm DONE_191: NOP
000023AC                          3048mmm         ENDM
000023AC  4E4F                    3049mm         TRAP    #15         ; EXECUTE OUTPUT
000023AE                          3050mm         
000023AE  3212                    3051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023B0  E949                    3052mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000023B2  E049                    3053mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023B4  E849                    3054mm         LSR.W   #4, D1      
000023B6                          3055mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023B6  0C01 0009               3056mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023BA  6E00 000A               3057mmm         BGT     ALPHA_192
000023BE  0601 0030               3058mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023C2  6000 0006               3059mmm         BRA     DONE_192
000023C6  0601 0037               3060mmm ALPHA_192: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023CA  4E71                    3061mmm DONE_192: NOP
000023CC                          3062mmm         ENDM
000023CC  4E4F                    3063mm         TRAP    #15         ; EXECUTE OUTPUT
000023CE                          3064mm         
000023CE  3212                    3065mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023D0  E149                    3066mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023D2  E049                    3067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023D4  E849                    3068mm         LSR.W   #4, D1      
000023D6                          3069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023D6  0C01 0009               3070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023DA  6E00 000A               3071mmm         BGT     ALPHA_193
000023DE  0601 0030               3072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000023E2  6000 0006               3073mmm         BRA     DONE_193
000023E6  0601 0037               3074mmm ALPHA_193: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000023EA  4E71                    3075mmm DONE_193: NOP
000023EC                          3076mmm         ENDM
000023EC  4E4F                    3077mm         TRAP    #15         ; EXECUTE OUTPUT
000023EE                          3078mm         
000023EE  3212                    3079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000023F0  E149                    3080mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000023F2  E949                    3081mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000023F4  E049                    3082mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000023F6  E849                    3083mm         LSR.W   #4, D1      
000023F8                          3084mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000023F8  0C01 0009               3085mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000023FC  6E00 000A               3086mmm         BGT     ALPHA_194
00002400  0601 0030               3087mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002404  6000 0006               3088mmm         BRA     DONE_194
00002408  0601 0037               3089mmm ALPHA_194: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000240C  4E71                    3090mmm DONE_194: NOP
0000240E                          3091mmm         ENDM
0000240E  4E4F                    3092mm         TRAP    #15         ; EXECUTE OUTPUT       
00002410                          3093mm         ENDM 
00002410  3605                    3094m         MOVE.W  D5, D3
00002412  6000 02C2               3095m         BRA     COMPLETE_161
00002416                          3096m ADRIMMEDIATEL_161:
00002416  361A                    3097m         MOVE.W  (A2)+, D3
00002418                          3098mm         PRINTHASH
00002418  103C 0006               3099mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000241C  323C 0023               3100mm         MOVE.W  #35, D1     ; AN = SIGN
00002420  4E4F                    3101mm         TRAP    #15         ; OUTPUT = SIGN
00002422                          3102mm         ENDM
00002422                          3103mm         PRINTSIGN
00002422  103C 0006               3104mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002426  323C 0024               3105mm         MOVE.W  #36, D1     ; AN = SIGN
0000242A  4E4F                    3106mm         TRAP    #15         ; OUTPUT = SIGN
0000242C                          3107mm         ENDM
0000242C                          3108mm         ADROUT 
0000242C  3212                    3109mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000242E  E049                    3110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002430  E849                    3111mm         LSR.W   #4, D1      
00002432                          3112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002432  0C01 0009               3113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002436  6E00 000A               3114mmm         BGT     ALPHA_198
0000243A  0601 0030               3115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000243E  6000 0006               3116mmm         BRA     DONE_198
00002442  0601 0037               3117mmm ALPHA_198: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002446  4E71                    3118mmm DONE_198: NOP
00002448                          3119mmm         ENDM
00002448  4E4F                    3120mm         TRAP    #15         ; EXECUTE OUTPUT
0000244A                          3121mm         
0000244A  3212                    3122mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000244C  E949                    3123mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000244E  E049                    3124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002450  E849                    3125mm         LSR.W   #4, D1      
00002452                          3126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002452  0C01 0009               3127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002456  6E00 000A               3128mmm         BGT     ALPHA_199
0000245A  0601 0030               3129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000245E  6000 0006               3130mmm         BRA     DONE_199
00002462  0601 0037               3131mmm ALPHA_199: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002466  4E71                    3132mmm DONE_199: NOP
00002468                          3133mmm         ENDM
00002468  4E4F                    3134mm         TRAP    #15         ; EXECUTE OUTPUT
0000246A                          3135mm         
0000246A  3212                    3136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000246C  E149                    3137mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000246E  E049                    3138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002470  E849                    3139mm         LSR.W   #4, D1      
00002472                          3140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002472  0C01 0009               3141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002476  6E00 000A               3142mmm         BGT     ALPHA_200
0000247A  0601 0030               3143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000247E  6000 0006               3144mmm         BRA     DONE_200
00002482  0601 0037               3145mmm ALPHA_200: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002486  4E71                    3146mmm DONE_200: NOP
00002488                          3147mmm         ENDM
00002488  4E4F                    3148mm         TRAP    #15         ; EXECUTE OUTPUT
0000248A                          3149mm         
0000248A  3212                    3150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000248C  E149                    3151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000248E  E949                    3152mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002490  E049                    3153mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002492  E849                    3154mm         LSR.W   #4, D1      
00002494                          3155mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002494  0C01 0009               3156mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002498  6E00 000A               3157mmm         BGT     ALPHA_201
0000249C  0601 0030               3158mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024A0  6000 0006               3159mmm         BRA     DONE_201
000024A4  0601 0037               3160mmm ALPHA_201: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024A8  4E71                    3161mmm DONE_201: NOP
000024AA                          3162mmm         ENDM
000024AA  4E4F                    3163mm         TRAP    #15         ; EXECUTE OUTPUT       
000024AC                          3164mm         ENDM 
000024AC  361A                    3165m         MOVE.W  (A2)+, D3
000024AE                          3166mm         ADROUT
000024AE  3212                    3167mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024B0  E049                    3168mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024B2  E849                    3169mm         LSR.W   #4, D1      
000024B4                          3170mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024B4  0C01 0009               3171mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024B8  6E00 000A               3172mmm         BGT     ALPHA_203
000024BC  0601 0030               3173mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024C0  6000 0006               3174mmm         BRA     DONE_203
000024C4  0601 0037               3175mmm ALPHA_203: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024C8  4E71                    3176mmm DONE_203: NOP
000024CA                          3177mmm         ENDM
000024CA  4E4F                    3178mm         TRAP    #15         ; EXECUTE OUTPUT
000024CC                          3179mm         
000024CC  3212                    3180mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024CE  E949                    3181mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000024D0  E049                    3182mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024D2  E849                    3183mm         LSR.W   #4, D1      
000024D4                          3184mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024D4  0C01 0009               3185mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024D8  6E00 000A               3186mmm         BGT     ALPHA_204
000024DC  0601 0030               3187mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000024E0  6000 0006               3188mmm         BRA     DONE_204
000024E4  0601 0037               3189mmm ALPHA_204: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000024E8  4E71                    3190mmm DONE_204: NOP
000024EA                          3191mmm         ENDM
000024EA  4E4F                    3192mm         TRAP    #15         ; EXECUTE OUTPUT
000024EC                          3193mm         
000024EC  3212                    3194mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000024EE  E149                    3195mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000024F0  E049                    3196mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000024F2  E849                    3197mm         LSR.W   #4, D1      
000024F4                          3198mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000024F4  0C01 0009               3199mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000024F8  6E00 000A               3200mmm         BGT     ALPHA_205
000024FC  0601 0030               3201mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002500  6000 0006               3202mmm         BRA     DONE_205
00002504  0601 0037               3203mmm ALPHA_205: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002508  4E71                    3204mmm DONE_205: NOP
0000250A                          3205mmm         ENDM
0000250A  4E4F                    3206mm         TRAP    #15         ; EXECUTE OUTPUT
0000250C                          3207mm         
0000250C  3212                    3208mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000250E  E149                    3209mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002510  E949                    3210mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002512  E049                    3211mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002514  E849                    3212mm         LSR.W   #4, D1      
00002516                          3213mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002516  0C01 0009               3214mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000251A  6E00 000A               3215mmm         BGT     ALPHA_206
0000251E  0601 0030               3216mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002522  6000 0006               3217mmm         BRA     DONE_206
00002526  0601 0037               3218mmm ALPHA_206: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000252A  4E71                    3219mmm DONE_206: NOP
0000252C                          3220mmm         ENDM
0000252C  4E4F                    3221mm         TRAP    #15         ; EXECUTE OUTPUT       
0000252E                          3222mm         ENDM 
0000252E  3605                    3223m         MOVE.W  D5, D3
00002530  6000 01A4               3224m         BRA     COMPLETE_161 
00002534                          3225m ADRABSOLUTEW_161:     
00002534  361A                    3226m         MOVE.W  (A2)+, D3
00002536                          3227mm         PRINTSIGN
00002536  103C 0006               3228mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000253A  323C 0024               3229mm         MOVE.W  #36, D1     ; AN = SIGN
0000253E  4E4F                    3230mm         TRAP    #15         ; OUTPUT = SIGN
00002540                          3231mm         ENDM
00002540                          3232mm         ADROUT
00002540  3212                    3233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002542  E049                    3234mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002544  E849                    3235mm         LSR.W   #4, D1      
00002546                          3236mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002546  0C01 0009               3237mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000254A  6E00 000A               3238mmm         BGT     ALPHA_209
0000254E  0601 0030               3239mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002552  6000 0006               3240mmm         BRA     DONE_209
00002556  0601 0037               3241mmm ALPHA_209: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000255A  4E71                    3242mmm DONE_209: NOP
0000255C                          3243mmm         ENDM
0000255C  4E4F                    3244mm         TRAP    #15         ; EXECUTE OUTPUT
0000255E                          3245mm         
0000255E  3212                    3246mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002560  E949                    3247mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002562  E049                    3248mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002564  E849                    3249mm         LSR.W   #4, D1      
00002566                          3250mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002566  0C01 0009               3251mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000256A  6E00 000A               3252mmm         BGT     ALPHA_210
0000256E  0601 0030               3253mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002572  6000 0006               3254mmm         BRA     DONE_210
00002576  0601 0037               3255mmm ALPHA_210: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000257A  4E71                    3256mmm DONE_210: NOP
0000257C                          3257mmm         ENDM
0000257C  4E4F                    3258mm         TRAP    #15         ; EXECUTE OUTPUT
0000257E                          3259mm         
0000257E  3212                    3260mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002580  E149                    3261mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002582  E049                    3262mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002584  E849                    3263mm         LSR.W   #4, D1      
00002586                          3264mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002586  0C01 0009               3265mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000258A  6E00 000A               3266mmm         BGT     ALPHA_211
0000258E  0601 0030               3267mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002592  6000 0006               3268mmm         BRA     DONE_211
00002596  0601 0037               3269mmm ALPHA_211: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000259A  4E71                    3270mmm DONE_211: NOP
0000259C                          3271mmm         ENDM
0000259C  4E4F                    3272mm         TRAP    #15         ; EXECUTE OUTPUT
0000259E                          3273mm         
0000259E  3212                    3274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025A0  E149                    3275mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000025A2  E949                    3276mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000025A4  E049                    3277mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025A6  E849                    3278mm         LSR.W   #4, D1      
000025A8                          3279mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025A8  0C01 0009               3280mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025AC  6E00 000A               3281mmm         BGT     ALPHA_212
000025B0  0601 0030               3282mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025B4  6000 0006               3283mmm         BRA     DONE_212
000025B8  0601 0037               3284mmm ALPHA_212: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025BC  4E71                    3285mmm DONE_212: NOP
000025BE                          3286mmm         ENDM
000025BE  4E4F                    3287mm         TRAP    #15         ; EXECUTE OUTPUT       
000025C0                          3288mm         ENDM 
000025C0  3605                    3289m         MOVE.W  D5, D3
000025C2  6000 0112               3290m         BRA     COMPLETE_161  
000025C6                          3291m ADRABSOLUTEL_161:  
000025C6  361A                    3292m         MOVE.W  (A2)+, D3
000025C8                          3293mm         PRINTSIGN
000025C8  103C 0006               3294mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000025CC  323C 0024               3295mm         MOVE.W  #36, D1     ; AN = SIGN
000025D0  4E4F                    3296mm         TRAP    #15         ; OUTPUT = SIGN
000025D2                          3297mm         ENDM
000025D2                          3298mm         ADROUT 
000025D2  3212                    3299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025D4  E049                    3300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025D6  E849                    3301mm         LSR.W   #4, D1      
000025D8                          3302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025D8  0C01 0009               3303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025DC  6E00 000A               3304mmm         BGT     ALPHA_215
000025E0  0601 0030               3305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000025E4  6000 0006               3306mmm         BRA     DONE_215
000025E8  0601 0037               3307mmm ALPHA_215: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000025EC  4E71                    3308mmm DONE_215: NOP
000025EE                          3309mmm         ENDM
000025EE  4E4F                    3310mm         TRAP    #15         ; EXECUTE OUTPUT
000025F0                          3311mm         
000025F0  3212                    3312mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000025F2  E949                    3313mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000025F4  E049                    3314mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000025F6  E849                    3315mm         LSR.W   #4, D1      
000025F8                          3316mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000025F8  0C01 0009               3317mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000025FC  6E00 000A               3318mmm         BGT     ALPHA_216
00002600  0601 0030               3319mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002604  6000 0006               3320mmm         BRA     DONE_216
00002608  0601 0037               3321mmm ALPHA_216: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000260C  4E71                    3322mmm DONE_216: NOP
0000260E                          3323mmm         ENDM
0000260E  4E4F                    3324mm         TRAP    #15         ; EXECUTE OUTPUT
00002610                          3325mm         
00002610  3212                    3326mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002612  E149                    3327mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002614  E049                    3328mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002616  E849                    3329mm         LSR.W   #4, D1      
00002618                          3330mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002618  0C01 0009               3331mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000261C  6E00 000A               3332mmm         BGT     ALPHA_217
00002620  0601 0030               3333mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002624  6000 0006               3334mmm         BRA     DONE_217
00002628  0601 0037               3335mmm ALPHA_217: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000262C  4E71                    3336mmm DONE_217: NOP
0000262E                          3337mmm         ENDM
0000262E  4E4F                    3338mm         TRAP    #15         ; EXECUTE OUTPUT
00002630                          3339mm         
00002630  3212                    3340mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002632  E149                    3341mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002634  E949                    3342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002636  E049                    3343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002638  E849                    3344mm         LSR.W   #4, D1      
0000263A                          3345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000263A  0C01 0009               3346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000263E  6E00 000A               3347mmm         BGT     ALPHA_218
00002642  0601 0030               3348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002646  6000 0006               3349mmm         BRA     DONE_218
0000264A  0601 0037               3350mmm ALPHA_218: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000264E  4E71                    3351mmm DONE_218: NOP
00002650                          3352mmm         ENDM
00002650  4E4F                    3353mm         TRAP    #15         ; EXECUTE OUTPUT       
00002652                          3354mm         ENDM 
00002652  361A                    3355m         MOVE.W  (A2)+, D3
00002654                          3356mm         ADROUT
00002654  3212                    3357mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002656  E049                    3358mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002658  E849                    3359mm         LSR.W   #4, D1      
0000265A                          3360mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000265A  0C01 0009               3361mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000265E  6E00 000A               3362mmm         BGT     ALPHA_220
00002662  0601 0030               3363mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002666  6000 0006               3364mmm         BRA     DONE_220
0000266A  0601 0037               3365mmm ALPHA_220: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000266E  4E71                    3366mmm DONE_220: NOP
00002670                          3367mmm         ENDM
00002670  4E4F                    3368mm         TRAP    #15         ; EXECUTE OUTPUT
00002672                          3369mm         
00002672  3212                    3370mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002674  E949                    3371mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002676  E049                    3372mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002678  E849                    3373mm         LSR.W   #4, D1      
0000267A                          3374mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000267A  0C01 0009               3375mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000267E  6E00 000A               3376mmm         BGT     ALPHA_221
00002682  0601 0030               3377mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002686  6000 0006               3378mmm         BRA     DONE_221
0000268A  0601 0037               3379mmm ALPHA_221: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000268E  4E71                    3380mmm DONE_221: NOP
00002690                          3381mmm         ENDM
00002690  4E4F                    3382mm         TRAP    #15         ; EXECUTE OUTPUT
00002692                          3383mm         
00002692  3212                    3384mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002694  E149                    3385mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002696  E049                    3386mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002698  E849                    3387mm         LSR.W   #4, D1      
0000269A                          3388mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000269A  0C01 0009               3389mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000269E  6E00 000A               3390mmm         BGT     ALPHA_222
000026A2  0601 0030               3391mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026A6  6000 0006               3392mmm         BRA     DONE_222
000026AA  0601 0037               3393mmm ALPHA_222: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026AE  4E71                    3394mmm DONE_222: NOP
000026B0                          3395mmm         ENDM
000026B0  4E4F                    3396mm         TRAP    #15         ; EXECUTE OUTPUT
000026B2                          3397mm         
000026B2  3212                    3398mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000026B4  E149                    3399mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000026B6  E949                    3400mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000026B8  E049                    3401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000026BA  E849                    3402mm         LSR.W   #4, D1      
000026BC                          3403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000026BC  0C01 0009               3404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000026C0  6E00 000A               3405mmm         BGT     ALPHA_223
000026C4  0601 0030               3406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000026C8  6000 0006               3407mmm         BRA     DONE_223
000026CC  0601 0037               3408mmm ALPHA_223: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000026D0  4E71                    3409mmm DONE_223: NOP
000026D2                          3410mmm         ENDM
000026D2  4E4F                    3411mm         TRAP    #15         ; EXECUTE OUTPUT       
000026D4                          3412mm         ENDM 
000026D4  3605                    3413m         MOVE.W  D5, D3
000026D6                          3414m 
000026D6                          3415m COMPLETE_161:  ; OPCODE HAS BEEN VERIFIED
000026D6                          3416m         ENDM
000026D6  6000 05F4               3417          BRA     decodeADDcomp
000026DA                          3418  decodeAddDestOp:
000026DA                          3419m         prepareAdrMode  #$1,(A2)
000026DA  3C3C 0001               3420m         MOVE.W  #$1, D6      ; INPUT VALUE
000026DE  3212                    3421m         MOVE.W  (A2), D1
000026E0  BC3C 0001               3422m         CMP.B   #$01, D6
000026E4  6700 000C               3423m         BEQ     ADRSOURCE_224    
000026E8                          3424m ADRDEST_224:
000026E8  EF49                    3425m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000026EA  E049                    3426m         LSR     #$08, D1
000026EC  EA49                    3427m         LSR     #$05, D1
000026EE  6000 000A               3428m         BRA     COMPLETE_224 
000026F2                          3429m ADRSOURCE_224:                
000026F2  E149                    3430m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000026F4  E549                    3431m         LSL     #$02, D1
000026F6  E049                    3432m         LSR     #$08, D1
000026F8  EA49                    3433m         LSR     #$05, D1
000026FA                          3434m COMPLETE_224:  ; OPCODE HAS BEEN VERIFIED
000026FA                          3435m         ENDM        
000026FA                          3436m         decodeAdrMode   (A2), D1
000026FA  3612                    3437m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000026FC  3201                    3438m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000026FE                          3439m 
000026FE  B23C 0001               3440m         CMP.B   #$01, D1
00002702  6700 0066               3441m         BEQ     ADRREGDIRECT_225    
00002706  B23C 0002               3442m         CMP.B   #$02, D1
0000270A  6700 00A0               3443m         BEQ     ADRREGINDIRECT_225  
0000270E  B23C 0003               3444m         CMP.B   #$03, D1
00002712  6700 0102               3445m         BEQ     ADRREGPOSTINC_225  
00002716  B23C 0004               3446m         CMP.B   #$04, D1
0000271A  6700 0178               3447m         BEQ     ADRREGPREDEC_225
0000271E  B23C 0007               3448m         CMP.B   #$07, D1
00002722  6700 01EE               3449m         BEQ     ADRABSOLUTE_225    
00002726                          3450m         
00002726                          3451m DATAREGDIRECT_225: 
00002726  BC3C 0001               3452m         CMP.B   #$01, D6
0000272A  6700 001E               3453m         BEQ     DATAREGDIRECTSRC_225   
0000272E                          3454m DATAREGDIRECTDEST_225: 
0000272E                          3455mm         PRINTDNDEST D3 
0000272E  3203                    3456mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002730  E949                    3457mm         LSL     #$04, D1
00002732  E049                    3458mm         LSR     #$08, D1
00002734  EA49                    3459mm         LSR     #$05, D1
00002736  43F8 00C7               3460mm         LEA     ODN, A1     
0000273A  103C 000E               3461mm         MOVE.B  #14,D0          
0000273E  4E4F                    3462mm         TRAP    #15
00002740  103C 0003               3463mm         MOVE.B  #3,D0          
00002744  4E4F                    3464mm         TRAP    #15
00002746                          3465mm         ENDM
00002746  6000 0562               3466m         BRA     COMPLETE_225 
0000274A                          3467m DATAREGDIRECTSRC_225: 
0000274A                          3468mm         PRINTDNSRC D3 
0000274A  4281                    3469mm         CLR.L   D1
0000274C  3203                    3470mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000274E  E149                    3471mm         LSL     #$08, D1
00002750  EB49                    3472mm         LSL     #$05, D1
00002752  E049                    3473mm         LSR     #$08, D1
00002754  EA49                    3474mm         LSR     #$05, D1
00002756  43F8 00C7               3475mm         LEA     ODN, A1     
0000275A  103C 000E               3476mm         MOVE.B  #14,D0          
0000275E  4E4F                    3477mm         TRAP    #15
00002760  103C 0003               3478mm         MOVE.B  #3,D0          
00002764  4E4F                    3479mm         TRAP    #15
00002766                          3480mm         ENDM
00002766  6000 0542               3481m         BRA     COMPLETE_225   
0000276A                          3482m         
0000276A                          3483m ADRREGDIRECT_225: 
0000276A  BC3C 0001               3484m         CMP.B   #$01, D6
0000276E  6700 001E               3485m         BEQ     ADRREGDIRECTSRC_225   
00002772                          3486m ADRREGDIRECTDEST_225:
00002772                          3487mm         PRINTANDEST D3
00002772  3203                    3488mm         MOVE.W  D3, D1
00002774  E949                    3489mm         LSL     #$04, D1
00002776  E049                    3490mm         LSR     #$08, D1
00002778  EA49                    3491mm         LSR     #$05, D1
0000277A  43F8 00C9               3492mm         LEA     OAN, A1     
0000277E  103C 000E               3493mm         MOVE.B  #14,D0          
00002782  4E4F                    3494mm         TRAP    #15
00002784  103C 0003               3495mm         MOVE.B  #3,D0          
00002788  4E4F                    3496mm         TRAP    #15
0000278A                          3497mm         ENDM
0000278A  6000 051E               3498m         BRA     COMPLETE_225   
0000278E                          3499m ADRREGDIRECTSRC_225:
0000278E                          3500mm         PRINTANSRC D3
0000278E  3203                    3501mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002790  E149                    3502mm         LSL     #$08, D1
00002792  EB49                    3503mm         LSL     #$05, D1
00002794  E049                    3504mm         LSR     #$08, D1
00002796  EA49                    3505mm         LSR     #$05, D1
00002798  43F8 00C9               3506mm         LEA     OAN, A1     
0000279C  103C 000E               3507mm         MOVE.B  #14,D0          
000027A0  4E4F                    3508mm         TRAP    #15
000027A2  103C 0003               3509mm         MOVE.B  #3,D0          
000027A6  4E4F                    3510mm         TRAP    #15
000027A8                          3511mm         ENDM
000027A8  6000 0500               3512m         BRA     COMPLETE_225   
000027AC                          3513m        
000027AC                          3514m ADRREGINDIRECT_225:   
000027AC  BC3C 0001               3515m         CMP.B   #$01, D6
000027B0  6700 0032               3516m         BEQ     ADRREGINDIRECTSRC_225   
000027B4                          3517m ADRREGINDIRECTDEST_225:
000027B4                          3518mm         PRINTLB
000027B4  43F8 00CB               3519mm         LEA     OLB, A1     
000027B8  103C 000E               3520mm         MOVE.B  #14,D0          
000027BC  4E4F                    3521mm         TRAP    #15
000027BE                          3522mm         ENDM
000027BE                          3523mm         PRINTANDEST D3  
000027BE  3203                    3524mm         MOVE.W  D3, D1
000027C0  E949                    3525mm         LSL     #$04, D1
000027C2  E049                    3526mm         LSR     #$08, D1
000027C4  EA49                    3527mm         LSR     #$05, D1
000027C6  43F8 00C9               3528mm         LEA     OAN, A1     
000027CA  103C 000E               3529mm         MOVE.B  #14,D0          
000027CE  4E4F                    3530mm         TRAP    #15
000027D0  103C 0003               3531mm         MOVE.B  #3,D0          
000027D4  4E4F                    3532mm         TRAP    #15
000027D6                          3533mm         ENDM
000027D6                          3534mm         PRINTRB
000027D6  43F8 00CD               3535mm         LEA     ORB, A1     
000027DA  103C 000E               3536mm         MOVE.B  #14,D0          
000027DE  4E4F                    3537mm         TRAP    #15
000027E0                          3538mm         ENDM
000027E0  6000 04C8               3539m         BRA     COMPLETE_225     
000027E4                          3540m ADRREGINDIRECTSRC_225:   
000027E4                          3541mm         PRINTLB
000027E4  43F8 00CB               3542mm         LEA     OLB, A1     
000027E8  103C 000E               3543mm         MOVE.B  #14,D0          
000027EC  4E4F                    3544mm         TRAP    #15
000027EE                          3545mm         ENDM
000027EE                          3546mm         PRINTANSRC D3  
000027EE  3203                    3547mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000027F0  E149                    3548mm         LSL     #$08, D1
000027F2  EB49                    3549mm         LSL     #$05, D1
000027F4  E049                    3550mm         LSR     #$08, D1
000027F6  EA49                    3551mm         LSR     #$05, D1
000027F8  43F8 00C9               3552mm         LEA     OAN, A1     
000027FC  103C 000E               3553mm         MOVE.B  #14,D0          
00002800  4E4F                    3554mm         TRAP    #15
00002802  103C 0003               3555mm         MOVE.B  #3,D0          
00002806  4E4F                    3556mm         TRAP    #15
00002808                          3557mm         ENDM
00002808                          3558mm         PRINTRB
00002808  43F8 00CD               3559mm         LEA     ORB, A1     
0000280C  103C 000E               3560mm         MOVE.B  #14,D0          
00002810  4E4F                    3561mm         TRAP    #15
00002812                          3562mm         ENDM
00002812  6000 0496               3563m         BRA     COMPLETE_225   
00002816                          3564m         
00002816                          3565m ADRREGPOSTINC_225:   
00002816  BC3C 0001               3566m         CMP.B   #$01, D6
0000281A  6700 003C               3567m         BEQ     ADRREGPOSTINCSRC_225   
0000281E                          3568m ADRREGPOSTINCDEST_225: 
0000281E                          3569mm         PRINTLB
0000281E  43F8 00CB               3570mm         LEA     OLB, A1     
00002822  103C 000E               3571mm         MOVE.B  #14,D0          
00002826  4E4F                    3572mm         TRAP    #15
00002828                          3573mm         ENDM
00002828                          3574mm         PRINTANDEST D3  
00002828  3203                    3575mm         MOVE.W  D3, D1
0000282A  E949                    3576mm         LSL     #$04, D1
0000282C  E049                    3577mm         LSR     #$08, D1
0000282E  EA49                    3578mm         LSR     #$05, D1
00002830  43F8 00C9               3579mm         LEA     OAN, A1     
00002834  103C 000E               3580mm         MOVE.B  #14,D0          
00002838  4E4F                    3581mm         TRAP    #15
0000283A  103C 0003               3582mm         MOVE.B  #3,D0          
0000283E  4E4F                    3583mm         TRAP    #15
00002840                          3584mm         ENDM
00002840                          3585mm         PRINTRB
00002840  43F8 00CD               3586mm         LEA     ORB, A1     
00002844  103C 000E               3587mm         MOVE.B  #14,D0          
00002848  4E4F                    3588mm         TRAP    #15
0000284A                          3589mm         ENDM
0000284A                          3590mm         PRINTPI
0000284A  43F8 00D4               3591mm         LEA     OPSTINC, A1     
0000284E  103C 000E               3592mm         MOVE.B  #14,D0          
00002852  4E4F                    3593mm         TRAP    #15
00002854                          3594mm         ENDM
00002854  6000 0454               3595m         BRA     COMPLETE_225  
00002858                          3596m ADRREGPOSTINCSRC_225:           
00002858                          3597mm         PRINTLB
00002858  43F8 00CB               3598mm         LEA     OLB, A1     
0000285C  103C 000E               3599mm         MOVE.B  #14,D0          
00002860  4E4F                    3600mm         TRAP    #15
00002862                          3601mm         ENDM
00002862                          3602mm         PRINTANSRC D3  
00002862  3203                    3603mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002864  E149                    3604mm         LSL     #$08, D1
00002866  EB49                    3605mm         LSL     #$05, D1
00002868  E049                    3606mm         LSR     #$08, D1
0000286A  EA49                    3607mm         LSR     #$05, D1
0000286C  43F8 00C9               3608mm         LEA     OAN, A1     
00002870  103C 000E               3609mm         MOVE.B  #14,D0          
00002874  4E4F                    3610mm         TRAP    #15
00002876  103C 0003               3611mm         MOVE.B  #3,D0          
0000287A  4E4F                    3612mm         TRAP    #15
0000287C                          3613mm         ENDM
0000287C                          3614mm         PRINTRB
0000287C  43F8 00CD               3615mm         LEA     ORB, A1     
00002880  103C 000E               3616mm         MOVE.B  #14,D0          
00002884  4E4F                    3617mm         TRAP    #15
00002886                          3618mm         ENDM
00002886                          3619mm         PRINTPI
00002886  43F8 00D4               3620mm         LEA     OPSTINC, A1     
0000288A  103C 000E               3621mm         MOVE.B  #14,D0          
0000288E  4E4F                    3622mm         TRAP    #15
00002890                          3623mm         ENDM
00002890  6000 0418               3624m         BRA     COMPLETE_225  
00002894                          3625m ADRREGPREDEC_225: 
00002894  BC3C 0001               3626m         CMP.B   #$01, D6
00002898  6700 003C               3627m         BEQ     ADRREGPREDECSRC_225   
0000289C                          3628m ADRREGPREDECDEST_225:
0000289C                          3629mm         PRINTPD  
0000289C  43F8 00D2               3630mm         LEA     OPREDEC, A1     
000028A0  103C 000E               3631mm         MOVE.B  #14,D0          
000028A4  4E4F                    3632mm         TRAP    #15
000028A6                          3633mm         ENDM
000028A6                          3634mm         PRINTLB
000028A6  43F8 00CB               3635mm         LEA     OLB, A1     
000028AA  103C 000E               3636mm         MOVE.B  #14,D0          
000028AE  4E4F                    3637mm         TRAP    #15
000028B0                          3638mm         ENDM
000028B0                          3639mm         PRINTANDEST D3  
000028B0  3203                    3640mm         MOVE.W  D3, D1
000028B2  E949                    3641mm         LSL     #$04, D1
000028B4  E049                    3642mm         LSR     #$08, D1
000028B6  EA49                    3643mm         LSR     #$05, D1
000028B8  43F8 00C9               3644mm         LEA     OAN, A1     
000028BC  103C 000E               3645mm         MOVE.B  #14,D0          
000028C0  4E4F                    3646mm         TRAP    #15
000028C2  103C 0003               3647mm         MOVE.B  #3,D0          
000028C6  4E4F                    3648mm         TRAP    #15
000028C8                          3649mm         ENDM
000028C8                          3650mm         PRINTRB
000028C8  43F8 00CD               3651mm         LEA     ORB, A1     
000028CC  103C 000E               3652mm         MOVE.B  #14,D0          
000028D0  4E4F                    3653mm         TRAP    #15
000028D2                          3654mm         ENDM
000028D2  6000 03D6               3655m         BRA     COMPLETE_225   
000028D6                          3656m ADRREGPREDECSRC_225: 
000028D6                          3657mm         PRINTPD  
000028D6  43F8 00D2               3658mm         LEA     OPREDEC, A1     
000028DA  103C 000E               3659mm         MOVE.B  #14,D0          
000028DE  4E4F                    3660mm         TRAP    #15
000028E0                          3661mm         ENDM
000028E0                          3662mm         PRINTLB
000028E0  43F8 00CB               3663mm         LEA     OLB, A1     
000028E4  103C 000E               3664mm         MOVE.B  #14,D0          
000028E8  4E4F                    3665mm         TRAP    #15
000028EA                          3666mm         ENDM
000028EA                          3667mm         PRINTANSRC D3  
000028EA  3203                    3668mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000028EC  E149                    3669mm         LSL     #$08, D1
000028EE  EB49                    3670mm         LSL     #$05, D1
000028F0  E049                    3671mm         LSR     #$08, D1
000028F2  EA49                    3672mm         LSR     #$05, D1
000028F4  43F8 00C9               3673mm         LEA     OAN, A1     
000028F8  103C 000E               3674mm         MOVE.B  #14,D0          
000028FC  4E4F                    3675mm         TRAP    #15
000028FE  103C 0003               3676mm         MOVE.B  #3,D0          
00002902  4E4F                    3677mm         TRAP    #15
00002904                          3678mm         ENDM
00002904                          3679mm         PRINTRB
00002904  43F8 00CD               3680mm         LEA     ORB, A1     
00002908  103C 000E               3681mm         MOVE.B  #14,D0          
0000290C  4E4F                    3682mm         TRAP    #15
0000290E                          3683mm         ENDM
0000290E  6000 039A               3684m         BRA     COMPLETE_225
00002912                          3685m        
00002912                          3686m ADRABSOLUTE_225:
00002912  BC3C 0001               3687m         CMP.B   #$01, D6
00002916  6600 0018               3688m         BNE     ADRABSOLUTEDST_225 
0000291A                          3689m         
0000291A  3A03                    3690m         MOVE.W  D3, D5
0000291C  0803 0002               3691m         BTST    #2, D3
00002920  6600 0024               3692m         BNE     ADRIMMEDIATE_225
00002924  0803 0000               3693m         BTST    #0, D3
00002928  6600 0270               3694m         BNE     ADRABSOLUTEL_225
0000292C  6000 01DA               3695m         BRA     ADRABSOLUTEW_225
00002930                          3696m ADRABSOLUTEDST_225:
00002930  3A03                    3697m         MOVE.W  D3, D5
00002932  0803 000B               3698m         BTST    #$B, D3
00002936  6600 000E               3699m         BNE     ADRIMMEDIATE_225
0000293A  0803 0009               3700m         BTST    #$09, D3
0000293E  6600 025A               3701m         BNE     ADRABSOLUTEL_225
00002942  6000 01C4               3702m         BRA     ADRABSOLUTEW_225
00002946                          3703m ADRIMMEDIATE_225:
00002946  BE3C 0001               3704m         CMP.B   #1, D7
0000294A  6700 009E               3705m         BEQ     ADRIMMEDIATEL_225
0000294E                          3706m ADRIMMEDIATEW_225:
0000294E  361A                    3707m         MOVE.W  (A2)+, D3
00002950                          3708mm         PRINTHASH
00002950  103C 0006               3709mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002954  323C 0023               3710mm         MOVE.W  #35, D1     ; AN = SIGN
00002958  4E4F                    3711mm         TRAP    #15         ; OUTPUT = SIGN
0000295A                          3712mm         ENDM
0000295A                          3713mm         PRINTSIGN
0000295A  103C 0006               3714mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000295E  323C 0024               3715mm         MOVE.W  #36, D1     ; AN = SIGN
00002962  4E4F                    3716mm         TRAP    #15         ; OUTPUT = SIGN
00002964                          3717mm         ENDM
00002964                          3718mm         ADROUT
00002964  3212                    3719mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002966  E049                    3720mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002968  E849                    3721mm         LSR.W   #4, D1      
0000296A                          3722mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000296A  0C01 0009               3723mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000296E  6E00 000A               3724mmm         BGT     ALPHA_255
00002972  0601 0030               3725mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002976  6000 0006               3726mmm         BRA     DONE_255
0000297A  0601 0037               3727mmm ALPHA_255: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000297E  4E71                    3728mmm DONE_255: NOP
00002980                          3729mmm         ENDM
00002980  4E4F                    3730mm         TRAP    #15         ; EXECUTE OUTPUT
00002982                          3731mm         
00002982  3212                    3732mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002984  E949                    3733mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002986  E049                    3734mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002988  E849                    3735mm         LSR.W   #4, D1      
0000298A                          3736mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000298A  0C01 0009               3737mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000298E  6E00 000A               3738mmm         BGT     ALPHA_256
00002992  0601 0030               3739mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002996  6000 0006               3740mmm         BRA     DONE_256
0000299A  0601 0037               3741mmm ALPHA_256: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000299E  4E71                    3742mmm DONE_256: NOP
000029A0                          3743mmm         ENDM
000029A0  4E4F                    3744mm         TRAP    #15         ; EXECUTE OUTPUT
000029A2                          3745mm         
000029A2  3212                    3746mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029A4  E149                    3747mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029A6  E049                    3748mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029A8  E849                    3749mm         LSR.W   #4, D1      
000029AA                          3750mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029AA  0C01 0009               3751mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029AE  6E00 000A               3752mmm         BGT     ALPHA_257
000029B2  0601 0030               3753mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029B6  6000 0006               3754mmm         BRA     DONE_257
000029BA  0601 0037               3755mmm ALPHA_257: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029BE  4E71                    3756mmm DONE_257: NOP
000029C0                          3757mmm         ENDM
000029C0  4E4F                    3758mm         TRAP    #15         ; EXECUTE OUTPUT
000029C2                          3759mm         
000029C2  3212                    3760mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000029C4  E149                    3761mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000029C6  E949                    3762mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000029C8  E049                    3763mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000029CA  E849                    3764mm         LSR.W   #4, D1      
000029CC                          3765mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000029CC  0C01 0009               3766mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000029D0  6E00 000A               3767mmm         BGT     ALPHA_258
000029D4  0601 0030               3768mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000029D8  6000 0006               3769mmm         BRA     DONE_258
000029DC  0601 0037               3770mmm ALPHA_258: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000029E0  4E71                    3771mmm DONE_258: NOP
000029E2                          3772mmm         ENDM
000029E2  4E4F                    3773mm         TRAP    #15         ; EXECUTE OUTPUT       
000029E4                          3774mm         ENDM 
000029E4  3605                    3775m         MOVE.W  D5, D3
000029E6  6000 02C2               3776m         BRA     COMPLETE_225
000029EA                          3777m ADRIMMEDIATEL_225:
000029EA  361A                    3778m         MOVE.W  (A2)+, D3
000029EC                          3779mm         PRINTHASH
000029EC  103C 0006               3780mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029F0  323C 0023               3781mm         MOVE.W  #35, D1     ; AN = SIGN
000029F4  4E4F                    3782mm         TRAP    #15         ; OUTPUT = SIGN
000029F6                          3783mm         ENDM
000029F6                          3784mm         PRINTSIGN
000029F6  103C 0006               3785mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000029FA  323C 0024               3786mm         MOVE.W  #36, D1     ; AN = SIGN
000029FE  4E4F                    3787mm         TRAP    #15         ; OUTPUT = SIGN
00002A00                          3788mm         ENDM
00002A00                          3789mm         ADROUT 
00002A00  3212                    3790mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A02  E049                    3791mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A04  E849                    3792mm         LSR.W   #4, D1      
00002A06                          3793mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A06  0C01 0009               3794mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A0A  6E00 000A               3795mmm         BGT     ALPHA_262
00002A0E  0601 0030               3796mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A12  6000 0006               3797mmm         BRA     DONE_262
00002A16  0601 0037               3798mmm ALPHA_262: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A1A  4E71                    3799mmm DONE_262: NOP
00002A1C                          3800mmm         ENDM
00002A1C  4E4F                    3801mm         TRAP    #15         ; EXECUTE OUTPUT
00002A1E                          3802mm         
00002A1E  3212                    3803mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A20  E949                    3804mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002A22  E049                    3805mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A24  E849                    3806mm         LSR.W   #4, D1      
00002A26                          3807mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A26  0C01 0009               3808mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A2A  6E00 000A               3809mmm         BGT     ALPHA_263
00002A2E  0601 0030               3810mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A32  6000 0006               3811mmm         BRA     DONE_263
00002A36  0601 0037               3812mmm ALPHA_263: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A3A  4E71                    3813mmm DONE_263: NOP
00002A3C                          3814mmm         ENDM
00002A3C  4E4F                    3815mm         TRAP    #15         ; EXECUTE OUTPUT
00002A3E                          3816mm         
00002A3E  3212                    3817mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A40  E149                    3818mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A42  E049                    3819mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A44  E849                    3820mm         LSR.W   #4, D1      
00002A46                          3821mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A46  0C01 0009               3822mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A4A  6E00 000A               3823mmm         BGT     ALPHA_264
00002A4E  0601 0030               3824mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A52  6000 0006               3825mmm         BRA     DONE_264
00002A56  0601 0037               3826mmm ALPHA_264: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A5A  4E71                    3827mmm DONE_264: NOP
00002A5C                          3828mmm         ENDM
00002A5C  4E4F                    3829mm         TRAP    #15         ; EXECUTE OUTPUT
00002A5E                          3830mm         
00002A5E  3212                    3831mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A60  E149                    3832mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002A62  E949                    3833mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002A64  E049                    3834mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A66  E849                    3835mm         LSR.W   #4, D1      
00002A68                          3836mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A68  0C01 0009               3837mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A6C  6E00 000A               3838mmm         BGT     ALPHA_265
00002A70  0601 0030               3839mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A74  6000 0006               3840mmm         BRA     DONE_265
00002A78  0601 0037               3841mmm ALPHA_265: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A7C  4E71                    3842mmm DONE_265: NOP
00002A7E                          3843mmm         ENDM
00002A7E  4E4F                    3844mm         TRAP    #15         ; EXECUTE OUTPUT       
00002A80                          3845mm         ENDM 
00002A80  361A                    3846m         MOVE.W  (A2)+, D3
00002A82                          3847mm         ADROUT
00002A82  3212                    3848mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002A84  E049                    3849mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002A86  E849                    3850mm         LSR.W   #4, D1      
00002A88                          3851mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002A88  0C01 0009               3852mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002A8C  6E00 000A               3853mmm         BGT     ALPHA_267
00002A90  0601 0030               3854mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002A94  6000 0006               3855mmm         BRA     DONE_267
00002A98  0601 0037               3856mmm ALPHA_267: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002A9C  4E71                    3857mmm DONE_267: NOP
00002A9E                          3858mmm         ENDM
00002A9E  4E4F                    3859mm         TRAP    #15         ; EXECUTE OUTPUT
00002AA0                          3860mm         
00002AA0  3212                    3861mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AA2  E949                    3862mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002AA4  E049                    3863mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AA6  E849                    3864mm         LSR.W   #4, D1      
00002AA8                          3865mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AA8  0C01 0009               3866mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AAC  6E00 000A               3867mmm         BGT     ALPHA_268
00002AB0  0601 0030               3868mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AB4  6000 0006               3869mmm         BRA     DONE_268
00002AB8  0601 0037               3870mmm ALPHA_268: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002ABC  4E71                    3871mmm DONE_268: NOP
00002ABE                          3872mmm         ENDM
00002ABE  4E4F                    3873mm         TRAP    #15         ; EXECUTE OUTPUT
00002AC0                          3874mm         
00002AC0  3212                    3875mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AC2  E149                    3876mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AC4  E049                    3877mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AC6  E849                    3878mm         LSR.W   #4, D1      
00002AC8                          3879mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AC8  0C01 0009               3880mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002ACC  6E00 000A               3881mmm         BGT     ALPHA_269
00002AD0  0601 0030               3882mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AD4  6000 0006               3883mmm         BRA     DONE_269
00002AD8  0601 0037               3884mmm ALPHA_269: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002ADC  4E71                    3885mmm DONE_269: NOP
00002ADE                          3886mmm         ENDM
00002ADE  4E4F                    3887mm         TRAP    #15         ; EXECUTE OUTPUT
00002AE0                          3888mm         
00002AE0  3212                    3889mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002AE2  E149                    3890mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002AE4  E949                    3891mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002AE6  E049                    3892mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002AE8  E849                    3893mm         LSR.W   #4, D1      
00002AEA                          3894mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002AEA  0C01 0009               3895mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002AEE  6E00 000A               3896mmm         BGT     ALPHA_270
00002AF2  0601 0030               3897mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002AF6  6000 0006               3898mmm         BRA     DONE_270
00002AFA  0601 0037               3899mmm ALPHA_270: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002AFE  4E71                    3900mmm DONE_270: NOP
00002B00                          3901mmm         ENDM
00002B00  4E4F                    3902mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B02                          3903mm         ENDM 
00002B02  3605                    3904m         MOVE.W  D5, D3
00002B04  6000 01A4               3905m         BRA     COMPLETE_225 
00002B08                          3906m ADRABSOLUTEW_225:     
00002B08  361A                    3907m         MOVE.W  (A2)+, D3
00002B0A                          3908mm         PRINTSIGN
00002B0A  103C 0006               3909mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002B0E  323C 0024               3910mm         MOVE.W  #36, D1     ; AN = SIGN
00002B12  4E4F                    3911mm         TRAP    #15         ; OUTPUT = SIGN
00002B14                          3912mm         ENDM
00002B14                          3913mm         ADROUT
00002B14  3212                    3914mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B16  E049                    3915mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B18  E849                    3916mm         LSR.W   #4, D1      
00002B1A                          3917mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B1A  0C01 0009               3918mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B1E  6E00 000A               3919mmm         BGT     ALPHA_273
00002B22  0601 0030               3920mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B26  6000 0006               3921mmm         BRA     DONE_273
00002B2A  0601 0037               3922mmm ALPHA_273: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B2E  4E71                    3923mmm DONE_273: NOP
00002B30                          3924mmm         ENDM
00002B30  4E4F                    3925mm         TRAP    #15         ; EXECUTE OUTPUT
00002B32                          3926mm         
00002B32  3212                    3927mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B34  E949                    3928mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002B36  E049                    3929mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B38  E849                    3930mm         LSR.W   #4, D1      
00002B3A                          3931mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B3A  0C01 0009               3932mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B3E  6E00 000A               3933mmm         BGT     ALPHA_274
00002B42  0601 0030               3934mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B46  6000 0006               3935mmm         BRA     DONE_274
00002B4A  0601 0037               3936mmm ALPHA_274: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B4E  4E71                    3937mmm DONE_274: NOP
00002B50                          3938mmm         ENDM
00002B50  4E4F                    3939mm         TRAP    #15         ; EXECUTE OUTPUT
00002B52                          3940mm         
00002B52  3212                    3941mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B54  E149                    3942mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B56  E049                    3943mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B58  E849                    3944mm         LSR.W   #4, D1      
00002B5A                          3945mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B5A  0C01 0009               3946mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B5E  6E00 000A               3947mmm         BGT     ALPHA_275
00002B62  0601 0030               3948mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B66  6000 0006               3949mmm         BRA     DONE_275
00002B6A  0601 0037               3950mmm ALPHA_275: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B6E  4E71                    3951mmm DONE_275: NOP
00002B70                          3952mmm         ENDM
00002B70  4E4F                    3953mm         TRAP    #15         ; EXECUTE OUTPUT
00002B72                          3954mm         
00002B72  3212                    3955mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002B74  E149                    3956mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002B76  E949                    3957mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002B78  E049                    3958mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002B7A  E849                    3959mm         LSR.W   #4, D1      
00002B7C                          3960mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002B7C  0C01 0009               3961mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002B80  6E00 000A               3962mmm         BGT     ALPHA_276
00002B84  0601 0030               3963mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002B88  6000 0006               3964mmm         BRA     DONE_276
00002B8C  0601 0037               3965mmm ALPHA_276: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002B90  4E71                    3966mmm DONE_276: NOP
00002B92                          3967mmm         ENDM
00002B92  4E4F                    3968mm         TRAP    #15         ; EXECUTE OUTPUT       
00002B94                          3969mm         ENDM 
00002B94  3605                    3970m         MOVE.W  D5, D3
00002B96  6000 0112               3971m         BRA     COMPLETE_225  
00002B9A                          3972m ADRABSOLUTEL_225:  
00002B9A  361A                    3973m         MOVE.W  (A2)+, D3
00002B9C                          3974mm         PRINTSIGN
00002B9C  103C 0006               3975mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00002BA0  323C 0024               3976mm         MOVE.W  #36, D1     ; AN = SIGN
00002BA4  4E4F                    3977mm         TRAP    #15         ; OUTPUT = SIGN
00002BA6                          3978mm         ENDM
00002BA6                          3979mm         ADROUT 
00002BA6  3212                    3980mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BA8  E049                    3981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BAA  E849                    3982mm         LSR.W   #4, D1      
00002BAC                          3983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BAC  0C01 0009               3984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BB0  6E00 000A               3985mmm         BGT     ALPHA_279
00002BB4  0601 0030               3986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BB8  6000 0006               3987mmm         BRA     DONE_279
00002BBC  0601 0037               3988mmm ALPHA_279: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BC0  4E71                    3989mmm DONE_279: NOP
00002BC2                          3990mmm         ENDM
00002BC2  4E4F                    3991mm         TRAP    #15         ; EXECUTE OUTPUT
00002BC4                          3992mm         
00002BC4  3212                    3993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BC6  E949                    3994mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002BC8  E049                    3995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BCA  E849                    3996mm         LSR.W   #4, D1      
00002BCC                          3997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BCC  0C01 0009               3998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BD0  6E00 000A               3999mmm         BGT     ALPHA_280
00002BD4  0601 0030               4000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BD8  6000 0006               4001mmm         BRA     DONE_280
00002BDC  0601 0037               4002mmm ALPHA_280: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002BE0  4E71                    4003mmm DONE_280: NOP
00002BE2                          4004mmm         ENDM
00002BE2  4E4F                    4005mm         TRAP    #15         ; EXECUTE OUTPUT
00002BE4                          4006mm         
00002BE4  3212                    4007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002BE6  E149                    4008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002BE8  E049                    4009mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002BEA  E849                    4010mm         LSR.W   #4, D1      
00002BEC                          4011mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002BEC  0C01 0009               4012mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002BF0  6E00 000A               4013mmm         BGT     ALPHA_281
00002BF4  0601 0030               4014mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002BF8  6000 0006               4015mmm         BRA     DONE_281
00002BFC  0601 0037               4016mmm ALPHA_281: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C00  4E71                    4017mmm DONE_281: NOP
00002C02                          4018mmm         ENDM
00002C02  4E4F                    4019mm         TRAP    #15         ; EXECUTE OUTPUT
00002C04                          4020mm         
00002C04  3212                    4021mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C06  E149                    4022mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C08  E949                    4023mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002C0A  E049                    4024mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C0C  E849                    4025mm         LSR.W   #4, D1      
00002C0E                          4026mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C0E  0C01 0009               4027mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C12  6E00 000A               4028mmm         BGT     ALPHA_282
00002C16  0601 0030               4029mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C1A  6000 0006               4030mmm         BRA     DONE_282
00002C1E  0601 0037               4031mmm ALPHA_282: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C22  4E71                    4032mmm DONE_282: NOP
00002C24                          4033mmm         ENDM
00002C24  4E4F                    4034mm         TRAP    #15         ; EXECUTE OUTPUT       
00002C26                          4035mm         ENDM 
00002C26  361A                    4036m         MOVE.W  (A2)+, D3
00002C28                          4037mm         ADROUT
00002C28  3212                    4038mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C2A  E049                    4039mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C2C  E849                    4040mm         LSR.W   #4, D1      
00002C2E                          4041mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C2E  0C01 0009               4042mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C32  6E00 000A               4043mmm         BGT     ALPHA_284
00002C36  0601 0030               4044mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C3A  6000 0006               4045mmm         BRA     DONE_284
00002C3E  0601 0037               4046mmm ALPHA_284: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C42  4E71                    4047mmm DONE_284: NOP
00002C44                          4048mmm         ENDM
00002C44  4E4F                    4049mm         TRAP    #15         ; EXECUTE OUTPUT
00002C46                          4050mm         
00002C46  3212                    4051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C48  E949                    4052mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00002C4A  E049                    4053mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C4C  E849                    4054mm         LSR.W   #4, D1      
00002C4E                          4055mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C4E  0C01 0009               4056mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C52  6E00 000A               4057mmm         BGT     ALPHA_285
00002C56  0601 0030               4058mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C5A  6000 0006               4059mmm         BRA     DONE_285
00002C5E  0601 0037               4060mmm ALPHA_285: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C62  4E71                    4061mmm DONE_285: NOP
00002C64                          4062mmm         ENDM
00002C64  4E4F                    4063mm         TRAP    #15         ; EXECUTE OUTPUT
00002C66                          4064mm         
00002C66  3212                    4065mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C68  E149                    4066mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C6A  E049                    4067mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C6C  E849                    4068mm         LSR.W   #4, D1      
00002C6E                          4069mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C6E  0C01 0009               4070mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C72  6E00 000A               4071mmm         BGT     ALPHA_286
00002C76  0601 0030               4072mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C7A  6000 0006               4073mmm         BRA     DONE_286
00002C7E  0601 0037               4074mmm ALPHA_286: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002C82  4E71                    4075mmm DONE_286: NOP
00002C84                          4076mmm         ENDM
00002C84  4E4F                    4077mm         TRAP    #15         ; EXECUTE OUTPUT
00002C86                          4078mm         
00002C86  3212                    4079mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00002C88  E149                    4080mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00002C8A  E949                    4081mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00002C8C  E049                    4082mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00002C8E  E849                    4083mm         LSR.W   #4, D1      
00002C90                          4084mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00002C90  0C01 0009               4085mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00002C94  6E00 000A               4086mmm         BGT     ALPHA_287
00002C98  0601 0030               4087mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00002C9C  6000 0006               4088mmm         BRA     DONE_287
00002CA0  0601 0037               4089mmm ALPHA_287: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00002CA4  4E71                    4090mmm DONE_287: NOP
00002CA6                          4091mmm         ENDM
00002CA6  4E4F                    4092mm         TRAP    #15         ; EXECUTE OUTPUT       
00002CA8                          4093mm         ENDM 
00002CA8  3605                    4094m         MOVE.W  D5, D3
00002CAA                          4095m 
00002CAA                          4096m COMPLETE_225:  ; OPCODE HAS BEEN VERIFIED
00002CAA                          4097m         ENDM
00002CAA                          4098m         printComma
00002CAA  43F8 00CF               4099m         LEA     OCOMMA, A1     
00002CAE  103C 000E               4100m         MOVE.B  #14,D0          
00002CB2  4E4F                    4101m         TRAP    #15
00002CB4                          4102m         ENDM
00002CB4                          4103m         printDnDest     D3
00002CB4  3203                    4104m         MOVE.W  D3, D1      ; BITS 9 TO 11
00002CB6  E949                    4105m         LSL     #$04, D1
00002CB8  E049                    4106m         LSR     #$08, D1
00002CBA  EA49                    4107m         LSR     #$05, D1
00002CBC  43F8 00C7               4108m         LEA     ODN, A1     
00002CC0  103C 000E               4109m         MOVE.B  #14,D0          
00002CC4  4E4F                    4110m         TRAP    #15
00002CC6  103C 0003               4111m         MOVE.B  #3,D0          
00002CCA  4E4F                    4112m         TRAP    #15
00002CCC                          4113m         ENDM
00002CCC                          4114  decodeADDcomp:
00002CCC  4E75                    4115          RTS                ; Return from decodeADD subroutine
00002CCE                          4116  
00002CCE                          4117  
00002CCE                          4118  ; ------------------------------------------------------------
00002CCE                          4119  ; 5. "decodeSUB" subroutine
00002CCE                          4120  ; AUTHOR
00002CCE                          4121  ;
00002CCE                          4122  ; TODO: DESCRIPTION
00002CCE                          4123  ; ------------------------------------------------------------
00002CCE                          4124  decodeSUB:
00002CCE                          4125m         verifyOpcode    pSUB, (A2)
00002CCE  43F8 013A               4126m         LEA     PSUB, A1      ; INPUT PATTERN STRING
00002CD2  3612                    4127m         MOVE.W  (A2), D3      ; INPUT VALUE
00002CD4  123C 000F               4128m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00002CD8                          4129m         
00002CD8                          4130m LOOP_290: 
00002CD8  0C11 0030               4131m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00002CDC  6700 000E               4132m         BEQ     CHECKFOR0_290
00002CE0  0C11 0031               4133m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00002CE4  6700 0010               4134m         BEQ     CHECKFOR1_290
00002CE8  6000 0012               4135m         BRA     NEXT_290      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00002CEC                          4136m         
00002CEC                          4137m CHECKFOR0_290: 
00002CEC  0303                    4138m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00002CEE  6600 3F50               4139m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00002CF2  6000 0008               4140m         BRA     NEXT_290
00002CF6                          4141m 
00002CF6                          4142m CHECKFOR1_290:
00002CF6  0303                    4143m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00002CF8  6700 3F46               4144m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00002CFC                          4145m 
00002CFC                          4146m NEXT_290: 
00002CFC  B23C 0000               4147m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00002D00  6700 0008               4148m         BEQ     COMPLETE_290  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00002D04  5301                    4149m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002D06  1819                    4150m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00002D08  60CE                    4151m         BRA     LOOP_290      ; BEGIN LOOP AGAIN
00002D0A                          4152m 
00002D0A                          4153m COMPLETE_290:  ; OPCODE HAS BEEN VERIFIED
00002D0A                          4154m         ENDM
00002D0A  43F8 0073               4155          LEA     oSUB, A1     
00002D0E  103C 000E               4156          MOVE.B  #14,D0          
00002D12  4E4F                    4157          TRAP    #15
00002D14                          4158m         printOpMode     (A2)
00002D14  3612                    4159m         MOVE.W  (A2), D3      
00002D16  123C 0008               4160m         MOVE.B  #8, D1    
00002D1A  4246                    4161m         CLR     D6
00002D1C  4247                    4162m         CLR     D7
00002D1E                          4163m CHECKFORDESTDN_291: 
00002D1E  0303                    4164m         BTST    D1, D3      
00002D20  6600 004C               4165m         BNE     CHECKFORSRCDN_291
00002D24  4EB9 00002DFC           4166m         JSR     NEXT_291
00002D2A  1C3C 0001               4167m         MOVE.B  #$1, D6
00002D2E  0303                    4168m         BTST    D1, D3      
00002D30  6700 0014               4169m         BEQ     DESTDNW_291
00002D34                          4170m DESTDNL_291:        
00002D34  43F8 00C3               4171m         LEA     OLSIZE, A1     
00002D38  103C 000E               4172m         MOVE.B  #14,D0          
00002D3C  4E4F                    4173m         TRAP    #15
00002D3E  1E3C 0001               4174m         MOVE.B  #$1, D7
00002D42  6000 00BC               4175m         BRA     COMPLETE_291 
00002D46                          4176m DESTDNW_291: 
00002D46  4EB9 00002DFC           4177m         JSR     NEXT_291
00002D4C  0303                    4178m         BTST    D1, D3      
00002D4E  6700 0010               4179m         BEQ     DESTDNB_291
00002D52  43F8 00BF               4180m         LEA     OWSIZE, A1     
00002D56  103C 000E               4181m         MOVE.B  #14,D0          
00002D5A  4E4F                    4182m         TRAP    #15
00002D5C  6000 00A2               4183m         BRA     COMPLETE_291 
00002D60                          4184m DESTDNB_291: 
00002D60  43F8 00BB               4185m         LEA     OBSIZE, A1     
00002D64  103C 000E               4186m         MOVE.B  #14,D0          
00002D68  4E4F                    4187m         TRAP    #15
00002D6A  6000 0094               4188m         BRA     COMPLETE_291 
00002D6E                          4189m CHECKFORSRCDN_291: 
00002D6E  4EB9 00002DFC           4190m         JSR     NEXT_291
00002D74  0303                    4191m         BTST    D1, D3      
00002D76  6700 002C               4192m         BEQ     SRCDNW_291
00002D7A                          4193m SRCDNL_291:        
00002D7A  43F8 00C3               4194m         LEA     OLSIZE, A1     
00002D7E  103C 000E               4195m         MOVE.B  #14,D0          
00002D82  4E4F                    4196m         TRAP    #15
00002D84  1E3C 0001               4197m         MOVE.B  #$1, D7
00002D88                          4198mm         PRINTDNDEST D3
00002D88  3203                    4199mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002D8A  E949                    4200mm         LSL     #$04, D1
00002D8C  E049                    4201mm         LSR     #$08, D1
00002D8E  EA49                    4202mm         LSR     #$05, D1
00002D90  43F8 00C7               4203mm         LEA     ODN, A1     
00002D94  103C 000E               4204mm         MOVE.B  #14,D0          
00002D98  4E4F                    4205mm         TRAP    #15
00002D9A  103C 0003               4206mm         MOVE.B  #3,D0          
00002D9E  4E4F                    4207mm         TRAP    #15
00002DA0                          4208mm         ENDM
00002DA0  6000 005E               4209m         BRA     COMPLETE_291 
00002DA4                          4210m SRCDNW_291:
00002DA4  4EB9 00002DFC           4211m         JSR     NEXT_291
00002DAA  0303                    4212m         BTST    D1, D3     
00002DAC  6700 0028               4213m         BEQ     SRCDNB_291
00002DB0  43F8 00BF               4214m         LEA     OWSIZE, A1     
00002DB4  103C 000E               4215m         MOVE.B  #14,D0          
00002DB8  4E4F                    4216m         TRAP    #15
00002DBA                          4217mm         PRINTDNDEST D3
00002DBA  3203                    4218mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DBC  E949                    4219mm         LSL     #$04, D1
00002DBE  E049                    4220mm         LSR     #$08, D1
00002DC0  EA49                    4221mm         LSR     #$05, D1
00002DC2  43F8 00C7               4222mm         LEA     ODN, A1     
00002DC6  103C 000E               4223mm         MOVE.B  #14,D0          
00002DCA  4E4F                    4224mm         TRAP    #15
00002DCC  103C 0003               4225mm         MOVE.B  #3,D0          
00002DD0  4E4F                    4226mm         TRAP    #15
00002DD2                          4227mm         ENDM
00002DD2  6000 002C               4228m         BRA     COMPLETE_291 
00002DD6                          4229m SRCDNB_291: 
00002DD6  43F8 00BB               4230m         LEA     OBSIZE, A1     
00002DDA  103C 000E               4231m         MOVE.B  #14,D0          
00002DDE  4E4F                    4232m         TRAP    #15
00002DE0                          4233mm         PRINTDNDEST D3
00002DE0  3203                    4234mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002DE2  E949                    4235mm         LSL     #$04, D1
00002DE4  E049                    4236mm         LSR     #$08, D1
00002DE6  EA49                    4237mm         LSR     #$05, D1
00002DE8  43F8 00C7               4238mm         LEA     ODN, A1     
00002DEC  103C 000E               4239mm         MOVE.B  #14,D0          
00002DF0  4E4F                    4240mm         TRAP    #15
00002DF2  103C 0003               4241mm         MOVE.B  #3,D0          
00002DF6  4E4F                    4242mm         TRAP    #15
00002DF8                          4243mm         ENDM
00002DF8  6000 0006               4244m         BRA     COMPLETE_291 
00002DFC                          4245m 
00002DFC                          4246m NEXT_291:
00002DFC  5301                    4247m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00002DFE  4E75                    4248m         RTS                
00002E00                          4249m 
00002E00                          4250m COMPLETE_291:  ; OPCODE HAS BEEN VERIFIED
00002E00                          4251m         ENDM
00002E00  BC3C 0001               4252          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00002E04  6700 05E0               4253          BEQ     decodeSubDestOp
00002E08                          4254m         printComma
00002E08  43F8 00CF               4255m         LEA     OCOMMA, A1     
00002E0C  103C 000E               4256m         MOVE.B  #14,D0          
00002E10  4E4F                    4257m         TRAP    #15
00002E12                          4258m         ENDM
00002E12                          4259m         prepareAdrMode  #$1, (A2)
00002E12  3C3C 0001               4260m         MOVE.W  #$1, D6      ; INPUT VALUE
00002E16  3212                    4261m         MOVE.W  (A2), D1
00002E18  BC3C 0001               4262m         CMP.B   #$01, D6
00002E1C  6700 000C               4263m         BEQ     ADRSOURCE_296    
00002E20                          4264m ADRDEST_296:
00002E20  EF49                    4265m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00002E22  E049                    4266m         LSR     #$08, D1
00002E24  EA49                    4267m         LSR     #$05, D1
00002E26  6000 000A               4268m         BRA     COMPLETE_296 
00002E2A                          4269m ADRSOURCE_296:                
00002E2A  E149                    4270m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00002E2C  E549                    4271m         LSL     #$02, D1
00002E2E  E049                    4272m         LSR     #$08, D1
00002E30  EA49                    4273m         LSR     #$05, D1
00002E32                          4274m COMPLETE_296:  ; OPCODE HAS BEEN VERIFIED
00002E32                          4275m         ENDM        
00002E32                          4276m         decodeAdrMode   (A2), D1
00002E32  3612                    4277m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00002E34  3201                    4278m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00002E36                          4279m 
00002E36  B23C 0001               4280m         CMP.B   #$01, D1
00002E3A  6700 0066               4281m         BEQ     ADRREGDIRECT_297    
00002E3E  B23C 0002               4282m         CMP.B   #$02, D1
00002E42  6700 00A0               4283m         BEQ     ADRREGINDIRECT_297  
00002E46  B23C 0003               4284m         CMP.B   #$03, D1
00002E4A  6700 0102               4285m         BEQ     ADRREGPOSTINC_297  
00002E4E  B23C 0004               4286m         CMP.B   #$04, D1
00002E52  6700 0178               4287m         BEQ     ADRREGPREDEC_297
00002E56  B23C 0007               4288m         CMP.B   #$07, D1
00002E5A  6700 01EE               4289m         BEQ     ADRABSOLUTE_297    
00002E5E                          4290m         
00002E5E                          4291m DATAREGDIRECT_297: 
00002E5E  BC3C 0001               4292m         CMP.B   #$01, D6
00002E62  6700 001E               4293m         BEQ     DATAREGDIRECTSRC_297   
00002E66                          4294m DATAREGDIRECTDEST_297: 
00002E66                          4295mm         PRINTDNDEST D3 
00002E66  3203                    4296mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00002E68  E949                    4297mm         LSL     #$04, D1
00002E6A  E049                    4298mm         LSR     #$08, D1
00002E6C  EA49                    4299mm         LSR     #$05, D1
00002E6E  43F8 00C7               4300mm         LEA     ODN, A1     
00002E72  103C 000E               4301mm         MOVE.B  #14,D0          
00002E76  4E4F                    4302mm         TRAP    #15
00002E78  103C 0003               4303mm         MOVE.B  #3,D0          
00002E7C  4E4F                    4304mm         TRAP    #15
00002E7E                          4305mm         ENDM
00002E7E  6000 0562               4306m         BRA     COMPLETE_297 
00002E82                          4307m DATAREGDIRECTSRC_297: 
00002E82                          4308mm         PRINTDNSRC D3 
00002E82  4281                    4309mm         CLR.L   D1
00002E84  3203                    4310mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002E86  E149                    4311mm         LSL     #$08, D1
00002E88  EB49                    4312mm         LSL     #$05, D1
00002E8A  E049                    4313mm         LSR     #$08, D1
00002E8C  EA49                    4314mm         LSR     #$05, D1
00002E8E  43F8 00C7               4315mm         LEA     ODN, A1     
00002E92  103C 000E               4316mm         MOVE.B  #14,D0          
00002E96  4E4F                    4317mm         TRAP    #15
00002E98  103C 0003               4318mm         MOVE.B  #3,D0          
00002E9C  4E4F                    4319mm         TRAP    #15
00002E9E                          4320mm         ENDM
00002E9E  6000 0542               4321m         BRA     COMPLETE_297   
00002EA2                          4322m         
00002EA2                          4323m ADRREGDIRECT_297: 
00002EA2  BC3C 0001               4324m         CMP.B   #$01, D6
00002EA6  6700 001E               4325m         BEQ     ADRREGDIRECTSRC_297   
00002EAA                          4326m ADRREGDIRECTDEST_297:
00002EAA                          4327mm         PRINTANDEST D3
00002EAA  3203                    4328mm         MOVE.W  D3, D1
00002EAC  E949                    4329mm         LSL     #$04, D1
00002EAE  E049                    4330mm         LSR     #$08, D1
00002EB0  EA49                    4331mm         LSR     #$05, D1
00002EB2  43F8 00C9               4332mm         LEA     OAN, A1     
00002EB6  103C 000E               4333mm         MOVE.B  #14,D0          
00002EBA  4E4F                    4334mm         TRAP    #15
00002EBC  103C 0003               4335mm         MOVE.B  #3,D0          
00002EC0  4E4F                    4336mm         TRAP    #15
00002EC2                          4337mm         ENDM
00002EC2  6000 051E               4338m         BRA     COMPLETE_297   
00002EC6                          4339m ADRREGDIRECTSRC_297:
00002EC6                          4340mm         PRINTANSRC D3
00002EC6  3203                    4341mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002EC8  E149                    4342mm         LSL     #$08, D1
00002ECA  EB49                    4343mm         LSL     #$05, D1
00002ECC  E049                    4344mm         LSR     #$08, D1
00002ECE  EA49                    4345mm         LSR     #$05, D1
00002ED0  43F8 00C9               4346mm         LEA     OAN, A1     
00002ED4  103C 000E               4347mm         MOVE.B  #14,D0          
00002ED8  4E4F                    4348mm         TRAP    #15
00002EDA  103C 0003               4349mm         MOVE.B  #3,D0          
00002EDE  4E4F                    4350mm         TRAP    #15
00002EE0                          4351mm         ENDM
00002EE0  6000 0500               4352m         BRA     COMPLETE_297   
00002EE4                          4353m        
00002EE4                          4354m ADRREGINDIRECT_297:   
00002EE4  BC3C 0001               4355m         CMP.B   #$01, D6
00002EE8  6700 0032               4356m         BEQ     ADRREGINDIRECTSRC_297   
00002EEC                          4357m ADRREGINDIRECTDEST_297:
00002EEC                          4358mm         PRINTLB
00002EEC  43F8 00CB               4359mm         LEA     OLB, A1     
00002EF0  103C 000E               4360mm         MOVE.B  #14,D0          
00002EF4  4E4F                    4361mm         TRAP    #15
00002EF6                          4362mm         ENDM
00002EF6                          4363mm         PRINTANDEST D3  
00002EF6  3203                    4364mm         MOVE.W  D3, D1
00002EF8  E949                    4365mm         LSL     #$04, D1
00002EFA  E049                    4366mm         LSR     #$08, D1
00002EFC  EA49                    4367mm         LSR     #$05, D1
00002EFE  43F8 00C9               4368mm         LEA     OAN, A1     
00002F02  103C 000E               4369mm         MOVE.B  #14,D0          
00002F06  4E4F                    4370mm         TRAP    #15
00002F08  103C 0003               4371mm         MOVE.B  #3,D0          
00002F0C  4E4F                    4372mm         TRAP    #15
00002F0E                          4373mm         ENDM
00002F0E                          4374mm         PRINTRB
00002F0E  43F8 00CD               4375mm         LEA     ORB, A1     
00002F12  103C 000E               4376mm         MOVE.B  #14,D0          
00002F16  4E4F                    4377mm         TRAP    #15
00002F18                          4378mm         ENDM
00002F18  6000 04C8               4379m         BRA     COMPLETE_297     
00002F1C                          4380m ADRREGINDIRECTSRC_297:   
00002F1C                          4381mm         PRINTLB
00002F1C  43F8 00CB               4382mm         LEA     OLB, A1     
00002F20  103C 000E               4383mm         MOVE.B  #14,D0          
00002F24  4E4F                    4384mm         TRAP    #15
00002F26                          4385mm         ENDM
00002F26                          4386mm         PRINTANSRC D3  
00002F26  3203                    4387mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F28  E149                    4388mm         LSL     #$08, D1
00002F2A  EB49                    4389mm         LSL     #$05, D1
00002F2C  E049                    4390mm         LSR     #$08, D1
00002F2E  EA49                    4391mm         LSR     #$05, D1
00002F30  43F8 00C9               4392mm         LEA     OAN, A1     
00002F34  103C 000E               4393mm         MOVE.B  #14,D0          
00002F38  4E4F                    4394mm         TRAP    #15
00002F3A  103C 0003               4395mm         MOVE.B  #3,D0          
00002F3E  4E4F                    4396mm         TRAP    #15
00002F40                          4397mm         ENDM
00002F40                          4398mm         PRINTRB
00002F40  43F8 00CD               4399mm         LEA     ORB, A1     
00002F44  103C 000E               4400mm         MOVE.B  #14,D0          
00002F48  4E4F                    4401mm         TRAP    #15
00002F4A                          4402mm         ENDM
00002F4A  6000 0496               4403m         BRA     COMPLETE_297   
00002F4E                          4404m         
00002F4E                          4405m ADRREGPOSTINC_297:   
00002F4E  BC3C 0001               4406m         CMP.B   #$01, D6
00002F52  6700 003C               4407m         BEQ     ADRREGPOSTINCSRC_297   
00002F56                          4408m ADRREGPOSTINCDEST_297: 
00002F56                          4409mm         PRINTLB
00002F56  43F8 00CB               4410mm         LEA     OLB, A1     
00002F5A  103C 000E               4411mm         MOVE.B  #14,D0          
00002F5E  4E4F                    4412mm         TRAP    #15
00002F60                          4413mm         ENDM
00002F60                          4414mm         PRINTANDEST D3  
00002F60  3203                    4415mm         MOVE.W  D3, D1
00002F62  E949                    4416mm         LSL     #$04, D1
00002F64  E049                    4417mm         LSR     #$08, D1
00002F66  EA49                    4418mm         LSR     #$05, D1
00002F68  43F8 00C9               4419mm         LEA     OAN, A1     
00002F6C  103C 000E               4420mm         MOVE.B  #14,D0          
00002F70  4E4F                    4421mm         TRAP    #15
00002F72  103C 0003               4422mm         MOVE.B  #3,D0          
00002F76  4E4F                    4423mm         TRAP    #15
00002F78                          4424mm         ENDM
00002F78                          4425mm         PRINTRB
00002F78  43F8 00CD               4426mm         LEA     ORB, A1     
00002F7C  103C 000E               4427mm         MOVE.B  #14,D0          
00002F80  4E4F                    4428mm         TRAP    #15
00002F82                          4429mm         ENDM
00002F82                          4430mm         PRINTPI
00002F82  43F8 00D4               4431mm         LEA     OPSTINC, A1     
00002F86  103C 000E               4432mm         MOVE.B  #14,D0          
00002F8A  4E4F                    4433mm         TRAP    #15
00002F8C                          4434mm         ENDM
00002F8C  6000 0454               4435m         BRA     COMPLETE_297  
00002F90                          4436m ADRREGPOSTINCSRC_297:           
00002F90                          4437mm         PRINTLB
00002F90  43F8 00CB               4438mm         LEA     OLB, A1     
00002F94  103C 000E               4439mm         MOVE.B  #14,D0          
00002F98  4E4F                    4440mm         TRAP    #15
00002F9A                          4441mm         ENDM
00002F9A                          4442mm         PRINTANSRC D3  
00002F9A  3203                    4443mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00002F9C  E149                    4444mm         LSL     #$08, D1
00002F9E  EB49                    4445mm         LSL     #$05, D1
00002FA0  E049                    4446mm         LSR     #$08, D1
00002FA2  EA49                    4447mm         LSR     #$05, D1
00002FA4  43F8 00C9               4448mm         LEA     OAN, A1     
00002FA8  103C 000E               4449mm         MOVE.B  #14,D0          
00002FAC  4E4F                    4450mm         TRAP    #15
00002FAE  103C 0003               4451mm         MOVE.B  #3,D0          
00002FB2  4E4F                    4452mm         TRAP    #15
00002FB4                          4453mm         ENDM
00002FB4                          4454mm         PRINTRB
00002FB4  43F8 00CD               4455mm         LEA     ORB, A1     
00002FB8  103C 000E               4456mm         MOVE.B  #14,D0          
00002FBC  4E4F                    4457mm         TRAP    #15
00002FBE                          4458mm         ENDM
00002FBE                          4459mm         PRINTPI
00002FBE  43F8 00D4               4460mm         LEA     OPSTINC, A1     
00002FC2  103C 000E               4461mm         MOVE.B  #14,D0          
00002FC6  4E4F                    4462mm         TRAP    #15
00002FC8                          4463mm         ENDM
00002FC8  6000 0418               4464m         BRA     COMPLETE_297  
00002FCC                          4465m ADRREGPREDEC_297: 
00002FCC  BC3C 0001               4466m         CMP.B   #$01, D6
00002FD0  6700 003C               4467m         BEQ     ADRREGPREDECSRC_297   
00002FD4                          4468m ADRREGPREDECDEST_297:
00002FD4                          4469mm         PRINTPD  
00002FD4  43F8 00D2               4470mm         LEA     OPREDEC, A1     
00002FD8  103C 000E               4471mm         MOVE.B  #14,D0          
00002FDC  4E4F                    4472mm         TRAP    #15
00002FDE                          4473mm         ENDM
00002FDE                          4474mm         PRINTLB
00002FDE  43F8 00CB               4475mm         LEA     OLB, A1     
00002FE2  103C 000E               4476mm         MOVE.B  #14,D0          
00002FE6  4E4F                    4477mm         TRAP    #15
00002FE8                          4478mm         ENDM
00002FE8                          4479mm         PRINTANDEST D3  
00002FE8  3203                    4480mm         MOVE.W  D3, D1
00002FEA  E949                    4481mm         LSL     #$04, D1
00002FEC  E049                    4482mm         LSR     #$08, D1
00002FEE  EA49                    4483mm         LSR     #$05, D1
00002FF0  43F8 00C9               4484mm         LEA     OAN, A1     
00002FF4  103C 000E               4485mm         MOVE.B  #14,D0          
00002FF8  4E4F                    4486mm         TRAP    #15
00002FFA  103C 0003               4487mm         MOVE.B  #3,D0          
00002FFE  4E4F                    4488mm         TRAP    #15
00003000                          4489mm         ENDM
00003000                          4490mm         PRINTRB
00003000  43F8 00CD               4491mm         LEA     ORB, A1     
00003004  103C 000E               4492mm         MOVE.B  #14,D0          
00003008  4E4F                    4493mm         TRAP    #15
0000300A                          4494mm         ENDM
0000300A  6000 03D6               4495m         BRA     COMPLETE_297   
0000300E                          4496m ADRREGPREDECSRC_297: 
0000300E                          4497mm         PRINTPD  
0000300E  43F8 00D2               4498mm         LEA     OPREDEC, A1     
00003012  103C 000E               4499mm         MOVE.B  #14,D0          
00003016  4E4F                    4500mm         TRAP    #15
00003018                          4501mm         ENDM
00003018                          4502mm         PRINTLB
00003018  43F8 00CB               4503mm         LEA     OLB, A1     
0000301C  103C 000E               4504mm         MOVE.B  #14,D0          
00003020  4E4F                    4505mm         TRAP    #15
00003022                          4506mm         ENDM
00003022                          4507mm         PRINTANSRC D3  
00003022  3203                    4508mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003024  E149                    4509mm         LSL     #$08, D1
00003026  EB49                    4510mm         LSL     #$05, D1
00003028  E049                    4511mm         LSR     #$08, D1
0000302A  EA49                    4512mm         LSR     #$05, D1
0000302C  43F8 00C9               4513mm         LEA     OAN, A1     
00003030  103C 000E               4514mm         MOVE.B  #14,D0          
00003034  4E4F                    4515mm         TRAP    #15
00003036  103C 0003               4516mm         MOVE.B  #3,D0          
0000303A  4E4F                    4517mm         TRAP    #15
0000303C                          4518mm         ENDM
0000303C                          4519mm         PRINTRB
0000303C  43F8 00CD               4520mm         LEA     ORB, A1     
00003040  103C 000E               4521mm         MOVE.B  #14,D0          
00003044  4E4F                    4522mm         TRAP    #15
00003046                          4523mm         ENDM
00003046  6000 039A               4524m         BRA     COMPLETE_297
0000304A                          4525m        
0000304A                          4526m ADRABSOLUTE_297:
0000304A  BC3C 0001               4527m         CMP.B   #$01, D6
0000304E  6600 0018               4528m         BNE     ADRABSOLUTEDST_297 
00003052                          4529m         
00003052  3A03                    4530m         MOVE.W  D3, D5
00003054  0803 0002               4531m         BTST    #2, D3
00003058  6600 0024               4532m         BNE     ADRIMMEDIATE_297
0000305C  0803 0000               4533m         BTST    #0, D3
00003060  6600 0270               4534m         BNE     ADRABSOLUTEL_297
00003064  6000 01DA               4535m         BRA     ADRABSOLUTEW_297
00003068                          4536m ADRABSOLUTEDST_297:
00003068  3A03                    4537m         MOVE.W  D3, D5
0000306A  0803 000B               4538m         BTST    #$B, D3
0000306E  6600 000E               4539m         BNE     ADRIMMEDIATE_297
00003072  0803 0009               4540m         BTST    #$09, D3
00003076  6600 025A               4541m         BNE     ADRABSOLUTEL_297
0000307A  6000 01C4               4542m         BRA     ADRABSOLUTEW_297
0000307E                          4543m ADRIMMEDIATE_297:
0000307E  BE3C 0001               4544m         CMP.B   #1, D7
00003082  6700 009E               4545m         BEQ     ADRIMMEDIATEL_297
00003086                          4546m ADRIMMEDIATEW_297:
00003086  361A                    4547m         MOVE.W  (A2)+, D3
00003088                          4548mm         PRINTHASH
00003088  103C 0006               4549mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000308C  323C 0023               4550mm         MOVE.W  #35, D1     ; AN = SIGN
00003090  4E4F                    4551mm         TRAP    #15         ; OUTPUT = SIGN
00003092                          4552mm         ENDM
00003092                          4553mm         PRINTSIGN
00003092  103C 0006               4554mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003096  323C 0024               4555mm         MOVE.W  #36, D1     ; AN = SIGN
0000309A  4E4F                    4556mm         TRAP    #15         ; OUTPUT = SIGN
0000309C                          4557mm         ENDM
0000309C                          4558mm         ADROUT
0000309C  3212                    4559mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000309E  E049                    4560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030A0  E849                    4561mm         LSR.W   #4, D1      
000030A2                          4562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030A2  0C01 0009               4563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030A6  6E00 000A               4564mmm         BGT     ALPHA_327
000030AA  0601 0030               4565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030AE  6000 0006               4566mmm         BRA     DONE_327
000030B2  0601 0037               4567mmm ALPHA_327: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030B6  4E71                    4568mmm DONE_327: NOP
000030B8                          4569mmm         ENDM
000030B8  4E4F                    4570mm         TRAP    #15         ; EXECUTE OUTPUT
000030BA                          4571mm         
000030BA  3212                    4572mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030BC  E949                    4573mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000030BE  E049                    4574mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030C0  E849                    4575mm         LSR.W   #4, D1      
000030C2                          4576mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030C2  0C01 0009               4577mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030C6  6E00 000A               4578mmm         BGT     ALPHA_328
000030CA  0601 0030               4579mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030CE  6000 0006               4580mmm         BRA     DONE_328
000030D2  0601 0037               4581mmm ALPHA_328: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030D6  4E71                    4582mmm DONE_328: NOP
000030D8                          4583mmm         ENDM
000030D8  4E4F                    4584mm         TRAP    #15         ; EXECUTE OUTPUT
000030DA                          4585mm         
000030DA  3212                    4586mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030DC  E149                    4587mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030DE  E049                    4588mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000030E0  E849                    4589mm         LSR.W   #4, D1      
000030E2                          4590mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000030E2  0C01 0009               4591mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000030E6  6E00 000A               4592mmm         BGT     ALPHA_329
000030EA  0601 0030               4593mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000030EE  6000 0006               4594mmm         BRA     DONE_329
000030F2  0601 0037               4595mmm ALPHA_329: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000030F6  4E71                    4596mmm DONE_329: NOP
000030F8                          4597mmm         ENDM
000030F8  4E4F                    4598mm         TRAP    #15         ; EXECUTE OUTPUT
000030FA                          4599mm         
000030FA  3212                    4600mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000030FC  E149                    4601mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000030FE  E949                    4602mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003100  E049                    4603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003102  E849                    4604mm         LSR.W   #4, D1      
00003104                          4605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003104  0C01 0009               4606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003108  6E00 000A               4607mmm         BGT     ALPHA_330
0000310C  0601 0030               4608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003110  6000 0006               4609mmm         BRA     DONE_330
00003114  0601 0037               4610mmm ALPHA_330: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003118  4E71                    4611mmm DONE_330: NOP
0000311A                          4612mmm         ENDM
0000311A  4E4F                    4613mm         TRAP    #15         ; EXECUTE OUTPUT       
0000311C                          4614mm         ENDM 
0000311C  3605                    4615m         MOVE.W  D5, D3
0000311E  6000 02C2               4616m         BRA     COMPLETE_297
00003122                          4617m ADRIMMEDIATEL_297:
00003122  361A                    4618m         MOVE.W  (A2)+, D3
00003124                          4619mm         PRINTHASH
00003124  103C 0006               4620mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003128  323C 0023               4621mm         MOVE.W  #35, D1     ; AN = SIGN
0000312C  4E4F                    4622mm         TRAP    #15         ; OUTPUT = SIGN
0000312E                          4623mm         ENDM
0000312E                          4624mm         PRINTSIGN
0000312E  103C 0006               4625mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003132  323C 0024               4626mm         MOVE.W  #36, D1     ; AN = SIGN
00003136  4E4F                    4627mm         TRAP    #15         ; OUTPUT = SIGN
00003138                          4628mm         ENDM
00003138                          4629mm         ADROUT 
00003138  3212                    4630mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000313A  E049                    4631mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000313C  E849                    4632mm         LSR.W   #4, D1      
0000313E                          4633mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000313E  0C01 0009               4634mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003142  6E00 000A               4635mmm         BGT     ALPHA_334
00003146  0601 0030               4636mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000314A  6000 0006               4637mmm         BRA     DONE_334
0000314E  0601 0037               4638mmm ALPHA_334: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003152  4E71                    4639mmm DONE_334: NOP
00003154                          4640mmm         ENDM
00003154  4E4F                    4641mm         TRAP    #15         ; EXECUTE OUTPUT
00003156                          4642mm         
00003156  3212                    4643mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003158  E949                    4644mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000315A  E049                    4645mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000315C  E849                    4646mm         LSR.W   #4, D1      
0000315E                          4647mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000315E  0C01 0009               4648mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003162  6E00 000A               4649mmm         BGT     ALPHA_335
00003166  0601 0030               4650mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000316A  6000 0006               4651mmm         BRA     DONE_335
0000316E  0601 0037               4652mmm ALPHA_335: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003172  4E71                    4653mmm DONE_335: NOP
00003174                          4654mmm         ENDM
00003174  4E4F                    4655mm         TRAP    #15         ; EXECUTE OUTPUT
00003176                          4656mm         
00003176  3212                    4657mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003178  E149                    4658mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000317A  E049                    4659mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000317C  E849                    4660mm         LSR.W   #4, D1      
0000317E                          4661mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000317E  0C01 0009               4662mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003182  6E00 000A               4663mmm         BGT     ALPHA_336
00003186  0601 0030               4664mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000318A  6000 0006               4665mmm         BRA     DONE_336
0000318E  0601 0037               4666mmm ALPHA_336: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003192  4E71                    4667mmm DONE_336: NOP
00003194                          4668mmm         ENDM
00003194  4E4F                    4669mm         TRAP    #15         ; EXECUTE OUTPUT
00003196                          4670mm         
00003196  3212                    4671mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003198  E149                    4672mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000319A  E949                    4673mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000319C  E049                    4674mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000319E  E849                    4675mm         LSR.W   #4, D1      
000031A0                          4676mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031A0  0C01 0009               4677mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031A4  6E00 000A               4678mmm         BGT     ALPHA_337
000031A8  0601 0030               4679mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031AC  6000 0006               4680mmm         BRA     DONE_337
000031B0  0601 0037               4681mmm ALPHA_337: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031B4  4E71                    4682mmm DONE_337: NOP
000031B6                          4683mmm         ENDM
000031B6  4E4F                    4684mm         TRAP    #15         ; EXECUTE OUTPUT       
000031B8                          4685mm         ENDM 
000031B8  361A                    4686m         MOVE.W  (A2)+, D3
000031BA                          4687mm         ADROUT
000031BA  3212                    4688mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031BC  E049                    4689mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031BE  E849                    4690mm         LSR.W   #4, D1      
000031C0                          4691mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031C0  0C01 0009               4692mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031C4  6E00 000A               4693mmm         BGT     ALPHA_339
000031C8  0601 0030               4694mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031CC  6000 0006               4695mmm         BRA     DONE_339
000031D0  0601 0037               4696mmm ALPHA_339: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031D4  4E71                    4697mmm DONE_339: NOP
000031D6                          4698mmm         ENDM
000031D6  4E4F                    4699mm         TRAP    #15         ; EXECUTE OUTPUT
000031D8                          4700mm         
000031D8  3212                    4701mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031DA  E949                    4702mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000031DC  E049                    4703mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031DE  E849                    4704mm         LSR.W   #4, D1      
000031E0                          4705mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000031E0  0C01 0009               4706mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000031E4  6E00 000A               4707mmm         BGT     ALPHA_340
000031E8  0601 0030               4708mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000031EC  6000 0006               4709mmm         BRA     DONE_340
000031F0  0601 0037               4710mmm ALPHA_340: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000031F4  4E71                    4711mmm DONE_340: NOP
000031F6                          4712mmm         ENDM
000031F6  4E4F                    4713mm         TRAP    #15         ; EXECUTE OUTPUT
000031F8                          4714mm         
000031F8  3212                    4715mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000031FA  E149                    4716mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000031FC  E049                    4717mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000031FE  E849                    4718mm         LSR.W   #4, D1      
00003200                          4719mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003200  0C01 0009               4720mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003204  6E00 000A               4721mmm         BGT     ALPHA_341
00003208  0601 0030               4722mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000320C  6000 0006               4723mmm         BRA     DONE_341
00003210  0601 0037               4724mmm ALPHA_341: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003214  4E71                    4725mmm DONE_341: NOP
00003216                          4726mmm         ENDM
00003216  4E4F                    4727mm         TRAP    #15         ; EXECUTE OUTPUT
00003218                          4728mm         
00003218  3212                    4729mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000321A  E149                    4730mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000321C  E949                    4731mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000321E  E049                    4732mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003220  E849                    4733mm         LSR.W   #4, D1      
00003222                          4734mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003222  0C01 0009               4735mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003226  6E00 000A               4736mmm         BGT     ALPHA_342
0000322A  0601 0030               4737mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000322E  6000 0006               4738mmm         BRA     DONE_342
00003232  0601 0037               4739mmm ALPHA_342: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003236  4E71                    4740mmm DONE_342: NOP
00003238                          4741mmm         ENDM
00003238  4E4F                    4742mm         TRAP    #15         ; EXECUTE OUTPUT       
0000323A                          4743mm         ENDM 
0000323A  3605                    4744m         MOVE.W  D5, D3
0000323C  6000 01A4               4745m         BRA     COMPLETE_297 
00003240                          4746m ADRABSOLUTEW_297:     
00003240  361A                    4747m         MOVE.W  (A2)+, D3
00003242                          4748mm         PRINTSIGN
00003242  103C 0006               4749mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003246  323C 0024               4750mm         MOVE.W  #36, D1     ; AN = SIGN
0000324A  4E4F                    4751mm         TRAP    #15         ; OUTPUT = SIGN
0000324C                          4752mm         ENDM
0000324C                          4753mm         ADROUT
0000324C  3212                    4754mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000324E  E049                    4755mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003250  E849                    4756mm         LSR.W   #4, D1      
00003252                          4757mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003252  0C01 0009               4758mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003256  6E00 000A               4759mmm         BGT     ALPHA_345
0000325A  0601 0030               4760mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000325E  6000 0006               4761mmm         BRA     DONE_345
00003262  0601 0037               4762mmm ALPHA_345: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003266  4E71                    4763mmm DONE_345: NOP
00003268                          4764mmm         ENDM
00003268  4E4F                    4765mm         TRAP    #15         ; EXECUTE OUTPUT
0000326A                          4766mm         
0000326A  3212                    4767mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000326C  E949                    4768mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000326E  E049                    4769mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003270  E849                    4770mm         LSR.W   #4, D1      
00003272                          4771mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003272  0C01 0009               4772mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003276  6E00 000A               4773mmm         BGT     ALPHA_346
0000327A  0601 0030               4774mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000327E  6000 0006               4775mmm         BRA     DONE_346
00003282  0601 0037               4776mmm ALPHA_346: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003286  4E71                    4777mmm DONE_346: NOP
00003288                          4778mmm         ENDM
00003288  4E4F                    4779mm         TRAP    #15         ; EXECUTE OUTPUT
0000328A                          4780mm         
0000328A  3212                    4781mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000328C  E149                    4782mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000328E  E049                    4783mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003290  E849                    4784mm         LSR.W   #4, D1      
00003292                          4785mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003292  0C01 0009               4786mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003296  6E00 000A               4787mmm         BGT     ALPHA_347
0000329A  0601 0030               4788mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000329E  6000 0006               4789mmm         BRA     DONE_347
000032A2  0601 0037               4790mmm ALPHA_347: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032A6  4E71                    4791mmm DONE_347: NOP
000032A8                          4792mmm         ENDM
000032A8  4E4F                    4793mm         TRAP    #15         ; EXECUTE OUTPUT
000032AA                          4794mm         
000032AA  3212                    4795mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032AC  E149                    4796mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000032AE  E949                    4797mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000032B0  E049                    4798mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032B2  E849                    4799mm         LSR.W   #4, D1      
000032B4                          4800mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032B4  0C01 0009               4801mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032B8  6E00 000A               4802mmm         BGT     ALPHA_348
000032BC  0601 0030               4803mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032C0  6000 0006               4804mmm         BRA     DONE_348
000032C4  0601 0037               4805mmm ALPHA_348: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032C8  4E71                    4806mmm DONE_348: NOP
000032CA                          4807mmm         ENDM
000032CA  4E4F                    4808mm         TRAP    #15         ; EXECUTE OUTPUT       
000032CC                          4809mm         ENDM 
000032CC  3605                    4810m         MOVE.W  D5, D3
000032CE  6000 0112               4811m         BRA     COMPLETE_297  
000032D2                          4812m ADRABSOLUTEL_297:  
000032D2  361A                    4813m         MOVE.W  (A2)+, D3
000032D4                          4814mm         PRINTSIGN
000032D4  103C 0006               4815mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000032D8  323C 0024               4816mm         MOVE.W  #36, D1     ; AN = SIGN
000032DC  4E4F                    4817mm         TRAP    #15         ; OUTPUT = SIGN
000032DE                          4818mm         ENDM
000032DE                          4819mm         ADROUT 
000032DE  3212                    4820mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032E0  E049                    4821mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000032E2  E849                    4822mm         LSR.W   #4, D1      
000032E4                          4823mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000032E4  0C01 0009               4824mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000032E8  6E00 000A               4825mmm         BGT     ALPHA_351
000032EC  0601 0030               4826mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000032F0  6000 0006               4827mmm         BRA     DONE_351
000032F4  0601 0037               4828mmm ALPHA_351: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000032F8  4E71                    4829mmm DONE_351: NOP
000032FA                          4830mmm         ENDM
000032FA  4E4F                    4831mm         TRAP    #15         ; EXECUTE OUTPUT
000032FC                          4832mm         
000032FC  3212                    4833mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000032FE  E949                    4834mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003300  E049                    4835mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003302  E849                    4836mm         LSR.W   #4, D1      
00003304                          4837mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003304  0C01 0009               4838mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003308  6E00 000A               4839mmm         BGT     ALPHA_352
0000330C  0601 0030               4840mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003310  6000 0006               4841mmm         BRA     DONE_352
00003314  0601 0037               4842mmm ALPHA_352: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003318  4E71                    4843mmm DONE_352: NOP
0000331A                          4844mmm         ENDM
0000331A  4E4F                    4845mm         TRAP    #15         ; EXECUTE OUTPUT
0000331C                          4846mm         
0000331C  3212                    4847mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000331E  E149                    4848mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003320  E049                    4849mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003322  E849                    4850mm         LSR.W   #4, D1      
00003324                          4851mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003324  0C01 0009               4852mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003328  6E00 000A               4853mmm         BGT     ALPHA_353
0000332C  0601 0030               4854mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003330  6000 0006               4855mmm         BRA     DONE_353
00003334  0601 0037               4856mmm ALPHA_353: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003338  4E71                    4857mmm DONE_353: NOP
0000333A                          4858mmm         ENDM
0000333A  4E4F                    4859mm         TRAP    #15         ; EXECUTE OUTPUT
0000333C                          4860mm         
0000333C  3212                    4861mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000333E  E149                    4862mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003340  E949                    4863mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003342  E049                    4864mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003344  E849                    4865mm         LSR.W   #4, D1      
00003346                          4866mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003346  0C01 0009               4867mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000334A  6E00 000A               4868mmm         BGT     ALPHA_354
0000334E  0601 0030               4869mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003352  6000 0006               4870mmm         BRA     DONE_354
00003356  0601 0037               4871mmm ALPHA_354: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000335A  4E71                    4872mmm DONE_354: NOP
0000335C                          4873mmm         ENDM
0000335C  4E4F                    4874mm         TRAP    #15         ; EXECUTE OUTPUT       
0000335E                          4875mm         ENDM 
0000335E  361A                    4876m         MOVE.W  (A2)+, D3
00003360                          4877mm         ADROUT
00003360  3212                    4878mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003362  E049                    4879mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003364  E849                    4880mm         LSR.W   #4, D1      
00003366                          4881mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003366  0C01 0009               4882mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000336A  6E00 000A               4883mmm         BGT     ALPHA_356
0000336E  0601 0030               4884mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003372  6000 0006               4885mmm         BRA     DONE_356
00003376  0601 0037               4886mmm ALPHA_356: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000337A  4E71                    4887mmm DONE_356: NOP
0000337C                          4888mmm         ENDM
0000337C  4E4F                    4889mm         TRAP    #15         ; EXECUTE OUTPUT
0000337E                          4890mm         
0000337E  3212                    4891mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003380  E949                    4892mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003382  E049                    4893mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003384  E849                    4894mm         LSR.W   #4, D1      
00003386                          4895mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003386  0C01 0009               4896mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000338A  6E00 000A               4897mmm         BGT     ALPHA_357
0000338E  0601 0030               4898mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003392  6000 0006               4899mmm         BRA     DONE_357
00003396  0601 0037               4900mmm ALPHA_357: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000339A  4E71                    4901mmm DONE_357: NOP
0000339C                          4902mmm         ENDM
0000339C  4E4F                    4903mm         TRAP    #15         ; EXECUTE OUTPUT
0000339E                          4904mm         
0000339E  3212                    4905mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033A0  E149                    4906mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033A2  E049                    4907mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033A4  E849                    4908mm         LSR.W   #4, D1      
000033A6                          4909mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033A6  0C01 0009               4910mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033AA  6E00 000A               4911mmm         BGT     ALPHA_358
000033AE  0601 0030               4912mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033B2  6000 0006               4913mmm         BRA     DONE_358
000033B6  0601 0037               4914mmm ALPHA_358: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033BA  4E71                    4915mmm DONE_358: NOP
000033BC                          4916mmm         ENDM
000033BC  4E4F                    4917mm         TRAP    #15         ; EXECUTE OUTPUT
000033BE                          4918mm         
000033BE  3212                    4919mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000033C0  E149                    4920mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000033C2  E949                    4921mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000033C4  E049                    4922mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000033C6  E849                    4923mm         LSR.W   #4, D1      
000033C8                          4924mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000033C8  0C01 0009               4925mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000033CC  6E00 000A               4926mmm         BGT     ALPHA_359
000033D0  0601 0030               4927mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000033D4  6000 0006               4928mmm         BRA     DONE_359
000033D8  0601 0037               4929mmm ALPHA_359: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000033DC  4E71                    4930mmm DONE_359: NOP
000033DE                          4931mmm         ENDM
000033DE  4E4F                    4932mm         TRAP    #15         ; EXECUTE OUTPUT       
000033E0                          4933mm         ENDM 
000033E0  3605                    4934m         MOVE.W  D5, D3
000033E2                          4935m 
000033E2                          4936m COMPLETE_297:  ; OPCODE HAS BEEN VERIFIED
000033E2                          4937m         ENDM
000033E2  6000 05F4               4938          BRA     decodeSUBcomp
000033E6                          4939  decodeSubDestOp:
000033E6                          4940m         prepareAdrMode  #$1,(A2)
000033E6  3C3C 0001               4941m         MOVE.W  #$1, D6      ; INPUT VALUE
000033EA  3212                    4942m         MOVE.W  (A2), D1
000033EC  BC3C 0001               4943m         CMP.B   #$01, D6
000033F0  6700 000C               4944m         BEQ     ADRSOURCE_360    
000033F4                          4945m ADRDEST_360:
000033F4  EF49                    4946m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000033F6  E049                    4947m         LSR     #$08, D1
000033F8  EA49                    4948m         LSR     #$05, D1
000033FA  6000 000A               4949m         BRA     COMPLETE_360 
000033FE                          4950m ADRSOURCE_360:                
000033FE  E149                    4951m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003400  E549                    4952m         LSL     #$02, D1
00003402  E049                    4953m         LSR     #$08, D1
00003404  EA49                    4954m         LSR     #$05, D1
00003406                          4955m COMPLETE_360:  ; OPCODE HAS BEEN VERIFIED
00003406                          4956m         ENDM        
00003406                          4957m         decodeAdrMode   (A2), D1
00003406  3612                    4958m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003408  3201                    4959m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
0000340A                          4960m 
0000340A  B23C 0001               4961m         CMP.B   #$01, D1
0000340E  6700 0066               4962m         BEQ     ADRREGDIRECT_361    
00003412  B23C 0002               4963m         CMP.B   #$02, D1
00003416  6700 00A0               4964m         BEQ     ADRREGINDIRECT_361  
0000341A  B23C 0003               4965m         CMP.B   #$03, D1
0000341E  6700 0102               4966m         BEQ     ADRREGPOSTINC_361  
00003422  B23C 0004               4967m         CMP.B   #$04, D1
00003426  6700 0178               4968m         BEQ     ADRREGPREDEC_361
0000342A  B23C 0007               4969m         CMP.B   #$07, D1
0000342E  6700 01EE               4970m         BEQ     ADRABSOLUTE_361    
00003432                          4971m         
00003432                          4972m DATAREGDIRECT_361: 
00003432  BC3C 0001               4973m         CMP.B   #$01, D6
00003436  6700 001E               4974m         BEQ     DATAREGDIRECTSRC_361   
0000343A                          4975m DATAREGDIRECTDEST_361: 
0000343A                          4976mm         PRINTDNDEST D3 
0000343A  3203                    4977mm         MOVE.W  D3, D1      ; BITS 9 TO 11
0000343C  E949                    4978mm         LSL     #$04, D1
0000343E  E049                    4979mm         LSR     #$08, D1
00003440  EA49                    4980mm         LSR     #$05, D1
00003442  43F8 00C7               4981mm         LEA     ODN, A1     
00003446  103C 000E               4982mm         MOVE.B  #14,D0          
0000344A  4E4F                    4983mm         TRAP    #15
0000344C  103C 0003               4984mm         MOVE.B  #3,D0          
00003450  4E4F                    4985mm         TRAP    #15
00003452                          4986mm         ENDM
00003452  6000 0562               4987m         BRA     COMPLETE_361 
00003456                          4988m DATAREGDIRECTSRC_361: 
00003456                          4989mm         PRINTDNSRC D3 
00003456  4281                    4990mm         CLR.L   D1
00003458  3203                    4991mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000345A  E149                    4992mm         LSL     #$08, D1
0000345C  EB49                    4993mm         LSL     #$05, D1
0000345E  E049                    4994mm         LSR     #$08, D1
00003460  EA49                    4995mm         LSR     #$05, D1
00003462  43F8 00C7               4996mm         LEA     ODN, A1     
00003466  103C 000E               4997mm         MOVE.B  #14,D0          
0000346A  4E4F                    4998mm         TRAP    #15
0000346C  103C 0003               4999mm         MOVE.B  #3,D0          
00003470  4E4F                    5000mm         TRAP    #15
00003472                          5001mm         ENDM
00003472  6000 0542               5002m         BRA     COMPLETE_361   
00003476                          5003m         
00003476                          5004m ADRREGDIRECT_361: 
00003476  BC3C 0001               5005m         CMP.B   #$01, D6
0000347A  6700 001E               5006m         BEQ     ADRREGDIRECTSRC_361   
0000347E                          5007m ADRREGDIRECTDEST_361:
0000347E                          5008mm         PRINTANDEST D3
0000347E  3203                    5009mm         MOVE.W  D3, D1
00003480  E949                    5010mm         LSL     #$04, D1
00003482  E049                    5011mm         LSR     #$08, D1
00003484  EA49                    5012mm         LSR     #$05, D1
00003486  43F8 00C9               5013mm         LEA     OAN, A1     
0000348A  103C 000E               5014mm         MOVE.B  #14,D0          
0000348E  4E4F                    5015mm         TRAP    #15
00003490  103C 0003               5016mm         MOVE.B  #3,D0          
00003494  4E4F                    5017mm         TRAP    #15
00003496                          5018mm         ENDM
00003496  6000 051E               5019m         BRA     COMPLETE_361   
0000349A                          5020m ADRREGDIRECTSRC_361:
0000349A                          5021mm         PRINTANSRC D3
0000349A  3203                    5022mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000349C  E149                    5023mm         LSL     #$08, D1
0000349E  EB49                    5024mm         LSL     #$05, D1
000034A0  E049                    5025mm         LSR     #$08, D1
000034A2  EA49                    5026mm         LSR     #$05, D1
000034A4  43F8 00C9               5027mm         LEA     OAN, A1     
000034A8  103C 000E               5028mm         MOVE.B  #14,D0          
000034AC  4E4F                    5029mm         TRAP    #15
000034AE  103C 0003               5030mm         MOVE.B  #3,D0          
000034B2  4E4F                    5031mm         TRAP    #15
000034B4                          5032mm         ENDM
000034B4  6000 0500               5033m         BRA     COMPLETE_361   
000034B8                          5034m        
000034B8                          5035m ADRREGINDIRECT_361:   
000034B8  BC3C 0001               5036m         CMP.B   #$01, D6
000034BC  6700 0032               5037m         BEQ     ADRREGINDIRECTSRC_361   
000034C0                          5038m ADRREGINDIRECTDEST_361:
000034C0                          5039mm         PRINTLB
000034C0  43F8 00CB               5040mm         LEA     OLB, A1     
000034C4  103C 000E               5041mm         MOVE.B  #14,D0          
000034C8  4E4F                    5042mm         TRAP    #15
000034CA                          5043mm         ENDM
000034CA                          5044mm         PRINTANDEST D3  
000034CA  3203                    5045mm         MOVE.W  D3, D1
000034CC  E949                    5046mm         LSL     #$04, D1
000034CE  E049                    5047mm         LSR     #$08, D1
000034D0  EA49                    5048mm         LSR     #$05, D1
000034D2  43F8 00C9               5049mm         LEA     OAN, A1     
000034D6  103C 000E               5050mm         MOVE.B  #14,D0          
000034DA  4E4F                    5051mm         TRAP    #15
000034DC  103C 0003               5052mm         MOVE.B  #3,D0          
000034E0  4E4F                    5053mm         TRAP    #15
000034E2                          5054mm         ENDM
000034E2                          5055mm         PRINTRB
000034E2  43F8 00CD               5056mm         LEA     ORB, A1     
000034E6  103C 000E               5057mm         MOVE.B  #14,D0          
000034EA  4E4F                    5058mm         TRAP    #15
000034EC                          5059mm         ENDM
000034EC  6000 04C8               5060m         BRA     COMPLETE_361     
000034F0                          5061m ADRREGINDIRECTSRC_361:   
000034F0                          5062mm         PRINTLB
000034F0  43F8 00CB               5063mm         LEA     OLB, A1     
000034F4  103C 000E               5064mm         MOVE.B  #14,D0          
000034F8  4E4F                    5065mm         TRAP    #15
000034FA                          5066mm         ENDM
000034FA                          5067mm         PRINTANSRC D3  
000034FA  3203                    5068mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000034FC  E149                    5069mm         LSL     #$08, D1
000034FE  EB49                    5070mm         LSL     #$05, D1
00003500  E049                    5071mm         LSR     #$08, D1
00003502  EA49                    5072mm         LSR     #$05, D1
00003504  43F8 00C9               5073mm         LEA     OAN, A1     
00003508  103C 000E               5074mm         MOVE.B  #14,D0          
0000350C  4E4F                    5075mm         TRAP    #15
0000350E  103C 0003               5076mm         MOVE.B  #3,D0          
00003512  4E4F                    5077mm         TRAP    #15
00003514                          5078mm         ENDM
00003514                          5079mm         PRINTRB
00003514  43F8 00CD               5080mm         LEA     ORB, A1     
00003518  103C 000E               5081mm         MOVE.B  #14,D0          
0000351C  4E4F                    5082mm         TRAP    #15
0000351E                          5083mm         ENDM
0000351E  6000 0496               5084m         BRA     COMPLETE_361   
00003522                          5085m         
00003522                          5086m ADRREGPOSTINC_361:   
00003522  BC3C 0001               5087m         CMP.B   #$01, D6
00003526  6700 003C               5088m         BEQ     ADRREGPOSTINCSRC_361   
0000352A                          5089m ADRREGPOSTINCDEST_361: 
0000352A                          5090mm         PRINTLB
0000352A  43F8 00CB               5091mm         LEA     OLB, A1     
0000352E  103C 000E               5092mm         MOVE.B  #14,D0          
00003532  4E4F                    5093mm         TRAP    #15
00003534                          5094mm         ENDM
00003534                          5095mm         PRINTANDEST D3  
00003534  3203                    5096mm         MOVE.W  D3, D1
00003536  E949                    5097mm         LSL     #$04, D1
00003538  E049                    5098mm         LSR     #$08, D1
0000353A  EA49                    5099mm         LSR     #$05, D1
0000353C  43F8 00C9               5100mm         LEA     OAN, A1     
00003540  103C 000E               5101mm         MOVE.B  #14,D0          
00003544  4E4F                    5102mm         TRAP    #15
00003546  103C 0003               5103mm         MOVE.B  #3,D0          
0000354A  4E4F                    5104mm         TRAP    #15
0000354C                          5105mm         ENDM
0000354C                          5106mm         PRINTRB
0000354C  43F8 00CD               5107mm         LEA     ORB, A1     
00003550  103C 000E               5108mm         MOVE.B  #14,D0          
00003554  4E4F                    5109mm         TRAP    #15
00003556                          5110mm         ENDM
00003556                          5111mm         PRINTPI
00003556  43F8 00D4               5112mm         LEA     OPSTINC, A1     
0000355A  103C 000E               5113mm         MOVE.B  #14,D0          
0000355E  4E4F                    5114mm         TRAP    #15
00003560                          5115mm         ENDM
00003560  6000 0454               5116m         BRA     COMPLETE_361  
00003564                          5117m ADRREGPOSTINCSRC_361:           
00003564                          5118mm         PRINTLB
00003564  43F8 00CB               5119mm         LEA     OLB, A1     
00003568  103C 000E               5120mm         MOVE.B  #14,D0          
0000356C  4E4F                    5121mm         TRAP    #15
0000356E                          5122mm         ENDM
0000356E                          5123mm         PRINTANSRC D3  
0000356E  3203                    5124mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003570  E149                    5125mm         LSL     #$08, D1
00003572  EB49                    5126mm         LSL     #$05, D1
00003574  E049                    5127mm         LSR     #$08, D1
00003576  EA49                    5128mm         LSR     #$05, D1
00003578  43F8 00C9               5129mm         LEA     OAN, A1     
0000357C  103C 000E               5130mm         MOVE.B  #14,D0          
00003580  4E4F                    5131mm         TRAP    #15
00003582  103C 0003               5132mm         MOVE.B  #3,D0          
00003586  4E4F                    5133mm         TRAP    #15
00003588                          5134mm         ENDM
00003588                          5135mm         PRINTRB
00003588  43F8 00CD               5136mm         LEA     ORB, A1     
0000358C  103C 000E               5137mm         MOVE.B  #14,D0          
00003590  4E4F                    5138mm         TRAP    #15
00003592                          5139mm         ENDM
00003592                          5140mm         PRINTPI
00003592  43F8 00D4               5141mm         LEA     OPSTINC, A1     
00003596  103C 000E               5142mm         MOVE.B  #14,D0          
0000359A  4E4F                    5143mm         TRAP    #15
0000359C                          5144mm         ENDM
0000359C  6000 0418               5145m         BRA     COMPLETE_361  
000035A0                          5146m ADRREGPREDEC_361: 
000035A0  BC3C 0001               5147m         CMP.B   #$01, D6
000035A4  6700 003C               5148m         BEQ     ADRREGPREDECSRC_361   
000035A8                          5149m ADRREGPREDECDEST_361:
000035A8                          5150mm         PRINTPD  
000035A8  43F8 00D2               5151mm         LEA     OPREDEC, A1     
000035AC  103C 000E               5152mm         MOVE.B  #14,D0          
000035B0  4E4F                    5153mm         TRAP    #15
000035B2                          5154mm         ENDM
000035B2                          5155mm         PRINTLB
000035B2  43F8 00CB               5156mm         LEA     OLB, A1     
000035B6  103C 000E               5157mm         MOVE.B  #14,D0          
000035BA  4E4F                    5158mm         TRAP    #15
000035BC                          5159mm         ENDM
000035BC                          5160mm         PRINTANDEST D3  
000035BC  3203                    5161mm         MOVE.W  D3, D1
000035BE  E949                    5162mm         LSL     #$04, D1
000035C0  E049                    5163mm         LSR     #$08, D1
000035C2  EA49                    5164mm         LSR     #$05, D1
000035C4  43F8 00C9               5165mm         LEA     OAN, A1     
000035C8  103C 000E               5166mm         MOVE.B  #14,D0          
000035CC  4E4F                    5167mm         TRAP    #15
000035CE  103C 0003               5168mm         MOVE.B  #3,D0          
000035D2  4E4F                    5169mm         TRAP    #15
000035D4                          5170mm         ENDM
000035D4                          5171mm         PRINTRB
000035D4  43F8 00CD               5172mm         LEA     ORB, A1     
000035D8  103C 000E               5173mm         MOVE.B  #14,D0          
000035DC  4E4F                    5174mm         TRAP    #15
000035DE                          5175mm         ENDM
000035DE  6000 03D6               5176m         BRA     COMPLETE_361   
000035E2                          5177m ADRREGPREDECSRC_361: 
000035E2                          5178mm         PRINTPD  
000035E2  43F8 00D2               5179mm         LEA     OPREDEC, A1     
000035E6  103C 000E               5180mm         MOVE.B  #14,D0          
000035EA  4E4F                    5181mm         TRAP    #15
000035EC                          5182mm         ENDM
000035EC                          5183mm         PRINTLB
000035EC  43F8 00CB               5184mm         LEA     OLB, A1     
000035F0  103C 000E               5185mm         MOVE.B  #14,D0          
000035F4  4E4F                    5186mm         TRAP    #15
000035F6                          5187mm         ENDM
000035F6                          5188mm         PRINTANSRC D3  
000035F6  3203                    5189mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000035F8  E149                    5190mm         LSL     #$08, D1
000035FA  EB49                    5191mm         LSL     #$05, D1
000035FC  E049                    5192mm         LSR     #$08, D1
000035FE  EA49                    5193mm         LSR     #$05, D1
00003600  43F8 00C9               5194mm         LEA     OAN, A1     
00003604  103C 000E               5195mm         MOVE.B  #14,D0          
00003608  4E4F                    5196mm         TRAP    #15
0000360A  103C 0003               5197mm         MOVE.B  #3,D0          
0000360E  4E4F                    5198mm         TRAP    #15
00003610                          5199mm         ENDM
00003610                          5200mm         PRINTRB
00003610  43F8 00CD               5201mm         LEA     ORB, A1     
00003614  103C 000E               5202mm         MOVE.B  #14,D0          
00003618  4E4F                    5203mm         TRAP    #15
0000361A                          5204mm         ENDM
0000361A  6000 039A               5205m         BRA     COMPLETE_361
0000361E                          5206m        
0000361E                          5207m ADRABSOLUTE_361:
0000361E  BC3C 0001               5208m         CMP.B   #$01, D6
00003622  6600 0018               5209m         BNE     ADRABSOLUTEDST_361 
00003626                          5210m         
00003626  3A03                    5211m         MOVE.W  D3, D5
00003628  0803 0002               5212m         BTST    #2, D3
0000362C  6600 0024               5213m         BNE     ADRIMMEDIATE_361
00003630  0803 0000               5214m         BTST    #0, D3
00003634  6600 0270               5215m         BNE     ADRABSOLUTEL_361
00003638  6000 01DA               5216m         BRA     ADRABSOLUTEW_361
0000363C                          5217m ADRABSOLUTEDST_361:
0000363C  3A03                    5218m         MOVE.W  D3, D5
0000363E  0803 000B               5219m         BTST    #$B, D3
00003642  6600 000E               5220m         BNE     ADRIMMEDIATE_361
00003646  0803 0009               5221m         BTST    #$09, D3
0000364A  6600 025A               5222m         BNE     ADRABSOLUTEL_361
0000364E  6000 01C4               5223m         BRA     ADRABSOLUTEW_361
00003652                          5224m ADRIMMEDIATE_361:
00003652  BE3C 0001               5225m         CMP.B   #1, D7
00003656  6700 009E               5226m         BEQ     ADRIMMEDIATEL_361
0000365A                          5227m ADRIMMEDIATEW_361:
0000365A  361A                    5228m         MOVE.W  (A2)+, D3
0000365C                          5229mm         PRINTHASH
0000365C  103C 0006               5230mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003660  323C 0023               5231mm         MOVE.W  #35, D1     ; AN = SIGN
00003664  4E4F                    5232mm         TRAP    #15         ; OUTPUT = SIGN
00003666                          5233mm         ENDM
00003666                          5234mm         PRINTSIGN
00003666  103C 0006               5235mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000366A  323C 0024               5236mm         MOVE.W  #36, D1     ; AN = SIGN
0000366E  4E4F                    5237mm         TRAP    #15         ; OUTPUT = SIGN
00003670                          5238mm         ENDM
00003670                          5239mm         ADROUT
00003670  3212                    5240mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003672  E049                    5241mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003674  E849                    5242mm         LSR.W   #4, D1      
00003676                          5243mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003676  0C01 0009               5244mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000367A  6E00 000A               5245mmm         BGT     ALPHA_391
0000367E  0601 0030               5246mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003682  6000 0006               5247mmm         BRA     DONE_391
00003686  0601 0037               5248mmm ALPHA_391: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000368A  4E71                    5249mmm DONE_391: NOP
0000368C                          5250mmm         ENDM
0000368C  4E4F                    5251mm         TRAP    #15         ; EXECUTE OUTPUT
0000368E                          5252mm         
0000368E  3212                    5253mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003690  E949                    5254mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003692  E049                    5255mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003694  E849                    5256mm         LSR.W   #4, D1      
00003696                          5257mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003696  0C01 0009               5258mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000369A  6E00 000A               5259mmm         BGT     ALPHA_392
0000369E  0601 0030               5260mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036A2  6000 0006               5261mmm         BRA     DONE_392
000036A6  0601 0037               5262mmm ALPHA_392: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036AA  4E71                    5263mmm DONE_392: NOP
000036AC                          5264mmm         ENDM
000036AC  4E4F                    5265mm         TRAP    #15         ; EXECUTE OUTPUT
000036AE                          5266mm         
000036AE  3212                    5267mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036B0  E149                    5268mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036B2  E049                    5269mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036B4  E849                    5270mm         LSR.W   #4, D1      
000036B6                          5271mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036B6  0C01 0009               5272mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036BA  6E00 000A               5273mmm         BGT     ALPHA_393
000036BE  0601 0030               5274mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036C2  6000 0006               5275mmm         BRA     DONE_393
000036C6  0601 0037               5276mmm ALPHA_393: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036CA  4E71                    5277mmm DONE_393: NOP
000036CC                          5278mmm         ENDM
000036CC  4E4F                    5279mm         TRAP    #15         ; EXECUTE OUTPUT
000036CE                          5280mm         
000036CE  3212                    5281mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000036D0  E149                    5282mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000036D2  E949                    5283mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000036D4  E049                    5284mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000036D6  E849                    5285mm         LSR.W   #4, D1      
000036D8                          5286mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000036D8  0C01 0009               5287mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000036DC  6E00 000A               5288mmm         BGT     ALPHA_394
000036E0  0601 0030               5289mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000036E4  6000 0006               5290mmm         BRA     DONE_394
000036E8  0601 0037               5291mmm ALPHA_394: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000036EC  4E71                    5292mmm DONE_394: NOP
000036EE                          5293mmm         ENDM
000036EE  4E4F                    5294mm         TRAP    #15         ; EXECUTE OUTPUT       
000036F0                          5295mm         ENDM 
000036F0  3605                    5296m         MOVE.W  D5, D3
000036F2  6000 02C2               5297m         BRA     COMPLETE_361
000036F6                          5298m ADRIMMEDIATEL_361:
000036F6  361A                    5299m         MOVE.W  (A2)+, D3
000036F8                          5300mm         PRINTHASH
000036F8  103C 0006               5301mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000036FC  323C 0023               5302mm         MOVE.W  #35, D1     ; AN = SIGN
00003700  4E4F                    5303mm         TRAP    #15         ; OUTPUT = SIGN
00003702                          5304mm         ENDM
00003702                          5305mm         PRINTSIGN
00003702  103C 0006               5306mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003706  323C 0024               5307mm         MOVE.W  #36, D1     ; AN = SIGN
0000370A  4E4F                    5308mm         TRAP    #15         ; OUTPUT = SIGN
0000370C                          5309mm         ENDM
0000370C                          5310mm         ADROUT 
0000370C  3212                    5311mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000370E  E049                    5312mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003710  E849                    5313mm         LSR.W   #4, D1      
00003712                          5314mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003712  0C01 0009               5315mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003716  6E00 000A               5316mmm         BGT     ALPHA_398
0000371A  0601 0030               5317mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000371E  6000 0006               5318mmm         BRA     DONE_398
00003722  0601 0037               5319mmm ALPHA_398: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003726  4E71                    5320mmm DONE_398: NOP
00003728                          5321mmm         ENDM
00003728  4E4F                    5322mm         TRAP    #15         ; EXECUTE OUTPUT
0000372A                          5323mm         
0000372A  3212                    5324mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000372C  E949                    5325mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000372E  E049                    5326mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003730  E849                    5327mm         LSR.W   #4, D1      
00003732                          5328mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003732  0C01 0009               5329mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003736  6E00 000A               5330mmm         BGT     ALPHA_399
0000373A  0601 0030               5331mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000373E  6000 0006               5332mmm         BRA     DONE_399
00003742  0601 0037               5333mmm ALPHA_399: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003746  4E71                    5334mmm DONE_399: NOP
00003748                          5335mmm         ENDM
00003748  4E4F                    5336mm         TRAP    #15         ; EXECUTE OUTPUT
0000374A                          5337mm         
0000374A  3212                    5338mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000374C  E149                    5339mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000374E  E049                    5340mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003750  E849                    5341mm         LSR.W   #4, D1      
00003752                          5342mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003752  0C01 0009               5343mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003756  6E00 000A               5344mmm         BGT     ALPHA_400
0000375A  0601 0030               5345mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000375E  6000 0006               5346mmm         BRA     DONE_400
00003762  0601 0037               5347mmm ALPHA_400: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003766  4E71                    5348mmm DONE_400: NOP
00003768                          5349mmm         ENDM
00003768  4E4F                    5350mm         TRAP    #15         ; EXECUTE OUTPUT
0000376A                          5351mm         
0000376A  3212                    5352mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000376C  E149                    5353mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000376E  E949                    5354mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003770  E049                    5355mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003772  E849                    5356mm         LSR.W   #4, D1      
00003774                          5357mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003774  0C01 0009               5358mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003778  6E00 000A               5359mmm         BGT     ALPHA_401
0000377C  0601 0030               5360mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003780  6000 0006               5361mmm         BRA     DONE_401
00003784  0601 0037               5362mmm ALPHA_401: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003788  4E71                    5363mmm DONE_401: NOP
0000378A                          5364mmm         ENDM
0000378A  4E4F                    5365mm         TRAP    #15         ; EXECUTE OUTPUT       
0000378C                          5366mm         ENDM 
0000378C  361A                    5367m         MOVE.W  (A2)+, D3
0000378E                          5368mm         ADROUT
0000378E  3212                    5369mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003790  E049                    5370mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003792  E849                    5371mm         LSR.W   #4, D1      
00003794                          5372mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003794  0C01 0009               5373mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003798  6E00 000A               5374mmm         BGT     ALPHA_403
0000379C  0601 0030               5375mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037A0  6000 0006               5376mmm         BRA     DONE_403
000037A4  0601 0037               5377mmm ALPHA_403: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037A8  4E71                    5378mmm DONE_403: NOP
000037AA                          5379mmm         ENDM
000037AA  4E4F                    5380mm         TRAP    #15         ; EXECUTE OUTPUT
000037AC                          5381mm         
000037AC  3212                    5382mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037AE  E949                    5383mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000037B0  E049                    5384mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037B2  E849                    5385mm         LSR.W   #4, D1      
000037B4                          5386mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037B4  0C01 0009               5387mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037B8  6E00 000A               5388mmm         BGT     ALPHA_404
000037BC  0601 0030               5389mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037C0  6000 0006               5390mmm         BRA     DONE_404
000037C4  0601 0037               5391mmm ALPHA_404: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037C8  4E71                    5392mmm DONE_404: NOP
000037CA                          5393mmm         ENDM
000037CA  4E4F                    5394mm         TRAP    #15         ; EXECUTE OUTPUT
000037CC                          5395mm         
000037CC  3212                    5396mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037CE  E149                    5397mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037D0  E049                    5398mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037D2  E849                    5399mm         LSR.W   #4, D1      
000037D4                          5400mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037D4  0C01 0009               5401mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037D8  6E00 000A               5402mmm         BGT     ALPHA_405
000037DC  0601 0030               5403mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000037E0  6000 0006               5404mmm         BRA     DONE_405
000037E4  0601 0037               5405mmm ALPHA_405: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000037E8  4E71                    5406mmm DONE_405: NOP
000037EA                          5407mmm         ENDM
000037EA  4E4F                    5408mm         TRAP    #15         ; EXECUTE OUTPUT
000037EC                          5409mm         
000037EC  3212                    5410mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000037EE  E149                    5411mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000037F0  E949                    5412mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000037F2  E049                    5413mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000037F4  E849                    5414mm         LSR.W   #4, D1      
000037F6                          5415mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000037F6  0C01 0009               5416mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000037FA  6E00 000A               5417mmm         BGT     ALPHA_406
000037FE  0601 0030               5418mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003802  6000 0006               5419mmm         BRA     DONE_406
00003806  0601 0037               5420mmm ALPHA_406: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000380A  4E71                    5421mmm DONE_406: NOP
0000380C                          5422mmm         ENDM
0000380C  4E4F                    5423mm         TRAP    #15         ; EXECUTE OUTPUT       
0000380E                          5424mm         ENDM 
0000380E  3605                    5425m         MOVE.W  D5, D3
00003810  6000 01A4               5426m         BRA     COMPLETE_361 
00003814                          5427m ADRABSOLUTEW_361:     
00003814  361A                    5428m         MOVE.W  (A2)+, D3
00003816                          5429mm         PRINTSIGN
00003816  103C 0006               5430mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000381A  323C 0024               5431mm         MOVE.W  #36, D1     ; AN = SIGN
0000381E  4E4F                    5432mm         TRAP    #15         ; OUTPUT = SIGN
00003820                          5433mm         ENDM
00003820                          5434mm         ADROUT
00003820  3212                    5435mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003822  E049                    5436mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003824  E849                    5437mm         LSR.W   #4, D1      
00003826                          5438mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003826  0C01 0009               5439mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000382A  6E00 000A               5440mmm         BGT     ALPHA_409
0000382E  0601 0030               5441mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003832  6000 0006               5442mmm         BRA     DONE_409
00003836  0601 0037               5443mmm ALPHA_409: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000383A  4E71                    5444mmm DONE_409: NOP
0000383C                          5445mmm         ENDM
0000383C  4E4F                    5446mm         TRAP    #15         ; EXECUTE OUTPUT
0000383E                          5447mm         
0000383E  3212                    5448mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003840  E949                    5449mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003842  E049                    5450mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003844  E849                    5451mm         LSR.W   #4, D1      
00003846                          5452mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003846  0C01 0009               5453mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000384A  6E00 000A               5454mmm         BGT     ALPHA_410
0000384E  0601 0030               5455mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003852  6000 0006               5456mmm         BRA     DONE_410
00003856  0601 0037               5457mmm ALPHA_410: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000385A  4E71                    5458mmm DONE_410: NOP
0000385C                          5459mmm         ENDM
0000385C  4E4F                    5460mm         TRAP    #15         ; EXECUTE OUTPUT
0000385E                          5461mm         
0000385E  3212                    5462mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003860  E149                    5463mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003862  E049                    5464mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003864  E849                    5465mm         LSR.W   #4, D1      
00003866                          5466mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003866  0C01 0009               5467mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000386A  6E00 000A               5468mmm         BGT     ALPHA_411
0000386E  0601 0030               5469mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003872  6000 0006               5470mmm         BRA     DONE_411
00003876  0601 0037               5471mmm ALPHA_411: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000387A  4E71                    5472mmm DONE_411: NOP
0000387C                          5473mmm         ENDM
0000387C  4E4F                    5474mm         TRAP    #15         ; EXECUTE OUTPUT
0000387E                          5475mm         
0000387E  3212                    5476mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003880  E149                    5477mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003882  E949                    5478mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003884  E049                    5479mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003886  E849                    5480mm         LSR.W   #4, D1      
00003888                          5481mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003888  0C01 0009               5482mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000388C  6E00 000A               5483mmm         BGT     ALPHA_412
00003890  0601 0030               5484mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003894  6000 0006               5485mmm         BRA     DONE_412
00003898  0601 0037               5486mmm ALPHA_412: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000389C  4E71                    5487mmm DONE_412: NOP
0000389E                          5488mmm         ENDM
0000389E  4E4F                    5489mm         TRAP    #15         ; EXECUTE OUTPUT       
000038A0                          5490mm         ENDM 
000038A0  3605                    5491m         MOVE.W  D5, D3
000038A2  6000 0112               5492m         BRA     COMPLETE_361  
000038A6                          5493m ADRABSOLUTEL_361:  
000038A6  361A                    5494m         MOVE.W  (A2)+, D3
000038A8                          5495mm         PRINTSIGN
000038A8  103C 0006               5496mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000038AC  323C 0024               5497mm         MOVE.W  #36, D1     ; AN = SIGN
000038B0  4E4F                    5498mm         TRAP    #15         ; OUTPUT = SIGN
000038B2                          5499mm         ENDM
000038B2                          5500mm         ADROUT 
000038B2  3212                    5501mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038B4  E049                    5502mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038B6  E849                    5503mm         LSR.W   #4, D1      
000038B8                          5504mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038B8  0C01 0009               5505mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038BC  6E00 000A               5506mmm         BGT     ALPHA_415
000038C0  0601 0030               5507mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038C4  6000 0006               5508mmm         BRA     DONE_415
000038C8  0601 0037               5509mmm ALPHA_415: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038CC  4E71                    5510mmm DONE_415: NOP
000038CE                          5511mmm         ENDM
000038CE  4E4F                    5512mm         TRAP    #15         ; EXECUTE OUTPUT
000038D0                          5513mm         
000038D0  3212                    5514mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038D2  E949                    5515mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000038D4  E049                    5516mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038D6  E849                    5517mm         LSR.W   #4, D1      
000038D8                          5518mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038D8  0C01 0009               5519mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038DC  6E00 000A               5520mmm         BGT     ALPHA_416
000038E0  0601 0030               5521mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000038E4  6000 0006               5522mmm         BRA     DONE_416
000038E8  0601 0037               5523mmm ALPHA_416: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000038EC  4E71                    5524mmm DONE_416: NOP
000038EE                          5525mmm         ENDM
000038EE  4E4F                    5526mm         TRAP    #15         ; EXECUTE OUTPUT
000038F0                          5527mm         
000038F0  3212                    5528mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000038F2  E149                    5529mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000038F4  E049                    5530mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000038F6  E849                    5531mm         LSR.W   #4, D1      
000038F8                          5532mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000038F8  0C01 0009               5533mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000038FC  6E00 000A               5534mmm         BGT     ALPHA_417
00003900  0601 0030               5535mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003904  6000 0006               5536mmm         BRA     DONE_417
00003908  0601 0037               5537mmm ALPHA_417: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000390C  4E71                    5538mmm DONE_417: NOP
0000390E                          5539mmm         ENDM
0000390E  4E4F                    5540mm         TRAP    #15         ; EXECUTE OUTPUT
00003910                          5541mm         
00003910  3212                    5542mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003912  E149                    5543mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003914  E949                    5544mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003916  E049                    5545mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003918  E849                    5546mm         LSR.W   #4, D1      
0000391A                          5547mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000391A  0C01 0009               5548mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000391E  6E00 000A               5549mmm         BGT     ALPHA_418
00003922  0601 0030               5550mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003926  6000 0006               5551mmm         BRA     DONE_418
0000392A  0601 0037               5552mmm ALPHA_418: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000392E  4E71                    5553mmm DONE_418: NOP
00003930                          5554mmm         ENDM
00003930  4E4F                    5555mm         TRAP    #15         ; EXECUTE OUTPUT       
00003932                          5556mm         ENDM 
00003932  361A                    5557m         MOVE.W  (A2)+, D3
00003934                          5558mm         ADROUT
00003934  3212                    5559mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003936  E049                    5560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003938  E849                    5561mm         LSR.W   #4, D1      
0000393A                          5562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000393A  0C01 0009               5563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000393E  6E00 000A               5564mmm         BGT     ALPHA_420
00003942  0601 0030               5565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003946  6000 0006               5566mmm         BRA     DONE_420
0000394A  0601 0037               5567mmm ALPHA_420: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000394E  4E71                    5568mmm DONE_420: NOP
00003950                          5569mmm         ENDM
00003950  4E4F                    5570mm         TRAP    #15         ; EXECUTE OUTPUT
00003952                          5571mm         
00003952  3212                    5572mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003954  E949                    5573mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003956  E049                    5574mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003958  E849                    5575mm         LSR.W   #4, D1      
0000395A                          5576mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000395A  0C01 0009               5577mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000395E  6E00 000A               5578mmm         BGT     ALPHA_421
00003962  0601 0030               5579mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003966  6000 0006               5580mmm         BRA     DONE_421
0000396A  0601 0037               5581mmm ALPHA_421: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000396E  4E71                    5582mmm DONE_421: NOP
00003970                          5583mmm         ENDM
00003970  4E4F                    5584mm         TRAP    #15         ; EXECUTE OUTPUT
00003972                          5585mm         
00003972  3212                    5586mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003974  E149                    5587mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003976  E049                    5588mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003978  E849                    5589mm         LSR.W   #4, D1      
0000397A                          5590mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000397A  0C01 0009               5591mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000397E  6E00 000A               5592mmm         BGT     ALPHA_422
00003982  0601 0030               5593mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003986  6000 0006               5594mmm         BRA     DONE_422
0000398A  0601 0037               5595mmm ALPHA_422: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000398E  4E71                    5596mmm DONE_422: NOP
00003990                          5597mmm         ENDM
00003990  4E4F                    5598mm         TRAP    #15         ; EXECUTE OUTPUT
00003992                          5599mm         
00003992  3212                    5600mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003994  E149                    5601mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003996  E949                    5602mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003998  E049                    5603mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000399A  E849                    5604mm         LSR.W   #4, D1      
0000399C                          5605mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000399C  0C01 0009               5606mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000039A0  6E00 000A               5607mmm         BGT     ALPHA_423
000039A4  0601 0030               5608mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000039A8  6000 0006               5609mmm         BRA     DONE_423
000039AC  0601 0037               5610mmm ALPHA_423: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000039B0  4E71                    5611mmm DONE_423: NOP
000039B2                          5612mmm         ENDM
000039B2  4E4F                    5613mm         TRAP    #15         ; EXECUTE OUTPUT       
000039B4                          5614mm         ENDM 
000039B4  3605                    5615m         MOVE.W  D5, D3
000039B6                          5616m 
000039B6                          5617m COMPLETE_361:  ; OPCODE HAS BEEN VERIFIED
000039B6                          5618m         ENDM
000039B6                          5619m         printComma
000039B6  43F8 00CF               5620m         LEA     OCOMMA, A1     
000039BA  103C 000E               5621m         MOVE.B  #14,D0          
000039BE  4E4F                    5622m         TRAP    #15
000039C0                          5623m         ENDM
000039C0                          5624m         printDnDest     D3
000039C0  3203                    5625m         MOVE.W  D3, D1      ; BITS 9 TO 11
000039C2  E949                    5626m         LSL     #$04, D1
000039C4  E049                    5627m         LSR     #$08, D1
000039C6  EA49                    5628m         LSR     #$05, D1
000039C8  43F8 00C7               5629m         LEA     ODN, A1     
000039CC  103C 000E               5630m         MOVE.B  #14,D0          
000039D0  4E4F                    5631m         TRAP    #15
000039D2  103C 0003               5632m         MOVE.B  #3,D0          
000039D6  4E4F                    5633m         TRAP    #15
000039D8                          5634m         ENDM
000039D8                          5635  decodeSUBcomp:
000039D8  4E75                    5636          RTS                ; Return from decodeSUBcomp subroutine
000039DA                          5637  
000039DA                          5638  
000039DA                          5639  ; ------------------------------------------------------------
000039DA                          5640  ; 6. "decodeMULS" subroutine
000039DA                          5641  ; AUTHOR
000039DA                          5642  ;
000039DA                          5643  ; TODO: DESCRIPTION MULS
000039DA                          5644  ; ------------------------------------------------------------
000039DA                          5645  decodeMULS:
000039DA                          5646m         verifyOpcode    pMULS, (A2)
000039DA  43F8 014B               5647m         LEA     PMULS, A1      ; INPUT PATTERN STRING
000039DE  3612                    5648m         MOVE.W  (A2), D3      ; INPUT VALUE
000039E0  123C 000F               5649m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000039E4                          5650m         
000039E4                          5651m LOOP_426: 
000039E4  0C11 0030               5652m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000039E8  6700 000E               5653m         BEQ     CHECKFOR0_426
000039EC  0C11 0031               5654m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000039F0  6700 0010               5655m         BEQ     CHECKFOR1_426
000039F4  6000 0012               5656m         BRA     NEXT_426      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000039F8                          5657m         
000039F8                          5658m CHECKFOR0_426: 
000039F8  0303                    5659m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000039FA  6600 3244               5660m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000039FE  6000 0008               5661m         BRA     NEXT_426
00003A02                          5662m 
00003A02                          5663m CHECKFOR1_426:
00003A02  0303                    5664m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00003A04  6700 323A               5665m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00003A08                          5666m 
00003A08                          5667m NEXT_426: 
00003A08  B23C 0000               5668m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00003A0C  6700 0008               5669m         BEQ     COMPLETE_426  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00003A10  5301                    5670m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00003A12  1819                    5671m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00003A14  60CE                    5672m         BRA     LOOP_426      ; BEGIN LOOP AGAIN
00003A16                          5673m 
00003A16                          5674m COMPLETE_426:  ; OPCODE HAS BEEN VERIFIED
00003A16                          5675m         ENDM
00003A16  43F8 0077               5676          LEA     oMULS, A1     
00003A1A  103C 000E               5677          MOVE.B  #14,D0          
00003A1E  4E4F                    5678          TRAP    #15
00003A20  4247                    5679          CLR     D7
00003A22                          5680m         prepareAdrMode  #$1, (A2)
00003A22  3C3C 0001               5681m         MOVE.W  #$1, D6      ; INPUT VALUE
00003A26  3212                    5682m         MOVE.W  (A2), D1
00003A28  BC3C 0001               5683m         CMP.B   #$01, D6
00003A2C  6700 000C               5684m         BEQ     ADRSOURCE_427    
00003A30                          5685m ADRDEST_427:
00003A30  EF49                    5686m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00003A32  E049                    5687m         LSR     #$08, D1
00003A34  EA49                    5688m         LSR     #$05, D1
00003A36  6000 000A               5689m         BRA     COMPLETE_427 
00003A3A                          5690m ADRSOURCE_427:                
00003A3A  E149                    5691m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00003A3C  E549                    5692m         LSL     #$02, D1
00003A3E  E049                    5693m         LSR     #$08, D1
00003A40  EA49                    5694m         LSR     #$05, D1
00003A42                          5695m COMPLETE_427:  ; OPCODE HAS BEEN VERIFIED
00003A42                          5696m         ENDM        
00003A42                          5697m         decodeAdrMode   (A2), D1
00003A42  3612                    5698m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00003A44  3201                    5699m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00003A46                          5700m 
00003A46  B23C 0001               5701m         CMP.B   #$01, D1
00003A4A  6700 0066               5702m         BEQ     ADRREGDIRECT_428    
00003A4E  B23C 0002               5703m         CMP.B   #$02, D1
00003A52  6700 00A0               5704m         BEQ     ADRREGINDIRECT_428  
00003A56  B23C 0003               5705m         CMP.B   #$03, D1
00003A5A  6700 0102               5706m         BEQ     ADRREGPOSTINC_428  
00003A5E  B23C 0004               5707m         CMP.B   #$04, D1
00003A62  6700 0178               5708m         BEQ     ADRREGPREDEC_428
00003A66  B23C 0007               5709m         CMP.B   #$07, D1
00003A6A  6700 01EE               5710m         BEQ     ADRABSOLUTE_428    
00003A6E                          5711m         
00003A6E                          5712m DATAREGDIRECT_428: 
00003A6E  BC3C 0001               5713m         CMP.B   #$01, D6
00003A72  6700 001E               5714m         BEQ     DATAREGDIRECTSRC_428   
00003A76                          5715m DATAREGDIRECTDEST_428: 
00003A76                          5716mm         PRINTDNDEST D3 
00003A76  3203                    5717mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00003A78  E949                    5718mm         LSL     #$04, D1
00003A7A  E049                    5719mm         LSR     #$08, D1
00003A7C  EA49                    5720mm         LSR     #$05, D1
00003A7E  43F8 00C7               5721mm         LEA     ODN, A1     
00003A82  103C 000E               5722mm         MOVE.B  #14,D0          
00003A86  4E4F                    5723mm         TRAP    #15
00003A88  103C 0003               5724mm         MOVE.B  #3,D0          
00003A8C  4E4F                    5725mm         TRAP    #15
00003A8E                          5726mm         ENDM
00003A8E  6000 0562               5727m         BRA     COMPLETE_428 
00003A92                          5728m DATAREGDIRECTSRC_428: 
00003A92                          5729mm         PRINTDNSRC D3 
00003A92  4281                    5730mm         CLR.L   D1
00003A94  3203                    5731mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003A96  E149                    5732mm         LSL     #$08, D1
00003A98  EB49                    5733mm         LSL     #$05, D1
00003A9A  E049                    5734mm         LSR     #$08, D1
00003A9C  EA49                    5735mm         LSR     #$05, D1
00003A9E  43F8 00C7               5736mm         LEA     ODN, A1     
00003AA2  103C 000E               5737mm         MOVE.B  #14,D0          
00003AA6  4E4F                    5738mm         TRAP    #15
00003AA8  103C 0003               5739mm         MOVE.B  #3,D0          
00003AAC  4E4F                    5740mm         TRAP    #15
00003AAE                          5741mm         ENDM
00003AAE  6000 0542               5742m         BRA     COMPLETE_428   
00003AB2                          5743m         
00003AB2                          5744m ADRREGDIRECT_428: 
00003AB2  BC3C 0001               5745m         CMP.B   #$01, D6
00003AB6  6700 001E               5746m         BEQ     ADRREGDIRECTSRC_428   
00003ABA                          5747m ADRREGDIRECTDEST_428:
00003ABA                          5748mm         PRINTANDEST D3
00003ABA  3203                    5749mm         MOVE.W  D3, D1
00003ABC  E949                    5750mm         LSL     #$04, D1
00003ABE  E049                    5751mm         LSR     #$08, D1
00003AC0  EA49                    5752mm         LSR     #$05, D1
00003AC2  43F8 00C9               5753mm         LEA     OAN, A1     
00003AC6  103C 000E               5754mm         MOVE.B  #14,D0          
00003ACA  4E4F                    5755mm         TRAP    #15
00003ACC  103C 0003               5756mm         MOVE.B  #3,D0          
00003AD0  4E4F                    5757mm         TRAP    #15
00003AD2                          5758mm         ENDM
00003AD2  6000 051E               5759m         BRA     COMPLETE_428   
00003AD6                          5760m ADRREGDIRECTSRC_428:
00003AD6                          5761mm         PRINTANSRC D3
00003AD6  3203                    5762mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003AD8  E149                    5763mm         LSL     #$08, D1
00003ADA  EB49                    5764mm         LSL     #$05, D1
00003ADC  E049                    5765mm         LSR     #$08, D1
00003ADE  EA49                    5766mm         LSR     #$05, D1
00003AE0  43F8 00C9               5767mm         LEA     OAN, A1     
00003AE4  103C 000E               5768mm         MOVE.B  #14,D0          
00003AE8  4E4F                    5769mm         TRAP    #15
00003AEA  103C 0003               5770mm         MOVE.B  #3,D0          
00003AEE  4E4F                    5771mm         TRAP    #15
00003AF0                          5772mm         ENDM
00003AF0  6000 0500               5773m         BRA     COMPLETE_428   
00003AF4                          5774m        
00003AF4                          5775m ADRREGINDIRECT_428:   
00003AF4  BC3C 0001               5776m         CMP.B   #$01, D6
00003AF8  6700 0032               5777m         BEQ     ADRREGINDIRECTSRC_428   
00003AFC                          5778m ADRREGINDIRECTDEST_428:
00003AFC                          5779mm         PRINTLB
00003AFC  43F8 00CB               5780mm         LEA     OLB, A1     
00003B00  103C 000E               5781mm         MOVE.B  #14,D0          
00003B04  4E4F                    5782mm         TRAP    #15
00003B06                          5783mm         ENDM
00003B06                          5784mm         PRINTANDEST D3  
00003B06  3203                    5785mm         MOVE.W  D3, D1
00003B08  E949                    5786mm         LSL     #$04, D1
00003B0A  E049                    5787mm         LSR     #$08, D1
00003B0C  EA49                    5788mm         LSR     #$05, D1
00003B0E  43F8 00C9               5789mm         LEA     OAN, A1     
00003B12  103C 000E               5790mm         MOVE.B  #14,D0          
00003B16  4E4F                    5791mm         TRAP    #15
00003B18  103C 0003               5792mm         MOVE.B  #3,D0          
00003B1C  4E4F                    5793mm         TRAP    #15
00003B1E                          5794mm         ENDM
00003B1E                          5795mm         PRINTRB
00003B1E  43F8 00CD               5796mm         LEA     ORB, A1     
00003B22  103C 000E               5797mm         MOVE.B  #14,D0          
00003B26  4E4F                    5798mm         TRAP    #15
00003B28                          5799mm         ENDM
00003B28  6000 04C8               5800m         BRA     COMPLETE_428     
00003B2C                          5801m ADRREGINDIRECTSRC_428:   
00003B2C                          5802mm         PRINTLB
00003B2C  43F8 00CB               5803mm         LEA     OLB, A1     
00003B30  103C 000E               5804mm         MOVE.B  #14,D0          
00003B34  4E4F                    5805mm         TRAP    #15
00003B36                          5806mm         ENDM
00003B36                          5807mm         PRINTANSRC D3  
00003B36  3203                    5808mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003B38  E149                    5809mm         LSL     #$08, D1
00003B3A  EB49                    5810mm         LSL     #$05, D1
00003B3C  E049                    5811mm         LSR     #$08, D1
00003B3E  EA49                    5812mm         LSR     #$05, D1
00003B40  43F8 00C9               5813mm         LEA     OAN, A1     
00003B44  103C 000E               5814mm         MOVE.B  #14,D0          
00003B48  4E4F                    5815mm         TRAP    #15
00003B4A  103C 0003               5816mm         MOVE.B  #3,D0          
00003B4E  4E4F                    5817mm         TRAP    #15
00003B50                          5818mm         ENDM
00003B50                          5819mm         PRINTRB
00003B50  43F8 00CD               5820mm         LEA     ORB, A1     
00003B54  103C 000E               5821mm         MOVE.B  #14,D0          
00003B58  4E4F                    5822mm         TRAP    #15
00003B5A                          5823mm         ENDM
00003B5A  6000 0496               5824m         BRA     COMPLETE_428   
00003B5E                          5825m         
00003B5E                          5826m ADRREGPOSTINC_428:   
00003B5E  BC3C 0001               5827m         CMP.B   #$01, D6
00003B62  6700 003C               5828m         BEQ     ADRREGPOSTINCSRC_428   
00003B66                          5829m ADRREGPOSTINCDEST_428: 
00003B66                          5830mm         PRINTLB
00003B66  43F8 00CB               5831mm         LEA     OLB, A1     
00003B6A  103C 000E               5832mm         MOVE.B  #14,D0          
00003B6E  4E4F                    5833mm         TRAP    #15
00003B70                          5834mm         ENDM
00003B70                          5835mm         PRINTANDEST D3  
00003B70  3203                    5836mm         MOVE.W  D3, D1
00003B72  E949                    5837mm         LSL     #$04, D1
00003B74  E049                    5838mm         LSR     #$08, D1
00003B76  EA49                    5839mm         LSR     #$05, D1
00003B78  43F8 00C9               5840mm         LEA     OAN, A1     
00003B7C  103C 000E               5841mm         MOVE.B  #14,D0          
00003B80  4E4F                    5842mm         TRAP    #15
00003B82  103C 0003               5843mm         MOVE.B  #3,D0          
00003B86  4E4F                    5844mm         TRAP    #15
00003B88                          5845mm         ENDM
00003B88                          5846mm         PRINTRB
00003B88  43F8 00CD               5847mm         LEA     ORB, A1     
00003B8C  103C 000E               5848mm         MOVE.B  #14,D0          
00003B90  4E4F                    5849mm         TRAP    #15
00003B92                          5850mm         ENDM
00003B92                          5851mm         PRINTPI
00003B92  43F8 00D4               5852mm         LEA     OPSTINC, A1     
00003B96  103C 000E               5853mm         MOVE.B  #14,D0          
00003B9A  4E4F                    5854mm         TRAP    #15
00003B9C                          5855mm         ENDM
00003B9C  6000 0454               5856m         BRA     COMPLETE_428  
00003BA0                          5857m ADRREGPOSTINCSRC_428:           
00003BA0                          5858mm         PRINTLB
00003BA0  43F8 00CB               5859mm         LEA     OLB, A1     
00003BA4  103C 000E               5860mm         MOVE.B  #14,D0          
00003BA8  4E4F                    5861mm         TRAP    #15
00003BAA                          5862mm         ENDM
00003BAA                          5863mm         PRINTANSRC D3  
00003BAA  3203                    5864mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003BAC  E149                    5865mm         LSL     #$08, D1
00003BAE  EB49                    5866mm         LSL     #$05, D1
00003BB0  E049                    5867mm         LSR     #$08, D1
00003BB2  EA49                    5868mm         LSR     #$05, D1
00003BB4  43F8 00C9               5869mm         LEA     OAN, A1     
00003BB8  103C 000E               5870mm         MOVE.B  #14,D0          
00003BBC  4E4F                    5871mm         TRAP    #15
00003BBE  103C 0003               5872mm         MOVE.B  #3,D0          
00003BC2  4E4F                    5873mm         TRAP    #15
00003BC4                          5874mm         ENDM
00003BC4                          5875mm         PRINTRB
00003BC4  43F8 00CD               5876mm         LEA     ORB, A1     
00003BC8  103C 000E               5877mm         MOVE.B  #14,D0          
00003BCC  4E4F                    5878mm         TRAP    #15
00003BCE                          5879mm         ENDM
00003BCE                          5880mm         PRINTPI
00003BCE  43F8 00D4               5881mm         LEA     OPSTINC, A1     
00003BD2  103C 000E               5882mm         MOVE.B  #14,D0          
00003BD6  4E4F                    5883mm         TRAP    #15
00003BD8                          5884mm         ENDM
00003BD8  6000 0418               5885m         BRA     COMPLETE_428  
00003BDC                          5886m ADRREGPREDEC_428: 
00003BDC  BC3C 0001               5887m         CMP.B   #$01, D6
00003BE0  6700 003C               5888m         BEQ     ADRREGPREDECSRC_428   
00003BE4                          5889m ADRREGPREDECDEST_428:
00003BE4                          5890mm         PRINTPD  
00003BE4  43F8 00D2               5891mm         LEA     OPREDEC, A1     
00003BE8  103C 000E               5892mm         MOVE.B  #14,D0          
00003BEC  4E4F                    5893mm         TRAP    #15
00003BEE                          5894mm         ENDM
00003BEE                          5895mm         PRINTLB
00003BEE  43F8 00CB               5896mm         LEA     OLB, A1     
00003BF2  103C 000E               5897mm         MOVE.B  #14,D0          
00003BF6  4E4F                    5898mm         TRAP    #15
00003BF8                          5899mm         ENDM
00003BF8                          5900mm         PRINTANDEST D3  
00003BF8  3203                    5901mm         MOVE.W  D3, D1
00003BFA  E949                    5902mm         LSL     #$04, D1
00003BFC  E049                    5903mm         LSR     #$08, D1
00003BFE  EA49                    5904mm         LSR     #$05, D1
00003C00  43F8 00C9               5905mm         LEA     OAN, A1     
00003C04  103C 000E               5906mm         MOVE.B  #14,D0          
00003C08  4E4F                    5907mm         TRAP    #15
00003C0A  103C 0003               5908mm         MOVE.B  #3,D0          
00003C0E  4E4F                    5909mm         TRAP    #15
00003C10                          5910mm         ENDM
00003C10                          5911mm         PRINTRB
00003C10  43F8 00CD               5912mm         LEA     ORB, A1     
00003C14  103C 000E               5913mm         MOVE.B  #14,D0          
00003C18  4E4F                    5914mm         TRAP    #15
00003C1A                          5915mm         ENDM
00003C1A  6000 03D6               5916m         BRA     COMPLETE_428   
00003C1E                          5917m ADRREGPREDECSRC_428: 
00003C1E                          5918mm         PRINTPD  
00003C1E  43F8 00D2               5919mm         LEA     OPREDEC, A1     
00003C22  103C 000E               5920mm         MOVE.B  #14,D0          
00003C26  4E4F                    5921mm         TRAP    #15
00003C28                          5922mm         ENDM
00003C28                          5923mm         PRINTLB
00003C28  43F8 00CB               5924mm         LEA     OLB, A1     
00003C2C  103C 000E               5925mm         MOVE.B  #14,D0          
00003C30  4E4F                    5926mm         TRAP    #15
00003C32                          5927mm         ENDM
00003C32                          5928mm         PRINTANSRC D3  
00003C32  3203                    5929mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00003C34  E149                    5930mm         LSL     #$08, D1
00003C36  EB49                    5931mm         LSL     #$05, D1
00003C38  E049                    5932mm         LSR     #$08, D1
00003C3A  EA49                    5933mm         LSR     #$05, D1
00003C3C  43F8 00C9               5934mm         LEA     OAN, A1     
00003C40  103C 000E               5935mm         MOVE.B  #14,D0          
00003C44  4E4F                    5936mm         TRAP    #15
00003C46  103C 0003               5937mm         MOVE.B  #3,D0          
00003C4A  4E4F                    5938mm         TRAP    #15
00003C4C                          5939mm         ENDM
00003C4C                          5940mm         PRINTRB
00003C4C  43F8 00CD               5941mm         LEA     ORB, A1     
00003C50  103C 000E               5942mm         MOVE.B  #14,D0          
00003C54  4E4F                    5943mm         TRAP    #15
00003C56                          5944mm         ENDM
00003C56  6000 039A               5945m         BRA     COMPLETE_428
00003C5A                          5946m        
00003C5A                          5947m ADRABSOLUTE_428:
00003C5A  BC3C 0001               5948m         CMP.B   #$01, D6
00003C5E  6600 0018               5949m         BNE     ADRABSOLUTEDST_428 
00003C62                          5950m         
00003C62  3A03                    5951m         MOVE.W  D3, D5
00003C64  0803 0002               5952m         BTST    #2, D3
00003C68  6600 0024               5953m         BNE     ADRIMMEDIATE_428
00003C6C  0803 0000               5954m         BTST    #0, D3
00003C70  6600 0270               5955m         BNE     ADRABSOLUTEL_428
00003C74  6000 01DA               5956m         BRA     ADRABSOLUTEW_428
00003C78                          5957m ADRABSOLUTEDST_428:
00003C78  3A03                    5958m         MOVE.W  D3, D5
00003C7A  0803 000B               5959m         BTST    #$B, D3
00003C7E  6600 000E               5960m         BNE     ADRIMMEDIATE_428
00003C82  0803 0009               5961m         BTST    #$09, D3
00003C86  6600 025A               5962m         BNE     ADRABSOLUTEL_428
00003C8A  6000 01C4               5963m         BRA     ADRABSOLUTEW_428
00003C8E                          5964m ADRIMMEDIATE_428:
00003C8E  BE3C 0001               5965m         CMP.B   #1, D7
00003C92  6700 009E               5966m         BEQ     ADRIMMEDIATEL_428
00003C96                          5967m ADRIMMEDIATEW_428:
00003C96  361A                    5968m         MOVE.W  (A2)+, D3
00003C98                          5969mm         PRINTHASH
00003C98  103C 0006               5970mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003C9C  323C 0023               5971mm         MOVE.W  #35, D1     ; AN = SIGN
00003CA0  4E4F                    5972mm         TRAP    #15         ; OUTPUT = SIGN
00003CA2                          5973mm         ENDM
00003CA2                          5974mm         PRINTSIGN
00003CA2  103C 0006               5975mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003CA6  323C 0024               5976mm         MOVE.W  #36, D1     ; AN = SIGN
00003CAA  4E4F                    5977mm         TRAP    #15         ; OUTPUT = SIGN
00003CAC                          5978mm         ENDM
00003CAC                          5979mm         ADROUT
00003CAC  3212                    5980mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CAE  E049                    5981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CB0  E849                    5982mm         LSR.W   #4, D1      
00003CB2                          5983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CB2  0C01 0009               5984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CB6  6E00 000A               5985mmm         BGT     ALPHA_458
00003CBA  0601 0030               5986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CBE  6000 0006               5987mmm         BRA     DONE_458
00003CC2  0601 0037               5988mmm ALPHA_458: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CC6  4E71                    5989mmm DONE_458: NOP
00003CC8                          5990mmm         ENDM
00003CC8  4E4F                    5991mm         TRAP    #15         ; EXECUTE OUTPUT
00003CCA                          5992mm         
00003CCA  3212                    5993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CCC  E949                    5994mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003CCE  E049                    5995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CD0  E849                    5996mm         LSR.W   #4, D1      
00003CD2                          5997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CD2  0C01 0009               5998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CD6  6E00 000A               5999mmm         BGT     ALPHA_459
00003CDA  0601 0030               6000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CDE  6000 0006               6001mmm         BRA     DONE_459
00003CE2  0601 0037               6002mmm ALPHA_459: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003CE6  4E71                    6003mmm DONE_459: NOP
00003CE8                          6004mmm         ENDM
00003CE8  4E4F                    6005mm         TRAP    #15         ; EXECUTE OUTPUT
00003CEA                          6006mm         
00003CEA  3212                    6007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003CEC  E149                    6008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003CEE  E049                    6009mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003CF0  E849                    6010mm         LSR.W   #4, D1      
00003CF2                          6011mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003CF2  0C01 0009               6012mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003CF6  6E00 000A               6013mmm         BGT     ALPHA_460
00003CFA  0601 0030               6014mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003CFE  6000 0006               6015mmm         BRA     DONE_460
00003D02  0601 0037               6016mmm ALPHA_460: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D06  4E71                    6017mmm DONE_460: NOP
00003D08                          6018mmm         ENDM
00003D08  4E4F                    6019mm         TRAP    #15         ; EXECUTE OUTPUT
00003D0A                          6020mm         
00003D0A  3212                    6021mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D0C  E149                    6022mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D0E  E949                    6023mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003D10  E049                    6024mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D12  E849                    6025mm         LSR.W   #4, D1      
00003D14                          6026mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D14  0C01 0009               6027mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D18  6E00 000A               6028mmm         BGT     ALPHA_461
00003D1C  0601 0030               6029mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D20  6000 0006               6030mmm         BRA     DONE_461
00003D24  0601 0037               6031mmm ALPHA_461: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D28  4E71                    6032mmm DONE_461: NOP
00003D2A                          6033mmm         ENDM
00003D2A  4E4F                    6034mm         TRAP    #15         ; EXECUTE OUTPUT       
00003D2C                          6035mm         ENDM 
00003D2C  3605                    6036m         MOVE.W  D5, D3
00003D2E  6000 02C2               6037m         BRA     COMPLETE_428
00003D32                          6038m ADRIMMEDIATEL_428:
00003D32  361A                    6039m         MOVE.W  (A2)+, D3
00003D34                          6040mm         PRINTHASH
00003D34  103C 0006               6041mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D38  323C 0023               6042mm         MOVE.W  #35, D1     ; AN = SIGN
00003D3C  4E4F                    6043mm         TRAP    #15         ; OUTPUT = SIGN
00003D3E                          6044mm         ENDM
00003D3E                          6045mm         PRINTSIGN
00003D3E  103C 0006               6046mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003D42  323C 0024               6047mm         MOVE.W  #36, D1     ; AN = SIGN
00003D46  4E4F                    6048mm         TRAP    #15         ; OUTPUT = SIGN
00003D48                          6049mm         ENDM
00003D48                          6050mm         ADROUT 
00003D48  3212                    6051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D4A  E049                    6052mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D4C  E849                    6053mm         LSR.W   #4, D1      
00003D4E                          6054mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D4E  0C01 0009               6055mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D52  6E00 000A               6056mmm         BGT     ALPHA_465
00003D56  0601 0030               6057mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D5A  6000 0006               6058mmm         BRA     DONE_465
00003D5E  0601 0037               6059mmm ALPHA_465: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D62  4E71                    6060mmm DONE_465: NOP
00003D64                          6061mmm         ENDM
00003D64  4E4F                    6062mm         TRAP    #15         ; EXECUTE OUTPUT
00003D66                          6063mm         
00003D66  3212                    6064mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D68  E949                    6065mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003D6A  E049                    6066mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D6C  E849                    6067mm         LSR.W   #4, D1      
00003D6E                          6068mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D6E  0C01 0009               6069mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D72  6E00 000A               6070mmm         BGT     ALPHA_466
00003D76  0601 0030               6071mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D7A  6000 0006               6072mmm         BRA     DONE_466
00003D7E  0601 0037               6073mmm ALPHA_466: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003D82  4E71                    6074mmm DONE_466: NOP
00003D84                          6075mmm         ENDM
00003D84  4E4F                    6076mm         TRAP    #15         ; EXECUTE OUTPUT
00003D86                          6077mm         
00003D86  3212                    6078mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003D88  E149                    6079mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003D8A  E049                    6080mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003D8C  E849                    6081mm         LSR.W   #4, D1      
00003D8E                          6082mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003D8E  0C01 0009               6083mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003D92  6E00 000A               6084mmm         BGT     ALPHA_467
00003D96  0601 0030               6085mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003D9A  6000 0006               6086mmm         BRA     DONE_467
00003D9E  0601 0037               6087mmm ALPHA_467: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DA2  4E71                    6088mmm DONE_467: NOP
00003DA4                          6089mmm         ENDM
00003DA4  4E4F                    6090mm         TRAP    #15         ; EXECUTE OUTPUT
00003DA6                          6091mm         
00003DA6  3212                    6092mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DA8  E149                    6093mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003DAA  E949                    6094mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003DAC  E049                    6095mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DAE  E849                    6096mm         LSR.W   #4, D1      
00003DB0                          6097mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DB0  0C01 0009               6098mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DB4  6E00 000A               6099mmm         BGT     ALPHA_468
00003DB8  0601 0030               6100mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DBC  6000 0006               6101mmm         BRA     DONE_468
00003DC0  0601 0037               6102mmm ALPHA_468: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DC4  4E71                    6103mmm DONE_468: NOP
00003DC6                          6104mmm         ENDM
00003DC6  4E4F                    6105mm         TRAP    #15         ; EXECUTE OUTPUT       
00003DC8                          6106mm         ENDM 
00003DC8  361A                    6107m         MOVE.W  (A2)+, D3
00003DCA                          6108mm         ADROUT
00003DCA  3212                    6109mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DCC  E049                    6110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DCE  E849                    6111mm         LSR.W   #4, D1      
00003DD0                          6112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DD0  0C01 0009               6113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DD4  6E00 000A               6114mmm         BGT     ALPHA_470
00003DD8  0601 0030               6115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DDC  6000 0006               6116mmm         BRA     DONE_470
00003DE0  0601 0037               6117mmm ALPHA_470: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003DE4  4E71                    6118mmm DONE_470: NOP
00003DE6                          6119mmm         ENDM
00003DE6  4E4F                    6120mm         TRAP    #15         ; EXECUTE OUTPUT
00003DE8                          6121mm         
00003DE8  3212                    6122mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003DEA  E949                    6123mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003DEC  E049                    6124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003DEE  E849                    6125mm         LSR.W   #4, D1      
00003DF0                          6126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003DF0  0C01 0009               6127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003DF4  6E00 000A               6128mmm         BGT     ALPHA_471
00003DF8  0601 0030               6129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003DFC  6000 0006               6130mmm         BRA     DONE_471
00003E00  0601 0037               6131mmm ALPHA_471: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E04  4E71                    6132mmm DONE_471: NOP
00003E06                          6133mmm         ENDM
00003E06  4E4F                    6134mm         TRAP    #15         ; EXECUTE OUTPUT
00003E08                          6135mm         
00003E08  3212                    6136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E0A  E149                    6137mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E0C  E049                    6138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E0E  E849                    6139mm         LSR.W   #4, D1      
00003E10                          6140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E10  0C01 0009               6141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E14  6E00 000A               6142mmm         BGT     ALPHA_472
00003E18  0601 0030               6143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E1C  6000 0006               6144mmm         BRA     DONE_472
00003E20  0601 0037               6145mmm ALPHA_472: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E24  4E71                    6146mmm DONE_472: NOP
00003E26                          6147mmm         ENDM
00003E26  4E4F                    6148mm         TRAP    #15         ; EXECUTE OUTPUT
00003E28                          6149mm         
00003E28  3212                    6150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E2A  E149                    6151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E2C  E949                    6152mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003E2E  E049                    6153mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E30  E849                    6154mm         LSR.W   #4, D1      
00003E32                          6155mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E32  0C01 0009               6156mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E36  6E00 000A               6157mmm         BGT     ALPHA_473
00003E3A  0601 0030               6158mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E3E  6000 0006               6159mmm         BRA     DONE_473
00003E42  0601 0037               6160mmm ALPHA_473: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E46  4E71                    6161mmm DONE_473: NOP
00003E48                          6162mmm         ENDM
00003E48  4E4F                    6163mm         TRAP    #15         ; EXECUTE OUTPUT       
00003E4A                          6164mm         ENDM 
00003E4A  3605                    6165m         MOVE.W  D5, D3
00003E4C  6000 01A4               6166m         BRA     COMPLETE_428 
00003E50                          6167m ADRABSOLUTEW_428:     
00003E50  361A                    6168m         MOVE.W  (A2)+, D3
00003E52                          6169mm         PRINTSIGN
00003E52  103C 0006               6170mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003E56  323C 0024               6171mm         MOVE.W  #36, D1     ; AN = SIGN
00003E5A  4E4F                    6172mm         TRAP    #15         ; OUTPUT = SIGN
00003E5C                          6173mm         ENDM
00003E5C                          6174mm         ADROUT
00003E5C  3212                    6175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E5E  E049                    6176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E60  E849                    6177mm         LSR.W   #4, D1      
00003E62                          6178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E62  0C01 0009               6179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E66  6E00 000A               6180mmm         BGT     ALPHA_476
00003E6A  0601 0030               6181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E6E  6000 0006               6182mmm         BRA     DONE_476
00003E72  0601 0037               6183mmm ALPHA_476: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E76  4E71                    6184mmm DONE_476: NOP
00003E78                          6185mmm         ENDM
00003E78  4E4F                    6186mm         TRAP    #15         ; EXECUTE OUTPUT
00003E7A                          6187mm         
00003E7A  3212                    6188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E7C  E949                    6189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003E7E  E049                    6190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003E80  E849                    6191mm         LSR.W   #4, D1      
00003E82                          6192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003E82  0C01 0009               6193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003E86  6E00 000A               6194mmm         BGT     ALPHA_477
00003E8A  0601 0030               6195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003E8E  6000 0006               6196mmm         BRA     DONE_477
00003E92  0601 0037               6197mmm ALPHA_477: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003E96  4E71                    6198mmm DONE_477: NOP
00003E98                          6199mmm         ENDM
00003E98  4E4F                    6200mm         TRAP    #15         ; EXECUTE OUTPUT
00003E9A                          6201mm         
00003E9A  3212                    6202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003E9C  E149                    6203mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003E9E  E049                    6204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EA0  E849                    6205mm         LSR.W   #4, D1      
00003EA2                          6206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EA2  0C01 0009               6207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EA6  6E00 000A               6208mmm         BGT     ALPHA_478
00003EAA  0601 0030               6209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003EAE  6000 0006               6210mmm         BRA     DONE_478
00003EB2  0601 0037               6211mmm ALPHA_478: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003EB6  4E71                    6212mmm DONE_478: NOP
00003EB8                          6213mmm         ENDM
00003EB8  4E4F                    6214mm         TRAP    #15         ; EXECUTE OUTPUT
00003EBA                          6215mm         
00003EBA  3212                    6216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EBC  E149                    6217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003EBE  E949                    6218mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003EC0  E049                    6219mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EC2  E849                    6220mm         LSR.W   #4, D1      
00003EC4                          6221mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EC4  0C01 0009               6222mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EC8  6E00 000A               6223mmm         BGT     ALPHA_479
00003ECC  0601 0030               6224mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003ED0  6000 0006               6225mmm         BRA     DONE_479
00003ED4  0601 0037               6226mmm ALPHA_479: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003ED8  4E71                    6227mmm DONE_479: NOP
00003EDA                          6228mmm         ENDM
00003EDA  4E4F                    6229mm         TRAP    #15         ; EXECUTE OUTPUT       
00003EDC                          6230mm         ENDM 
00003EDC  3605                    6231m         MOVE.W  D5, D3
00003EDE  6000 0112               6232m         BRA     COMPLETE_428  
00003EE2                          6233m ADRABSOLUTEL_428:  
00003EE2  361A                    6234m         MOVE.W  (A2)+, D3
00003EE4                          6235mm         PRINTSIGN
00003EE4  103C 0006               6236mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00003EE8  323C 0024               6237mm         MOVE.W  #36, D1     ; AN = SIGN
00003EEC  4E4F                    6238mm         TRAP    #15         ; OUTPUT = SIGN
00003EEE                          6239mm         ENDM
00003EEE                          6240mm         ADROUT 
00003EEE  3212                    6241mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003EF0  E049                    6242mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003EF2  E849                    6243mm         LSR.W   #4, D1      
00003EF4                          6244mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003EF4  0C01 0009               6245mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003EF8  6E00 000A               6246mmm         BGT     ALPHA_482
00003EFC  0601 0030               6247mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F00  6000 0006               6248mmm         BRA     DONE_482
00003F04  0601 0037               6249mmm ALPHA_482: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F08  4E71                    6250mmm DONE_482: NOP
00003F0A                          6251mmm         ENDM
00003F0A  4E4F                    6252mm         TRAP    #15         ; EXECUTE OUTPUT
00003F0C                          6253mm         
00003F0C  3212                    6254mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F0E  E949                    6255mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F10  E049                    6256mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F12  E849                    6257mm         LSR.W   #4, D1      
00003F14                          6258mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F14  0C01 0009               6259mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F18  6E00 000A               6260mmm         BGT     ALPHA_483
00003F1C  0601 0030               6261mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F20  6000 0006               6262mmm         BRA     DONE_483
00003F24  0601 0037               6263mmm ALPHA_483: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F28  4E71                    6264mmm DONE_483: NOP
00003F2A                          6265mmm         ENDM
00003F2A  4E4F                    6266mm         TRAP    #15         ; EXECUTE OUTPUT
00003F2C                          6267mm         
00003F2C  3212                    6268mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F2E  E149                    6269mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F30  E049                    6270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F32  E849                    6271mm         LSR.W   #4, D1      
00003F34                          6272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F34  0C01 0009               6273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F38  6E00 000A               6274mmm         BGT     ALPHA_484
00003F3C  0601 0030               6275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F40  6000 0006               6276mmm         BRA     DONE_484
00003F44  0601 0037               6277mmm ALPHA_484: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F48  4E71                    6278mmm DONE_484: NOP
00003F4A                          6279mmm         ENDM
00003F4A  4E4F                    6280mm         TRAP    #15         ; EXECUTE OUTPUT
00003F4C                          6281mm         
00003F4C  3212                    6282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F4E  E149                    6283mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003F50  E949                    6284mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003F52  E049                    6285mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F54  E849                    6286mm         LSR.W   #4, D1      
00003F56                          6287mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F56  0C01 0009               6288mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F5A  6E00 000A               6289mmm         BGT     ALPHA_485
00003F5E  0601 0030               6290mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F62  6000 0006               6291mmm         BRA     DONE_485
00003F66  0601 0037               6292mmm ALPHA_485: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F6A  4E71                    6293mmm DONE_485: NOP
00003F6C                          6294mmm         ENDM
00003F6C  4E4F                    6295mm         TRAP    #15         ; EXECUTE OUTPUT       
00003F6E                          6296mm         ENDM 
00003F6E  361A                    6297m         MOVE.W  (A2)+, D3
00003F70                          6298mm         ADROUT
00003F70  3212                    6299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F72  E049                    6300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F74  E849                    6301mm         LSR.W   #4, D1      
00003F76                          6302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F76  0C01 0009               6303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F7A  6E00 000A               6304mmm         BGT     ALPHA_487
00003F7E  0601 0030               6305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003F82  6000 0006               6306mmm         BRA     DONE_487
00003F86  0601 0037               6307mmm ALPHA_487: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003F8A  4E71                    6308mmm DONE_487: NOP
00003F8C                          6309mmm         ENDM
00003F8C  4E4F                    6310mm         TRAP    #15         ; EXECUTE OUTPUT
00003F8E                          6311mm         
00003F8E  3212                    6312mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003F90  E949                    6313mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00003F92  E049                    6314mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003F94  E849                    6315mm         LSR.W   #4, D1      
00003F96                          6316mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003F96  0C01 0009               6317mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003F9A  6E00 000A               6318mmm         BGT     ALPHA_488
00003F9E  0601 0030               6319mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FA2  6000 0006               6320mmm         BRA     DONE_488
00003FA6  0601 0037               6321mmm ALPHA_488: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FAA  4E71                    6322mmm DONE_488: NOP
00003FAC                          6323mmm         ENDM
00003FAC  4E4F                    6324mm         TRAP    #15         ; EXECUTE OUTPUT
00003FAE                          6325mm         
00003FAE  3212                    6326mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FB0  E149                    6327mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FB2  E049                    6328mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FB4  E849                    6329mm         LSR.W   #4, D1      
00003FB6                          6330mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FB6  0C01 0009               6331mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FBA  6E00 000A               6332mmm         BGT     ALPHA_489
00003FBE  0601 0030               6333mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FC2  6000 0006               6334mmm         BRA     DONE_489
00003FC6  0601 0037               6335mmm ALPHA_489: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FCA  4E71                    6336mmm DONE_489: NOP
00003FCC                          6337mmm         ENDM
00003FCC  4E4F                    6338mm         TRAP    #15         ; EXECUTE OUTPUT
00003FCE                          6339mm         
00003FCE  3212                    6340mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00003FD0  E149                    6341mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00003FD2  E949                    6342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00003FD4  E049                    6343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00003FD6  E849                    6344mm         LSR.W   #4, D1      
00003FD8                          6345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00003FD8  0C01 0009               6346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00003FDC  6E00 000A               6347mmm         BGT     ALPHA_490
00003FE0  0601 0030               6348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00003FE4  6000 0006               6349mmm         BRA     DONE_490
00003FE8  0601 0037               6350mmm ALPHA_490: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00003FEC  4E71                    6351mmm DONE_490: NOP
00003FEE                          6352mmm         ENDM
00003FEE  4E4F                    6353mm         TRAP    #15         ; EXECUTE OUTPUT       
00003FF0                          6354mm         ENDM 
00003FF0  3605                    6355m         MOVE.W  D5, D3
00003FF2                          6356m 
00003FF2                          6357m COMPLETE_428:  ; OPCODE HAS BEEN VERIFIED
00003FF2                          6358m         ENDM
00003FF2                          6359m         printComma
00003FF2  43F8 00CF               6360m         LEA     OCOMMA, A1     
00003FF6  103C 000E               6361m         MOVE.B  #14,D0          
00003FFA  4E4F                    6362m         TRAP    #15
00003FFC                          6363m         ENDM
00003FFC                          6364m         printDnDest     D3
00003FFC  3203                    6365m         MOVE.W  D3, D1      ; BITS 9 TO 11
00003FFE  E949                    6366m         LSL     #$04, D1
00004000  E049                    6367m         LSR     #$08, D1
00004002  EA49                    6368m         LSR     #$05, D1
00004004  43F8 00C7               6369m         LEA     ODN, A1     
00004008  103C 000E               6370m         MOVE.B  #14,D0          
0000400C  4E4F                    6371m         TRAP    #15
0000400E  103C 0003               6372m         MOVE.B  #3,D0          
00004012  4E4F                    6373m         TRAP    #15
00004014                          6374m         ENDM
00004014  4E75                    6375          RTS                 ; Return from decodeMULS subroutine
00004016                          6376          
00004016                          6377  ; ------------------------------------------------------------
00004016                          6378  ; 7. "decodeDIVU" subroutine
00004016                          6379  ; AUTHOR
00004016                          6380  ;
00004016                          6381  ; TODO: DESCRIPTION DIVU
00004016                          6382  ; ------------------------------------------------------------
00004016                          6383  decodeDIVU:
00004016                          6384m         verifyOpcode    pDIVU, (A2)
00004016  43F8 015C               6385m         LEA     PDIVU, A1      ; INPUT PATTERN STRING
0000401A  3612                    6386m         MOVE.W  (A2), D3      ; INPUT VALUE
0000401C  123C 000F               6387m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004020                          6388m         
00004020                          6389m LOOP_493: 
00004020  0C11 0030               6390m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004024  6700 000E               6391m         BEQ     CHECKFOR0_493
00004028  0C11 0031               6392m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000402C  6700 0010               6393m         BEQ     CHECKFOR1_493
00004030  6000 0012               6394m         BRA     NEXT_493      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004034                          6395m         
00004034                          6396m CHECKFOR0_493: 
00004034  0303                    6397m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004036  6600 2C08               6398m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000403A  6000 0008               6399m         BRA     NEXT_493
0000403E                          6400m 
0000403E                          6401m CHECKFOR1_493:
0000403E  0303                    6402m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004040  6700 2BFE               6403m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004044                          6404m 
00004044                          6405m NEXT_493: 
00004044  B23C 0000               6406m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004048  6700 0008               6407m         BEQ     COMPLETE_493  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000404C  5301                    6408m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000404E  1819                    6409m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004050  60CE                    6410m         BRA     LOOP_493      ; BEGIN LOOP AGAIN
00004052                          6411m 
00004052                          6412m COMPLETE_493:  ; OPCODE HAS BEEN VERIFIED
00004052                          6413m         ENDM
00004052  43F8 007F               6414          LEA     oDIVU, A1     
00004056  103C 000E               6415          MOVE.B  #14,D0          
0000405A  4E4F                    6416          TRAP    #15
0000405C  4247                    6417          CLR     D7
0000405E                          6418m         prepareAdrMode  #$1, (A2)
0000405E  3C3C 0001               6419m         MOVE.W  #$1, D6      ; INPUT VALUE
00004062  3212                    6420m         MOVE.W  (A2), D1
00004064  BC3C 0001               6421m         CMP.B   #$01, D6
00004068  6700 000C               6422m         BEQ     ADRSOURCE_494    
0000406C                          6423m ADRDEST_494:
0000406C  EF49                    6424m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
0000406E  E049                    6425m         LSR     #$08, D1
00004070  EA49                    6426m         LSR     #$05, D1
00004072  6000 000A               6427m         BRA     COMPLETE_494 
00004076                          6428m ADRSOURCE_494:                
00004076  E149                    6429m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004078  E549                    6430m         LSL     #$02, D1
0000407A  E049                    6431m         LSR     #$08, D1
0000407C  EA49                    6432m         LSR     #$05, D1
0000407E                          6433m COMPLETE_494:  ; OPCODE HAS BEEN VERIFIED
0000407E                          6434m         ENDM        
0000407E                          6435m         decodeAdrMode   (A2), D1
0000407E  3612                    6436m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004080  3201                    6437m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004082                          6438m 
00004082  B23C 0001               6439m         CMP.B   #$01, D1
00004086  6700 0066               6440m         BEQ     ADRREGDIRECT_495    
0000408A  B23C 0002               6441m         CMP.B   #$02, D1
0000408E  6700 00A0               6442m         BEQ     ADRREGINDIRECT_495  
00004092  B23C 0003               6443m         CMP.B   #$03, D1
00004096  6700 0102               6444m         BEQ     ADRREGPOSTINC_495  
0000409A  B23C 0004               6445m         CMP.B   #$04, D1
0000409E  6700 0178               6446m         BEQ     ADRREGPREDEC_495
000040A2  B23C 0007               6447m         CMP.B   #$07, D1
000040A6  6700 01EE               6448m         BEQ     ADRABSOLUTE_495    
000040AA                          6449m         
000040AA                          6450m DATAREGDIRECT_495: 
000040AA  BC3C 0001               6451m         CMP.B   #$01, D6
000040AE  6700 001E               6452m         BEQ     DATAREGDIRECTSRC_495   
000040B2                          6453m DATAREGDIRECTDEST_495: 
000040B2                          6454mm         PRINTDNDEST D3 
000040B2  3203                    6455mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000040B4  E949                    6456mm         LSL     #$04, D1
000040B6  E049                    6457mm         LSR     #$08, D1
000040B8  EA49                    6458mm         LSR     #$05, D1
000040BA  43F8 00C7               6459mm         LEA     ODN, A1     
000040BE  103C 000E               6460mm         MOVE.B  #14,D0          
000040C2  4E4F                    6461mm         TRAP    #15
000040C4  103C 0003               6462mm         MOVE.B  #3,D0          
000040C8  4E4F                    6463mm         TRAP    #15
000040CA                          6464mm         ENDM
000040CA  6000 0562               6465m         BRA     COMPLETE_495 
000040CE                          6466m DATAREGDIRECTSRC_495: 
000040CE                          6467mm         PRINTDNSRC D3 
000040CE  4281                    6468mm         CLR.L   D1
000040D0  3203                    6469mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000040D2  E149                    6470mm         LSL     #$08, D1
000040D4  EB49                    6471mm         LSL     #$05, D1
000040D6  E049                    6472mm         LSR     #$08, D1
000040D8  EA49                    6473mm         LSR     #$05, D1
000040DA  43F8 00C7               6474mm         LEA     ODN, A1     
000040DE  103C 000E               6475mm         MOVE.B  #14,D0          
000040E2  4E4F                    6476mm         TRAP    #15
000040E4  103C 0003               6477mm         MOVE.B  #3,D0          
000040E8  4E4F                    6478mm         TRAP    #15
000040EA                          6479mm         ENDM
000040EA  6000 0542               6480m         BRA     COMPLETE_495   
000040EE                          6481m         
000040EE                          6482m ADRREGDIRECT_495: 
000040EE  BC3C 0001               6483m         CMP.B   #$01, D6
000040F2  6700 001E               6484m         BEQ     ADRREGDIRECTSRC_495   
000040F6                          6485m ADRREGDIRECTDEST_495:
000040F6                          6486mm         PRINTANDEST D3
000040F6  3203                    6487mm         MOVE.W  D3, D1
000040F8  E949                    6488mm         LSL     #$04, D1
000040FA  E049                    6489mm         LSR     #$08, D1
000040FC  EA49                    6490mm         LSR     #$05, D1
000040FE  43F8 00C9               6491mm         LEA     OAN, A1     
00004102  103C 000E               6492mm         MOVE.B  #14,D0          
00004106  4E4F                    6493mm         TRAP    #15
00004108  103C 0003               6494mm         MOVE.B  #3,D0          
0000410C  4E4F                    6495mm         TRAP    #15
0000410E                          6496mm         ENDM
0000410E  6000 051E               6497m         BRA     COMPLETE_495   
00004112                          6498m ADRREGDIRECTSRC_495:
00004112                          6499mm         PRINTANSRC D3
00004112  3203                    6500mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004114  E149                    6501mm         LSL     #$08, D1
00004116  EB49                    6502mm         LSL     #$05, D1
00004118  E049                    6503mm         LSR     #$08, D1
0000411A  EA49                    6504mm         LSR     #$05, D1
0000411C  43F8 00C9               6505mm         LEA     OAN, A1     
00004120  103C 000E               6506mm         MOVE.B  #14,D0          
00004124  4E4F                    6507mm         TRAP    #15
00004126  103C 0003               6508mm         MOVE.B  #3,D0          
0000412A  4E4F                    6509mm         TRAP    #15
0000412C                          6510mm         ENDM
0000412C  6000 0500               6511m         BRA     COMPLETE_495   
00004130                          6512m        
00004130                          6513m ADRREGINDIRECT_495:   
00004130  BC3C 0001               6514m         CMP.B   #$01, D6
00004134  6700 0032               6515m         BEQ     ADRREGINDIRECTSRC_495   
00004138                          6516m ADRREGINDIRECTDEST_495:
00004138                          6517mm         PRINTLB
00004138  43F8 00CB               6518mm         LEA     OLB, A1     
0000413C  103C 000E               6519mm         MOVE.B  #14,D0          
00004140  4E4F                    6520mm         TRAP    #15
00004142                          6521mm         ENDM
00004142                          6522mm         PRINTANDEST D3  
00004142  3203                    6523mm         MOVE.W  D3, D1
00004144  E949                    6524mm         LSL     #$04, D1
00004146  E049                    6525mm         LSR     #$08, D1
00004148  EA49                    6526mm         LSR     #$05, D1
0000414A  43F8 00C9               6527mm         LEA     OAN, A1     
0000414E  103C 000E               6528mm         MOVE.B  #14,D0          
00004152  4E4F                    6529mm         TRAP    #15
00004154  103C 0003               6530mm         MOVE.B  #3,D0          
00004158  4E4F                    6531mm         TRAP    #15
0000415A                          6532mm         ENDM
0000415A                          6533mm         PRINTRB
0000415A  43F8 00CD               6534mm         LEA     ORB, A1     
0000415E  103C 000E               6535mm         MOVE.B  #14,D0          
00004162  4E4F                    6536mm         TRAP    #15
00004164                          6537mm         ENDM
00004164  6000 04C8               6538m         BRA     COMPLETE_495     
00004168                          6539m ADRREGINDIRECTSRC_495:   
00004168                          6540mm         PRINTLB
00004168  43F8 00CB               6541mm         LEA     OLB, A1     
0000416C  103C 000E               6542mm         MOVE.B  #14,D0          
00004170  4E4F                    6543mm         TRAP    #15
00004172                          6544mm         ENDM
00004172                          6545mm         PRINTANSRC D3  
00004172  3203                    6546mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004174  E149                    6547mm         LSL     #$08, D1
00004176  EB49                    6548mm         LSL     #$05, D1
00004178  E049                    6549mm         LSR     #$08, D1
0000417A  EA49                    6550mm         LSR     #$05, D1
0000417C  43F8 00C9               6551mm         LEA     OAN, A1     
00004180  103C 000E               6552mm         MOVE.B  #14,D0          
00004184  4E4F                    6553mm         TRAP    #15
00004186  103C 0003               6554mm         MOVE.B  #3,D0          
0000418A  4E4F                    6555mm         TRAP    #15
0000418C                          6556mm         ENDM
0000418C                          6557mm         PRINTRB
0000418C  43F8 00CD               6558mm         LEA     ORB, A1     
00004190  103C 000E               6559mm         MOVE.B  #14,D0          
00004194  4E4F                    6560mm         TRAP    #15
00004196                          6561mm         ENDM
00004196  6000 0496               6562m         BRA     COMPLETE_495   
0000419A                          6563m         
0000419A                          6564m ADRREGPOSTINC_495:   
0000419A  BC3C 0001               6565m         CMP.B   #$01, D6
0000419E  6700 003C               6566m         BEQ     ADRREGPOSTINCSRC_495   
000041A2                          6567m ADRREGPOSTINCDEST_495: 
000041A2                          6568mm         PRINTLB
000041A2  43F8 00CB               6569mm         LEA     OLB, A1     
000041A6  103C 000E               6570mm         MOVE.B  #14,D0          
000041AA  4E4F                    6571mm         TRAP    #15
000041AC                          6572mm         ENDM
000041AC                          6573mm         PRINTANDEST D3  
000041AC  3203                    6574mm         MOVE.W  D3, D1
000041AE  E949                    6575mm         LSL     #$04, D1
000041B0  E049                    6576mm         LSR     #$08, D1
000041B2  EA49                    6577mm         LSR     #$05, D1
000041B4  43F8 00C9               6578mm         LEA     OAN, A1     
000041B8  103C 000E               6579mm         MOVE.B  #14,D0          
000041BC  4E4F                    6580mm         TRAP    #15
000041BE  103C 0003               6581mm         MOVE.B  #3,D0          
000041C2  4E4F                    6582mm         TRAP    #15
000041C4                          6583mm         ENDM
000041C4                          6584mm         PRINTRB
000041C4  43F8 00CD               6585mm         LEA     ORB, A1     
000041C8  103C 000E               6586mm         MOVE.B  #14,D0          
000041CC  4E4F                    6587mm         TRAP    #15
000041CE                          6588mm         ENDM
000041CE                          6589mm         PRINTPI
000041CE  43F8 00D4               6590mm         LEA     OPSTINC, A1     
000041D2  103C 000E               6591mm         MOVE.B  #14,D0          
000041D6  4E4F                    6592mm         TRAP    #15
000041D8                          6593mm         ENDM
000041D8  6000 0454               6594m         BRA     COMPLETE_495  
000041DC                          6595m ADRREGPOSTINCSRC_495:           
000041DC                          6596mm         PRINTLB
000041DC  43F8 00CB               6597mm         LEA     OLB, A1     
000041E0  103C 000E               6598mm         MOVE.B  #14,D0          
000041E4  4E4F                    6599mm         TRAP    #15
000041E6                          6600mm         ENDM
000041E6                          6601mm         PRINTANSRC D3  
000041E6  3203                    6602mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000041E8  E149                    6603mm         LSL     #$08, D1
000041EA  EB49                    6604mm         LSL     #$05, D1
000041EC  E049                    6605mm         LSR     #$08, D1
000041EE  EA49                    6606mm         LSR     #$05, D1
000041F0  43F8 00C9               6607mm         LEA     OAN, A1     
000041F4  103C 000E               6608mm         MOVE.B  #14,D0          
000041F8  4E4F                    6609mm         TRAP    #15
000041FA  103C 0003               6610mm         MOVE.B  #3,D0          
000041FE  4E4F                    6611mm         TRAP    #15
00004200                          6612mm         ENDM
00004200                          6613mm         PRINTRB
00004200  43F8 00CD               6614mm         LEA     ORB, A1     
00004204  103C 000E               6615mm         MOVE.B  #14,D0          
00004208  4E4F                    6616mm         TRAP    #15
0000420A                          6617mm         ENDM
0000420A                          6618mm         PRINTPI
0000420A  43F8 00D4               6619mm         LEA     OPSTINC, A1     
0000420E  103C 000E               6620mm         MOVE.B  #14,D0          
00004212  4E4F                    6621mm         TRAP    #15
00004214                          6622mm         ENDM
00004214  6000 0418               6623m         BRA     COMPLETE_495  
00004218                          6624m ADRREGPREDEC_495: 
00004218  BC3C 0001               6625m         CMP.B   #$01, D6
0000421C  6700 003C               6626m         BEQ     ADRREGPREDECSRC_495   
00004220                          6627m ADRREGPREDECDEST_495:
00004220                          6628mm         PRINTPD  
00004220  43F8 00D2               6629mm         LEA     OPREDEC, A1     
00004224  103C 000E               6630mm         MOVE.B  #14,D0          
00004228  4E4F                    6631mm         TRAP    #15
0000422A                          6632mm         ENDM
0000422A                          6633mm         PRINTLB
0000422A  43F8 00CB               6634mm         LEA     OLB, A1     
0000422E  103C 000E               6635mm         MOVE.B  #14,D0          
00004232  4E4F                    6636mm         TRAP    #15
00004234                          6637mm         ENDM
00004234                          6638mm         PRINTANDEST D3  
00004234  3203                    6639mm         MOVE.W  D3, D1
00004236  E949                    6640mm         LSL     #$04, D1
00004238  E049                    6641mm         LSR     #$08, D1
0000423A  EA49                    6642mm         LSR     #$05, D1
0000423C  43F8 00C9               6643mm         LEA     OAN, A1     
00004240  103C 000E               6644mm         MOVE.B  #14,D0          
00004244  4E4F                    6645mm         TRAP    #15
00004246  103C 0003               6646mm         MOVE.B  #3,D0          
0000424A  4E4F                    6647mm         TRAP    #15
0000424C                          6648mm         ENDM
0000424C                          6649mm         PRINTRB
0000424C  43F8 00CD               6650mm         LEA     ORB, A1     
00004250  103C 000E               6651mm         MOVE.B  #14,D0          
00004254  4E4F                    6652mm         TRAP    #15
00004256                          6653mm         ENDM
00004256  6000 03D6               6654m         BRA     COMPLETE_495   
0000425A                          6655m ADRREGPREDECSRC_495: 
0000425A                          6656mm         PRINTPD  
0000425A  43F8 00D2               6657mm         LEA     OPREDEC, A1     
0000425E  103C 000E               6658mm         MOVE.B  #14,D0          
00004262  4E4F                    6659mm         TRAP    #15
00004264                          6660mm         ENDM
00004264                          6661mm         PRINTLB
00004264  43F8 00CB               6662mm         LEA     OLB, A1     
00004268  103C 000E               6663mm         MOVE.B  #14,D0          
0000426C  4E4F                    6664mm         TRAP    #15
0000426E                          6665mm         ENDM
0000426E                          6666mm         PRINTANSRC D3  
0000426E  3203                    6667mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004270  E149                    6668mm         LSL     #$08, D1
00004272  EB49                    6669mm         LSL     #$05, D1
00004274  E049                    6670mm         LSR     #$08, D1
00004276  EA49                    6671mm         LSR     #$05, D1
00004278  43F8 00C9               6672mm         LEA     OAN, A1     
0000427C  103C 000E               6673mm         MOVE.B  #14,D0          
00004280  4E4F                    6674mm         TRAP    #15
00004282  103C 0003               6675mm         MOVE.B  #3,D0          
00004286  4E4F                    6676mm         TRAP    #15
00004288                          6677mm         ENDM
00004288                          6678mm         PRINTRB
00004288  43F8 00CD               6679mm         LEA     ORB, A1     
0000428C  103C 000E               6680mm         MOVE.B  #14,D0          
00004290  4E4F                    6681mm         TRAP    #15
00004292                          6682mm         ENDM
00004292  6000 039A               6683m         BRA     COMPLETE_495
00004296                          6684m        
00004296                          6685m ADRABSOLUTE_495:
00004296  BC3C 0001               6686m         CMP.B   #$01, D6
0000429A  6600 0018               6687m         BNE     ADRABSOLUTEDST_495 
0000429E                          6688m         
0000429E  3A03                    6689m         MOVE.W  D3, D5
000042A0  0803 0002               6690m         BTST    #2, D3
000042A4  6600 0024               6691m         BNE     ADRIMMEDIATE_495
000042A8  0803 0000               6692m         BTST    #0, D3
000042AC  6600 0270               6693m         BNE     ADRABSOLUTEL_495
000042B0  6000 01DA               6694m         BRA     ADRABSOLUTEW_495
000042B4                          6695m ADRABSOLUTEDST_495:
000042B4  3A03                    6696m         MOVE.W  D3, D5
000042B6  0803 000B               6697m         BTST    #$B, D3
000042BA  6600 000E               6698m         BNE     ADRIMMEDIATE_495
000042BE  0803 0009               6699m         BTST    #$09, D3
000042C2  6600 025A               6700m         BNE     ADRABSOLUTEL_495
000042C6  6000 01C4               6701m         BRA     ADRABSOLUTEW_495
000042CA                          6702m ADRIMMEDIATE_495:
000042CA  BE3C 0001               6703m         CMP.B   #1, D7
000042CE  6700 009E               6704m         BEQ     ADRIMMEDIATEL_495
000042D2                          6705m ADRIMMEDIATEW_495:
000042D2  361A                    6706m         MOVE.W  (A2)+, D3
000042D4                          6707mm         PRINTHASH
000042D4  103C 0006               6708mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042D8  323C 0023               6709mm         MOVE.W  #35, D1     ; AN = SIGN
000042DC  4E4F                    6710mm         TRAP    #15         ; OUTPUT = SIGN
000042DE                          6711mm         ENDM
000042DE                          6712mm         PRINTSIGN
000042DE  103C 0006               6713mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000042E2  323C 0024               6714mm         MOVE.W  #36, D1     ; AN = SIGN
000042E6  4E4F                    6715mm         TRAP    #15         ; OUTPUT = SIGN
000042E8                          6716mm         ENDM
000042E8                          6717mm         ADROUT
000042E8  3212                    6718mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000042EA  E049                    6719mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000042EC  E849                    6720mm         LSR.W   #4, D1      
000042EE                          6721mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000042EE  0C01 0009               6722mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000042F2  6E00 000A               6723mmm         BGT     ALPHA_525
000042F6  0601 0030               6724mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000042FA  6000 0006               6725mmm         BRA     DONE_525
000042FE  0601 0037               6726mmm ALPHA_525: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004302  4E71                    6727mmm DONE_525: NOP
00004304                          6728mmm         ENDM
00004304  4E4F                    6729mm         TRAP    #15         ; EXECUTE OUTPUT
00004306                          6730mm         
00004306  3212                    6731mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004308  E949                    6732mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000430A  E049                    6733mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000430C  E849                    6734mm         LSR.W   #4, D1      
0000430E                          6735mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000430E  0C01 0009               6736mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004312  6E00 000A               6737mmm         BGT     ALPHA_526
00004316  0601 0030               6738mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000431A  6000 0006               6739mmm         BRA     DONE_526
0000431E  0601 0037               6740mmm ALPHA_526: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004322  4E71                    6741mmm DONE_526: NOP
00004324                          6742mmm         ENDM
00004324  4E4F                    6743mm         TRAP    #15         ; EXECUTE OUTPUT
00004326                          6744mm         
00004326  3212                    6745mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004328  E149                    6746mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000432A  E049                    6747mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000432C  E849                    6748mm         LSR.W   #4, D1      
0000432E                          6749mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000432E  0C01 0009               6750mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004332  6E00 000A               6751mmm         BGT     ALPHA_527
00004336  0601 0030               6752mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000433A  6000 0006               6753mmm         BRA     DONE_527
0000433E  0601 0037               6754mmm ALPHA_527: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004342  4E71                    6755mmm DONE_527: NOP
00004344                          6756mmm         ENDM
00004344  4E4F                    6757mm         TRAP    #15         ; EXECUTE OUTPUT
00004346                          6758mm         
00004346  3212                    6759mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004348  E149                    6760mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000434A  E949                    6761mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000434C  E049                    6762mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000434E  E849                    6763mm         LSR.W   #4, D1      
00004350                          6764mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004350  0C01 0009               6765mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004354  6E00 000A               6766mmm         BGT     ALPHA_528
00004358  0601 0030               6767mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000435C  6000 0006               6768mmm         BRA     DONE_528
00004360  0601 0037               6769mmm ALPHA_528: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004364  4E71                    6770mmm DONE_528: NOP
00004366                          6771mmm         ENDM
00004366  4E4F                    6772mm         TRAP    #15         ; EXECUTE OUTPUT       
00004368                          6773mm         ENDM 
00004368  3605                    6774m         MOVE.W  D5, D3
0000436A  6000 02C2               6775m         BRA     COMPLETE_495
0000436E                          6776m ADRIMMEDIATEL_495:
0000436E  361A                    6777m         MOVE.W  (A2)+, D3
00004370                          6778mm         PRINTHASH
00004370  103C 0006               6779mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004374  323C 0023               6780mm         MOVE.W  #35, D1     ; AN = SIGN
00004378  4E4F                    6781mm         TRAP    #15         ; OUTPUT = SIGN
0000437A                          6782mm         ENDM
0000437A                          6783mm         PRINTSIGN
0000437A  103C 0006               6784mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000437E  323C 0024               6785mm         MOVE.W  #36, D1     ; AN = SIGN
00004382  4E4F                    6786mm         TRAP    #15         ; OUTPUT = SIGN
00004384                          6787mm         ENDM
00004384                          6788mm         ADROUT 
00004384  3212                    6789mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004386  E049                    6790mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004388  E849                    6791mm         LSR.W   #4, D1      
0000438A                          6792mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000438A  0C01 0009               6793mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000438E  6E00 000A               6794mmm         BGT     ALPHA_532
00004392  0601 0030               6795mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004396  6000 0006               6796mmm         BRA     DONE_532
0000439A  0601 0037               6797mmm ALPHA_532: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000439E  4E71                    6798mmm DONE_532: NOP
000043A0                          6799mmm         ENDM
000043A0  4E4F                    6800mm         TRAP    #15         ; EXECUTE OUTPUT
000043A2                          6801mm         
000043A2  3212                    6802mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043A4  E949                    6803mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000043A6  E049                    6804mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043A8  E849                    6805mm         LSR.W   #4, D1      
000043AA                          6806mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043AA  0C01 0009               6807mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043AE  6E00 000A               6808mmm         BGT     ALPHA_533
000043B2  0601 0030               6809mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043B6  6000 0006               6810mmm         BRA     DONE_533
000043BA  0601 0037               6811mmm ALPHA_533: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043BE  4E71                    6812mmm DONE_533: NOP
000043C0                          6813mmm         ENDM
000043C0  4E4F                    6814mm         TRAP    #15         ; EXECUTE OUTPUT
000043C2                          6815mm         
000043C2  3212                    6816mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043C4  E149                    6817mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043C6  E049                    6818mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043C8  E849                    6819mm         LSR.W   #4, D1      
000043CA                          6820mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043CA  0C01 0009               6821mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043CE  6E00 000A               6822mmm         BGT     ALPHA_534
000043D2  0601 0030               6823mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043D6  6000 0006               6824mmm         BRA     DONE_534
000043DA  0601 0037               6825mmm ALPHA_534: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000043DE  4E71                    6826mmm DONE_534: NOP
000043E0                          6827mmm         ENDM
000043E0  4E4F                    6828mm         TRAP    #15         ; EXECUTE OUTPUT
000043E2                          6829mm         
000043E2  3212                    6830mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000043E4  E149                    6831mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000043E6  E949                    6832mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000043E8  E049                    6833mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000043EA  E849                    6834mm         LSR.W   #4, D1      
000043EC                          6835mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000043EC  0C01 0009               6836mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000043F0  6E00 000A               6837mmm         BGT     ALPHA_535
000043F4  0601 0030               6838mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000043F8  6000 0006               6839mmm         BRA     DONE_535
000043FC  0601 0037               6840mmm ALPHA_535: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004400  4E71                    6841mmm DONE_535: NOP
00004402                          6842mmm         ENDM
00004402  4E4F                    6843mm         TRAP    #15         ; EXECUTE OUTPUT       
00004404                          6844mm         ENDM 
00004404  361A                    6845m         MOVE.W  (A2)+, D3
00004406                          6846mm         ADROUT
00004406  3212                    6847mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004408  E049                    6848mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000440A  E849                    6849mm         LSR.W   #4, D1      
0000440C                          6850mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000440C  0C01 0009               6851mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004410  6E00 000A               6852mmm         BGT     ALPHA_537
00004414  0601 0030               6853mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004418  6000 0006               6854mmm         BRA     DONE_537
0000441C  0601 0037               6855mmm ALPHA_537: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004420  4E71                    6856mmm DONE_537: NOP
00004422                          6857mmm         ENDM
00004422  4E4F                    6858mm         TRAP    #15         ; EXECUTE OUTPUT
00004424                          6859mm         
00004424  3212                    6860mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004426  E949                    6861mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004428  E049                    6862mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000442A  E849                    6863mm         LSR.W   #4, D1      
0000442C                          6864mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000442C  0C01 0009               6865mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004430  6E00 000A               6866mmm         BGT     ALPHA_538
00004434  0601 0030               6867mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004438  6000 0006               6868mmm         BRA     DONE_538
0000443C  0601 0037               6869mmm ALPHA_538: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004440  4E71                    6870mmm DONE_538: NOP
00004442                          6871mmm         ENDM
00004442  4E4F                    6872mm         TRAP    #15         ; EXECUTE OUTPUT
00004444                          6873mm         
00004444  3212                    6874mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004446  E149                    6875mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004448  E049                    6876mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000444A  E849                    6877mm         LSR.W   #4, D1      
0000444C                          6878mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000444C  0C01 0009               6879mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004450  6E00 000A               6880mmm         BGT     ALPHA_539
00004454  0601 0030               6881mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004458  6000 0006               6882mmm         BRA     DONE_539
0000445C  0601 0037               6883mmm ALPHA_539: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004460  4E71                    6884mmm DONE_539: NOP
00004462                          6885mmm         ENDM
00004462  4E4F                    6886mm         TRAP    #15         ; EXECUTE OUTPUT
00004464                          6887mm         
00004464  3212                    6888mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004466  E149                    6889mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004468  E949                    6890mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000446A  E049                    6891mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000446C  E849                    6892mm         LSR.W   #4, D1      
0000446E                          6893mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000446E  0C01 0009               6894mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004472  6E00 000A               6895mmm         BGT     ALPHA_540
00004476  0601 0030               6896mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000447A  6000 0006               6897mmm         BRA     DONE_540
0000447E  0601 0037               6898mmm ALPHA_540: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004482  4E71                    6899mmm DONE_540: NOP
00004484                          6900mmm         ENDM
00004484  4E4F                    6901mm         TRAP    #15         ; EXECUTE OUTPUT       
00004486                          6902mm         ENDM 
00004486  3605                    6903m         MOVE.W  D5, D3
00004488  6000 01A4               6904m         BRA     COMPLETE_495 
0000448C                          6905m ADRABSOLUTEW_495:     
0000448C  361A                    6906m         MOVE.W  (A2)+, D3
0000448E                          6907mm         PRINTSIGN
0000448E  103C 0006               6908mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004492  323C 0024               6909mm         MOVE.W  #36, D1     ; AN = SIGN
00004496  4E4F                    6910mm         TRAP    #15         ; OUTPUT = SIGN
00004498                          6911mm         ENDM
00004498                          6912mm         ADROUT
00004498  3212                    6913mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000449A  E049                    6914mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000449C  E849                    6915mm         LSR.W   #4, D1      
0000449E                          6916mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000449E  0C01 0009               6917mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044A2  6E00 000A               6918mmm         BGT     ALPHA_543
000044A6  0601 0030               6919mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044AA  6000 0006               6920mmm         BRA     DONE_543
000044AE  0601 0037               6921mmm ALPHA_543: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044B2  4E71                    6922mmm DONE_543: NOP
000044B4                          6923mmm         ENDM
000044B4  4E4F                    6924mm         TRAP    #15         ; EXECUTE OUTPUT
000044B6                          6925mm         
000044B6  3212                    6926mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044B8  E949                    6927mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000044BA  E049                    6928mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044BC  E849                    6929mm         LSR.W   #4, D1      
000044BE                          6930mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044BE  0C01 0009               6931mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044C2  6E00 000A               6932mmm         BGT     ALPHA_544
000044C6  0601 0030               6933mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044CA  6000 0006               6934mmm         BRA     DONE_544
000044CE  0601 0037               6935mmm ALPHA_544: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044D2  4E71                    6936mmm DONE_544: NOP
000044D4                          6937mmm         ENDM
000044D4  4E4F                    6938mm         TRAP    #15         ; EXECUTE OUTPUT
000044D6                          6939mm         
000044D6  3212                    6940mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044D8  E149                    6941mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044DA  E049                    6942mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044DC  E849                    6943mm         LSR.W   #4, D1      
000044DE                          6944mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000044DE  0C01 0009               6945mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000044E2  6E00 000A               6946mmm         BGT     ALPHA_545
000044E6  0601 0030               6947mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000044EA  6000 0006               6948mmm         BRA     DONE_545
000044EE  0601 0037               6949mmm ALPHA_545: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000044F2  4E71                    6950mmm DONE_545: NOP
000044F4                          6951mmm         ENDM
000044F4  4E4F                    6952mm         TRAP    #15         ; EXECUTE OUTPUT
000044F6                          6953mm         
000044F6  3212                    6954mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000044F8  E149                    6955mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000044FA  E949                    6956mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000044FC  E049                    6957mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000044FE  E849                    6958mm         LSR.W   #4, D1      
00004500                          6959mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004500  0C01 0009               6960mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004504  6E00 000A               6961mmm         BGT     ALPHA_546
00004508  0601 0030               6962mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000450C  6000 0006               6963mmm         BRA     DONE_546
00004510  0601 0037               6964mmm ALPHA_546: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004514  4E71                    6965mmm DONE_546: NOP
00004516                          6966mmm         ENDM
00004516  4E4F                    6967mm         TRAP    #15         ; EXECUTE OUTPUT       
00004518                          6968mm         ENDM 
00004518  3605                    6969m         MOVE.W  D5, D3
0000451A  6000 0112               6970m         BRA     COMPLETE_495  
0000451E                          6971m ADRABSOLUTEL_495:  
0000451E  361A                    6972m         MOVE.W  (A2)+, D3
00004520                          6973mm         PRINTSIGN
00004520  103C 0006               6974mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004524  323C 0024               6975mm         MOVE.W  #36, D1     ; AN = SIGN
00004528  4E4F                    6976mm         TRAP    #15         ; OUTPUT = SIGN
0000452A                          6977mm         ENDM
0000452A                          6978mm         ADROUT 
0000452A  3212                    6979mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000452C  E049                    6980mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000452E  E849                    6981mm         LSR.W   #4, D1      
00004530                          6982mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004530  0C01 0009               6983mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004534  6E00 000A               6984mmm         BGT     ALPHA_549
00004538  0601 0030               6985mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000453C  6000 0006               6986mmm         BRA     DONE_549
00004540  0601 0037               6987mmm ALPHA_549: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004544  4E71                    6988mmm DONE_549: NOP
00004546                          6989mmm         ENDM
00004546  4E4F                    6990mm         TRAP    #15         ; EXECUTE OUTPUT
00004548                          6991mm         
00004548  3212                    6992mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000454A  E949                    6993mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000454C  E049                    6994mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000454E  E849                    6995mm         LSR.W   #4, D1      
00004550                          6996mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004550  0C01 0009               6997mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004554  6E00 000A               6998mmm         BGT     ALPHA_550
00004558  0601 0030               6999mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000455C  6000 0006               7000mmm         BRA     DONE_550
00004560  0601 0037               7001mmm ALPHA_550: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004564  4E71                    7002mmm DONE_550: NOP
00004566                          7003mmm         ENDM
00004566  4E4F                    7004mm         TRAP    #15         ; EXECUTE OUTPUT
00004568                          7005mm         
00004568  3212                    7006mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000456A  E149                    7007mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000456C  E049                    7008mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000456E  E849                    7009mm         LSR.W   #4, D1      
00004570                          7010mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004570  0C01 0009               7011mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004574  6E00 000A               7012mmm         BGT     ALPHA_551
00004578  0601 0030               7013mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000457C  6000 0006               7014mmm         BRA     DONE_551
00004580  0601 0037               7015mmm ALPHA_551: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004584  4E71                    7016mmm DONE_551: NOP
00004586                          7017mmm         ENDM
00004586  4E4F                    7018mm         TRAP    #15         ; EXECUTE OUTPUT
00004588                          7019mm         
00004588  3212                    7020mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000458A  E149                    7021mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000458C  E949                    7022mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000458E  E049                    7023mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004590  E849                    7024mm         LSR.W   #4, D1      
00004592                          7025mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004592  0C01 0009               7026mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004596  6E00 000A               7027mmm         BGT     ALPHA_552
0000459A  0601 0030               7028mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000459E  6000 0006               7029mmm         BRA     DONE_552
000045A2  0601 0037               7030mmm ALPHA_552: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045A6  4E71                    7031mmm DONE_552: NOP
000045A8                          7032mmm         ENDM
000045A8  4E4F                    7033mm         TRAP    #15         ; EXECUTE OUTPUT       
000045AA                          7034mm         ENDM 
000045AA  361A                    7035m         MOVE.W  (A2)+, D3
000045AC                          7036mm         ADROUT
000045AC  3212                    7037mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045AE  E049                    7038mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045B0  E849                    7039mm         LSR.W   #4, D1      
000045B2                          7040mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045B2  0C01 0009               7041mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045B6  6E00 000A               7042mmm         BGT     ALPHA_554
000045BA  0601 0030               7043mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045BE  6000 0006               7044mmm         BRA     DONE_554
000045C2  0601 0037               7045mmm ALPHA_554: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045C6  4E71                    7046mmm DONE_554: NOP
000045C8                          7047mmm         ENDM
000045C8  4E4F                    7048mm         TRAP    #15         ; EXECUTE OUTPUT
000045CA                          7049mm         
000045CA  3212                    7050mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045CC  E949                    7051mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000045CE  E049                    7052mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045D0  E849                    7053mm         LSR.W   #4, D1      
000045D2                          7054mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045D2  0C01 0009               7055mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045D6  6E00 000A               7056mmm         BGT     ALPHA_555
000045DA  0601 0030               7057mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045DE  6000 0006               7058mmm         BRA     DONE_555
000045E2  0601 0037               7059mmm ALPHA_555: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000045E6  4E71                    7060mmm DONE_555: NOP
000045E8                          7061mmm         ENDM
000045E8  4E4F                    7062mm         TRAP    #15         ; EXECUTE OUTPUT
000045EA                          7063mm         
000045EA  3212                    7064mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000045EC  E149                    7065mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000045EE  E049                    7066mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000045F0  E849                    7067mm         LSR.W   #4, D1      
000045F2                          7068mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000045F2  0C01 0009               7069mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000045F6  6E00 000A               7070mmm         BGT     ALPHA_556
000045FA  0601 0030               7071mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000045FE  6000 0006               7072mmm         BRA     DONE_556
00004602  0601 0037               7073mmm ALPHA_556: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004606  4E71                    7074mmm DONE_556: NOP
00004608                          7075mmm         ENDM
00004608  4E4F                    7076mm         TRAP    #15         ; EXECUTE OUTPUT
0000460A                          7077mm         
0000460A  3212                    7078mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000460C  E149                    7079mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000460E  E949                    7080mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004610  E049                    7081mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004612  E849                    7082mm         LSR.W   #4, D1      
00004614                          7083mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004614  0C01 0009               7084mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004618  6E00 000A               7085mmm         BGT     ALPHA_557
0000461C  0601 0030               7086mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004620  6000 0006               7087mmm         BRA     DONE_557
00004624  0601 0037               7088mmm ALPHA_557: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004628  4E71                    7089mmm DONE_557: NOP
0000462A                          7090mmm         ENDM
0000462A  4E4F                    7091mm         TRAP    #15         ; EXECUTE OUTPUT       
0000462C                          7092mm         ENDM 
0000462C  3605                    7093m         MOVE.W  D5, D3
0000462E                          7094m 
0000462E                          7095m COMPLETE_495:  ; OPCODE HAS BEEN VERIFIED
0000462E                          7096m         ENDM
0000462E                          7097m         printComma
0000462E  43F8 00CF               7098m         LEA     OCOMMA, A1     
00004632  103C 000E               7099m         MOVE.B  #14,D0          
00004636  4E4F                    7100m         TRAP    #15
00004638                          7101m         ENDM
00004638                          7102m         printDnDest     D3
00004638  3203                    7103m         MOVE.W  D3, D1      ; BITS 9 TO 11
0000463A  E949                    7104m         LSL     #$04, D1
0000463C  E049                    7105m         LSR     #$08, D1
0000463E  EA49                    7106m         LSR     #$05, D1
00004640  43F8 00C7               7107m         LEA     ODN, A1     
00004644  103C 000E               7108m         MOVE.B  #14,D0          
00004648  4E4F                    7109m         TRAP    #15
0000464A  103C 0003               7110m         MOVE.B  #3,D0          
0000464E  4E4F                    7111m         TRAP    #15
00004650                          7112m         ENDM
00004650  4E75                    7113          RTS                 ; Return from decodeDIVU subroutine
00004652                          7114  
00004652                          7115  
00004652                          7116  ; ------------------------------------------------------------
00004652                          7117  ; 8. "decodeLEA" subroutine
00004652                          7118  ; AUTHOR
00004652                          7119  ;
00004652                          7120  ; TODO: DESCRIPTION
00004652                          7121  ; ------------------------------------------------------------
00004652                          7122  decodeLEA:
00004652                          7123m         verifyOpcode    pLEA, (A2)
00004652  43F8 016D               7124m         LEA     PLEA, A1      ; INPUT PATTERN STRING
00004656  3612                    7125m         MOVE.W  (A2), D3      ; INPUT VALUE
00004658  123C 000F               7126m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
0000465C                          7127m         
0000465C                          7128m LOOP_560: 
0000465C  0C11 0030               7129m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004660  6700 000E               7130m         BEQ     CHECKFOR0_560
00004664  0C11 0031               7131m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004668  6700 0010               7132m         BEQ     CHECKFOR1_560
0000466C  6000 0012               7133m         BRA     NEXT_560      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004670                          7134m         
00004670                          7135m CHECKFOR0_560: 
00004670  0303                    7136m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004672  6600 25CC               7137m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004676  6000 0008               7138m         BRA     NEXT_560
0000467A                          7139m 
0000467A                          7140m CHECKFOR1_560:
0000467A  0303                    7141m         BTST    D1, D3      ; CHECK IF CONTAINS 1
0000467C  6700 25C2               7142m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004680                          7143m 
00004680                          7144m NEXT_560: 
00004680  B23C 0000               7145m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004684  6700 0008               7146m         BEQ     COMPLETE_560  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004688  5301                    7147m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000468A  1819                    7148m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000468C  60CE                    7149m         BRA     LOOP_560      ; BEGIN LOOP AGAIN
0000468E                          7150m 
0000468E                          7151m COMPLETE_560:  ; OPCODE HAS BEEN VERIFIED
0000468E                          7152m         ENDM
0000468E  43F8 0087               7153          LEA     oLEA, A1     
00004692  103C 000E               7154          MOVE.B  #14,D0          
00004696  4E4F                    7155          TRAP    #15
00004698  43F8 00D8               7156          LEA     oBlank, A1     
0000469C  103C 000E               7157          MOVE.B  #14,D0          
000046A0  4E4F                    7158          TRAP    #15
000046A2  3A12                    7159          MOVE.W  (A2), D5
000046A4                          7160m         prepareAdrMode  #$1, (A2)
000046A4  3C3C 0001               7161m         MOVE.W  #$1, D6      ; INPUT VALUE
000046A8  3212                    7162m         MOVE.W  (A2), D1
000046AA  BC3C 0001               7163m         CMP.B   #$01, D6
000046AE  6700 000C               7164m         BEQ     ADRSOURCE_561    
000046B2                          7165m ADRDEST_561:
000046B2  EF49                    7166m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000046B4  E049                    7167m         LSR     #$08, D1
000046B6  EA49                    7168m         LSR     #$05, D1
000046B8  6000 000A               7169m         BRA     COMPLETE_561 
000046BC                          7170m ADRSOURCE_561:                
000046BC  E149                    7171m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000046BE  E549                    7172m         LSL     #$02, D1
000046C0  E049                    7173m         LSR     #$08, D1
000046C2  EA49                    7174m         LSR     #$05, D1
000046C4                          7175m COMPLETE_561:  ; OPCODE HAS BEEN VERIFIED
000046C4                          7176m         ENDM        
000046C4                          7177m         decodeAdrMode   (A2), D1
000046C4  3612                    7178m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000046C6  3201                    7179m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000046C8                          7180m 
000046C8  B23C 0001               7181m         CMP.B   #$01, D1
000046CC  6700 0066               7182m         BEQ     ADRREGDIRECT_562    
000046D0  B23C 0002               7183m         CMP.B   #$02, D1
000046D4  6700 00A0               7184m         BEQ     ADRREGINDIRECT_562  
000046D8  B23C 0003               7185m         CMP.B   #$03, D1
000046DC  6700 0102               7186m         BEQ     ADRREGPOSTINC_562  
000046E0  B23C 0004               7187m         CMP.B   #$04, D1
000046E4  6700 0178               7188m         BEQ     ADRREGPREDEC_562
000046E8  B23C 0007               7189m         CMP.B   #$07, D1
000046EC  6700 01EE               7190m         BEQ     ADRABSOLUTE_562    
000046F0                          7191m         
000046F0                          7192m DATAREGDIRECT_562: 
000046F0  BC3C 0001               7193m         CMP.B   #$01, D6
000046F4  6700 001E               7194m         BEQ     DATAREGDIRECTSRC_562   
000046F8                          7195m DATAREGDIRECTDEST_562: 
000046F8                          7196mm         PRINTDNDEST D3 
000046F8  3203                    7197mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000046FA  E949                    7198mm         LSL     #$04, D1
000046FC  E049                    7199mm         LSR     #$08, D1
000046FE  EA49                    7200mm         LSR     #$05, D1
00004700  43F8 00C7               7201mm         LEA     ODN, A1     
00004704  103C 000E               7202mm         MOVE.B  #14,D0          
00004708  4E4F                    7203mm         TRAP    #15
0000470A  103C 0003               7204mm         MOVE.B  #3,D0          
0000470E  4E4F                    7205mm         TRAP    #15
00004710                          7206mm         ENDM
00004710  6000 0562               7207m         BRA     COMPLETE_562 
00004714                          7208m DATAREGDIRECTSRC_562: 
00004714                          7209mm         PRINTDNSRC D3 
00004714  4281                    7210mm         CLR.L   D1
00004716  3203                    7211mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004718  E149                    7212mm         LSL     #$08, D1
0000471A  EB49                    7213mm         LSL     #$05, D1
0000471C  E049                    7214mm         LSR     #$08, D1
0000471E  EA49                    7215mm         LSR     #$05, D1
00004720  43F8 00C7               7216mm         LEA     ODN, A1     
00004724  103C 000E               7217mm         MOVE.B  #14,D0          
00004728  4E4F                    7218mm         TRAP    #15
0000472A  103C 0003               7219mm         MOVE.B  #3,D0          
0000472E  4E4F                    7220mm         TRAP    #15
00004730                          7221mm         ENDM
00004730  6000 0542               7222m         BRA     COMPLETE_562   
00004734                          7223m         
00004734                          7224m ADRREGDIRECT_562: 
00004734  BC3C 0001               7225m         CMP.B   #$01, D6
00004738  6700 001E               7226m         BEQ     ADRREGDIRECTSRC_562   
0000473C                          7227m ADRREGDIRECTDEST_562:
0000473C                          7228mm         PRINTANDEST D3
0000473C  3203                    7229mm         MOVE.W  D3, D1
0000473E  E949                    7230mm         LSL     #$04, D1
00004740  E049                    7231mm         LSR     #$08, D1
00004742  EA49                    7232mm         LSR     #$05, D1
00004744  43F8 00C9               7233mm         LEA     OAN, A1     
00004748  103C 000E               7234mm         MOVE.B  #14,D0          
0000474C  4E4F                    7235mm         TRAP    #15
0000474E  103C 0003               7236mm         MOVE.B  #3,D0          
00004752  4E4F                    7237mm         TRAP    #15
00004754                          7238mm         ENDM
00004754  6000 051E               7239m         BRA     COMPLETE_562   
00004758                          7240m ADRREGDIRECTSRC_562:
00004758                          7241mm         PRINTANSRC D3
00004758  3203                    7242mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000475A  E149                    7243mm         LSL     #$08, D1
0000475C  EB49                    7244mm         LSL     #$05, D1
0000475E  E049                    7245mm         LSR     #$08, D1
00004760  EA49                    7246mm         LSR     #$05, D1
00004762  43F8 00C9               7247mm         LEA     OAN, A1     
00004766  103C 000E               7248mm         MOVE.B  #14,D0          
0000476A  4E4F                    7249mm         TRAP    #15
0000476C  103C 0003               7250mm         MOVE.B  #3,D0          
00004770  4E4F                    7251mm         TRAP    #15
00004772                          7252mm         ENDM
00004772  6000 0500               7253m         BRA     COMPLETE_562   
00004776                          7254m        
00004776                          7255m ADRREGINDIRECT_562:   
00004776  BC3C 0001               7256m         CMP.B   #$01, D6
0000477A  6700 0032               7257m         BEQ     ADRREGINDIRECTSRC_562   
0000477E                          7258m ADRREGINDIRECTDEST_562:
0000477E                          7259mm         PRINTLB
0000477E  43F8 00CB               7260mm         LEA     OLB, A1     
00004782  103C 000E               7261mm         MOVE.B  #14,D0          
00004786  4E4F                    7262mm         TRAP    #15
00004788                          7263mm         ENDM
00004788                          7264mm         PRINTANDEST D3  
00004788  3203                    7265mm         MOVE.W  D3, D1
0000478A  E949                    7266mm         LSL     #$04, D1
0000478C  E049                    7267mm         LSR     #$08, D1
0000478E  EA49                    7268mm         LSR     #$05, D1
00004790  43F8 00C9               7269mm         LEA     OAN, A1     
00004794  103C 000E               7270mm         MOVE.B  #14,D0          
00004798  4E4F                    7271mm         TRAP    #15
0000479A  103C 0003               7272mm         MOVE.B  #3,D0          
0000479E  4E4F                    7273mm         TRAP    #15
000047A0                          7274mm         ENDM
000047A0                          7275mm         PRINTRB
000047A0  43F8 00CD               7276mm         LEA     ORB, A1     
000047A4  103C 000E               7277mm         MOVE.B  #14,D0          
000047A8  4E4F                    7278mm         TRAP    #15
000047AA                          7279mm         ENDM
000047AA  6000 04C8               7280m         BRA     COMPLETE_562     
000047AE                          7281m ADRREGINDIRECTSRC_562:   
000047AE                          7282mm         PRINTLB
000047AE  43F8 00CB               7283mm         LEA     OLB, A1     
000047B2  103C 000E               7284mm         MOVE.B  #14,D0          
000047B6  4E4F                    7285mm         TRAP    #15
000047B8                          7286mm         ENDM
000047B8                          7287mm         PRINTANSRC D3  
000047B8  3203                    7288mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000047BA  E149                    7289mm         LSL     #$08, D1
000047BC  EB49                    7290mm         LSL     #$05, D1
000047BE  E049                    7291mm         LSR     #$08, D1
000047C0  EA49                    7292mm         LSR     #$05, D1
000047C2  43F8 00C9               7293mm         LEA     OAN, A1     
000047C6  103C 000E               7294mm         MOVE.B  #14,D0          
000047CA  4E4F                    7295mm         TRAP    #15
000047CC  103C 0003               7296mm         MOVE.B  #3,D0          
000047D0  4E4F                    7297mm         TRAP    #15
000047D2                          7298mm         ENDM
000047D2                          7299mm         PRINTRB
000047D2  43F8 00CD               7300mm         LEA     ORB, A1     
000047D6  103C 000E               7301mm         MOVE.B  #14,D0          
000047DA  4E4F                    7302mm         TRAP    #15
000047DC                          7303mm         ENDM
000047DC  6000 0496               7304m         BRA     COMPLETE_562   
000047E0                          7305m         
000047E0                          7306m ADRREGPOSTINC_562:   
000047E0  BC3C 0001               7307m         CMP.B   #$01, D6
000047E4  6700 003C               7308m         BEQ     ADRREGPOSTINCSRC_562   
000047E8                          7309m ADRREGPOSTINCDEST_562: 
000047E8                          7310mm         PRINTLB
000047E8  43F8 00CB               7311mm         LEA     OLB, A1     
000047EC  103C 000E               7312mm         MOVE.B  #14,D0          
000047F0  4E4F                    7313mm         TRAP    #15
000047F2                          7314mm         ENDM
000047F2                          7315mm         PRINTANDEST D3  
000047F2  3203                    7316mm         MOVE.W  D3, D1
000047F4  E949                    7317mm         LSL     #$04, D1
000047F6  E049                    7318mm         LSR     #$08, D1
000047F8  EA49                    7319mm         LSR     #$05, D1
000047FA  43F8 00C9               7320mm         LEA     OAN, A1     
000047FE  103C 000E               7321mm         MOVE.B  #14,D0          
00004802  4E4F                    7322mm         TRAP    #15
00004804  103C 0003               7323mm         MOVE.B  #3,D0          
00004808  4E4F                    7324mm         TRAP    #15
0000480A                          7325mm         ENDM
0000480A                          7326mm         PRINTRB
0000480A  43F8 00CD               7327mm         LEA     ORB, A1     
0000480E  103C 000E               7328mm         MOVE.B  #14,D0          
00004812  4E4F                    7329mm         TRAP    #15
00004814                          7330mm         ENDM
00004814                          7331mm         PRINTPI
00004814  43F8 00D4               7332mm         LEA     OPSTINC, A1     
00004818  103C 000E               7333mm         MOVE.B  #14,D0          
0000481C  4E4F                    7334mm         TRAP    #15
0000481E                          7335mm         ENDM
0000481E  6000 0454               7336m         BRA     COMPLETE_562  
00004822                          7337m ADRREGPOSTINCSRC_562:           
00004822                          7338mm         PRINTLB
00004822  43F8 00CB               7339mm         LEA     OLB, A1     
00004826  103C 000E               7340mm         MOVE.B  #14,D0          
0000482A  4E4F                    7341mm         TRAP    #15
0000482C                          7342mm         ENDM
0000482C                          7343mm         PRINTANSRC D3  
0000482C  3203                    7344mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000482E  E149                    7345mm         LSL     #$08, D1
00004830  EB49                    7346mm         LSL     #$05, D1
00004832  E049                    7347mm         LSR     #$08, D1
00004834  EA49                    7348mm         LSR     #$05, D1
00004836  43F8 00C9               7349mm         LEA     OAN, A1     
0000483A  103C 000E               7350mm         MOVE.B  #14,D0          
0000483E  4E4F                    7351mm         TRAP    #15
00004840  103C 0003               7352mm         MOVE.B  #3,D0          
00004844  4E4F                    7353mm         TRAP    #15
00004846                          7354mm         ENDM
00004846                          7355mm         PRINTRB
00004846  43F8 00CD               7356mm         LEA     ORB, A1     
0000484A  103C 000E               7357mm         MOVE.B  #14,D0          
0000484E  4E4F                    7358mm         TRAP    #15
00004850                          7359mm         ENDM
00004850                          7360mm         PRINTPI
00004850  43F8 00D4               7361mm         LEA     OPSTINC, A1     
00004854  103C 000E               7362mm         MOVE.B  #14,D0          
00004858  4E4F                    7363mm         TRAP    #15
0000485A                          7364mm         ENDM
0000485A  6000 0418               7365m         BRA     COMPLETE_562  
0000485E                          7366m ADRREGPREDEC_562: 
0000485E  BC3C 0001               7367m         CMP.B   #$01, D6
00004862  6700 003C               7368m         BEQ     ADRREGPREDECSRC_562   
00004866                          7369m ADRREGPREDECDEST_562:
00004866                          7370mm         PRINTPD  
00004866  43F8 00D2               7371mm         LEA     OPREDEC, A1     
0000486A  103C 000E               7372mm         MOVE.B  #14,D0          
0000486E  4E4F                    7373mm         TRAP    #15
00004870                          7374mm         ENDM
00004870                          7375mm         PRINTLB
00004870  43F8 00CB               7376mm         LEA     OLB, A1     
00004874  103C 000E               7377mm         MOVE.B  #14,D0          
00004878  4E4F                    7378mm         TRAP    #15
0000487A                          7379mm         ENDM
0000487A                          7380mm         PRINTANDEST D3  
0000487A  3203                    7381mm         MOVE.W  D3, D1
0000487C  E949                    7382mm         LSL     #$04, D1
0000487E  E049                    7383mm         LSR     #$08, D1
00004880  EA49                    7384mm         LSR     #$05, D1
00004882  43F8 00C9               7385mm         LEA     OAN, A1     
00004886  103C 000E               7386mm         MOVE.B  #14,D0          
0000488A  4E4F                    7387mm         TRAP    #15
0000488C  103C 0003               7388mm         MOVE.B  #3,D0          
00004890  4E4F                    7389mm         TRAP    #15
00004892                          7390mm         ENDM
00004892                          7391mm         PRINTRB
00004892  43F8 00CD               7392mm         LEA     ORB, A1     
00004896  103C 000E               7393mm         MOVE.B  #14,D0          
0000489A  4E4F                    7394mm         TRAP    #15
0000489C                          7395mm         ENDM
0000489C  6000 03D6               7396m         BRA     COMPLETE_562   
000048A0                          7397m ADRREGPREDECSRC_562: 
000048A0                          7398mm         PRINTPD  
000048A0  43F8 00D2               7399mm         LEA     OPREDEC, A1     
000048A4  103C 000E               7400mm         MOVE.B  #14,D0          
000048A8  4E4F                    7401mm         TRAP    #15
000048AA                          7402mm         ENDM
000048AA                          7403mm         PRINTLB
000048AA  43F8 00CB               7404mm         LEA     OLB, A1     
000048AE  103C 000E               7405mm         MOVE.B  #14,D0          
000048B2  4E4F                    7406mm         TRAP    #15
000048B4                          7407mm         ENDM
000048B4                          7408mm         PRINTANSRC D3  
000048B4  3203                    7409mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000048B6  E149                    7410mm         LSL     #$08, D1
000048B8  EB49                    7411mm         LSL     #$05, D1
000048BA  E049                    7412mm         LSR     #$08, D1
000048BC  EA49                    7413mm         LSR     #$05, D1
000048BE  43F8 00C9               7414mm         LEA     OAN, A1     
000048C2  103C 000E               7415mm         MOVE.B  #14,D0          
000048C6  4E4F                    7416mm         TRAP    #15
000048C8  103C 0003               7417mm         MOVE.B  #3,D0          
000048CC  4E4F                    7418mm         TRAP    #15
000048CE                          7419mm         ENDM
000048CE                          7420mm         PRINTRB
000048CE  43F8 00CD               7421mm         LEA     ORB, A1     
000048D2  103C 000E               7422mm         MOVE.B  #14,D0          
000048D6  4E4F                    7423mm         TRAP    #15
000048D8                          7424mm         ENDM
000048D8  6000 039A               7425m         BRA     COMPLETE_562
000048DC                          7426m        
000048DC                          7427m ADRABSOLUTE_562:
000048DC  BC3C 0001               7428m         CMP.B   #$01, D6
000048E0  6600 0018               7429m         BNE     ADRABSOLUTEDST_562 
000048E4                          7430m         
000048E4  3A03                    7431m         MOVE.W  D3, D5
000048E6  0803 0002               7432m         BTST    #2, D3
000048EA  6600 0024               7433m         BNE     ADRIMMEDIATE_562
000048EE  0803 0000               7434m         BTST    #0, D3
000048F2  6600 0270               7435m         BNE     ADRABSOLUTEL_562
000048F6  6000 01DA               7436m         BRA     ADRABSOLUTEW_562
000048FA                          7437m ADRABSOLUTEDST_562:
000048FA  3A03                    7438m         MOVE.W  D3, D5
000048FC  0803 000B               7439m         BTST    #$B, D3
00004900  6600 000E               7440m         BNE     ADRIMMEDIATE_562
00004904  0803 0009               7441m         BTST    #$09, D3
00004908  6600 025A               7442m         BNE     ADRABSOLUTEL_562
0000490C  6000 01C4               7443m         BRA     ADRABSOLUTEW_562
00004910                          7444m ADRIMMEDIATE_562:
00004910  BE3C 0001               7445m         CMP.B   #1, D7
00004914  6700 009E               7446m         BEQ     ADRIMMEDIATEL_562
00004918                          7447m ADRIMMEDIATEW_562:
00004918  361A                    7448m         MOVE.W  (A2)+, D3
0000491A                          7449mm         PRINTHASH
0000491A  103C 0006               7450mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000491E  323C 0023               7451mm         MOVE.W  #35, D1     ; AN = SIGN
00004922  4E4F                    7452mm         TRAP    #15         ; OUTPUT = SIGN
00004924                          7453mm         ENDM
00004924                          7454mm         PRINTSIGN
00004924  103C 0006               7455mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004928  323C 0024               7456mm         MOVE.W  #36, D1     ; AN = SIGN
0000492C  4E4F                    7457mm         TRAP    #15         ; OUTPUT = SIGN
0000492E                          7458mm         ENDM
0000492E                          7459mm         ADROUT
0000492E  3212                    7460mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004930  E049                    7461mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004932  E849                    7462mm         LSR.W   #4, D1      
00004934                          7463mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004934  0C01 0009               7464mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004938  6E00 000A               7465mmm         BGT     ALPHA_592
0000493C  0601 0030               7466mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004940  6000 0006               7467mmm         BRA     DONE_592
00004944  0601 0037               7468mmm ALPHA_592: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004948  4E71                    7469mmm DONE_592: NOP
0000494A                          7470mmm         ENDM
0000494A  4E4F                    7471mm         TRAP    #15         ; EXECUTE OUTPUT
0000494C                          7472mm         
0000494C  3212                    7473mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000494E  E949                    7474mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004950  E049                    7475mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004952  E849                    7476mm         LSR.W   #4, D1      
00004954                          7477mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004954  0C01 0009               7478mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004958  6E00 000A               7479mmm         BGT     ALPHA_593
0000495C  0601 0030               7480mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004960  6000 0006               7481mmm         BRA     DONE_593
00004964  0601 0037               7482mmm ALPHA_593: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004968  4E71                    7483mmm DONE_593: NOP
0000496A                          7484mmm         ENDM
0000496A  4E4F                    7485mm         TRAP    #15         ; EXECUTE OUTPUT
0000496C                          7486mm         
0000496C  3212                    7487mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000496E  E149                    7488mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004970  E049                    7489mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004972  E849                    7490mm         LSR.W   #4, D1      
00004974                          7491mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004974  0C01 0009               7492mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004978  6E00 000A               7493mmm         BGT     ALPHA_594
0000497C  0601 0030               7494mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004980  6000 0006               7495mmm         BRA     DONE_594
00004984  0601 0037               7496mmm ALPHA_594: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004988  4E71                    7497mmm DONE_594: NOP
0000498A                          7498mmm         ENDM
0000498A  4E4F                    7499mm         TRAP    #15         ; EXECUTE OUTPUT
0000498C                          7500mm         
0000498C  3212                    7501mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000498E  E149                    7502mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004990  E949                    7503mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004992  E049                    7504mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004994  E849                    7505mm         LSR.W   #4, D1      
00004996                          7506mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004996  0C01 0009               7507mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000499A  6E00 000A               7508mmm         BGT     ALPHA_595
0000499E  0601 0030               7509mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049A2  6000 0006               7510mmm         BRA     DONE_595
000049A6  0601 0037               7511mmm ALPHA_595: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049AA  4E71                    7512mmm DONE_595: NOP
000049AC                          7513mmm         ENDM
000049AC  4E4F                    7514mm         TRAP    #15         ; EXECUTE OUTPUT       
000049AE                          7515mm         ENDM 
000049AE  3605                    7516m         MOVE.W  D5, D3
000049B0  6000 02C2               7517m         BRA     COMPLETE_562
000049B4                          7518m ADRIMMEDIATEL_562:
000049B4  361A                    7519m         MOVE.W  (A2)+, D3
000049B6                          7520mm         PRINTHASH
000049B6  103C 0006               7521mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049BA  323C 0023               7522mm         MOVE.W  #35, D1     ; AN = SIGN
000049BE  4E4F                    7523mm         TRAP    #15         ; OUTPUT = SIGN
000049C0                          7524mm         ENDM
000049C0                          7525mm         PRINTSIGN
000049C0  103C 0006               7526mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000049C4  323C 0024               7527mm         MOVE.W  #36, D1     ; AN = SIGN
000049C8  4E4F                    7528mm         TRAP    #15         ; OUTPUT = SIGN
000049CA                          7529mm         ENDM
000049CA                          7530mm         ADROUT 
000049CA  3212                    7531mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049CC  E049                    7532mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049CE  E849                    7533mm         LSR.W   #4, D1      
000049D0                          7534mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049D0  0C01 0009               7535mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049D4  6E00 000A               7536mmm         BGT     ALPHA_599
000049D8  0601 0030               7537mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049DC  6000 0006               7538mmm         BRA     DONE_599
000049E0  0601 0037               7539mmm ALPHA_599: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000049E4  4E71                    7540mmm DONE_599: NOP
000049E6                          7541mmm         ENDM
000049E6  4E4F                    7542mm         TRAP    #15         ; EXECUTE OUTPUT
000049E8                          7543mm         
000049E8  3212                    7544mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000049EA  E949                    7545mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000049EC  E049                    7546mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000049EE  E849                    7547mm         LSR.W   #4, D1      
000049F0                          7548mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000049F0  0C01 0009               7549mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000049F4  6E00 000A               7550mmm         BGT     ALPHA_600
000049F8  0601 0030               7551mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000049FC  6000 0006               7552mmm         BRA     DONE_600
00004A00  0601 0037               7553mmm ALPHA_600: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A04  4E71                    7554mmm DONE_600: NOP
00004A06                          7555mmm         ENDM
00004A06  4E4F                    7556mm         TRAP    #15         ; EXECUTE OUTPUT
00004A08                          7557mm         
00004A08  3212                    7558mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A0A  E149                    7559mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A0C  E049                    7560mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A0E  E849                    7561mm         LSR.W   #4, D1      
00004A10                          7562mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A10  0C01 0009               7563mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A14  6E00 000A               7564mmm         BGT     ALPHA_601
00004A18  0601 0030               7565mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A1C  6000 0006               7566mmm         BRA     DONE_601
00004A20  0601 0037               7567mmm ALPHA_601: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A24  4E71                    7568mmm DONE_601: NOP
00004A26                          7569mmm         ENDM
00004A26  4E4F                    7570mm         TRAP    #15         ; EXECUTE OUTPUT
00004A28                          7571mm         
00004A28  3212                    7572mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A2A  E149                    7573mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A2C  E949                    7574mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004A2E  E049                    7575mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A30  E849                    7576mm         LSR.W   #4, D1      
00004A32                          7577mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A32  0C01 0009               7578mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A36  6E00 000A               7579mmm         BGT     ALPHA_602
00004A3A  0601 0030               7580mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A3E  6000 0006               7581mmm         BRA     DONE_602
00004A42  0601 0037               7582mmm ALPHA_602: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A46  4E71                    7583mmm DONE_602: NOP
00004A48                          7584mmm         ENDM
00004A48  4E4F                    7585mm         TRAP    #15         ; EXECUTE OUTPUT       
00004A4A                          7586mm         ENDM 
00004A4A  361A                    7587m         MOVE.W  (A2)+, D3
00004A4C                          7588mm         ADROUT
00004A4C  3212                    7589mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A4E  E049                    7590mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A50  E849                    7591mm         LSR.W   #4, D1      
00004A52                          7592mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A52  0C01 0009               7593mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A56  6E00 000A               7594mmm         BGT     ALPHA_604
00004A5A  0601 0030               7595mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A5E  6000 0006               7596mmm         BRA     DONE_604
00004A62  0601 0037               7597mmm ALPHA_604: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A66  4E71                    7598mmm DONE_604: NOP
00004A68                          7599mmm         ENDM
00004A68  4E4F                    7600mm         TRAP    #15         ; EXECUTE OUTPUT
00004A6A                          7601mm         
00004A6A  3212                    7602mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A6C  E949                    7603mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004A6E  E049                    7604mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A70  E849                    7605mm         LSR.W   #4, D1      
00004A72                          7606mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A72  0C01 0009               7607mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A76  6E00 000A               7608mmm         BGT     ALPHA_605
00004A7A  0601 0030               7609mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A7E  6000 0006               7610mmm         BRA     DONE_605
00004A82  0601 0037               7611mmm ALPHA_605: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004A86  4E71                    7612mmm DONE_605: NOP
00004A88                          7613mmm         ENDM
00004A88  4E4F                    7614mm         TRAP    #15         ; EXECUTE OUTPUT
00004A8A                          7615mm         
00004A8A  3212                    7616mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004A8C  E149                    7617mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004A8E  E049                    7618mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004A90  E849                    7619mm         LSR.W   #4, D1      
00004A92                          7620mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004A92  0C01 0009               7621mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004A96  6E00 000A               7622mmm         BGT     ALPHA_606
00004A9A  0601 0030               7623mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004A9E  6000 0006               7624mmm         BRA     DONE_606
00004AA2  0601 0037               7625mmm ALPHA_606: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AA6  4E71                    7626mmm DONE_606: NOP
00004AA8                          7627mmm         ENDM
00004AA8  4E4F                    7628mm         TRAP    #15         ; EXECUTE OUTPUT
00004AAA                          7629mm         
00004AAA  3212                    7630mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AAC  E149                    7631mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004AAE  E949                    7632mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004AB0  E049                    7633mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AB2  E849                    7634mm         LSR.W   #4, D1      
00004AB4                          7635mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AB4  0C01 0009               7636mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AB8  6E00 000A               7637mmm         BGT     ALPHA_607
00004ABC  0601 0030               7638mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AC0  6000 0006               7639mmm         BRA     DONE_607
00004AC4  0601 0037               7640mmm ALPHA_607: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AC8  4E71                    7641mmm DONE_607: NOP
00004ACA                          7642mmm         ENDM
00004ACA  4E4F                    7643mm         TRAP    #15         ; EXECUTE OUTPUT       
00004ACC                          7644mm         ENDM 
00004ACC  3605                    7645m         MOVE.W  D5, D3
00004ACE  6000 01A4               7646m         BRA     COMPLETE_562 
00004AD2                          7647m ADRABSOLUTEW_562:     
00004AD2  361A                    7648m         MOVE.W  (A2)+, D3
00004AD4                          7649mm         PRINTSIGN
00004AD4  103C 0006               7650mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004AD8  323C 0024               7651mm         MOVE.W  #36, D1     ; AN = SIGN
00004ADC  4E4F                    7652mm         TRAP    #15         ; OUTPUT = SIGN
00004ADE                          7653mm         ENDM
00004ADE                          7654mm         ADROUT
00004ADE  3212                    7655mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AE0  E049                    7656mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004AE2  E849                    7657mm         LSR.W   #4, D1      
00004AE4                          7658mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004AE4  0C01 0009               7659mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004AE8  6E00 000A               7660mmm         BGT     ALPHA_610
00004AEC  0601 0030               7661mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004AF0  6000 0006               7662mmm         BRA     DONE_610
00004AF4  0601 0037               7663mmm ALPHA_610: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004AF8  4E71                    7664mmm DONE_610: NOP
00004AFA                          7665mmm         ENDM
00004AFA  4E4F                    7666mm         TRAP    #15         ; EXECUTE OUTPUT
00004AFC                          7667mm         
00004AFC  3212                    7668mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004AFE  E949                    7669mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B00  E049                    7670mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B02  E849                    7671mm         LSR.W   #4, D1      
00004B04                          7672mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B04  0C01 0009               7673mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B08  6E00 000A               7674mmm         BGT     ALPHA_611
00004B0C  0601 0030               7675mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B10  6000 0006               7676mmm         BRA     DONE_611
00004B14  0601 0037               7677mmm ALPHA_611: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B18  4E71                    7678mmm DONE_611: NOP
00004B1A                          7679mmm         ENDM
00004B1A  4E4F                    7680mm         TRAP    #15         ; EXECUTE OUTPUT
00004B1C                          7681mm         
00004B1C  3212                    7682mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B1E  E149                    7683mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B20  E049                    7684mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B22  E849                    7685mm         LSR.W   #4, D1      
00004B24                          7686mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B24  0C01 0009               7687mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B28  6E00 000A               7688mmm         BGT     ALPHA_612
00004B2C  0601 0030               7689mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B30  6000 0006               7690mmm         BRA     DONE_612
00004B34  0601 0037               7691mmm ALPHA_612: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B38  4E71                    7692mmm DONE_612: NOP
00004B3A                          7693mmm         ENDM
00004B3A  4E4F                    7694mm         TRAP    #15         ; EXECUTE OUTPUT
00004B3C                          7695mm         
00004B3C  3212                    7696mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B3E  E149                    7697mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004B40  E949                    7698mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004B42  E049                    7699mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B44  E849                    7700mm         LSR.W   #4, D1      
00004B46                          7701mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B46  0C01 0009               7702mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B4A  6E00 000A               7703mmm         BGT     ALPHA_613
00004B4E  0601 0030               7704mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B52  6000 0006               7705mmm         BRA     DONE_613
00004B56  0601 0037               7706mmm ALPHA_613: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B5A  4E71                    7707mmm DONE_613: NOP
00004B5C                          7708mmm         ENDM
00004B5C  4E4F                    7709mm         TRAP    #15         ; EXECUTE OUTPUT       
00004B5E                          7710mm         ENDM 
00004B5E  3605                    7711m         MOVE.W  D5, D3
00004B60  6000 0112               7712m         BRA     COMPLETE_562  
00004B64                          7713m ADRABSOLUTEL_562:  
00004B64  361A                    7714m         MOVE.W  (A2)+, D3
00004B66                          7715mm         PRINTSIGN
00004B66  103C 0006               7716mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00004B6A  323C 0024               7717mm         MOVE.W  #36, D1     ; AN = SIGN
00004B6E  4E4F                    7718mm         TRAP    #15         ; OUTPUT = SIGN
00004B70                          7719mm         ENDM
00004B70                          7720mm         ADROUT 
00004B70  3212                    7721mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B72  E049                    7722mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B74  E849                    7723mm         LSR.W   #4, D1      
00004B76                          7724mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B76  0C01 0009               7725mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B7A  6E00 000A               7726mmm         BGT     ALPHA_616
00004B7E  0601 0030               7727mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004B82  6000 0006               7728mmm         BRA     DONE_616
00004B86  0601 0037               7729mmm ALPHA_616: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004B8A  4E71                    7730mmm DONE_616: NOP
00004B8C                          7731mmm         ENDM
00004B8C  4E4F                    7732mm         TRAP    #15         ; EXECUTE OUTPUT
00004B8E                          7733mm         
00004B8E  3212                    7734mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004B90  E949                    7735mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004B92  E049                    7736mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004B94  E849                    7737mm         LSR.W   #4, D1      
00004B96                          7738mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004B96  0C01 0009               7739mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004B9A  6E00 000A               7740mmm         BGT     ALPHA_617
00004B9E  0601 0030               7741mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BA2  6000 0006               7742mmm         BRA     DONE_617
00004BA6  0601 0037               7743mmm ALPHA_617: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BAA  4E71                    7744mmm DONE_617: NOP
00004BAC                          7745mmm         ENDM
00004BAC  4E4F                    7746mm         TRAP    #15         ; EXECUTE OUTPUT
00004BAE                          7747mm         
00004BAE  3212                    7748mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BB0  E149                    7749mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BB2  E049                    7750mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BB4  E849                    7751mm         LSR.W   #4, D1      
00004BB6                          7752mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BB6  0C01 0009               7753mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BBA  6E00 000A               7754mmm         BGT     ALPHA_618
00004BBE  0601 0030               7755mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BC2  6000 0006               7756mmm         BRA     DONE_618
00004BC6  0601 0037               7757mmm ALPHA_618: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BCA  4E71                    7758mmm DONE_618: NOP
00004BCC                          7759mmm         ENDM
00004BCC  4E4F                    7760mm         TRAP    #15         ; EXECUTE OUTPUT
00004BCE                          7761mm         
00004BCE  3212                    7762mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BD0  E149                    7763mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004BD2  E949                    7764mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004BD4  E049                    7765mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BD6  E849                    7766mm         LSR.W   #4, D1      
00004BD8                          7767mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BD8  0C01 0009               7768mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BDC  6E00 000A               7769mmm         BGT     ALPHA_619
00004BE0  0601 0030               7770mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004BE4  6000 0006               7771mmm         BRA     DONE_619
00004BE8  0601 0037               7772mmm ALPHA_619: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004BEC  4E71                    7773mmm DONE_619: NOP
00004BEE                          7774mmm         ENDM
00004BEE  4E4F                    7775mm         TRAP    #15         ; EXECUTE OUTPUT       
00004BF0                          7776mm         ENDM 
00004BF0  361A                    7777m         MOVE.W  (A2)+, D3
00004BF2                          7778mm         ADROUT
00004BF2  3212                    7779mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004BF4  E049                    7780mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004BF6  E849                    7781mm         LSR.W   #4, D1      
00004BF8                          7782mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004BF8  0C01 0009               7783mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004BFC  6E00 000A               7784mmm         BGT     ALPHA_621
00004C00  0601 0030               7785mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C04  6000 0006               7786mmm         BRA     DONE_621
00004C08  0601 0037               7787mmm ALPHA_621: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C0C  4E71                    7788mmm DONE_621: NOP
00004C0E                          7789mmm         ENDM
00004C0E  4E4F                    7790mm         TRAP    #15         ; EXECUTE OUTPUT
00004C10                          7791mm         
00004C10  3212                    7792mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C12  E949                    7793mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00004C14  E049                    7794mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C16  E849                    7795mm         LSR.W   #4, D1      
00004C18                          7796mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C18  0C01 0009               7797mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C1C  6E00 000A               7798mmm         BGT     ALPHA_622
00004C20  0601 0030               7799mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C24  6000 0006               7800mmm         BRA     DONE_622
00004C28  0601 0037               7801mmm ALPHA_622: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C2C  4E71                    7802mmm DONE_622: NOP
00004C2E                          7803mmm         ENDM
00004C2E  4E4F                    7804mm         TRAP    #15         ; EXECUTE OUTPUT
00004C30                          7805mm         
00004C30  3212                    7806mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C32  E149                    7807mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C34  E049                    7808mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C36  E849                    7809mm         LSR.W   #4, D1      
00004C38                          7810mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C38  0C01 0009               7811mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C3C  6E00 000A               7812mmm         BGT     ALPHA_623
00004C40  0601 0030               7813mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C44  6000 0006               7814mmm         BRA     DONE_623
00004C48  0601 0037               7815mmm ALPHA_623: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C4C  4E71                    7816mmm DONE_623: NOP
00004C4E                          7817mmm         ENDM
00004C4E  4E4F                    7818mm         TRAP    #15         ; EXECUTE OUTPUT
00004C50                          7819mm         
00004C50  3212                    7820mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00004C52  E149                    7821mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00004C54  E949                    7822mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00004C56  E049                    7823mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00004C58  E849                    7824mm         LSR.W   #4, D1      
00004C5A                          7825mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00004C5A  0C01 0009               7826mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00004C5E  6E00 000A               7827mmm         BGT     ALPHA_624
00004C62  0601 0030               7828mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00004C66  6000 0006               7829mmm         BRA     DONE_624
00004C6A  0601 0037               7830mmm ALPHA_624: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00004C6E  4E71                    7831mmm DONE_624: NOP
00004C70                          7832mmm         ENDM
00004C70  4E4F                    7833mm         TRAP    #15         ; EXECUTE OUTPUT       
00004C72                          7834mm         ENDM 
00004C72  3605                    7835m         MOVE.W  D5, D3
00004C74                          7836m 
00004C74                          7837m COMPLETE_562:  ; OPCODE HAS BEEN VERIFIED
00004C74                          7838m         ENDM
00004C74                          7839m         printComma
00004C74  43F8 00CF               7840m         LEA     OCOMMA, A1     
00004C78  103C 000E               7841m         MOVE.B  #14,D0          
00004C7C  4E4F                    7842m         TRAP    #15
00004C7E                          7843m         ENDM
00004C7E                          7844m         printAnDest     D5
00004C7E  3205                    7845m         MOVE.W  D5, D1
00004C80  E949                    7846m         LSL     #$04, D1
00004C82  E049                    7847m         LSR     #$08, D1
00004C84  EA49                    7848m         LSR     #$05, D1
00004C86  43F8 00C9               7849m         LEA     OAN, A1     
00004C8A  103C 000E               7850m         MOVE.B  #14,D0          
00004C8E  4E4F                    7851m         TRAP    #15
00004C90  103C 0003               7852m         MOVE.B  #3,D0          
00004C94  4E4F                    7853m         TRAP    #15
00004C96                          7854m         ENDM
00004C96  4E75                    7855          RTS                 ; Return from decodeLEA subroutine
00004C98                          7856  
00004C98                          7857  
00004C98                          7858  ; ------------------------------------------------------------
00004C98                          7859  ; 9. "decodeAND" subroutine
00004C98                          7860  ; AUTHOR
00004C98                          7861  ;
00004C98                          7862  ; TODO: DESCRIPTION
00004C98                          7863  ; ------------------------------------------------------------
00004C98                          7864  decodeAND:
00004C98                          7865m         verifyOpcode    pAND, (A2)
00004C98  43F8 017E               7866m         LEA     PAND, A1      ; INPUT PATTERN STRING
00004C9C  3612                    7867m         MOVE.W  (A2), D3      ; INPUT VALUE
00004C9E  123C 000F               7868m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00004CA2                          7869m         
00004CA2                          7870m LOOP_627: 
00004CA2  0C11 0030               7871m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00004CA6  6700 000E               7872m         BEQ     CHECKFOR0_627
00004CAA  0C11 0031               7873m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00004CAE  6700 0010               7874m         BEQ     CHECKFOR1_627
00004CB2  6000 0012               7875m         BRA     NEXT_627      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00004CB6                          7876m         
00004CB6                          7877m CHECKFOR0_627: 
00004CB6  0303                    7878m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00004CB8  6600 1F86               7879m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00004CBC  6000 0008               7880m         BRA     NEXT_627
00004CC0                          7881m 
00004CC0                          7882m CHECKFOR1_627:
00004CC0  0303                    7883m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00004CC2  6700 1F7C               7884m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00004CC6                          7885m 
00004CC6                          7886m NEXT_627: 
00004CC6  B23C 0000               7887m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00004CCA  6700 0008               7888m         BEQ     COMPLETE_627  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00004CCE  5301                    7889m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004CD0  1819                    7890m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00004CD2  60CE                    7891m         BRA     LOOP_627      ; BEGIN LOOP AGAIN
00004CD4                          7892m 
00004CD4                          7893m COMPLETE_627:  ; OPCODE HAS BEEN VERIFIED
00004CD4                          7894m         ENDM
00004CD4  43F8 008B               7895          LEA     oAND, A1     
00004CD8  103C 000E               7896          MOVE.B  #14,D0          
00004CDC  4E4F                    7897          TRAP    #15
00004CDE                          7898m         printOpMode     (A2)
00004CDE  3612                    7899m         MOVE.W  (A2), D3      
00004CE0  123C 0008               7900m         MOVE.B  #8, D1    
00004CE4  4246                    7901m         CLR     D6
00004CE6  4247                    7902m         CLR     D7
00004CE8                          7903m CHECKFORDESTDN_628: 
00004CE8  0303                    7904m         BTST    D1, D3      
00004CEA  6600 004C               7905m         BNE     CHECKFORSRCDN_628
00004CEE  4EB9 00004DC6           7906m         JSR     NEXT_628
00004CF4  1C3C 0001               7907m         MOVE.B  #$1, D6
00004CF8  0303                    7908m         BTST    D1, D3      
00004CFA  6700 0014               7909m         BEQ     DESTDNW_628
00004CFE                          7910m DESTDNL_628:        
00004CFE  43F8 00C3               7911m         LEA     OLSIZE, A1     
00004D02  103C 000E               7912m         MOVE.B  #14,D0          
00004D06  4E4F                    7913m         TRAP    #15
00004D08  1E3C 0001               7914m         MOVE.B  #$1, D7
00004D0C  6000 00BC               7915m         BRA     COMPLETE_628 
00004D10                          7916m DESTDNW_628: 
00004D10  4EB9 00004DC6           7917m         JSR     NEXT_628
00004D16  0303                    7918m         BTST    D1, D3      
00004D18  6700 0010               7919m         BEQ     DESTDNB_628
00004D1C  43F8 00BF               7920m         LEA     OWSIZE, A1     
00004D20  103C 000E               7921m         MOVE.B  #14,D0          
00004D24  4E4F                    7922m         TRAP    #15
00004D26  6000 00A2               7923m         BRA     COMPLETE_628 
00004D2A                          7924m DESTDNB_628: 
00004D2A  43F8 00BB               7925m         LEA     OBSIZE, A1     
00004D2E  103C 000E               7926m         MOVE.B  #14,D0          
00004D32  4E4F                    7927m         TRAP    #15
00004D34  6000 0094               7928m         BRA     COMPLETE_628 
00004D38                          7929m CHECKFORSRCDN_628: 
00004D38  4EB9 00004DC6           7930m         JSR     NEXT_628
00004D3E  0303                    7931m         BTST    D1, D3      
00004D40  6700 002C               7932m         BEQ     SRCDNW_628
00004D44                          7933m SRCDNL_628:        
00004D44  43F8 00C3               7934m         LEA     OLSIZE, A1     
00004D48  103C 000E               7935m         MOVE.B  #14,D0          
00004D4C  4E4F                    7936m         TRAP    #15
00004D4E  1E3C 0001               7937m         MOVE.B  #$1, D7
00004D52                          7938mm         PRINTDNDEST D3
00004D52  3203                    7939mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D54  E949                    7940mm         LSL     #$04, D1
00004D56  E049                    7941mm         LSR     #$08, D1
00004D58  EA49                    7942mm         LSR     #$05, D1
00004D5A  43F8 00C7               7943mm         LEA     ODN, A1     
00004D5E  103C 000E               7944mm         MOVE.B  #14,D0          
00004D62  4E4F                    7945mm         TRAP    #15
00004D64  103C 0003               7946mm         MOVE.B  #3,D0          
00004D68  4E4F                    7947mm         TRAP    #15
00004D6A                          7948mm         ENDM
00004D6A  6000 005E               7949m         BRA     COMPLETE_628 
00004D6E                          7950m SRCDNW_628:
00004D6E  4EB9 00004DC6           7951m         JSR     NEXT_628
00004D74  0303                    7952m         BTST    D1, D3     
00004D76  6700 0028               7953m         BEQ     SRCDNB_628
00004D7A  43F8 00BF               7954m         LEA     OWSIZE, A1     
00004D7E  103C 000E               7955m         MOVE.B  #14,D0          
00004D82  4E4F                    7956m         TRAP    #15
00004D84                          7957mm         PRINTDNDEST D3
00004D84  3203                    7958mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004D86  E949                    7959mm         LSL     #$04, D1
00004D88  E049                    7960mm         LSR     #$08, D1
00004D8A  EA49                    7961mm         LSR     #$05, D1
00004D8C  43F8 00C7               7962mm         LEA     ODN, A1     
00004D90  103C 000E               7963mm         MOVE.B  #14,D0          
00004D94  4E4F                    7964mm         TRAP    #15
00004D96  103C 0003               7965mm         MOVE.B  #3,D0          
00004D9A  4E4F                    7966mm         TRAP    #15
00004D9C                          7967mm         ENDM
00004D9C  6000 002C               7968m         BRA     COMPLETE_628 
00004DA0                          7969m SRCDNB_628: 
00004DA0  43F8 00BB               7970m         LEA     OBSIZE, A1     
00004DA4  103C 000E               7971m         MOVE.B  #14,D0          
00004DA8  4E4F                    7972m         TRAP    #15
00004DAA                          7973mm         PRINTDNDEST D3
00004DAA  3203                    7974mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004DAC  E949                    7975mm         LSL     #$04, D1
00004DAE  E049                    7976mm         LSR     #$08, D1
00004DB0  EA49                    7977mm         LSR     #$05, D1
00004DB2  43F8 00C7               7978mm         LEA     ODN, A1     
00004DB6  103C 000E               7979mm         MOVE.B  #14,D0          
00004DBA  4E4F                    7980mm         TRAP    #15
00004DBC  103C 0003               7981mm         MOVE.B  #3,D0          
00004DC0  4E4F                    7982mm         TRAP    #15
00004DC2                          7983mm         ENDM
00004DC2  6000 0006               7984m         BRA     COMPLETE_628 
00004DC6                          7985m 
00004DC6                          7986m NEXT_628:
00004DC6  5301                    7987m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00004DC8  4E75                    7988m         RTS                
00004DCA                          7989m 
00004DCA                          7990m COMPLETE_628:  ; OPCODE HAS BEEN VERIFIED
00004DCA                          7991m         ENDM
00004DCA  BC3C 0001               7992          CMP.B   #$1, D6             ; If 1, <ea> into Dn otherwise Dn into <ea>
00004DCE  6700 05E0               7993          BEQ     decodeAndDestOp
00004DD2                          7994m         printComma
00004DD2  43F8 00CF               7995m         LEA     OCOMMA, A1     
00004DD6  103C 000E               7996m         MOVE.B  #14,D0          
00004DDA  4E4F                    7997m         TRAP    #15
00004DDC                          7998m         ENDM
00004DDC                          7999m         prepareAdrMode  #$1, (A2)
00004DDC  3C3C 0001               8000m         MOVE.W  #$1, D6      ; INPUT VALUE
00004DE0  3212                    8001m         MOVE.W  (A2), D1
00004DE2  BC3C 0001               8002m         CMP.B   #$01, D6
00004DE6  6700 000C               8003m         BEQ     ADRSOURCE_633    
00004DEA                          8004m ADRDEST_633:
00004DEA  EF49                    8005m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00004DEC  E049                    8006m         LSR     #$08, D1
00004DEE  EA49                    8007m         LSR     #$05, D1
00004DF0  6000 000A               8008m         BRA     COMPLETE_633 
00004DF4                          8009m ADRSOURCE_633:                
00004DF4  E149                    8010m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00004DF6  E549                    8011m         LSL     #$02, D1
00004DF8  E049                    8012m         LSR     #$08, D1
00004DFA  EA49                    8013m         LSR     #$05, D1
00004DFC                          8014m COMPLETE_633:  ; OPCODE HAS BEEN VERIFIED
00004DFC                          8015m         ENDM        
00004DFC                          8016m         decodeAdrMode   (A2), D1
00004DFC  3612                    8017m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00004DFE  3201                    8018m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00004E00                          8019m 
00004E00  B23C 0001               8020m         CMP.B   #$01, D1
00004E04  6700 0066               8021m         BEQ     ADRREGDIRECT_634    
00004E08  B23C 0002               8022m         CMP.B   #$02, D1
00004E0C  6700 00A0               8023m         BEQ     ADRREGINDIRECT_634  
00004E10  B23C 0003               8024m         CMP.B   #$03, D1
00004E14  6700 0102               8025m         BEQ     ADRREGPOSTINC_634  
00004E18  B23C 0004               8026m         CMP.B   #$04, D1
00004E1C  6700 0178               8027m         BEQ     ADRREGPREDEC_634
00004E20  B23C 0007               8028m         CMP.B   #$07, D1
00004E24  6700 01EE               8029m         BEQ     ADRABSOLUTE_634    
00004E28                          8030m         
00004E28                          8031m DATAREGDIRECT_634: 
00004E28  BC3C 0001               8032m         CMP.B   #$01, D6
00004E2C  6700 001E               8033m         BEQ     DATAREGDIRECTSRC_634   
00004E30                          8034m DATAREGDIRECTDEST_634: 
00004E30                          8035mm         PRINTDNDEST D3 
00004E30  3203                    8036mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00004E32  E949                    8037mm         LSL     #$04, D1
00004E34  E049                    8038mm         LSR     #$08, D1
00004E36  EA49                    8039mm         LSR     #$05, D1
00004E38  43F8 00C7               8040mm         LEA     ODN, A1     
00004E3C  103C 000E               8041mm         MOVE.B  #14,D0          
00004E40  4E4F                    8042mm         TRAP    #15
00004E42  103C 0003               8043mm         MOVE.B  #3,D0          
00004E46  4E4F                    8044mm         TRAP    #15
00004E48                          8045mm         ENDM
00004E48  6000 0562               8046m         BRA     COMPLETE_634 
00004E4C                          8047m DATAREGDIRECTSRC_634: 
00004E4C                          8048mm         PRINTDNSRC D3 
00004E4C  4281                    8049mm         CLR.L   D1
00004E4E  3203                    8050mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E50  E149                    8051mm         LSL     #$08, D1
00004E52  EB49                    8052mm         LSL     #$05, D1
00004E54  E049                    8053mm         LSR     #$08, D1
00004E56  EA49                    8054mm         LSR     #$05, D1
00004E58  43F8 00C7               8055mm         LEA     ODN, A1     
00004E5C  103C 000E               8056mm         MOVE.B  #14,D0          
00004E60  4E4F                    8057mm         TRAP    #15
00004E62  103C 0003               8058mm         MOVE.B  #3,D0          
00004E66  4E4F                    8059mm         TRAP    #15
00004E68                          8060mm         ENDM
00004E68  6000 0542               8061m         BRA     COMPLETE_634   
00004E6C                          8062m         
00004E6C                          8063m ADRREGDIRECT_634: 
00004E6C  BC3C 0001               8064m         CMP.B   #$01, D6
00004E70  6700 001E               8065m         BEQ     ADRREGDIRECTSRC_634   
00004E74                          8066m ADRREGDIRECTDEST_634:
00004E74                          8067mm         PRINTANDEST D3
00004E74  3203                    8068mm         MOVE.W  D3, D1
00004E76  E949                    8069mm         LSL     #$04, D1
00004E78  E049                    8070mm         LSR     #$08, D1
00004E7A  EA49                    8071mm         LSR     #$05, D1
00004E7C  43F8 00C9               8072mm         LEA     OAN, A1     
00004E80  103C 000E               8073mm         MOVE.B  #14,D0          
00004E84  4E4F                    8074mm         TRAP    #15
00004E86  103C 0003               8075mm         MOVE.B  #3,D0          
00004E8A  4E4F                    8076mm         TRAP    #15
00004E8C                          8077mm         ENDM
00004E8C  6000 051E               8078m         BRA     COMPLETE_634   
00004E90                          8079m ADRREGDIRECTSRC_634:
00004E90                          8080mm         PRINTANSRC D3
00004E90  3203                    8081mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004E92  E149                    8082mm         LSL     #$08, D1
00004E94  EB49                    8083mm         LSL     #$05, D1
00004E96  E049                    8084mm         LSR     #$08, D1
00004E98  EA49                    8085mm         LSR     #$05, D1
00004E9A  43F8 00C9               8086mm         LEA     OAN, A1     
00004E9E  103C 000E               8087mm         MOVE.B  #14,D0          
00004EA2  4E4F                    8088mm         TRAP    #15
00004EA4  103C 0003               8089mm         MOVE.B  #3,D0          
00004EA8  4E4F                    8090mm         TRAP    #15
00004EAA                          8091mm         ENDM
00004EAA  6000 0500               8092m         BRA     COMPLETE_634   
00004EAE                          8093m        
00004EAE                          8094m ADRREGINDIRECT_634:   
00004EAE  BC3C 0001               8095m         CMP.B   #$01, D6
00004EB2  6700 0032               8096m         BEQ     ADRREGINDIRECTSRC_634   
00004EB6                          8097m ADRREGINDIRECTDEST_634:
00004EB6                          8098mm         PRINTLB
00004EB6  43F8 00CB               8099mm         LEA     OLB, A1     
00004EBA  103C 000E               8100mm         MOVE.B  #14,D0          
00004EBE  4E4F                    8101mm         TRAP    #15
00004EC0                          8102mm         ENDM
00004EC0                          8103mm         PRINTANDEST D3  
00004EC0  3203                    8104mm         MOVE.W  D3, D1
00004EC2  E949                    8105mm         LSL     #$04, D1
00004EC4  E049                    8106mm         LSR     #$08, D1
00004EC6  EA49                    8107mm         LSR     #$05, D1
00004EC8  43F8 00C9               8108mm         LEA     OAN, A1     
00004ECC  103C 000E               8109mm         MOVE.B  #14,D0          
00004ED0  4E4F                    8110mm         TRAP    #15
00004ED2  103C 0003               8111mm         MOVE.B  #3,D0          
00004ED6  4E4F                    8112mm         TRAP    #15
00004ED8                          8113mm         ENDM
00004ED8                          8114mm         PRINTRB
00004ED8  43F8 00CD               8115mm         LEA     ORB, A1     
00004EDC  103C 000E               8116mm         MOVE.B  #14,D0          
00004EE0  4E4F                    8117mm         TRAP    #15
00004EE2                          8118mm         ENDM
00004EE2  6000 04C8               8119m         BRA     COMPLETE_634     
00004EE6                          8120m ADRREGINDIRECTSRC_634:   
00004EE6                          8121mm         PRINTLB
00004EE6  43F8 00CB               8122mm         LEA     OLB, A1     
00004EEA  103C 000E               8123mm         MOVE.B  #14,D0          
00004EEE  4E4F                    8124mm         TRAP    #15
00004EF0                          8125mm         ENDM
00004EF0                          8126mm         PRINTANSRC D3  
00004EF0  3203                    8127mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004EF2  E149                    8128mm         LSL     #$08, D1
00004EF4  EB49                    8129mm         LSL     #$05, D1
00004EF6  E049                    8130mm         LSR     #$08, D1
00004EF8  EA49                    8131mm         LSR     #$05, D1
00004EFA  43F8 00C9               8132mm         LEA     OAN, A1     
00004EFE  103C 000E               8133mm         MOVE.B  #14,D0          
00004F02  4E4F                    8134mm         TRAP    #15
00004F04  103C 0003               8135mm         MOVE.B  #3,D0          
00004F08  4E4F                    8136mm         TRAP    #15
00004F0A                          8137mm         ENDM
00004F0A                          8138mm         PRINTRB
00004F0A  43F8 00CD               8139mm         LEA     ORB, A1     
00004F0E  103C 000E               8140mm         MOVE.B  #14,D0          
00004F12  4E4F                    8141mm         TRAP    #15
00004F14                          8142mm         ENDM
00004F14  6000 0496               8143m         BRA     COMPLETE_634   
00004F18                          8144m         
00004F18                          8145m ADRREGPOSTINC_634:   
00004F18  BC3C 0001               8146m         CMP.B   #$01, D6
00004F1C  6700 003C               8147m         BEQ     ADRREGPOSTINCSRC_634   
00004F20                          8148m ADRREGPOSTINCDEST_634: 
00004F20                          8149mm         PRINTLB
00004F20  43F8 00CB               8150mm         LEA     OLB, A1     
00004F24  103C 000E               8151mm         MOVE.B  #14,D0          
00004F28  4E4F                    8152mm         TRAP    #15
00004F2A                          8153mm         ENDM
00004F2A                          8154mm         PRINTANDEST D3  
00004F2A  3203                    8155mm         MOVE.W  D3, D1
00004F2C  E949                    8156mm         LSL     #$04, D1
00004F2E  E049                    8157mm         LSR     #$08, D1
00004F30  EA49                    8158mm         LSR     #$05, D1
00004F32  43F8 00C9               8159mm         LEA     OAN, A1     
00004F36  103C 000E               8160mm         MOVE.B  #14,D0          
00004F3A  4E4F                    8161mm         TRAP    #15
00004F3C  103C 0003               8162mm         MOVE.B  #3,D0          
00004F40  4E4F                    8163mm         TRAP    #15
00004F42                          8164mm         ENDM
00004F42                          8165mm         PRINTRB
00004F42  43F8 00CD               8166mm         LEA     ORB, A1     
00004F46  103C 000E               8167mm         MOVE.B  #14,D0          
00004F4A  4E4F                    8168mm         TRAP    #15
00004F4C                          8169mm         ENDM
00004F4C                          8170mm         PRINTPI
00004F4C  43F8 00D4               8171mm         LEA     OPSTINC, A1     
00004F50  103C 000E               8172mm         MOVE.B  #14,D0          
00004F54  4E4F                    8173mm         TRAP    #15
00004F56                          8174mm         ENDM
00004F56  6000 0454               8175m         BRA     COMPLETE_634  
00004F5A                          8176m ADRREGPOSTINCSRC_634:           
00004F5A                          8177mm         PRINTLB
00004F5A  43F8 00CB               8178mm         LEA     OLB, A1     
00004F5E  103C 000E               8179mm         MOVE.B  #14,D0          
00004F62  4E4F                    8180mm         TRAP    #15
00004F64                          8181mm         ENDM
00004F64                          8182mm         PRINTANSRC D3  
00004F64  3203                    8183mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004F66  E149                    8184mm         LSL     #$08, D1
00004F68  EB49                    8185mm         LSL     #$05, D1
00004F6A  E049                    8186mm         LSR     #$08, D1
00004F6C  EA49                    8187mm         LSR     #$05, D1
00004F6E  43F8 00C9               8188mm         LEA     OAN, A1     
00004F72  103C 000E               8189mm         MOVE.B  #14,D0          
00004F76  4E4F                    8190mm         TRAP    #15
00004F78  103C 0003               8191mm         MOVE.B  #3,D0          
00004F7C  4E4F                    8192mm         TRAP    #15
00004F7E                          8193mm         ENDM
00004F7E                          8194mm         PRINTRB
00004F7E  43F8 00CD               8195mm         LEA     ORB, A1     
00004F82  103C 000E               8196mm         MOVE.B  #14,D0          
00004F86  4E4F                    8197mm         TRAP    #15
00004F88                          8198mm         ENDM
00004F88                          8199mm         PRINTPI
00004F88  43F8 00D4               8200mm         LEA     OPSTINC, A1     
00004F8C  103C 000E               8201mm         MOVE.B  #14,D0          
00004F90  4E4F                    8202mm         TRAP    #15
00004F92                          8203mm         ENDM
00004F92  6000 0418               8204m         BRA     COMPLETE_634  
00004F96                          8205m ADRREGPREDEC_634: 
00004F96  BC3C 0001               8206m         CMP.B   #$01, D6
00004F9A  6700 003C               8207m         BEQ     ADRREGPREDECSRC_634   
00004F9E                          8208m ADRREGPREDECDEST_634:
00004F9E                          8209mm         PRINTPD  
00004F9E  43F8 00D2               8210mm         LEA     OPREDEC, A1     
00004FA2  103C 000E               8211mm         MOVE.B  #14,D0          
00004FA6  4E4F                    8212mm         TRAP    #15
00004FA8                          8213mm         ENDM
00004FA8                          8214mm         PRINTLB
00004FA8  43F8 00CB               8215mm         LEA     OLB, A1     
00004FAC  103C 000E               8216mm         MOVE.B  #14,D0          
00004FB0  4E4F                    8217mm         TRAP    #15
00004FB2                          8218mm         ENDM
00004FB2                          8219mm         PRINTANDEST D3  
00004FB2  3203                    8220mm         MOVE.W  D3, D1
00004FB4  E949                    8221mm         LSL     #$04, D1
00004FB6  E049                    8222mm         LSR     #$08, D1
00004FB8  EA49                    8223mm         LSR     #$05, D1
00004FBA  43F8 00C9               8224mm         LEA     OAN, A1     
00004FBE  103C 000E               8225mm         MOVE.B  #14,D0          
00004FC2  4E4F                    8226mm         TRAP    #15
00004FC4  103C 0003               8227mm         MOVE.B  #3,D0          
00004FC8  4E4F                    8228mm         TRAP    #15
00004FCA                          8229mm         ENDM
00004FCA                          8230mm         PRINTRB
00004FCA  43F8 00CD               8231mm         LEA     ORB, A1     
00004FCE  103C 000E               8232mm         MOVE.B  #14,D0          
00004FD2  4E4F                    8233mm         TRAP    #15
00004FD4                          8234mm         ENDM
00004FD4  6000 03D6               8235m         BRA     COMPLETE_634   
00004FD8                          8236m ADRREGPREDECSRC_634: 
00004FD8                          8237mm         PRINTPD  
00004FD8  43F8 00D2               8238mm         LEA     OPREDEC, A1     
00004FDC  103C 000E               8239mm         MOVE.B  #14,D0          
00004FE0  4E4F                    8240mm         TRAP    #15
00004FE2                          8241mm         ENDM
00004FE2                          8242mm         PRINTLB
00004FE2  43F8 00CB               8243mm         LEA     OLB, A1     
00004FE6  103C 000E               8244mm         MOVE.B  #14,D0          
00004FEA  4E4F                    8245mm         TRAP    #15
00004FEC                          8246mm         ENDM
00004FEC                          8247mm         PRINTANSRC D3  
00004FEC  3203                    8248mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00004FEE  E149                    8249mm         LSL     #$08, D1
00004FF0  EB49                    8250mm         LSL     #$05, D1
00004FF2  E049                    8251mm         LSR     #$08, D1
00004FF4  EA49                    8252mm         LSR     #$05, D1
00004FF6  43F8 00C9               8253mm         LEA     OAN, A1     
00004FFA  103C 000E               8254mm         MOVE.B  #14,D0          
00004FFE  4E4F                    8255mm         TRAP    #15
00005000  103C 0003               8256mm         MOVE.B  #3,D0          
00005004  4E4F                    8257mm         TRAP    #15
00005006                          8258mm         ENDM
00005006                          8259mm         PRINTRB
00005006  43F8 00CD               8260mm         LEA     ORB, A1     
0000500A  103C 000E               8261mm         MOVE.B  #14,D0          
0000500E  4E4F                    8262mm         TRAP    #15
00005010                          8263mm         ENDM
00005010  6000 039A               8264m         BRA     COMPLETE_634
00005014                          8265m        
00005014                          8266m ADRABSOLUTE_634:
00005014  BC3C 0001               8267m         CMP.B   #$01, D6
00005018  6600 0018               8268m         BNE     ADRABSOLUTEDST_634 
0000501C                          8269m         
0000501C  3A03                    8270m         MOVE.W  D3, D5
0000501E  0803 0002               8271m         BTST    #2, D3
00005022  6600 0024               8272m         BNE     ADRIMMEDIATE_634
00005026  0803 0000               8273m         BTST    #0, D3
0000502A  6600 0270               8274m         BNE     ADRABSOLUTEL_634
0000502E  6000 01DA               8275m         BRA     ADRABSOLUTEW_634
00005032                          8276m ADRABSOLUTEDST_634:
00005032  3A03                    8277m         MOVE.W  D3, D5
00005034  0803 000B               8278m         BTST    #$B, D3
00005038  6600 000E               8279m         BNE     ADRIMMEDIATE_634
0000503C  0803 0009               8280m         BTST    #$09, D3
00005040  6600 025A               8281m         BNE     ADRABSOLUTEL_634
00005044  6000 01C4               8282m         BRA     ADRABSOLUTEW_634
00005048                          8283m ADRIMMEDIATE_634:
00005048  BE3C 0001               8284m         CMP.B   #1, D7
0000504C  6700 009E               8285m         BEQ     ADRIMMEDIATEL_634
00005050                          8286m ADRIMMEDIATEW_634:
00005050  361A                    8287m         MOVE.W  (A2)+, D3
00005052                          8288mm         PRINTHASH
00005052  103C 0006               8289mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005056  323C 0023               8290mm         MOVE.W  #35, D1     ; AN = SIGN
0000505A  4E4F                    8291mm         TRAP    #15         ; OUTPUT = SIGN
0000505C                          8292mm         ENDM
0000505C                          8293mm         PRINTSIGN
0000505C  103C 0006               8294mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005060  323C 0024               8295mm         MOVE.W  #36, D1     ; AN = SIGN
00005064  4E4F                    8296mm         TRAP    #15         ; OUTPUT = SIGN
00005066                          8297mm         ENDM
00005066                          8298mm         ADROUT
00005066  3212                    8299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005068  E049                    8300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000506A  E849                    8301mm         LSR.W   #4, D1      
0000506C                          8302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000506C  0C01 0009               8303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005070  6E00 000A               8304mmm         BGT     ALPHA_664
00005074  0601 0030               8305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005078  6000 0006               8306mmm         BRA     DONE_664
0000507C  0601 0037               8307mmm ALPHA_664: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005080  4E71                    8308mmm DONE_664: NOP
00005082                          8309mmm         ENDM
00005082  4E4F                    8310mm         TRAP    #15         ; EXECUTE OUTPUT
00005084                          8311mm         
00005084  3212                    8312mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005086  E949                    8313mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005088  E049                    8314mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000508A  E849                    8315mm         LSR.W   #4, D1      
0000508C                          8316mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000508C  0C01 0009               8317mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005090  6E00 000A               8318mmm         BGT     ALPHA_665
00005094  0601 0030               8319mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005098  6000 0006               8320mmm         BRA     DONE_665
0000509C  0601 0037               8321mmm ALPHA_665: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050A0  4E71                    8322mmm DONE_665: NOP
000050A2                          8323mmm         ENDM
000050A2  4E4F                    8324mm         TRAP    #15         ; EXECUTE OUTPUT
000050A4                          8325mm         
000050A4  3212                    8326mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050A6  E149                    8327mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050A8  E049                    8328mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050AA  E849                    8329mm         LSR.W   #4, D1      
000050AC                          8330mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050AC  0C01 0009               8331mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050B0  6E00 000A               8332mmm         BGT     ALPHA_666
000050B4  0601 0030               8333mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050B8  6000 0006               8334mmm         BRA     DONE_666
000050BC  0601 0037               8335mmm ALPHA_666: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050C0  4E71                    8336mmm DONE_666: NOP
000050C2                          8337mmm         ENDM
000050C2  4E4F                    8338mm         TRAP    #15         ; EXECUTE OUTPUT
000050C4                          8339mm         
000050C4  3212                    8340mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000050C6  E149                    8341mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000050C8  E949                    8342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000050CA  E049                    8343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000050CC  E849                    8344mm         LSR.W   #4, D1      
000050CE                          8345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000050CE  0C01 0009               8346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000050D2  6E00 000A               8347mmm         BGT     ALPHA_667
000050D6  0601 0030               8348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000050DA  6000 0006               8349mmm         BRA     DONE_667
000050DE  0601 0037               8350mmm ALPHA_667: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000050E2  4E71                    8351mmm DONE_667: NOP
000050E4                          8352mmm         ENDM
000050E4  4E4F                    8353mm         TRAP    #15         ; EXECUTE OUTPUT       
000050E6                          8354mm         ENDM 
000050E6  3605                    8355m         MOVE.W  D5, D3
000050E8  6000 02C2               8356m         BRA     COMPLETE_634
000050EC                          8357m ADRIMMEDIATEL_634:
000050EC  361A                    8358m         MOVE.W  (A2)+, D3
000050EE                          8359mm         PRINTHASH
000050EE  103C 0006               8360mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050F2  323C 0023               8361mm         MOVE.W  #35, D1     ; AN = SIGN
000050F6  4E4F                    8362mm         TRAP    #15         ; OUTPUT = SIGN
000050F8                          8363mm         ENDM
000050F8                          8364mm         PRINTSIGN
000050F8  103C 0006               8365mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000050FC  323C 0024               8366mm         MOVE.W  #36, D1     ; AN = SIGN
00005100  4E4F                    8367mm         TRAP    #15         ; OUTPUT = SIGN
00005102                          8368mm         ENDM
00005102                          8369mm         ADROUT 
00005102  3212                    8370mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005104  E049                    8371mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005106  E849                    8372mm         LSR.W   #4, D1      
00005108                          8373mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005108  0C01 0009               8374mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000510C  6E00 000A               8375mmm         BGT     ALPHA_671
00005110  0601 0030               8376mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005114  6000 0006               8377mmm         BRA     DONE_671
00005118  0601 0037               8378mmm ALPHA_671: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000511C  4E71                    8379mmm DONE_671: NOP
0000511E                          8380mmm         ENDM
0000511E  4E4F                    8381mm         TRAP    #15         ; EXECUTE OUTPUT
00005120                          8382mm         
00005120  3212                    8383mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005122  E949                    8384mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005124  E049                    8385mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005126  E849                    8386mm         LSR.W   #4, D1      
00005128                          8387mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005128  0C01 0009               8388mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000512C  6E00 000A               8389mmm         BGT     ALPHA_672
00005130  0601 0030               8390mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005134  6000 0006               8391mmm         BRA     DONE_672
00005138  0601 0037               8392mmm ALPHA_672: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000513C  4E71                    8393mmm DONE_672: NOP
0000513E                          8394mmm         ENDM
0000513E  4E4F                    8395mm         TRAP    #15         ; EXECUTE OUTPUT
00005140                          8396mm         
00005140  3212                    8397mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005142  E149                    8398mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005144  E049                    8399mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005146  E849                    8400mm         LSR.W   #4, D1      
00005148                          8401mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005148  0C01 0009               8402mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000514C  6E00 000A               8403mmm         BGT     ALPHA_673
00005150  0601 0030               8404mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005154  6000 0006               8405mmm         BRA     DONE_673
00005158  0601 0037               8406mmm ALPHA_673: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000515C  4E71                    8407mmm DONE_673: NOP
0000515E                          8408mmm         ENDM
0000515E  4E4F                    8409mm         TRAP    #15         ; EXECUTE OUTPUT
00005160                          8410mm         
00005160  3212                    8411mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005162  E149                    8412mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005164  E949                    8413mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005166  E049                    8414mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005168  E849                    8415mm         LSR.W   #4, D1      
0000516A                          8416mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000516A  0C01 0009               8417mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000516E  6E00 000A               8418mmm         BGT     ALPHA_674
00005172  0601 0030               8419mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005176  6000 0006               8420mmm         BRA     DONE_674
0000517A  0601 0037               8421mmm ALPHA_674: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000517E  4E71                    8422mmm DONE_674: NOP
00005180                          8423mmm         ENDM
00005180  4E4F                    8424mm         TRAP    #15         ; EXECUTE OUTPUT       
00005182                          8425mm         ENDM 
00005182  361A                    8426m         MOVE.W  (A2)+, D3
00005184                          8427mm         ADROUT
00005184  3212                    8428mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005186  E049                    8429mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005188  E849                    8430mm         LSR.W   #4, D1      
0000518A                          8431mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000518A  0C01 0009               8432mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000518E  6E00 000A               8433mmm         BGT     ALPHA_676
00005192  0601 0030               8434mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005196  6000 0006               8435mmm         BRA     DONE_676
0000519A  0601 0037               8436mmm ALPHA_676: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000519E  4E71                    8437mmm DONE_676: NOP
000051A0                          8438mmm         ENDM
000051A0  4E4F                    8439mm         TRAP    #15         ; EXECUTE OUTPUT
000051A2                          8440mm         
000051A2  3212                    8441mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051A4  E949                    8442mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000051A6  E049                    8443mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051A8  E849                    8444mm         LSR.W   #4, D1      
000051AA                          8445mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051AA  0C01 0009               8446mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051AE  6E00 000A               8447mmm         BGT     ALPHA_677
000051B2  0601 0030               8448mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051B6  6000 0006               8449mmm         BRA     DONE_677
000051BA  0601 0037               8450mmm ALPHA_677: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051BE  4E71                    8451mmm DONE_677: NOP
000051C0                          8452mmm         ENDM
000051C0  4E4F                    8453mm         TRAP    #15         ; EXECUTE OUTPUT
000051C2                          8454mm         
000051C2  3212                    8455mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051C4  E149                    8456mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051C6  E049                    8457mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051C8  E849                    8458mm         LSR.W   #4, D1      
000051CA                          8459mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051CA  0C01 0009               8460mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051CE  6E00 000A               8461mmm         BGT     ALPHA_678
000051D2  0601 0030               8462mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051D6  6000 0006               8463mmm         BRA     DONE_678
000051DA  0601 0037               8464mmm ALPHA_678: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000051DE  4E71                    8465mmm DONE_678: NOP
000051E0                          8466mmm         ENDM
000051E0  4E4F                    8467mm         TRAP    #15         ; EXECUTE OUTPUT
000051E2                          8468mm         
000051E2  3212                    8469mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000051E4  E149                    8470mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000051E6  E949                    8471mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000051E8  E049                    8472mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000051EA  E849                    8473mm         LSR.W   #4, D1      
000051EC                          8474mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000051EC  0C01 0009               8475mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000051F0  6E00 000A               8476mmm         BGT     ALPHA_679
000051F4  0601 0030               8477mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000051F8  6000 0006               8478mmm         BRA     DONE_679
000051FC  0601 0037               8479mmm ALPHA_679: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005200  4E71                    8480mmm DONE_679: NOP
00005202                          8481mmm         ENDM
00005202  4E4F                    8482mm         TRAP    #15         ; EXECUTE OUTPUT       
00005204                          8483mm         ENDM 
00005204  3605                    8484m         MOVE.W  D5, D3
00005206  6000 01A4               8485m         BRA     COMPLETE_634 
0000520A                          8486m ADRABSOLUTEW_634:     
0000520A  361A                    8487m         MOVE.W  (A2)+, D3
0000520C                          8488mm         PRINTSIGN
0000520C  103C 0006               8489mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005210  323C 0024               8490mm         MOVE.W  #36, D1     ; AN = SIGN
00005214  4E4F                    8491mm         TRAP    #15         ; OUTPUT = SIGN
00005216                          8492mm         ENDM
00005216                          8493mm         ADROUT
00005216  3212                    8494mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005218  E049                    8495mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000521A  E849                    8496mm         LSR.W   #4, D1      
0000521C                          8497mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000521C  0C01 0009               8498mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005220  6E00 000A               8499mmm         BGT     ALPHA_682
00005224  0601 0030               8500mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005228  6000 0006               8501mmm         BRA     DONE_682
0000522C  0601 0037               8502mmm ALPHA_682: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005230  4E71                    8503mmm DONE_682: NOP
00005232                          8504mmm         ENDM
00005232  4E4F                    8505mm         TRAP    #15         ; EXECUTE OUTPUT
00005234                          8506mm         
00005234  3212                    8507mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005236  E949                    8508mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005238  E049                    8509mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000523A  E849                    8510mm         LSR.W   #4, D1      
0000523C                          8511mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000523C  0C01 0009               8512mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005240  6E00 000A               8513mmm         BGT     ALPHA_683
00005244  0601 0030               8514mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005248  6000 0006               8515mmm         BRA     DONE_683
0000524C  0601 0037               8516mmm ALPHA_683: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005250  4E71                    8517mmm DONE_683: NOP
00005252                          8518mmm         ENDM
00005252  4E4F                    8519mm         TRAP    #15         ; EXECUTE OUTPUT
00005254                          8520mm         
00005254  3212                    8521mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005256  E149                    8522mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005258  E049                    8523mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000525A  E849                    8524mm         LSR.W   #4, D1      
0000525C                          8525mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000525C  0C01 0009               8526mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005260  6E00 000A               8527mmm         BGT     ALPHA_684
00005264  0601 0030               8528mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005268  6000 0006               8529mmm         BRA     DONE_684
0000526C  0601 0037               8530mmm ALPHA_684: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005270  4E71                    8531mmm DONE_684: NOP
00005272                          8532mmm         ENDM
00005272  4E4F                    8533mm         TRAP    #15         ; EXECUTE OUTPUT
00005274                          8534mm         
00005274  3212                    8535mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005276  E149                    8536mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005278  E949                    8537mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000527A  E049                    8538mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000527C  E849                    8539mm         LSR.W   #4, D1      
0000527E                          8540mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000527E  0C01 0009               8541mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005282  6E00 000A               8542mmm         BGT     ALPHA_685
00005286  0601 0030               8543mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000528A  6000 0006               8544mmm         BRA     DONE_685
0000528E  0601 0037               8545mmm ALPHA_685: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005292  4E71                    8546mmm DONE_685: NOP
00005294                          8547mmm         ENDM
00005294  4E4F                    8548mm         TRAP    #15         ; EXECUTE OUTPUT       
00005296                          8549mm         ENDM 
00005296  3605                    8550m         MOVE.W  D5, D3
00005298  6000 0112               8551m         BRA     COMPLETE_634  
0000529C                          8552m ADRABSOLUTEL_634:  
0000529C  361A                    8553m         MOVE.W  (A2)+, D3
0000529E                          8554mm         PRINTSIGN
0000529E  103C 0006               8555mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000052A2  323C 0024               8556mm         MOVE.W  #36, D1     ; AN = SIGN
000052A6  4E4F                    8557mm         TRAP    #15         ; OUTPUT = SIGN
000052A8                          8558mm         ENDM
000052A8                          8559mm         ADROUT 
000052A8  3212                    8560mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052AA  E049                    8561mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052AC  E849                    8562mm         LSR.W   #4, D1      
000052AE                          8563mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052AE  0C01 0009               8564mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052B2  6E00 000A               8565mmm         BGT     ALPHA_688
000052B6  0601 0030               8566mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052BA  6000 0006               8567mmm         BRA     DONE_688
000052BE  0601 0037               8568mmm ALPHA_688: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052C2  4E71                    8569mmm DONE_688: NOP
000052C4                          8570mmm         ENDM
000052C4  4E4F                    8571mm         TRAP    #15         ; EXECUTE OUTPUT
000052C6                          8572mm         
000052C6  3212                    8573mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052C8  E949                    8574mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000052CA  E049                    8575mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052CC  E849                    8576mm         LSR.W   #4, D1      
000052CE                          8577mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052CE  0C01 0009               8578mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052D2  6E00 000A               8579mmm         BGT     ALPHA_689
000052D6  0601 0030               8580mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052DA  6000 0006               8581mmm         BRA     DONE_689
000052DE  0601 0037               8582mmm ALPHA_689: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000052E2  4E71                    8583mmm DONE_689: NOP
000052E4                          8584mmm         ENDM
000052E4  4E4F                    8585mm         TRAP    #15         ; EXECUTE OUTPUT
000052E6                          8586mm         
000052E6  3212                    8587mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000052E8  E149                    8588mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000052EA  E049                    8589mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000052EC  E849                    8590mm         LSR.W   #4, D1      
000052EE                          8591mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000052EE  0C01 0009               8592mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000052F2  6E00 000A               8593mmm         BGT     ALPHA_690
000052F6  0601 0030               8594mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000052FA  6000 0006               8595mmm         BRA     DONE_690
000052FE  0601 0037               8596mmm ALPHA_690: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005302  4E71                    8597mmm DONE_690: NOP
00005304                          8598mmm         ENDM
00005304  4E4F                    8599mm         TRAP    #15         ; EXECUTE OUTPUT
00005306                          8600mm         
00005306  3212                    8601mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005308  E149                    8602mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000530A  E949                    8603mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000530C  E049                    8604mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000530E  E849                    8605mm         LSR.W   #4, D1      
00005310                          8606mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005310  0C01 0009               8607mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005314  6E00 000A               8608mmm         BGT     ALPHA_691
00005318  0601 0030               8609mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000531C  6000 0006               8610mmm         BRA     DONE_691
00005320  0601 0037               8611mmm ALPHA_691: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005324  4E71                    8612mmm DONE_691: NOP
00005326                          8613mmm         ENDM
00005326  4E4F                    8614mm         TRAP    #15         ; EXECUTE OUTPUT       
00005328                          8615mm         ENDM 
00005328  361A                    8616m         MOVE.W  (A2)+, D3
0000532A                          8617mm         ADROUT
0000532A  3212                    8618mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000532C  E049                    8619mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000532E  E849                    8620mm         LSR.W   #4, D1      
00005330                          8621mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005330  0C01 0009               8622mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005334  6E00 000A               8623mmm         BGT     ALPHA_693
00005338  0601 0030               8624mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000533C  6000 0006               8625mmm         BRA     DONE_693
00005340  0601 0037               8626mmm ALPHA_693: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005344  4E71                    8627mmm DONE_693: NOP
00005346                          8628mmm         ENDM
00005346  4E4F                    8629mm         TRAP    #15         ; EXECUTE OUTPUT
00005348                          8630mm         
00005348  3212                    8631mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000534A  E949                    8632mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000534C  E049                    8633mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000534E  E849                    8634mm         LSR.W   #4, D1      
00005350                          8635mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005350  0C01 0009               8636mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005354  6E00 000A               8637mmm         BGT     ALPHA_694
00005358  0601 0030               8638mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000535C  6000 0006               8639mmm         BRA     DONE_694
00005360  0601 0037               8640mmm ALPHA_694: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005364  4E71                    8641mmm DONE_694: NOP
00005366                          8642mmm         ENDM
00005366  4E4F                    8643mm         TRAP    #15         ; EXECUTE OUTPUT
00005368                          8644mm         
00005368  3212                    8645mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000536A  E149                    8646mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000536C  E049                    8647mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000536E  E849                    8648mm         LSR.W   #4, D1      
00005370                          8649mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005370  0C01 0009               8650mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005374  6E00 000A               8651mmm         BGT     ALPHA_695
00005378  0601 0030               8652mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000537C  6000 0006               8653mmm         BRA     DONE_695
00005380  0601 0037               8654mmm ALPHA_695: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005384  4E71                    8655mmm DONE_695: NOP
00005386                          8656mmm         ENDM
00005386  4E4F                    8657mm         TRAP    #15         ; EXECUTE OUTPUT
00005388                          8658mm         
00005388  3212                    8659mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000538A  E149                    8660mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000538C  E949                    8661mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000538E  E049                    8662mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005390  E849                    8663mm         LSR.W   #4, D1      
00005392                          8664mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005392  0C01 0009               8665mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005396  6E00 000A               8666mmm         BGT     ALPHA_696
0000539A  0601 0030               8667mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000539E  6000 0006               8668mmm         BRA     DONE_696
000053A2  0601 0037               8669mmm ALPHA_696: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000053A6  4E71                    8670mmm DONE_696: NOP
000053A8                          8671mmm         ENDM
000053A8  4E4F                    8672mm         TRAP    #15         ; EXECUTE OUTPUT       
000053AA                          8673mm         ENDM 
000053AA  3605                    8674m         MOVE.W  D5, D3
000053AC                          8675m 
000053AC                          8676m COMPLETE_634:  ; OPCODE HAS BEEN VERIFIED
000053AC                          8677m         ENDM
000053AC  6000 05F4               8678          BRA     decodeANDcomp
000053B0                          8679  decodeAndDestOp:
000053B0                          8680m         prepareAdrMode  #$1,(A2)
000053B0  3C3C 0001               8681m         MOVE.W  #$1, D6      ; INPUT VALUE
000053B4  3212                    8682m         MOVE.W  (A2), D1
000053B6  BC3C 0001               8683m         CMP.B   #$01, D6
000053BA  6700 000C               8684m         BEQ     ADRSOURCE_697    
000053BE                          8685m ADRDEST_697:
000053BE  EF49                    8686m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000053C0  E049                    8687m         LSR     #$08, D1
000053C2  EA49                    8688m         LSR     #$05, D1
000053C4  6000 000A               8689m         BRA     COMPLETE_697 
000053C8                          8690m ADRSOURCE_697:                
000053C8  E149                    8691m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000053CA  E549                    8692m         LSL     #$02, D1
000053CC  E049                    8693m         LSR     #$08, D1
000053CE  EA49                    8694m         LSR     #$05, D1
000053D0                          8695m COMPLETE_697:  ; OPCODE HAS BEEN VERIFIED
000053D0                          8696m         ENDM        
000053D0                          8697m         decodeAdrMode   (A2), D1
000053D0  3612                    8698m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000053D2  3201                    8699m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000053D4                          8700m 
000053D4  B23C 0001               8701m         CMP.B   #$01, D1
000053D8  6700 0066               8702m         BEQ     ADRREGDIRECT_698    
000053DC  B23C 0002               8703m         CMP.B   #$02, D1
000053E0  6700 00A0               8704m         BEQ     ADRREGINDIRECT_698  
000053E4  B23C 0003               8705m         CMP.B   #$03, D1
000053E8  6700 0102               8706m         BEQ     ADRREGPOSTINC_698  
000053EC  B23C 0004               8707m         CMP.B   #$04, D1
000053F0  6700 0178               8708m         BEQ     ADRREGPREDEC_698
000053F4  B23C 0007               8709m         CMP.B   #$07, D1
000053F8  6700 01EE               8710m         BEQ     ADRABSOLUTE_698    
000053FC                          8711m         
000053FC                          8712m DATAREGDIRECT_698: 
000053FC  BC3C 0001               8713m         CMP.B   #$01, D6
00005400  6700 001E               8714m         BEQ     DATAREGDIRECTSRC_698   
00005404                          8715m DATAREGDIRECTDEST_698: 
00005404                          8716mm         PRINTDNDEST D3 
00005404  3203                    8717mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005406  E949                    8718mm         LSL     #$04, D1
00005408  E049                    8719mm         LSR     #$08, D1
0000540A  EA49                    8720mm         LSR     #$05, D1
0000540C  43F8 00C7               8721mm         LEA     ODN, A1     
00005410  103C 000E               8722mm         MOVE.B  #14,D0          
00005414  4E4F                    8723mm         TRAP    #15
00005416  103C 0003               8724mm         MOVE.B  #3,D0          
0000541A  4E4F                    8725mm         TRAP    #15
0000541C                          8726mm         ENDM
0000541C  6000 0562               8727m         BRA     COMPLETE_698 
00005420                          8728m DATAREGDIRECTSRC_698: 
00005420                          8729mm         PRINTDNSRC D3 
00005420  4281                    8730mm         CLR.L   D1
00005422  3203                    8731mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005424  E149                    8732mm         LSL     #$08, D1
00005426  EB49                    8733mm         LSL     #$05, D1
00005428  E049                    8734mm         LSR     #$08, D1
0000542A  EA49                    8735mm         LSR     #$05, D1
0000542C  43F8 00C7               8736mm         LEA     ODN, A1     
00005430  103C 000E               8737mm         MOVE.B  #14,D0          
00005434  4E4F                    8738mm         TRAP    #15
00005436  103C 0003               8739mm         MOVE.B  #3,D0          
0000543A  4E4F                    8740mm         TRAP    #15
0000543C                          8741mm         ENDM
0000543C  6000 0542               8742m         BRA     COMPLETE_698   
00005440                          8743m         
00005440                          8744m ADRREGDIRECT_698: 
00005440  BC3C 0001               8745m         CMP.B   #$01, D6
00005444  6700 001E               8746m         BEQ     ADRREGDIRECTSRC_698   
00005448                          8747m ADRREGDIRECTDEST_698:
00005448                          8748mm         PRINTANDEST D3
00005448  3203                    8749mm         MOVE.W  D3, D1
0000544A  E949                    8750mm         LSL     #$04, D1
0000544C  E049                    8751mm         LSR     #$08, D1
0000544E  EA49                    8752mm         LSR     #$05, D1
00005450  43F8 00C9               8753mm         LEA     OAN, A1     
00005454  103C 000E               8754mm         MOVE.B  #14,D0          
00005458  4E4F                    8755mm         TRAP    #15
0000545A  103C 0003               8756mm         MOVE.B  #3,D0          
0000545E  4E4F                    8757mm         TRAP    #15
00005460                          8758mm         ENDM
00005460  6000 051E               8759m         BRA     COMPLETE_698   
00005464                          8760m ADRREGDIRECTSRC_698:
00005464                          8761mm         PRINTANSRC D3
00005464  3203                    8762mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005466  E149                    8763mm         LSL     #$08, D1
00005468  EB49                    8764mm         LSL     #$05, D1
0000546A  E049                    8765mm         LSR     #$08, D1
0000546C  EA49                    8766mm         LSR     #$05, D1
0000546E  43F8 00C9               8767mm         LEA     OAN, A1     
00005472  103C 000E               8768mm         MOVE.B  #14,D0          
00005476  4E4F                    8769mm         TRAP    #15
00005478  103C 0003               8770mm         MOVE.B  #3,D0          
0000547C  4E4F                    8771mm         TRAP    #15
0000547E                          8772mm         ENDM
0000547E  6000 0500               8773m         BRA     COMPLETE_698   
00005482                          8774m        
00005482                          8775m ADRREGINDIRECT_698:   
00005482  BC3C 0001               8776m         CMP.B   #$01, D6
00005486  6700 0032               8777m         BEQ     ADRREGINDIRECTSRC_698   
0000548A                          8778m ADRREGINDIRECTDEST_698:
0000548A                          8779mm         PRINTLB
0000548A  43F8 00CB               8780mm         LEA     OLB, A1     
0000548E  103C 000E               8781mm         MOVE.B  #14,D0          
00005492  4E4F                    8782mm         TRAP    #15
00005494                          8783mm         ENDM
00005494                          8784mm         PRINTANDEST D3  
00005494  3203                    8785mm         MOVE.W  D3, D1
00005496  E949                    8786mm         LSL     #$04, D1
00005498  E049                    8787mm         LSR     #$08, D1
0000549A  EA49                    8788mm         LSR     #$05, D1
0000549C  43F8 00C9               8789mm         LEA     OAN, A1     
000054A0  103C 000E               8790mm         MOVE.B  #14,D0          
000054A4  4E4F                    8791mm         TRAP    #15
000054A6  103C 0003               8792mm         MOVE.B  #3,D0          
000054AA  4E4F                    8793mm         TRAP    #15
000054AC                          8794mm         ENDM
000054AC                          8795mm         PRINTRB
000054AC  43F8 00CD               8796mm         LEA     ORB, A1     
000054B0  103C 000E               8797mm         MOVE.B  #14,D0          
000054B4  4E4F                    8798mm         TRAP    #15
000054B6                          8799mm         ENDM
000054B6  6000 04C8               8800m         BRA     COMPLETE_698     
000054BA                          8801m ADRREGINDIRECTSRC_698:   
000054BA                          8802mm         PRINTLB
000054BA  43F8 00CB               8803mm         LEA     OLB, A1     
000054BE  103C 000E               8804mm         MOVE.B  #14,D0          
000054C2  4E4F                    8805mm         TRAP    #15
000054C4                          8806mm         ENDM
000054C4                          8807mm         PRINTANSRC D3  
000054C4  3203                    8808mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000054C6  E149                    8809mm         LSL     #$08, D1
000054C8  EB49                    8810mm         LSL     #$05, D1
000054CA  E049                    8811mm         LSR     #$08, D1
000054CC  EA49                    8812mm         LSR     #$05, D1
000054CE  43F8 00C9               8813mm         LEA     OAN, A1     
000054D2  103C 000E               8814mm         MOVE.B  #14,D0          
000054D6  4E4F                    8815mm         TRAP    #15
000054D8  103C 0003               8816mm         MOVE.B  #3,D0          
000054DC  4E4F                    8817mm         TRAP    #15
000054DE                          8818mm         ENDM
000054DE                          8819mm         PRINTRB
000054DE  43F8 00CD               8820mm         LEA     ORB, A1     
000054E2  103C 000E               8821mm         MOVE.B  #14,D0          
000054E6  4E4F                    8822mm         TRAP    #15
000054E8                          8823mm         ENDM
000054E8  6000 0496               8824m         BRA     COMPLETE_698   
000054EC                          8825m         
000054EC                          8826m ADRREGPOSTINC_698:   
000054EC  BC3C 0001               8827m         CMP.B   #$01, D6
000054F0  6700 003C               8828m         BEQ     ADRREGPOSTINCSRC_698   
000054F4                          8829m ADRREGPOSTINCDEST_698: 
000054F4                          8830mm         PRINTLB
000054F4  43F8 00CB               8831mm         LEA     OLB, A1     
000054F8  103C 000E               8832mm         MOVE.B  #14,D0          
000054FC  4E4F                    8833mm         TRAP    #15
000054FE                          8834mm         ENDM
000054FE                          8835mm         PRINTANDEST D3  
000054FE  3203                    8836mm         MOVE.W  D3, D1
00005500  E949                    8837mm         LSL     #$04, D1
00005502  E049                    8838mm         LSR     #$08, D1
00005504  EA49                    8839mm         LSR     #$05, D1
00005506  43F8 00C9               8840mm         LEA     OAN, A1     
0000550A  103C 000E               8841mm         MOVE.B  #14,D0          
0000550E  4E4F                    8842mm         TRAP    #15
00005510  103C 0003               8843mm         MOVE.B  #3,D0          
00005514  4E4F                    8844mm         TRAP    #15
00005516                          8845mm         ENDM
00005516                          8846mm         PRINTRB
00005516  43F8 00CD               8847mm         LEA     ORB, A1     
0000551A  103C 000E               8848mm         MOVE.B  #14,D0          
0000551E  4E4F                    8849mm         TRAP    #15
00005520                          8850mm         ENDM
00005520                          8851mm         PRINTPI
00005520  43F8 00D4               8852mm         LEA     OPSTINC, A1     
00005524  103C 000E               8853mm         MOVE.B  #14,D0          
00005528  4E4F                    8854mm         TRAP    #15
0000552A                          8855mm         ENDM
0000552A  6000 0454               8856m         BRA     COMPLETE_698  
0000552E                          8857m ADRREGPOSTINCSRC_698:           
0000552E                          8858mm         PRINTLB
0000552E  43F8 00CB               8859mm         LEA     OLB, A1     
00005532  103C 000E               8860mm         MOVE.B  #14,D0          
00005536  4E4F                    8861mm         TRAP    #15
00005538                          8862mm         ENDM
00005538                          8863mm         PRINTANSRC D3  
00005538  3203                    8864mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000553A  E149                    8865mm         LSL     #$08, D1
0000553C  EB49                    8866mm         LSL     #$05, D1
0000553E  E049                    8867mm         LSR     #$08, D1
00005540  EA49                    8868mm         LSR     #$05, D1
00005542  43F8 00C9               8869mm         LEA     OAN, A1     
00005546  103C 000E               8870mm         MOVE.B  #14,D0          
0000554A  4E4F                    8871mm         TRAP    #15
0000554C  103C 0003               8872mm         MOVE.B  #3,D0          
00005550  4E4F                    8873mm         TRAP    #15
00005552                          8874mm         ENDM
00005552                          8875mm         PRINTRB
00005552  43F8 00CD               8876mm         LEA     ORB, A1     
00005556  103C 000E               8877mm         MOVE.B  #14,D0          
0000555A  4E4F                    8878mm         TRAP    #15
0000555C                          8879mm         ENDM
0000555C                          8880mm         PRINTPI
0000555C  43F8 00D4               8881mm         LEA     OPSTINC, A1     
00005560  103C 000E               8882mm         MOVE.B  #14,D0          
00005564  4E4F                    8883mm         TRAP    #15
00005566                          8884mm         ENDM
00005566  6000 0418               8885m         BRA     COMPLETE_698  
0000556A                          8886m ADRREGPREDEC_698: 
0000556A  BC3C 0001               8887m         CMP.B   #$01, D6
0000556E  6700 003C               8888m         BEQ     ADRREGPREDECSRC_698   
00005572                          8889m ADRREGPREDECDEST_698:
00005572                          8890mm         PRINTPD  
00005572  43F8 00D2               8891mm         LEA     OPREDEC, A1     
00005576  103C 000E               8892mm         MOVE.B  #14,D0          
0000557A  4E4F                    8893mm         TRAP    #15
0000557C                          8894mm         ENDM
0000557C                          8895mm         PRINTLB
0000557C  43F8 00CB               8896mm         LEA     OLB, A1     
00005580  103C 000E               8897mm         MOVE.B  #14,D0          
00005584  4E4F                    8898mm         TRAP    #15
00005586                          8899mm         ENDM
00005586                          8900mm         PRINTANDEST D3  
00005586  3203                    8901mm         MOVE.W  D3, D1
00005588  E949                    8902mm         LSL     #$04, D1
0000558A  E049                    8903mm         LSR     #$08, D1
0000558C  EA49                    8904mm         LSR     #$05, D1
0000558E  43F8 00C9               8905mm         LEA     OAN, A1     
00005592  103C 000E               8906mm         MOVE.B  #14,D0          
00005596  4E4F                    8907mm         TRAP    #15
00005598  103C 0003               8908mm         MOVE.B  #3,D0          
0000559C  4E4F                    8909mm         TRAP    #15
0000559E                          8910mm         ENDM
0000559E                          8911mm         PRINTRB
0000559E  43F8 00CD               8912mm         LEA     ORB, A1     
000055A2  103C 000E               8913mm         MOVE.B  #14,D0          
000055A6  4E4F                    8914mm         TRAP    #15
000055A8                          8915mm         ENDM
000055A8  6000 03D6               8916m         BRA     COMPLETE_698   
000055AC                          8917m ADRREGPREDECSRC_698: 
000055AC                          8918mm         PRINTPD  
000055AC  43F8 00D2               8919mm         LEA     OPREDEC, A1     
000055B0  103C 000E               8920mm         MOVE.B  #14,D0          
000055B4  4E4F                    8921mm         TRAP    #15
000055B6                          8922mm         ENDM
000055B6                          8923mm         PRINTLB
000055B6  43F8 00CB               8924mm         LEA     OLB, A1     
000055BA  103C 000E               8925mm         MOVE.B  #14,D0          
000055BE  4E4F                    8926mm         TRAP    #15
000055C0                          8927mm         ENDM
000055C0                          8928mm         PRINTANSRC D3  
000055C0  3203                    8929mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000055C2  E149                    8930mm         LSL     #$08, D1
000055C4  EB49                    8931mm         LSL     #$05, D1
000055C6  E049                    8932mm         LSR     #$08, D1
000055C8  EA49                    8933mm         LSR     #$05, D1
000055CA  43F8 00C9               8934mm         LEA     OAN, A1     
000055CE  103C 000E               8935mm         MOVE.B  #14,D0          
000055D2  4E4F                    8936mm         TRAP    #15
000055D4  103C 0003               8937mm         MOVE.B  #3,D0          
000055D8  4E4F                    8938mm         TRAP    #15
000055DA                          8939mm         ENDM
000055DA                          8940mm         PRINTRB
000055DA  43F8 00CD               8941mm         LEA     ORB, A1     
000055DE  103C 000E               8942mm         MOVE.B  #14,D0          
000055E2  4E4F                    8943mm         TRAP    #15
000055E4                          8944mm         ENDM
000055E4  6000 039A               8945m         BRA     COMPLETE_698
000055E8                          8946m        
000055E8                          8947m ADRABSOLUTE_698:
000055E8  BC3C 0001               8948m         CMP.B   #$01, D6
000055EC  6600 0018               8949m         BNE     ADRABSOLUTEDST_698 
000055F0                          8950m         
000055F0  3A03                    8951m         MOVE.W  D3, D5
000055F2  0803 0002               8952m         BTST    #2, D3
000055F6  6600 0024               8953m         BNE     ADRIMMEDIATE_698
000055FA  0803 0000               8954m         BTST    #0, D3
000055FE  6600 0270               8955m         BNE     ADRABSOLUTEL_698
00005602  6000 01DA               8956m         BRA     ADRABSOLUTEW_698
00005606                          8957m ADRABSOLUTEDST_698:
00005606  3A03                    8958m         MOVE.W  D3, D5
00005608  0803 000B               8959m         BTST    #$B, D3
0000560C  6600 000E               8960m         BNE     ADRIMMEDIATE_698
00005610  0803 0009               8961m         BTST    #$09, D3
00005614  6600 025A               8962m         BNE     ADRABSOLUTEL_698
00005618  6000 01C4               8963m         BRA     ADRABSOLUTEW_698
0000561C                          8964m ADRIMMEDIATE_698:
0000561C  BE3C 0001               8965m         CMP.B   #1, D7
00005620  6700 009E               8966m         BEQ     ADRIMMEDIATEL_698
00005624                          8967m ADRIMMEDIATEW_698:
00005624  361A                    8968m         MOVE.W  (A2)+, D3
00005626                          8969mm         PRINTHASH
00005626  103C 0006               8970mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000562A  323C 0023               8971mm         MOVE.W  #35, D1     ; AN = SIGN
0000562E  4E4F                    8972mm         TRAP    #15         ; OUTPUT = SIGN
00005630                          8973mm         ENDM
00005630                          8974mm         PRINTSIGN
00005630  103C 0006               8975mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005634  323C 0024               8976mm         MOVE.W  #36, D1     ; AN = SIGN
00005638  4E4F                    8977mm         TRAP    #15         ; OUTPUT = SIGN
0000563A                          8978mm         ENDM
0000563A                          8979mm         ADROUT
0000563A  3212                    8980mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000563C  E049                    8981mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000563E  E849                    8982mm         LSR.W   #4, D1      
00005640                          8983mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005640  0C01 0009               8984mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005644  6E00 000A               8985mmm         BGT     ALPHA_728
00005648  0601 0030               8986mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000564C  6000 0006               8987mmm         BRA     DONE_728
00005650  0601 0037               8988mmm ALPHA_728: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005654  4E71                    8989mmm DONE_728: NOP
00005656                          8990mmm         ENDM
00005656  4E4F                    8991mm         TRAP    #15         ; EXECUTE OUTPUT
00005658                          8992mm         
00005658  3212                    8993mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000565A  E949                    8994mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000565C  E049                    8995mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000565E  E849                    8996mm         LSR.W   #4, D1      
00005660                          8997mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005660  0C01 0009               8998mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005664  6E00 000A               8999mmm         BGT     ALPHA_729
00005668  0601 0030               9000mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000566C  6000 0006               9001mmm         BRA     DONE_729
00005670  0601 0037               9002mmm ALPHA_729: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005674  4E71                    9003mmm DONE_729: NOP
00005676                          9004mmm         ENDM
00005676  4E4F                    9005mm         TRAP    #15         ; EXECUTE OUTPUT
00005678                          9006mm         
00005678  3212                    9007mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000567A  E149                    9008mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000567C  E049                    9009mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000567E  E849                    9010mm         LSR.W   #4, D1      
00005680                          9011mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005680  0C01 0009               9012mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005684  6E00 000A               9013mmm         BGT     ALPHA_730
00005688  0601 0030               9014mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000568C  6000 0006               9015mmm         BRA     DONE_730
00005690  0601 0037               9016mmm ALPHA_730: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005694  4E71                    9017mmm DONE_730: NOP
00005696                          9018mmm         ENDM
00005696  4E4F                    9019mm         TRAP    #15         ; EXECUTE OUTPUT
00005698                          9020mm         
00005698  3212                    9021mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000569A  E149                    9022mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000569C  E949                    9023mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000569E  E049                    9024mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056A0  E849                    9025mm         LSR.W   #4, D1      
000056A2                          9026mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056A2  0C01 0009               9027mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056A6  6E00 000A               9028mmm         BGT     ALPHA_731
000056AA  0601 0030               9029mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056AE  6000 0006               9030mmm         BRA     DONE_731
000056B2  0601 0037               9031mmm ALPHA_731: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056B6  4E71                    9032mmm DONE_731: NOP
000056B8                          9033mmm         ENDM
000056B8  4E4F                    9034mm         TRAP    #15         ; EXECUTE OUTPUT       
000056BA                          9035mm         ENDM 
000056BA  3605                    9036m         MOVE.W  D5, D3
000056BC  6000 02C2               9037m         BRA     COMPLETE_698
000056C0                          9038m ADRIMMEDIATEL_698:
000056C0  361A                    9039m         MOVE.W  (A2)+, D3
000056C2                          9040mm         PRINTHASH
000056C2  103C 0006               9041mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000056C6  323C 0023               9042mm         MOVE.W  #35, D1     ; AN = SIGN
000056CA  4E4F                    9043mm         TRAP    #15         ; OUTPUT = SIGN
000056CC                          9044mm         ENDM
000056CC                          9045mm         PRINTSIGN
000056CC  103C 0006               9046mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000056D0  323C 0024               9047mm         MOVE.W  #36, D1     ; AN = SIGN
000056D4  4E4F                    9048mm         TRAP    #15         ; OUTPUT = SIGN
000056D6                          9049mm         ENDM
000056D6                          9050mm         ADROUT 
000056D6  3212                    9051mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056D8  E049                    9052mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056DA  E849                    9053mm         LSR.W   #4, D1      
000056DC                          9054mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056DC  0C01 0009               9055mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000056E0  6E00 000A               9056mmm         BGT     ALPHA_735
000056E4  0601 0030               9057mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000056E8  6000 0006               9058mmm         BRA     DONE_735
000056EC  0601 0037               9059mmm ALPHA_735: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000056F0  4E71                    9060mmm DONE_735: NOP
000056F2                          9061mmm         ENDM
000056F2  4E4F                    9062mm         TRAP    #15         ; EXECUTE OUTPUT
000056F4                          9063mm         
000056F4  3212                    9064mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000056F6  E949                    9065mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000056F8  E049                    9066mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000056FA  E849                    9067mm         LSR.W   #4, D1      
000056FC                          9068mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000056FC  0C01 0009               9069mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005700  6E00 000A               9070mmm         BGT     ALPHA_736
00005704  0601 0030               9071mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005708  6000 0006               9072mmm         BRA     DONE_736
0000570C  0601 0037               9073mmm ALPHA_736: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005710  4E71                    9074mmm DONE_736: NOP
00005712                          9075mmm         ENDM
00005712  4E4F                    9076mm         TRAP    #15         ; EXECUTE OUTPUT
00005714                          9077mm         
00005714  3212                    9078mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005716  E149                    9079mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005718  E049                    9080mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000571A  E849                    9081mm         LSR.W   #4, D1      
0000571C                          9082mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000571C  0C01 0009               9083mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005720  6E00 000A               9084mmm         BGT     ALPHA_737
00005724  0601 0030               9085mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005728  6000 0006               9086mmm         BRA     DONE_737
0000572C  0601 0037               9087mmm ALPHA_737: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005730  4E71                    9088mmm DONE_737: NOP
00005732                          9089mmm         ENDM
00005732  4E4F                    9090mm         TRAP    #15         ; EXECUTE OUTPUT
00005734                          9091mm         
00005734  3212                    9092mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005736  E149                    9093mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005738  E949                    9094mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000573A  E049                    9095mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000573C  E849                    9096mm         LSR.W   #4, D1      
0000573E                          9097mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000573E  0C01 0009               9098mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005742  6E00 000A               9099mmm         BGT     ALPHA_738
00005746  0601 0030               9100mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000574A  6000 0006               9101mmm         BRA     DONE_738
0000574E  0601 0037               9102mmm ALPHA_738: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005752  4E71                    9103mmm DONE_738: NOP
00005754                          9104mmm         ENDM
00005754  4E4F                    9105mm         TRAP    #15         ; EXECUTE OUTPUT       
00005756                          9106mm         ENDM 
00005756  361A                    9107m         MOVE.W  (A2)+, D3
00005758                          9108mm         ADROUT
00005758  3212                    9109mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000575A  E049                    9110mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000575C  E849                    9111mm         LSR.W   #4, D1      
0000575E                          9112mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000575E  0C01 0009               9113mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005762  6E00 000A               9114mmm         BGT     ALPHA_740
00005766  0601 0030               9115mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000576A  6000 0006               9116mmm         BRA     DONE_740
0000576E  0601 0037               9117mmm ALPHA_740: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005772  4E71                    9118mmm DONE_740: NOP
00005774                          9119mmm         ENDM
00005774  4E4F                    9120mm         TRAP    #15         ; EXECUTE OUTPUT
00005776                          9121mm         
00005776  3212                    9122mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005778  E949                    9123mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000577A  E049                    9124mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000577C  E849                    9125mm         LSR.W   #4, D1      
0000577E                          9126mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000577E  0C01 0009               9127mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005782  6E00 000A               9128mmm         BGT     ALPHA_741
00005786  0601 0030               9129mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000578A  6000 0006               9130mmm         BRA     DONE_741
0000578E  0601 0037               9131mmm ALPHA_741: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005792  4E71                    9132mmm DONE_741: NOP
00005794                          9133mmm         ENDM
00005794  4E4F                    9134mm         TRAP    #15         ; EXECUTE OUTPUT
00005796                          9135mm         
00005796  3212                    9136mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005798  E149                    9137mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000579A  E049                    9138mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000579C  E849                    9139mm         LSR.W   #4, D1      
0000579E                          9140mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000579E  0C01 0009               9141mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057A2  6E00 000A               9142mmm         BGT     ALPHA_742
000057A6  0601 0030               9143mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057AA  6000 0006               9144mmm         BRA     DONE_742
000057AE  0601 0037               9145mmm ALPHA_742: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057B2  4E71                    9146mmm DONE_742: NOP
000057B4                          9147mmm         ENDM
000057B4  4E4F                    9148mm         TRAP    #15         ; EXECUTE OUTPUT
000057B6                          9149mm         
000057B6  3212                    9150mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057B8  E149                    9151mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000057BA  E949                    9152mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000057BC  E049                    9153mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057BE  E849                    9154mm         LSR.W   #4, D1      
000057C0                          9155mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057C0  0C01 0009               9156mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057C4  6E00 000A               9157mmm         BGT     ALPHA_743
000057C8  0601 0030               9158mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057CC  6000 0006               9159mmm         BRA     DONE_743
000057D0  0601 0037               9160mmm ALPHA_743: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000057D4  4E71                    9161mmm DONE_743: NOP
000057D6                          9162mmm         ENDM
000057D6  4E4F                    9163mm         TRAP    #15         ; EXECUTE OUTPUT       
000057D8                          9164mm         ENDM 
000057D8  3605                    9165m         MOVE.W  D5, D3
000057DA  6000 01A4               9166m         BRA     COMPLETE_698 
000057DE                          9167m ADRABSOLUTEW_698:     
000057DE  361A                    9168m         MOVE.W  (A2)+, D3
000057E0                          9169mm         PRINTSIGN
000057E0  103C 0006               9170mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000057E4  323C 0024               9171mm         MOVE.W  #36, D1     ; AN = SIGN
000057E8  4E4F                    9172mm         TRAP    #15         ; OUTPUT = SIGN
000057EA                          9173mm         ENDM
000057EA                          9174mm         ADROUT
000057EA  3212                    9175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000057EC  E049                    9176mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000057EE  E849                    9177mm         LSR.W   #4, D1      
000057F0                          9178mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000057F0  0C01 0009               9179mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000057F4  6E00 000A               9180mmm         BGT     ALPHA_746
000057F8  0601 0030               9181mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000057FC  6000 0006               9182mmm         BRA     DONE_746
00005800  0601 0037               9183mmm ALPHA_746: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005804  4E71                    9184mmm DONE_746: NOP
00005806                          9185mmm         ENDM
00005806  4E4F                    9186mm         TRAP    #15         ; EXECUTE OUTPUT
00005808                          9187mm         
00005808  3212                    9188mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000580A  E949                    9189mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000580C  E049                    9190mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000580E  E849                    9191mm         LSR.W   #4, D1      
00005810                          9192mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005810  0C01 0009               9193mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005814  6E00 000A               9194mmm         BGT     ALPHA_747
00005818  0601 0030               9195mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000581C  6000 0006               9196mmm         BRA     DONE_747
00005820  0601 0037               9197mmm ALPHA_747: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005824  4E71                    9198mmm DONE_747: NOP
00005826                          9199mmm         ENDM
00005826  4E4F                    9200mm         TRAP    #15         ; EXECUTE OUTPUT
00005828                          9201mm         
00005828  3212                    9202mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000582A  E149                    9203mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000582C  E049                    9204mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
0000582E  E849                    9205mm         LSR.W   #4, D1      
00005830                          9206mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005830  0C01 0009               9207mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005834  6E00 000A               9208mmm         BGT     ALPHA_748
00005838  0601 0030               9209mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000583C  6000 0006               9210mmm         BRA     DONE_748
00005840  0601 0037               9211mmm ALPHA_748: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005844  4E71                    9212mmm DONE_748: NOP
00005846                          9213mmm         ENDM
00005846  4E4F                    9214mm         TRAP    #15         ; EXECUTE OUTPUT
00005848                          9215mm         
00005848  3212                    9216mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000584A  E149                    9217mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
0000584C  E949                    9218mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
0000584E  E049                    9219mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005850  E849                    9220mm         LSR.W   #4, D1      
00005852                          9221mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005852  0C01 0009               9222mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005856  6E00 000A               9223mmm         BGT     ALPHA_749
0000585A  0601 0030               9224mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000585E  6000 0006               9225mmm         BRA     DONE_749
00005862  0601 0037               9226mmm ALPHA_749: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005866  4E71                    9227mmm DONE_749: NOP
00005868                          9228mmm         ENDM
00005868  4E4F                    9229mm         TRAP    #15         ; EXECUTE OUTPUT       
0000586A                          9230mm         ENDM 
0000586A  3605                    9231m         MOVE.W  D5, D3
0000586C  6000 0112               9232m         BRA     COMPLETE_698  
00005870                          9233m ADRABSOLUTEL_698:  
00005870  361A                    9234m         MOVE.W  (A2)+, D3
00005872                          9235mm         PRINTSIGN
00005872  103C 0006               9236mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005876  323C 0024               9237mm         MOVE.W  #36, D1     ; AN = SIGN
0000587A  4E4F                    9238mm         TRAP    #15         ; OUTPUT = SIGN
0000587C                          9239mm         ENDM
0000587C                          9240mm         ADROUT 
0000587C  3212                    9241mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000587E  E049                    9242mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005880  E849                    9243mm         LSR.W   #4, D1      
00005882                          9244mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005882  0C01 0009               9245mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005886  6E00 000A               9246mmm         BGT     ALPHA_752
0000588A  0601 0030               9247mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
0000588E  6000 0006               9248mmm         BRA     DONE_752
00005892  0601 0037               9249mmm ALPHA_752: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005896  4E71                    9250mmm DONE_752: NOP
00005898                          9251mmm         ENDM
00005898  4E4F                    9252mm         TRAP    #15         ; EXECUTE OUTPUT
0000589A                          9253mm         
0000589A  3212                    9254mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000589C  E949                    9255mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
0000589E  E049                    9256mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058A0  E849                    9257mm         LSR.W   #4, D1      
000058A2                          9258mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058A2  0C01 0009               9259mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058A6  6E00 000A               9260mmm         BGT     ALPHA_753
000058AA  0601 0030               9261mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058AE  6000 0006               9262mmm         BRA     DONE_753
000058B2  0601 0037               9263mmm ALPHA_753: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058B6  4E71                    9264mmm DONE_753: NOP
000058B8                          9265mmm         ENDM
000058B8  4E4F                    9266mm         TRAP    #15         ; EXECUTE OUTPUT
000058BA                          9267mm         
000058BA  3212                    9268mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058BC  E149                    9269mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058BE  E049                    9270mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058C0  E849                    9271mm         LSR.W   #4, D1      
000058C2                          9272mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058C2  0C01 0009               9273mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058C6  6E00 000A               9274mmm         BGT     ALPHA_754
000058CA  0601 0030               9275mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058CE  6000 0006               9276mmm         BRA     DONE_754
000058D2  0601 0037               9277mmm ALPHA_754: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058D6  4E71                    9278mmm DONE_754: NOP
000058D8                          9279mmm         ENDM
000058D8  4E4F                    9280mm         TRAP    #15         ; EXECUTE OUTPUT
000058DA                          9281mm         
000058DA  3212                    9282mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000058DC  E149                    9283mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000058DE  E949                    9284mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000058E0  E049                    9285mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000058E2  E849                    9286mm         LSR.W   #4, D1      
000058E4                          9287mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000058E4  0C01 0009               9288mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000058E8  6E00 000A               9289mmm         BGT     ALPHA_755
000058EC  0601 0030               9290mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000058F0  6000 0006               9291mmm         BRA     DONE_755
000058F4  0601 0037               9292mmm ALPHA_755: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000058F8  4E71                    9293mmm DONE_755: NOP
000058FA                          9294mmm         ENDM
000058FA  4E4F                    9295mm         TRAP    #15         ; EXECUTE OUTPUT       
000058FC                          9296mm         ENDM 
000058FC  361A                    9297m         MOVE.W  (A2)+, D3
000058FE                          9298mm         ADROUT
000058FE  3212                    9299mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005900  E049                    9300mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005902  E849                    9301mm         LSR.W   #4, D1      
00005904                          9302mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005904  0C01 0009               9303mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005908  6E00 000A               9304mmm         BGT     ALPHA_757
0000590C  0601 0030               9305mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005910  6000 0006               9306mmm         BRA     DONE_757
00005914  0601 0037               9307mmm ALPHA_757: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005918  4E71                    9308mmm DONE_757: NOP
0000591A                          9309mmm         ENDM
0000591A  4E4F                    9310mm         TRAP    #15         ; EXECUTE OUTPUT
0000591C                          9311mm         
0000591C  3212                    9312mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000591E  E949                    9313mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005920  E049                    9314mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005922  E849                    9315mm         LSR.W   #4, D1      
00005924                          9316mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005924  0C01 0009               9317mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005928  6E00 000A               9318mmm         BGT     ALPHA_758
0000592C  0601 0030               9319mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005930  6000 0006               9320mmm         BRA     DONE_758
00005934  0601 0037               9321mmm ALPHA_758: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005938  4E71                    9322mmm DONE_758: NOP
0000593A                          9323mmm         ENDM
0000593A  4E4F                    9324mm         TRAP    #15         ; EXECUTE OUTPUT
0000593C                          9325mm         
0000593C  3212                    9326mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000593E  E149                    9327mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005940  E049                    9328mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005942  E849                    9329mm         LSR.W   #4, D1      
00005944                          9330mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005944  0C01 0009               9331mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005948  6E00 000A               9332mmm         BGT     ALPHA_759
0000594C  0601 0030               9333mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005950  6000 0006               9334mmm         BRA     DONE_759
00005954  0601 0037               9335mmm ALPHA_759: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005958  4E71                    9336mmm DONE_759: NOP
0000595A                          9337mmm         ENDM
0000595A  4E4F                    9338mm         TRAP    #15         ; EXECUTE OUTPUT
0000595C                          9339mm         
0000595C  3212                    9340mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000595E  E149                    9341mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005960  E949                    9342mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005962  E049                    9343mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005964  E849                    9344mm         LSR.W   #4, D1      
00005966                          9345mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005966  0C01 0009               9346mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000596A  6E00 000A               9347mmm         BGT     ALPHA_760
0000596E  0601 0030               9348mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005972  6000 0006               9349mmm         BRA     DONE_760
00005976  0601 0037               9350mmm ALPHA_760: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000597A  4E71                    9351mmm DONE_760: NOP
0000597C                          9352mmm         ENDM
0000597C  4E4F                    9353mm         TRAP    #15         ; EXECUTE OUTPUT       
0000597E                          9354mm         ENDM 
0000597E  3605                    9355m         MOVE.W  D5, D3
00005980                          9356m 
00005980                          9357m COMPLETE_698:  ; OPCODE HAS BEEN VERIFIED
00005980                          9358m         ENDM
00005980                          9359m         printComma
00005980  43F8 00CF               9360m         LEA     OCOMMA, A1     
00005984  103C 000E               9361m         MOVE.B  #14,D0          
00005988  4E4F                    9362m         TRAP    #15
0000598A                          9363m         ENDM
0000598A                          9364m         printDnDest     (A2)
0000598A  3212                    9365m         MOVE.W  (A2), D1      ; BITS 9 TO 11
0000598C  E949                    9366m         LSL     #$04, D1
0000598E  E049                    9367m         LSR     #$08, D1
00005990  EA49                    9368m         LSR     #$05, D1
00005992  43F8 00C7               9369m         LEA     ODN, A1     
00005996  103C 000E               9370m         MOVE.B  #14,D0          
0000599A  4E4F                    9371m         TRAP    #15
0000599C  103C 0003               9372m         MOVE.B  #3,D0          
000059A0  4E4F                    9373m         TRAP    #15
000059A2                          9374m         ENDM
000059A2                          9375  decodeANDcomp:
000059A2  4E75                    9376          RTS                ; Return from decodeANDcomp subroutine
000059A4                          9377  
000059A4                          9378  
000059A4                          9379  ; ------------------------------------------------------------
000059A4                          9380  ; 10. "decodeNOT" subroutine
000059A4                          9381  ; AUTHOR
000059A4                          9382  ;
000059A4                          9383  ; TODO: DESCRIPTION
000059A4                          9384  ; ------------------------------------------------------------
000059A4                          9385  decodeNOT:
000059A4                          9386m         verifyOpcode    pNOT, (A2)
000059A4  43F8 018F               9387m         LEA     PNOT, A1      ; INPUT PATTERN STRING
000059A8  3612                    9388m         MOVE.W  (A2), D3      ; INPUT VALUE
000059AA  123C 000F               9389m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000059AE                          9390m         
000059AE                          9391m LOOP_763: 
000059AE  0C11 0030               9392m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000059B2  6700 000E               9393m         BEQ     CHECKFOR0_763
000059B6  0C11 0031               9394m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000059BA  6700 0010               9395m         BEQ     CHECKFOR1_763
000059BE  6000 0012               9396m         BRA     NEXT_763      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000059C2                          9397m         
000059C2                          9398m CHECKFOR0_763: 
000059C2  0303                    9399m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000059C4  6600 127A               9400m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000059C8  6000 0008               9401m         BRA     NEXT_763
000059CC                          9402m 
000059CC                          9403m CHECKFOR1_763:
000059CC  0303                    9404m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000059CE  6700 1270               9405m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000059D2                          9406m 
000059D2                          9407m NEXT_763: 
000059D2  B23C 0000               9408m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000059D6  6700 0008               9409m         BEQ     COMPLETE_763  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000059DA  5301                    9410m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000059DC  1819                    9411m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000059DE  60CE                    9412m         BRA     LOOP_763      ; BEGIN LOOP AGAIN
000059E0                          9413m 
000059E0                          9414m COMPLETE_763:  ; OPCODE HAS BEEN VERIFIED
000059E0                          9415m         ENDM
000059E0  43F8 008F               9416          LEA     oNOT, A1     
000059E4  103C 000E               9417          MOVE.B  #14,D0          
000059E8  4E4F                    9418          TRAP    #15
000059EA                          9419m         printSizeLow       (A2)
000059EA  3612                    9420m         MOVE.W  (A2), D3      ; INPUT VALUE   
000059EC  4247                    9421m         CLR     D7   
000059EE                          9422m CHECKFORB_764: 
000059EE  0803 0006               9423m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
000059F2  6600 0018               9424m         BNE     CHECKFORW_764  ; IF NOT GO TO WORD SIZE
000059F6  0803 0007               9425m         BTST    #7, D3      ; CHECK IF CONTAINS 0
000059FA  6600 001E               9426m         BNE     CHECKFORL_764 ; IF NOT GO TO LONGWORD SIZE
000059FE  43F8 00BB               9427m         LEA     OBSIZE, A1     
00005A02  103C 000E               9428m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005A06  4E4F                    9429m         TRAP    #15
00005A08  6000 001E               9430m         BRA     COMPLETE_764      
00005A0C                          9431m CHECKFORW_764: 
00005A0C  43F8 00BF               9432m         LEA     OWSIZE, A1     
00005A10  103C 000E               9433m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00005A14  4E4F                    9434m         TRAP    #15
00005A16  6000 0010               9435m         BRA     COMPLETE_764  
00005A1A                          9436m CHECKFORL_764:
00005A1A  1E3C 0001               9437m         MOVE.B  #$1, D7
00005A1E  43F8 00C3               9438m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00005A22  103C 000E               9439m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00005A26  4E4F                    9440m         TRAP    #15
00005A28                          9441m COMPLETE_764:  ; SIZE HAS BEEN PRINTED
00005A28                          9442m         ENDM
00005A28                          9443m         prepareAdrMode  #$1, (A2)
00005A28  3C3C 0001               9444m         MOVE.W  #$1, D6      ; INPUT VALUE
00005A2C  3212                    9445m         MOVE.W  (A2), D1
00005A2E  BC3C 0001               9446m         CMP.B   #$01, D6
00005A32  6700 000C               9447m         BEQ     ADRSOURCE_765    
00005A36                          9448m ADRDEST_765:
00005A36  EF49                    9449m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
00005A38  E049                    9450m         LSR     #$08, D1
00005A3A  EA49                    9451m         LSR     #$05, D1
00005A3C  6000 000A               9452m         BRA     COMPLETE_765 
00005A40                          9453m ADRSOURCE_765:                
00005A40  E149                    9454m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
00005A42  E549                    9455m         LSL     #$02, D1
00005A44  E049                    9456m         LSR     #$08, D1
00005A46  EA49                    9457m         LSR     #$05, D1
00005A48                          9458m COMPLETE_765:  ; OPCODE HAS BEEN VERIFIED
00005A48                          9459m         ENDM        
00005A48                          9460m         decodeAdrMode   (A2), D1
00005A48  3612                    9461m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
00005A4A  3201                    9462m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
00005A4C                          9463m 
00005A4C  B23C 0001               9464m         CMP.B   #$01, D1
00005A50  6700 0066               9465m         BEQ     ADRREGDIRECT_766    
00005A54  B23C 0002               9466m         CMP.B   #$02, D1
00005A58  6700 00A0               9467m         BEQ     ADRREGINDIRECT_766  
00005A5C  B23C 0003               9468m         CMP.B   #$03, D1
00005A60  6700 0102               9469m         BEQ     ADRREGPOSTINC_766  
00005A64  B23C 0004               9470m         CMP.B   #$04, D1
00005A68  6700 0178               9471m         BEQ     ADRREGPREDEC_766
00005A6C  B23C 0007               9472m         CMP.B   #$07, D1
00005A70  6700 01EE               9473m         BEQ     ADRABSOLUTE_766    
00005A74                          9474m         
00005A74                          9475m DATAREGDIRECT_766: 
00005A74  BC3C 0001               9476m         CMP.B   #$01, D6
00005A78  6700 001E               9477m         BEQ     DATAREGDIRECTSRC_766   
00005A7C                          9478m DATAREGDIRECTDEST_766: 
00005A7C                          9479mm         PRINTDNDEST D3 
00005A7C  3203                    9480mm         MOVE.W  D3, D1      ; BITS 9 TO 11
00005A7E  E949                    9481mm         LSL     #$04, D1
00005A80  E049                    9482mm         LSR     #$08, D1
00005A82  EA49                    9483mm         LSR     #$05, D1
00005A84  43F8 00C7               9484mm         LEA     ODN, A1     
00005A88  103C 000E               9485mm         MOVE.B  #14,D0          
00005A8C  4E4F                    9486mm         TRAP    #15
00005A8E  103C 0003               9487mm         MOVE.B  #3,D0          
00005A92  4E4F                    9488mm         TRAP    #15
00005A94                          9489mm         ENDM
00005A94  6000 0562               9490m         BRA     COMPLETE_766 
00005A98                          9491m DATAREGDIRECTSRC_766: 
00005A98                          9492mm         PRINTDNSRC D3 
00005A98  4281                    9493mm         CLR.L   D1
00005A9A  3203                    9494mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005A9C  E149                    9495mm         LSL     #$08, D1
00005A9E  EB49                    9496mm         LSL     #$05, D1
00005AA0  E049                    9497mm         LSR     #$08, D1
00005AA2  EA49                    9498mm         LSR     #$05, D1
00005AA4  43F8 00C7               9499mm         LEA     ODN, A1     
00005AA8  103C 000E               9500mm         MOVE.B  #14,D0          
00005AAC  4E4F                    9501mm         TRAP    #15
00005AAE  103C 0003               9502mm         MOVE.B  #3,D0          
00005AB2  4E4F                    9503mm         TRAP    #15
00005AB4                          9504mm         ENDM
00005AB4  6000 0542               9505m         BRA     COMPLETE_766   
00005AB8                          9506m         
00005AB8                          9507m ADRREGDIRECT_766: 
00005AB8  BC3C 0001               9508m         CMP.B   #$01, D6
00005ABC  6700 001E               9509m         BEQ     ADRREGDIRECTSRC_766   
00005AC0                          9510m ADRREGDIRECTDEST_766:
00005AC0                          9511mm         PRINTANDEST D3
00005AC0  3203                    9512mm         MOVE.W  D3, D1
00005AC2  E949                    9513mm         LSL     #$04, D1
00005AC4  E049                    9514mm         LSR     #$08, D1
00005AC6  EA49                    9515mm         LSR     #$05, D1
00005AC8  43F8 00C9               9516mm         LEA     OAN, A1     
00005ACC  103C 000E               9517mm         MOVE.B  #14,D0          
00005AD0  4E4F                    9518mm         TRAP    #15
00005AD2  103C 0003               9519mm         MOVE.B  #3,D0          
00005AD6  4E4F                    9520mm         TRAP    #15
00005AD8                          9521mm         ENDM
00005AD8  6000 051E               9522m         BRA     COMPLETE_766   
00005ADC                          9523m ADRREGDIRECTSRC_766:
00005ADC                          9524mm         PRINTANSRC D3
00005ADC  3203                    9525mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005ADE  E149                    9526mm         LSL     #$08, D1
00005AE0  EB49                    9527mm         LSL     #$05, D1
00005AE2  E049                    9528mm         LSR     #$08, D1
00005AE4  EA49                    9529mm         LSR     #$05, D1
00005AE6  43F8 00C9               9530mm         LEA     OAN, A1     
00005AEA  103C 000E               9531mm         MOVE.B  #14,D0          
00005AEE  4E4F                    9532mm         TRAP    #15
00005AF0  103C 0003               9533mm         MOVE.B  #3,D0          
00005AF4  4E4F                    9534mm         TRAP    #15
00005AF6                          9535mm         ENDM
00005AF6  6000 0500               9536m         BRA     COMPLETE_766   
00005AFA                          9537m        
00005AFA                          9538m ADRREGINDIRECT_766:   
00005AFA  BC3C 0001               9539m         CMP.B   #$01, D6
00005AFE  6700 0032               9540m         BEQ     ADRREGINDIRECTSRC_766   
00005B02                          9541m ADRREGINDIRECTDEST_766:
00005B02                          9542mm         PRINTLB
00005B02  43F8 00CB               9543mm         LEA     OLB, A1     
00005B06  103C 000E               9544mm         MOVE.B  #14,D0          
00005B0A  4E4F                    9545mm         TRAP    #15
00005B0C                          9546mm         ENDM
00005B0C                          9547mm         PRINTANDEST D3  
00005B0C  3203                    9548mm         MOVE.W  D3, D1
00005B0E  E949                    9549mm         LSL     #$04, D1
00005B10  E049                    9550mm         LSR     #$08, D1
00005B12  EA49                    9551mm         LSR     #$05, D1
00005B14  43F8 00C9               9552mm         LEA     OAN, A1     
00005B18  103C 000E               9553mm         MOVE.B  #14,D0          
00005B1C  4E4F                    9554mm         TRAP    #15
00005B1E  103C 0003               9555mm         MOVE.B  #3,D0          
00005B22  4E4F                    9556mm         TRAP    #15
00005B24                          9557mm         ENDM
00005B24                          9558mm         PRINTRB
00005B24  43F8 00CD               9559mm         LEA     ORB, A1     
00005B28  103C 000E               9560mm         MOVE.B  #14,D0          
00005B2C  4E4F                    9561mm         TRAP    #15
00005B2E                          9562mm         ENDM
00005B2E  6000 04C8               9563m         BRA     COMPLETE_766     
00005B32                          9564m ADRREGINDIRECTSRC_766:   
00005B32                          9565mm         PRINTLB
00005B32  43F8 00CB               9566mm         LEA     OLB, A1     
00005B36  103C 000E               9567mm         MOVE.B  #14,D0          
00005B3A  4E4F                    9568mm         TRAP    #15
00005B3C                          9569mm         ENDM
00005B3C                          9570mm         PRINTANSRC D3  
00005B3C  3203                    9571mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005B3E  E149                    9572mm         LSL     #$08, D1
00005B40  EB49                    9573mm         LSL     #$05, D1
00005B42  E049                    9574mm         LSR     #$08, D1
00005B44  EA49                    9575mm         LSR     #$05, D1
00005B46  43F8 00C9               9576mm         LEA     OAN, A1     
00005B4A  103C 000E               9577mm         MOVE.B  #14,D0          
00005B4E  4E4F                    9578mm         TRAP    #15
00005B50  103C 0003               9579mm         MOVE.B  #3,D0          
00005B54  4E4F                    9580mm         TRAP    #15
00005B56                          9581mm         ENDM
00005B56                          9582mm         PRINTRB
00005B56  43F8 00CD               9583mm         LEA     ORB, A1     
00005B5A  103C 000E               9584mm         MOVE.B  #14,D0          
00005B5E  4E4F                    9585mm         TRAP    #15
00005B60                          9586mm         ENDM
00005B60  6000 0496               9587m         BRA     COMPLETE_766   
00005B64                          9588m         
00005B64                          9589m ADRREGPOSTINC_766:   
00005B64  BC3C 0001               9590m         CMP.B   #$01, D6
00005B68  6700 003C               9591m         BEQ     ADRREGPOSTINCSRC_766   
00005B6C                          9592m ADRREGPOSTINCDEST_766: 
00005B6C                          9593mm         PRINTLB
00005B6C  43F8 00CB               9594mm         LEA     OLB, A1     
00005B70  103C 000E               9595mm         MOVE.B  #14,D0          
00005B74  4E4F                    9596mm         TRAP    #15
00005B76                          9597mm         ENDM
00005B76                          9598mm         PRINTANDEST D3  
00005B76  3203                    9599mm         MOVE.W  D3, D1
00005B78  E949                    9600mm         LSL     #$04, D1
00005B7A  E049                    9601mm         LSR     #$08, D1
00005B7C  EA49                    9602mm         LSR     #$05, D1
00005B7E  43F8 00C9               9603mm         LEA     OAN, A1     
00005B82  103C 000E               9604mm         MOVE.B  #14,D0          
00005B86  4E4F                    9605mm         TRAP    #15
00005B88  103C 0003               9606mm         MOVE.B  #3,D0          
00005B8C  4E4F                    9607mm         TRAP    #15
00005B8E                          9608mm         ENDM
00005B8E                          9609mm         PRINTRB
00005B8E  43F8 00CD               9610mm         LEA     ORB, A1     
00005B92  103C 000E               9611mm         MOVE.B  #14,D0          
00005B96  4E4F                    9612mm         TRAP    #15
00005B98                          9613mm         ENDM
00005B98                          9614mm         PRINTPI
00005B98  43F8 00D4               9615mm         LEA     OPSTINC, A1     
00005B9C  103C 000E               9616mm         MOVE.B  #14,D0          
00005BA0  4E4F                    9617mm         TRAP    #15
00005BA2                          9618mm         ENDM
00005BA2  6000 0454               9619m         BRA     COMPLETE_766  
00005BA6                          9620m ADRREGPOSTINCSRC_766:           
00005BA6                          9621mm         PRINTLB
00005BA6  43F8 00CB               9622mm         LEA     OLB, A1     
00005BAA  103C 000E               9623mm         MOVE.B  #14,D0          
00005BAE  4E4F                    9624mm         TRAP    #15
00005BB0                          9625mm         ENDM
00005BB0                          9626mm         PRINTANSRC D3  
00005BB0  3203                    9627mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005BB2  E149                    9628mm         LSL     #$08, D1
00005BB4  EB49                    9629mm         LSL     #$05, D1
00005BB6  E049                    9630mm         LSR     #$08, D1
00005BB8  EA49                    9631mm         LSR     #$05, D1
00005BBA  43F8 00C9               9632mm         LEA     OAN, A1     
00005BBE  103C 000E               9633mm         MOVE.B  #14,D0          
00005BC2  4E4F                    9634mm         TRAP    #15
00005BC4  103C 0003               9635mm         MOVE.B  #3,D0          
00005BC8  4E4F                    9636mm         TRAP    #15
00005BCA                          9637mm         ENDM
00005BCA                          9638mm         PRINTRB
00005BCA  43F8 00CD               9639mm         LEA     ORB, A1     
00005BCE  103C 000E               9640mm         MOVE.B  #14,D0          
00005BD2  4E4F                    9641mm         TRAP    #15
00005BD4                          9642mm         ENDM
00005BD4                          9643mm         PRINTPI
00005BD4  43F8 00D4               9644mm         LEA     OPSTINC, A1     
00005BD8  103C 000E               9645mm         MOVE.B  #14,D0          
00005BDC  4E4F                    9646mm         TRAP    #15
00005BDE                          9647mm         ENDM
00005BDE  6000 0418               9648m         BRA     COMPLETE_766  
00005BE2                          9649m ADRREGPREDEC_766: 
00005BE2  BC3C 0001               9650m         CMP.B   #$01, D6
00005BE6  6700 003C               9651m         BEQ     ADRREGPREDECSRC_766   
00005BEA                          9652m ADRREGPREDECDEST_766:
00005BEA                          9653mm         PRINTPD  
00005BEA  43F8 00D2               9654mm         LEA     OPREDEC, A1     
00005BEE  103C 000E               9655mm         MOVE.B  #14,D0          
00005BF2  4E4F                    9656mm         TRAP    #15
00005BF4                          9657mm         ENDM
00005BF4                          9658mm         PRINTLB
00005BF4  43F8 00CB               9659mm         LEA     OLB, A1     
00005BF8  103C 000E               9660mm         MOVE.B  #14,D0          
00005BFC  4E4F                    9661mm         TRAP    #15
00005BFE                          9662mm         ENDM
00005BFE                          9663mm         PRINTANDEST D3  
00005BFE  3203                    9664mm         MOVE.W  D3, D1
00005C00  E949                    9665mm         LSL     #$04, D1
00005C02  E049                    9666mm         LSR     #$08, D1
00005C04  EA49                    9667mm         LSR     #$05, D1
00005C06  43F8 00C9               9668mm         LEA     OAN, A1     
00005C0A  103C 000E               9669mm         MOVE.B  #14,D0          
00005C0E  4E4F                    9670mm         TRAP    #15
00005C10  103C 0003               9671mm         MOVE.B  #3,D0          
00005C14  4E4F                    9672mm         TRAP    #15
00005C16                          9673mm         ENDM
00005C16                          9674mm         PRINTRB
00005C16  43F8 00CD               9675mm         LEA     ORB, A1     
00005C1A  103C 000E               9676mm         MOVE.B  #14,D0          
00005C1E  4E4F                    9677mm         TRAP    #15
00005C20                          9678mm         ENDM
00005C20  6000 03D6               9679m         BRA     COMPLETE_766   
00005C24                          9680m ADRREGPREDECSRC_766: 
00005C24                          9681mm         PRINTPD  
00005C24  43F8 00D2               9682mm         LEA     OPREDEC, A1     
00005C28  103C 000E               9683mm         MOVE.B  #14,D0          
00005C2C  4E4F                    9684mm         TRAP    #15
00005C2E                          9685mm         ENDM
00005C2E                          9686mm         PRINTLB
00005C2E  43F8 00CB               9687mm         LEA     OLB, A1     
00005C32  103C 000E               9688mm         MOVE.B  #14,D0          
00005C36  4E4F                    9689mm         TRAP    #15
00005C38                          9690mm         ENDM
00005C38                          9691mm         PRINTANSRC D3  
00005C38  3203                    9692mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00005C3A  E149                    9693mm         LSL     #$08, D1
00005C3C  EB49                    9694mm         LSL     #$05, D1
00005C3E  E049                    9695mm         LSR     #$08, D1
00005C40  EA49                    9696mm         LSR     #$05, D1
00005C42  43F8 00C9               9697mm         LEA     OAN, A1     
00005C46  103C 000E               9698mm         MOVE.B  #14,D0          
00005C4A  4E4F                    9699mm         TRAP    #15
00005C4C  103C 0003               9700mm         MOVE.B  #3,D0          
00005C50  4E4F                    9701mm         TRAP    #15
00005C52                          9702mm         ENDM
00005C52                          9703mm         PRINTRB
00005C52  43F8 00CD               9704mm         LEA     ORB, A1     
00005C56  103C 000E               9705mm         MOVE.B  #14,D0          
00005C5A  4E4F                    9706mm         TRAP    #15
00005C5C                          9707mm         ENDM
00005C5C  6000 039A               9708m         BRA     COMPLETE_766
00005C60                          9709m        
00005C60                          9710m ADRABSOLUTE_766:
00005C60  BC3C 0001               9711m         CMP.B   #$01, D6
00005C64  6600 0018               9712m         BNE     ADRABSOLUTEDST_766 
00005C68                          9713m         
00005C68  3A03                    9714m         MOVE.W  D3, D5
00005C6A  0803 0002               9715m         BTST    #2, D3
00005C6E  6600 0024               9716m         BNE     ADRIMMEDIATE_766
00005C72  0803 0000               9717m         BTST    #0, D3
00005C76  6600 0270               9718m         BNE     ADRABSOLUTEL_766
00005C7A  6000 01DA               9719m         BRA     ADRABSOLUTEW_766
00005C7E                          9720m ADRABSOLUTEDST_766:
00005C7E  3A03                    9721m         MOVE.W  D3, D5
00005C80  0803 000B               9722m         BTST    #$B, D3
00005C84  6600 000E               9723m         BNE     ADRIMMEDIATE_766
00005C88  0803 0009               9724m         BTST    #$09, D3
00005C8C  6600 025A               9725m         BNE     ADRABSOLUTEL_766
00005C90  6000 01C4               9726m         BRA     ADRABSOLUTEW_766
00005C94                          9727m ADRIMMEDIATE_766:
00005C94  BE3C 0001               9728m         CMP.B   #1, D7
00005C98  6700 009E               9729m         BEQ     ADRIMMEDIATEL_766
00005C9C                          9730m ADRIMMEDIATEW_766:
00005C9C  361A                    9731m         MOVE.W  (A2)+, D3
00005C9E                          9732mm         PRINTHASH
00005C9E  103C 0006               9733mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CA2  323C 0023               9734mm         MOVE.W  #35, D1     ; AN = SIGN
00005CA6  4E4F                    9735mm         TRAP    #15         ; OUTPUT = SIGN
00005CA8                          9736mm         ENDM
00005CA8                          9737mm         PRINTSIGN
00005CA8  103C 0006               9738mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005CAC  323C 0024               9739mm         MOVE.W  #36, D1     ; AN = SIGN
00005CB0  4E4F                    9740mm         TRAP    #15         ; OUTPUT = SIGN
00005CB2                          9741mm         ENDM
00005CB2                          9742mm         ADROUT
00005CB2  3212                    9743mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CB4  E049                    9744mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CB6  E849                    9745mm         LSR.W   #4, D1      
00005CB8                          9746mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CB8  0C01 0009               9747mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CBC  6E00 000A               9748mmm         BGT     ALPHA_796
00005CC0  0601 0030               9749mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CC4  6000 0006               9750mmm         BRA     DONE_796
00005CC8  0601 0037               9751mmm ALPHA_796: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CCC  4E71                    9752mmm DONE_796: NOP
00005CCE                          9753mmm         ENDM
00005CCE  4E4F                    9754mm         TRAP    #15         ; EXECUTE OUTPUT
00005CD0                          9755mm         
00005CD0  3212                    9756mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CD2  E949                    9757mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005CD4  E049                    9758mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CD6  E849                    9759mm         LSR.W   #4, D1      
00005CD8                          9760mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CD8  0C01 0009               9761mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CDC  6E00 000A               9762mmm         BGT     ALPHA_797
00005CE0  0601 0030               9763mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005CE4  6000 0006               9764mmm         BRA     DONE_797
00005CE8  0601 0037               9765mmm ALPHA_797: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005CEC  4E71                    9766mmm DONE_797: NOP
00005CEE                          9767mmm         ENDM
00005CEE  4E4F                    9768mm         TRAP    #15         ; EXECUTE OUTPUT
00005CF0                          9769mm         
00005CF0  3212                    9770mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005CF2  E149                    9771mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005CF4  E049                    9772mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005CF6  E849                    9773mm         LSR.W   #4, D1      
00005CF8                          9774mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005CF8  0C01 0009               9775mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005CFC  6E00 000A               9776mmm         BGT     ALPHA_798
00005D00  0601 0030               9777mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D04  6000 0006               9778mmm         BRA     DONE_798
00005D08  0601 0037               9779mmm ALPHA_798: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D0C  4E71                    9780mmm DONE_798: NOP
00005D0E                          9781mmm         ENDM
00005D0E  4E4F                    9782mm         TRAP    #15         ; EXECUTE OUTPUT
00005D10                          9783mm         
00005D10  3212                    9784mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D12  E149                    9785mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D14  E949                    9786mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005D16  E049                    9787mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D18  E849                    9788mm         LSR.W   #4, D1      
00005D1A                          9789mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D1A  0C01 0009               9790mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D1E  6E00 000A               9791mmm         BGT     ALPHA_799
00005D22  0601 0030               9792mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D26  6000 0006               9793mmm         BRA     DONE_799
00005D2A  0601 0037               9794mmm ALPHA_799: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D2E  4E71                    9795mmm DONE_799: NOP
00005D30                          9796mmm         ENDM
00005D30  4E4F                    9797mm         TRAP    #15         ; EXECUTE OUTPUT       
00005D32                          9798mm         ENDM 
00005D32  3605                    9799m         MOVE.W  D5, D3
00005D34  6000 02C2               9800m         BRA     COMPLETE_766
00005D38                          9801m ADRIMMEDIATEL_766:
00005D38  361A                    9802m         MOVE.W  (A2)+, D3
00005D3A                          9803mm         PRINTHASH
00005D3A  103C 0006               9804mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005D3E  323C 0023               9805mm         MOVE.W  #35, D1     ; AN = SIGN
00005D42  4E4F                    9806mm         TRAP    #15         ; OUTPUT = SIGN
00005D44                          9807mm         ENDM
00005D44                          9808mm         PRINTSIGN
00005D44  103C 0006               9809mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005D48  323C 0024               9810mm         MOVE.W  #36, D1     ; AN = SIGN
00005D4C  4E4F                    9811mm         TRAP    #15         ; OUTPUT = SIGN
00005D4E                          9812mm         ENDM
00005D4E                          9813mm         ADROUT 
00005D4E  3212                    9814mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D50  E049                    9815mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D52  E849                    9816mm         LSR.W   #4, D1      
00005D54                          9817mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D54  0C01 0009               9818mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D58  6E00 000A               9819mmm         BGT     ALPHA_803
00005D5C  0601 0030               9820mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D60  6000 0006               9821mmm         BRA     DONE_803
00005D64  0601 0037               9822mmm ALPHA_803: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D68  4E71                    9823mmm DONE_803: NOP
00005D6A                          9824mmm         ENDM
00005D6A  4E4F                    9825mm         TRAP    #15         ; EXECUTE OUTPUT
00005D6C                          9826mm         
00005D6C  3212                    9827mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D6E  E949                    9828mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005D70  E049                    9829mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D72  E849                    9830mm         LSR.W   #4, D1      
00005D74                          9831mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D74  0C01 0009               9832mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D78  6E00 000A               9833mmm         BGT     ALPHA_804
00005D7C  0601 0030               9834mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005D80  6000 0006               9835mmm         BRA     DONE_804
00005D84  0601 0037               9836mmm ALPHA_804: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005D88  4E71                    9837mmm DONE_804: NOP
00005D8A                          9838mmm         ENDM
00005D8A  4E4F                    9839mm         TRAP    #15         ; EXECUTE OUTPUT
00005D8C                          9840mm         
00005D8C  3212                    9841mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005D8E  E149                    9842mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005D90  E049                    9843mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005D92  E849                    9844mm         LSR.W   #4, D1      
00005D94                          9845mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005D94  0C01 0009               9846mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005D98  6E00 000A               9847mmm         BGT     ALPHA_805
00005D9C  0601 0030               9848mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DA0  6000 0006               9849mmm         BRA     DONE_805
00005DA4  0601 0037               9850mmm ALPHA_805: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DA8  4E71                    9851mmm DONE_805: NOP
00005DAA                          9852mmm         ENDM
00005DAA  4E4F                    9853mm         TRAP    #15         ; EXECUTE OUTPUT
00005DAC                          9854mm         
00005DAC  3212                    9855mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DAE  E149                    9856mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005DB0  E949                    9857mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005DB2  E049                    9858mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DB4  E849                    9859mm         LSR.W   #4, D1      
00005DB6                          9860mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DB6  0C01 0009               9861mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DBA  6E00 000A               9862mmm         BGT     ALPHA_806
00005DBE  0601 0030               9863mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DC2  6000 0006               9864mmm         BRA     DONE_806
00005DC6  0601 0037               9865mmm ALPHA_806: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DCA  4E71                    9866mmm DONE_806: NOP
00005DCC                          9867mmm         ENDM
00005DCC  4E4F                    9868mm         TRAP    #15         ; EXECUTE OUTPUT       
00005DCE                          9869mm         ENDM 
00005DCE  361A                    9870m         MOVE.W  (A2)+, D3
00005DD0                          9871mm         ADROUT
00005DD0  3212                    9872mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DD2  E049                    9873mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DD4  E849                    9874mm         LSR.W   #4, D1      
00005DD6                          9875mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DD6  0C01 0009               9876mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DDA  6E00 000A               9877mmm         BGT     ALPHA_808
00005DDE  0601 0030               9878mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005DE2  6000 0006               9879mmm         BRA     DONE_808
00005DE6  0601 0037               9880mmm ALPHA_808: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005DEA  4E71                    9881mmm DONE_808: NOP
00005DEC                          9882mmm         ENDM
00005DEC  4E4F                    9883mm         TRAP    #15         ; EXECUTE OUTPUT
00005DEE                          9884mm         
00005DEE  3212                    9885mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005DF0  E949                    9886mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005DF2  E049                    9887mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005DF4  E849                    9888mm         LSR.W   #4, D1      
00005DF6                          9889mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005DF6  0C01 0009               9890mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005DFA  6E00 000A               9891mmm         BGT     ALPHA_809
00005DFE  0601 0030               9892mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E02  6000 0006               9893mmm         BRA     DONE_809
00005E06  0601 0037               9894mmm ALPHA_809: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E0A  4E71                    9895mmm DONE_809: NOP
00005E0C                          9896mmm         ENDM
00005E0C  4E4F                    9897mm         TRAP    #15         ; EXECUTE OUTPUT
00005E0E                          9898mm         
00005E0E  3212                    9899mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E10  E149                    9900mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E12  E049                    9901mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E14  E849                    9902mm         LSR.W   #4, D1      
00005E16                          9903mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E16  0C01 0009               9904mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E1A  6E00 000A               9905mmm         BGT     ALPHA_810
00005E1E  0601 0030               9906mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E22  6000 0006               9907mmm         BRA     DONE_810
00005E26  0601 0037               9908mmm ALPHA_810: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E2A  4E71                    9909mmm DONE_810: NOP
00005E2C                          9910mmm         ENDM
00005E2C  4E4F                    9911mm         TRAP    #15         ; EXECUTE OUTPUT
00005E2E                          9912mm         
00005E2E  3212                    9913mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E30  E149                    9914mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005E32  E949                    9915mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005E34  E049                    9916mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E36  E849                    9917mm         LSR.W   #4, D1      
00005E38                          9918mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E38  0C01 0009               9919mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E3C  6E00 000A               9920mmm         BGT     ALPHA_811
00005E40  0601 0030               9921mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E44  6000 0006               9922mmm         BRA     DONE_811
00005E48  0601 0037               9923mmm ALPHA_811: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E4C  4E71                    9924mmm DONE_811: NOP
00005E4E                          9925mmm         ENDM
00005E4E  4E4F                    9926mm         TRAP    #15         ; EXECUTE OUTPUT       
00005E50                          9927mm         ENDM 
00005E50  3605                    9928m         MOVE.W  D5, D3
00005E52  6000 01A4               9929m         BRA     COMPLETE_766 
00005E56                          9930m ADRABSOLUTEW_766:     
00005E56  361A                    9931m         MOVE.W  (A2)+, D3
00005E58                          9932mm         PRINTSIGN
00005E58  103C 0006               9933mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005E5C  323C 0024               9934mm         MOVE.W  #36, D1     ; AN = SIGN
00005E60  4E4F                    9935mm         TRAP    #15         ; OUTPUT = SIGN
00005E62                          9936mm         ENDM
00005E62                          9937mm         ADROUT
00005E62  3212                    9938mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E64  E049                    9939mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E66  E849                    9940mm         LSR.W   #4, D1      
00005E68                          9941mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E68  0C01 0009               9942mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E6C  6E00 000A               9943mmm         BGT     ALPHA_814
00005E70  0601 0030               9944mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E74  6000 0006               9945mmm         BRA     DONE_814
00005E78  0601 0037               9946mmm ALPHA_814: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E7C  4E71                    9947mmm DONE_814: NOP
00005E7E                          9948mmm         ENDM
00005E7E  4E4F                    9949mm         TRAP    #15         ; EXECUTE OUTPUT
00005E80                          9950mm         
00005E80  3212                    9951mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005E82  E949                    9952mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005E84  E049                    9953mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005E86  E849                    9954mm         LSR.W   #4, D1      
00005E88                          9955mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005E88  0C01 0009               9956mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005E8C  6E00 000A               9957mmm         BGT     ALPHA_815
00005E90  0601 0030               9958mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005E94  6000 0006               9959mmm         BRA     DONE_815
00005E98  0601 0037               9960mmm ALPHA_815: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005E9C  4E71                    9961mmm DONE_815: NOP
00005E9E                          9962mmm         ENDM
00005E9E  4E4F                    9963mm         TRAP    #15         ; EXECUTE OUTPUT
00005EA0                          9964mm         
00005EA0  3212                    9965mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EA2  E149                    9966mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EA4  E049                    9967mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EA6  E849                    9968mm         LSR.W   #4, D1      
00005EA8                          9969mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EA8  0C01 0009               9970mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EAC  6E00 000A               9971mmm         BGT     ALPHA_816
00005EB0  0601 0030               9972mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005EB4  6000 0006               9973mmm         BRA     DONE_816
00005EB8  0601 0037               9974mmm ALPHA_816: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EBC  4E71                    9975mmm DONE_816: NOP
00005EBE                          9976mmm         ENDM
00005EBE  4E4F                    9977mm         TRAP    #15         ; EXECUTE OUTPUT
00005EC0                          9978mm         
00005EC0  3212                    9979mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EC2  E149                    9980mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005EC4  E949                    9981mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005EC6  E049                    9982mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EC8  E849                    9983mm         LSR.W   #4, D1      
00005ECA                          9984mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005ECA  0C01 0009               9985mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005ECE  6E00 000A               9986mmm         BGT     ALPHA_817
00005ED2  0601 0030               9987mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005ED6  6000 0006               9988mmm         BRA     DONE_817
00005EDA  0601 0037               9989mmm ALPHA_817: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005EDE  4E71                    9990mmm DONE_817: NOP
00005EE0                          9991mmm         ENDM
00005EE0  4E4F                    9992mm         TRAP    #15         ; EXECUTE OUTPUT       
00005EE2                          9993mm         ENDM 
00005EE2  3605                    9994m         MOVE.W  D5, D3
00005EE4  6000 0112               9995m         BRA     COMPLETE_766  
00005EE8                          9996m ADRABSOLUTEL_766:  
00005EE8  361A                    9997m         MOVE.W  (A2)+, D3
00005EEA                          9998mm         PRINTSIGN
00005EEA  103C 0006               9999mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00005EEE  323C 0024              10000mm         MOVE.W  #36, D1     ; AN = SIGN
00005EF2  4E4F                   10001mm         TRAP    #15         ; OUTPUT = SIGN
00005EF4                         10002mm         ENDM
00005EF4                         10003mm         ADROUT 
00005EF4  3212                   10004mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005EF6  E049                   10005mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005EF8  E849                   10006mm         LSR.W   #4, D1      
00005EFA                         10007mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005EFA  0C01 0009              10008mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005EFE  6E00 000A              10009mmm         BGT     ALPHA_820
00005F02  0601 0030              10010mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F06  6000 0006              10011mmm         BRA     DONE_820
00005F0A  0601 0037              10012mmm ALPHA_820: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F0E  4E71                   10013mmm DONE_820: NOP
00005F10                         10014mmm         ENDM
00005F10  4E4F                   10015mm         TRAP    #15         ; EXECUTE OUTPUT
00005F12                         10016mm         
00005F12  3212                   10017mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F14  E949                   10018mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F16  E049                   10019mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F18  E849                   10020mm         LSR.W   #4, D1      
00005F1A                         10021mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F1A  0C01 0009              10022mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F1E  6E00 000A              10023mmm         BGT     ALPHA_821
00005F22  0601 0030              10024mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F26  6000 0006              10025mmm         BRA     DONE_821
00005F2A  0601 0037              10026mmm ALPHA_821: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F2E  4E71                   10027mmm DONE_821: NOP
00005F30                         10028mmm         ENDM
00005F30  4E4F                   10029mm         TRAP    #15         ; EXECUTE OUTPUT
00005F32                         10030mm         
00005F32  3212                   10031mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F34  E149                   10032mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F36  E049                   10033mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F38  E849                   10034mm         LSR.W   #4, D1      
00005F3A                         10035mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F3A  0C01 0009              10036mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F3E  6E00 000A              10037mmm         BGT     ALPHA_822
00005F42  0601 0030              10038mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F46  6000 0006              10039mmm         BRA     DONE_822
00005F4A  0601 0037              10040mmm ALPHA_822: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F4E  4E71                   10041mmm DONE_822: NOP
00005F50                         10042mmm         ENDM
00005F50  4E4F                   10043mm         TRAP    #15         ; EXECUTE OUTPUT
00005F52                         10044mm         
00005F52  3212                   10045mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F54  E149                   10046mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005F56  E949                   10047mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005F58  E049                   10048mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F5A  E849                   10049mm         LSR.W   #4, D1      
00005F5C                         10050mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F5C  0C01 0009              10051mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F60  6E00 000A              10052mmm         BGT     ALPHA_823
00005F64  0601 0030              10053mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F68  6000 0006              10054mmm         BRA     DONE_823
00005F6C  0601 0037              10055mmm ALPHA_823: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F70  4E71                   10056mmm DONE_823: NOP
00005F72                         10057mmm         ENDM
00005F72  4E4F                   10058mm         TRAP    #15         ; EXECUTE OUTPUT       
00005F74                         10059mm         ENDM 
00005F74  361A                   10060m         MOVE.W  (A2)+, D3
00005F76                         10061mm         ADROUT
00005F76  3212                   10062mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F78  E049                   10063mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F7A  E849                   10064mm         LSR.W   #4, D1      
00005F7C                         10065mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F7C  0C01 0009              10066mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005F80  6E00 000A              10067mmm         BGT     ALPHA_825
00005F84  0601 0030              10068mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005F88  6000 0006              10069mmm         BRA     DONE_825
00005F8C  0601 0037              10070mmm ALPHA_825: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005F90  4E71                   10071mmm DONE_825: NOP
00005F92                         10072mmm         ENDM
00005F92  4E4F                   10073mm         TRAP    #15         ; EXECUTE OUTPUT
00005F94                         10074mm         
00005F94  3212                   10075mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005F96  E949                   10076mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00005F98  E049                   10077mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005F9A  E849                   10078mm         LSR.W   #4, D1      
00005F9C                         10079mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005F9C  0C01 0009              10080mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FA0  6E00 000A              10081mmm         BGT     ALPHA_826
00005FA4  0601 0030              10082mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FA8  6000 0006              10083mmm         BRA     DONE_826
00005FAC  0601 0037              10084mmm ALPHA_826: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FB0  4E71                   10085mmm DONE_826: NOP
00005FB2                         10086mmm         ENDM
00005FB2  4E4F                   10087mm         TRAP    #15         ; EXECUTE OUTPUT
00005FB4                         10088mm         
00005FB4  3212                   10089mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FB6  E149                   10090mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FB8  E049                   10091mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FBA  E849                   10092mm         LSR.W   #4, D1      
00005FBC                         10093mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FBC  0C01 0009              10094mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FC0  6E00 000A              10095mmm         BGT     ALPHA_827
00005FC4  0601 0030              10096mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FC8  6000 0006              10097mmm         BRA     DONE_827
00005FCC  0601 0037              10098mmm ALPHA_827: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FD0  4E71                   10099mmm DONE_827: NOP
00005FD2                         10100mmm         ENDM
00005FD2  4E4F                   10101mm         TRAP    #15         ; EXECUTE OUTPUT
00005FD4                         10102mm         
00005FD4  3212                   10103mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00005FD6  E149                   10104mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00005FD8  E949                   10105mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00005FDA  E049                   10106mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00005FDC  E849                   10107mm         LSR.W   #4, D1      
00005FDE                         10108mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00005FDE  0C01 0009              10109mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00005FE2  6E00 000A              10110mmm         BGT     ALPHA_828
00005FE6  0601 0030              10111mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00005FEA  6000 0006              10112mmm         BRA     DONE_828
00005FEE  0601 0037              10113mmm ALPHA_828: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00005FF2  4E71                   10114mmm DONE_828: NOP
00005FF4                         10115mmm         ENDM
00005FF4  4E4F                   10116mm         TRAP    #15         ; EXECUTE OUTPUT       
00005FF6                         10117mm         ENDM 
00005FF6  3605                   10118m         MOVE.W  D5, D3
00005FF8                         10119m 
00005FF8                         10120m COMPLETE_766:  ; OPCODE HAS BEEN VERIFIED
00005FF8                         10121m         ENDM
00005FF8  4E75                   10122          RTS                 ; Return from decodeNOT subroutine
00005FFA                         10123  
00005FFA                         10124  ; ------------------------------------------------------------
00005FFA                         10125  ; 11a. "decodeLSx_M" subroutine
00005FFA                         10126  ; AUTHOR
00005FFA                         10127  ;
00005FFA                         10128  ; TODO: DESCRIPTION - LSL or LSR Memory Shift
00005FFA                         10129  ; ------------------------------------------------------------
00005FFA                         10130  decodeLSx_M:
00005FFA                         10131m         verifyOpcode    pLSx_M, (A2)
00005FFA  43F8 01A0              10132m         LEA     PLSX_M, A1      ; INPUT PATTERN STRING
00005FFE  3612                   10133m         MOVE.W  (A2), D3      ; INPUT VALUE
00006000  123C 000F              10134m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006004                         10135m         
00006004                         10136m LOOP_829: 
00006004  0C11 0030              10137m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006008  6700 000E              10138m         BEQ     CHECKFOR0_829
0000600C  0C11 0031              10139m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006010  6700 0010              10140m         BEQ     CHECKFOR1_829
00006014  6000 0012              10141m         BRA     NEXT_829      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006018                         10142m         
00006018                         10143m CHECKFOR0_829: 
00006018  0303                   10144m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000601A  6600 0C24              10145m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000601E  6000 0008              10146m         BRA     NEXT_829
00006022                         10147m 
00006022                         10148m CHECKFOR1_829:
00006022  0303                   10149m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006024  6700 0C1A              10150m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006028                         10151m 
00006028                         10152m NEXT_829: 
00006028  B23C 0000              10153m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000602C  6700 0008              10154m         BEQ     COMPLETE_829  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006030  5301                   10155m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006032  1819                   10156m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006034  60CE                   10157m         BRA     LOOP_829      ; BEGIN LOOP AGAIN
00006036                         10158m 
00006036                         10159m COMPLETE_829:  ; OPCODE HAS BEEN VERIFIED
00006036                         10160m         ENDM
00006036  0803 0008              10161          BTST    #$08, D3     ; Check the 8th bit
0000603A  6700 0010              10162          BEQ     LSR_M
0000603E  43F8 0093              10163  LSL_M:  LEA     oLSL, A1
00006042  103C 000E              10164          MOVE.B  #14,D0          
00006046  4E4F                   10165          TRAP    #15 
00006048  6000 000C              10166          BRA     reg_M        
0000604C                         10167    
0000604C  43F8 0097              10168  LSR_M:  LEA     oLSR, A1
00006050  103C 000E              10169          MOVE.B  #14,D0          
00006054  4E4F                   10170          TRAP    #15      
00006056                         10171m reg_M:  printSizeLow       (A2) 
00006056  3612                   10172m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006058  4247                   10173m         CLR     D7   
0000605A                         10174m CHECKFORB_830: 
0000605A  0803 0006              10175m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000605E  6600 0018              10176m         BNE     CHECKFORW_830  ; IF NOT GO TO WORD SIZE
00006062  0803 0007              10177m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006066  6600 001E              10178m         BNE     CHECKFORL_830 ; IF NOT GO TO LONGWORD SIZE
0000606A  43F8 00BB              10179m         LEA     OBSIZE, A1     
0000606E  103C 000E              10180m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006072  4E4F                   10181m         TRAP    #15
00006074  6000 001E              10182m         BRA     COMPLETE_830      
00006078                         10183m CHECKFORW_830: 
00006078  43F8 00BF              10184m         LEA     OWSIZE, A1     
0000607C  103C 000E              10185m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006080  4E4F                   10186m         TRAP    #15
00006082  6000 0010              10187m         BRA     COMPLETE_830  
00006086                         10188m CHECKFORL_830:
00006086  1E3C 0001              10189m         MOVE.B  #$1, D7
0000608A  43F8 00C3              10190m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000608E  103C 000E              10191m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006092  4E4F                   10192m         TRAP    #15
00006094                         10193m COMPLETE_830:  ; SIZE HAS BEEN PRINTED
00006094                         10194m         ENDM
00006094                         10195m         printCount       (A2)
00006094  3212                   10196m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006096  E949                   10197m         LSL     #$04, D1
00006098  E049                   10198m         LSR     #$08, D1
0000609A  EA49                   10199m         LSR     #$05, D1
0000609C  43F8 00D6              10200m         LEA     OHASH, A1     
000060A0  103C 000E              10201m         MOVE.B  #14,D0          
000060A4  4E4F                   10202m         TRAP    #15
000060A6  103C 0003              10203m         MOVE.B  #3,D0          
000060AA  4E4F                   10204m         TRAP    #15
000060AC                         10205m         ENDM
000060AC                         10206m         printComma
000060AC  43F8 00CF              10207m         LEA     OCOMMA, A1     
000060B0  103C 000E              10208m         MOVE.B  #14,D0          
000060B4  4E4F                   10209m         TRAP    #15
000060B6                         10210m         ENDM
000060B6                         10211m         printDnSrc     (A2)        
000060B6  4281                   10212m         CLR.L   D1
000060B8  3212                   10213m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000060BA  E149                   10214m         LSL     #$08, D1
000060BC  EB49                   10215m         LSL     #$05, D1
000060BE  E049                   10216m         LSR     #$08, D1
000060C0  EA49                   10217m         LSR     #$05, D1
000060C2  43F8 00C7              10218m         LEA     ODN, A1     
000060C6  103C 000E              10219m         MOVE.B  #14,D0          
000060CA  4E4F                   10220m         TRAP    #15
000060CC  103C 0003              10221m         MOVE.B  #3,D0          
000060D0  4E4F                   10222m         TRAP    #15
000060D2                         10223m         ENDM
000060D2  4E75                   10224          RTS                 ; Return from decodeLSx_M subroutine
000060D4                         10225  
000060D4                         10226  
000060D4                         10227  ; ------------------------------------------------------------
000060D4                         10228  ; 11b. "decodeLSx_R" subroutine
000060D4                         10229  ; AUTHOR
000060D4                         10230  ;
000060D4                         10231  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000060D4                         10232  ; ------------------------------------------------------------
000060D4                         10233  decodeLSx_R:
000060D4                         10234m         verifyOpcode    pLSx_R, (A2)
000060D4  43F8 01B1              10235m         LEA     PLSX_R, A1      ; INPUT PATTERN STRING
000060D8  3612                   10236m         MOVE.W  (A2), D3      ; INPUT VALUE
000060DA  123C 000F              10237m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000060DE                         10238m         
000060DE                         10239m LOOP_834: 
000060DE  0C11 0030              10240m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000060E2  6700 000E              10241m         BEQ     CHECKFOR0_834
000060E6  0C11 0031              10242m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000060EA  6700 0010              10243m         BEQ     CHECKFOR1_834
000060EE  6000 0012              10244m         BRA     NEXT_834      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000060F2                         10245m         
000060F2                         10246m CHECKFOR0_834: 
000060F2  0303                   10247m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000060F4  6600 0B4A              10248m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000060F8  6000 0008              10249m         BRA     NEXT_834
000060FC                         10250m 
000060FC                         10251m CHECKFOR1_834:
000060FC  0303                   10252m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000060FE  6700 0B40              10253m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006102                         10254m 
00006102                         10255m NEXT_834: 
00006102  B23C 0000              10256m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006106  6700 0008              10257m         BEQ     COMPLETE_834  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000610A  5301                   10258m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
0000610C  1819                   10259m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
0000610E  60CE                   10260m         BRA     LOOP_834      ; BEGIN LOOP AGAIN
00006110                         10261m 
00006110                         10262m COMPLETE_834:  ; OPCODE HAS BEEN VERIFIED
00006110                         10263m         ENDM
00006110  0803 0008              10264          BTST    #$08, D3     ; Check the 8th bit
00006114  6700 0010              10265          BEQ     LSR_R
00006118  43F8 0093              10266  LSL_R:  LEA     oLSL, A1
0000611C  103C 000E              10267          MOVE.B  #14,D0          
00006120  4E4F                   10268          TRAP    #15 
00006122  6000 000C              10269          BRA     reg_R       
00006126                         10270    
00006126  43F8 0097              10271  LSR_R:  LEA     oLSR, A1
0000612A  103C 000E              10272          MOVE.B  #14,D0          
0000612E  4E4F                   10273          TRAP    #15      
00006130                         10274m reg_R:  printSizeLow       (A2)
00006130  3612                   10275m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006132  4247                   10276m         CLR     D7   
00006134                         10277m CHECKFORB_835: 
00006134  0803 0006              10278m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006138  6600 0018              10279m         BNE     CHECKFORW_835  ; IF NOT GO TO WORD SIZE
0000613C  0803 0007              10280m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006140  6600 001E              10281m         BNE     CHECKFORL_835 ; IF NOT GO TO LONGWORD SIZE
00006144  43F8 00BB              10282m         LEA     OBSIZE, A1     
00006148  103C 000E              10283m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000614C  4E4F                   10284m         TRAP    #15
0000614E  6000 001E              10285m         BRA     COMPLETE_835      
00006152                         10286m CHECKFORW_835: 
00006152  43F8 00BF              10287m         LEA     OWSIZE, A1     
00006156  103C 000E              10288m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000615A  4E4F                   10289m         TRAP    #15
0000615C  6000 0010              10290m         BRA     COMPLETE_835  
00006160                         10291m CHECKFORL_835:
00006160  1E3C 0001              10292m         MOVE.B  #$1, D7
00006164  43F8 00C3              10293m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006168  103C 000E              10294m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000616C  4E4F                   10295m         TRAP    #15
0000616E                         10296m COMPLETE_835:  ; SIZE HAS BEEN PRINTED
0000616E                         10297m         ENDM
0000616E                         10298m         printDnDest    (A2)
0000616E  3212                   10299m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006170  E949                   10300m         LSL     #$04, D1
00006172  E049                   10301m         LSR     #$08, D1
00006174  EA49                   10302m         LSR     #$05, D1
00006176  43F8 00C7              10303m         LEA     ODN, A1     
0000617A  103C 000E              10304m         MOVE.B  #14,D0          
0000617E  4E4F                   10305m         TRAP    #15
00006180  103C 0003              10306m         MOVE.B  #3,D0          
00006184  4E4F                   10307m         TRAP    #15
00006186                         10308m         ENDM
00006186                         10309m         printComma
00006186  43F8 00CF              10310m         LEA     OCOMMA, A1     
0000618A  103C 000E              10311m         MOVE.B  #14,D0          
0000618E  4E4F                   10312m         TRAP    #15
00006190                         10313m         ENDM
00006190                         10314m         printDnSrc     (A2)
00006190  4281                   10315m         CLR.L   D1
00006192  3212                   10316m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006194  E149                   10317m         LSL     #$08, D1
00006196  EB49                   10318m         LSL     #$05, D1
00006198  E049                   10319m         LSR     #$08, D1
0000619A  EA49                   10320m         LSR     #$05, D1
0000619C  43F8 00C7              10321m         LEA     ODN, A1     
000061A0  103C 000E              10322m         MOVE.B  #14,D0          
000061A4  4E4F                   10323m         TRAP    #15
000061A6  103C 0003              10324m         MOVE.B  #3,D0          
000061AA  4E4F                   10325m         TRAP    #15
000061AC                         10326m         ENDM
000061AC  4E75                   10327          RTS                 ; Return from ddecodeLSx_R subroutine
000061AE                         10328  
000061AE                         10329  ; ------------------------------------------------------------
000061AE                         10330  ; 11c. "decodeLSx_S" subroutine
000061AE                         10331  ; AUTHOR
000061AE                         10332  ;
000061AE                         10333  ; TODO: DESCRIPTION - LSL or LSR Register Shift
000061AE                         10334  ; ------------------------------------------------------------
000061AE                         10335  decodeLSx_S:
000061AE                         10336m         verifyOpcode    pLSx_S, (A2)
000061AE  43F8 01C2              10337m         LEA     PLSX_S, A1      ; INPUT PATTERN STRING
000061B2  3612                   10338m         MOVE.W  (A2), D3      ; INPUT VALUE
000061B4  123C 000F              10339m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000061B8                         10340m         
000061B8                         10341m LOOP_839: 
000061B8  0C11 0030              10342m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000061BC  6700 000E              10343m         BEQ     CHECKFOR0_839
000061C0  0C11 0031              10344m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000061C4  6700 0010              10345m         BEQ     CHECKFOR1_839
000061C8  6000 0012              10346m         BRA     NEXT_839      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000061CC                         10347m         
000061CC                         10348m CHECKFOR0_839: 
000061CC  0303                   10349m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000061CE  6600 0A70              10350m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000061D2  6000 0008              10351m         BRA     NEXT_839
000061D6                         10352m 
000061D6                         10353m CHECKFOR1_839:
000061D6  0303                   10354m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000061D8  6700 0A66              10355m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000061DC                         10356m 
000061DC                         10357m NEXT_839: 
000061DC  B23C 0000              10358m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000061E0  6700 0008              10359m         BEQ     COMPLETE_839  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000061E4  5301                   10360m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000061E6  1819                   10361m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000061E8  60CE                   10362m         BRA     LOOP_839      ; BEGIN LOOP AGAIN
000061EA                         10363m 
000061EA                         10364m COMPLETE_839:  ; OPCODE HAS BEEN VERIFIED
000061EA                         10365m         ENDM
000061EA  4E75                   10366          RTS                 ; Return from ddecodeLSx_S subroutine
000061EC                         10367          
000061EC                         10368  ; ------------------------------------------------------------
000061EC                         10369  ; 12a. "decodeASx_M" subroutine
000061EC                         10370  ; AUTHOR
000061EC                         10371  ;
000061EC                         10372  ; TODO: DESCRIPTION - ASL or ASR Memory Shift
000061EC                         10373  ; ------------------------------------------------------------
000061EC                         10374  decodeASx_M:
000061EC                         10375m         verifyOpcode    pASx_M, (A2)
000061EC  43F8 01D3              10376m         LEA     PASX_M, A1      ; INPUT PATTERN STRING
000061F0  3612                   10377m         MOVE.W  (A2), D3      ; INPUT VALUE
000061F2  123C 000F              10378m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000061F6                         10379m         
000061F6                         10380m LOOP_840: 
000061F6  0C11 0030              10381m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000061FA  6700 000E              10382m         BEQ     CHECKFOR0_840
000061FE  0C11 0031              10383m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006202  6700 0010              10384m         BEQ     CHECKFOR1_840
00006206  6000 0012              10385m         BRA     NEXT_840      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000620A                         10386m         
0000620A                         10387m CHECKFOR0_840: 
0000620A  0303                   10388m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000620C  6600 0A32              10389m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006210  6000 0008              10390m         BRA     NEXT_840
00006214                         10391m 
00006214                         10392m CHECKFOR1_840:
00006214  0303                   10393m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006216  6700 0A28              10394m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000621A                         10395m 
0000621A                         10396m NEXT_840: 
0000621A  B23C 0000              10397m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000621E  6700 0008              10398m         BEQ     COMPLETE_840  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006222  5301                   10399m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006224  1819                   10400m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006226  60CE                   10401m         BRA     LOOP_840      ; BEGIN LOOP AGAIN
00006228                         10402m 
00006228                         10403m COMPLETE_840:  ; OPCODE HAS BEEN VERIFIED
00006228                         10404m         ENDM
00006228  0803 0008              10405          BTST    #$08, D3     ; Check the 8th bit
0000622C  6700 0010              10406          BEQ     ASR_M
00006230  43F8 009B              10407  ASL_M:  LEA     oASL, A1
00006234  103C 000E              10408          MOVE.B  #14,D0          
00006238  4E4F                   10409          TRAP    #15 
0000623A  6000 000C              10410          BRA     Areg_M        
0000623E                         10411    
0000623E  43F8 009F              10412  ASR_M:  LEA     oASR, A1
00006242  103C 000E              10413          MOVE.B  #14,D0          
00006246  4E4F                   10414          TRAP    #15      
00006248                         10415m Areg_M: printSizeLow       (A2) 
00006248  3612                   10416m         MOVE.W  (A2), D3      ; INPUT VALUE   
0000624A  4247                   10417m         CLR     D7   
0000624C                         10418m CHECKFORB_841: 
0000624C  0803 0006              10419m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
00006250  6600 0018              10420m         BNE     CHECKFORW_841  ; IF NOT GO TO WORD SIZE
00006254  0803 0007              10421m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006258  6600 001E              10422m         BNE     CHECKFORL_841 ; IF NOT GO TO LONGWORD SIZE
0000625C  43F8 00BB              10423m         LEA     OBSIZE, A1     
00006260  103C 000E              10424m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006264  4E4F                   10425m         TRAP    #15
00006266  6000 001E              10426m         BRA     COMPLETE_841      
0000626A                         10427m CHECKFORW_841: 
0000626A  43F8 00BF              10428m         LEA     OWSIZE, A1     
0000626E  103C 000E              10429m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
00006272  4E4F                   10430m         TRAP    #15
00006274  6000 0010              10431m         BRA     COMPLETE_841  
00006278                         10432m CHECKFORL_841:
00006278  1E3C 0001              10433m         MOVE.B  #$1, D7
0000627C  43F8 00C3              10434m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
00006280  103C 000E              10435m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
00006284  4E4F                   10436m         TRAP    #15
00006286                         10437m COMPLETE_841:  ; SIZE HAS BEEN PRINTED
00006286                         10438m         ENDM
00006286                         10439m         printCount       (A2)
00006286  3212                   10440m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006288  E949                   10441m         LSL     #$04, D1
0000628A  E049                   10442m         LSR     #$08, D1
0000628C  EA49                   10443m         LSR     #$05, D1
0000628E  43F8 00D6              10444m         LEA     OHASH, A1     
00006292  103C 000E              10445m         MOVE.B  #14,D0          
00006296  4E4F                   10446m         TRAP    #15
00006298  103C 0003              10447m         MOVE.B  #3,D0          
0000629C  4E4F                   10448m         TRAP    #15
0000629E                         10449m         ENDM
0000629E                         10450m         printComma
0000629E  43F8 00CF              10451m         LEA     OCOMMA, A1     
000062A2  103C 000E              10452m         MOVE.B  #14,D0          
000062A6  4E4F                   10453m         TRAP    #15
000062A8                         10454m         ENDM
000062A8                         10455m         printDnSrc     (A2)          
000062A8  4281                   10456m         CLR.L   D1
000062AA  3212                   10457m         MOVE.W  (A2), D1   ; BITS 0 TO 2
000062AC  E149                   10458m         LSL     #$08, D1
000062AE  EB49                   10459m         LSL     #$05, D1
000062B0  E049                   10460m         LSR     #$08, D1
000062B2  EA49                   10461m         LSR     #$05, D1
000062B4  43F8 00C7              10462m         LEA     ODN, A1     
000062B8  103C 000E              10463m         MOVE.B  #14,D0          
000062BC  4E4F                   10464m         TRAP    #15
000062BE  103C 0003              10465m         MOVE.B  #3,D0          
000062C2  4E4F                   10466m         TRAP    #15
000062C4                         10467m         ENDM
000062C4  4E75                   10468          RTS                 ; Return from decodeASx_M subroutine
000062C6                         10469  
000062C6                         10470  
000062C6                         10471  ; ------------------------------------------------------------
000062C6                         10472  ; 12b. "decodeASx_R" subroutine
000062C6                         10473  ; AUTHOR
000062C6                         10474  ;
000062C6                         10475  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000062C6                         10476  ; ------------------------------------------------------------
000062C6                         10477  decodeASx_R:
000062C6                         10478m         verifyOpcode    pASx_R, (A2)
000062C6  43F8 01E4              10479m         LEA     PASX_R, A1      ; INPUT PATTERN STRING
000062CA  3612                   10480m         MOVE.W  (A2), D3      ; INPUT VALUE
000062CC  123C 000F              10481m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000062D0                         10482m         
000062D0                         10483m LOOP_845: 
000062D0  0C11 0030              10484m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000062D4  6700 000E              10485m         BEQ     CHECKFOR0_845
000062D8  0C11 0031              10486m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000062DC  6700 0010              10487m         BEQ     CHECKFOR1_845
000062E0  6000 0012              10488m         BRA     NEXT_845      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000062E4                         10489m         
000062E4                         10490m CHECKFOR0_845: 
000062E4  0303                   10491m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000062E6  6600 0958              10492m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000062EA  6000 0008              10493m         BRA     NEXT_845
000062EE                         10494m 
000062EE                         10495m CHECKFOR1_845:
000062EE  0303                   10496m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000062F0  6700 094E              10497m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000062F4                         10498m 
000062F4                         10499m NEXT_845: 
000062F4  B23C 0000              10500m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000062F8  6700 0008              10501m         BEQ     COMPLETE_845  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000062FC  5301                   10502m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000062FE  1819                   10503m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006300  60CE                   10504m         BRA     LOOP_845      ; BEGIN LOOP AGAIN
00006302                         10505m 
00006302                         10506m COMPLETE_845:  ; OPCODE HAS BEEN VERIFIED
00006302                         10507m         ENDM
00006302  0803 0008              10508          BTST    #$08, D3     ; Check the 8th bit
00006306  6700 0010              10509          BEQ     ASR_R
0000630A  43F8 009B              10510  ASL_R:  LEA     oASL, A1
0000630E  103C 000E              10511          MOVE.B  #14,D0          
00006312  4E4F                   10512          TRAP    #15 
00006314  6000 000C              10513          BRA     Areg_R       
00006318                         10514    
00006318  43F8 009F              10515  ASR_R:  LEA     oASR, A1
0000631C  103C 000E              10516          MOVE.B  #14,D0          
00006320  4E4F                   10517          TRAP    #15      
00006322                         10518m Areg_R: printSizeLow       (A2)
00006322  3612                   10519m         MOVE.W  (A2), D3      ; INPUT VALUE   
00006324  4247                   10520m         CLR     D7   
00006326                         10521m CHECKFORB_846: 
00006326  0803 0006              10522m         BTST    #6,  D3      ; CHECK IF CONTAINS 0
0000632A  6600 0018              10523m         BNE     CHECKFORW_846  ; IF NOT GO TO WORD SIZE
0000632E  0803 0007              10524m         BTST    #7, D3      ; CHECK IF CONTAINS 0
00006332  6600 001E              10525m         BNE     CHECKFORL_846 ; IF NOT GO TO LONGWORD SIZE
00006336  43F8 00BB              10526m         LEA     OBSIZE, A1     
0000633A  103C 000E              10527m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000633E  4E4F                   10528m         TRAP    #15
00006340  6000 001E              10529m         BRA     COMPLETE_846      
00006344                         10530m CHECKFORW_846: 
00006344  43F8 00BF              10531m         LEA     OWSIZE, A1     
00006348  103C 000E              10532m         MOVE.B  #14,D0       ; PRINT AND END MACRO       
0000634C  4E4F                   10533m         TRAP    #15
0000634E  6000 0010              10534m         BRA     COMPLETE_846  
00006352                         10535m CHECKFORL_846:
00006352  1E3C 0001              10536m         MOVE.B  #$1, D7
00006356  43F8 00C3              10537m         LEA     OLSIZE, A1   ; IF BOTH BITS ARE #1, SIZE IS LONGWORD AND MACRO ENDS.  
0000635A  103C 000E              10538m         MOVE.B  #14,D0       ; PRINT AND END MACRO  
0000635E  4E4F                   10539m         TRAP    #15
00006360                         10540m COMPLETE_846:  ; SIZE HAS BEEN PRINTED
00006360                         10541m         ENDM
00006360                         10542m         printDnDest    (A2)
00006360  3212                   10543m         MOVE.W  (A2), D1      ; BITS 9 TO 11
00006362  E949                   10544m         LSL     #$04, D1
00006364  E049                   10545m         LSR     #$08, D1
00006366  EA49                   10546m         LSR     #$05, D1
00006368  43F8 00C7              10547m         LEA     ODN, A1     
0000636C  103C 000E              10548m         MOVE.B  #14,D0          
00006370  4E4F                   10549m         TRAP    #15
00006372  103C 0003              10550m         MOVE.B  #3,D0          
00006376  4E4F                   10551m         TRAP    #15
00006378                         10552m         ENDM
00006378                         10553m         printComma
00006378  43F8 00CF              10554m         LEA     OCOMMA, A1     
0000637C  103C 000E              10555m         MOVE.B  #14,D0          
00006380  4E4F                   10556m         TRAP    #15
00006382                         10557m         ENDM
00006382                         10558m         printDnSrc     (A2)
00006382  4281                   10559m         CLR.L   D1
00006384  3212                   10560m         MOVE.W  (A2), D1   ; BITS 0 TO 2
00006386  E149                   10561m         LSL     #$08, D1
00006388  EB49                   10562m         LSL     #$05, D1
0000638A  E049                   10563m         LSR     #$08, D1
0000638C  EA49                   10564m         LSR     #$05, D1
0000638E  43F8 00C7              10565m         LEA     ODN, A1     
00006392  103C 000E              10566m         MOVE.B  #14,D0          
00006396  4E4F                   10567m         TRAP    #15
00006398  103C 0003              10568m         MOVE.B  #3,D0          
0000639C  4E4F                   10569m         TRAP    #15
0000639E                         10570m         ENDM
0000639E  4E75                   10571          RTS                 ; Return from decodeASx_R subroutine
000063A0                         10572          
000063A0                         10573          ; ------------------------------------------------------------
000063A0                         10574  ; 12c. "decodeASx_S" subroutine
000063A0                         10575  ; AUTHOR
000063A0                         10576  ;
000063A0                         10577  ; TODO: DESCRIPTION - ASL or ASR Register Shift
000063A0                         10578  ; ------------------------------------------------------------
000063A0                         10579  decodeASx_S:
000063A0                         10580m         verifyOpcode    pASx_S, (A2)
000063A0  43F8 01F5              10581m         LEA     PASX_S, A1      ; INPUT PATTERN STRING
000063A4  3612                   10582m         MOVE.W  (A2), D3      ; INPUT VALUE
000063A6  123C 000F              10583m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063AA                         10584m         
000063AA                         10585m LOOP_850: 
000063AA  0C11 0030              10586m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063AE  6700 000E              10587m         BEQ     CHECKFOR0_850
000063B2  0C11 0031              10588m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063B6  6700 0010              10589m         BEQ     CHECKFOR1_850
000063BA  6000 0012              10590m         BRA     NEXT_850      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063BE                         10591m         
000063BE                         10592m CHECKFOR0_850: 
000063BE  0303                   10593m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063C0  6600 087E              10594m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000063C4  6000 0008              10595m         BRA     NEXT_850
000063C8                         10596m 
000063C8                         10597m CHECKFOR1_850:
000063C8  0303                   10598m         BTST    D1, D3      ; CHECK IF CONTAINS 1
000063CA  6700 0874              10599m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
000063CE                         10600m 
000063CE                         10601m NEXT_850: 
000063CE  B23C 0000              10602m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
000063D2  6700 0008              10603m         BEQ     COMPLETE_850  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
000063D6  5301                   10604m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
000063D8  1819                   10605m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
000063DA  60CE                   10606m         BRA     LOOP_850      ; BEGIN LOOP AGAIN
000063DC                         10607m 
000063DC                         10608m COMPLETE_850:  ; OPCODE HAS BEEN VERIFIED
000063DC                         10609m         ENDM
000063DC  4E75                   10610          RTS                 ; Return from decodeASx_S subroutine
000063DE                         10611  
000063DE                         10612  
000063DE                         10613  ; ------------------------------------------------------------
000063DE                         10614  ; 13a. "decodeBEQ" subroutine
000063DE                         10615  ; AUTHOR
000063DE                         10616  ;
000063DE                         10617  ; TODO: DESCRIPTION
000063DE                         10618  ; ------------------------------------------------------------
000063DE                         10619  decodeBEQ:
000063DE                         10620m         verifyOpcode    pBEQ, (A2)
000063DE  43F8 0206              10621m         LEA     PBEQ, A1      ; INPUT PATTERN STRING
000063E2  3612                   10622m         MOVE.W  (A2), D3      ; INPUT VALUE
000063E4  123C 000F              10623m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000063E8                         10624m         
000063E8                         10625m LOOP_851: 
000063E8  0C11 0030              10626m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000063EC  6700 000E              10627m         BEQ     CHECKFOR0_851
000063F0  0C11 0031              10628m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000063F4  6700 0010              10629m         BEQ     CHECKFOR1_851
000063F8  6000 0012              10630m         BRA     NEXT_851      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000063FC                         10631m         
000063FC                         10632m CHECKFOR0_851: 
000063FC  0303                   10633m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000063FE  6600 0840              10634m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006402  6000 0008              10635m         BRA     NEXT_851
00006406                         10636m 
00006406                         10637m CHECKFOR1_851:
00006406  0303                   10638m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006408  6700 0836              10639m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000640C                         10640m 
0000640C                         10641m NEXT_851: 
0000640C  B23C 0000              10642m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006410  6700 0008              10643m         BEQ     COMPLETE_851  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006414  5301                   10644m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006416  1819                   10645m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006418  60CE                   10646m         BRA     LOOP_851      ; BEGIN LOOP AGAIN
0000641A                         10647m 
0000641A                         10648m COMPLETE_851:  ; OPCODE HAS BEEN VERIFIED
0000641A                         10649m         ENDM
0000641A  43F8 00A3              10650          LEA     oBEQ, A1     
0000641E  103C 000E              10651          MOVE.B  #14,D0          
00006422  4E4F                   10652          TRAP    #15
00006424                         10653m         space
00006424  43F8 00D8              10654m         LEA     OBLANK, A1
00006428  103C 000E              10655m         MOVE.B  #14,D0          
0000642C  4E4F                   10656m         TRAP    #15
0000642E                         10657m         ENDM
0000642E                         10658m         printSign
0000642E  103C 0006              10659m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006432  323C 0024              10660m         MOVE.W  #36, D1     ; AN = SIGN
00006436  4E4F                   10661m         TRAP    #15         ; OUTPUT = SIGN
00006438                         10662m         ENDM
00006438                         10663m         printBranch     (A2)
00006438  3612                   10664m         MOVE.W (A2), D3
0000643A  4241                   10665m         CLR     D1
0000643C  D203                   10666m         ADD.B   D3, D1
0000643E                         10667mm         CONVERTATOH D1
0000643E  0C01 0039              10668mm         CMPI.B  #$39, D1
00006442  6E00 000A              10669mm         BGT     ALPHA_855
00006446  0401 0030              10670mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
0000644A  6000 0006              10671mm         BRA     DONE_855
0000644E  0401 0037              10672mm ALPHA_855: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006452  4E71                   10673mm DONE_855: NOP
00006454                         10674mm         ENDM
00006454  103C 0003              10675m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006458  4E4F                   10676m         TRAP    #15
0000645A                         10677m         ENDM        
0000645A  4E75                   10678          RTS                 ; Return from decodeBEQ subroutine
0000645C                         10679  
0000645C                         10680  
0000645C                         10681  ; ------------------------------------------------------------
0000645C                         10682  ; 13b. "decodeBGE" subroutine
0000645C                         10683  ; AUTHOR
0000645C                         10684  ;
0000645C                         10685  ; TODO: DESCRIPTION
0000645C                         10686  ; ------------------------------------------------------------
0000645C                         10687  decodeBGE:
0000645C                         10688m         verifyOpcode    pBGE, (A2)
0000645C  43F8 0217              10689m         LEA     PBGE, A1      ; INPUT PATTERN STRING
00006460  3612                   10690m         MOVE.W  (A2), D3      ; INPUT VALUE
00006462  123C 000F              10691m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006466                         10692m         
00006466                         10693m LOOP_856: 
00006466  0C11 0030              10694m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
0000646A  6700 000E              10695m         BEQ     CHECKFOR0_856
0000646E  0C11 0031              10696m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006472  6700 0010              10697m         BEQ     CHECKFOR1_856
00006476  6000 0012              10698m         BRA     NEXT_856      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
0000647A                         10699m         
0000647A                         10700m CHECKFOR0_856: 
0000647A  0303                   10701m         BTST    D1, D3      ; CHECK IF CONTAINS 0
0000647C  6600 07C2              10702m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006480  6000 0008              10703m         BRA     NEXT_856
00006484                         10704m 
00006484                         10705m CHECKFOR1_856:
00006484  0303                   10706m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006486  6700 07B8              10707m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
0000648A                         10708m 
0000648A                         10709m NEXT_856: 
0000648A  B23C 0000              10710m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000648E  6700 0008              10711m         BEQ     COMPLETE_856  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006492  5301                   10712m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006494  1819                   10713m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006496  60CE                   10714m         BRA     LOOP_856      ; BEGIN LOOP AGAIN
00006498                         10715m 
00006498                         10716m COMPLETE_856:  ; OPCODE HAS BEEN VERIFIED
00006498                         10717m         ENDM
00006498  43F8 00A7              10718          LEA     oBGE, A1     
0000649C  103C 000E              10719          MOVE.B  #14,D0          
000064A0  4E4F                   10720          TRAP    #15
000064A2                         10721m         space
000064A2  43F8 00D8              10722m         LEA     OBLANK, A1
000064A6  103C 000E              10723m         MOVE.B  #14,D0          
000064AA  4E4F                   10724m         TRAP    #15
000064AC                         10725m         ENDM
000064AC                         10726m         printSign
000064AC  103C 0006              10727m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000064B0  323C 0024              10728m         MOVE.W  #36, D1     ; AN = SIGN
000064B4  4E4F                   10729m         TRAP    #15         ; OUTPUT = SIGN
000064B6                         10730m         ENDM
000064B6                         10731m         printBranch     (A2)
000064B6  3612                   10732m         MOVE.W (A2), D3
000064B8  4241                   10733m         CLR     D1
000064BA  D203                   10734m         ADD.B   D3, D1
000064BC                         10735mm         CONVERTATOH D1
000064BC  0C01 0039              10736mm         CMPI.B  #$39, D1
000064C0  6E00 000A              10737mm         BGT     ALPHA_860
000064C4  0401 0030              10738mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
000064C8  6000 0006              10739mm         BRA     DONE_860
000064CC  0401 0037              10740mm ALPHA_860: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
000064D0  4E71                   10741mm DONE_860: NOP
000064D2                         10742mm         ENDM
000064D2  103C 0003              10743m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
000064D6  4E4F                   10744m         TRAP    #15
000064D8                         10745m         ENDM        
000064D8  4E75                   10746          RTS                 ; Return from decodeBGE subroutine
000064DA                         10747  
000064DA                         10748  
000064DA                         10749  ; ------------------------------------------------------------
000064DA                         10750  ; 13c. "decodeBLT" subroutine
000064DA                         10751  ; AUTHOR
000064DA                         10752  ;
000064DA                         10753  ; TODO: DESCRIPTION
000064DA                         10754  ; ------------------------------------------------------------
000064DA                         10755  decodeBLT:
000064DA                         10756m         verifyOpcode    pBLT, (A2)
000064DA  43F8 0228              10757m         LEA     PBLT, A1      ; INPUT PATTERN STRING
000064DE  3612                   10758m         MOVE.W  (A2), D3      ; INPUT VALUE
000064E0  123C 000F              10759m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
000064E4                         10760m         
000064E4                         10761m LOOP_861: 
000064E4  0C11 0030              10762m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
000064E8  6700 000E              10763m         BEQ     CHECKFOR0_861
000064EC  0C11 0031              10764m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
000064F0  6700 0010              10765m         BEQ     CHECKFOR1_861
000064F4  6000 0012              10766m         BRA     NEXT_861      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
000064F8                         10767m         
000064F8                         10768m CHECKFOR0_861: 
000064F8  0303                   10769m         BTST    D1, D3      ; CHECK IF CONTAINS 0
000064FA  6600 0744              10770m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
000064FE  6000 0008              10771m         BRA     NEXT_861
00006502                         10772m 
00006502                         10773m CHECKFOR1_861:
00006502  0303                   10774m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006504  6700 073A              10775m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006508                         10776m 
00006508                         10777m NEXT_861: 
00006508  B23C 0000              10778m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000650C  6700 0008              10779m         BEQ     COMPLETE_861  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006510  5301                   10780m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006512  1819                   10781m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006514  60CE                   10782m         BRA     LOOP_861      ; BEGIN LOOP AGAIN
00006516                         10783m 
00006516                         10784m COMPLETE_861:  ; OPCODE HAS BEEN VERIFIED
00006516                         10785m         ENDM
00006516  43F8 00AB              10786          LEA     oBLT, A1     
0000651A  103C 000E              10787          MOVE.B  #14,D0          
0000651E  4E4F                   10788          TRAP    #15
00006520                         10789m         space
00006520  43F8 00D8              10790m         LEA     OBLANK, A1
00006524  103C 000E              10791m         MOVE.B  #14,D0          
00006528  4E4F                   10792m         TRAP    #15
0000652A                         10793m         ENDM
0000652A                         10794m         printSign
0000652A  103C 0006              10795m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000652E  323C 0024              10796m         MOVE.W  #36, D1     ; AN = SIGN
00006532  4E4F                   10797m         TRAP    #15         ; OUTPUT = SIGN
00006534                         10798m         ENDM
00006534                         10799m         printBranch     (A2)
00006534  3612                   10800m         MOVE.W (A2), D3
00006536  4241                   10801m         CLR     D1
00006538  D203                   10802m         ADD.B   D3, D1
0000653A                         10803mm         CONVERTATOH D1
0000653A  0C01 0039              10804mm         CMPI.B  #$39, D1
0000653E  6E00 000A              10805mm         BGT     ALPHA_865
00006542  0401 0030              10806mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00006546  6000 0006              10807mm         BRA     DONE_865
0000654A  0401 0037              10808mm ALPHA_865: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
0000654E  4E71                   10809mm DONE_865: NOP
00006550                         10810mm         ENDM
00006550  103C 0003              10811m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006554  4E4F                   10812m         TRAP    #15
00006556                         10813m         ENDM        
00006556  4E75                   10814          RTS                 ; Return from decodeBLT subroutine
00006558                         10815  
00006558                         10816  
00006558                         10817  ; ------------------------------------------------------------
00006558                         10818  ; 14. "decodeJSR" subroutine
00006558                         10819  ; AUTHOR
00006558                         10820  ;
00006558                         10821  ; TODO: DESCRIPTION
00006558                         10822  ; ------------------------------------------------------------
00006558                         10823  decodeJSR:
00006558                         10824m         verifyOpcode    pJSR, (A2)
00006558  43F8 0239              10825m         LEA     PJSR, A1      ; INPUT PATTERN STRING
0000655C  3612                   10826m         MOVE.W  (A2), D3      ; INPUT VALUE
0000655E  123C 000F              10827m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006562                         10828m         
00006562                         10829m LOOP_866: 
00006562  0C11 0030              10830m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006566  6700 000E              10831m         BEQ     CHECKFOR0_866
0000656A  0C11 0031              10832m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
0000656E  6700 0010              10833m         BEQ     CHECKFOR1_866
00006572  6000 0012              10834m         BRA     NEXT_866      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006576                         10835m         
00006576                         10836m CHECKFOR0_866: 
00006576  0303                   10837m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006578  6600 06C6              10838m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
0000657C  6000 0008              10839m         BRA     NEXT_866
00006580                         10840m 
00006580                         10841m CHECKFOR1_866:
00006580  0303                   10842m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006582  6700 06BC              10843m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006586                         10844m 
00006586                         10845m NEXT_866: 
00006586  B23C 0000              10846m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
0000658A  6700 0008              10847m         BEQ     COMPLETE_866  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
0000658E  5301                   10848m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006590  1819                   10849m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006592  60CE                   10850m         BRA     LOOP_866      ; BEGIN LOOP AGAIN
00006594                         10851m 
00006594                         10852m COMPLETE_866:  ; OPCODE HAS BEEN VERIFIED
00006594                         10853m         ENDM
00006594  43F8 00AF              10854          LEA     oJSR, A1     
00006598  103C 000E              10855          MOVE.B  #14,D0          
0000659C  4E4F                   10856          TRAP    #15
0000659E                         10857          
0000659E  43F8 00D8              10858          LEA     oBlank, A1     
000065A2  103C 000E              10859          MOVE.B  #14,D0          
000065A6  4E4F                   10860          TRAP    #15
000065A8                         10861  
000065A8                         10862m         prepareAdrMode  #$1, (A2)
000065A8  3C3C 0001              10863m         MOVE.W  #$1, D6      ; INPUT VALUE
000065AC  3212                   10864m         MOVE.W  (A2), D1
000065AE  BC3C 0001              10865m         CMP.B   #$01, D6
000065B2  6700 000C              10866m         BEQ     ADRSOURCE_867    
000065B6                         10867m ADRDEST_867:
000065B6  EF49                   10868m         LSL     #$07, D1   ; IF 0 IS PASSED, BITS LEFT ARE 6 TO 8
000065B8  E049                   10869m         LSR     #$08, D1
000065BA  EA49                   10870m         LSR     #$05, D1
000065BC  6000 000A              10871m         BRA     COMPLETE_867 
000065C0                         10872m ADRSOURCE_867:                
000065C0  E149                   10873m         LSL     #$08, D1    ; IF 1 IS PASSED, BITS LEFT ARE 3 TO 5
000065C2  E549                   10874m         LSL     #$02, D1
000065C4  E049                   10875m         LSR     #$08, D1
000065C6  EA49                   10876m         LSR     #$05, D1
000065C8                         10877m COMPLETE_867:  ; OPCODE HAS BEEN VERIFIED
000065C8                         10878m         ENDM        
000065C8                         10879m         decodeAdrMode   (A2), D1        
000065C8  3612                   10880m         MOVE.W  (A2), D3      ; HOLDS FULL OPCODE
000065CA  3201                   10881m         MOVE.W  D1, D1      ; HOLDS JUST OPMODE
000065CC                         10882m 
000065CC  B23C 0001              10883m         CMP.B   #$01, D1
000065D0  6700 0066              10884m         BEQ     ADRREGDIRECT_868    
000065D4  B23C 0002              10885m         CMP.B   #$02, D1
000065D8  6700 00A0              10886m         BEQ     ADRREGINDIRECT_868  
000065DC  B23C 0003              10887m         CMP.B   #$03, D1
000065E0  6700 0102              10888m         BEQ     ADRREGPOSTINC_868  
000065E4  B23C 0004              10889m         CMP.B   #$04, D1
000065E8  6700 0178              10890m         BEQ     ADRREGPREDEC_868
000065EC  B23C 0007              10891m         CMP.B   #$07, D1
000065F0  6700 01EE              10892m         BEQ     ADRABSOLUTE_868    
000065F4                         10893m         
000065F4                         10894m DATAREGDIRECT_868: 
000065F4  BC3C 0001              10895m         CMP.B   #$01, D6
000065F8  6700 001E              10896m         BEQ     DATAREGDIRECTSRC_868   
000065FC                         10897m DATAREGDIRECTDEST_868: 
000065FC                         10898mm         PRINTDNDEST D3 
000065FC  3203                   10899mm         MOVE.W  D3, D1      ; BITS 9 TO 11
000065FE  E949                   10900mm         LSL     #$04, D1
00006600  E049                   10901mm         LSR     #$08, D1
00006602  EA49                   10902mm         LSR     #$05, D1
00006604  43F8 00C7              10903mm         LEA     ODN, A1     
00006608  103C 000E              10904mm         MOVE.B  #14,D0          
0000660C  4E4F                   10905mm         TRAP    #15
0000660E  103C 0003              10906mm         MOVE.B  #3,D0          
00006612  4E4F                   10907mm         TRAP    #15
00006614                         10908mm         ENDM
00006614  6000 0562              10909m         BRA     COMPLETE_868 
00006618                         10910m DATAREGDIRECTSRC_868: 
00006618                         10911mm         PRINTDNSRC D3 
00006618  4281                   10912mm         CLR.L   D1
0000661A  3203                   10913mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000661C  E149                   10914mm         LSL     #$08, D1
0000661E  EB49                   10915mm         LSL     #$05, D1
00006620  E049                   10916mm         LSR     #$08, D1
00006622  EA49                   10917mm         LSR     #$05, D1
00006624  43F8 00C7              10918mm         LEA     ODN, A1     
00006628  103C 000E              10919mm         MOVE.B  #14,D0          
0000662C  4E4F                   10920mm         TRAP    #15
0000662E  103C 0003              10921mm         MOVE.B  #3,D0          
00006632  4E4F                   10922mm         TRAP    #15
00006634                         10923mm         ENDM
00006634  6000 0542              10924m         BRA     COMPLETE_868   
00006638                         10925m         
00006638                         10926m ADRREGDIRECT_868: 
00006638  BC3C 0001              10927m         CMP.B   #$01, D6
0000663C  6700 001E              10928m         BEQ     ADRREGDIRECTSRC_868   
00006640                         10929m ADRREGDIRECTDEST_868:
00006640                         10930mm         PRINTANDEST D3
00006640  3203                   10931mm         MOVE.W  D3, D1
00006642  E949                   10932mm         LSL     #$04, D1
00006644  E049                   10933mm         LSR     #$08, D1
00006646  EA49                   10934mm         LSR     #$05, D1
00006648  43F8 00C9              10935mm         LEA     OAN, A1     
0000664C  103C 000E              10936mm         MOVE.B  #14,D0          
00006650  4E4F                   10937mm         TRAP    #15
00006652  103C 0003              10938mm         MOVE.B  #3,D0          
00006656  4E4F                   10939mm         TRAP    #15
00006658                         10940mm         ENDM
00006658  6000 051E              10941m         BRA     COMPLETE_868   
0000665C                         10942m ADRREGDIRECTSRC_868:
0000665C                         10943mm         PRINTANSRC D3
0000665C  3203                   10944mm         MOVE.W  D3, D1   ; BITS 0 TO 2
0000665E  E149                   10945mm         LSL     #$08, D1
00006660  EB49                   10946mm         LSL     #$05, D1
00006662  E049                   10947mm         LSR     #$08, D1
00006664  EA49                   10948mm         LSR     #$05, D1
00006666  43F8 00C9              10949mm         LEA     OAN, A1     
0000666A  103C 000E              10950mm         MOVE.B  #14,D0          
0000666E  4E4F                   10951mm         TRAP    #15
00006670  103C 0003              10952mm         MOVE.B  #3,D0          
00006674  4E4F                   10953mm         TRAP    #15
00006676                         10954mm         ENDM
00006676  6000 0500              10955m         BRA     COMPLETE_868   
0000667A                         10956m        
0000667A                         10957m ADRREGINDIRECT_868:   
0000667A  BC3C 0001              10958m         CMP.B   #$01, D6
0000667E  6700 0032              10959m         BEQ     ADRREGINDIRECTSRC_868   
00006682                         10960m ADRREGINDIRECTDEST_868:
00006682                         10961mm         PRINTLB
00006682  43F8 00CB              10962mm         LEA     OLB, A1     
00006686  103C 000E              10963mm         MOVE.B  #14,D0          
0000668A  4E4F                   10964mm         TRAP    #15
0000668C                         10965mm         ENDM
0000668C                         10966mm         PRINTANDEST D3  
0000668C  3203                   10967mm         MOVE.W  D3, D1
0000668E  E949                   10968mm         LSL     #$04, D1
00006690  E049                   10969mm         LSR     #$08, D1
00006692  EA49                   10970mm         LSR     #$05, D1
00006694  43F8 00C9              10971mm         LEA     OAN, A1     
00006698  103C 000E              10972mm         MOVE.B  #14,D0          
0000669C  4E4F                   10973mm         TRAP    #15
0000669E  103C 0003              10974mm         MOVE.B  #3,D0          
000066A2  4E4F                   10975mm         TRAP    #15
000066A4                         10976mm         ENDM
000066A4                         10977mm         PRINTRB
000066A4  43F8 00CD              10978mm         LEA     ORB, A1     
000066A8  103C 000E              10979mm         MOVE.B  #14,D0          
000066AC  4E4F                   10980mm         TRAP    #15
000066AE                         10981mm         ENDM
000066AE  6000 04C8              10982m         BRA     COMPLETE_868     
000066B2                         10983m ADRREGINDIRECTSRC_868:   
000066B2                         10984mm         PRINTLB
000066B2  43F8 00CB              10985mm         LEA     OLB, A1     
000066B6  103C 000E              10986mm         MOVE.B  #14,D0          
000066BA  4E4F                   10987mm         TRAP    #15
000066BC                         10988mm         ENDM
000066BC                         10989mm         PRINTANSRC D3  
000066BC  3203                   10990mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000066BE  E149                   10991mm         LSL     #$08, D1
000066C0  EB49                   10992mm         LSL     #$05, D1
000066C2  E049                   10993mm         LSR     #$08, D1
000066C4  EA49                   10994mm         LSR     #$05, D1
000066C6  43F8 00C9              10995mm         LEA     OAN, A1     
000066CA  103C 000E              10996mm         MOVE.B  #14,D0          
000066CE  4E4F                   10997mm         TRAP    #15
000066D0  103C 0003              10998mm         MOVE.B  #3,D0          
000066D4  4E4F                   10999mm         TRAP    #15
000066D6                         11000mm         ENDM
000066D6                         11001mm         PRINTRB
000066D6  43F8 00CD              11002mm         LEA     ORB, A1     
000066DA  103C 000E              11003mm         MOVE.B  #14,D0          
000066DE  4E4F                   11004mm         TRAP    #15
000066E0                         11005mm         ENDM
000066E0  6000 0496              11006m         BRA     COMPLETE_868   
000066E4                         11007m         
000066E4                         11008m ADRREGPOSTINC_868:   
000066E4  BC3C 0001              11009m         CMP.B   #$01, D6
000066E8  6700 003C              11010m         BEQ     ADRREGPOSTINCSRC_868   
000066EC                         11011m ADRREGPOSTINCDEST_868: 
000066EC                         11012mm         PRINTLB
000066EC  43F8 00CB              11013mm         LEA     OLB, A1     
000066F0  103C 000E              11014mm         MOVE.B  #14,D0          
000066F4  4E4F                   11015mm         TRAP    #15
000066F6                         11016mm         ENDM
000066F6                         11017mm         PRINTANDEST D3  
000066F6  3203                   11018mm         MOVE.W  D3, D1
000066F8  E949                   11019mm         LSL     #$04, D1
000066FA  E049                   11020mm         LSR     #$08, D1
000066FC  EA49                   11021mm         LSR     #$05, D1
000066FE  43F8 00C9              11022mm         LEA     OAN, A1     
00006702  103C 000E              11023mm         MOVE.B  #14,D0          
00006706  4E4F                   11024mm         TRAP    #15
00006708  103C 0003              11025mm         MOVE.B  #3,D0          
0000670C  4E4F                   11026mm         TRAP    #15
0000670E                         11027mm         ENDM
0000670E                         11028mm         PRINTRB
0000670E  43F8 00CD              11029mm         LEA     ORB, A1     
00006712  103C 000E              11030mm         MOVE.B  #14,D0          
00006716  4E4F                   11031mm         TRAP    #15
00006718                         11032mm         ENDM
00006718                         11033mm         PRINTPI
00006718  43F8 00D4              11034mm         LEA     OPSTINC, A1     
0000671C  103C 000E              11035mm         MOVE.B  #14,D0          
00006720  4E4F                   11036mm         TRAP    #15
00006722                         11037mm         ENDM
00006722  6000 0454              11038m         BRA     COMPLETE_868  
00006726                         11039m ADRREGPOSTINCSRC_868:           
00006726                         11040mm         PRINTLB
00006726  43F8 00CB              11041mm         LEA     OLB, A1     
0000672A  103C 000E              11042mm         MOVE.B  #14,D0          
0000672E  4E4F                   11043mm         TRAP    #15
00006730                         11044mm         ENDM
00006730                         11045mm         PRINTANSRC D3  
00006730  3203                   11046mm         MOVE.W  D3, D1   ; BITS 0 TO 2
00006732  E149                   11047mm         LSL     #$08, D1
00006734  EB49                   11048mm         LSL     #$05, D1
00006736  E049                   11049mm         LSR     #$08, D1
00006738  EA49                   11050mm         LSR     #$05, D1
0000673A  43F8 00C9              11051mm         LEA     OAN, A1     
0000673E  103C 000E              11052mm         MOVE.B  #14,D0          
00006742  4E4F                   11053mm         TRAP    #15
00006744  103C 0003              11054mm         MOVE.B  #3,D0          
00006748  4E4F                   11055mm         TRAP    #15
0000674A                         11056mm         ENDM
0000674A                         11057mm         PRINTRB
0000674A  43F8 00CD              11058mm         LEA     ORB, A1     
0000674E  103C 000E              11059mm         MOVE.B  #14,D0          
00006752  4E4F                   11060mm         TRAP    #15
00006754                         11061mm         ENDM
00006754                         11062mm         PRINTPI
00006754  43F8 00D4              11063mm         LEA     OPSTINC, A1     
00006758  103C 000E              11064mm         MOVE.B  #14,D0          
0000675C  4E4F                   11065mm         TRAP    #15
0000675E                         11066mm         ENDM
0000675E  6000 0418              11067m         BRA     COMPLETE_868  
00006762                         11068m ADRREGPREDEC_868: 
00006762  BC3C 0001              11069m         CMP.B   #$01, D6
00006766  6700 003C              11070m         BEQ     ADRREGPREDECSRC_868   
0000676A                         11071m ADRREGPREDECDEST_868:
0000676A                         11072mm         PRINTPD  
0000676A  43F8 00D2              11073mm         LEA     OPREDEC, A1     
0000676E  103C 000E              11074mm         MOVE.B  #14,D0          
00006772  4E4F                   11075mm         TRAP    #15
00006774                         11076mm         ENDM
00006774                         11077mm         PRINTLB
00006774  43F8 00CB              11078mm         LEA     OLB, A1     
00006778  103C 000E              11079mm         MOVE.B  #14,D0          
0000677C  4E4F                   11080mm         TRAP    #15
0000677E                         11081mm         ENDM
0000677E                         11082mm         PRINTANDEST D3  
0000677E  3203                   11083mm         MOVE.W  D3, D1
00006780  E949                   11084mm         LSL     #$04, D1
00006782  E049                   11085mm         LSR     #$08, D1
00006784  EA49                   11086mm         LSR     #$05, D1
00006786  43F8 00C9              11087mm         LEA     OAN, A1     
0000678A  103C 000E              11088mm         MOVE.B  #14,D0          
0000678E  4E4F                   11089mm         TRAP    #15
00006790  103C 0003              11090mm         MOVE.B  #3,D0          
00006794  4E4F                   11091mm         TRAP    #15
00006796                         11092mm         ENDM
00006796                         11093mm         PRINTRB
00006796  43F8 00CD              11094mm         LEA     ORB, A1     
0000679A  103C 000E              11095mm         MOVE.B  #14,D0          
0000679E  4E4F                   11096mm         TRAP    #15
000067A0                         11097mm         ENDM
000067A0  6000 03D6              11098m         BRA     COMPLETE_868   
000067A4                         11099m ADRREGPREDECSRC_868: 
000067A4                         11100mm         PRINTPD  
000067A4  43F8 00D2              11101mm         LEA     OPREDEC, A1     
000067A8  103C 000E              11102mm         MOVE.B  #14,D0          
000067AC  4E4F                   11103mm         TRAP    #15
000067AE                         11104mm         ENDM
000067AE                         11105mm         PRINTLB
000067AE  43F8 00CB              11106mm         LEA     OLB, A1     
000067B2  103C 000E              11107mm         MOVE.B  #14,D0          
000067B6  4E4F                   11108mm         TRAP    #15
000067B8                         11109mm         ENDM
000067B8                         11110mm         PRINTANSRC D3  
000067B8  3203                   11111mm         MOVE.W  D3, D1   ; BITS 0 TO 2
000067BA  E149                   11112mm         LSL     #$08, D1
000067BC  EB49                   11113mm         LSL     #$05, D1
000067BE  E049                   11114mm         LSR     #$08, D1
000067C0  EA49                   11115mm         LSR     #$05, D1
000067C2  43F8 00C9              11116mm         LEA     OAN, A1     
000067C6  103C 000E              11117mm         MOVE.B  #14,D0          
000067CA  4E4F                   11118mm         TRAP    #15
000067CC  103C 0003              11119mm         MOVE.B  #3,D0          
000067D0  4E4F                   11120mm         TRAP    #15
000067D2                         11121mm         ENDM
000067D2                         11122mm         PRINTRB
000067D2  43F8 00CD              11123mm         LEA     ORB, A1     
000067D6  103C 000E              11124mm         MOVE.B  #14,D0          
000067DA  4E4F                   11125mm         TRAP    #15
000067DC                         11126mm         ENDM
000067DC  6000 039A              11127m         BRA     COMPLETE_868
000067E0                         11128m        
000067E0                         11129m ADRABSOLUTE_868:
000067E0  BC3C 0001              11130m         CMP.B   #$01, D6
000067E4  6600 0018              11131m         BNE     ADRABSOLUTEDST_868 
000067E8                         11132m         
000067E8  3A03                   11133m         MOVE.W  D3, D5
000067EA  0803 0002              11134m         BTST    #2, D3
000067EE  6600 0024              11135m         BNE     ADRIMMEDIATE_868
000067F2  0803 0000              11136m         BTST    #0, D3
000067F6  6600 0270              11137m         BNE     ADRABSOLUTEL_868
000067FA  6000 01DA              11138m         BRA     ADRABSOLUTEW_868
000067FE                         11139m ADRABSOLUTEDST_868:
000067FE  3A03                   11140m         MOVE.W  D3, D5
00006800  0803 000B              11141m         BTST    #$B, D3
00006804  6600 000E              11142m         BNE     ADRIMMEDIATE_868
00006808  0803 0009              11143m         BTST    #$09, D3
0000680C  6600 025A              11144m         BNE     ADRABSOLUTEL_868
00006810  6000 01C4              11145m         BRA     ADRABSOLUTEW_868
00006814                         11146m ADRIMMEDIATE_868:
00006814  BE3C 0001              11147m         CMP.B   #1, D7
00006818  6700 009E              11148m         BEQ     ADRIMMEDIATEL_868
0000681C                         11149m ADRIMMEDIATEW_868:
0000681C  361A                   11150m         MOVE.W  (A2)+, D3
0000681E                         11151mm         PRINTHASH
0000681E  103C 0006              11152mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006822  323C 0023              11153mm         MOVE.W  #35, D1     ; AN = SIGN
00006826  4E4F                   11154mm         TRAP    #15         ; OUTPUT = SIGN
00006828                         11155mm         ENDM
00006828                         11156mm         PRINTSIGN
00006828  103C 0006              11157mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
0000682C  323C 0024              11158mm         MOVE.W  #36, D1     ; AN = SIGN
00006830  4E4F                   11159mm         TRAP    #15         ; OUTPUT = SIGN
00006832                         11160mm         ENDM
00006832                         11161mm         ADROUT
00006832  3212                   11162mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006834  E049                   11163mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006836  E849                   11164mm         LSR.W   #4, D1      
00006838                         11165mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006838  0C01 0009              11166mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000683C  6E00 000A              11167mmm         BGT     ALPHA_898
00006840  0601 0030              11168mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006844  6000 0006              11169mmm         BRA     DONE_898
00006848  0601 0037              11170mmm ALPHA_898: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000684C  4E71                   11171mmm DONE_898: NOP
0000684E                         11172mmm         ENDM
0000684E  4E4F                   11173mm         TRAP    #15         ; EXECUTE OUTPUT
00006850                         11174mm         
00006850  3212                   11175mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006852  E949                   11176mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006854  E049                   11177mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006856  E849                   11178mm         LSR.W   #4, D1      
00006858                         11179mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006858  0C01 0009              11180mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000685C  6E00 000A              11181mmm         BGT     ALPHA_899
00006860  0601 0030              11182mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006864  6000 0006              11183mmm         BRA     DONE_899
00006868  0601 0037              11184mmm ALPHA_899: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000686C  4E71                   11185mmm DONE_899: NOP
0000686E                         11186mmm         ENDM
0000686E  4E4F                   11187mm         TRAP    #15         ; EXECUTE OUTPUT
00006870                         11188mm         
00006870  3212                   11189mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006872  E149                   11190mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006874  E049                   11191mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006876  E849                   11192mm         LSR.W   #4, D1      
00006878                         11193mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006878  0C01 0009              11194mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000687C  6E00 000A              11195mmm         BGT     ALPHA_900
00006880  0601 0030              11196mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006884  6000 0006              11197mmm         BRA     DONE_900
00006888  0601 0037              11198mmm ALPHA_900: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000688C  4E71                   11199mmm DONE_900: NOP
0000688E                         11200mmm         ENDM
0000688E  4E4F                   11201mm         TRAP    #15         ; EXECUTE OUTPUT
00006890                         11202mm         
00006890  3212                   11203mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006892  E149                   11204mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006894  E949                   11205mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006896  E049                   11206mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006898  E849                   11207mm         LSR.W   #4, D1      
0000689A                         11208mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
0000689A  0C01 0009              11209mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000689E  6E00 000A              11210mmm         BGT     ALPHA_901
000068A2  0601 0030              11211mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068A6  6000 0006              11212mmm         BRA     DONE_901
000068AA  0601 0037              11213mmm ALPHA_901: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068AE  4E71                   11214mmm DONE_901: NOP
000068B0                         11215mmm         ENDM
000068B0  4E4F                   11216mm         TRAP    #15         ; EXECUTE OUTPUT       
000068B2                         11217mm         ENDM 
000068B2  3605                   11218m         MOVE.W  D5, D3
000068B4  6000 02C2              11219m         BRA     COMPLETE_868
000068B8                         11220m ADRIMMEDIATEL_868:
000068B8  361A                   11221m         MOVE.W  (A2)+, D3
000068BA                         11222mm         PRINTHASH
000068BA  103C 0006              11223mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000068BE  323C 0023              11224mm         MOVE.W  #35, D1     ; AN = SIGN
000068C2  4E4F                   11225mm         TRAP    #15         ; OUTPUT = SIGN
000068C4                         11226mm         ENDM
000068C4                         11227mm         PRINTSIGN
000068C4  103C 0006              11228mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000068C8  323C 0024              11229mm         MOVE.W  #36, D1     ; AN = SIGN
000068CC  4E4F                   11230mm         TRAP    #15         ; OUTPUT = SIGN
000068CE                         11231mm         ENDM
000068CE                         11232mm         ADROUT 
000068CE  3212                   11233mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068D0  E049                   11234mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068D2  E849                   11235mm         LSR.W   #4, D1      
000068D4                         11236mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068D4  0C01 0009              11237mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068D8  6E00 000A              11238mmm         BGT     ALPHA_905
000068DC  0601 0030              11239mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000068E0  6000 0006              11240mmm         BRA     DONE_905
000068E4  0601 0037              11241mmm ALPHA_905: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000068E8  4E71                   11242mmm DONE_905: NOP
000068EA                         11243mmm         ENDM
000068EA  4E4F                   11244mm         TRAP    #15         ; EXECUTE OUTPUT
000068EC                         11245mm         
000068EC  3212                   11246mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000068EE  E949                   11247mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
000068F0  E049                   11248mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000068F2  E849                   11249mm         LSR.W   #4, D1      
000068F4                         11250mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000068F4  0C01 0009              11251mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000068F8  6E00 000A              11252mmm         BGT     ALPHA_906
000068FC  0601 0030              11253mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006900  6000 0006              11254mmm         BRA     DONE_906
00006904  0601 0037              11255mmm ALPHA_906: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006908  4E71                   11256mmm DONE_906: NOP
0000690A                         11257mmm         ENDM
0000690A  4E4F                   11258mm         TRAP    #15         ; EXECUTE OUTPUT
0000690C                         11259mm         
0000690C  3212                   11260mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000690E  E149                   11261mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006910  E049                   11262mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006912  E849                   11263mm         LSR.W   #4, D1      
00006914                         11264mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006914  0C01 0009              11265mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006918  6E00 000A              11266mmm         BGT     ALPHA_907
0000691C  0601 0030              11267mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006920  6000 0006              11268mmm         BRA     DONE_907
00006924  0601 0037              11269mmm ALPHA_907: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006928  4E71                   11270mmm DONE_907: NOP
0000692A                         11271mmm         ENDM
0000692A  4E4F                   11272mm         TRAP    #15         ; EXECUTE OUTPUT
0000692C                         11273mm         
0000692C  3212                   11274mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
0000692E  E149                   11275mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006930  E949                   11276mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006932  E049                   11277mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006934  E849                   11278mm         LSR.W   #4, D1      
00006936                         11279mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006936  0C01 0009              11280mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000693A  6E00 000A              11281mmm         BGT     ALPHA_908
0000693E  0601 0030              11282mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006942  6000 0006              11283mmm         BRA     DONE_908
00006946  0601 0037              11284mmm ALPHA_908: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000694A  4E71                   11285mmm DONE_908: NOP
0000694C                         11286mmm         ENDM
0000694C  4E4F                   11287mm         TRAP    #15         ; EXECUTE OUTPUT       
0000694E                         11288mm         ENDM 
0000694E  361A                   11289m         MOVE.W  (A2)+, D3
00006950                         11290mm         ADROUT
00006950  3212                   11291mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006952  E049                   11292mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006954  E849                   11293mm         LSR.W   #4, D1      
00006956                         11294mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006956  0C01 0009              11295mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000695A  6E00 000A              11296mmm         BGT     ALPHA_910
0000695E  0601 0030              11297mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006962  6000 0006              11298mmm         BRA     DONE_910
00006966  0601 0037              11299mmm ALPHA_910: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000696A  4E71                   11300mmm DONE_910: NOP
0000696C                         11301mmm         ENDM
0000696C  4E4F                   11302mm         TRAP    #15         ; EXECUTE OUTPUT
0000696E                         11303mm         
0000696E  3212                   11304mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006970  E949                   11305mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006972  E049                   11306mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006974  E849                   11307mm         LSR.W   #4, D1      
00006976                         11308mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006976  0C01 0009              11309mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000697A  6E00 000A              11310mmm         BGT     ALPHA_911
0000697E  0601 0030              11311mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006982  6000 0006              11312mmm         BRA     DONE_911
00006986  0601 0037              11313mmm ALPHA_911: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
0000698A  4E71                   11314mmm DONE_911: NOP
0000698C                         11315mmm         ENDM
0000698C  4E4F                   11316mm         TRAP    #15         ; EXECUTE OUTPUT
0000698E                         11317mm         
0000698E  3212                   11318mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006990  E149                   11319mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006992  E049                   11320mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006994  E849                   11321mm         LSR.W   #4, D1      
00006996                         11322mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006996  0C01 0009              11323mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
0000699A  6E00 000A              11324mmm         BGT     ALPHA_912
0000699E  0601 0030              11325mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069A2  6000 0006              11326mmm         BRA     DONE_912
000069A6  0601 0037              11327mmm ALPHA_912: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069AA  4E71                   11328mmm DONE_912: NOP
000069AC                         11329mmm         ENDM
000069AC  4E4F                   11330mm         TRAP    #15         ; EXECUTE OUTPUT
000069AE                         11331mm         
000069AE  3212                   11332mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069B0  E149                   11333mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
000069B2  E949                   11334mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
000069B4  E049                   11335mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069B6  E849                   11336mm         LSR.W   #4, D1      
000069B8                         11337mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069B8  0C01 0009              11338mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069BC  6E00 000A              11339mmm         BGT     ALPHA_913
000069C0  0601 0030              11340mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069C4  6000 0006              11341mmm         BRA     DONE_913
000069C8  0601 0037              11342mmm ALPHA_913: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069CC  4E71                   11343mmm DONE_913: NOP
000069CE                         11344mmm         ENDM
000069CE  4E4F                   11345mm         TRAP    #15         ; EXECUTE OUTPUT       
000069D0                         11346mm         ENDM 
000069D0  3605                   11347m         MOVE.W  D5, D3
000069D2  6000 01A4              11348m         BRA     COMPLETE_868 
000069D6                         11349m ADRABSOLUTEW_868:     
000069D6  361A                   11350m         MOVE.W  (A2)+, D3
000069D8                         11351mm         PRINTSIGN
000069D8  103C 0006              11352mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
000069DC  323C 0024              11353mm         MOVE.W  #36, D1     ; AN = SIGN
000069E0  4E4F                   11354mm         TRAP    #15         ; OUTPUT = SIGN
000069E2                         11355mm         ENDM
000069E2                         11356mm         ADROUT
000069E2  3212                   11357mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
000069E4  E049                   11358mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
000069E6  E849                   11359mm         LSR.W   #4, D1      
000069E8                         11360mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
000069E8  0C01 0009              11361mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
000069EC  6E00 000A              11362mmm         BGT     ALPHA_916
000069F0  0601 0030              11363mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
000069F4  6000 0006              11364mmm         BRA     DONE_916
000069F8  0601 0037              11365mmm ALPHA_916: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
000069FC  4E71                   11366mmm DONE_916: NOP
000069FE                         11367mmm         ENDM
000069FE  4E4F                   11368mm         TRAP    #15         ; EXECUTE OUTPUT
00006A00                         11369mm         
00006A00  3212                   11370mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A02  E949                   11371mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A04  E049                   11372mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A06  E849                   11373mm         LSR.W   #4, D1      
00006A08                         11374mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A08  0C01 0009              11375mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A0C  6E00 000A              11376mmm         BGT     ALPHA_917
00006A10  0601 0030              11377mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A14  6000 0006              11378mmm         BRA     DONE_917
00006A18  0601 0037              11379mmm ALPHA_917: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A1C  4E71                   11380mmm DONE_917: NOP
00006A1E                         11381mmm         ENDM
00006A1E  4E4F                   11382mm         TRAP    #15         ; EXECUTE OUTPUT
00006A20                         11383mm         
00006A20  3212                   11384mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A22  E149                   11385mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A24  E049                   11386mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A26  E849                   11387mm         LSR.W   #4, D1      
00006A28                         11388mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A28  0C01 0009              11389mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A2C  6E00 000A              11390mmm         BGT     ALPHA_918
00006A30  0601 0030              11391mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A34  6000 0006              11392mmm         BRA     DONE_918
00006A38  0601 0037              11393mmm ALPHA_918: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A3C  4E71                   11394mmm DONE_918: NOP
00006A3E                         11395mmm         ENDM
00006A3E  4E4F                   11396mm         TRAP    #15         ; EXECUTE OUTPUT
00006A40                         11397mm         
00006A40  3212                   11398mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A42  E149                   11399mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006A44  E949                   11400mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006A46  E049                   11401mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A48  E849                   11402mm         LSR.W   #4, D1      
00006A4A                         11403mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A4A  0C01 0009              11404mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A4E  6E00 000A              11405mmm         BGT     ALPHA_919
00006A52  0601 0030              11406mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A56  6000 0006              11407mmm         BRA     DONE_919
00006A5A  0601 0037              11408mmm ALPHA_919: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A5E  4E71                   11409mmm DONE_919: NOP
00006A60                         11410mmm         ENDM
00006A60  4E4F                   11411mm         TRAP    #15         ; EXECUTE OUTPUT       
00006A62                         11412mm         ENDM 
00006A62  3605                   11413m         MOVE.W  D5, D3
00006A64  6000 0112              11414m         BRA     COMPLETE_868  
00006A68                         11415m ADRABSOLUTEL_868:  
00006A68  361A                   11416m         MOVE.W  (A2)+, D3
00006A6A                         11417mm         PRINTSIGN
00006A6A  103C 0006              11418mm         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006A6E  323C 0024              11419mm         MOVE.W  #36, D1     ; AN = SIGN
00006A72  4E4F                   11420mm         TRAP    #15         ; OUTPUT = SIGN
00006A74                         11421mm         ENDM
00006A74                         11422mm         ADROUT 
00006A74  3212                   11423mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A76  E049                   11424mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A78  E849                   11425mm         LSR.W   #4, D1      
00006A7A                         11426mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A7A  0C01 0009              11427mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A7E  6E00 000A              11428mmm         BGT     ALPHA_922
00006A82  0601 0030              11429mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006A86  6000 0006              11430mmm         BRA     DONE_922
00006A8A  0601 0037              11431mmm ALPHA_922: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006A8E  4E71                   11432mmm DONE_922: NOP
00006A90                         11433mmm         ENDM
00006A90  4E4F                   11434mm         TRAP    #15         ; EXECUTE OUTPUT
00006A92                         11435mm         
00006A92  3212                   11436mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006A94  E949                   11437mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006A96  E049                   11438mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006A98  E849                   11439mm         LSR.W   #4, D1      
00006A9A                         11440mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006A9A  0C01 0009              11441mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006A9E  6E00 000A              11442mmm         BGT     ALPHA_923
00006AA2  0601 0030              11443mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AA6  6000 0006              11444mmm         BRA     DONE_923
00006AAA  0601 0037              11445mmm ALPHA_923: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AAE  4E71                   11446mmm DONE_923: NOP
00006AB0                         11447mmm         ENDM
00006AB0  4E4F                   11448mm         TRAP    #15         ; EXECUTE OUTPUT
00006AB2                         11449mm         
00006AB2  3212                   11450mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AB4  E149                   11451mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AB6  E049                   11452mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AB8  E849                   11453mm         LSR.W   #4, D1      
00006ABA                         11454mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ABA  0C01 0009              11455mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006ABE  6E00 000A              11456mmm         BGT     ALPHA_924
00006AC2  0601 0030              11457mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AC6  6000 0006              11458mmm         BRA     DONE_924
00006ACA  0601 0037              11459mmm ALPHA_924: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006ACE  4E71                   11460mmm DONE_924: NOP
00006AD0                         11461mmm         ENDM
00006AD0  4E4F                   11462mm         TRAP    #15         ; EXECUTE OUTPUT
00006AD2                         11463mm         
00006AD2  3212                   11464mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AD4  E149                   11465mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006AD6  E949                   11466mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006AD8  E049                   11467mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006ADA  E849                   11468mm         LSR.W   #4, D1      
00006ADC                         11469mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006ADC  0C01 0009              11470mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006AE0  6E00 000A              11471mmm         BGT     ALPHA_925
00006AE4  0601 0030              11472mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006AE8  6000 0006              11473mmm         BRA     DONE_925
00006AEC  0601 0037              11474mmm ALPHA_925: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006AF0  4E71                   11475mmm DONE_925: NOP
00006AF2                         11476mmm         ENDM
00006AF2  4E4F                   11477mm         TRAP    #15         ; EXECUTE OUTPUT       
00006AF4                         11478mm         ENDM 
00006AF4  361A                   11479m         MOVE.W  (A2)+, D3
00006AF6                         11480mm         ADROUT
00006AF6  3212                   11481mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006AF8  E049                   11482mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006AFA  E849                   11483mm         LSR.W   #4, D1      
00006AFC                         11484mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006AFC  0C01 0009              11485mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B00  6E00 000A              11486mmm         BGT     ALPHA_927
00006B04  0601 0030              11487mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B08  6000 0006              11488mmm         BRA     DONE_927
00006B0C  0601 0037              11489mmm ALPHA_927: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B10  4E71                   11490mmm DONE_927: NOP
00006B12                         11491mmm         ENDM
00006B12  4E4F                   11492mm         TRAP    #15         ; EXECUTE OUTPUT
00006B14                         11493mm         
00006B14  3212                   11494mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B16  E949                   11495mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 DIGIT) OF D1
00006B18  E049                   11496mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B1A  E849                   11497mm         LSR.W   #4, D1      
00006B1C                         11498mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B1C  0C01 0009              11499mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B20  6E00 000A              11500mmm         BGT     ALPHA_928
00006B24  0601 0030              11501mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B28  6000 0006              11502mmm         BRA     DONE_928
00006B2C  0601 0037              11503mmm ALPHA_928: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B30  4E71                   11504mmm DONE_928: NOP
00006B32                         11505mmm         ENDM
00006B32  4E4F                   11506mm         TRAP    #15         ; EXECUTE OUTPUT
00006B34                         11507mm         
00006B34  3212                   11508mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B36  E149                   11509mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B38  E049                   11510mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B3A  E849                   11511mm         LSR.W   #4, D1      
00006B3C                         11512mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B3C  0C01 0009              11513mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B40  6E00 000A              11514mmm         BGT     ALPHA_929
00006B44  0601 0030              11515mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B48  6000 0006              11516mmm         BRA     DONE_929
00006B4C  0601 0037              11517mmm ALPHA_929: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B50  4E71                   11518mmm DONE_929: NOP
00006B52                         11519mmm         ENDM
00006B52  4E4F                   11520mm         TRAP    #15         ; EXECUTE OUTPUT
00006B54                         11521mm         
00006B54  3212                   11522mm         MOVE.W  (A2), D1    ; MOVE A2 INTO D1
00006B56  E149                   11523mm         LSL.W   #8, D1      ; REMOVE THE FIRST 8 BITS (2 DIGITS) OF D1
00006B58  E949                   11524mm         LSL.W   #4, D1      ; REMOVE THE FIRST 4 BITS (1 MORE DIGIT) OF D1
00006B5A  E049                   11525mm         LSR.W   #8, D1      ; GET THE FIRST HEX DIGIT OF D1
00006B5C  E849                   11526mm         LSR.W   #4, D1      
00006B5E                         11527mmm         CONVERTHTOA D1      ; CONVERT D1 TO A CHARACTER
00006B5E  0C01 0009              11528mmm         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006B62  6E00 000A              11529mmm         BGT     ALPHA_930
00006B66  0601 0030              11530mmm         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006B6A  6000 0006              11531mmm         BRA     DONE_930
00006B6E  0601 0037              11532mmm ALPHA_930: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006B72  4E71                   11533mmm DONE_930: NOP
00006B74                         11534mmm         ENDM
00006B74  4E4F                   11535mm         TRAP    #15         ; EXECUTE OUTPUT       
00006B76                         11536mm         ENDM 
00006B76  3605                   11537m         MOVE.W  D5, D3
00006B78                         11538m 
00006B78                         11539m COMPLETE_868:  ; OPCODE HAS BEEN VERIFIED
00006B78                         11540m         ENDM
00006B78  4E75                   11541          RTS                 ; Return from decodeJSR subroutine
00006B7A                         11542  
00006B7A                         11543  
00006B7A                         11544  ; ------------------------------------------------------------
00006B7A                         11545  ; 15. "decodeRTS" subroutine
00006B7A                         11546  ; AUTHOR
00006B7A                         11547  ;
00006B7A                         11548  ; TODO: DESCRIPTION
00006B7A                         11549  ; ------------------------------------------------------------
00006B7A                         11550  decodeRTS:
00006B7A                         11551m         verifyOpcode    pRTS, (A2)
00006B7A  43F8 024A              11552m         LEA     PRTS, A1      ; INPUT PATTERN STRING
00006B7E  3612                   11553m         MOVE.W  (A2), D3      ; INPUT VALUE
00006B80  123C 000F              11554m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006B84                         11555m         
00006B84                         11556m LOOP_931: 
00006B84  0C11 0030              11557m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006B88  6700 000E              11558m         BEQ     CHECKFOR0_931
00006B8C  0C11 0031              11559m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006B90  6700 0010              11560m         BEQ     CHECKFOR1_931
00006B94  6000 0012              11561m         BRA     NEXT_931      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006B98                         11562m         
00006B98                         11563m CHECKFOR0_931: 
00006B98  0303                   11564m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006B9A  6600 00A4              11565m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006B9E  6000 0008              11566m         BRA     NEXT_931
00006BA2                         11567m 
00006BA2                         11568m CHECKFOR1_931:
00006BA2  0303                   11569m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006BA4  6700 009A              11570m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006BA8                         11571m 
00006BA8                         11572m NEXT_931: 
00006BA8  B23C 0000              11573m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006BAC  6700 0008              11574m         BEQ     COMPLETE_931  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006BB0  5301                   11575m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006BB2  1819                   11576m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006BB4  60CE                   11577m         BRA     LOOP_931      ; BEGIN LOOP AGAIN
00006BB6                         11578m 
00006BB6                         11579m COMPLETE_931:  ; OPCODE HAS BEEN VERIFIED
00006BB6                         11580m         ENDM
00006BB6  43F8 00B3              11581          LEA     oRTS, A1     
00006BBA  103C 000E              11582          MOVE.B  #14,D0          
00006BBE  4E4F                   11583          TRAP    #15
00006BC0  4E75                   11584          RTS                 ; Return from decodeRTS subroutine
00006BC2                         11585  
00006BC2                         11586  
00006BC2                         11587  ; ------------------------------------------------------------
00006BC2                         11588  ; 16. "decodeBRA" subroutine
00006BC2                         11589  ; AUTHOR
00006BC2                         11590  ;
00006BC2                         11591  ; TODO: DESCRIPTION
00006BC2                         11592  ; ------------------------------------------------------------
00006BC2                         11593  decodeBRA:
00006BC2                         11594m         verifyOpcode    pBRA, (A2)
00006BC2  43F8 025B              11595m         LEA     PBRA, A1      ; INPUT PATTERN STRING
00006BC6  3612                   11596m         MOVE.W  (A2), D3      ; INPUT VALUE
00006BC8  123C 000F              11597m         MOVE.B  #15, D1     ; COUNTER TRACKING THE BIT POSITION OF D3
00006BCC                         11598m         
00006BCC                         11599m LOOP_932: 
00006BCC  0C11 0030              11600m         CMP.B   #$30, (A1)  ; CHECK IF THE TEMPLATE WANTS A 0
00006BD0  6700 000E              11601m         BEQ     CHECKFOR0_932
00006BD4  0C11 0031              11602m         CMP.B   #$31, (A1)  ; CHECK IF THE TEMPLATE WANTS A 1
00006BD8  6700 0010              11603m         BEQ     CHECKFOR1_932
00006BDC  6000 0012              11604m         BRA     NEXT_932      ; TEMPLATE HAS A WILDCARD, GO TO NEXT ITERATION
00006BE0                         11605m         
00006BE0                         11606m CHECKFOR0_932: 
00006BE0  0303                   11607m         BTST    D1, D3      ; CHECK IF CONTAINS 0
00006BE2  6600 005C              11608m         BNE     OUTPUTDATA  ; MISSING A 0 -> NOT A VALID OPCODE
00006BE6  6000 0008              11609m         BRA     NEXT_932
00006BEA                         11610m 
00006BEA                         11611m CHECKFOR1_932:
00006BEA  0303                   11612m         BTST    D1, D3      ; CHECK IF CONTAINS 1
00006BEC  6700 0052              11613m         BEQ     OUTPUTDATA  ; MISSING A 1 -> NOT A VALID OPCODE
00006BF0                         11614m 
00006BF0                         11615m NEXT_932: 
00006BF0  B23C 0000              11616m         CMP.B   #0, D1      ; COMPARE BIT COUNTER TO 0
00006BF4  6700 0008              11617m         BEQ     COMPLETE_932  ; BRANCH TO COMPLETE IF BIT COUNTER REACHED 0
00006BF8  5301                   11618m         SUB.B   #1, D1      ; CONTINUING LOOP -> DECREMENT BIT COUNTER
00006BFA  1819                   11619m         MOVE.B  (A1)+, D4   ; MOVE A1 TO THE NEXT POINTER (D3 IRRELEVANT)
00006BFC  60CE                   11620m         BRA     LOOP_932      ; BEGIN LOOP AGAIN
00006BFE                         11621m 
00006BFE                         11622m COMPLETE_932:  ; OPCODE HAS BEEN VERIFIED
00006BFE                         11623m         ENDM
00006BFE  43F8 00B7              11624          LEA     oBRA, A1     
00006C02  103C 000E              11625          MOVE.B  #14,D0          
00006C06  4E4F                   11626          TRAP    #15
00006C08                         11627m         space
00006C08  43F8 00D8              11628m         LEA     OBLANK, A1
00006C0C  103C 000E              11629m         MOVE.B  #14,D0          
00006C10  4E4F                   11630m         TRAP    #15
00006C12                         11631m         ENDM
00006C12                         11632m         printSign
00006C12  103C 0006              11633m         MOVE.B  #6, D0      ; PREPARE TRAP 15 FOR OUTPUTTING A CHARACTER IN D1
00006C16  323C 0024              11634m         MOVE.W  #36, D1     ; AN = SIGN
00006C1A  4E4F                   11635m         TRAP    #15         ; OUTPUT = SIGN
00006C1C                         11636m         ENDM
00006C1C                         11637m         printBranch     (A2)
00006C1C  3612                   11638m         MOVE.W (A2), D3
00006C1E  4241                   11639m         CLR     D1
00006C20  D203                   11640m         ADD.B   D3, D1
00006C22                         11641mm         CONVERTATOH D1
00006C22  0C01 0039              11642mm         CMPI.B  #$39, D1
00006C26  6E00 000A              11643mm         BGT     ALPHA_936
00006C2A  0401 0030              11644mm         SUBI.B  #$30, D1    ; SUBTRACT 30 TO CONVERT DIGIT CHAR TO HEX
00006C2E  6000 0006              11645mm         BRA     DONE_936
00006C32  0401 0037              11646mm ALPHA_936: SUBI.B #$37, D1    ; SUBTRACT 37 TO CONVERT A-F CHAR TO HEX
00006C36  4E71                   11647mm DONE_936: NOP
00006C38                         11648mm         ENDM
00006C38  103C 0003              11649m         MOVE.B  #3,D0       ; PRINT AND END MACRO  
00006C3C  4E4F                   11650m         TRAP    #15
00006C3E                         11651m         ENDM        
00006C3E  4E75                   11652          RTS                 ; Return from decodeBRA subroutine
00006C40                         11653  
00006C40                         11654  
00006C40                         11655  
00006C40                         11656  
00006C40                         11657  ; ========================================================================
00006C40                         11658  ; Generic Helper Functions
00006C40                         11659  ; 
00006C40                         11660  ; Set of subroutines which do various tasks which are repeated frequently.
00006C40                         11661  ; Each helper function should be commented with required input and output.
00006C40                         11662  ; 
00006C40                         11663  ; If input is required, request through D0, D1, etc
00006C40                         11664  ; Return using D0
00006C40                         11665  ; ========================================================================
00006C40                         11666  
00006C40                         11667  ; ------------------------------------------------------------
00006C40                         11668  ; outputData
00006C40                         11669  ; Jonathan
00006C40                         11670  ;
00006C40                         11671  ; Converts the hex in A2 to ASCII and outputs it, then increments A2.
00006C40                         11672  ; ------------------------------------------------------------
00006C40                         11673  outputData:
00006C40  103C 0006              11674          MOVE.B  #6, D0      ; Prepare TRAP 15 for outputting a character in D1
00006C44  323C 003D              11675          MOVE.W  #61, D1     ; An = sign
00006C48  4E4F                   11676          TRAP    #15         ; Output = sign
00006C4A                         11677          
00006C4A  3212                   11678          MOVE.W  (A2), D1    ; Move A2 into D1
00006C4C  E049                   11679          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C4E  E849                   11680          LSR.W   #4, D1      
00006C50                         11681m         ConvertHtoA D1      ; Convert D1 to a character
00006C50  0C01 0009              11682m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C54  6E00 000A              11683m         BGT     ALPHA_937
00006C58  0601 0030              11684m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C5C  6000 0006              11685m         BRA     DONE_937
00006C60  0601 0037              11686m ALPHA_937: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C64  4E71                   11687m DONE_937: NOP
00006C66                         11688m         ENDM
00006C66  4E4F                   11689          TRAP    #15         ; Execute output
00006C68                         11690          
00006C68  3212                   11691          MOVE.W  (A2), D1    ; Move A2 into D1
00006C6A  E949                   11692          LSL.W   #4, D1      ; Remove the first 4 bits (1 digit) of D1
00006C6C  E049                   11693          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C6E  E849                   11694          LSR.W   #4, D1      
00006C70                         11695m         ConvertHtoA D1      ; Convert D1 to a character
00006C70  0C01 0009              11696m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C74  6E00 000A              11697m         BGT     ALPHA_938
00006C78  0601 0030              11698m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C7C  6000 0006              11699m         BRA     DONE_938
00006C80  0601 0037              11700m ALPHA_938: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006C84  4E71                   11701m DONE_938: NOP
00006C86                         11702m         ENDM
00006C86  4E4F                   11703          TRAP    #15         ; Execute output
00006C88                         11704          
00006C88  3212                   11705          MOVE.W  (A2), D1    ; Move A2 into D1
00006C8A  E149                   11706          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006C8C  E049                   11707          LSR.W   #8, D1      ; Get the first hex digit of D1
00006C8E  E849                   11708          LSR.W   #4, D1      
00006C90                         11709m         ConvertHtoA D1      ; Convert D1 to a character
00006C90  0C01 0009              11710m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006C94  6E00 000A              11711m         BGT     ALPHA_939
00006C98  0601 0030              11712m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006C9C  6000 0006              11713m         BRA     DONE_939
00006CA0  0601 0037              11714m ALPHA_939: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006CA4  4E71                   11715m DONE_939: NOP
00006CA6                         11716m         ENDM
00006CA6  4E4F                   11717          TRAP    #15         ; Execute output
00006CA8                         11718          
00006CA8  3212                   11719          MOVE.W  (A2), D1    ; Move A2 into D1
00006CAA  E149                   11720          LSL.W   #8, D1      ; Remove the first 8 bits (2 digits) of D1
00006CAC  E949                   11721          LSL.W   #4, D1      ; Remove the first 4 bits (1 more digit) of D1
00006CAE  E049                   11722          LSR.W   #8, D1      ; Get the first hex digit of D1
00006CB0  E849                   11723          LSR.W   #4, D1      
00006CB2                         11724m         ConvertHtoA D1      ; Convert D1 to a character
00006CB2  0C01 0009              11725m         CMPI.B  #9, D1      ; IF GREATER THAN 9, THIS IS AN ALPHANUMERIC CHAR
00006CB6  6E00 000A              11726m         BGT     ALPHA_940
00006CBA  0601 0030              11727m         ADDI.B  #$30, D1    ; ADD 30 TO CONVERT DIGIT TO ASCII CHAR
00006CBE  6000 0006              11728m         BRA     DONE_940
00006CC2  0601 0037              11729m ALPHA_940: ADDI.B #$37, D1    ; AADD 37 TO CONVERT A-F TO ASCII CHAR
00006CC6  4E71                   11730m DONE_940: NOP
00006CC8                         11731m         ENDM
00006CC8  4E4F                   11732          TRAP    #15         ; Execute output
00006CCA  4E75                   11733          RTS
00006CCC                         11734  
00006CCC                         11735  
00006CCC                         11736  
00006CCC                         11737  
00006CCC                         11738  
00006CCC                         11739  ; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00006CCC                         11740                              ; End of Code
00006CCC                         11741          END    main         ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADRABSOLUTEDST_161  235C
ADRABSOLUTEDST_225  2930
ADRABSOLUTEDST_25   162E
ADRABSOLUTEDST_297  3068
ADRABSOLUTEDST_361  363C
ADRABSOLUTEDST_428  3C78
ADRABSOLUTEDST_495  42B4
ADRABSOLUTEDST_562  48FA
ADRABSOLUTEDST_634  5032
ADRABSOLUTEDST_698  5606
ADRABSOLUTEDST_766  5C7E
ADRABSOLUTEDST_868  67FE
ADRABSOLUTEDST_90   1C08
ADRABSOLUTEL_161    25C6
ADRABSOLUTEL_225    2B9A
ADRABSOLUTEL_25     1898
ADRABSOLUTEL_297    32D2
ADRABSOLUTEL_361    38A6
ADRABSOLUTEL_428    3EE2
ADRABSOLUTEL_495    451E
ADRABSOLUTEL_562    4B64
ADRABSOLUTEL_634    529C
ADRABSOLUTEL_698    5870
ADRABSOLUTEL_766    5EE8
ADRABSOLUTEL_868    6A68
ADRABSOLUTEL_90     1E72
ADRABSOLUTEW_161    2534
ADRABSOLUTEW_225    2B08
ADRABSOLUTEW_25     1806
ADRABSOLUTEW_297    3240
ADRABSOLUTEW_361    3814
ADRABSOLUTEW_428    3E50
ADRABSOLUTEW_495    448C
ADRABSOLUTEW_562    4AD2
ADRABSOLUTEW_634    520A
ADRABSOLUTEW_698    57DE
ADRABSOLUTEW_766    5E56
ADRABSOLUTEW_868    69D6
ADRABSOLUTEW_90     1DE0
ADRABSOLUTE_161     233E
ADRABSOLUTE_225     2912
ADRABSOLUTE_25      1610
ADRABSOLUTE_297     304A
ADRABSOLUTE_361     361E
ADRABSOLUTE_428     3C5A
ADRABSOLUTE_495     4296
ADRABSOLUTE_562     48DC
ADRABSOLUTE_634     5014
ADRABSOLUTE_698     55E8
ADRABSOLUTE_766     5C60
ADRABSOLUTE_868     67E0
ADRABSOLUTE_90      1BEA
ADRDEST_160         2114
ADRDEST_224         26E8
ADRDEST_24          13E6
ADRDEST_296         2E20
ADRDEST_360         33F4
ADRDEST_427         3A30
ADRDEST_494         406C
ADRDEST_561         46B2
ADRDEST_633         4DEA
ADRDEST_697         53BE
ADRDEST_765         5A36
ADRDEST_867         65B6
ADRDEST_89          19C0
ADRIMMEDIATEL_161   2416
ADRIMMEDIATEL_225   29EA
ADRIMMEDIATEL_25    16E8
ADRIMMEDIATEL_297   3122
ADRIMMEDIATEL_361   36F6
ADRIMMEDIATEL_428   3D32
ADRIMMEDIATEL_495   436E
ADRIMMEDIATEL_562   49B4
ADRIMMEDIATEL_634   50EC
ADRIMMEDIATEL_698   56C0
ADRIMMEDIATEL_766   5D38
ADRIMMEDIATEL_868   68B8
ADRIMMEDIATEL_90    1CC2
ADRIMMEDIATEW_161   237A
ADRIMMEDIATEW_225   294E
ADRIMMEDIATEW_25    164C
ADRIMMEDIATEW_297   3086
ADRIMMEDIATEW_361   365A
ADRIMMEDIATEW_428   3C96
ADRIMMEDIATEW_495   42D2
ADRIMMEDIATEW_562   4918
ADRIMMEDIATEW_634   5050
ADRIMMEDIATEW_698   5624
ADRIMMEDIATEW_766   5C9C
ADRIMMEDIATEW_868   681C
ADRIMMEDIATEW_90    1C26
ADRIMMEDIATE_161    2372
ADRIMMEDIATE_225    2946
ADRIMMEDIATE_25     1644
ADRIMMEDIATE_297    307E
ADRIMMEDIATE_361    3652
ADRIMMEDIATE_428    3C8E
ADRIMMEDIATE_495    42CA
ADRIMMEDIATE_562    4910
ADRIMMEDIATE_634    5048
ADRIMMEDIATE_698    561C
ADRIMMEDIATE_766    5C94
ADRIMMEDIATE_868    6814
ADRIMMEDIATE_90     1C1E
ADROUT              580
ADRREGDIRECTDEST_161  219E
ADRREGDIRECTDEST_225  2772
ADRREGDIRECTDEST_25  1470
ADRREGDIRECTDEST_297  2EAA
ADRREGDIRECTDEST_361  347E
ADRREGDIRECTDEST_428  3ABA
ADRREGDIRECTDEST_495  40F6
ADRREGDIRECTDEST_562  473C
ADRREGDIRECTDEST_634  4E74
ADRREGDIRECTDEST_698  5448
ADRREGDIRECTDEST_766  5AC0
ADRREGDIRECTDEST_868  6640
ADRREGDIRECTDEST_90  1A4A
ADRREGDIRECTSRC_161  21BA
ADRREGDIRECTSRC_225  278E
ADRREGDIRECTSRC_25  148C
ADRREGDIRECTSRC_297  2EC6
ADRREGDIRECTSRC_361  349A
ADRREGDIRECTSRC_428  3AD6
ADRREGDIRECTSRC_495  4112
ADRREGDIRECTSRC_562  4758
ADRREGDIRECTSRC_634  4E90
ADRREGDIRECTSRC_698  5464
ADRREGDIRECTSRC_766  5ADC
ADRREGDIRECTSRC_868  665C
ADRREGDIRECTSRC_90  1A66
ADRREGDIRECT_161    2196
ADRREGDIRECT_225    276A
ADRREGDIRECT_25     1468
ADRREGDIRECT_297    2EA2
ADRREGDIRECT_361    3476
ADRREGDIRECT_428    3AB2
ADRREGDIRECT_495    40EE
ADRREGDIRECT_562    4734
ADRREGDIRECT_634    4E6C
ADRREGDIRECT_698    5440
ADRREGDIRECT_766    5AB8
ADRREGDIRECT_868    6638
ADRREGDIRECT_90     1A42
ADRREGINDIRECTDEST_161  21E0
ADRREGINDIRECTDEST_225  27B4
ADRREGINDIRECTDEST_25  14B2
ADRREGINDIRECTDEST_297  2EEC
ADRREGINDIRECTDEST_361  34C0
ADRREGINDIRECTDEST_428  3AFC
ADRREGINDIRECTDEST_495  4138
ADRREGINDIRECTDEST_562  477E
ADRREGINDIRECTDEST_634  4EB6
ADRREGINDIRECTDEST_698  548A
ADRREGINDIRECTDEST_766  5B02
ADRREGINDIRECTDEST_868  6682
ADRREGINDIRECTDEST_90  1A8C
ADRREGINDIRECTSRC_161  2210
ADRREGINDIRECTSRC_225  27E4
ADRREGINDIRECTSRC_25  14E2
ADRREGINDIRECTSRC_297  2F1C
ADRREGINDIRECTSRC_361  34F0
ADRREGINDIRECTSRC_428  3B2C
ADRREGINDIRECTSRC_495  4168
ADRREGINDIRECTSRC_562  47AE
ADRREGINDIRECTSRC_634  4EE6
ADRREGINDIRECTSRC_698  54BA
ADRREGINDIRECTSRC_766  5B32
ADRREGINDIRECTSRC_868  66B2
ADRREGINDIRECTSRC_90  1ABC
ADRREGINDIRECT_161  21D8
ADRREGINDIRECT_225  27AC
ADRREGINDIRECT_25   14AA
ADRREGINDIRECT_297  2EE4
ADRREGINDIRECT_361  34B8
ADRREGINDIRECT_428  3AF4
ADRREGINDIRECT_495  4130
ADRREGINDIRECT_562  4776
ADRREGINDIRECT_634  4EAE
ADRREGINDIRECT_698  5482
ADRREGINDIRECT_766  5AFA
ADRREGINDIRECT_868  667A
ADRREGINDIRECT_90   1A84
ADRREGPOSTINCDEST_161  224A
ADRREGPOSTINCDEST_225  281E
ADRREGPOSTINCDEST_25  151C
ADRREGPOSTINCDEST_297  2F56
ADRREGPOSTINCDEST_361  352A
ADRREGPOSTINCDEST_428  3B66
ADRREGPOSTINCDEST_495  41A2
ADRREGPOSTINCDEST_562  47E8
ADRREGPOSTINCDEST_634  4F20
ADRREGPOSTINCDEST_698  54F4
ADRREGPOSTINCDEST_766  5B6C
ADRREGPOSTINCDEST_868  66EC
ADRREGPOSTINCDEST_90  1AF6
ADRREGPOSTINCSRC_161  2284
ADRREGPOSTINCSRC_225  2858
ADRREGPOSTINCSRC_25  1556
ADRREGPOSTINCSRC_297  2F90
ADRREGPOSTINCSRC_361  3564
ADRREGPOSTINCSRC_428  3BA0
ADRREGPOSTINCSRC_495  41DC
ADRREGPOSTINCSRC_562  4822
ADRREGPOSTINCSRC_634  4F5A
ADRREGPOSTINCSRC_698  552E
ADRREGPOSTINCSRC_766  5BA6
ADRREGPOSTINCSRC_868  6726
ADRREGPOSTINCSRC_90  1B30
ADRREGPOSTINC_161   2242
ADRREGPOSTINC_225   2816
ADRREGPOSTINC_25    1514
ADRREGPOSTINC_297   2F4E
ADRREGPOSTINC_361   3522
ADRREGPOSTINC_428   3B5E
ADRREGPOSTINC_495   419A
ADRREGPOSTINC_562   47E0
ADRREGPOSTINC_634   4F18
ADRREGPOSTINC_698   54EC
ADRREGPOSTINC_766   5B64
ADRREGPOSTINC_868   66E4
ADRREGPOSTINC_90    1AEE
ADRREGPREDECDEST_161  22C8
ADRREGPREDECDEST_225  289C
ADRREGPREDECDEST_25  159A
ADRREGPREDECDEST_297  2FD4
ADRREGPREDECDEST_361  35A8
ADRREGPREDECDEST_428  3BE4
ADRREGPREDECDEST_495  4220
ADRREGPREDECDEST_562  4866
ADRREGPREDECDEST_634  4F9E
ADRREGPREDECDEST_698  5572
ADRREGPREDECDEST_766  5BEA
ADRREGPREDECDEST_868  676A
ADRREGPREDECDEST_90  1B74
ADRREGPREDECSRC_161  2302
ADRREGPREDECSRC_225  28D6
ADRREGPREDECSRC_25  15D4
ADRREGPREDECSRC_297  300E
ADRREGPREDECSRC_361  35E2
ADRREGPREDECSRC_428  3C1E
ADRREGPREDECSRC_495  425A
ADRREGPREDECSRC_562  48A0
ADRREGPREDECSRC_634  4FD8
ADRREGPREDECSRC_698  55AC
ADRREGPREDECSRC_766  5C24
ADRREGPREDECSRC_868  67A4
ADRREGPREDECSRC_90  1BAE
ADRREGPREDEC_161    22C0
ADRREGPREDEC_225    2894
ADRREGPREDEC_25     1592
ADRREGPREDEC_297    2FCC
ADRREGPREDEC_361    35A0
ADRREGPREDEC_428    3BDC
ADRREGPREDEC_495    4218
ADRREGPREDEC_562    485E
ADRREGPREDEC_634    4F96
ADRREGPREDEC_698    556A
ADRREGPREDEC_766    5BE2
ADRREGPREDEC_868    6762
ADRREGPREDEC_90     1B6C
ADRSOURCE_160       211E
ADRSOURCE_224       26F2
ADRSOURCE_24        13F0
ADRSOURCE_296       2E2A
ADRSOURCE_360       33FE
ADRSOURCE_427       3A3A
ADRSOURCE_494       4076
ADRSOURCE_561       46BC
ADRSOURCE_633       4DF4
ADRSOURCE_697       53C8
ADRSOURCE_765       5A40
ADRSOURCE_867       65C0
ADRSOURCE_89        19CA
ALPHA_10            10FA
ALPHA_11            111A
ALPHA_120           1C52
ALPHA_121           1C72
ALPHA_122           1C92
ALPHA_123           1CB4
ALPHA_127           1CEE
ALPHA_128           1D0E
ALPHA_129           1D2E
ALPHA_130           1D50
ALPHA_132           1D70
ALPHA_133           1D90
ALPHA_134           1DB0
ALPHA_135           1DD2
ALPHA_138           1E02
ALPHA_139           1E22
ALPHA_140           1E42
ALPHA_141           1E64
ALPHA_144           1E94
ALPHA_145           1EB4
ALPHA_146           1ED4
ALPHA_147           1EF6
ALPHA_149           1F16
ALPHA_15            1160
ALPHA_150           1F36
ALPHA_151           1F56
ALPHA_152           1F78
ALPHA_16            1184
ALPHA_17            11A8
ALPHA_18            11CE
ALPHA_191           23A6
ALPHA_192           23C6
ALPHA_193           23E6
ALPHA_194           2408
ALPHA_198           2442
ALPHA_199           2462
ALPHA_2             1020
ALPHA_200           2482
ALPHA_201           24A4
ALPHA_203           24C4
ALPHA_204           24E4
ALPHA_205           2504
ALPHA_206           2526
ALPHA_209           2556
ALPHA_210           2576
ALPHA_211           2596
ALPHA_212           25B8
ALPHA_215           25E8
ALPHA_216           2608
ALPHA_217           2628
ALPHA_218           264A
ALPHA_220           266A
ALPHA_221           268A
ALPHA_222           26AA
ALPHA_223           26CC
ALPHA_255           297A
ALPHA_256           299A
ALPHA_257           29BA
ALPHA_258           29DC
ALPHA_262           2A16
ALPHA_263           2A36
ALPHA_264           2A56
ALPHA_265           2A78
ALPHA_267           2A98
ALPHA_268           2AB8
ALPHA_269           2AD8
ALPHA_270           2AFA
ALPHA_273           2B2A
ALPHA_274           2B4A
ALPHA_275           2B6A
ALPHA_276           2B8C
ALPHA_279           2BBC
ALPHA_280           2BDC
ALPHA_281           2BFC
ALPHA_282           2C1E
ALPHA_284           2C3E
ALPHA_285           2C5E
ALPHA_286           2C7E
ALPHA_287           2CA0
ALPHA_3             1042
ALPHA_327           30B2
ALPHA_328           30D2
ALPHA_329           30F2
ALPHA_330           3114
ALPHA_334           314E
ALPHA_335           316E
ALPHA_336           318E
ALPHA_337           31B0
ALPHA_339           31D0
ALPHA_340           31F0
ALPHA_341           3210
ALPHA_342           3232
ALPHA_345           3262
ALPHA_346           3282
ALPHA_347           32A2
ALPHA_348           32C4
ALPHA_351           32F4
ALPHA_352           3314
ALPHA_353           3334
ALPHA_354           3356
ALPHA_356           3376
ALPHA_357           3396
ALPHA_358           33B6
ALPHA_359           33D8
ALPHA_391           3686
ALPHA_392           36A6
ALPHA_393           36C6
ALPHA_394           36E8
ALPHA_398           3722
ALPHA_399           3742
ALPHA_4             1062
ALPHA_400           3762
ALPHA_401           3784
ALPHA_403           37A4
ALPHA_404           37C4
ALPHA_405           37E4
ALPHA_406           3806
ALPHA_409           3836
ALPHA_410           3856
ALPHA_411           3876
ALPHA_412           3898
ALPHA_415           38C8
ALPHA_416           38E8
ALPHA_417           3908
ALPHA_418           392A
ALPHA_420           394A
ALPHA_421           396A
ALPHA_422           398A
ALPHA_423           39AC
ALPHA_458           3CC2
ALPHA_459           3CE2
ALPHA_460           3D02
ALPHA_461           3D24
ALPHA_465           3D5E
ALPHA_466           3D7E
ALPHA_467           3D9E
ALPHA_468           3DC0
ALPHA_470           3DE0
ALPHA_471           3E00
ALPHA_472           3E20
ALPHA_473           3E42
ALPHA_476           3E72
ALPHA_477           3E92
ALPHA_478           3EB2
ALPHA_479           3ED4
ALPHA_482           3F04
ALPHA_483           3F24
ALPHA_484           3F44
ALPHA_485           3F66
ALPHA_487           3F86
ALPHA_488           3FA6
ALPHA_489           3FC6
ALPHA_490           3FE8
ALPHA_5             1082
ALPHA_525           42FE
ALPHA_526           431E
ALPHA_527           433E
ALPHA_528           4360
ALPHA_532           439A
ALPHA_533           43BA
ALPHA_534           43DA
ALPHA_535           43FC
ALPHA_537           441C
ALPHA_538           443C
ALPHA_539           445C
ALPHA_540           447E
ALPHA_543           44AE
ALPHA_544           44CE
ALPHA_545           44EE
ALPHA_546           4510
ALPHA_549           4540
ALPHA_55            1678
ALPHA_550           4560
ALPHA_551           4580
ALPHA_552           45A2
ALPHA_554           45C2
ALPHA_555           45E2
ALPHA_556           4602
ALPHA_557           4624
ALPHA_56            1698
ALPHA_57            16B8
ALPHA_58            16DA
ALPHA_592           4944
ALPHA_593           4964
ALPHA_594           4984
ALPHA_595           49A6
ALPHA_599           49E0
ALPHA_600           4A00
ALPHA_601           4A20
ALPHA_602           4A42
ALPHA_604           4A62
ALPHA_605           4A82
ALPHA_606           4AA2
ALPHA_607           4AC4
ALPHA_610           4AF4
ALPHA_611           4B14
ALPHA_612           4B34
ALPHA_613           4B56
ALPHA_616           4B86
ALPHA_617           4BA6
ALPHA_618           4BC6
ALPHA_619           4BE8
ALPHA_62            1714
ALPHA_621           4C08
ALPHA_622           4C28
ALPHA_623           4C48
ALPHA_624           4C6A
ALPHA_63            1734
ALPHA_64            1754
ALPHA_65            1776
ALPHA_664           507C
ALPHA_665           509C
ALPHA_666           50BC
ALPHA_667           50DE
ALPHA_67            1796
ALPHA_671           5118
ALPHA_672           5138
ALPHA_673           5158
ALPHA_674           517A
ALPHA_676           519A
ALPHA_677           51BA
ALPHA_678           51DA
ALPHA_679           51FC
ALPHA_68            17B6
ALPHA_682           522C
ALPHA_683           524C
ALPHA_684           526C
ALPHA_685           528E
ALPHA_688           52BE
ALPHA_689           52DE
ALPHA_69            17D6
ALPHA_690           52FE
ALPHA_691           5320
ALPHA_693           5340
ALPHA_694           5360
ALPHA_695           5380
ALPHA_696           53A2
ALPHA_70            17F8
ALPHA_728           5650
ALPHA_729           5670
ALPHA_73            1828
ALPHA_730           5690
ALPHA_731           56B2
ALPHA_735           56EC
ALPHA_736           570C
ALPHA_737           572C
ALPHA_738           574E
ALPHA_74            1848
ALPHA_740           576E
ALPHA_741           578E
ALPHA_742           57AE
ALPHA_743           57D0
ALPHA_746           5800
ALPHA_747           5820
ALPHA_748           5840
ALPHA_749           5862
ALPHA_75            1868
ALPHA_752           5892
ALPHA_753           58B2
ALPHA_754           58D2
ALPHA_755           58F4
ALPHA_757           5914
ALPHA_758           5934
ALPHA_759           5954
ALPHA_76            188A
ALPHA_760           5976
ALPHA_79            18BA
ALPHA_796           5CC8
ALPHA_797           5CE8
ALPHA_798           5D08
ALPHA_799           5D2A
ALPHA_8             10B8
ALPHA_80            18DA
ALPHA_803           5D64
ALPHA_804           5D84
ALPHA_805           5DA4
ALPHA_806           5DC6
ALPHA_808           5DE6
ALPHA_809           5E06
ALPHA_81            18FA
ALPHA_810           5E26
ALPHA_811           5E48
ALPHA_814           5E78
ALPHA_815           5E98
ALPHA_816           5EB8
ALPHA_817           5EDA
ALPHA_82            191C
ALPHA_820           5F0A
ALPHA_821           5F2A
ALPHA_822           5F4A
ALPHA_823           5F6C
ALPHA_825           5F8C
ALPHA_826           5FAC
ALPHA_827           5FCC
ALPHA_828           5FEE
ALPHA_84            193C
ALPHA_85            195C
ALPHA_855           644E
ALPHA_86            197C
ALPHA_860           64CC
ALPHA_865           654A
ALPHA_87            199E
ALPHA_898           6848
ALPHA_899           6868
ALPHA_9             10DA
ALPHA_900           6888
ALPHA_901           68AA
ALPHA_905           68E4
ALPHA_906           6904
ALPHA_907           6924
ALPHA_908           6946
ALPHA_910           6966
ALPHA_911           6986
ALPHA_912           69A6
ALPHA_913           69C8
ALPHA_916           69F8
ALPHA_917           6A18
ALPHA_918           6A38
ALPHA_919           6A5A
ALPHA_922           6A8A
ALPHA_923           6AAA
ALPHA_924           6ACA
ALPHA_925           6AEC
ALPHA_927           6B0C
ALPHA_928           6B2C
ALPHA_929           6B4C
ALPHA_930           6B6E
ALPHA_936           6C32
ALPHA_937           6C60
ALPHA_938           6C80
ALPHA_939           6CA0
ALPHA_940           6CC2
AREG_M              6248
AREG_R              6322
ARIREG              1308
ARISHIFT            12FC
ASL_M               6230
ASL_R               630A
ASR_M               623E
ASR_R               6318
CHECKFOR0_153       1FA2
CHECKFOR0_154       1FE0
CHECKFOR0_21        132A
CHECKFOR0_22        1372
CHECKFOR0_290       2CEC
CHECKFOR0_426       39F8
CHECKFOR0_493       4034
CHECKFOR0_560       4670
CHECKFOR0_627       4CB6
CHECKFOR0_763       59C2
CHECKFOR0_829       6018
CHECKFOR0_834       60F2
CHECKFOR0_839       61CC
CHECKFOR0_840       620A
CHECKFOR0_845       62E4
CHECKFOR0_850       63BE
CHECKFOR0_851       63FC
CHECKFOR0_856       647A
CHECKFOR0_861       64F8
CHECKFOR0_866       6576
CHECKFOR0_931       6B98
CHECKFOR0_932       6BE0
CHECKFOR1_153       1FAC
CHECKFOR1_154       1FEA
CHECKFOR1_21        1334
CHECKFOR1_22        137C
CHECKFOR1_290       2CF6
CHECKFOR1_426       3A02
CHECKFOR1_493       403E
CHECKFOR1_560       467A
CHECKFOR1_627       4CC0
CHECKFOR1_763       59CC
CHECKFOR1_829       6022
CHECKFOR1_834       60FC
CHECKFOR1_839       61D6
CHECKFOR1_840       6214
CHECKFOR1_845       62EE
CHECKFOR1_850       63C8
CHECKFOR1_851       6406
CHECKFOR1_856       6484
CHECKFOR1_861       6502
CHECKFOR1_866       6580
CHECKFOR1_931       6BA2
CHECKFOR1_932       6BEA
CHECKFORB_23        139E
CHECKFORB_764       59EE
CHECKFORB_830       605A
CHECKFORB_835       6134
CHECKFORB_841       624C
CHECKFORB_846       6326
CHECKFORDESTDN_155  2012
CHECKFORDESTDN_291  2D1E
CHECKFORDESTDN_628  4CE8
CHECKFORL_23        13CA
CHECKFORL_764       5A1A
CHECKFORL_830       6086
CHECKFORL_835       6160
CHECKFORL_841       6278
CHECKFORL_846       6352
CHECKFORSRCDN_155   2062
CHECKFORSRCDN_291   2D6E
CHECKFORSRCDN_628   4D38
CHECKFORW_23        13B4
CHECKFORW_764       5A0C
CHECKFORW_830       6078
CHECKFORW_835       6152
CHECKFORW_841       626A
CHECKFORW_846       6344
COMPLETE_153        1FC0
COMPLETE_154        1FFE
COMPLETE_155        20F4
COMPLETE_160        2126
COMPLETE_161        26D6
COMPLETE_21         1348
COMPLETE_22         1390
COMPLETE_224        26FA
COMPLETE_225        2CAA
COMPLETE_23         13D8
COMPLETE_24         13F8
COMPLETE_25         19A8
COMPLETE_290        2D0A
COMPLETE_291        2E00
COMPLETE_296        2E32
COMPLETE_297        33E2
COMPLETE_360        3406
COMPLETE_361        39B6
COMPLETE_426        3A16
COMPLETE_427        3A42
COMPLETE_428        3FF2
COMPLETE_493        4052
COMPLETE_494        407E
COMPLETE_495        462E
COMPLETE_560        468E
COMPLETE_561        46C4
COMPLETE_562        4C74
COMPLETE_627        4CD4
COMPLETE_628        4DCA
COMPLETE_633        4DFC
COMPLETE_634        53AC
COMPLETE_697        53D0
COMPLETE_698        5980
COMPLETE_763        59E0
COMPLETE_764        5A28
COMPLETE_765        5A48
COMPLETE_766        5FF8
COMPLETE_829        6036
COMPLETE_830        6094
COMPLETE_834        6110
COMPLETE_835        616E
COMPLETE_839        61EA
COMPLETE_840        6228
COMPLETE_841        6286
COMPLETE_845        6302
COMPLETE_846        6360
COMPLETE_850        63DC
COMPLETE_851        641A
COMPLETE_856        6498
COMPLETE_861        6516
COMPLETE_866        6594
COMPLETE_867        65C8
COMPLETE_868        6B78
COMPLETE_89         19D2
COMPLETE_90         1F82
COMPLETE_931        6BB6
COMPLETE_932        6BFE
CONVERTATOH         0
CONVERTHTOA         45C
DATAREGDIRECTDEST_161  215A
DATAREGDIRECTDEST_225  272E
DATAREGDIRECTDEST_25  142C
DATAREGDIRECTDEST_297  2E66
DATAREGDIRECTDEST_361  343A
DATAREGDIRECTDEST_428  3A76
DATAREGDIRECTDEST_495  40B2
DATAREGDIRECTDEST_562  46F8
DATAREGDIRECTDEST_634  4E30
DATAREGDIRECTDEST_698  5404
DATAREGDIRECTDEST_766  5A7C
DATAREGDIRECTDEST_868  65FC
DATAREGDIRECTDEST_90  1A06
DATAREGDIRECTSRC_161  2176
DATAREGDIRECTSRC_225  274A
DATAREGDIRECTSRC_25  1448
DATAREGDIRECTSRC_297  2E82
DATAREGDIRECTSRC_361  3456
DATAREGDIRECTSRC_428  3A92
DATAREGDIRECTSRC_495  40CE
DATAREGDIRECTSRC_562  4714
DATAREGDIRECTSRC_634  4E4C
DATAREGDIRECTSRC_698  5420
DATAREGDIRECTSRC_766  5A98
DATAREGDIRECTSRC_868  6618
DATAREGDIRECTSRC_90  1A22
DATAREGDIRECT_161   2152
DATAREGDIRECT_225   2726
DATAREGDIRECT_25    1424
DATAREGDIRECT_297   2E5E
DATAREGDIRECT_361   3432
DATAREGDIRECT_428   3A6E
DATAREGDIRECT_495   40AA
DATAREGDIRECT_562   46F0
DATAREGDIRECT_634   4E28
DATAREGDIRECT_698   53FC
DATAREGDIRECT_766   5A74
DATAREGDIRECT_868   65F4
DATAREGDIRECT_90    19FE
DECODEADD           1FC2
DECODEADDCOMP       2CCC
DECODEADDDESTOP     26DA
DECODEADRMODE       1EF8
DECODEAND           4C98
DECODEANDCOMP       59A2
DECODEANDDESTOP     53B0
DECODEASX_M         61EC
DECODEASX_R         62C6
DECODEASX_S         63A0
DECODEBEQ           63DE
DECODEBGE           645C
DECODEBLT           64DA
DECODEBRA           6BC2
DECODEDIVU          4016
DECODEJSR           6558
DECODELEA           4652
DECODELSX_M         5FFA
DECODELSX_R         60D4
DECODELSX_S         61AE
DECODEMOVE          1354
DECODEMOVEM         1F84
DECODEMULS          39DA
DECODENOP           130C
DECODENOT           59A4
DECODERTS           6B7A
DECODESUB           2CCE
DECODESUBCOMP       39D8
DECODESUBDESTOP     33E6
DESTDNB_155         2054
DESTDNB_291         2D60
DESTDNB_628         4D2A
DESTDNL_155         2028
DESTDNL_291         2D34
DESTDNL_628         4CFE
DESTDNW_155         203A
DESTDNW_291         2D46
DESTDNW_628         4D10
DONE_10             10FE
DONE_11             111E
DONE_120            1C56
DONE_121            1C76
DONE_122            1C96
DONE_123            1CB8
DONE_127            1CF2
DONE_128            1D12
DONE_129            1D32
DONE_130            1D54
DONE_132            1D74
DONE_133            1D94
DONE_134            1DB4
DONE_135            1DD6
DONE_138            1E06
DONE_139            1E26
DONE_140            1E46
DONE_141            1E68
DONE_144            1E98
DONE_145            1EB8
DONE_146            1ED8
DONE_147            1EFA
DONE_149            1F1A
DONE_15             1164
DONE_150            1F3A
DONE_151            1F5A
DONE_152            1F7C
DONE_16             1188
DONE_17             11AC
DONE_18             11D2
DONE_191            23AA
DONE_192            23CA
DONE_193            23EA
DONE_194            240C
DONE_198            2446
DONE_199            2466
DONE_2              1024
DONE_200            2486
DONE_201            24A8
DONE_203            24C8
DONE_204            24E8
DONE_205            2508
DONE_206            252A
DONE_209            255A
DONE_210            257A
DONE_211            259A
DONE_212            25BC
DONE_215            25EC
DONE_216            260C
DONE_217            262C
DONE_218            264E
DONE_220            266E
DONE_221            268E
DONE_222            26AE
DONE_223            26D0
DONE_255            297E
DONE_256            299E
DONE_257            29BE
DONE_258            29E0
DONE_262            2A1A
DONE_263            2A3A
DONE_264            2A5A
DONE_265            2A7C
DONE_267            2A9C
DONE_268            2ABC
DONE_269            2ADC
DONE_270            2AFE
DONE_273            2B2E
DONE_274            2B4E
DONE_275            2B6E
DONE_276            2B90
DONE_279            2BC0
DONE_280            2BE0
DONE_281            2C00
DONE_282            2C22
DONE_284            2C42
DONE_285            2C62
DONE_286            2C82
DONE_287            2CA4
DONE_3              1046
DONE_327            30B6
DONE_328            30D6
DONE_329            30F6
DONE_330            3118
DONE_334            3152
DONE_335            3172
DONE_336            3192
DONE_337            31B4
DONE_339            31D4
DONE_340            31F4
DONE_341            3214
DONE_342            3236
DONE_345            3266
DONE_346            3286
DONE_347            32A6
DONE_348            32C8
DONE_351            32F8
DONE_352            3318
DONE_353            3338
DONE_354            335A
DONE_356            337A
DONE_357            339A
DONE_358            33BA
DONE_359            33DC
DONE_391            368A
DONE_392            36AA
DONE_393            36CA
DONE_394            36EC
DONE_398            3726
DONE_399            3746
DONE_4              1066
DONE_400            3766
DONE_401            3788
DONE_403            37A8
DONE_404            37C8
DONE_405            37E8
DONE_406            380A
DONE_409            383A
DONE_410            385A
DONE_411            387A
DONE_412            389C
DONE_415            38CC
DONE_416            38EC
DONE_417            390C
DONE_418            392E
DONE_420            394E
DONE_421            396E
DONE_422            398E
DONE_423            39B0
DONE_458            3CC6
DONE_459            3CE6
DONE_460            3D06
DONE_461            3D28
DONE_465            3D62
DONE_466            3D82
DONE_467            3DA2
DONE_468            3DC4
DONE_470            3DE4
DONE_471            3E04
DONE_472            3E24
DONE_473            3E46
DONE_476            3E76
DONE_477            3E96
DONE_478            3EB6
DONE_479            3ED8
DONE_482            3F08
DONE_483            3F28
DONE_484            3F48
DONE_485            3F6A
DONE_487            3F8A
DONE_488            3FAA
DONE_489            3FCA
DONE_490            3FEC
DONE_5              1086
DONE_525            4302
DONE_526            4322
DONE_527            4342
DONE_528            4364
DONE_532            439E
DONE_533            43BE
DONE_534            43DE
DONE_535            4400
DONE_537            4420
DONE_538            4440
DONE_539            4460
DONE_540            4482
DONE_543            44B2
DONE_544            44D2
DONE_545            44F2
DONE_546            4514
DONE_549            4544
DONE_55             167C
DONE_550            4564
DONE_551            4584
DONE_552            45A6
DONE_554            45C6
DONE_555            45E6
DONE_556            4606
DONE_557            4628
DONE_56             169C
DONE_57             16BC
DONE_58             16DE
DONE_592            4948
DONE_593            4968
DONE_594            4988
DONE_595            49AA
DONE_599            49E4
DONE_600            4A04
DONE_601            4A24
DONE_602            4A46
DONE_604            4A66
DONE_605            4A86
DONE_606            4AA6
DONE_607            4AC8
DONE_610            4AF8
DONE_611            4B18
DONE_612            4B38
DONE_613            4B5A
DONE_616            4B8A
DONE_617            4BAA
DONE_618            4BCA
DONE_619            4BEC
DONE_62             1718
DONE_621            4C0C
DONE_622            4C2C
DONE_623            4C4C
DONE_624            4C6E
DONE_63             1738
DONE_64             1758
DONE_65             177A
DONE_664            5080
DONE_665            50A0
DONE_666            50C0
DONE_667            50E2
DONE_67             179A
DONE_671            511C
DONE_672            513C
DONE_673            515C
DONE_674            517E
DONE_676            519E
DONE_677            51BE
DONE_678            51DE
DONE_679            5200
DONE_68             17BA
DONE_682            5230
DONE_683            5250
DONE_684            5270
DONE_685            5292
DONE_688            52C2
DONE_689            52E2
DONE_69             17DA
DONE_690            5302
DONE_691            5324
DONE_693            5344
DONE_694            5364
DONE_695            5384
DONE_696            53A6
DONE_70             17FC
DONE_728            5654
DONE_729            5674
DONE_73             182C
DONE_730            5694
DONE_731            56B6
DONE_735            56F0
DONE_736            5710
DONE_737            5730
DONE_738            5752
DONE_74             184C
DONE_740            5772
DONE_741            5792
DONE_742            57B2
DONE_743            57D4
DONE_746            5804
DONE_747            5824
DONE_748            5844
DONE_749            5866
DONE_75             186C
DONE_752            5896
DONE_753            58B6
DONE_754            58D6
DONE_755            58F8
DONE_757            5918
DONE_758            5938
DONE_759            5958
DONE_76             188E
DONE_760            597A
DONE_79             18BE
DONE_796            5CCC
DONE_797            5CEC
DONE_798            5D0C
DONE_799            5D2E
DONE_8              10BC
DONE_80             18DE
DONE_803            5D68
DONE_804            5D88
DONE_805            5DA8
DONE_806            5DCA
DONE_808            5DEA
DONE_809            5E0A
DONE_81             18FE
DONE_810            5E2A
DONE_811            5E4C
DONE_814            5E7C
DONE_815            5E9C
DONE_816            5EBC
DONE_817            5EDE
DONE_82             1920
DONE_820            5F0E
DONE_821            5F2E
DONE_822            5F4E
DONE_823            5F70
DONE_825            5F90
DONE_826            5FB0
DONE_827            5FD0
DONE_828            5FF2
DONE_84             1940
DONE_85             1960
DONE_855            6452
DONE_86             1980
DONE_860            64D0
DONE_865            654E
DONE_87             19A2
DONE_898            684C
DONE_899            686C
DONE_9              10DE
DONE_900            688C
DONE_901            68AE
DONE_905            68E8
DONE_906            6908
DONE_907            6928
DONE_908            694A
DONE_910            696A
DONE_911            698A
DONE_912            69AA
DONE_913            69CC
DONE_916            69FC
DONE_917            6A1C
DONE_918            6A3C
DONE_919            6A5E
DONE_922            6A8E
DONE_923            6AAE
DONE_924            6ACE
DONE_925            6AF0
DONE_927            6B10
DONE_928            6B30
DONE_929            6B50
DONE_930            6B72
DONE_936            6C36
DONE_937            6C64
DONE_938            6C84
DONE_939            6CA4
DONE_940            6CC6
ENDSIM              11FA
GOLOOP              113C
IDENTIFYOPCODE      11FE
LOGREG              12F0
LOOP_153            1F8E
LOOP_154            1FCC
LOOP_21             1316
LOOP_22             135E
LOOP_290            2CD8
LOOP_426            39E4
LOOP_493            4020
LOOP_560            465C
LOOP_627            4CA2
LOOP_763            59AE
LOOP_829            6004
LOOP_834            60DE
LOOP_839            61B8
LOOP_840            61F6
LOOP_845            62D0
LOOP_850            63AA
LOOP_851            63E8
LOOP_856            6466
LOOP_861            64E4
LOOP_866            6562
LOOP_931            6B84
LOOP_932            6BCC
LSL_M               603E
LSL_R               6118
LSR_M               604C
LSR_R               6126
MAIN                1000
NEWLINE             3AC2
NEXT_153            1FB2
NEXT_154            1FF0
NEXT_155            20F0
NEXT_21             133A
NEXT_22             1382
NEXT_290            2CFC
NEXT_291            2DFC
NEXT_426            3A08
NEXT_493            4044
NEXT_560            4680
NEXT_627            4CC6
NEXT_628            4DC6
NEXT_763            59D2
NEXT_829            6028
NEXT_834            6102
NEXT_839            61DC
NEXT_840            621A
NEXT_845            62F4
NEXT_850            63CE
NEXT_851            640C
NEXT_856            648A
NEXT_861            6508
NEXT_866            6586
NEXT_931            6BA8
NEXT_932            6BF0
OADD                6F
OAN                 C9
OAND                8B
OASL                9B
OASR                9F
OBEQ                A3
OBGE                A7
OBLANK              D8
OBLT                AB
OBRA                B7
OBSIZE              BB
OCOMMA              CF
ODIVU               7F
ODN                 C7
OHASH               D6
OJSR                AF
OLB                 CB
OLEA                87
OLSIZE              C3
OLSL                93
OLSR                97
OMOVE               64
OMOVEM              69
OMULS               77
ONOP                60
ONOT                8F
OPREDEC             D2
OPSTINC             D4
ORB                 CD
ORTS                B3
OSUB                73
OTAB                DA
OUTPUTDATA          6C40
OWELCOME            DE
OWSIZE              BF
PADD                129
PAND                17E
PASX_M              1D3
PASX_R              1E4
PASX_S              1F5
PBEQ                206
PBGE                217
PBLT                228
PBRA                25B
PDIVU               15C
PJSR                239
PLEA                16D
PLSX_M              1A0
PLSX_R              1B1
PLSX_S              1C2
PMOVE               107
PMOVEM              118
PMULS               14B
PNOP                F6
PNOT                18F
PREPAREADRMODE      1CEB
PRINTADR            30CE
PRINTANDEST         2EA6
PRINTANSRC          2FA5
PRINTBRANCH         15D5
PRINTCOMMA          36A0
PRINTCOUNT          2B41
PRINTDNDEST         2C56
PRINTDNSRC          2D69
PRINTHASH           394E
PRINTLB             37D4
PRINTOPMODE         1690
PRINTPD             376D
PRINTPI             3706
PRINTRB             3837
PRINTSIGN           389A
PRINTSIZE           F0E
PRINTSIZELOW        127F
PRTS                24A
PSUB                13A
READINPUT           F4
REG_M               6056
REG_R               6130
REND                31
RSTART              0
SPACE               3A02
SPLIT0              120C
SPLIT000            1218
SPLIT01             122C
SPLIT0100           1238
SPLIT0100111        1254
SPLIT0110           1268
SPLIT01100          1274
SPLIT01101          1288
SPLIT1              1294
SPLIT10             12A0
SPLIT11             12AC
SPLIT110            12B8
SPLIT111            12DC
SRCDNB_155          20CA
SRCDNB_291          2DD6
SRCDNB_628          4DA0
SRCDNL_155          206E
SRCDNL_291          2D7A
SRCDNL_628          4D44
SRCDNW_155          2098
SRCDNW_291          2DA4
SRCDNW_628          4D6E
TAB                 3A63
VERIFYOPCODE        A9B
